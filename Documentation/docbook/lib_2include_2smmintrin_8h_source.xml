<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2smmintrin_8h_source" xml:lang="en-US">
<title>smmintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/smmintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="comment">/*&#32;Implemented&#32;from&#32;the&#32;specification&#32;included&#32;in&#32;the&#32;Intel&#32;C++&#32;Compiler</emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;User&#32;Guide&#32;and&#32;Reference,&#32;version&#32;10.0.&#32;&#32;*/</emphasis>
26 
27 <emphasis role="preprocessor">#ifndef&#32;_SMMINTRIN_H_INCLUDED</emphasis>
28 <emphasis role="preprocessor">#define&#32;_SMMINTRIN_H_INCLUDED</emphasis>
29 
30 <emphasis role="comment">/*&#32;We&#32;need&#32;definitions&#32;from&#32;the&#32;SSSE3,&#32;SSE3,&#32;SSE2&#32;and&#32;SSE&#32;header</emphasis>
31 <emphasis role="comment">&#32;&#32;&#32;files.&#32;&#32;*/</emphasis>
32 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__old_2_classes_2lib_2include_2tmmintrin_8h">tmmintrin.h</link>&gt;</emphasis>
33 
34 <emphasis role="preprocessor">#ifndef&#32;__SSE4_1__</emphasis>
35 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
36 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;sse4.1&quot;)</emphasis>
37 <emphasis role="preprocessor">#define&#32;__DISABLE_SSE4_1__</emphasis>
38 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__SSE4_1__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
39 
40 <emphasis role="comment">/*&#32;Rounding&#32;mode&#32;macros.&#32;*/</emphasis>
41 <emphasis role="preprocessor">#define&#32;_MM_FROUND_TO_NEAREST_INT&#32;&#32;&#32;0x00</emphasis>
42 <emphasis role="preprocessor">#define&#32;_MM_FROUND_TO_NEG_INF&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
43 <emphasis role="preprocessor">#define&#32;_MM_FROUND_TO_POS_INF&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x02</emphasis>
44 <emphasis role="preprocessor">#define&#32;_MM_FROUND_TO_ZERO&#32;&#32;&#32;&#32;&#32;&#32;0x03</emphasis>
45 <emphasis role="preprocessor">#define&#32;_MM_FROUND_CUR_DIRECTION&#32;&#32;&#32;&#32;0x04</emphasis>
46 
47 <emphasis role="preprocessor">#define&#32;_MM_FROUND_RAISE_EXC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
48 <emphasis role="preprocessor">#define&#32;_MM_FROUND_NO_EXC&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x08</emphasis>
49 
50 <emphasis role="preprocessor">#define&#32;_MM_FROUND_NINT&#32;&#32;&#32;&#32;&#32;\</emphasis>
51 <emphasis role="preprocessor">&#32;&#32;(_MM_FROUND_TO_NEAREST_INT&#32;|&#32;_MM_FROUND_RAISE_EXC)</emphasis>
52 <emphasis role="preprocessor">#define&#32;_MM_FROUND_FLOOR&#32;&#32;&#32;&#32;\</emphasis>
53 <emphasis role="preprocessor">&#32;&#32;(_MM_FROUND_TO_NEG_INF&#32;|&#32;_MM_FROUND_RAISE_EXC)</emphasis>
54 <emphasis role="preprocessor">#define&#32;_MM_FROUND_CEIL&#32;&#32;&#32;&#32;&#32;\</emphasis>
55 <emphasis role="preprocessor">&#32;&#32;(_MM_FROUND_TO_POS_INF&#32;|&#32;_MM_FROUND_RAISE_EXC)</emphasis>
56 <emphasis role="preprocessor">#define&#32;_MM_FROUND_TRUNC&#32;&#32;&#32;&#32;\</emphasis>
57 <emphasis role="preprocessor">&#32;&#32;(_MM_FROUND_TO_ZERO&#32;|&#32;_MM_FROUND_RAISE_EXC)</emphasis>
58 <emphasis role="preprocessor">#define&#32;_MM_FROUND_RINT&#32;&#32;&#32;&#32;&#32;\</emphasis>
59 <emphasis role="preprocessor">&#32;&#32;(_MM_FROUND_CUR_DIRECTION&#32;|&#32;_MM_FROUND_RAISE_EXC)</emphasis>
60 <emphasis role="preprocessor">#define&#32;_MM_FROUND_NEARBYINT&#32;&#32;&#32;&#32;\</emphasis>
61 <emphasis role="preprocessor">&#32;&#32;(_MM_FROUND_CUR_DIRECTION&#32;|&#32;_MM_FROUND_NO_EXC)</emphasis>
62 
63 <emphasis role="comment">/*&#32;Test&#32;Instruction&#32;*/</emphasis>
64 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;128-bit&#32;bitwise&#32;comparison.&#32;Return&#32;1&#32;if</emphasis>
65 <emphasis role="comment">&#32;&#32;&#32;(__V&#32;&amp;&#32;__M)&#32;==&#32;0.&#32;&#32;*/</emphasis>
66 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
67 _mm_testz_si128&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
68 {
69 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_ptestz128&#32;((__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
70 }
71 
72 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;128-bit&#32;bitwise&#32;comparison.&#32;Return&#32;1&#32;if</emphasis>
73 <emphasis role="comment">&#32;&#32;&#32;(__V&#32;&amp;&#32;~__M)&#32;==&#32;0.&#32;&#32;*/</emphasis>
74 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
75 _mm_testc_si128&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
76 {
77 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_ptestc128&#32;((__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
78 }
79 
80 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;128-bit&#32;bitwise&#32;comparison.&#32;Return&#32;1&#32;if</emphasis>
81 <emphasis role="comment">&#32;&#32;&#32;(__V&#32;&amp;&#32;__M)&#32;!=&#32;0&#32;&amp;&amp;&#32;(__V&#32;&amp;&#32;~__M)&#32;!=&#32;0.&#32;&#32;*/</emphasis>
82 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
83 _mm_testnzc_si128&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
84 {
85 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_ptestnzc128&#32;((__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
86 }
87 
88 <emphasis role="comment">/*&#32;Macros&#32;for&#32;packed&#32;integer&#32;128-bit&#32;comparison&#32;intrinsics.&#32;&#32;*/</emphasis>
89 <emphasis role="preprocessor">#define&#32;_mm_test_all_zeros(M,&#32;V)&#32;_mm_testz_si128&#32;((M),&#32;(V))</emphasis>
90 
91 <emphasis role="preprocessor">#define&#32;_mm_test_all_ones(V)&#32;\</emphasis>
92 <emphasis role="preprocessor">&#32;&#32;_mm_testc_si128&#32;((V),&#32;_mm_cmpeq_epi32&#32;((V),&#32;(V)))</emphasis>
93 
94 <emphasis role="preprocessor">#define&#32;_mm_test_mix_ones_zeros(M,&#32;V)&#32;_mm_testnzc_si128&#32;((M),&#32;(V))</emphasis>
95 
96 <emphasis role="comment">/*&#32;Packed/scalar&#32;double&#32;precision&#32;floating&#32;point&#32;rounding.&#32;&#32;*/</emphasis>
97 
98 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
99 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
100 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a37c7e5426ef6d1cac4da15f7b211f303">_mm_round_pd</link>&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
101 {
102 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_roundpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
103 }
104 
105 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
106 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a9d85d37698334faa59dcaefe30ff1f15">_mm_round_sd</link>(__m128d&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
107 {
108 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_roundsd&#32;((__v2df)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
111 }
112 <emphasis role="preprocessor">#else</emphasis>
113 <emphasis role="preprocessor">#define&#32;_mm_round_pd(V,&#32;M)&#32;\</emphasis>
114 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_roundpd&#32;((__v2df)(__m128d)(V),&#32;(int)(M)))</emphasis>
115 
116 <emphasis role="preprocessor">#define&#32;_mm_round_sd(D,&#32;V,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
117 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_roundsd&#32;((__v2df)(__m128d)(D),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)(V),&#32;(int)(M)))</emphasis>
119 <emphasis role="preprocessor">#endif</emphasis>
120 
121 <emphasis role="comment">/*&#32;Packed/scalar&#32;single&#32;precision&#32;floating&#32;point&#32;rounding.&#32;&#32;*/</emphasis>
122 
123 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
124 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
125 <link linkend="__classes_2lib_2include_2smmintrin_8h_1ae902862ff2eb7b8de2fadd432ca7a947">_mm_round_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
126 {
127 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_roundps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
128 }
129 
130 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
131 <link linkend="__classes_2lib_2include_2smmintrin_8h_1abe6dadce438d6a8b81bcd56e3524fb42">_mm_round_ss</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
132 {
133 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_roundss&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>,
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
136 }
137 <emphasis role="preprocessor">#else</emphasis>
138 <emphasis role="preprocessor">#define&#32;_mm_round_ps(V,&#32;M)&#32;\</emphasis>
139 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_roundps&#32;((__v4sf)(__m128)(V),&#32;(int)(M)))</emphasis>
140 
141 <emphasis role="preprocessor">#define&#32;_mm_round_ss(D,&#32;V,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
142 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_roundss&#32;((__v4sf)(__m128)(D),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
143 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(V),&#32;(int)(M)))</emphasis>
144 <emphasis role="preprocessor">#endif</emphasis>
145 
146 <emphasis role="comment">/*&#32;Macros&#32;for&#32;ceil/floor&#32;intrinsics.&#32;&#32;*/</emphasis>
147 <emphasis role="preprocessor">#define&#32;_mm_ceil_pd(V)&#32;&#32;&#32;&#32;&#32;_mm_round_pd&#32;((V),&#32;_MM_FROUND_CEIL)</emphasis>
148 <emphasis role="preprocessor">#define&#32;_mm_ceil_sd(D,&#32;V)&#32;&#32;_mm_round_sd&#32;((D),&#32;(V),&#32;_MM_FROUND_CEIL)</emphasis>
149 
150 <emphasis role="preprocessor">#define&#32;_mm_floor_pd(V)&#32;&#32;&#32;&#32;_mm_round_pd((V),&#32;_MM_FROUND_FLOOR)</emphasis>
151 <emphasis role="preprocessor">#define&#32;_mm_floor_sd(D,&#32;V)&#32;_mm_round_sd&#32;((D),&#32;(V),&#32;_MM_FROUND_FLOOR)</emphasis>
152 
153 <emphasis role="preprocessor">#define&#32;_mm_ceil_ps(V)&#32;&#32;&#32;&#32;&#32;_mm_round_ps&#32;((V),&#32;_MM_FROUND_CEIL)</emphasis>
154 <emphasis role="preprocessor">#define&#32;_mm_ceil_ss(D,&#32;V)&#32;&#32;_mm_round_ss&#32;((D),&#32;(V),&#32;_MM_FROUND_CEIL)</emphasis>
155 
156 <emphasis role="preprocessor">#define&#32;_mm_floor_ps(V)&#32;&#32;&#32;&#32;_mm_round_ps&#32;((V),&#32;_MM_FROUND_FLOOR)</emphasis>
157 <emphasis role="preprocessor">#define&#32;_mm_floor_ss(D,&#32;V)&#32;_mm_round_ss&#32;((D),&#32;(V),&#32;_MM_FROUND_FLOOR)</emphasis>
158 
159 <emphasis role="comment">/*&#32;SSE4.1&#32;*/</emphasis>
160 
161 <emphasis role="comment">/*&#32;Integer&#32;blend&#32;instructions&#32;-&#32;select&#32;data&#32;from&#32;2&#32;sources&#32;using</emphasis>
162 <emphasis role="comment">&#32;&#32;&#32;constant/variable&#32;mask.&#32;&#32;*/</emphasis>
163 
164 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
165 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
166 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a825642c8598f770a50145fb75b4d4f12">_mm_blend_epi16</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
167 {
168 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pblendw128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8hi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
171 }
172 <emphasis role="preprocessor">#else</emphasis>
173 <emphasis role="preprocessor">#define&#32;_mm_blend_epi16(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
174 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_pblendw128&#32;((__v8hi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
175 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8hi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
176 <emphasis role="preprocessor">#endif</emphasis>
177 
178 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
179 _mm_blendv_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
180 {
181 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pblendvb128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
184 }
185 
186 <emphasis role="comment">/*&#32;Single&#32;precision&#32;floating&#32;point&#32;blend&#32;instructions&#32;-&#32;select&#32;data</emphasis>
187 <emphasis role="comment">&#32;&#32;&#32;from&#32;2&#32;sources&#32;using&#32;constant/variable&#32;mask.&#32;&#32;*/</emphasis>
188 
189 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
190 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
191 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a7c97d3d161d0948fafc2b450ecbabb78">_mm_blend_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
192 {
193 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_blendps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
196 }
197 <emphasis role="preprocessor">#else</emphasis>
198 <emphasis role="preprocessor">#define&#32;_mm_blend_ps(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
199 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_blendps&#32;((__v4sf)(__m128)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
200 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(Y),&#32;(int)(M)))</emphasis>
201 <emphasis role="preprocessor">#endif</emphasis>
202 
203 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
204 _mm_blendv_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
205 {
206 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_blendvps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
209 }
210 
211 <emphasis role="comment">/*&#32;Double&#32;precision&#32;floating&#32;point&#32;blend&#32;instructions&#32;-&#32;select&#32;data</emphasis>
212 <emphasis role="comment">&#32;&#32;&#32;from&#32;2&#32;sources&#32;using&#32;constant/variable&#32;mask.&#32;&#32;*/</emphasis>
213 
214 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
215 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
216 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a2ebb390bdc97b88f206d22ed7084c4dd">_mm_blend_pd</link>&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
217 {
218 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_blendpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
221 }
222 <emphasis role="preprocessor">#else</emphasis>
223 <emphasis role="preprocessor">#define&#32;_mm_blend_pd(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
224 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_blendpd&#32;((__v2df)(__m128d)(X),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
225 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)(Y),&#32;(int)(M)))</emphasis>
226 <emphasis role="preprocessor">#endif</emphasis>
227 
228 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
229 _mm_blendv_pd&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
230 {
231 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_blendvpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
234 }
235 
236 <emphasis role="comment">/*&#32;Dot&#32;product&#32;instructions&#32;with&#32;mask-defined&#32;summing&#32;and&#32;zeroing&#32;parts</emphasis>
237 <emphasis role="comment">&#32;&#32;&#32;of&#32;result.&#32;&#32;*/</emphasis>
238 
239 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
240 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
241 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a9499f1029e5347aae12d526c93ff8aa1">_mm_dp_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
242 {
243 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_dpps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
246 }
247 
248 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
249 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a5e712e6a462f3873ecf0f689a37a008f">_mm_dp_pd</link>&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
250 {
251 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_dppd&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
254 }
255 <emphasis role="preprocessor">#else</emphasis>
256 <emphasis role="preprocessor">#define&#32;_mm_dp_ps(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
257 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_dpps&#32;((__v4sf)(__m128)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(Y),&#32;(int)(M)))</emphasis>
259 
260 <emphasis role="preprocessor">#define&#32;_mm_dp_pd(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
261 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_dppd&#32;((__v2df)(__m128d)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
262 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)(Y),&#32;(int)(M)))</emphasis>
263 <emphasis role="preprocessor">#endif</emphasis>
264 
265 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;64-bit&#32;comparison,&#32;zeroing&#32;or&#32;filling&#32;with&#32;ones</emphasis>
266 <emphasis role="comment">&#32;&#32;&#32;corresponding&#32;parts&#32;of&#32;result.&#32;&#32;*/</emphasis>
267 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
268 _mm_cmpeq_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
269 {
270 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;==&#32;(__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
271 }
272 
273 <emphasis role="comment">/*&#32;&#32;Min/max&#32;packed&#32;integer&#32;instructions.&#32;&#32;*/</emphasis>
274 
275 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
276 _mm_min_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
277 {
278 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pminsb128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
279 }
280 
281 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
282 _mm_max_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
283 {
284 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmaxsb128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
285 }
286 
287 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
288 _mm_min_epu16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
289 {
290 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pminuw128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8hi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
291 }
292 
293 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
294 _mm_max_epu16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
295 {
296 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmaxuw128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8hi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
297 }
298 
299 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
300 _mm_min_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
301 {
302 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pminsd128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
303 }
304 
305 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
306 _mm_max_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
307 {
308 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmaxsd128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
309 }
310 
311 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
312 _mm_min_epu32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
313 {
314 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pminud128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
315 }
316 
317 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
318 _mm_max_epu32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
319 {
320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmaxud128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
321 }
322 
323 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;32-bit&#32;multiplication&#32;with&#32;truncation&#32;of&#32;upper</emphasis>
324 <emphasis role="comment">&#32;&#32;&#32;halves&#32;of&#32;results.&#32;&#32;*/</emphasis>
325 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
326 _mm_mullo_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
327 {
328 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;((__v4su)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;*&#32;(__v4su)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
329 }
330 
331 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;32-bit&#32;multiplication&#32;of&#32;2&#32;pairs&#32;of&#32;operands</emphasis>
332 <emphasis role="comment">&#32;&#32;&#32;with&#32;two&#32;64-bit&#32;results.&#32;&#32;*/</emphasis>
333 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
334 _mm_mul_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
335 {
336 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmuldq128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
337 }
338 
339 <emphasis role="comment">/*&#32;Insert&#32;single&#32;precision&#32;float&#32;into&#32;packed&#32;single&#32;precision&#32;array</emphasis>
340 <emphasis role="comment">&#32;&#32;&#32;element&#32;selected&#32;by&#32;index&#32;N.&#32;&#32;The&#32;bits&#32;[7-6]&#32;of&#32;N&#32;define&#32;S</emphasis>
341 <emphasis role="comment">&#32;&#32;&#32;index,&#32;the&#32;bits&#32;[5-4]&#32;define&#32;D&#32;index,&#32;and&#32;bits&#32;[3-0]&#32;define</emphasis>
342 <emphasis role="comment">&#32;&#32;&#32;zeroing&#32;mask&#32;for&#32;D.&#32;&#32;*/</emphasis>
343 
344 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
345 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
346 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a8a5b7492e4564ff14a4913318bf535b5">_mm_insert_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
347 {
348 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_insertps128&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
351 }
352 <emphasis role="preprocessor">#else</emphasis>
353 <emphasis role="preprocessor">#define&#32;_mm_insert_ps(D,&#32;S,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
354 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_insertps128&#32;((__v4sf)(__m128)(D),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
355 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(S),&#32;(int)(N)))</emphasis>
356 <emphasis role="preprocessor">#endif</emphasis>
357 
358 <emphasis role="comment">/*&#32;Helper&#32;macro&#32;to&#32;create&#32;the&#32;N&#32;value&#32;for&#32;_mm_insert_ps.&#32;&#32;*/</emphasis>
359 <emphasis role="preprocessor">#define&#32;_MM_MK_INSERTPS_NDX(S,&#32;D,&#32;M)&#32;(((S)&#32;&lt;&lt;&#32;6)&#32;|&#32;((D)&#32;&lt;&lt;&#32;4)&#32;|&#32;(M))</emphasis>
360 
361 <emphasis role="comment">/*&#32;Extract&#32;binary&#32;representation&#32;of&#32;single&#32;precision&#32;float&#32;from&#32;packed</emphasis>
362 <emphasis role="comment">&#32;&#32;&#32;single&#32;precision&#32;array&#32;element&#32;of&#32;X&#32;selected&#32;by&#32;index&#32;N.&#32;&#32;*/</emphasis>
363 
364 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
365 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
366 <link linkend="__classes_2lib_2include_2smmintrin_8h_1ae6e89777ff64eeede36d711e5d4a2f71">_mm_extract_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
367 {
368 &#32;&#32;<emphasis role="keyword">union&#32;</emphasis>{&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;&#32;}&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>;
369 &#32;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>.f&#32;=&#32;__builtin_ia32_vec_ext_v4sf&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
370 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>.i;
371 }
372 <emphasis role="preprocessor">#else</emphasis>
373 <emphasis role="preprocessor">#define&#32;_mm_extract_ps(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
374 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
375 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
376 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;union&#32;{&#32;int&#32;i;&#32;float&#32;f;&#32;}&#32;__tmp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
377 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;__tmp.f&#32;=&#32;__builtin_ia32_vec_ext_v4sf&#32;((__v4sf)(__m128)(X),&#32;(int)(N));&#32;\</emphasis>
378 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;__tmp.i;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
379 <emphasis role="preprocessor">&#32;&#32;&#32;}))</emphasis>
380 <emphasis role="preprocessor">#endif</emphasis>
381 
382 <emphasis role="comment">/*&#32;Extract&#32;binary&#32;representation&#32;of&#32;single&#32;precision&#32;float&#32;into</emphasis>
383 <emphasis role="comment">&#32;&#32;&#32;D&#32;from&#32;packed&#32;single&#32;precision&#32;array&#32;element&#32;of&#32;S&#32;selected</emphasis>
384 <emphasis role="comment">&#32;&#32;&#32;by&#32;index&#32;N.&#32;&#32;*/</emphasis>
385 <emphasis role="preprocessor">#define&#32;_MM_EXTRACT_FLOAT(D,&#32;S,&#32;N)&#32;\</emphasis>
386 <emphasis role="preprocessor">&#32;&#32;{&#32;(D)&#32;=&#32;__builtin_ia32_vec_ext_v4sf&#32;((__v4sf)(S),&#32;(N));&#32;}</emphasis>
387 &#32;&#32;
388 <emphasis role="comment">/*&#32;Extract&#32;specified&#32;single&#32;precision&#32;float&#32;element&#32;into&#32;the&#32;lower</emphasis>
389 <emphasis role="comment">&#32;&#32;&#32;part&#32;of&#32;__m128.&#32;&#32;*/</emphasis>
390 <emphasis role="preprocessor">#define&#32;_MM_PICK_OUT_PS(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
391 <emphasis role="preprocessor">&#32;&#32;_mm_insert_ps&#32;(_mm_setzero_ps&#32;(),&#32;(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
392 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_MM_MK_INSERTPS_NDX&#32;((N),&#32;0,&#32;0x0e))</emphasis>
393 
394 <emphasis role="comment">/*&#32;Insert&#32;integer,&#32;S,&#32;into&#32;packed&#32;integer&#32;array&#32;element&#32;of&#32;D</emphasis>
395 <emphasis role="comment">&#32;&#32;&#32;selected&#32;by&#32;index&#32;N.&#32;&#32;*/</emphasis>
396 
397 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
398 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
399 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a93a7c92fec4a34c7923eb2fa352914d6">_mm_insert_epi8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
400 {
401 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vec_set_v16qi&#32;((__v16qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
403 }
404 
405 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
406 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a671a352bb3e2081424fbbadffa37e441">_mm_insert_epi32</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
407 {
408 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vec_set_v4si&#32;((__v4si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
410 }
411 
412 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
413 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
414 _mm_insert_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
415 {
416 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vec_set_v2di&#32;((__v2di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1a8e9143e7db7ea531c65c97cbf87f07ad">__D</link>,
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
418 }
419 <emphasis role="preprocessor">#endif</emphasis>
420 <emphasis role="preprocessor">#else</emphasis>
421 <emphasis role="preprocessor">#define&#32;_mm_insert_epi8(D,&#32;S,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
422 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vec_set_v16qi&#32;((__v16qi)(__m128i)(D),&#32;&#32;&#32;\</emphasis>
423 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(S),&#32;(int)(N)))</emphasis>
424 
425 <emphasis role="preprocessor">#define&#32;_mm_insert_epi32(D,&#32;S,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
426 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vec_set_v4si&#32;((__v4si)(__m128i)(D),&#32;\</emphasis>
427 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(S),&#32;(int)(N)))</emphasis>
428 
429 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
430 <emphasis role="preprocessor">#define&#32;_mm_insert_epi64(D,&#32;S,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
431 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vec_set_v2di&#32;((__v2di)(__m128i)(D),&#32;&#32;&#32;&#32;&#32;\</emphasis>
432 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long)(S),&#32;(int)(N)))</emphasis>
433 <emphasis role="preprocessor">#endif</emphasis>
434 <emphasis role="preprocessor">#endif</emphasis>
435 
436 <emphasis role="comment">/*&#32;Extract&#32;integer&#32;from&#32;packed&#32;integer&#32;array&#32;element&#32;of&#32;X&#32;selected&#32;by</emphasis>
437 <emphasis role="comment">&#32;&#32;&#32;index&#32;N.&#32;&#32;*/</emphasis>
438 
439 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
440 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
441 <link linkend="__classes_2lib_2include_2smmintrin_8h_1ad98cca93fe7324aebff50c95f7c12e4c">_mm_extract_epi8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
442 {
443 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>)&#32;__builtin_ia32_vec_ext_v16qi&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
444 }
445 
446 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
447 <link linkend="__classes_2lib_2include_2smmintrin_8h_1af10410dc52ede0cdb9411b5e18150188">_mm_extract_epi32</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
448 {
449 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vec_ext_v4si&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
450 }
451 
452 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
453 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
454 _mm_extract_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
455 {
456 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vec_ext_v2di&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
457 }
458 <emphasis role="preprocessor">#endif</emphasis>
459 <emphasis role="preprocessor">#else</emphasis>
460 <emphasis role="preprocessor">#define&#32;_mm_extract_epi8(X,&#32;N)&#32;\</emphasis>
461 <emphasis role="preprocessor">&#32;&#32;((int)&#32;(unsigned&#32;char)&#32;__builtin_ia32_vec_ext_v16qi&#32;((__v16qi)(__m128i)(X),&#32;(int)(N)))</emphasis>
462 <emphasis role="preprocessor">#define&#32;_mm_extract_epi32(X,&#32;N)&#32;\</emphasis>
463 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_vec_ext_v4si&#32;((__v4si)(__m128i)(X),&#32;(int)(N)))</emphasis>
464 
465 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
466 <emphasis role="preprocessor">#define&#32;_mm_extract_epi64(X,&#32;N)&#32;\</emphasis>
467 <emphasis role="preprocessor">&#32;&#32;((long&#32;long)&#32;__builtin_ia32_vec_ext_v2di&#32;((__v2di)(__m128i)(X),&#32;(int)(N)))</emphasis>
468 <emphasis role="preprocessor">#endif</emphasis>
469 <emphasis role="preprocessor">#endif</emphasis>
470 
471 <emphasis role="comment">/*&#32;Return&#32;horizontal&#32;packed&#32;word&#32;minimum&#32;and&#32;its&#32;index&#32;in&#32;bits&#32;[15:0]</emphasis>
472 <emphasis role="comment">&#32;&#32;&#32;and&#32;bits&#32;[18:16]&#32;respectively.&#32;&#32;*/</emphasis>
473 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
474 _mm_minpos_epu16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
475 {
476 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_phminposuw128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
477 }
478 
479 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;sign-extension.&#32;&#32;*/</emphasis>
480 
481 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
482 _mm_cvtepi8_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
483 {
484 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovsxbd128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
485 }
486 
487 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
488 _mm_cvtepi16_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
489 {
490 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovsxwd128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
491 }
492 
493 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
494 _mm_cvtepi8_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
495 {
496 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovsxbq128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
497 }
498 
499 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
500 _mm_cvtepi32_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
501 {
502 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovsxdq128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
503 }
504 
505 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
506 _mm_cvtepi16_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
507 {
508 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovsxwq128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
509 }
510 
511 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
512 _mm_cvtepi8_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
513 {
514 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovsxbw128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
515 }
516 
517 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;zero-extension.&#32;*/</emphasis>
518 
519 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
520 _mm_cvtepu8_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
521 {
522 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovzxbd128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
523 }
524 
525 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
526 _mm_cvtepu16_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
527 {
528 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovzxwd128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
529 }
530 
531 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
532 _mm_cvtepu8_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
533 {
534 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovzxbq128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
535 }
536 
537 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
538 _mm_cvtepu32_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
539 {
540 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovzxdq128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
541 }
542 
543 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
544 _mm_cvtepu16_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
545 {
546 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovzxwq128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
547 }
548 
549 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
550 _mm_cvtepu8_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
551 {
552 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pmovzxbw128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
553 }
554 
555 <emphasis role="comment">/*&#32;Pack&#32;8&#32;double&#32;words&#32;from&#32;2&#32;operands&#32;into&#32;8&#32;words&#32;of&#32;result&#32;with</emphasis>
556 <emphasis role="comment">&#32;&#32;&#32;unsigned&#32;saturation.&#32;*/</emphasis>
557 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
558 _mm_packus_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
559 {
560 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_packusdw128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
561 }
562 
563 <emphasis role="comment">/*&#32;Sum&#32;absolute&#32;8-bit&#32;integer&#32;difference&#32;of&#32;adjacent&#32;groups&#32;of&#32;4</emphasis>
564 <emphasis role="comment">&#32;&#32;&#32;byte&#32;integers&#32;in&#32;the&#32;first&#32;2&#32;operands.&#32;&#32;Starting&#32;offsets&#32;within</emphasis>
565 <emphasis role="comment">&#32;&#32;&#32;operands&#32;are&#32;determined&#32;by&#32;the&#32;3rd&#32;mask&#32;operand.&#32;&#32;*/</emphasis>
566 
567 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
568 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
569 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a18852179af9f0b644b446fa6972f8977">_mm_mpsadbw_epu8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
570 {
571 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_mpsadbw128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
573 }
574 <emphasis role="preprocessor">#else</emphasis>
575 <emphasis role="preprocessor">#define&#32;_mm_mpsadbw_epu8(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
576 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_mpsadbw128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
577 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
578 <emphasis role="preprocessor">#endif</emphasis>
579 
580 <emphasis role="comment">/*&#32;Load&#32;double&#32;quadword&#32;using&#32;non-temporal&#32;aligned&#32;hint.&#32;&#32;*/</emphasis>
581 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
582 _mm_stream_load_si128&#32;(__m128i&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
583 {
584 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_movntdqa&#32;((__v2di&#32;*)&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
585 }
586 
587 <emphasis role="preprocessor">#ifndef&#32;__SSE4_2__</emphasis>
588 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
589 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;sse4.2&quot;)</emphasis>
590 <emphasis role="preprocessor">#define&#32;__DISABLE_SSE4_2__</emphasis>
591 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__SSE4_2__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
592 
593 <emphasis role="comment">/*&#32;These&#32;macros&#32;specify&#32;the&#32;source&#32;data&#32;format.&#32;&#32;*/</emphasis>
594 <emphasis role="preprocessor">#define&#32;_SIDD_UBYTE_OPS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
595 <emphasis role="preprocessor">#define&#32;_SIDD_UWORD_OPS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
596 <emphasis role="preprocessor">#define&#32;_SIDD_SBYTE_OPS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x02</emphasis>
597 <emphasis role="preprocessor">#define&#32;_SIDD_SWORD_OPS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x03</emphasis>
598 
599 <emphasis role="comment">/*&#32;These&#32;macros&#32;specify&#32;the&#32;comparison&#32;operation.&#32;&#32;*/</emphasis>
600 <emphasis role="preprocessor">#define&#32;_SIDD_CMP_EQUAL_ANY&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
601 <emphasis role="preprocessor">#define&#32;_SIDD_CMP_RANGES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x04</emphasis>
602 <emphasis role="preprocessor">#define&#32;_SIDD_CMP_EQUAL_EACH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x08</emphasis>
603 <emphasis role="preprocessor">#define&#32;_SIDD_CMP_EQUAL_ORDERED&#32;&#32;&#32;&#32;&#32;0x0c</emphasis>
604 
605 <emphasis role="comment">/*&#32;These&#32;macros&#32;specify&#32;the&#32;polarity.&#32;&#32;*/</emphasis>
606 <emphasis role="preprocessor">#define&#32;_SIDD_POSITIVE_POLARITY&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
607 <emphasis role="preprocessor">#define&#32;_SIDD_NEGATIVE_POLARITY&#32;&#32;&#32;&#32;&#32;0x10</emphasis>
608 <emphasis role="preprocessor">#define&#32;_SIDD_MASKED_POSITIVE_POLARITY&#32;&#32;0x20</emphasis>
609 <emphasis role="preprocessor">#define&#32;_SIDD_MASKED_NEGATIVE_POLARITY&#32;&#32;0x30</emphasis>
610 
611 <emphasis role="comment">/*&#32;These&#32;macros&#32;specify&#32;the&#32;output&#32;selection&#32;in&#32;_mm_cmpXstri&#32;().&#32;&#32;*/</emphasis>
612 <emphasis role="preprocessor">#define&#32;_SIDD_LEAST_SIGNIFICANT&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
613 <emphasis role="preprocessor">#define&#32;_SIDD_MOST_SIGNIFICANT&#32;&#32;&#32;&#32;&#32;&#32;0x40</emphasis>
614 
615 <emphasis role="comment">/*&#32;These&#32;macros&#32;specify&#32;the&#32;output&#32;selection&#32;in&#32;_mm_cmpXstrm&#32;().&#32;&#32;*/</emphasis>
616 <emphasis role="preprocessor">#define&#32;_SIDD_BIT_MASK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
617 <emphasis role="preprocessor">#define&#32;_SIDD_UNIT_MASK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x40</emphasis>
618 
619 <emphasis role="comment">/*&#32;Intrinsics&#32;for&#32;text/string&#32;processing.&#32;&#32;*/</emphasis>
620 
621 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
622 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
623 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a76635ff655c194a73ca32ebc6ede9adb">_mm_cmpistrm</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
624 {
625 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pcmpistrm128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
628 }
629 
630 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
631 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a92a5eacc2ba96b9fe66159571fe76956">_mm_cmpistri</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
632 {
633 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpistri128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
636 }
637 
638 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
639 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a84f1d6974f2e1f8db5aba08ee0c7e185">_mm_cmpestrm</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
640 {
641 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pcmpestrm128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
644 }
645 
646 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
647 <link linkend="__classes_2lib_2include_2smmintrin_8h_1ad5c0c19c6a84bc44d2b16549ca8ab6c1">_mm_cmpestri</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
648 {
649 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpestri128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
652 }
653 <emphasis role="preprocessor">#else</emphasis>
654 <emphasis role="preprocessor">#define&#32;_mm_cmpistrm(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
655 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_pcmpistrm128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;\</emphasis>
656 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
657 <emphasis role="preprocessor">#define&#32;_mm_cmpistri(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
658 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpistri128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
659 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
660 
661 <emphasis role="preprocessor">#define&#32;_mm_cmpestrm(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
662 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_pcmpestrm128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;\</emphasis>
663 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(LX),&#32;(__v16qi)(__m128i)(Y),&#32;\</emphasis>
664 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(LY),&#32;(int)(M)))</emphasis>
665 <emphasis role="preprocessor">#define&#32;_mm_cmpestri(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
666 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpestri128&#32;((__v16qi)(__m128i)(X),&#32;(int)(LX),&#32;\</emphasis>
667 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(LY),&#32;\</emphasis>
668 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
669 <emphasis role="preprocessor">#endif</emphasis>
670 
671 <emphasis role="comment">/*&#32;Intrinsics&#32;for&#32;text/string&#32;processing&#32;and&#32;reading&#32;values&#32;of</emphasis>
672 <emphasis role="comment">&#32;&#32;&#32;EFlags.&#32;&#32;*/</emphasis>
673 
674 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
675 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
676 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a3aca89cd81fa3b602b2459a60f09c481">_mm_cmpistra</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
677 {
678 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpistria128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
681 }
682 
683 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
684 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a6178af43651a88309347539f798f7670">_mm_cmpistrc</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
685 {
686 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpistric128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
689 }
690 
691 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
692 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a37fd68df61f09ccc6a8ddfec3d09e419">_mm_cmpistro</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
693 {
694 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpistrio128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
697 }
698 
699 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
700 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a617625ae5789a018e199216c4277d4e1">_mm_cmpistrs</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
701 {
702 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpistris128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
705 }
706 
707 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
708 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a3e0e6cf30f95deb7750ebde86445ef54">_mm_cmpistrz</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
709 {
710 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpistriz128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
713 }
714 
715 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
716 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a1cd648a5aa69f375bb597283331b1447">_mm_cmpestra</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
717 {
718 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpestria128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
721 }
722 
723 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
724 <link linkend="__classes_2lib_2include_2smmintrin_8h_1af3ad8e3fa6dcbcbb5acc6a2ce5be327a">_mm_cmpestrc</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
725 {
726 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpestric128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
729 }
730 
731 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
732 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a33e2f2519cb6f3df03b977e0c5fb90cf">_mm_cmpestro</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
733 {
734 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpestrio128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
737 }
738 
739 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
740 <link linkend="__classes_2lib_2include_2smmintrin_8h_1ac838ffa36cf70064f529b55fa2f8e405">_mm_cmpestrs</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
741 {
742 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpestris128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
745 }
746 
747 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
748 <link linkend="__classes_2lib_2include_2smmintrin_8h_1a94bf450fa9ed4c6f03fec43e89b7b938">_mm_cmpestrz</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LX,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__LY,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>)
749 {
750 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pcmpestriz128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__LX,
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__LY,
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a4f1e5157c02e953875b7399ce753e6af">__M</link>);
753 }
754 <emphasis role="preprocessor">#else</emphasis>
755 <emphasis role="preprocessor">#define&#32;_mm_cmpistra(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
756 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpistria128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
757 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
758 <emphasis role="preprocessor">#define&#32;_mm_cmpistrc(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
759 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpistric128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
760 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
761 <emphasis role="preprocessor">#define&#32;_mm_cmpistro(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
762 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpistrio128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
763 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
764 <emphasis role="preprocessor">#define&#32;_mm_cmpistrs(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
765 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpistris128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
766 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
767 <emphasis role="preprocessor">#define&#32;_mm_cmpistrz(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
768 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpistriz128&#32;((__v16qi)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
769 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(M)))</emphasis>
770 
771 <emphasis role="preprocessor">#define&#32;_mm_cmpestra(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
772 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpestria128&#32;((__v16qi)(__m128i)(X),&#32;(int)(LX),&#32;\</emphasis>
773 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(LY),&#32;\</emphasis>
774 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
775 <emphasis role="preprocessor">#define&#32;_mm_cmpestrc(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
776 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpestric128&#32;((__v16qi)(__m128i)(X),&#32;(int)(LX),&#32;\</emphasis>
777 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(LY),&#32;\</emphasis>
778 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
779 <emphasis role="preprocessor">#define&#32;_mm_cmpestro(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
780 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpestrio128&#32;((__v16qi)(__m128i)(X),&#32;(int)(LX),&#32;\</emphasis>
781 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(LY),&#32;\</emphasis>
782 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
783 <emphasis role="preprocessor">#define&#32;_mm_cmpestrs(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
784 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpestris128&#32;((__v16qi)(__m128i)(X),&#32;(int)(LX),&#32;\</emphasis>
785 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(LY),&#32;\</emphasis>
786 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
787 <emphasis role="preprocessor">#define&#32;_mm_cmpestrz(X,&#32;LX,&#32;Y,&#32;LY,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
788 <emphasis role="preprocessor">&#32;&#32;((int)&#32;__builtin_ia32_pcmpestriz128&#32;((__v16qi)(__m128i)(X),&#32;(int)(LX),&#32;\</emphasis>
789 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(Y),&#32;(int)(LY),&#32;\</emphasis>
790 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
791 <emphasis role="preprocessor">#endif</emphasis>
792 
793 <emphasis role="comment">/*&#32;Packed&#32;integer&#32;64-bit&#32;comparison,&#32;zeroing&#32;or&#32;filling&#32;with&#32;ones</emphasis>
794 <emphasis role="comment">&#32;&#32;&#32;corresponding&#32;parts&#32;of&#32;result.&#32;&#32;*/</emphasis>
795 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
796 _mm_cmpgt_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
797 {
798 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&gt;&#32;(__v2di)<link linkend="__classes_2lib_2include_2smmintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
799 }
800 
801 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_SSE4_2__</emphasis>
802 <emphasis role="preprocessor">#undef&#32;__DISABLE_SSE4_2__</emphasis>
803 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
804 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_SSE4_2__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
805 
806 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_SSE4_1__</emphasis>
807 <emphasis role="preprocessor">#undef&#32;__DISABLE_SSE4_1__</emphasis>
808 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
809 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_SSE4_1__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
810 
811 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__old_2_classes_2lib_2include_2popcntintrin_8h">popcntintrin.h</link>&gt;</emphasis>
812 
813 <emphasis role="preprocessor">#ifndef&#32;__CRC32__</emphasis>
814 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
815 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;crc32&quot;)</emphasis>
816 <emphasis role="preprocessor">#define&#32;__DISABLE_CRC32__</emphasis>
817 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__CRC32__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
818 
819 <emphasis role="comment">/*&#32;Accumulate&#32;CRC32&#32;(polynomial&#32;0x11EDC6F41)&#32;value.&#32;&#32;*/</emphasis>
820 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
821 _mm_crc32_u8&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
822 {
823 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32qi&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
824 }
825 
826 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
827 _mm_crc32_u16&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
828 {
829 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32hi&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
830 }
831 
832 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
833 _mm_crc32_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
834 {
835 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32si&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
836 }
837 
838 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
839 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
840 _mm_crc32_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
841 {
842 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32di&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1afe4c336e04bd883cab7e912b53d71494">__C</link>,&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
843 }
844 <emphasis role="preprocessor">#endif</emphasis>
845 
846 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_CRC32__</emphasis>
847 <emphasis role="preprocessor">#undef&#32;__DISABLE_CRC32__</emphasis>
848 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
849 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_CRC32__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
850 
851 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_SMMINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
