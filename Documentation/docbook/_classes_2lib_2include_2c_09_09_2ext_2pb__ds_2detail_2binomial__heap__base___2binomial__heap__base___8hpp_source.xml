<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binomial__heap__base___2binomial__heap__base___8hpp_source" xml:lang="en-US">
<title>binomial_heap_base_.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_BINOMIAL_HEAP_BASE_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_BINOMIAL_HEAP_BASE_HPP</emphasis>
43 
44 <emphasis role="comment">/*</emphasis>
45 <emphasis role="comment">&#32;*&#32;Binomial&#32;heap&#32;base.</emphasis>
46 <emphasis role="comment">&#32;*&#32;Vuillemin&#32;J&#32;is&#32;the&#32;mastah.</emphasis>
47 <emphasis role="comment">&#32;*&#32;Modified&#32;from&#32;CLRS.</emphasis>
48 <emphasis role="comment">&#32;*/</emphasis>
49 
50 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
51 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/cond_dealtor.hpp&gt;</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
53 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp&gt;</emphasis>
54 
55 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
56 {
57 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
58 &#32;&#32;{
59 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
60 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Value_Type,&#32;typename&#32;Cmp_Fn,&#32;typename&#32;_Alloc&gt;</emphasis>
61 
62 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
63 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;binomial_heap_base&lt;Value_Type,&#32;Cmp_Fn,&#32;_Alloc&gt;</emphasis>
64 
65 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
66 <emphasis role="preprocessor">#define&#32;PB_DS_B_HEAP_BASE&#32;\</emphasis>
67 <emphasis role="preprocessor">&#32;&#32;left_child_next_sibling_heap&lt;Value_Type,&#32;Cmp_Fn,&#32;\</emphasis>
68 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc::size_type,&#32;&#32;_Alloc,&#32;false&gt;</emphasis>
69 <emphasis role="preprocessor">#else</emphasis>
70 <emphasis role="preprocessor">#define&#32;PB_DS_B_HEAP_BASE&#32;\</emphasis>
71 <emphasis role="preprocessor">&#32;&#32;left_child_next_sibling_heap&lt;Value_Type,&#32;Cmp_Fn,&#32;\</emphasis>
72 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc::size_type,&#32;_Alloc&gt;</emphasis>
73 <emphasis role="preprocessor">#endif</emphasis>
74 
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;Cmp_Fn,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
77 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base">binomial_heap_base</link>
78 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binomial__heap__base___2binomial__heap__base___8hpp_1a0034677f42e84240aa9c530ec95f0812">PB_DS_B_HEAP_BASE</link>
79 &#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Value_Type&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">__rebind_v</link>;
82 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binomial__heap__base___2binomial__heap__base___8hpp_1a0034677f42e84240aa9c530ec95f0812">PB_DS_B_HEAP_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type;
83 
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::node&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a242dae194dc3dcb65b3eba42d71a7ecb">node</link>;
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::node_pointer&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>;
87 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::node_const_pointer&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a2eefeacd8ac163547e3e09963f88e1b3">node_const_pointer</link>;
88 
89 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1aaf983aa4ec6c5cea9c874a3adf28a8ce">value_type</link>;
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Cmp_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1af50ddb3879254f8812fcfaf4b030f975">cmp_fn</link>;
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a128f7d6351c0f628117eb22e98f32570">allocator_type</link>;
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1aab3ccf18d06098b7db49b97ce4ab5b63">size_type</link>;
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a2ca3f60ecb1a5e127f1b6d7b8f5fb726">difference_type</link>;
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::pointer&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a9be874021d0564fcb3f045802f0ea24c">pointer</link>;
97 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::const_pointer&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1afb162b33597207de5e4c766f1bed1f20">const_pointer</link>;
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::reference&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a729e49e51a2192c03613d0ed5728c5df">reference</link>;
99 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::const_reference&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a0f6c88b27cb5bd76d320084ed3d92055">const_reference</link>;
100 
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::point_const_iterator&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1ac6903adfd9b1dfffc868132acc97b910">point_const_iterator</link>;
102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::point_iterator&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1acc75d9039e19d22e167916e9d1c3b0f2">point_iterator</link>;
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_iterator&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1ae93c865d1c167206d98ba746da35e85c">const_iterator</link>;
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::iterator&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1ae830358561718aac7f3b165a916df07b">iterator</link>;
105 
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
107 
108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1acc75d9039e19d22e167916e9d1c3b0f2">point_iterator</link>
109 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1acf85b93c36881f98cd20edc69a1a660b">push</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a0f6c88b27cb5bd76d320084ed3d92055">const_reference</link>);
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1ab0d9ed0fac5c863883e00052c8f10df7">modify</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1acc75d9039e19d22e167916e9d1c3b0f2">point_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a0f6c88b27cb5bd76d320084ed3d92055">const_reference</link>);
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a0f6c88b27cb5bd76d320084ed3d92055">const_reference</link>
115 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a0491ec3d62e64d3f642c9a44b7d0ca6d">top</link>()&#32;<emphasis role="keyword">const</emphasis>;
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a20ec60234d547e895167a20a738ddb31">pop</link>();
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
121 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1aedcd55b77c25fc51905285c820e5f19c">erase</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1acc75d9039e19d22e167916e9d1c3b0f2">point_iterator</link>);
122 
123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1af94148f35fa303153d9c047159769e36">clear</link>();
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
127 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1aab3ccf18d06098b7db49b97ce4ab5b63">size_type</link>
128 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a2884d5d07e50eec1dc2de7671b5ef48e">erase_if</link>(Pred);
129 
130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a5d04d1e7b57c3a529e612dd9ba79fdb8">split</link>(Pred,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
133 
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a9981df57663cacb466792d131bc44ba3">join</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
136 
137 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
138 
139 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1af3b1712d5b38bd401bf51f8e3b7571c3">binomial_heap_base</link>();
140 
141 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1acd5eef507877bd3655f69b247c898c80">binomial_heap_base</link>(<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;);
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1af9646a231558c7d3b8140f78509cb2be">binomial_heap_base</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1ae28b272db3851d8a3a400b88fa0a557f">swap</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
147 
148 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a1de6c5a10c51c2395e3503be277e121a">~binomial_heap_base</link>();
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
152 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a9a0fc5d45ca3c1dbc89ae1f24fcc9896">copy_from_range</link>(It,&#32;It);
153 
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
155 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a179a9da20074df8a20ee189626ecb7dd">find_max</link>();
156 
157 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
159 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;assert_max(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
163 <emphasis role="preprocessor">#endif</emphasis>
164 
165 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
166 
167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>
168 &#32;&#32;&#32;&#32;&#32;&#32;fix(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>)&#32;<emphasis role="keyword">const</emphasis>;
169 
170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
171 &#32;&#32;&#32;&#32;&#32;&#32;insert_node(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>);
172 
173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;remove_parentless_node(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>);
175 
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>
177 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a9981df57663cacb466792d131bc44ba3">join</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>)&#32;<emphasis role="keyword">const</emphasis>;
178 
179 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
181 &#32;&#32;&#32;&#32;&#32;&#32;assert_node_consistent(<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a2eefeacd8ac163547e3e09963f88e1b3">node_const_pointer</link>,&#32;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
183 <emphasis role="preprocessor">#endif</emphasis>
184 
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
186 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1a30a1017829fc70fa34e9cc031eefc9fb">node_pointer</link>&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base_1af56fa45256cfa94b934d79c3308f7966">m_p_max</link>;
187 &#32;&#32;&#32;&#32;};
188 
189 <emphasis role="preprocessor">#define&#32;PB_DS_ASSERT_VALID_COND(X,&#32;_StrictlyBinomial)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
190 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_DEBUG_ONLY(X.assert_valid(_StrictlyBinomial,__FILE__,&#32;__LINE__);)</emphasis>
191 
192 <emphasis role="preprocessor">#define&#32;PB_DS_ASSERT_BASE_NODE_CONSISTENT(_Node,&#32;_Bool)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
193 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_DEBUG_ONLY(base_type::assert_node_consistent(_Node,&#32;_Bool,&#32;&#32;&#32;\</emphasis>
194 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FILE__,&#32;__LINE__);)</emphasis>
195 
196 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp&gt;</emphasis>
197 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binomial_heap_base_/debug_fn_imps.hpp&gt;</emphasis>
198 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binomial_heap_base_/find_fn_imps.hpp&gt;</emphasis>
199 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp&gt;</emphasis>
200 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp&gt;</emphasis>
201 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp&gt;</emphasis>
202 
203 <emphasis role="preprocessor">#undef&#32;PB_DS_ASSERT_BASE_NODE_CONSISTENT</emphasis>
204 <emphasis role="preprocessor">#undef&#32;PB_DS_ASSERT_VALID_COND</emphasis>
205 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
206 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
207 <emphasis role="preprocessor">#undef&#32;PB_DS_B_HEAP_BASE</emphasis>
208 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
209 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
210 
211 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
