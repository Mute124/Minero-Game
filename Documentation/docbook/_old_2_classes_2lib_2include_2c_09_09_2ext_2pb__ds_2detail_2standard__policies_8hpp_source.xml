<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2standard__policies_8hpp_source" xml:lang="en-US">
<title>standard_policies.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/standard_policies.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_STANDARD_POLICIES_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_STANDARD_POLICIES_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/hash_policy.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/list_update_policy.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/branch_policy/null_node_metadata.hpp&gt;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tree_policy.hpp&gt;</emphasis>
49 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/trie_policy.hpp&gt;</emphasis>
50 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
51 <emphasis role="preprocessor">#include&#32;&lt;tr1/functional&gt;</emphasis>
52 
53 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
54 {
55 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
56 &#32;&#32;{
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key&gt;
59 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>default_hash_fn
60 &#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::tr1::hash&lt;Key&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__hash__fn_1a9d4935ab2b6d39c2dd35d2d6d395b45a">type</link>;
63 &#32;&#32;&#32;&#32;};
64 
66 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key&gt;
67 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1default__eq__fn">default_eq_fn</link>
68 &#32;&#32;&#32;&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::equal_to&lt;Key&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__eq__fn_1a504bba9208637bab17e2da42601884ba">type</link>;
71 &#32;&#32;&#32;&#32;};
72 
74 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
75 &#32;&#32;&#32;&#32;&#32;&#32;{
76 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866">default_store_hash</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;};
78 
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>default_comb_hash_fn
81 &#32;&#32;&#32;&#32;{
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1direct__mask__range__hashing">direct_mask_range_hashing&lt;&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__comb__hash__fn_1acf71610ce6c7a4a66b87e61fbc3e7407">type</link>;
84 &#32;&#32;&#32;&#32;};
85 
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Comb_Hash_Fn&gt;
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1default__resize__policy">default_resize_policy</link>
89 &#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Comb_Hash_Fn::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type;
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1direct__mask__range__hashing">direct_mask_range_hashing&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;default_fn;
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;is_same&lt;default_fn,&#32;Comb_Hash_Fn&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;same_type;
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">hash_exponential_size_policy&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;iftrue;
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1hash__prime__size__policy">hash_prime_size_policy</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iffalse;
97 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__conditional_type&lt;same_type::value,&#32;iftrue,&#32;iffalse&gt;&#32;cond_type;
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;cond_type::__type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_policy_type;
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">hash_load_check_resize_trigger&lt;false, size_type&gt;</link>&#32;&#32;trigger;
101 
102 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">hash_standard_resize_policy</link>&lt;size_policy_type,&#32;trigger,&#32;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,&#32;size_type&gt;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__resize__policy_1a76f207395a752f928b216799653b005d">type</link>;
106 &#32;&#32;&#32;&#32;};
107 
109 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1default__update__policy">default_update_policy</link>
110 &#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">lu_move_to_front_policy&lt;&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__update__policy_1a386b5f8ac62032f7854bec47c859d9b8">type</link>;
113 &#32;&#32;&#32;&#32;};
114 
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Comb_Probe_Fn&gt;
117 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1default__probe__fn">default_probe_fn</link>
118 &#32;&#32;&#32;&#32;{
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Comb_Probe_Fn::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type;
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1direct__mask__range__hashing">direct_mask_range_hashing&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;default_fn;
122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;is_same&lt;default_fn,&#32;Comb_Probe_Fn&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;same_type;
123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1linear__probe__fn">linear_probe_fn&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iftrue;
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1quadratic__probe__fn">quadratic_probe_fn&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iffalse;
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__conditional_type&lt;same_type::value,&#32;iftrue,&#32;iffalse&gt;&#32;cond_type;
126 
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;cond_type::__type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__probe__fn_1a37d9371e79bf6ce01e4bdcc723df1017">type</link>;
130 &#32;&#32;&#32;&#32;};
131 
132 
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key&gt;
135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">default_trie_access_traits</link>;
136 
137 <emphasis role="preprocessor">#define&#32;__dtrie_alloc&#32;std::allocator&lt;char&gt;&#32;&#32;</emphasis>
138 <emphasis role="preprocessor">#define&#32;__dtrie_string&#32;std::basic_string&lt;Char,&#32;Char_Traits,&#32;__dtrie_alloc&gt;&#32;</emphasis>
139 
141 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Char,&#32;<emphasis role="keyword">typename</emphasis>&#32;Char_Traits&gt;
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>default_trie_access_traits&lt;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2standard__policies_8hpp_1a23ca132d22384d6d1afc0ea0711d4ba7">__dtrie_string</link>&gt;
143 &#32;&#32;&#32;&#32;&#32;&#32;{
144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
145 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2standard__policies_8hpp_1a23ca132d22384d6d1afc0ea0711d4ba7">__dtrie_string</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;string_type;
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">trie_string_access_traits&lt;string_type&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits_3_01____dtrie__string_01_4_1a5261f9364e71b6eb2354cd189d476eda">type</link>;
150 &#32;&#32;&#32;&#32;&#32;&#32;};
151 
152 <emphasis role="preprocessor">#undef&#32;__dtrie_alloc</emphasis>
153 <emphasis role="preprocessor">#undef&#32;__dtrie_string</emphasis>
154 
155 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
156 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
157 
158 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;#ifndef&#32;PB_DS_STANDARD_POLICIES_HPP</emphasis>
</programlisting></section>
