<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2bits_2specfun_8h_source" xml:lang="en-US">
<title>specfun.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/bits/specfun.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Mathematical&#32;Special&#32;Functions&#32;for&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2006-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_BITS_SPECFUN_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_GLIBCXX_BITS_SPECFUN_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;visibility&#32;push(default)</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
36 
37 <emphasis role="preprocessor">#define&#32;__STDCPP_MATH_SPEC_FUNCS__&#32;201003L</emphasis>
38 
39 <emphasis role="preprocessor">#define&#32;__cpp_lib_math_special_functions&#32;201603L</emphasis>
40 
41 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&lt;=&#32;201403L&#32;&amp;&amp;&#32;__STDCPP_WANT_MATH_SPEC_FUNCS__&#32;==&#32;0</emphasis>
42 <emphasis role="preprocessor">#&#32;error&#32;include&#32;&lt;cmath&gt;&#32;and&#32;define&#32;__STDCPP_WANT_MATH_SPEC_FUNCS__</emphasis>
43 <emphasis role="preprocessor">#endif</emphasis>
44 
45 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algobase.h&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
48 
49 <emphasis role="preprocessor">#include&#32;&lt;tr1/gamma.tcc&gt;</emphasis>
50 <emphasis role="preprocessor">#include&#32;&lt;tr1/bessel_function.tcc&gt;</emphasis>
51 <emphasis role="preprocessor">#include&#32;&lt;tr1/beta_function.tcc&gt;</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;tr1/ell_integral.tcc&gt;</emphasis>
53 <emphasis role="preprocessor">#include&#32;&lt;tr1/exp_integral.tcc&gt;</emphasis>
54 <emphasis role="preprocessor">#include&#32;&lt;tr1/hypergeometric.tcc&gt;</emphasis>
55 <emphasis role="preprocessor">#include&#32;&lt;tr1/legendre_function.tcc&gt;</emphasis>
56 <emphasis role="preprocessor">#include&#32;&lt;tr1/modified_bessel_func.tcc&gt;</emphasis>
57 <emphasis role="preprocessor">#include&#32;&lt;tr1/poly_hermite.tcc&gt;</emphasis>
58 <emphasis role="preprocessor">#include&#32;&lt;tr1/poly_laguerre.tcc&gt;</emphasis>
59 <emphasis role="preprocessor">#include&#32;&lt;tr1/riemann_zeta.tcc&gt;</emphasis>
60 
61 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
62 {
63 _GLIBCXX_BEGIN_NAMESPACE_VERSION
64 
197 &#32;&#32;<emphasis role="comment">//&#32;Associated&#32;Laguerre&#32;polynomials</emphasis>
198 
205 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
206 &#32;&#32;assoc_laguerref(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
207 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__assoc_laguerre&lt;float&gt;(__n,&#32;__m,&#32;__x);&#32;}
208 
215 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
216 &#32;&#32;assoc_laguerrel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
217 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__assoc_laguerre&lt;long&#32;double&gt;(__n,&#32;__m,&#32;__x);&#32;}
218 
250 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
251 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
252 &#32;&#32;&#32;&#32;assoc_laguerre(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;_Tp&#32;__x)
253 &#32;&#32;&#32;&#32;{
254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
255 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__assoc_laguerre&lt;__type&gt;(__n,&#32;__m,&#32;__x);
256 &#32;&#32;&#32;&#32;}
257 
258 &#32;&#32;<emphasis role="comment">//&#32;Associated&#32;Legendre&#32;functions</emphasis>
259 
266 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
267 &#32;&#32;assoc_legendref(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
268 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__assoc_legendre_p&lt;float&gt;(__l,&#32;__m,&#32;__x);&#32;}
269 
275 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
276 &#32;&#32;assoc_legendrel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
277 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__assoc_legendre_p&lt;long&#32;double&gt;(__l,&#32;__m,&#32;__x);&#32;}
278 
279 
296 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
297 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
298 &#32;&#32;&#32;&#32;assoc_legendre(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;_Tp&#32;__x)
299 &#32;&#32;&#32;&#32;{
300 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__assoc_legendre_p&lt;__type&gt;(__l,&#32;__m,&#32;__x);
302 &#32;&#32;&#32;&#32;}
303 
304 &#32;&#32;<emphasis role="comment">//&#32;Beta&#32;functions</emphasis>
305 
311 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
312 &#32;&#32;betaf(<emphasis role="keywordtype">float</emphasis>&#32;__a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__b)
313 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__beta&lt;float&gt;(__a,&#32;__b);&#32;}
314 
321 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
322 &#32;&#32;betal(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__a,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__b)
323 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__beta&lt;long&#32;double&gt;(__a,&#32;__b);&#32;}
324 
341 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpa,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpb&gt;
342 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpa,&#32;_Tpb&gt;::__type
343 &#32;&#32;&#32;&#32;beta(_Tpa&#32;__a,&#32;_Tpb&#32;__b)
344 &#32;&#32;&#32;&#32;{
345 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpa,&#32;_Tpb&gt;::__type&#32;__type;
346 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__beta&lt;__type&gt;(__a,&#32;__b);
347 &#32;&#32;&#32;&#32;}
348 
349 &#32;&#32;<emphasis role="comment">//&#32;Complete&#32;elliptic&#32;integrals&#32;of&#32;the&#32;first&#32;kind</emphasis>
350 
357 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
358 &#32;&#32;comp_ellint_1f(<emphasis role="keywordtype">float</emphasis>&#32;__k)
359 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_1&lt;float&gt;(__k);&#32;}
360 
367 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
368 &#32;&#32;comp_ellint_1l(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__k)
369 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_1&lt;long&#32;double&gt;(__k);&#32;}
370 
389 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
390 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
391 &#32;&#32;&#32;&#32;comp_ellint_1(_Tp&#32;__k)
392 &#32;&#32;&#32;&#32;{
393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
394 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_1&lt;__type&gt;(__k);
395 &#32;&#32;&#32;&#32;}
396 
397 &#32;&#32;<emphasis role="comment">//&#32;Complete&#32;elliptic&#32;integrals&#32;of&#32;the&#32;second&#32;kind</emphasis>
398 
405 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
406 &#32;&#32;comp_ellint_2f(<emphasis role="keywordtype">float</emphasis>&#32;__k)
407 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_2&lt;float&gt;(__k);&#32;}
408 
415 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
416 &#32;&#32;comp_ellint_2l(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__k)
417 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_2&lt;long&#32;double&gt;(__k);&#32;}
418 
436 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
437 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
438 &#32;&#32;&#32;&#32;comp_ellint_2(_Tp&#32;__k)
439 &#32;&#32;&#32;&#32;{
440 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
441 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_2&lt;__type&gt;(__k);
442 &#32;&#32;&#32;&#32;}
443 
444 &#32;&#32;<emphasis role="comment">//&#32;Complete&#32;elliptic&#32;integrals&#32;of&#32;the&#32;third&#32;kind</emphasis>
445 
452 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
453 &#32;&#32;comp_ellint_3f(<emphasis role="keywordtype">float</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__nu)
454 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_3&lt;float&gt;(__k,&#32;__nu);&#32;}
455 
462 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
463 &#32;&#32;comp_ellint_3l(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__nu)
464 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_3&lt;long&#32;double&gt;(__k,&#32;__nu);&#32;}
465 
487 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpn&gt;
488 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tp,&#32;_Tpn&gt;::__type
489 &#32;&#32;&#32;&#32;comp_ellint_3(_Tp&#32;__k,&#32;_Tpn&#32;__nu)
490 &#32;&#32;&#32;&#32;{
491 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tp,&#32;_Tpn&gt;::__type&#32;__type;
492 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__comp_ellint_3&lt;__type&gt;(__k,&#32;__nu);
493 &#32;&#32;&#32;&#32;}
494 
495 &#32;&#32;<emphasis role="comment">//&#32;Regular&#32;modified&#32;cylindrical&#32;Bessel&#32;functions</emphasis>
496 
503 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
504 &#32;&#32;cyl_bessel_if(<emphasis role="keywordtype">float</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
505 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_i&lt;float&gt;(__nu,&#32;__x);&#32;}
506 
513 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
514 &#32;&#32;cyl_bessel_il(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
515 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_i&lt;long&#32;double&gt;(__nu,&#32;__x);&#32;}
516 
533 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpnu,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
534 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type
535 &#32;&#32;&#32;&#32;cyl_bessel_i(_Tpnu&#32;__nu,&#32;_Tp&#32;__x)
536 &#32;&#32;&#32;&#32;{
537 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type&#32;__type;
538 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_i&lt;__type&gt;(__nu,&#32;__x);
539 &#32;&#32;&#32;&#32;}
540 
541 &#32;&#32;<emphasis role="comment">//&#32;Cylindrical&#32;Bessel&#32;functions&#32;(of&#32;the&#32;first&#32;kind)</emphasis>
542 
549 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
550 &#32;&#32;cyl_bessel_jf(<emphasis role="keywordtype">float</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
551 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_j&lt;float&gt;(__nu,&#32;__x);&#32;}
552 
559 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
560 &#32;&#32;cyl_bessel_jl(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
561 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_j&lt;long&#32;double&gt;(__nu,&#32;__x);&#32;}
562 
579 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpnu,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
580 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type
581 &#32;&#32;&#32;&#32;cyl_bessel_j(_Tpnu&#32;__nu,&#32;_Tp&#32;__x)
582 &#32;&#32;&#32;&#32;{
583 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type&#32;__type;
584 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_j&lt;__type&gt;(__nu,&#32;__x);
585 &#32;&#32;&#32;&#32;}
586 
587 &#32;&#32;<emphasis role="comment">//&#32;Irregular&#32;modified&#32;cylindrical&#32;Bessel&#32;functions</emphasis>
588 
595 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
596 &#32;&#32;cyl_bessel_kf(<emphasis role="keywordtype">float</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
597 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_k&lt;float&gt;(__nu,&#32;__x);&#32;}
598 
605 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
606 &#32;&#32;cyl_bessel_kl(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
607 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_k&lt;long&#32;double&gt;(__nu,&#32;__x);&#32;}
608 
631 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpnu,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
632 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type
633 &#32;&#32;&#32;&#32;cyl_bessel_k(_Tpnu&#32;__nu,&#32;_Tp&#32;__x)
634 &#32;&#32;&#32;&#32;{
635 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type&#32;__type;
636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_bessel_k&lt;__type&gt;(__nu,&#32;__x);
637 &#32;&#32;&#32;&#32;}
638 
639 &#32;&#32;<emphasis role="comment">//&#32;Cylindrical&#32;Neumann&#32;functions</emphasis>
640 
647 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
648 &#32;&#32;cyl_neumannf(<emphasis role="keywordtype">float</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
649 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_neumann_n&lt;float&gt;(__nu,&#32;__x);&#32;}
650 
657 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
658 &#32;&#32;cyl_neumannl(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
659 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_neumann_n&lt;long&#32;double&gt;(__nu,&#32;__x);&#32;}
660 
679 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpnu,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
680 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type
681 &#32;&#32;&#32;&#32;cyl_neumann(_Tpnu&#32;__nu,&#32;_Tp&#32;__x)
682 &#32;&#32;&#32;&#32;{
683 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tpnu,&#32;_Tp&gt;::__type&#32;__type;
684 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__cyl_neumann_n&lt;__type&gt;(__nu,&#32;__x);
685 &#32;&#32;&#32;&#32;}
686 
687 &#32;&#32;<emphasis role="comment">//&#32;Incomplete&#32;elliptic&#32;integrals&#32;of&#32;the&#32;first&#32;kind</emphasis>
688 
695 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
696 &#32;&#32;ellint_1f(<emphasis role="keywordtype">float</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__phi)
697 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_1&lt;float&gt;(__k,&#32;__phi);&#32;}
698 
705 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
706 &#32;&#32;ellint_1l(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__phi)
707 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_1&lt;long&#32;double&gt;(__k,&#32;__phi);&#32;}
708 
727 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpp&gt;
728 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tp,&#32;_Tpp&gt;::__type
729 &#32;&#32;&#32;&#32;ellint_1(_Tp&#32;__k,&#32;_Tpp&#32;__phi)
730 &#32;&#32;&#32;&#32;{
731 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tp,&#32;_Tpp&gt;::__type&#32;__type;
732 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_1&lt;__type&gt;(__k,&#32;__phi);
733 &#32;&#32;&#32;&#32;}
734 
735 &#32;&#32;<emphasis role="comment">//&#32;Incomplete&#32;elliptic&#32;integrals&#32;of&#32;the&#32;second&#32;kind</emphasis>
736 
743 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
744 &#32;&#32;ellint_2f(<emphasis role="keywordtype">float</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__phi)
745 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_2&lt;float&gt;(__k,&#32;__phi);&#32;}
746 
753 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
754 &#32;&#32;ellint_2l(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__phi)
755 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_2&lt;long&#32;double&gt;(__k,&#32;__phi);&#32;}
756 
775 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpp&gt;
776 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tp,&#32;_Tpp&gt;::__type
777 &#32;&#32;&#32;&#32;ellint_2(_Tp&#32;__k,&#32;_Tpp&#32;__phi)
778 &#32;&#32;&#32;&#32;{
779 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_2&lt;_Tp,&#32;_Tpp&gt;::__type&#32;__type;
780 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_2&lt;__type&gt;(__k,&#32;__phi);
781 &#32;&#32;&#32;&#32;}
782 
783 &#32;&#32;<emphasis role="comment">//&#32;Incomplete&#32;elliptic&#32;integrals&#32;of&#32;the&#32;third&#32;kind</emphasis>
784 
791 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
792 &#32;&#32;ellint_3f(<emphasis role="keywordtype">float</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__phi)
793 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_3&lt;float&gt;(__k,&#32;__nu,&#32;__phi);&#32;}
794 
801 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
802 &#32;&#32;ellint_3l(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__k,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__nu,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__phi)
803 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_3&lt;long&#32;double&gt;(__k,&#32;__nu,&#32;__phi);&#32;}
804 
828 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpn,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpp&gt;
829 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_3&lt;_Tp,&#32;_Tpn,&#32;_Tpp&gt;::__type
830 &#32;&#32;&#32;&#32;ellint_3(_Tp&#32;__k,&#32;_Tpn&#32;__nu,&#32;_Tpp&#32;__phi)
831 &#32;&#32;&#32;&#32;{
832 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_3&lt;_Tp,&#32;_Tpn,&#32;_Tpp&gt;::__type&#32;__type;
833 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__ellint_3&lt;__type&gt;(__k,&#32;__nu,&#32;__phi);
834 &#32;&#32;&#32;&#32;}
835 
836 &#32;&#32;<emphasis role="comment">//&#32;Exponential&#32;integrals</emphasis>
837 
843 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
844 &#32;&#32;expintf(<emphasis role="keywordtype">float</emphasis>&#32;__x)
845 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__expint&lt;float&gt;(__x);&#32;}
846 
853 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
854 &#32;&#32;expintl(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
855 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__expint&lt;long&#32;double&gt;(__x);&#32;}
856 
868 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
869 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
870 &#32;&#32;&#32;&#32;expint(_Tp&#32;__x)
871 &#32;&#32;&#32;&#32;{
872 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
873 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__expint&lt;__type&gt;(__x);
874 &#32;&#32;&#32;&#32;}
875 
876 &#32;&#32;<emphasis role="comment">//&#32;Hermite&#32;polynomials</emphasis>
877 
884 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
885 &#32;&#32;hermitef(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
886 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__poly_hermite&lt;float&gt;(__n,&#32;__x);&#32;}
887 
894 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
895 &#32;&#32;hermitel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
896 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__poly_hermite&lt;long&#32;double&gt;(__n,&#32;__x);&#32;}
897 
916 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
917 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
918 &#32;&#32;&#32;&#32;<link linkend="_namespacehermite">hermite</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;_Tp&#32;__x)
919 &#32;&#32;&#32;&#32;{
920 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
921 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__poly_hermite&lt;__type&gt;(__n,&#32;__x);
922 &#32;&#32;&#32;&#32;}
923 
924 &#32;&#32;<emphasis role="comment">//&#32;Laguerre&#32;polynomials</emphasis>
925 
932 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
933 &#32;&#32;laguerref(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
934 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__laguerre&lt;float&gt;(__n,&#32;__x);&#32;}
935 
942 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
943 &#32;&#32;laguerrel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
944 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__laguerre&lt;long&#32;double&gt;(__n,&#32;__x);&#32;}
945 
960 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
961 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
962 &#32;&#32;&#32;&#32;laguerre(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;_Tp&#32;__x)
963 &#32;&#32;&#32;&#32;{
964 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
965 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__laguerre&lt;__type&gt;(__n,&#32;__x);
966 &#32;&#32;&#32;&#32;}
967 
968 &#32;&#32;<emphasis role="comment">//&#32;Legendre&#32;polynomials</emphasis>
969 
976 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
977 &#32;&#32;legendref(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
978 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__poly_legendre_p&lt;float&gt;(__l,&#32;__x);&#32;}
979 
986 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
987 &#32;&#32;legendrel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
988 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__poly_legendre_p&lt;long&#32;double&gt;(__l,&#32;__x);&#32;}
989 
1005 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1006 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1007 &#32;&#32;&#32;&#32;legendre(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;_Tp&#32;__x)
1008 &#32;&#32;&#32;&#32;{
1009 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1010 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__poly_legendre_p&lt;__type&gt;(__l,&#32;__x);
1011 &#32;&#32;&#32;&#32;}
1012 
1013 &#32;&#32;<emphasis role="comment">//&#32;Riemann&#32;zeta&#32;functions</emphasis>
1014 
1021 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1022 &#32;&#32;riemann_zetaf(<emphasis role="keywordtype">float</emphasis>&#32;__s)
1023 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__riemann_zeta&lt;float&gt;(__s);&#32;}
1024 
1031 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1032 &#32;&#32;riemann_zetal(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__s)
1033 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__riemann_zeta&lt;long&#32;double&gt;(__s);&#32;}
1034 
1056 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1057 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1058 &#32;&#32;&#32;&#32;riemann_zeta(_Tp&#32;__s)
1059 &#32;&#32;&#32;&#32;{
1060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__riemann_zeta&lt;__type&gt;(__s);
1062 &#32;&#32;&#32;&#32;}
1063 
1064 &#32;&#32;<emphasis role="comment">//&#32;Spherical&#32;Bessel&#32;functions</emphasis>
1065 
1072 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1073 &#32;&#32;sph_besself(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
1074 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_bessel&lt;float&gt;(__n,&#32;__x);&#32;}
1075 
1082 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1083 &#32;&#32;sph_bessell(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
1084 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_bessel&lt;long&#32;double&gt;(__n,&#32;__x);&#32;}
1085 
1100 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1101 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1102 &#32;&#32;&#32;&#32;sph_bessel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;_Tp&#32;__x)
1103 &#32;&#32;&#32;&#32;{
1104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_bessel&lt;__type&gt;(__n,&#32;__x);
1106 &#32;&#32;&#32;&#32;}
1107 
1108 &#32;&#32;<emphasis role="comment">//&#32;Spherical&#32;associated&#32;Legendre&#32;functions</emphasis>
1109 
1116 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1117 &#32;&#32;sph_legendref(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__theta)
1118 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_legendre&lt;float&gt;(__l,&#32;__m,&#32;__theta);&#32;}
1119 
1127 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1128 &#32;&#32;sph_legendrel(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__theta)
1129 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_legendre&lt;long&#32;double&gt;(__l,&#32;__m,&#32;__theta);&#32;}
1130 
1147 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1148 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1149 &#32;&#32;&#32;&#32;sph_legendre(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__l,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__m,&#32;_Tp&#32;__theta)
1150 &#32;&#32;&#32;&#32;{
1151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_legendre&lt;__type&gt;(__l,&#32;__m,&#32;__theta);
1153 &#32;&#32;&#32;&#32;}
1154 
1155 &#32;&#32;<emphasis role="comment">//&#32;Spherical&#32;Neumann&#32;functions</emphasis>
1156 
1163 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1164 &#32;&#32;sph_neumannf(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
1165 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_neumann&lt;float&gt;(__n,&#32;__x);&#32;}
1166 
1173 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1174 &#32;&#32;sph_neumannl(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
1175 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_neumann&lt;long&#32;double&gt;(__n,&#32;__x);&#32;}
1176 
1191 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1192 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1193 &#32;&#32;&#32;&#32;sph_neumann(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;_Tp&#32;__x)
1194 &#32;&#32;&#32;&#32;{
1195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1196 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__detail::__sph_neumann&lt;__type&gt;(__n,&#32;__x);
1197 &#32;&#32;&#32;&#32;}
1198 
1200 
1201 _GLIBCXX_END_NAMESPACE_VERSION
1202 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
1203 
1204 <emphasis role="preprocessor">#ifndef&#32;__STRICT_ANSI__</emphasis>
1205 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
1206 {
1207 _GLIBCXX_BEGIN_NAMESPACE_VERSION
1208 
1213 &#32;&#32;<emphasis role="comment">//&#32;Airy&#32;functions</emphasis>
1214 
1218 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1219 &#32;&#32;airy_aif(<emphasis role="keywordtype">float</emphasis>&#32;__x)
1220 &#32;&#32;{
1221 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip;
1222 &#32;&#32;&#32;&#32;std::__detail::__airy&lt;float&gt;(__x,&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip);
1223 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__Ai;
1224 &#32;&#32;}
1225 
1229 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1230 &#32;&#32;airy_ail(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
1231 &#32;&#32;{
1232 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip;
1233 &#32;&#32;&#32;&#32;std::__detail::__airy&lt;long&#32;double&gt;(__x,&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip);
1234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__Ai;
1235 &#32;&#32;}
1236 
1240 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1241 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1242 &#32;&#32;&#32;&#32;airy_ai(_Tp&#32;__x)
1243 &#32;&#32;&#32;&#32;{
1244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1245 &#32;&#32;&#32;&#32;&#32;&#32;__type&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip;
1246 &#32;&#32;&#32;&#32;&#32;&#32;std::__detail::__airy&lt;__type&gt;(__x,&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip);
1247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__Ai;
1248 &#32;&#32;&#32;&#32;}
1249 
1253 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1254 &#32;&#32;airy_bif(<emphasis role="keywordtype">float</emphasis>&#32;__x)
1255 &#32;&#32;{
1256 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip;
1257 &#32;&#32;&#32;&#32;std::__detail::__airy&lt;float&gt;(__x,&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip);
1258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__Bi;
1259 &#32;&#32;}
1260 
1264 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1265 &#32;&#32;airy_bil(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
1266 &#32;&#32;{
1267 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip;
1268 &#32;&#32;&#32;&#32;std::__detail::__airy&lt;long&#32;double&gt;(__x,&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip);
1269 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__Bi;
1270 &#32;&#32;}
1271 
1275 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1276 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type
1277 &#32;&#32;&#32;&#32;airy_bi(_Tp&#32;__x)
1278 &#32;&#32;&#32;&#32;{
1279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote&lt;_Tp&gt;::__type&#32;__type;
1280 &#32;&#32;&#32;&#32;&#32;&#32;__type&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip;
1281 &#32;&#32;&#32;&#32;&#32;&#32;std::__detail::__airy&lt;__type&gt;(__x,&#32;__Ai,&#32;__Bi,&#32;__Aip,&#32;__Bip);
1282 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__Bi;
1283 &#32;&#32;&#32;&#32;}
1284 
1285 &#32;&#32;<emphasis role="comment">//&#32;Confluent&#32;hypergeometric&#32;functions</emphasis>
1286 
1294 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1295 &#32;&#32;conf_hypergf(<emphasis role="keywordtype">float</emphasis>&#32;__a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__c,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
1296 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::__detail::__conf_hyperg&lt;float&gt;(__a,&#32;__c,&#32;__x);&#32;}
1297 
1305 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1306 &#32;&#32;conf_hypergl(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__a,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__c,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
1307 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::__detail::__conf_hyperg&lt;long&#32;double&gt;(__a,&#32;__c,&#32;__x);&#32;}
1308 
1325 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpa,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpc,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1326 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_3&lt;_Tpa,&#32;_Tpc,&#32;_Tp&gt;::__type
1327 &#32;&#32;&#32;&#32;conf_hyperg(_Tpa&#32;__a,&#32;_Tpc&#32;__c,&#32;_Tp&#32;__x)
1328 &#32;&#32;&#32;&#32;{
1329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_3&lt;_Tpa,&#32;_Tpc,&#32;_Tp&gt;::__type&#32;__type;
1330 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::__detail::__conf_hyperg&lt;__type&gt;(__a,&#32;__c,&#32;__x);
1331 &#32;&#32;&#32;&#32;}
1332 
1333 &#32;&#32;<emphasis role="comment">//&#32;Hypergeometric&#32;functions</emphasis>
1334 
1342 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
1343 &#32;&#32;hypergf(<emphasis role="keywordtype">float</emphasis>&#32;__a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__b,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__c,&#32;<emphasis role="keywordtype">float</emphasis>&#32;__x)
1344 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::__detail::__hyperg&lt;float&gt;(__a,&#32;__b,&#32;__c,&#32;__x);&#32;}
1345 
1353 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
1354 &#32;&#32;hypergl(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__a,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__b,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__c,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__x)
1355 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::__detail::__hyperg&lt;long&#32;double&gt;(__a,&#32;__b,&#32;__c,&#32;__x);&#32;}
1356 
1374 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tpa,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpb,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tpc,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
1375 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_4&lt;_Tpa,&#32;_Tpb,&#32;_Tpc,&#32;_Tp&gt;::__type
1376 &#32;&#32;&#32;&#32;hyperg(_Tpa&#32;__a,&#32;_Tpb&#32;__b,&#32;_Tpc&#32;__c,&#32;_Tp&#32;__x)
1377 &#32;&#32;&#32;&#32;{
1378 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__promote_4&lt;_Tpa,&#32;_Tpb,&#32;_Tpc,&#32;_Tp&gt;
1379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::__type&#32;__type;
1380 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::__detail::__hyperg&lt;__type&gt;(__a,&#32;__b,&#32;__c,&#32;__x);
1381 &#32;&#32;&#32;&#32;}
1382 
1384 _GLIBCXX_END_NAMESPACE_VERSION
1385 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_cxx</emphasis>
1386 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__STRICT_ANSI__</emphasis>
1387 
1388 <emphasis role="preprocessor">#pragma&#32;GCC&#32;visibility&#32;pop</emphasis>
1389 
1390 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_BITS_SPECFUN_H</emphasis>
</programlisting></section>
