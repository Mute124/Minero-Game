<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structlest_1_1times" xml:lang="en-US">
<title>lest::times Struct Reference</title>
<indexterm><primary>lest::times</primary></indexterm>
<para>
<computeroutput>#include &lt;lest.hpp&gt;</computeroutput>
</para>
Inheritance diagram for lest::times:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for lest::times:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structlest_1_1times_1ac4dcfb73b28a33a856fa56689b8bbaf5">times</link> (std::ostream &amp;out, <link linkend="_structlest_1_1options">options</link> <link linkend="_structoption">option</link>)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1a081f7e2b4978e8377bd9acf3212764cf">operator int</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structlest_1_1times_1a0237eefebdb6b13e3d051b2bb3beb4d5">abort</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times">times</link> &amp; <link linkend="_structlest_1_1times_1a7b631f195a9b161297af14abfad41477">operator()</link> (<link linkend="_structlest_1_1test">test</link> testing)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1a598c6b8fb215e97bc84736a36ce34368">~times</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1ac4dcfb73b28a33a856fa56689b8bbaf5">times</link> (std::ostream &amp;out, <link linkend="_structlest_1_1options">options</link> <link linkend="_structoption">option</link>)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1a081f7e2b4978e8377bd9acf3212764cf">operator int</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structlest_1_1times_1a0237eefebdb6b13e3d051b2bb3beb4d5">abort</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times">times</link> &amp; <link linkend="_structlest_1_1times_1a7b631f195a9b161297af14abfad41477">operator()</link> (<link linkend="_structlest_1_1test">test</link> testing)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1a598c6b8fb215e97bc84736a36ce34368">~times</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1ac4dcfb73b28a33a856fa56689b8bbaf5">times</link> (std::ostream &amp;out, <link linkend="_structlest_1_1options">options</link> <link linkend="_structoption">option</link>)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1a081f7e2b4978e8377bd9acf3212764cf">operator int</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structlest_1_1times_1a0237eefebdb6b13e3d051b2bb3beb4d5">abort</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times">times</link> &amp; <link linkend="_structlest_1_1times_1a7b631f195a9b161297af14abfad41477">operator()</link> (<link linkend="_structlest_1_1test">test</link> testing)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1times_1a598c6b8fb215e97bc84736a36ce34368">~times</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_structlest_1_1action">lest::action</link>        <itemizedlist>
            <listitem><para><link linkend="_structlest_1_1action_1a26dd3532451b8379e3fdae0322f9fa24">action</link> (std::ostream &amp;out)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a4a2d394df0468745e1af1a8148120a3f">action</link> (<link linkend="_structlest_1_1action">action</link> const &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structlest_1_1action_1ad0cac06eb5056275f05043160fd87bbc">operator=</link> (<link linkend="_structlest_1_1action">action</link> const &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a339dd1f386c4e9bd7a46dfe989d71871">operator int</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structlest_1_1action_1a957cc5cd7576993da4360111199dd153">abort</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action">action</link> &amp; <link linkend="_structlest_1_1action_1a59c0d9eee60f4bfe92483d3209d131a9">operator()</link> (<link linkend="_structlest_1_1test">test</link>)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a26dd3532451b8379e3fdae0322f9fa24">action</link> (std::ostream &amp;out)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a4a2d394df0468745e1af1a8148120a3f">action</link> (<link linkend="_structlest_1_1action">action</link> const &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structlest_1_1action_1ad0cac06eb5056275f05043160fd87bbc">operator=</link> (<link linkend="_structlest_1_1action">action</link> const &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a339dd1f386c4e9bd7a46dfe989d71871">operator int</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structlest_1_1action_1a957cc5cd7576993da4360111199dd153">abort</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action">action</link> &amp; <link linkend="_structlest_1_1action_1a59c0d9eee60f4bfe92483d3209d131a9">operator()</link> (<link linkend="_structlest_1_1test">test</link>)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a26dd3532451b8379e3fdae0322f9fa24">action</link> (std::ostream &amp;out)</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a4a2d394df0468745e1af1a8148120a3f">action</link> (<link linkend="_structlest_1_1action">action</link> const &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structlest_1_1action_1ad0cac06eb5056275f05043160fd87bbc">operator=</link> (<link linkend="_structlest_1_1action">action</link> const &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action_1a339dd1f386c4e9bd7a46dfe989d71871">operator int</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structlest_1_1action_1a957cc5cd7576993da4360111199dd153">abort</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1action">action</link> &amp; <link linkend="_structlest_1_1action_1a59c0d9eee60f4bfe92483d3209d131a9">operator()</link> (<link linkend="_structlest_1_1test">test</link>)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structlest_1_1env">env</link> <link linkend="_structlest_1_1times_1ad32ab8259b621f76a357fdf73e00f272">output</link></para>
</listitem>
            <listitem><para>int <link linkend="_structlest_1_1times_1af427951e2346a2479ae7c794cd243d92">selected</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_structlest_1_1times_1a5d2aa2472413cba0fdb5d3882de37d93">failures</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_structlest_1_1timer">timer</link> <link linkend="_structlest_1_1times_1a0d7bbf065dfbac9033a7f765af5a832b">total</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_structlest_1_1action">lest::action</link>        <itemizedlist>
            <listitem><para>std::ostream &amp; <link linkend="_structlest_1_1action_1a9d43daaa10087b8afc1b2d5be5cea14f">os</link></para>
</listitem>
        </itemizedlist>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structlest_1_1times_1ac4dcfb73b28a33a856fa56689b8bbaf5"/><section>
    <title>times()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>times</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>times</secondary></indexterm>
<para><computeroutput>lest::times::times (std::ostream &amp; out, <link linkend="_structlest_1_1options">options</link> option)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a598c6b8fb215e97bc84736a36ce34368"/><section>
    <title>~times()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~times</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>~times</secondary></indexterm>
<para><computeroutput>lest::times::~times ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a598c6b8fb215e97bc84736a36ce34368_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structlest_1_1times_1ac4dcfb73b28a33a856fa56689b8bbaf5"/><section>
    <title>times()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>times</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>times</secondary></indexterm>
<para><computeroutput>lest::times::times (std::ostream &amp; out, <link linkend="_structlest_1_1options">options</link> option)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a598c6b8fb215e97bc84736a36ce34368"/><section>
    <title>~times()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~times</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>~times</secondary></indexterm>
<para><computeroutput>lest::times::~times ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a598c6b8fb215e97bc84736a36ce34368_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structlest_1_1times_1ac4dcfb73b28a33a856fa56689b8bbaf5"/><section>
    <title>times()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>times</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>times</secondary></indexterm>
<para><computeroutput>lest::times::times (std::ostream &amp; out, <link linkend="_structlest_1_1options">options</link> option)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a598c6b8fb215e97bc84736a36ce34368"/><section>
    <title>~times()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~times</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>~times</secondary></indexterm>
<para><computeroutput>lest::times::~times ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a598c6b8fb215e97bc84736a36ce34368_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structlest_1_1times_1a0237eefebdb6b13e3d051b2bb3beb4d5"/><section>
    <title>abort()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>abort</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>abort</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> lest::times::abort ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a0237eefebdb6b13e3d051b2bb3beb4d5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structlest_1_1times_1a0237eefebdb6b13e3d051b2bb3beb4d5"/><section>
    <title>abort()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>abort</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>abort</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> lest::times::abort ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a0237eefebdb6b13e3d051b2bb3beb4d5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structlest_1_1times_1a0237eefebdb6b13e3d051b2bb3beb4d5"/><section>
    <title>abort()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>abort</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>abort</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> lest::times::abort ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a0237eefebdb6b13e3d051b2bb3beb4d5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structlest_1_1times_1a081f7e2b4978e8377bd9acf3212764cf"/><section>
    <title>operator int()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator int</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>operator int</secondary></indexterm>
<para><computeroutput>lest::times::operator int ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a081f7e2b4978e8377bd9acf3212764cf"/><section>
    <title>operator int()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator int</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>operator int</secondary></indexterm>
<para><computeroutput>lest::times::operator int ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a081f7e2b4978e8377bd9acf3212764cf"/><section>
    <title>operator int()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator int</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>operator int</secondary></indexterm>
<para><computeroutput>lest::times::operator int ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a7b631f195a9b161297af14abfad41477"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="_structlest_1_1times">times</link> &amp; lest::times::operator() (<link linkend="_structlest_1_1test">test</link> testing)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structlest_1_1times_a7b631f195a9b161297af14abfad41477_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structlest_1_1times_1a7b631f195a9b161297af14abfad41477"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="_structlest_1_1times">times</link> &amp; lest::times::operator() (<link linkend="_structlest_1_1test">test</link> testing)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a7b631f195a9b161297af14abfad41477"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="_structlest_1_1times">times</link> &amp; lest::times::operator() (<link linkend="_structlest_1_1test">test</link> testing)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structlest_1_1times_1a5d2aa2472413cba0fdb5d3882de37d93"/><section>
    <title>failures</title>
<indexterm><primary>failures</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>failures</secondary></indexterm>
<para><computeroutput>int lest::times::failures = 0</computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1ad32ab8259b621f76a357fdf73e00f272"/><section>
    <title>output</title>
<indexterm><primary>output</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>output</secondary></indexterm>
<para><computeroutput><link linkend="_structlest_1_1env">env</link> lest::times::output</computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1af427951e2346a2479ae7c794cd243d92"/><section>
    <title>selected</title>
<indexterm><primary>selected</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>selected</secondary></indexterm>
<para><computeroutput>int lest::times::selected = 0</computeroutput></para></section>
<anchor xml:id="_structlest_1_1times_1a0d7bbf065dfbac9033a7f765af5a832b"/><section>
    <title>total</title>
<indexterm><primary>total</primary><secondary>lest::times</secondary></indexterm>
<indexterm><primary>lest::times</primary><secondary>total</secondary></indexterm>
<para><computeroutput><link linkend="_structlest_1_1timer">timer</link> lest::times::total</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/mINI-master/tests/lest/<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2lest_2lest_8hpp">lest.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/mINI-master/tests/lest/<link linkend="_lib_2m_i_n_i-master_2tests_2lest_2lest_8hpp">lest.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/mINI-master/tests/lest/<link linkend="__old_2_classes_2lib_2m_i_n_i-master_2tests_2lest_2lest_8hpp">lest.hpp</link></section>
</section>
