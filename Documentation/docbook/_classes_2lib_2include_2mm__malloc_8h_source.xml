<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2mm__malloc_8h_source" xml:lang="en-US">
<title>mm_malloc.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/mm_malloc.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2004-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#ifndef&#32;_MM_MALLOC_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#define&#32;_MM_MALLOC_H_INCLUDED</emphasis>
26 
27 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
28 <emphasis role="preprocessor">#if&#32;__STDC_HOSTED__</emphasis>
29 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
30 <emphasis role="preprocessor">#endif</emphasis>
31 
32 <emphasis role="keyword">static</emphasis>&#32;__inline__&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;
33 _mm_malloc&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__size,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__align)
34 {
35 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;__malloc_ptr;
36 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;__aligned_ptr;
37 
38 &#32;&#32;<emphasis role="comment">/*&#32;Error&#32;if&#32;align&#32;is&#32;not&#32;a&#32;power&#32;of&#32;two.&#32;&#32;*/</emphasis>
39 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__align&#32;&amp;&#32;(__align&#32;-&#32;1))
40 &#32;&#32;&#32;&#32;{
41 <emphasis role="preprocessor">#if&#32;__STDC_HOSTED__</emphasis>
42 &#32;&#32;&#32;&#32;&#32;&#32;errno&#32;=&#32;EINVAL;
43 <emphasis role="preprocessor">#endif</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;0);
45 &#32;&#32;&#32;&#32;}
46 
47 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__size&#32;==&#32;0)
48 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;0);
49 
50 &#32;<emphasis role="comment">/*&#32;Assume&#32;malloc&apos;d&#32;pointer&#32;is&#32;aligned&#32;at&#32;least&#32;to&#32;sizeof&#32;(void*).</emphasis>
51 <emphasis role="comment">&#32;&#32;&#32;&#32;If&#32;necessary,&#32;add&#32;another&#32;sizeof&#32;(void*)&#32;to&#32;store&#32;the&#32;value</emphasis>
52 <emphasis role="comment">&#32;&#32;&#32;&#32;returned&#32;by&#32;malloc.&#32;Effectively&#32;this&#32;enforces&#32;a&#32;minimum&#32;alignment</emphasis>
53 <emphasis role="comment">&#32;&#32;&#32;&#32;of&#32;sizeof&#32;double.&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;
54 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__align&#32;&lt;&#32;2&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*))
55 &#32;&#32;&#32;&#32;&#32;&#32;__align&#32;=&#32;2&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*);
56 
57 &#32;&#32;__malloc_ptr&#32;=&#32;malloc&#32;(__size&#32;+&#32;__align);
58 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__malloc_ptr)
59 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;0);
60 
61 &#32;&#32;<emphasis role="comment">/*&#32;Align&#32;&#32;We&#32;have&#32;at&#32;least&#32;sizeof&#32;(void&#32;*)&#32;space&#32;below&#32;malloc&apos;d&#32;ptr.&#32;*/</emphasis>
62 &#32;&#32;__aligned_ptr&#32;=&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;(((<emphasis role="keywordtype">size_t</emphasis>)&#32;__malloc_ptr&#32;+&#32;__align)
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&#32;~((<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)&#32;(__align)&#32;-&#32;1));
64 
65 &#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;original&#32;pointer&#32;just&#32;before&#32;p.&#32;&#32;*/</emphasis>&#32;&#32;
66 &#32;&#32;((<emphasis role="keywordtype">void</emphasis>&#32;**)&#32;__aligned_ptr)[-1]&#32;=&#32;__malloc_ptr;
67 
68 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__aligned_ptr;
69 }
70 
71 <emphasis role="keyword">static</emphasis>&#32;__inline__&#32;<emphasis role="keywordtype">void</emphasis>
72 _mm_free&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__aligned_ptr)
73 {
74 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__aligned_ptr)
75 &#32;&#32;&#32;&#32;free&#32;(((<emphasis role="keywordtype">void</emphasis>&#32;**)&#32;__aligned_ptr)[-1]);
76 }
77 
78 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_MM_MALLOC_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
