<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2vstring_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/vstring.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/vstring.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;ext/vstring_util.h&gt;<?linebreak?>#include &lt;ext/rc_string_base.h&gt;<?linebreak?>#include &lt;ext/sso_string_base.h&gt;<?linebreak?>#include &lt;bits/stl_algobase.h&gt;<?linebreak?>#include &lt;ext/vstring.tcc&gt;<?linebreak?></programlisting>Include dependency graph for vstring.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2ext_2vstring_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>namespace std <link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2vstring_8h_1a544d74b2d5d0dd2197f5fd6f02691de0">_GLIBCXX_VISIBILITY</link> (default)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2vstring_8h_1a544d74b2d5d0dd2197f5fd6f02691de0"/><section>
    <title>_GLIBCXX_VISIBILITY()</title>
<indexterm><primary>_GLIBCXX_VISIBILITY</primary><secondary>vstring.h</secondary></indexterm>
<indexterm><primary>vstring.h</primary><secondary>_GLIBCXX_VISIBILITY</secondary></indexterm>
<para><computeroutput>namespace std _GLIBCXX_VISIBILITY (default )</computeroutput></para>
<para>Read stream into a string. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__is</entry><entry>
<para>Input stream. </para>
</entry>
                            </row>
                            <row>
<entry>__str</entry><entry>
<para>Buffer to store into. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Reference to the input stream.</para>
</formalpara>
Stores characters from <emphasis>__is</emphasis> into <emphasis>__str</emphasis> until whitespace is found, the end of the stream is encountered, or str.max_size() is reached. If is.width() is non-zero, that is the limit on the number of characters stored into <emphasis>__str</emphasis>. Any previous contents of <emphasis>__str</emphasis> are erased.</para>

<para>Write string to a stream. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__os</entry><entry>
<para>Output stream. </para>
</entry>
                            </row>
                            <row>
<entry>__str</entry><entry>
<para>String to write out. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Reference to the output stream.</para>
</formalpara>
Output characters of <emphasis>__str</emphasis> into os following the same rules as for writing a C string.</para>

<para>Read a line from stream into a string. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__is</entry><entry>
<para>Input stream. </para>
</entry>
                            </row>
                            <row>
<entry>__str</entry><entry>
<para>Buffer to store into. </para>
</entry>
                            </row>
                            <row>
<entry>__delim</entry><entry>
<para>Character marking end of line. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Reference to the input stream.</para>
</formalpara>
Stores characters from <emphasis>__is</emphasis> into <emphasis>__str</emphasis> until <emphasis>__delim</emphasis> is found, the end of the stream is encountered, or str.max_size() is reached. If is.width() is non-zero, that is the limit on the number of characters stored into <emphasis>__str</emphasis>. Any previous contents of <emphasis>__str</emphasis> are erased. If <emphasis>delim</emphasis> was encountered, it is extracted but not stored into <emphasis>__str</emphasis>.</para>

<para>Read a line from stream into a string. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__is</entry><entry>
<para>Input stream. </para>
</entry>
                            </row>
                            <row>
<entry>__str</entry><entry>
<para>Buffer to store into. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Reference to the input stream.</para>
</formalpara>
Stores characters from is into <emphasis>__str</emphasis> until &apos;<?linebreak?>&apos; is found, the end of the stream is encountered, or str.max_size() is reached. If is.width() is non-zero, that is the limit on the number of characters stored into <emphasis>__str</emphasis>. Any previous contents of <emphasis>__str</emphasis> are erased. If end of line was encountered, it is extracted but not stored into <emphasis>__str</emphasis>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2ext_2vstring_8h_a544d74b2d5d0dd2197f5fd6f02691de0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
