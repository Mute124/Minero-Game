<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea" xml:lang="en-US">
<title>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt; Struct Template Reference</title>
<indexterm><primary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a9b043cfe0fdfb3e9665428fb2be9cea1">iterator_category</link> = std::random_access_iterator_tag</para>
</listitem>
            <listitem><para>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a443e6a62f5fb2c545fc71c751b98ca8d">value_type</link> = T</para>
</listitem>
            <listitem><para>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1ae7be99eb434f5b5f34692874c272b759">difference_type</link> = <link linkend="__classes_2lib_2include_2stddef_8h_1a6d26a0475a6d6c897e655cdc5d8019d2">ptrdiff_t</link></para>
</listitem>
            <listitem><para>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a33ee9a1beb8ee099f989fd4af15178a5">pointer</link> = T *</para>
</listitem>
            <listitem><para>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a0809c5949d22f08a993231d2fdf285f0">reference</link> = T &amp;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1ae7be99eb434f5b5f34692874c272b759"/><section>
    <title>difference_type</title>
<indexterm><primary>difference_type</primary><secondary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits">nlohmann::detail::iterator_traits</link>&lt; T *, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_object&lt; T &gt;<link linkend="_classvalue">::value</link> &gt; &gt;::difference_type =  <link linkend="__classes_2lib_2include_2stddef_8h_1a6d26a0475a6d6c897e655cdc5d8019d2">ptrdiff_t</link></computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a9b043cfe0fdfb3e9665428fb2be9cea1"/><section>
    <title>iterator_category</title>
<indexterm><primary>iterator_category</primary><secondary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits">nlohmann::detail::iterator_traits</link>&lt; T *, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_object&lt; T &gt;<link linkend="_classvalue">::value</link> &gt; &gt;::iterator_category =  std::random_access_iterator_tag</computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a33ee9a1beb8ee099f989fd4af15178a5"/><section>
    <title>pointer</title>
<indexterm><primary>pointer</primary><secondary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits">nlohmann::detail::iterator_traits</link>&lt; T *, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_object&lt; T &gt;<link linkend="_classvalue">::value</link> &gt; &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> =  T*</computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a0809c5949d22f08a993231d2fdf285f0"/><section>
    <title>reference</title>
<indexterm><primary>reference</primary><secondary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits">nlohmann::detail::iterator_traits</link>&lt; T *, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_object&lt; T &gt;<link linkend="_classvalue">::value</link> &gt; &gt;::reference =  T&amp;</computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea_1a443e6a62f5fb2c545fc71c751b98ca8d"/><section>
    <title>value_type</title>
<indexterm><primary>value_type</primary><secondary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_structnlohmann_1_1detail_1_1iterator__traits">nlohmann::detail::iterator_traits</link>&lt; T *, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_object&lt; T &gt;<link linkend="_classvalue">::value</link> &gt; &gt;::value_type =  T</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_json_8hpp">json.hpp</link></section>
</section>
