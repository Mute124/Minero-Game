<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__cxx_1_1____aligned__membuf" xml:lang="en-US">
<title>__gnu_cxx::__aligned_membuf&lt; _Tp &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;aligned_buffer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1_1___tp2">_Tp2</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de">__aligned_membuf</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363">__aligned_membuf</link> (std::nullptr_t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c">_M_addr</link> () noexcept</para>
</listitem>
            <listitem><para>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce">_M_addr</link> () const noexcept</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9">_M_ptr</link> () noexcept</para>
</listitem>
            <listitem><para>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6">_M_ptr</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de">__aligned_membuf</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363">__aligned_membuf</link> (std::nullptr_t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c">_M_addr</link> () noexcept</para>
</listitem>
            <listitem><para>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce">_M_addr</link> () const noexcept</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9">_M_ptr</link> () noexcept</para>
</listitem>
            <listitem><para>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6">_M_ptr</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de">__aligned_membuf</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363">__aligned_membuf</link> (std::nullptr_t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c">_M_addr</link> () noexcept</para>
</listitem>
            <listitem><para>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce">_M_addr</link> () const noexcept</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9">_M_ptr</link> () noexcept</para>
</listitem>
            <listitem><para>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6">_M_ptr</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>unsigned char <link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1657b40df782c2a2c5d33535fb3f1058">_M_storage</link> [sizeof(_Tp)]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de"/><section>
    <title>__aligned_membuf()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>__aligned_membuf</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>__aligned_membuf</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::__aligned_membuf ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363"/><section>
    <title>__aligned_membuf()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>__aligned_membuf</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>__aligned_membuf</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::__aligned_membuf (std::nullptr_t )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de"/><section>
    <title>__aligned_membuf()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>__aligned_membuf</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>__aligned_membuf</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::__aligned_membuf ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363"/><section>
    <title>__aligned_membuf()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>__aligned_membuf</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>__aligned_membuf</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::__aligned_membuf (std::nullptr_t )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de"/><section>
    <title>__aligned_membuf()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>__aligned_membuf</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>__aligned_membuf</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::__aligned_membuf ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363"/><section>
    <title>__aligned_membuf()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>__aligned_membuf</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>__aligned_membuf</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::__aligned_membuf (std::nullptr_t )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce"/><section>
    <title>_M_addr()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_addr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce"/><section>
    <title>_M_addr()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_addr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce"/><section>
    <title>_M_addr()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_addr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c"/><section>
    <title>_M_addr()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_addr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_a2b9646a5aa6db498e005165d28a7ce6c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c"/><section>
    <title>_M_addr()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_addr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c"/><section>
    <title>_M_addr()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_addr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6"/><section>
    <title>_M_ptr()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_ptr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_ac39a4feffcecdff27c0e11662603e3d6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6"/><section>
    <title>_M_ptr()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_ptr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_ac39a4feffcecdff27c0e11662603e3d6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6"/><section>
    <title>_M_ptr()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_ptr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_ac39a4feffcecdff27c0e11662603e3d6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9"/><section>
    <title>_M_ptr()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_ptr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_a3434c6ec6478f76db116927a26c4fec9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_a3434c6ec6478f76db116927a26c4fec9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9"/><section>
    <title>_M_ptr()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_ptr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_a3434c6ec6478f76db116927a26c4fec9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9"/><section>
    <title>_M_ptr()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_ptr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__membuf_a3434c6ec6478f76db116927a26c4fec9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__membuf_1a1657b40df782c2a2c5d33535fb3f1058"/><section>
    <title>_M_storage</title>
<indexterm><primary>_M_storage</primary><secondary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</primary><secondary>_M_storage</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>unsigned char <link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf</link>&lt; _Tp &gt;::_M_storage</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2aligned__buffer_8h">aligned_buffer.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/<link linkend="_lib_2include_2c_09_09_2ext_2aligned__buffer_8h">aligned_buffer.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2aligned__buffer_8h">aligned_buffer.h</link></section>
</section>
