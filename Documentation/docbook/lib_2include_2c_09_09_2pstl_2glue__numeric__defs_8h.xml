<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2pstl_2glue__numeric__defs_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/glue_numeric_defs.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/glue_numeric_defs.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;execution_defs.h&quot;<?linebreak?></programlisting>Include dependency graph for glue_numeric_defs.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2include_2c_09_09_2pstl_2glue__numeric__defs_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacestd">std</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _Tp , class _BinaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _Tp &gt; <link linkend="_namespacestd_1a8b8d511ebd97a4d4753e9bf015f7d44d">std::reduce</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _Tp &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _Tp &gt; <link linkend="_namespacestd_1a05a85e0c93686270851eb8e1595f1736">std::reduce</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, typename iterator_traits&lt; _ForwardIterator &gt;::value_type &gt; <link linkend="_namespacestd_1a272bfd867dce9fef5466c0b0505dde51">std::reduce</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator __first, _ForwardIterator __last)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _Tp &gt; <link linkend="_namespacestd_1a704ff380cbc127a2f0a5583f1108f015">std::transform_reduce</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation1 , class _BinaryOperation2 &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _Tp &gt; <link linkend="_namespacestd_1ab7b461f1bcd80edda19139acdb6bb1fb">std::transform_reduce</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _Tp , class _BinaryOperation , class _UnaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _Tp &gt; <link linkend="_namespacestd_1ac899f61a65c086a8d00fbb8c5d15b910">std::transform_reduce</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1aac1171bbebbee1cee2ad392f6a76f824">std::exclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1aa45a821ef980f3372b209a64330db959">std::exclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init, _BinaryOperation __binary_op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1aa444107e571b4df65fd6162079d2cbc3">std::inclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _BinaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1aea2c2e5d71a04e8fb59cd8c3e655da4a">std::inclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1a4a699ae1c2b38239135a9f33ee20e569">std::inclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _Tp __init)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation , class _UnaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1a5fbaaeef2064a2cd0bc45351cd8671cd">std::transform_exclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _BinaryOperation , class _UnaryOperation , class _Tp &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1a290fe0a53840e3a23288a43e7ae3ebf3">std::transform_inclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _UnaryOperation __unary_op, _Tp __init)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _UnaryOperation , class _BinaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1ae847e73d2cfc1bf212e9360cd58afe9c">std::transform_inclusive_scan</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _UnaryOperation __unary_op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _BinaryOperation &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1a8e0ebcf0b7a1a4e60d98f9a377ed012a">std::adjacent_difference</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first, _BinaryOperation op)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 &gt; </para><para><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__pstl::__internal::__enable_if_execution_policy</link>&lt; _ExecutionPolicy, _ForwardIterator2 &gt; <link linkend="_namespacestd_1af79891b7c38ea4330e0ef2c83acb4226">std::adjacent_difference</link> (_ExecutionPolicy &amp;&amp;__exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
