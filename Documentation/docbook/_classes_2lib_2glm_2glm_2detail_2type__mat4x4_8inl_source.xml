<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2detail_2type__mat4x4_8inl_source" xml:lang="en-US">
<title>type_mat4x4.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/detail/type_mat4x4.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&quot;../matrix.hpp&quot;</emphasis>
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
4 {
5 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Constructors&#32;--</emphasis>
6 
7 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>()
10 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALIZER_LIST</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(1,&#32;0,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;1,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
12 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
14 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALISATION</emphasis>
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(1,&#32;0,&#32;0,&#32;0);
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;1,&#32;0,&#32;0);
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
19 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
21 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
22 
23 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
25 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, P&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
26 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[3])}
28 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
29 &#32;&#32;&#32;&#32;{
30 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;m[3];
35 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
36 &#32;&#32;&#32;&#32;}
37 
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
39 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s)
40 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(s,&#32;0,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;s,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;s,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;s)}
42 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
43 &#32;&#32;&#32;&#32;{
44 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(s,&#32;0,&#32;0,&#32;0);
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;s,&#32;0,&#32;0);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;s,&#32;0);
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;s);
49 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
50 &#32;&#32;&#32;&#32;}
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
53 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>
54 &#32;&#32;&#32;&#32;(
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x0,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y0,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z0,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w0,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x1,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y1,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z1,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w1,
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x2,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y2,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z2,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w2,
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x3,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y3,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z3,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w3
59 &#32;&#32;&#32;&#32;)
60 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x0,&#32;y0,&#32;z0,&#32;w0),
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x1,&#32;y1,&#32;z1,&#32;w1),
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x2,&#32;y2,&#32;z2,&#32;w2),
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x3,&#32;y3,&#32;z3,&#32;w3)}
66 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
67 &#32;&#32;&#32;&#32;{
68 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0,&#32;z0,&#32;w0);
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1,&#32;w1);
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2,&#32;w2);
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(x3,&#32;y3,&#32;z3,&#32;w3);
73 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
74 &#32;&#32;&#32;&#32;}
75 
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
77 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)
78 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)}
80 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
81 &#32;&#32;&#32;&#32;{
82 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>;
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>;
87 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
88 &#32;&#32;&#32;&#32;}
89 
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
92 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, U, P&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
93 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[3])}
95 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
96 &#32;&#32;&#32;&#32;{
97 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(m[3]);
102 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
103 &#32;&#32;&#32;&#32;}
104 
105 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversions&#32;--</emphasis>
106 
107 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z1,&#32;<emphasis role="keyword">typename</emphasis>&#32;W1,
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z2,&#32;<emphasis role="keyword">typename</emphasis>&#32;W2,
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X3,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y3,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z3,&#32;<emphasis role="keyword">typename</emphasis>&#32;W3,
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X4,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y4,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z4,&#32;<emphasis role="keyword">typename</emphasis>&#32;W4&gt;
113 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>
114 &#32;&#32;&#32;&#32;(
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x1,&#32;Y1&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y1,&#32;Z1&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z1,&#32;W1&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w1,
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x2,&#32;Y2&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y2,&#32;Z2&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z2,&#32;W2&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w2,
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X3&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x3,&#32;Y3&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y3,&#32;Z3&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z3,&#32;W3&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w3,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X4&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;x4,&#32;Y4&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;y4,&#32;Z4&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;z4,&#32;W4&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;w4
119 &#32;&#32;&#32;&#32;)
120 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x1,&#32;y1,&#32;z1,&#32;w1),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x2,&#32;y2,&#32;z2,&#32;w2),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x3,&#32;y3,&#32;z3,&#32;w3),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x4,&#32;y4,&#32;z4,&#32;w4)}
122 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
123 &#32;&#32;&#32;&#32;{
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;X1&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;X1&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;1st&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Y1&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Y1&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;2nd&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Z1&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Z1&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;3rd&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;W1&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;W1&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;4th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;X2&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;X2&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;5th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Y2&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Y2&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;6th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Z2&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Z2&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;7th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;W2&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;W2&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;8th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
133 
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;X3&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;X3&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;9th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Y3&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Y3&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;10th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Z3&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Z3&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;11th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;W3&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;W3&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;12th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
138 
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;X4&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;X4&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;13th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Y4&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Y4&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;14th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;Z4&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;Z4&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;15th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;W4&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;W4&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;16th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
143 
144 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1,&#32;w1);
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2,&#32;w2);
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x3,&#32;y3,&#32;z3,&#32;w3);
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(x4,&#32;y4,&#32;z4,&#32;w4);
149 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
150 &#32;&#32;&#32;&#32;}
151 
152 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
153 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;V1,&#32;<emphasis role="keyword">typename</emphasis>&#32;V2,&#32;<emphasis role="keyword">typename</emphasis>&#32;V3,&#32;<emphasis role="keyword">typename</emphasis>&#32;V4&gt;
154 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1vec">vec&lt;4, V1, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, V2, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, V3, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, V4, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;v4)
155 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(v4)}
157 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
158 &#32;&#32;&#32;&#32;{
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;V1&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;V1&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;1st&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;V2&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;V2&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;2nd&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;V3&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;V3&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;3rd&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;V4&gt;::is_iec559&#32;||&#32;std::numeric_limits&lt;V4&gt;::is_integer&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;*mat4x4&#32;constructor&#32;only&#32;takes&#32;float&#32;and&#32;integer&#32;types,&#32;4th&#32;parameter&#32;type&#32;invalid.&quot;</emphasis>);
163 
164 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>);
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(v4);
169 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
170 &#32;&#32;&#32;&#32;}
171 
172 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Matrix&#32;conversions&#32;--</emphasis>
173 
174 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
175 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
176 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
178 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
179 &#32;&#32;&#32;&#32;{
180 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0,&#32;0);
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0,&#32;0);
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
185 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
186 &#32;&#32;&#32;&#32;}
187 
188 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
189 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
190 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
192 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
193 &#32;&#32;&#32;&#32;{
194 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;0);
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
199 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
200 &#32;&#32;&#32;&#32;}
201 
202 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
203 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
204 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
206 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
207 &#32;&#32;&#32;&#32;{
208 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
213 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
214 &#32;&#32;&#32;&#32;}
215 
216 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
217 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
218 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
220 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
221 &#32;&#32;&#32;&#32;{
222 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0,&#32;0);
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0,&#32;0);
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;1,&#32;0);
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
227 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
228 &#32;&#32;&#32;&#32;}
229 
230 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
231 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
232 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
234 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
235 &#32;&#32;&#32;&#32;{
236 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
241 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
242 &#32;&#32;&#32;&#32;}
243 
244 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
245 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
246 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
248 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
249 &#32;&#32;&#32;&#32;{
250 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0,&#32;0);
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0,&#32;0);
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
255 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
256 &#32;&#32;&#32;&#32;}
257 
258 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
259 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
260 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;0,&#32;1)}
262 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
263 &#32;&#32;&#32;&#32;{
264 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0,&#32;0,&#32;1);
269 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
270 &#32;&#32;&#32;&#32;}
271 
272 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
273 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
274 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[3],&#32;1)}
276 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
277 &#32;&#32;&#32;&#32;{
278 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;0);
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(m[3],&#32;1);
283 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
284 &#32;&#32;&#32;&#32;}
285 
286 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Accesses&#32;--</emphasis>
287 
288 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
289 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::col_type&#32;&amp;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::length_type&#32;i)
290 &#32;&#32;&#32;&#32;{
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
293 &#32;&#32;&#32;&#32;}
294 
295 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
296 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::length_type&#32;i)<emphasis role="keyword">&#32;const</emphasis>
297 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
300 &#32;&#32;&#32;&#32;}
301 
302 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
303 
304 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
305 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
306 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator=</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
307 &#32;&#32;&#32;&#32;{
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//memcpy&#32;could&#32;be&#32;faster</emphasis>
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//memcpy(&amp;this-&gt;value,&#32;&amp;m.value,&#32;16&#32;*&#32;sizeof(valType));</emphasis>
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;m[3];
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
315 &#32;&#32;&#32;&#32;}
316 
317 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
318 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
319 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator+=</link>(U&#32;s)
320 &#32;&#32;&#32;&#32;{
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;s;
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;s;
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;s;
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;+=&#32;s;
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
326 &#32;&#32;&#32;&#32;}
327 
328 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
329 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
330 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator+=</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
331 &#32;&#32;&#32;&#32;{
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;m[0];
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;m[1];
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;m[2];
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;+=&#32;m[3];
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
337 &#32;&#32;&#32;&#32;}
338 
339 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
340 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
341 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator-=</link>(U&#32;s)
342 &#32;&#32;&#32;&#32;{
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;s;
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;s;
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;s;
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;-=&#32;s;
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
348 &#32;&#32;&#32;&#32;}
349 
350 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
351 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
352 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator-=</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
353 &#32;&#32;&#32;&#32;{
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;m[0];
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;m[1];
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;m[2];
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;-=&#32;m[3];
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
359 &#32;&#32;&#32;&#32;}
360 
361 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
362 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
363 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator*=</link>(U&#32;s)
364 &#32;&#32;&#32;&#32;{
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;*=&#32;s;
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;*=&#32;s;
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;*=&#32;s;
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;*=&#32;s;
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
370 &#32;&#32;&#32;&#32;}
371 
372 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
373 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
374 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator*=</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
375 &#32;&#32;&#32;&#32;{
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;=&#32;*<emphasis role="keyword">this</emphasis>&#32;*&#32;m);
377 &#32;&#32;&#32;&#32;}
378 
379 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
380 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
381 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator/=</link>(U&#32;s)
382 &#32;&#32;&#32;&#32;{
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;/=&#32;s;
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;/=&#32;s;
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;/=&#32;s;
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;/=&#32;s;
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
388 &#32;&#32;&#32;&#32;}
389 
390 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
391 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
392 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator/=</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
393 &#32;&#32;&#32;&#32;{
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;*=&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(m);
395 &#32;&#32;&#32;&#32;}
396 
397 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Increment&#32;and&#32;decrement&#32;operators&#32;--</emphasis>
398 
399 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
400 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator++</link>()
401 &#32;&#32;&#32;&#32;{
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[0];
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[1];
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[2];
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[3];
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
407 &#32;&#32;&#32;&#32;}
408 
409 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
410 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator--</link>()
411 &#32;&#32;&#32;&#32;{
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[0];
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[1];
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[2];
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[3];
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
417 &#32;&#32;&#32;&#32;}
418 
419 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
420 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator++</link>(<emphasis role="keywordtype">int</emphasis>)
421 &#32;&#32;&#32;&#32;{
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Result(*<emphasis role="keyword">this</emphasis>);
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++*<emphasis role="keyword">this</emphasis>;
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
425 &#32;&#32;&#32;&#32;}
426 
427 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
428 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::operator--</link>(<emphasis role="keywordtype">int</emphasis>)
429 &#32;&#32;&#32;&#32;{
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Result(*<emphasis role="keyword">this</emphasis>);
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--*<emphasis role="keyword">this</emphasis>;
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
433 &#32;&#32;&#32;&#32;}
434 
435 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;constant&#32;operators&#32;--</emphasis>
436 
437 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
438 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
439 &#32;&#32;&#32;&#32;{
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
441 &#32;&#32;&#32;&#32;}
442 
443 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
444 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
445 &#32;&#32;&#32;&#32;{
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[0],
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[1],
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[2],
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[3]);
451 &#32;&#32;&#32;&#32;}
452 
453 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;arithmetic&#32;operators&#32;--</emphasis>
454 
455 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
456 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s)
457 &#32;&#32;&#32;&#32;{
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;s,
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;s,
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;s,
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;+&#32;s);
463 &#32;&#32;&#32;&#32;}
464 
465 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
466 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
467 &#32;&#32;&#32;&#32;{
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;s,
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;s,
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;s,
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;+&#32;s);
473 &#32;&#32;&#32;&#32;}
474 
475 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
476 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
477 &#32;&#32;&#32;&#32;{
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;+&#32;m2[0],
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;+&#32;m2[1],
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;+&#32;m2[2],
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[3]&#32;+&#32;m2[3]);
483 &#32;&#32;&#32;&#32;}
484 
485 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
486 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s)
487 &#32;&#32;&#32;&#32;{
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;-&#32;s,
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;-&#32;s,
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;-&#32;s,
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;-&#32;s);
493 &#32;&#32;&#32;&#32;}
494 
495 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
496 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
497 &#32;&#32;&#32;&#32;{
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;-&#32;m[0],
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;-&#32;m[1],
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;-&#32;m[2],
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;-&#32;m[3]);
503 &#32;&#32;&#32;&#32;}
504 
505 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
506 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
507 &#32;&#32;&#32;&#32;{
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;-&#32;m2[0],
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;-&#32;m2[1],
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;-&#32;m2[2],
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[3]&#32;-&#32;m2[3]);
513 &#32;&#32;&#32;&#32;}
514 
515 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
516 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;&amp;&#32;s)
517 &#32;&#32;&#32;&#32;{
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;s,
520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;s,
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;s,
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;*&#32;s);
523 &#32;&#32;&#32;&#32;}
524 
525 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
526 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
527 &#32;&#32;&#32;&#32;{
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;s,
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;s,
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;s,
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;*&#32;s);
533 &#32;&#32;&#32;&#32;}
534 
535 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
536 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">operator</emphasis>*
537 &#32;&#32;&#32;&#32;(
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>
540 &#32;&#32;&#32;&#32;)
541 &#32;&#32;&#32;&#32;{
542 <emphasis role="comment">/*</emphasis>
543 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;v0&#32;=&#32;_mm_shuffle_ps(v.data,&#32;v.data,&#32;_MM_SHUFFLE(0,&#32;0,&#32;0,&#32;0));</emphasis>
544 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;v1&#32;=&#32;_mm_shuffle_ps(v.data,&#32;v.data,&#32;_MM_SHUFFLE(1,&#32;1,&#32;1,&#32;1));</emphasis>
545 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;v2&#32;=&#32;_mm_shuffle_ps(v.data,&#32;v.data,&#32;_MM_SHUFFLE(2,&#32;2,&#32;2,&#32;2));</emphasis>
546 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;v3&#32;=&#32;_mm_shuffle_ps(v.data,&#32;v.data,&#32;_MM_SHUFFLE(3,&#32;3,&#32;3,&#32;3));</emphasis>
547 <emphasis role="comment"></emphasis>
548 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;m0&#32;=&#32;_mm_mul_ps(m[0].data,&#32;v0);</emphasis>
549 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;m1&#32;=&#32;_mm_mul_ps(m[1].data,&#32;v1);</emphasis>
550 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;a0&#32;=&#32;_mm_add_ps(m0,&#32;m1);</emphasis>
551 <emphasis role="comment"></emphasis>
552 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;m2&#32;=&#32;_mm_mul_ps(m[2].data,&#32;v2);</emphasis>
553 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;m3&#32;=&#32;_mm_mul_ps(m[3].data,&#32;v3);</emphasis>
554 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;a1&#32;=&#32;_mm_add_ps(m2,&#32;m3);</emphasis>
555 <emphasis role="comment"></emphasis>
556 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;a2&#32;=&#32;_mm_add_ps(a0,&#32;a1);</emphasis>
557 <emphasis role="comment"></emphasis>
558 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;typename&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::col_type(a2);</emphasis>
559 <emphasis role="comment">*/</emphasis>
560 
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mov0(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0]);
562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mov1(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[1]);
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mul0&#32;=&#32;m[0]&#32;*&#32;Mov0;
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mul1&#32;=&#32;m[1]&#32;*&#32;Mov1;
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Add0&#32;=&#32;Mul0&#32;+&#32;Mul1;
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mov2(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[2]);
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mov3(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[3]);
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mul2&#32;=&#32;m[2]&#32;*&#32;Mov2;
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Mul3&#32;=&#32;m[3]&#32;*&#32;Mov3;
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Add1&#32;=&#32;Mul2&#32;+&#32;Mul3;
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;Add2&#32;=&#32;Add0&#32;+&#32;Add1;
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Add2;
573 
574 <emphasis role="comment">/*</emphasis>
575 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;typename&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;::col_type(</emphasis>
576 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;v[0]&#32;+&#32;m[1][0]&#32;*&#32;v[1]&#32;+&#32;m[2][0]&#32;*&#32;v[2]&#32;+&#32;m[3][0]&#32;*&#32;v[3],</emphasis>
577 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][1]&#32;*&#32;v[0]&#32;+&#32;m[1][1]&#32;*&#32;v[1]&#32;+&#32;m[2][1]&#32;*&#32;v[2]&#32;+&#32;m[3][1]&#32;*&#32;v[3],</emphasis>
578 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][2]&#32;*&#32;v[0]&#32;+&#32;m[1][2]&#32;*&#32;v[1]&#32;+&#32;m[2][2]&#32;*&#32;v[2]&#32;+&#32;m[3][2]&#32;*&#32;v[3],</emphasis>
579 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][3]&#32;*&#32;v[0]&#32;+&#32;m[1][3]&#32;*&#32;v[1]&#32;+&#32;m[2][3]&#32;*&#32;v[2]&#32;+&#32;m[3][3]&#32;*&#32;v[3]);</emphasis>
580 <emphasis role="comment">*/</emphasis>
581 &#32;&#32;&#32;&#32;}
582 
583 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
584 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">operator</emphasis>*
585 &#32;&#32;&#32;&#32;(
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m
588 &#32;&#32;&#32;&#32;)
589 &#32;&#32;&#32;&#32;{
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::row_type</link>(
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0]&#32;+&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[1]&#32;+&#32;m[0][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[2]&#32;+&#32;m[0][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[3],
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0]&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[1]&#32;+&#32;m[1][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[2]&#32;+&#32;m[1][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[3],
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0]&#32;+&#32;m[2][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[1]&#32;+&#32;m[2][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[2]&#32;+&#32;m[2][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[3],
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0]&#32;+&#32;m[3][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[1]&#32;+&#32;m[3][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[2]&#32;+&#32;m[3][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[3]);
595 &#32;&#32;&#32;&#32;}
596 
597 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
598 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
599 &#32;&#32;&#32;&#32;{
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>(
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[0][3],
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[0][3],
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][2]&#32;*&#32;m2[0][3],
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][3]&#32;*&#32;m2[0][3],
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[1][3],
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[1][3],
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][2]&#32;*&#32;m2[1][3],
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][3]&#32;*&#32;m2[1][3]);
609 &#32;&#32;&#32;&#32;}
610 
611 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
612 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
613 &#32;&#32;&#32;&#32;{
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[0][3],
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[0][3],
617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][2]&#32;*&#32;m2[0][3],
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][3]&#32;*&#32;m2[0][3],
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[1][3],
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[1][3],
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][2]&#32;*&#32;m2[1][3],
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][3]&#32;*&#32;m2[1][3],
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[2][3],
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[2][3],
625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][2]&#32;*&#32;m2[2][3],
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][3]&#32;*&#32;m2[2][3]);
627 &#32;&#32;&#32;&#32;}
628 
629 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
630 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
631 &#32;&#32;&#32;&#32;{
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA0&#32;=&#32;m1[0];
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA1&#32;=&#32;m1[1];
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA2&#32;=&#32;m1[2];
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA3&#32;=&#32;m1[3];
636 
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB0&#32;=&#32;m2[0];
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB1&#32;=&#32;m2[1];
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB2&#32;=&#32;m2[2];
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB3&#32;=&#32;m2[3];
641 
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Result;
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0]&#32;=&#32;SrcA0&#32;*&#32;SrcB0[0]&#32;+&#32;SrcA1&#32;*&#32;SrcB0[1]&#32;+&#32;SrcA2&#32;*&#32;SrcB0[2]&#32;+&#32;SrcA3&#32;*&#32;SrcB0[3];
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1]&#32;=&#32;SrcA0&#32;*&#32;SrcB1[0]&#32;+&#32;SrcA1&#32;*&#32;SrcB1[1]&#32;+&#32;SrcA2&#32;*&#32;SrcB1[2]&#32;+&#32;SrcA3&#32;*&#32;SrcB1[3];
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2]&#32;=&#32;SrcA0&#32;*&#32;SrcB2[0]&#32;+&#32;SrcA1&#32;*&#32;SrcB2[1]&#32;+&#32;SrcA2&#32;*&#32;SrcB2[2]&#32;+&#32;SrcA3&#32;*&#32;SrcB2[3];
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3]&#32;=&#32;SrcA0&#32;*&#32;SrcB3[0]&#32;+&#32;SrcA1&#32;*&#32;SrcB3[1]&#32;+&#32;SrcA2&#32;*&#32;SrcB3[2]&#32;+&#32;SrcA3&#32;*&#32;SrcB3[3];
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
648 &#32;&#32;&#32;&#32;}
649 
650 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
651 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s)
652 &#32;&#32;&#32;&#32;{
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;/&#32;s,
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;/&#32;s,
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;/&#32;s,
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;/&#32;s);
658 &#32;&#32;&#32;&#32;}
659 
660 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
661 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s,&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
662 &#32;&#32;&#32;&#32;{
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>(
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;/&#32;m[0],
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;/&#32;m[1],
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;/&#32;m[2],
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;/&#32;m[3]);
668 &#32;&#32;&#32;&#32;}
669 
670 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
671 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
672 &#32;&#32;&#32;&#32;{
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(m)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
674 &#32;&#32;&#32;&#32;}
675 
676 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
677 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::row_type</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
678 &#32;&#32;&#32;&#32;{
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;*&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(m);
680 &#32;&#32;&#32;&#32;}
681 
682 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
683 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
684 &#32;&#32;&#32;&#32;{
685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;m1_copy(m1);
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m1_copy&#32;/=&#32;m2;
687 &#32;&#32;&#32;&#32;}
688 
689 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
690 
691 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
692 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
693 &#32;&#32;&#32;&#32;{
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;==&#32;m2[0])&#32;&amp;&amp;&#32;(m1[1]&#32;==&#32;m2[1])&#32;&amp;&amp;&#32;(m1[2]&#32;==&#32;m2[2])&#32;&amp;&amp;&#32;(m1[3]&#32;==&#32;m2[3]);
695 &#32;&#32;&#32;&#32;}
696 
697 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
698 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
699 &#32;&#32;&#32;&#32;{
700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;!=&#32;m2[0])&#32;||&#32;(m1[1]&#32;!=&#32;m2[1])&#32;||&#32;(m1[2]&#32;!=&#32;m2[2])&#32;||&#32;(m1[3]&#32;!=&#32;m2[3]);
701 &#32;&#32;&#32;&#32;}
702 }<emphasis role="comment">//namespace&#32;glm</emphasis>
703 
704 <emphasis role="preprocessor">#if&#32;GLM_CONFIG_SIMD&#32;==&#32;GLM_ENABLE</emphasis>
705 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&quot;type_mat4x4_simd.inl&quot;</emphasis>
706 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
