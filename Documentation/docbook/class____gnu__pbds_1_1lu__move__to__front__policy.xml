<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy" xml:lang="en-US">
<title>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;list_update_policy.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5">allocator_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link></para>

<para>Metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link></para>

<para>Reference to metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5">allocator_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link></para>

<para>Metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link></para>

<para>Reference to metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5">allocator_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link></para>

<para>Metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link></para>

<para>Reference to metadata on which this functor operates. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65">operator()</link> () const</para>

<para>Creates a metadata object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135">operator()</link> (<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link> r_metadata) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65">operator()</link> () const</para>

<para>Creates a metadata object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135">operator()</link> (<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link> r_metadata) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65">operator()</link> () const</para>

<para>Creates a metadata object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135">operator()</link> (<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link> r_metadata) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Alloc = std::allocator&lt;char&gt;&gt;<?linebreak?>class __gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</title></simplesect>

<para>A list-update policy that unconditionally moves elements to the front of the list. A null type means that each link in a list-based container does not actually need metadata. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b"/><section>
    <title>metadata_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_reference</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>metadata_reference</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::metadata_reference</computeroutput></para><para>

<para>Reference to metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b"/><section>
    <title>metadata_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_reference</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>metadata_reference</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::metadata_reference</computeroutput></para><para>

<para>Reference to metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b"/><section>
    <title>metadata_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_reference</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>metadata_reference</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::metadata_reference</computeroutput></para><para>

<para>Reference to metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979"/><section>
    <title>metadata_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::metadata_type</computeroutput></para><para>

<para>Metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979"/><section>
    <title>metadata_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::metadata_type</computeroutput></para><para>

<para>Metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979"/><section>
    <title>metadata_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::metadata_type</computeroutput></para><para>

<para>Metadata on which this functor operates. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65"/><section>
    <title>operator()()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::operator() ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Creates a metadata object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65"/><section>
    <title>operator()()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::operator() ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Creates a metadata object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65"/><section>
    <title>operator()()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::operator() ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Creates a metadata object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135"/><section>
    <title>operator()()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link> r_metadata) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Decides whether a metadata object should be moved to the front of the list. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135"/><section>
    <title>operator()()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link> r_metadata) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Decides whether a metadata object should be moved to the front of the list. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135"/><section>
    <title>operator()()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy</link>&lt; _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link> r_metadata) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Decides whether a metadata object should be moved to the front of the list. </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp">list_update_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp">list_update_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp">list_update_policy.hpp</link></section>
</section>
