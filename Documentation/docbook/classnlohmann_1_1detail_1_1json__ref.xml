<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classnlohmann_1_1detail_1_1json__ref" xml:lang="en-US">
<title>nlohmann::detail::json_ref&lt; BasicJsonType &gt; Class Template Reference</title>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> = BasicJsonType</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1ae1adf5bcee8b6fa0c358710604fb1938">json_ref</link> (<link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> &amp;&amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a8c3eb3c6e952ed0cd7eece586ab4047c">json_ref</link> (const <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> &amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1adfba2db547283a7c6a5df9a32e72efc5">json_ref</link> (std::initializer_list&lt; <link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &gt; init)</para>
</listitem>
            <listitem><para>template&lt;class... Args, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_constructible&lt; <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link>, Args... &gt;<link linkend="_classvalue">::value</link>, int &gt;  = 0&gt; </para><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a8a31d6c588d6c3c06b62008fd5d36c6c">json_ref</link> (Args &amp;&amp;... args)</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a4ec90f097b33e7ea8ea7473b6b6c4015">json_ref</link> (<link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp;&amp;) noexcept=default</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a4c68db46934e03588bbd73b00147c0dd">json_ref</link> (const <link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp; <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a1b22795281e9894e68b927801a69f1ab">operator=</link> (const <link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp; <link linkend="_classnlohmann_1_1detail_1_1json__ref_1ab6fb80bb6a10e626ff58bdd98af7dc52">operator=</link> (<link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp;&amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a8bcd4cfcafe952ce5140f8cb35ebe2f6">~json_ref</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> <link linkend="_classnlohmann_1_1detail_1_1json__ref_1ae39e523218bf05cac3fb5b5b1cd5efb6">moved_or_copied</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> const &amp; <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a660e373deab1b74e03952dce889cb33d">operator*</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> const * <link linkend="_classnlohmann_1_1detail_1_1json__ref_1ab4991f0e0f33cb906267b8dccbf2406b">operator-&gt;</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef"/><section>
    <title>value_type</title>
<indexterm><primary>value_type</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::value_type =  BasicJsonType</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1ae1adf5bcee8b6fa0c358710604fb1938"/><section>
    <title>json_ref()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::json_ref (<link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> &amp;&amp; value)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a8c3eb3c6e952ed0cd7eece586ab4047c"/><section>
    <title>json_ref()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::json_ref (const <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> &amp; value)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1adfba2db547283a7c6a5df9a32e72efc5"/><section>
    <title>json_ref()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::json_ref (std::initializer_list&lt; <link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link>&lt; BasicJsonType &gt; &gt; init)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a8a31d6c588d6c3c06b62008fd5d36c6c"/><section>
    <title>json_ref()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><computeroutput>template&lt;class... Args, <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_constructible&lt; <link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link>, Args... &gt;<link linkend="_classvalue">::value</link>, int &gt;  = 0&gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::json_ref (Args &amp;&amp;... args)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a4ec90f097b33e7ea8ea7473b6b6c4015"/><section>
    <title>json_ref()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::json_ref (<link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link>&lt; BasicJsonType &gt; &amp;&amp; )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a4c68db46934e03588bbd73b00147c0dd"/><section>
    <title>json_ref()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::json_ref (const <link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link>&lt; BasicJsonType &gt; &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a8bcd4cfcafe952ce5140f8cb35ebe2f6"/><section>
    <title>~json_ref()</title>
<indexterm><primary>~json_ref</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>~json_ref</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::~<link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1ae39e523218bf05cac3fb5b5b1cd5efb6"/><section>
    <title>moved_or_copied()</title>
<indexterm><primary>moved_or_copied</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>moved_or_copied</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> <link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::moved_or_copied ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1detail_1_1json__ref_ae39e523218bf05cac3fb5b5b1cd5efb6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1detail_1_1json__ref_ae39e523218bf05cac3fb5b5b1cd5efb6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a660e373deab1b74e03952dce889cb33d"/><section>
    <title>operator*()</title>
<indexterm><primary>operator*</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> const  &amp; <link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1ab4991f0e0f33cb906267b8dccbf2406b"/><section>
    <title>operator-&gt;()</title>
<indexterm><primary>operator-&gt;</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref_1a78d76cf288141049568c0d670ed670ef">value_type</link> const  * <link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1a1b22795281e9894e68b927801a69f1ab"/><section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp; <link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::operator= (const <link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link>&lt; BasicJsonType &gt; &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1detail_1_1json__ref_1ab6fb80bb6a10e626ff58bdd98af7dc52"/><section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::json_ref&lt; BasicJsonType &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link> &amp; <link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref</link>&lt; BasicJsonType &gt;::operator= (<link linkend="_classnlohmann_1_1detail_1_1json__ref">json_ref</link>&lt; BasicJsonType &gt; &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_json_8hpp">json.hpp</link></section>
</section>
