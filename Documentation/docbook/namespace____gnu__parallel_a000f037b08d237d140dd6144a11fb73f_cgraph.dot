digraph "__gnu_parallel::__parallel_sort"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="__gnu_parallel::__parallel_sort",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Choose balanced quicksort for parallel sorting."];
  Node1 -> Node2 [id="edge81_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="__gnu_parallel::parallel\l_tag::__get_num_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct____gnu__parallel_1_1parallel__tag.html#a18b32829b31b902699690b750e190e59",tooltip="Find out desired number of threads."];
  Node2 -> Node3 [id="edge82_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="omp_get_max_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_classes_2lib_2include_2omp_8h.html#a54430ed3c727a27db57290ec784b0b09",tooltip=" "];
  Node1 -> Node4 [id="edge83_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="__gnu_parallel::__parallel\l_sort_qsb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a4093dd098b32542e3d3f43ebd4c6f940",tooltip="Top-level quicksort routine."];
  Node4 -> Node5 [id="edge84_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="__gnu_parallel::__qsb\l_conquer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a8d9c5686c4621822c7c3cdd015f7e693",tooltip="Quicksort conquer step."];
  Node5 -> Node5 [id="edge85_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge86_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="__gnu_parallel::__qsb\l_divide",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#af5df990f9c6b42ec71b0b3245efd8e56",tooltip="Balanced quicksort divide step."];
  Node6 -> Node7 [id="edge87_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="__gnu_parallel::__median\l_of_three_iterators",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a74914ea59d68887b517e12c90189dbcd",tooltip="Compute the median of three referenced elements, according to __comp."];
  Node6 -> Node8 [id="edge88_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="__gnu_parallel::__parallel\l_partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#ac870af1d69405f2f53cd7a96e1d92348",tooltip="Parallel implementation of std::partition."];
  Node8 -> Node9 [id="edge89_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="__gnu_parallel::__compare\l_and_swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#accd4441e0f846fee44966195a91e9e68",tooltip="Compare-and-swap."];
  Node9 -> Node10 [id="edge90_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="__gnu_parallel::__cas_omp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a9209142c30164030551903748dd4206a",tooltip=" "];
  Node8 -> Node11 [id="edge91_Node000008_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="__gnu_parallel::__fetch\l_and_add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a56a5a84c8a6049cd3cc83968c6eae088",tooltip="Add a value to a variable, atomically."];
  Node11 -> Node12 [id="edge92_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="__gnu_parallel::__add_omp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a4096ee6025f5c32e1524971c2eae0407",tooltip=" "];
  Node8 -> Node13 [id="edge93_Node000008_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="__gnu_parallel::_Settings::get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct____gnu__parallel_1_1___settings.html#adf11d9453707f1145a9e221ab7630bd3",tooltip="Get the global settings."];
  Node8 -> Node14 [id="edge94_Node000008_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="omp_get_num_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_classes_2lib_2include_2omp_8h.html#ac42ead04531fd33507e3d3a6f648b200",tooltip=" "];
  Node8 -> Node15 [id="edge95_Node000008_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="std::swap_ranges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#ab5c0ba367019a22e04563f7ecbf2f200",tooltip=" "];
  Node15 -> Node16 [id="edge96_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="__pstl::__internal\l::__pattern_walk2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____pstl_1_1____internal.html#a70065033fe2904641ef4cceafc92c7a0",tooltip=" "];
  Node16 -> Node17 [id="edge97_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="__pstl::__internal\l::__brick_walk2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____pstl_1_1____internal.html#a64612fede4b3b107931bb84c68e45e70",tooltip=" "];
  Node15 -> Node18 [id="edge98_Node000015_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="std::swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a3ece115a1c8ed9020a20f1d0b70efda8",tooltip="exchanges the values of two JSON objects"];
  Node5 -> Node19 [id="edge99_Node000005_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="__gnu_parallel::__qsb\l_local_sort_with_helping",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a7565d258aacb02328cef6eb2781ab711",tooltip="Quicksort step doing load-balanced local sort."];
  Node19 -> Node20 [id="edge100_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="__gnu_parallel::__yield",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#aaa76236af73146ae89f726921bc3f2cb",tooltip="Yield control to another thread, without waiting for the end of the time slice."];
  Node20 -> Node21 [id="edge101_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="sched_yield",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_classes_2lib_2pthread_8h.html#a6c8d40dba19ab44315a73fa45579e07c",tooltip=" "];
  Node19 -> Node13 [id="edge102_Node000019_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node22 [id="edge103_Node000019_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="omp_get_wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_classes_2lib_2include_2omp_8h.html#a801f329e937820fb742b2faf5974d57f",tooltip=" "];
  Node19 -> Node23 [id="edge104_Node000019_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="std::partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a7dde62cf155d6b5bde1a1c0577a9a57f",tooltip=" "];
  Node23 -> Node24 [id="edge105_Node000023_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="__pstl::__internal\l::__pattern_partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____pstl_1_1____internal.html#aad5bdaaadc2aee6f032d7188f9556523",tooltip=" "];
  Node24 -> Node25 [id="edge106_Node000024_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="__pstl::__internal\l::__brick_partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____pstl_1_1____internal.html#ae322bd077e3fd6429c010272c9e48605",tooltip=" "];
  Node25 -> Node23 [id="edge107_Node000025_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node26 [id="edge108_Node000019_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="__gnu_parallel::_Restricted\lBoundedConcurrentQueue::\lpop_front",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class____gnu__parallel_1_1___restricted_bounded_concurrent_queue.html#a4b760899cefaccb86586c447b12c4cc3",tooltip="Pops one element from the queue at the front end. Must not be called concurrently with pop_front()."];
  Node26 -> Node9 [id="edge109_Node000026_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node27 [id="edge110_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="__gnu_parallel::__decode2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#aee3989c0ed2561801b8a6c0282008cca",tooltip="Decode two integers from one gnu_parallel::_CASable."];
  Node26 -> Node28 [id="edge111_Node000026_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="__gnu_parallel::__encode2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a7fcc29eb3f2d9c83756a9d99b4105b3b",tooltip="Encode two integers into one gnu_parallel::_CASable."];
  Node19 -> Node29 [id="edge112_Node000019_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="__gnu_parallel::_Restricted\lBoundedConcurrentQueue::\lpush_front",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class____gnu__parallel_1_1___restricted_bounded_concurrent_queue.html#a2ac4fcc26b5a8e8d3db9993ca3b6f777",tooltip="Pushes one element into the queue at the front end. Must not be called concurrently with pop_front()."];
  Node29 -> Node27 [id="edge113_Node000029_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node28 [id="edge114_Node000029_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node11 [id="edge115_Node000029_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node30 [id="edge116_Node000019_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="std::sort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a73a397864aa701b5bd48fae555f4f935",tooltip=" "];
  Node30 -> Node31 [id="edge117_Node000030_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="__pstl::__internal\l::__pattern_sort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____pstl_1_1____internal.html#a5ccc13fdf58da10d6d45be7770ad0a4c",tooltip=" "];
  Node31 -> Node30 [id="edge118_Node000031_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node14 [id="edge119_Node000005_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node32 [id="edge120_Node000004_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="__gnu_parallel::__rd_log2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#ae8e1f6dc07de01f28bf591339cf8aa9c",tooltip="Calculates the rounded-down logarithm of __n for base 2."];
}
