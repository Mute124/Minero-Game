<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2detail_2type__mat3x4_8inl_source" xml:lang="en-US">
<title>type_mat3x4.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/detail/type_mat3x4.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
2 {
3 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Constructors&#32;--</emphasis>
4 
5 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>()
8 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALIZER_LIST</emphasis>
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(1,&#32;0,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;1,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0)}
10 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
12 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALISATION</emphasis>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(1,&#32;0,&#32;0,&#32;0);
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;1,&#32;0,&#32;0);
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
16 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
18 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
22 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, P&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
23 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
25 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
26 &#32;&#32;&#32;&#32;{
27 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
31 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
32 &#32;&#32;&#32;&#32;}
33 
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
35 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(T&#32;s)
36 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(s,&#32;0,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;s,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;s,&#32;0)}
38 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
39 &#32;&#32;&#32;&#32;{
40 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(s,&#32;0,&#32;0,&#32;0);
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;s,&#32;0,&#32;0);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;s,&#32;0);
44 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
45 &#32;&#32;&#32;&#32;}
46 
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
48 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>
49 &#32;&#32;&#32;&#32;(
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x0,&#32;T&#32;y0,&#32;T&#32;z0,&#32;T&#32;w0,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x1,&#32;T&#32;y1,&#32;T&#32;z1,&#32;T&#32;w1,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x2,&#32;T&#32;y2,&#32;T&#32;z2,&#32;T&#32;w2
53 &#32;&#32;&#32;&#32;)
54 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x0,&#32;y0,&#32;z0,&#32;w0),
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x1,&#32;y1,&#32;z1,&#32;w1),
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x2,&#32;y2,&#32;z2,&#32;w2)}
59 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
60 &#32;&#32;&#32;&#32;{
61 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0,&#32;z0,&#32;w0);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1,&#32;w1);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2,&#32;w2);
65 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
66 &#32;&#32;&#32;&#32;}
67 
68 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
69 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
70 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)}
72 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
73 &#32;&#32;&#32;&#32;{
74 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>;
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>;
78 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
79 &#32;&#32;&#32;&#32;}
80 
81 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;constructors&#32;--</emphasis>
82 
83 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X0,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y0,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z0,&#32;<emphasis role="keyword">typename</emphasis>&#32;W0,
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z1,&#32;<emphasis role="keyword">typename</emphasis>&#32;W1,
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z2,&#32;<emphasis role="keyword">typename</emphasis>&#32;W2&gt;
88 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>
89 &#32;&#32;&#32;&#32;(
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X0&#32;x0,&#32;Y0&#32;y0,&#32;Z0&#32;z0,&#32;W0&#32;w0,
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;x1,&#32;Y1&#32;y1,&#32;Z1&#32;z1,&#32;W1&#32;w1,
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;x2,&#32;Y2&#32;y2,&#32;Z2&#32;z2,&#32;W2&#32;w2
93 &#32;&#32;&#32;&#32;)
94 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x0,&#32;y0,&#32;z0,&#32;w0),
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x1,&#32;y1,&#32;z1,&#32;w1),
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(x2,&#32;y2,&#32;z2,&#32;w2)}
99 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
100 &#32;&#32;&#32;&#32;{
101 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0,&#32;z0,&#32;w0);
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1,&#32;w1);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2,&#32;w2);
105 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
106 &#32;&#32;&#32;&#32;}
107 
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
109 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;V1,&#32;<emphasis role="keyword">typename</emphasis>&#32;V2,&#32;<emphasis role="keyword">typename</emphasis>&#32;V3&gt;
110 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1vec">vec&lt;4, V1, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, V2, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, V3, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
111 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)}
113 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
114 &#32;&#32;&#32;&#32;{
115 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>);
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
119 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
120 &#32;&#32;&#32;&#32;}
121 
122 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Matrix&#32;conversions&#32;--</emphasis>
123 
124 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
126 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, U, P&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
127 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
129 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
130 &#32;&#32;&#32;&#32;{
131 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
135 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
136 &#32;&#32;&#32;&#32;}
137 
138 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
139 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
140 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0)}
142 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
143 &#32;&#32;&#32;&#32;{
144 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0,&#32;0);
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0,&#32;0);
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
148 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
149 &#32;&#32;&#32;&#32;}
150 
151 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
152 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
153 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;0)}
155 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
156 &#32;&#32;&#32;&#32;{
157 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;0);
161 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
162 &#32;&#32;&#32;&#32;}
163 
164 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
165 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
166 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
168 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
169 &#32;&#32;&#32;&#32;{
170 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
174 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
175 &#32;&#32;&#32;&#32;}
176 
177 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
178 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
179 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0)}
181 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
182 &#32;&#32;&#32;&#32;{
183 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
187 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
188 &#32;&#32;&#32;&#32;}
189 
190 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
191 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
192 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;1,&#32;0)}
194 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
195 &#32;&#32;&#32;&#32;{
196 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0,&#32;0);
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0,&#32;0);
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;1,&#32;0);
200 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
201 &#32;&#32;&#32;&#32;}
202 
203 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
204 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
205 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1,&#32;0)}
207 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
208 &#32;&#32;&#32;&#32;{
209 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1,&#32;0);
213 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
214 &#32;&#32;&#32;&#32;}
215 
216 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
217 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
218 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;1,&#32;0)}
220 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
221 &#32;&#32;&#32;&#32;{
222 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0,&#32;0);
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0,&#32;0);
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;1,&#32;0);
226 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
227 &#32;&#32;&#32;&#32;}
228 
229 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
230 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
231 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;0)}
233 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
234 &#32;&#32;&#32;&#32;{
235 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;0);
239 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
240 &#32;&#32;&#32;&#32;}
241 
242 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Accesses&#32;--</emphasis>
243 
244 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
245 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;::col_type&#32;&amp;&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;::length_type&#32;i)
246 &#32;&#32;&#32;&#32;{
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
249 &#32;&#32;&#32;&#32;}
250 
251 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
252 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;::length_type&#32;i)<emphasis role="keyword">&#32;const</emphasis>
253 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
256 &#32;&#32;&#32;&#32;}
257 
258 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;updatable&#32;operators&#32;--</emphasis>
259 
260 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
261 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
262 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
263 &#32;&#32;&#32;&#32;{
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
268 &#32;&#32;&#32;&#32;}
269 
270 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
271 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
272 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator+=</link>(U&#32;s)
273 &#32;&#32;&#32;&#32;{
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;s;
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;s;
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;s;
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
278 &#32;&#32;&#32;&#32;}
279 
280 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
281 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
282 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator+=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
283 &#32;&#32;&#32;&#32;{
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;m[0];
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;m[1];
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;m[2];
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
288 &#32;&#32;&#32;&#32;}
289 
290 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
291 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
292 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator-=</link>(U&#32;s)
293 &#32;&#32;&#32;&#32;{
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;s;
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;s;
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;s;
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
298 &#32;&#32;&#32;&#32;}
299 
300 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
301 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
302 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator-=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
303 &#32;&#32;&#32;&#32;{
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;m[0];
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;m[1];
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;m[2];
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
308 &#32;&#32;&#32;&#32;}
309 
310 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
311 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
312 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator*=</link>(U&#32;s)
313 &#32;&#32;&#32;&#32;{
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;*=&#32;s;
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;*=&#32;s;
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;*=&#32;s;
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
318 &#32;&#32;&#32;&#32;}
319 
320 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
321 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
322 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator/=</link>(U&#32;s)
323 &#32;&#32;&#32;&#32;{
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;/=&#32;s;
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;/=&#32;s;
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;/=&#32;s;
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
328 &#32;&#32;&#32;&#32;}
329 
330 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Increment&#32;and&#32;decrement&#32;operators&#32;--</emphasis>
331 
332 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
333 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator++</link>()
334 &#32;&#32;&#32;&#32;{
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[0];
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[1];
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[2];
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
339 &#32;&#32;&#32;&#32;}
340 
341 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
342 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator--</link>()
343 &#32;&#32;&#32;&#32;{
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[0];
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[1];
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[2];
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
348 &#32;&#32;&#32;&#32;}
349 
350 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
351 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator++</link>(<emphasis role="keywordtype">int</emphasis>)
352 &#32;&#32;&#32;&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;Result(*<emphasis role="keyword">this</emphasis>);
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++*<emphasis role="keyword">this</emphasis>;
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
356 &#32;&#32;&#32;&#32;}
357 
358 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
359 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::operator--</link>(<emphasis role="keywordtype">int</emphasis>)
360 &#32;&#32;&#32;&#32;{
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;Result(*<emphasis role="keyword">this</emphasis>);
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--*<emphasis role="keyword">this</emphasis>;
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
364 &#32;&#32;&#32;&#32;}
365 
366 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
367 
368 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
369 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
370 &#32;&#32;&#32;&#32;{
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
372 &#32;&#32;&#32;&#32;}
373 
374 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
375 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
376 &#32;&#32;&#32;&#32;{
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[0],
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[1],
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[2]);
381 &#32;&#32;&#32;&#32;}
382 
383 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;arithmetic&#32;operators&#32;--</emphasis>
384 
385 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
386 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
387 &#32;&#32;&#32;&#32;{
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;scalar,
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;scalar,
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;scalar);
392 &#32;&#32;&#32;&#32;}
393 
394 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
395 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
396 &#32;&#32;&#32;&#32;{
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;+&#32;m2[0],
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;+&#32;m2[1],
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;+&#32;m2[2]);
401 &#32;&#32;&#32;&#32;}
402 
403 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
404 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;&#32;T&#32;scalar)
405 &#32;&#32;&#32;&#32;{
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;-&#32;scalar,
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;-&#32;scalar,
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;-&#32;scalar);
410 &#32;&#32;&#32;&#32;}
411 
412 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
413 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
414 &#32;&#32;&#32;&#32;{
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;-&#32;m2[0],
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;-&#32;m2[1],
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;-&#32;m2[2]);
419 &#32;&#32;&#32;&#32;}
420 
421 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
422 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
423 &#32;&#32;&#32;&#32;{
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar);
428 &#32;&#32;&#32;&#32;}
429 
430 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
431 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;scalar,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
432 &#32;&#32;&#32;&#32;{
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar);
437 &#32;&#32;&#32;&#32;}
438 
439 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
440 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">operator</emphasis>*
441 &#32;&#32;&#32;&#32;(
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>
444 &#32;&#32;&#32;&#32;)
445 &#32;&#32;&#32;&#32;{
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::col_type</link>(
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][3]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
451 &#32;&#32;&#32;&#32;}
452 
453 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
454 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">operator</emphasis>*
455 &#32;&#32;&#32;&#32;(
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m
458 &#32;&#32;&#32;&#32;)
459 &#32;&#32;&#32;&#32;{
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;::row_type</link>(
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[0][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[0][1]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;*&#32;m[0][2]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w&#32;*&#32;m[0][3],
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[1][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[1][1]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;*&#32;m[1][2]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w&#32;*&#32;m[1][3],
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[2][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[2][1]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;*&#32;m[2][2]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w&#32;*&#32;m[2][3]);
464 &#32;&#32;&#32;&#32;}
465 
466 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
467 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
468 &#32;&#32;&#32;&#32;{
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA00&#32;=&#32;m1[0][0];
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA01&#32;=&#32;m1[0][1];
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA02&#32;=&#32;m1[0][2];
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA03&#32;=&#32;m1[0][3];
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA10&#32;=&#32;m1[1][0];
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA11&#32;=&#32;m1[1][1];
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA12&#32;=&#32;m1[1][2];
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA13&#32;=&#32;m1[1][3];
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA20&#32;=&#32;m1[2][0];
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA21&#32;=&#32;m1[2][1];
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA22&#32;=&#32;m1[2][2];
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA23&#32;=&#32;m1[2][3];
481 
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB00&#32;=&#32;m2[0][0];
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB01&#32;=&#32;m2[0][1];
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB02&#32;=&#32;m2[0][2];
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB10&#32;=&#32;m2[1][0];
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB11&#32;=&#32;m2[1][1];
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB12&#32;=&#32;m2[1][2];
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB20&#32;=&#32;m2[2][0];
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB21&#32;=&#32;m2[2][1];
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB22&#32;=&#32;m2[2][2];
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB30&#32;=&#32;m2[3][0];
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB31&#32;=&#32;m2[3][1];
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB32&#32;=&#32;m2[3][2];
494 
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Result;
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB00&#32;+&#32;SrcA10&#32;*&#32;SrcB01&#32;+&#32;SrcA20&#32;*&#32;SrcB02;
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB00&#32;+&#32;SrcA11&#32;*&#32;SrcB01&#32;+&#32;SrcA21&#32;*&#32;SrcB02;
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB00&#32;+&#32;SrcA12&#32;*&#32;SrcB01&#32;+&#32;SrcA22&#32;*&#32;SrcB02;
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][3]&#32;=&#32;SrcA03&#32;*&#32;SrcB00&#32;+&#32;SrcA13&#32;*&#32;SrcB01&#32;+&#32;SrcA23&#32;*&#32;SrcB02;
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB10&#32;+&#32;SrcA10&#32;*&#32;SrcB11&#32;+&#32;SrcA20&#32;*&#32;SrcB12;
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB10&#32;+&#32;SrcA11&#32;*&#32;SrcB11&#32;+&#32;SrcA21&#32;*&#32;SrcB12;
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB10&#32;+&#32;SrcA12&#32;*&#32;SrcB11&#32;+&#32;SrcA22&#32;*&#32;SrcB12;
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][3]&#32;=&#32;SrcA03&#32;*&#32;SrcB10&#32;+&#32;SrcA13&#32;*&#32;SrcB11&#32;+&#32;SrcA23&#32;*&#32;SrcB12;
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB20&#32;+&#32;SrcA10&#32;*&#32;SrcB21&#32;+&#32;SrcA20&#32;*&#32;SrcB22;
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB20&#32;+&#32;SrcA11&#32;*&#32;SrcB21&#32;+&#32;SrcA21&#32;*&#32;SrcB22;
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB20&#32;+&#32;SrcA12&#32;*&#32;SrcB21&#32;+&#32;SrcA22&#32;*&#32;SrcB22;
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][3]&#32;=&#32;SrcA03&#32;*&#32;SrcB20&#32;+&#32;SrcA13&#32;*&#32;SrcB21&#32;+&#32;SrcA23&#32;*&#32;SrcB22;
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB30&#32;+&#32;SrcA10&#32;*&#32;SrcB31&#32;+&#32;SrcA20&#32;*&#32;SrcB32;
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB30&#32;+&#32;SrcA11&#32;*&#32;SrcB31&#32;+&#32;SrcA21&#32;*&#32;SrcB32;
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB30&#32;+&#32;SrcA12&#32;*&#32;SrcB31&#32;+&#32;SrcA22&#32;*&#32;SrcB32;
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][3]&#32;=&#32;SrcA03&#32;*&#32;SrcB30&#32;+&#32;SrcA13&#32;*&#32;SrcB31&#32;+&#32;SrcA23&#32;*&#32;SrcB32;
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
513 &#32;&#32;&#32;&#32;}
514 
515 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
516 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
517 &#32;&#32;&#32;&#32;{
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>(
519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2],
520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2],
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[0][2],
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[0][2],
523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2],
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2],
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[1][2],
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[1][2]);
527 &#32;&#32;&#32;&#32;}
528 
529 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
530 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
531 &#32;&#32;&#32;&#32;{
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2],
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2],
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[0][2],
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[0][2],
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2],
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2],
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[1][2],
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[1][2],
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2],
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2],
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[2][2],
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][3]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][3]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][3]&#32;*&#32;m2[2][2]);
545 &#32;&#32;&#32;&#32;}
546 
547 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
548 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;&#32;T&#32;scalar)
549 &#32;&#32;&#32;&#32;{
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;/&#32;scalar,
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;/&#32;scalar,
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;/&#32;scalar);
554 &#32;&#32;&#32;&#32;}
555 
556 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
557 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(T&#32;scalar,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
558 &#32;&#32;&#32;&#32;{
559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>(
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[0],
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[1],
562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[2]);
563 &#32;&#32;&#32;&#32;}
564 
565 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
566 
567 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
568 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
569 &#32;&#32;&#32;&#32;{
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;==&#32;m2[0])&#32;&amp;&amp;&#32;(m1[1]&#32;==&#32;m2[1])&#32;&amp;&amp;&#32;(m1[2]&#32;==&#32;m2[2]);
571 &#32;&#32;&#32;&#32;}
572 
573 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
574 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
575 &#32;&#32;&#32;&#32;{
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;!=&#32;m2[0])&#32;||&#32;(m1[1]&#32;!=&#32;m2[1])&#32;||&#32;(m1[2]&#32;!=&#32;m2[2]);
577 &#32;&#32;&#32;&#32;}
578 }&#32;<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
