<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/test/core/core_func_integer.cpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/test/core/core_func_integer.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;glm/integer.hpp&gt;<?linebreak?>#include &lt;glm/vector_relational.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_int1.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_int2.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_int3.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_int4.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_uint1.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_uint2.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_uint3.hpp&gt;<?linebreak?>#include &lt;glm/ext/vector_uint4.hpp&gt;<?linebreak?>#include &lt;glm/ext/scalar_int_sized.hpp&gt;<?linebreak?>#include &lt;glm/ext/scalar_uint_sized.hpp&gt;<?linebreak?>#include &lt;vector&gt;<?linebreak?>#include &lt;ctime&gt;<?linebreak?>#include &lt;cstdio&gt;<?linebreak?></programlisting>Include dependency graph for core_func_integer.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2glm_2test_2core_2core__func__integer_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structbitfield_insert_1_1type">bitfieldInsert::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbitfield_extract_1_1type">bitfieldExtract::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbitfield_reverse_1_1compute__bitfield_reverse_step">bitfieldReverse::compute_bitfieldReverseStep&lt; EXEC &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbitfield_reverse_1_1compute__bitfield_reverse_step_3_01true_01_4">bitfieldReverse::compute_bitfieldReverseStep&lt; true &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbitfield_reverse_1_1type">bitfieldReverse::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfind_m_s_b_1_1type">findMSB::type&lt; genType, retType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfind_l_s_b_1_1type">findLSB::type&lt; genType, retType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbit_count_1_1type">bitCount::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbit_count_1_1compute__bitfield_bit_count_step">bitCount::compute_bitfieldBitCountStep&lt; EXEC &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbit_count_1_1compute__bitfield_bit_count_step_3_01true_01_4">bitCount::compute_bitfieldBitCountStep&lt; true &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacebitfield_insert">bitfieldInsert</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacebitfield_extract">bitfieldExtract</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacebitfield_reverse">bitfieldReverse</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefind_m_s_b">findMSB</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefind_l_s_b">findLSB</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceuadd_carry">uaddCarry</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceusub_borrow">usubBorrow</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceumul_extended">umulExtended</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceimul_extended">imulExtended</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacebit_count">bitCount</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_structbitfield_insert_1_1type">type</link>&lt; <link linkend="_namespaceglm_1a4fd29415871152bfb5abd588334147c8">glm::uint</link> &gt; <link linkend="_namespacebitfield_insert_1a26207e2f50e4f42c2db4985fc7ca226f">bitfieldInsert::typeU32</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structbitfield_extract_1_1type">type</link>&lt; <link linkend="_namespaceglm_1a4fd29415871152bfb5abd588334147c8">glm::uint</link> &gt; <link linkend="_namespacebitfield_extract_1a8a9a9161ba6ce863ee3cee68ff54036a">bitfieldExtract::typeU32</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structbitfield_reverse_1_1type">type</link>&lt; <link linkend="_namespaceglm_1a4fd29415871152bfb5abd588334147c8">glm::uint</link> &gt; <link linkend="_namespacebitfield_reverse_1a9bae14b665ea8bde27fb5f7d19cfca0f">bitfieldReverse::typeU32</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structbitfield_reverse_1_1type">type</link>&lt; <link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link> &gt; <link linkend="_namespacebitfield_reverse_1a4e5e38d5d52249fda29de04bb6260242">bitfieldReverse::typeU64</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structfind_l_s_b_1_1type">type</link>&lt; int, int &gt; <link linkend="_namespacefind_l_s_b_1a9f3e2ce1c42e4e79e3976f44c44b77f9">findLSB::entry</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link> { <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600bac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</link>
, <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600ba936c4a5547a9360243178f726f6b2715">FAIL</link>
, <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600ba61d9e0e93eb9635173764c5ba45666f1">ASSERT</link>
, <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600bac8b971884ee30edfa84713128d401ad5">STATIC_ASSERT</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">glm::length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">glm::qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacebitfield_reverse_1a9a05b37e2b3f904b1897d4dbf4ce6472">bitfieldReverse::bitfieldReverseLoop</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_namespacebitfield_reverse_1a92ea1b37306f64456bc87c9133caa1be">bitfieldReverse::bitfieldReverseLoop</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link> <link linkend="_namespacebitfield_reverse_1a403504c4596c488eebf8214224fc7a94">bitfieldReverse::bitfieldReverseUint32</link> (<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link> <link linkend="_namespacebitfield_reverse_1aa19b09bab0dc967d647098bee43bc8f4">bitfieldReverse::bitfieldReverseUint64</link> (<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">glm::length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">glm::qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacebitfield_reverse_1af94db56669b1bb3ab35a0176d4de5d54">bitfieldReverse::bitfieldReverseOps</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> genType <link linkend="_namespacebitfield_reverse_1af508af170a1125bf367c7b8e6b57112f">bitfieldReverse::bitfieldReverseOps</link> (genType <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacebit_count_1a1e72c429cc9e7069d876a3486f01c739">bitCount::bitCount_if</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacebit_count_1a2078d8cecc1408f4de73f8db6734bf76">bitCount::bitCount_vec</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacebitfield_insert_1a26207e2f50e4f42c2db4985fc7ca226f">typeU32</link> const <link linkend="_namespacebitfield_insert_1a3297584a48adebd22d96f97a38cc5872">bitfieldInsert::Data32</link> []</para>
</listitem>
            <listitem><para><link linkend="_namespacebitfield_extract_1a8a9a9161ba6ce863ee3cee68ff54036a">typeU32</link> const <link linkend="_namespacebitfield_extract_1a56c3cde87202d8ad9fc4730b22dfe735">bitfieldExtract::Data32</link> []</para>
</listitem>
            <listitem><para><link linkend="_namespacebitfield_reverse_1a9bae14b665ea8bde27fb5f7d19cfca0f">typeU32</link> const <link linkend="_namespacebitfield_reverse_1a6f252bb803ebcc89b852dd7683a3892a">bitfieldReverse::Data32</link> []</para>
</listitem>
            <listitem><para><link linkend="_namespacebitfield_reverse_1a4e5e38d5d52249fda29de04bb6260242">typeU64</link> const <link linkend="_namespacebitfield_reverse_1a589b68a5184b606e8865abf0c72e16d5">bitfieldReverse::Data64</link> []</para>
</listitem>
            <listitem><para><link linkend="_namespacefind_l_s_b_1a9f3e2ce1c42e4e79e3976f44c44b77f9">entry</link> const <link linkend="_namespacefind_l_s_b_1a1192547e4b16b9e84cb5ec71108cc0ab">findLSB::DataI32</link> []</para>
</listitem>
            <listitem><para><link linkend="_structbit_count_1_1type">type</link>&lt; int &gt; const <link linkend="_namespacebit_count_1a688fc7c6b6cf99a69dad0247a9a15fc3">bitCount::DataI32</link> []</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b"/><section>
    <title>result</title>
<indexterm><primary>result</primary><secondary>core_func_integer.cpp</secondary></indexterm>
<indexterm><primary>core_func_integer.cpp</primary><secondary>result</secondary></indexterm>
<para><computeroutput>enum <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>SUCCESS</primary><secondary>core_func_integer.cpp</secondary></indexterm>
<indexterm><primary>core_func_integer.cpp</primary><secondary>SUCCESS</secondary></indexterm>
<anchor xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600bac7f69f7c9e5aea9b8f54cf02870e2bf8"/>SUCCESS</entry><entry></entry></row><row><entry><indexterm><primary>FAIL</primary><secondary>core_func_integer.cpp</secondary></indexterm>
<indexterm><primary>core_func_integer.cpp</primary><secondary>FAIL</secondary></indexterm>
<anchor xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600ba936c4a5547a9360243178f726f6b2715"/>FAIL</entry><entry></entry></row><row><entry><indexterm><primary>ASSERT</primary><secondary>core_func_integer.cpp</secondary></indexterm>
<indexterm><primary>core_func_integer.cpp</primary><secondary>ASSERT</secondary></indexterm>
<anchor xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600ba61d9e0e93eb9635173764c5ba45666f1"/>ASSERT</entry><entry></entry></row><row><entry><indexterm><primary>STATIC_ASSERT</primary><secondary>core_func_integer.cpp</secondary></indexterm>
<indexterm><primary>core_func_integer.cpp</primary><secondary>STATIC_ASSERT</secondary></indexterm>
<anchor xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600bac8b971884ee30edfa84713128d401ad5"/>STATIC_ASSERT</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>core_func_integer.cpp</secondary></indexterm>
<indexterm><primary>core_func_integer.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
</section>
</section>
