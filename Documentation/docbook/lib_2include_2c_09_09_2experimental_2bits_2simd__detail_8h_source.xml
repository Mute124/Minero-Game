<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2experimental_2bits_2simd__detail_8h_source" xml:lang="en-US">
<title>simd_detail.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/experimental/bits/simd_detail.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Internal&#32;macros&#32;for&#32;the&#32;simd&#32;implementation&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2020-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_EXPERIMENTAL_SIMD_DETAIL_H_</emphasis>
26 <emphasis role="preprocessor">#define&#32;_GLIBCXX_EXPERIMENTAL_SIMD_DETAIL_H_</emphasis>
27 
28 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201703L</emphasis>
29 
30 <emphasis role="preprocessor">#include&#32;&lt;cstddef&gt;</emphasis>
31 <emphasis role="preprocessor">#include&#32;&lt;cstdint&gt;</emphasis>
32 
34 
35 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_BEGIN_NAMESPACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
36 <emphasis role="preprocessor">&#32;&#32;namespace&#32;std&#32;_GLIBCXX_VISIBILITY(default)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
37 <emphasis role="preprocessor">&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
38 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_GLIBCXX_BEGIN_NAMESPACE_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
39 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;namespace&#32;experimental&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
40 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;inline&#32;namespace&#32;parallelism_v2&#32;{</emphasis>
41 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_END_NAMESPACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
42 <emphasis role="preprocessor">&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
43 <emphasis role="preprocessor">&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
44 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_END_NAMESPACE_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
45 <emphasis role="preprocessor">&#32;&#32;}</emphasis>
46 
47 <emphasis role="comment">//&#32;ISA&#32;extension&#32;detection.&#32;The&#32;following&#32;defines&#32;all&#32;the&#32;_GLIBCXX_SIMD_HAVE_XXX</emphasis>
48 <emphasis role="comment">//&#32;macros&#32;ARM{{{</emphasis>
49 <emphasis role="preprocessor">#if&#32;defined&#32;__ARM_NEON</emphasis>
50 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_NEON&#32;1</emphasis>
51 <emphasis role="preprocessor">#else</emphasis>
52 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_NEON&#32;0</emphasis>
53 <emphasis role="preprocessor">#endif</emphasis>
54 <emphasis role="preprocessor">#if&#32;defined&#32;__ARM_NEON&#32;&amp;&amp;&#32;(__ARM_ARCH&#32;&gt;=&#32;8&#32;||&#32;defined&#32;__aarch64__)</emphasis>
55 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_NEON_A32&#32;1</emphasis>
56 <emphasis role="preprocessor">#else</emphasis>
57 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_NEON_A32&#32;0</emphasis>
58 <emphasis role="preprocessor">#endif</emphasis>
59 <emphasis role="preprocessor">#if&#32;defined&#32;__ARM_NEON&#32;&amp;&amp;&#32;defined&#32;__aarch64__</emphasis>
60 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_NEON_A64&#32;1</emphasis>
61 <emphasis role="preprocessor">#else</emphasis>
62 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_NEON_A64&#32;0</emphasis>
63 <emphasis role="preprocessor">#endif</emphasis>
64 <emphasis role="comment">//}}}</emphasis>
65 <emphasis role="comment">//&#32;x86{{{</emphasis>
66 <emphasis role="preprocessor">#ifdef&#32;__MMX__</emphasis>
67 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_MMX&#32;1</emphasis>
68 <emphasis role="preprocessor">#else</emphasis>
69 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_MMX&#32;0</emphasis>
70 <emphasis role="preprocessor">#endif</emphasis>
71 <emphasis role="preprocessor">#if&#32;defined&#32;__SSE__&#32;||&#32;defined&#32;__x86_64__</emphasis>
72 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE&#32;1</emphasis>
73 <emphasis role="preprocessor">#else</emphasis>
74 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE&#32;0</emphasis>
75 <emphasis role="preprocessor">#endif</emphasis>
76 <emphasis role="preprocessor">#if&#32;defined&#32;__SSE2__&#32;||&#32;defined&#32;__x86_64__</emphasis>
77 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE2&#32;1</emphasis>
78 <emphasis role="preprocessor">#else</emphasis>
79 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE2&#32;0</emphasis>
80 <emphasis role="preprocessor">#endif</emphasis>
81 <emphasis role="preprocessor">#ifdef&#32;__SSE3__</emphasis>
82 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE3&#32;1</emphasis>
83 <emphasis role="preprocessor">#else</emphasis>
84 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE3&#32;0</emphasis>
85 <emphasis role="preprocessor">#endif</emphasis>
86 <emphasis role="preprocessor">#ifdef&#32;__SSSE3__</emphasis>
87 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSSE3&#32;1</emphasis>
88 <emphasis role="preprocessor">#else</emphasis>
89 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSSE3&#32;0</emphasis>
90 <emphasis role="preprocessor">#endif</emphasis>
91 <emphasis role="preprocessor">#ifdef&#32;__SSE4_1__</emphasis>
92 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE4_1&#32;1</emphasis>
93 <emphasis role="preprocessor">#else</emphasis>
94 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE4_1&#32;0</emphasis>
95 <emphasis role="preprocessor">#endif</emphasis>
96 <emphasis role="preprocessor">#ifdef&#32;__SSE4_2__</emphasis>
97 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE4_2&#32;1</emphasis>
98 <emphasis role="preprocessor">#else</emphasis>
99 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE4_2&#32;0</emphasis>
100 <emphasis role="preprocessor">#endif</emphasis>
101 <emphasis role="preprocessor">#ifdef&#32;__XOP__</emphasis>
102 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_XOP&#32;1</emphasis>
103 <emphasis role="preprocessor">#else</emphasis>
104 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_XOP&#32;0</emphasis>
105 <emphasis role="preprocessor">#endif</emphasis>
106 <emphasis role="preprocessor">#ifdef&#32;__AVX__</emphasis>
107 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX&#32;1</emphasis>
108 <emphasis role="preprocessor">#else</emphasis>
109 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX&#32;0</emphasis>
110 <emphasis role="preprocessor">#endif</emphasis>
111 <emphasis role="preprocessor">#ifdef&#32;__AVX2__</emphasis>
112 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX2&#32;1</emphasis>
113 <emphasis role="preprocessor">#else</emphasis>
114 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX2&#32;0</emphasis>
115 <emphasis role="preprocessor">#endif</emphasis>
116 <emphasis role="preprocessor">#ifdef&#32;__BMI__</emphasis>
117 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_BMI1&#32;1</emphasis>
118 <emphasis role="preprocessor">#else</emphasis>
119 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_BMI1&#32;0</emphasis>
120 <emphasis role="preprocessor">#endif</emphasis>
121 <emphasis role="preprocessor">#ifdef&#32;__BMI2__</emphasis>
122 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_BMI2&#32;1</emphasis>
123 <emphasis role="preprocessor">#else</emphasis>
124 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_BMI2&#32;0</emphasis>
125 <emphasis role="preprocessor">#endif</emphasis>
126 <emphasis role="preprocessor">#ifdef&#32;__LZCNT__</emphasis>
127 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_LZCNT&#32;1</emphasis>
128 <emphasis role="preprocessor">#else</emphasis>
129 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_LZCNT&#32;0</emphasis>
130 <emphasis role="preprocessor">#endif</emphasis>
131 <emphasis role="preprocessor">#ifdef&#32;__SSE4A__</emphasis>
132 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE4A&#32;1</emphasis>
133 <emphasis role="preprocessor">#else</emphasis>
134 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE4A&#32;0</emphasis>
135 <emphasis role="preprocessor">#endif</emphasis>
136 <emphasis role="preprocessor">#ifdef&#32;__FMA__</emphasis>
137 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FMA&#32;1</emphasis>
138 <emphasis role="preprocessor">#else</emphasis>
139 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FMA&#32;0</emphasis>
140 <emphasis role="preprocessor">#endif</emphasis>
141 <emphasis role="preprocessor">#ifdef&#32;__FMA4__</emphasis>
142 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FMA4&#32;1</emphasis>
143 <emphasis role="preprocessor">#else</emphasis>
144 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FMA4&#32;0</emphasis>
145 <emphasis role="preprocessor">#endif</emphasis>
146 <emphasis role="preprocessor">#ifdef&#32;__F16C__</emphasis>
147 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_F16C&#32;1</emphasis>
148 <emphasis role="preprocessor">#else</emphasis>
149 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_F16C&#32;0</emphasis>
150 <emphasis role="preprocessor">#endif</emphasis>
151 <emphasis role="preprocessor">#ifdef&#32;__POPCNT__</emphasis>
152 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_POPCNT&#32;1</emphasis>
153 <emphasis role="preprocessor">#else</emphasis>
154 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_POPCNT&#32;0</emphasis>
155 <emphasis role="preprocessor">#endif</emphasis>
156 <emphasis role="preprocessor">#ifdef&#32;__AVX512F__</emphasis>
157 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512F&#32;1</emphasis>
158 <emphasis role="preprocessor">#else</emphasis>
159 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512F&#32;0</emphasis>
160 <emphasis role="preprocessor">#endif</emphasis>
161 <emphasis role="preprocessor">#ifdef&#32;__AVX512DQ__</emphasis>
162 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512DQ&#32;1</emphasis>
163 <emphasis role="preprocessor">#else</emphasis>
164 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512DQ&#32;0</emphasis>
165 <emphasis role="preprocessor">#endif</emphasis>
166 <emphasis role="preprocessor">#ifdef&#32;__AVX512VL__</emphasis>
167 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VL&#32;1</emphasis>
168 <emphasis role="preprocessor">#else</emphasis>
169 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VL&#32;0</emphasis>
170 <emphasis role="preprocessor">#endif</emphasis>
171 <emphasis role="preprocessor">#ifdef&#32;__AVX512BW__</emphasis>
172 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512BW&#32;1</emphasis>
173 <emphasis role="preprocessor">#else</emphasis>
174 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512BW&#32;0</emphasis>
175 <emphasis role="preprocessor">#endif</emphasis>
176 <emphasis role="preprocessor">#ifdef&#32;__AVX512BITALG__</emphasis>
177 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512BITALG&#32;1</emphasis>
178 <emphasis role="preprocessor">#else</emphasis>
179 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512BITALG&#32;0</emphasis>
180 <emphasis role="preprocessor">#endif</emphasis>
181 <emphasis role="preprocessor">#ifdef&#32;__AVX512VBMI2__</emphasis>
182 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VBMI2&#32;1</emphasis>
183 <emphasis role="preprocessor">#else</emphasis>
184 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VBMI2&#32;0</emphasis>
185 <emphasis role="preprocessor">#endif</emphasis>
186 <emphasis role="preprocessor">#ifdef&#32;__AVX512VBMI__</emphasis>
187 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VBMI&#32;1</emphasis>
188 <emphasis role="preprocessor">#else</emphasis>
189 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VBMI&#32;0</emphasis>
190 <emphasis role="preprocessor">#endif</emphasis>
191 <emphasis role="preprocessor">#ifdef&#32;__AVX512IFMA__</emphasis>
192 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512IFMA&#32;1</emphasis>
193 <emphasis role="preprocessor">#else</emphasis>
194 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512IFMA&#32;0</emphasis>
195 <emphasis role="preprocessor">#endif</emphasis>
196 <emphasis role="preprocessor">#ifdef&#32;__AVX512CD__</emphasis>
197 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512CD&#32;1</emphasis>
198 <emphasis role="preprocessor">#else</emphasis>
199 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512CD&#32;0</emphasis>
200 <emphasis role="preprocessor">#endif</emphasis>
201 <emphasis role="preprocessor">#ifdef&#32;__AVX512VNNI__</emphasis>
202 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VNNI&#32;1</emphasis>
203 <emphasis role="preprocessor">#else</emphasis>
204 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VNNI&#32;0</emphasis>
205 <emphasis role="preprocessor">#endif</emphasis>
206 <emphasis role="preprocessor">#ifdef&#32;__AVX512VPOPCNTDQ__</emphasis>
207 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VPOPCNTDQ&#32;1</emphasis>
208 <emphasis role="preprocessor">#else</emphasis>
209 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VPOPCNTDQ&#32;0</emphasis>
210 <emphasis role="preprocessor">#endif</emphasis>
211 <emphasis role="preprocessor">#ifdef&#32;__AVX512VP2INTERSECT__</emphasis>
212 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VP2INTERSECT&#32;1</emphasis>
213 <emphasis role="preprocessor">#else</emphasis>
214 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512VP2INTERSECT&#32;0</emphasis>
215 <emphasis role="preprocessor">#endif</emphasis>
216 
217 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_SSE</emphasis>
218 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE_ABI&#32;1</emphasis>
219 <emphasis role="preprocessor">#else</emphasis>
220 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_SSE_ABI&#32;0</emphasis>
221 <emphasis role="preprocessor">#endif</emphasis>
222 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_SSE2</emphasis>
223 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FULL_SSE_ABI&#32;1</emphasis>
224 <emphasis role="preprocessor">#else</emphasis>
225 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FULL_SSE_ABI&#32;0</emphasis>
226 <emphasis role="preprocessor">#endif</emphasis>
227 
228 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_AVX</emphasis>
229 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX_ABI&#32;1</emphasis>
230 <emphasis role="preprocessor">#else</emphasis>
231 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX_ABI&#32;0</emphasis>
232 <emphasis role="preprocessor">#endif</emphasis>
233 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_AVX2</emphasis>
234 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FULL_AVX_ABI&#32;1</emphasis>
235 <emphasis role="preprocessor">#else</emphasis>
236 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FULL_AVX_ABI&#32;0</emphasis>
237 <emphasis role="preprocessor">#endif</emphasis>
238 
239 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_AVX512F</emphasis>
240 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512_ABI&#32;1</emphasis>
241 <emphasis role="preprocessor">#else</emphasis>
242 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_AVX512_ABI&#32;0</emphasis>
243 <emphasis role="preprocessor">#endif</emphasis>
244 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_AVX512BW</emphasis>
245 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FULL_AVX512_ABI&#32;1</emphasis>
246 <emphasis role="preprocessor">#else</emphasis>
247 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_HAVE_FULL_AVX512_ABI&#32;0</emphasis>
248 <emphasis role="preprocessor">#endif</emphasis>
249 
250 <emphasis role="preprocessor">#if&#32;defined&#32;__x86_64__&#32;&amp;&amp;&#32;!_GLIBCXX_SIMD_HAVE_SSE2</emphasis>
251 <emphasis role="preprocessor">#error&#32;&quot;Use&#32;of&#32;SSE2&#32;is&#32;required&#32;on&#32;AMD64&quot;</emphasis>
252 <emphasis role="preprocessor">#endif</emphasis>
253 <emphasis role="comment">//}}}</emphasis>
254 
255 <emphasis role="preprocessor">#ifdef&#32;__clang__</emphasis>
256 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_NORMAL_MATH</emphasis>
257 <emphasis role="preprocessor">#else</emphasis>
258 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_NORMAL_MATH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
259 <emphasis role="preprocessor">&#32;&#32;[[__gnu__::__optimize__(&quot;finite-math-only,no-signed-zeros&quot;)]]</emphasis>
260 <emphasis role="preprocessor">#endif</emphasis>
261 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_NEVER_INLINE&#32;[[__gnu__::__noinline__]]</emphasis>
262 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_INTRINSIC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
263 <emphasis role="preprocessor">&#32;&#32;[[__gnu__::__always_inline__,&#32;__gnu__::__artificial__]]&#32;inline</emphasis>
264 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_ALWAYS_INLINE&#32;[[__gnu__::__always_inline__]]&#32;inline</emphasis>
265 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_IS_UNLIKELY(__x)&#32;__builtin_expect(__x,&#32;0)</emphasis>
266 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_IS_LIKELY(__x)&#32;__builtin_expect(__x,&#32;1)</emphasis>
267 
268 <emphasis role="preprocessor">#if&#32;defined&#32;__STRICT_ANSI__&#32;&amp;&amp;&#32;__STRICT_ANSI__</emphasis>
269 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_CONSTEXPR</emphasis>
270 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_USE_CONSTEXPR_API&#32;const</emphasis>
271 <emphasis role="preprocessor">#else</emphasis>
272 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_CONSTEXPR&#32;constexpr</emphasis>
273 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_USE_CONSTEXPR_API&#32;constexpr</emphasis>
274 <emphasis role="preprocessor">#endif</emphasis>
275 
276 <emphasis role="preprocessor">#if&#32;defined&#32;__clang__</emphasis>
277 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_USE_CONSTEXPR&#32;const</emphasis>
278 <emphasis role="preprocessor">#else</emphasis>
279 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_USE_CONSTEXPR&#32;constexpr</emphasis>
280 <emphasis role="preprocessor">#endif</emphasis>
281 
282 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_LIST_BINARY(__macro)&#32;__macro(|)&#32;__macro(&amp;)&#32;__macro(^)</emphasis>
283 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_LIST_SHIFTS(__macro)&#32;__macro(&lt;&lt;)&#32;__macro(&gt;&gt;)</emphasis>
284 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_LIST_ARITHMETICS(__macro)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
285 <emphasis role="preprocessor">&#32;&#32;__macro(+)&#32;__macro(-)&#32;__macro(*)&#32;__macro(/)&#32;__macro(%)</emphasis>
286 
287 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_ALL_BINARY(__macro)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
288 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_SIMD_LIST_BINARY(__macro)&#32;static_assert(true)</emphasis>
289 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_ALL_SHIFTS(__macro)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
290 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_SIMD_LIST_SHIFTS(__macro)&#32;static_assert(true)</emphasis>
291 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_ALL_ARITHMETICS(__macro)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
292 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_SIMD_LIST_ARITHMETICS(__macro)&#32;static_assert(true)</emphasis>
293 
294 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_SIMD_NO_ALWAYS_INLINE</emphasis>
295 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_SIMD_ALWAYS_INLINE</emphasis>
296 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_ALWAYS_INLINE&#32;inline</emphasis>
297 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_SIMD_INTRINSIC</emphasis>
298 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_INTRINSIC&#32;inline</emphasis>
299 <emphasis role="preprocessor">#endif</emphasis>
300 
301 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_HAVE_SSE&#32;||&#32;_GLIBCXX_SIMD_HAVE_MMX</emphasis>
302 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_X86INTRIN&#32;1</emphasis>
303 <emphasis role="preprocessor">#else</emphasis>
304 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_X86INTRIN&#32;0</emphasis>
305 <emphasis role="preprocessor">#endif</emphasis>
306 
307 <emphasis role="comment">//&#32;workaround&#32;macros&#32;{{{</emphasis>
308 <emphasis role="comment">//&#32;use&#32;aliasing&#32;loads&#32;to&#32;help&#32;GCC&#32;understand&#32;the&#32;data&#32;accesses&#32;better</emphasis>
309 <emphasis role="comment">//&#32;This&#32;also&#32;seems&#32;to&#32;hide&#32;a&#32;miscompilation&#32;on&#32;swap(x[i],&#32;x[i&#32;+&#32;1])&#32;with</emphasis>
310 <emphasis role="comment">//&#32;fixed_size_simd&lt;float,&#32;16&gt;&#32;x.</emphasis>
311 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_USE_ALIASING_LOADS&#32;1</emphasis>
312 
313 <emphasis role="comment">//&#32;vector&#32;conversions&#32;on&#32;x86&#32;not&#32;optimized:</emphasis>
314 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_X86INTRIN</emphasis>
315 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_WORKAROUND_PR85048&#32;1</emphasis>
316 <emphasis role="preprocessor">#endif</emphasis>
317 
318 <emphasis role="comment">//&#32;integer&#32;division&#32;not&#32;optimized</emphasis>
319 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_WORKAROUND_PR90993&#32;1</emphasis>
320 
321 <emphasis role="comment">//&#32;very&#32;bad&#32;codegen&#32;for&#32;extraction&#32;and&#32;concatenation&#32;of&#32;128/256&#32;&quot;subregisters&quot;</emphasis>
322 <emphasis role="comment">//&#32;with&#32;sizeof(element&#32;type)&#32;&lt;&#32;8:&#32;https://godbolt.org/g/mqUsgM</emphasis>
323 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_X86INTRIN</emphasis>
324 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_WORKAROUND_XXX_1&#32;1</emphasis>
325 <emphasis role="preprocessor">#endif</emphasis>
326 
327 <emphasis role="comment">//&#32;bad&#32;codegen&#32;for&#32;8&#32;Byte&#32;memcpy&#32;to&#32;__vector_type_t&lt;char,&#32;16&gt;</emphasis>
328 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_WORKAROUND_PR90424&#32;1</emphasis>
329 
330 <emphasis role="comment">//&#32;bad&#32;codegen&#32;for&#32;zero-extend&#32;using&#32;simple&#32;concat(__x,&#32;0)</emphasis>
331 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SIMD_X86INTRIN</emphasis>
332 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_WORKAROUND_XXX_3&#32;1</emphasis>
333 <emphasis role="preprocessor">#endif</emphasis>
334 
335 <emphasis role="comment">//&#32;https://github.com/cplusplus/parallelism-ts/issues/65&#32;(incorrect&#32;return&#32;type</emphasis>
336 <emphasis role="comment">//&#32;of&#32;static_simd_cast)</emphasis>
337 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_FIX_P2TS_ISSUE65&#32;1</emphasis>
338 
339 <emphasis role="comment">//&#32;https://github.com/cplusplus/parallelism-ts/issues/66&#32;(incorrect&#32;SFINAE</emphasis>
340 <emphasis role="comment">//&#32;constraint&#32;on&#32;(static)_simd_cast)</emphasis>
341 <emphasis role="preprocessor">#define&#32;_GLIBCXX_SIMD_FIX_P2TS_ISSUE66&#32;1</emphasis>
342 <emphasis role="comment">//&#32;}}}</emphasis>
343 
345 
346 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__cplusplus&#32;&gt;=&#32;201703L</emphasis>
347 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_EXPERIMENTAL_SIMD_DETAIL_H_</emphasis>
348 
349 <emphasis role="comment">//&#32;vim:&#32;foldmethod=marker</emphasis>
</programlisting></section>
