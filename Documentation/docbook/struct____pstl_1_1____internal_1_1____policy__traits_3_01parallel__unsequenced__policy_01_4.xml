<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4" xml:lang="en-US">
<title>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt; Struct Reference</title>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;execution_impl.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0e9cf6f28b375249e162a71d32a1e4de">allow_parallel</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a9ca5ea19147df5bdacdbaaf9858b7a55">allow_unsequenced</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0bd3d1dab782cbff797c1fa8d022a1c9">allow_vector</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0e9cf6f28b375249e162a71d32a1e4de">allow_parallel</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a9ca5ea19147df5bdacdbaaf9858b7a55">allow_unsequenced</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0bd3d1dab782cbff797c1fa8d022a1c9">allow_vector</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0e9cf6f28b375249e162a71d32a1e4de">allow_parallel</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a9ca5ea19147df5bdacdbaaf9858b7a55">allow_unsequenced</link></para>
</listitem>
            <listitem><para>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0bd3d1dab782cbff797c1fa8d022a1c9">allow_vector</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0e9cf6f28b375249e162a71d32a1e4de"/><section>
    <title>allow_parallel<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allow_parallel</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_parallel</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_parallel</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0e9cf6f28b375249e162a71d32a1e4de"/><section>
    <title>allow_parallel<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allow_parallel</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_parallel</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_parallel</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0e9cf6f28b375249e162a71d32a1e4de"/><section>
    <title>allow_parallel<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allow_parallel</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_parallel</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_parallel</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a9ca5ea19147df5bdacdbaaf9858b7a55"/><section>
    <title>allow_unsequenced<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allow_unsequenced</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_unsequenced</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_unsequenced</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a9ca5ea19147df5bdacdbaaf9858b7a55"/><section>
    <title>allow_unsequenced<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allow_unsequenced</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_unsequenced</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_unsequenced</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a9ca5ea19147df5bdacdbaaf9858b7a55"/><section>
    <title>allow_unsequenced<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allow_unsequenced</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_unsequenced</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_unsequenced</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0bd3d1dab782cbff797c1fa8d022a1c9"/><section>
    <title>allow_vector<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allow_vector</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_vector</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_vector</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0bd3d1dab782cbff797c1fa8d022a1c9"/><section>
    <title>allow_vector<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allow_vector</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_vector</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_vector</computeroutput></para></section>
<anchor xml:id="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4_1a0bd3d1dab782cbff797c1fa8d022a1c9"/><section>
    <title>allow_vector<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allow_vector</primary><secondary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</primary><secondary>allow_vector</secondary></indexterm>
<para><computeroutput>typedef std::true_type <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits</link>&lt; <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link> &gt;::allow_vector</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/<link linkend="__classes_2lib_2include_2c_09_09_2pstl_2execution__impl_8h">execution_impl.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/<link linkend="_lib_2include_2c_09_09_2pstl_2execution__impl_8h">execution_impl.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2execution__impl_8h">execution_impl.h</link></section>
</section>
