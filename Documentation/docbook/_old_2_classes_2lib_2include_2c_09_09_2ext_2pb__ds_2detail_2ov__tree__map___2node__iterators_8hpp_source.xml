<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2node__iterators_8hpp_source" xml:lang="en-US">
<title>node_iterators.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_OV_TREE_NODE_ITERATORS_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_OV_TREE_NODE_ITERATORS_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
47 
48 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
49 {
50 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
51 &#32;&#32;{
52 <emphasis role="preprocessor">#define&#32;PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC&#32;\</emphasis>
53 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;ov_tree_node_const_it_&lt;Value_Type,&#32;Metadata_Type,&#32;_Alloc&gt;</emphasis>
54 
56 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;Metadata_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>ov_tree_node_const_it_
58 &#32;&#32;&#32;&#32;{
59 
60 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;rebind_traits&lt;_Alloc,&#32;Value_Type&gt;::pointer
62 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aa776d5ffca6ade2517a702f7835b20ed">pointer</link>;
63 
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Value_Type&gt;::const_pointer</link>
65 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a732766356d73b8a9056bc8797c757ad8">const_pointer</link>;
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Metadata_Type&gt;::const_pointer</link>
68 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a687e74be5518357fe6c39fc64788b1b2">const_metadata_pointer</link>;
69 
70 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2node__iterators_8hpp_1aea081e94eb6f4b604214cfbe199a4bed">PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>;
71 
72 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
73 
74 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Ptr&gt;
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Ptr
76 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7611133a018f3e0d4b4d8cc51f243fe0">mid_pointer</link>(Ptr&#32;p_begin,&#32;Ptr&#32;p_end)
77 &#32;&#32;&#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(p_end&#32;&gt;=&#32;p_begin);
79 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(p_begin&#32;+&#32;(p_end&#32;-&#32;p_begin)&#32;/&#32;2);
80 &#32;&#32;&#32;&#32;&#32;&#32;}
81 
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
83 
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4d123033620700343312b0af7d5d5f47">iterator_category</link>;
85 
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1abbb5f709964d127bcce56db1a5aad5d1">difference_type</link>;
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Value_Type&gt;::const_pointer</link>
89 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac7de06d6967550eaf08d8c07e1edc592">value_type</link>;
90 
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;remove_const&lt;Value_Type&gt;::type&gt;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a732766356d73b8a9056bc8797c757ad8">::const_pointer</link>
93 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a1590a2dd898b168b3c1cdc6acb834ae6">reference</link>;
94 
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,&#32;
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;remove_const&lt;Value_Type&gt;::type&gt;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a732766356d73b8a9056bc8797c757ad8">::const_pointer</link>
97 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1abf247e632fc30478acef1dd5a21a45b1">const_reference</link>;
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Metadata_Type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a033281ef7cca9ab3aeeb12f75cc3e483">metadata_type</link>;
100 
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, metadata_type&gt;::const_reference</link>
102 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a98665af7899e5f47f818211810681ae6">metadata_const_reference</link>;
103 
104 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1afec371fb288ccc3eb18918b9c09adb29">ov_tree_node_const_it_</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a732766356d73b8a9056bc8797c757ad8">const_pointer</link>&#32;p_nd&#32;=&#32;0,
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a732766356d73b8a9056bc8797c757ad8">const_pointer</link>&#32;p_begin_nd&#32;=&#32;0,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a732766356d73b8a9056bc8797c757ad8">const_pointer</link>&#32;p_end_nd&#32;=&#32;0,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a687e74be5518357fe6c39fc64788b1b2">const_metadata_pointer</link>&#32;p_metadata&#32;=&#32;0)
110 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>(const_cast&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aa776d5ffca6ade2517a702f7835b20ed">pointer</link>&gt;(p_nd)),
111 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>(const_cast&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aa776d5ffca6ade2517a702f7835b20ed">pointer</link>&gt;(p_begin_nd)),
112 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>(const_cast&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aa776d5ffca6ade2517a702f7835b20ed">pointer</link>&gt;(p_end_nd)),
113 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>(p_metadata)
114 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
115 
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1abf247e632fc30478acef1dd5a21a45b1">const_reference</link>
117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7feef5cb30110eb1223bc9b9ef7744cd">operator*</link>()<emphasis role="keyword">&#32;const</emphasis>
118 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>;&#32;}
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a98665af7899e5f47f818211810681ae6">metadata_const_reference</link>
121 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac775d3dc44475774fd61879bbaff791a">get_metadata</link>()<emphasis role="keyword">&#32;const</emphasis>
122 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
123 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;{
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has_metadata&#32;=&#32;!is_same&lt;Metadata_Type,&#32;null_type&gt;::value
126 &#32;&#32;&#32;&#32;&#32;&#32;};
127 
128 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp_1a0610a49e32a86da761a7bd14b8fddc33">PB_DS_STATIC_ASSERT</link>(should_have_metadata,&#32;has_metadata);
129 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>&#32;!=&#32;0);
130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>;
131 &#32;&#32;&#32;&#32;&#32;&#32;}
132 
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>
135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a0042e586a7f4eb89dc5701140e3adb05">get_l_child</link>()<emphasis role="keyword">&#32;const</emphasis>
136 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
137 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>&#32;==&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>)
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>));
139 
140 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a687e74be5518357fe6c39fc64788b1b2">const_metadata_pointer</link>&#32;p_begin_metadata&#32;=
141 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>&#32;-&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>&#32;-&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>);
142 
143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7611133a018f3e0d4b4d8cc51f243fe0">mid_pointer</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>),
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>,
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>,
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7611133a018f3e0d4b4d8cc51f243fe0">mid_pointer</link>(p_begin_metadata,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>)));
147 &#32;&#32;&#32;&#32;&#32;&#32;}
148 
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>
151 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ab5c65f8b148fced3b2e38f12f37312b7">get_r_child</link>()<emphasis role="keyword">&#32;const</emphasis>
152 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
153 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>&#32;==&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>)
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>));
155 
156 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a687e74be5518357fe6c39fc64788b1b2">const_metadata_pointer</link>&#32;p_end_metadata&#32;=
157 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>&#32;+&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>&#32;-&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>);
158 
159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7611133a018f3e0d4b4d8cc51f243fe0">mid_pointer</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>&#32;+&#32;1,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>),
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>&#32;+&#32;1,
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>,(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>&#32;==&#32;0)&#32;?
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;:&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7611133a018f3e0d4b4d8cc51f243fe0">mid_pointer</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>&#32;+&#32;1,&#32;p_end_metadata)));
163 &#32;&#32;&#32;&#32;&#32;&#32;}
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a2cb69b64123b8643932e61da3cab885b">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
167 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_end&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>&#32;==&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>;
169 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_other_end&#32;=&#32;other.m_p_begin_value&#32;==&#32;other.m_p_end_value;
170 
171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_end)
172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_other_end);
173 
174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_other_end)
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_end);
176 
177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>&#32;==&#32;other.m_p_value;
178 &#32;&#32;&#32;&#32;&#32;&#32;}
179 
180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
181 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a15c6e9da460066b7f5603090f1544876">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a57be78f544bb206fda59f01eb965a34b">this_type</link>&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
182 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a2cb69b64123b8643932e61da3cab885b">operator==</link>(other);&#32;}
183 
184 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
185 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1ac1035b4f5a9412e6556306ad8e843ea6">m_p_value</link>;
186 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1aaff89399269644f7c0c72c56609911c4">m_p_begin_value</link>;
187 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a4fa15531c31e46b0bb225a1d85a13bfb">m_p_end_value</link>;
188 
189 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a687e74be5518357fe6c39fc64788b1b2">const_metadata_pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it___1a7e95aeef777f6d2a82124559da627468">m_p_metadata</link>;
190 &#32;&#32;&#32;&#32;};
191 
192 <emphasis role="preprocessor">#define&#32;PB_DS_OV_TREE_NODE_ITERATOR_C_DEC&#32;\</emphasis>
193 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;ov_tree_node_it_&lt;Value_Type,&#32;Metadata_Type,&#32;_Alloc&gt;</emphasis>
194 
196 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;Metadata_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
197 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>ov_tree_node_it_&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2node__iterators_8hpp_1aea081e94eb6f4b604214cfbe199a4bed">PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC</link>
198 &#32;&#32;&#32;&#32;{
199 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2node__iterators_8hpp_1af6047cf8c54c7698e0d3bd8a8a9f50f9">PB_DS_OV_TREE_NODE_ITERATOR_C_DEC</link>&#32;this_type;
201 
202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2node__iterators_8hpp_1aea081e94eb6f4b604214cfbe199a4bed">PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC</link>&#32;base_type;
203 
204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::pointer&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>;
205 
206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_pointer&#32;const_pointer;
207 
208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_metadata_pointer
210 &#32;&#32;&#32;&#32;&#32;&#32;const_metadata_pointer;
211 
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
213 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1a753f709af6e050443bf59594e18debf7">iterator_category</link>;
214 
215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1a8a9922d7c89ae6c5156598b91fa1b1f0">difference_type</link>;
216 
217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Value_Type&gt;::pointer</link>
218 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1af71692b8b1e8b811377c7c642217442f">value_type</link>;
219 
220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;remove_const&lt;Value_Type&gt;::type&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link>
222 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1ab20838e6a8fd6a9dde37e1227314a4c5">reference</link>;
223 
224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,&#32;
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;remove_const&lt;Value_Type&gt;::type&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link>
226 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1a7cadd358d5404bc3b7ca6df844210a08">const_reference</link>;
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
229 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1ae64ca4d00316a05948e57aa273f0a5c6">ov_tree_node_it_</link>(const_pointer&#32;p_nd&#32;=&#32;0,&#32;&#32;const_pointer&#32;p_begin_nd&#32;=&#32;0,&#32;&#32;const_pointer&#32;p_end_nd&#32;=&#32;0,&#32;&#32;const_metadata_pointer&#32;p_metadata&#32;=&#32;0)&#32;:&#32;base_type(p_nd,&#32;&#32;p_begin_nd,&#32;&#32;p_end_nd,&#32;&#32;p_metadata)
230 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
231 
233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1ab20838e6a8fd6a9dde37e1227314a4c5">reference</link>
234 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1a89338f1c18b5234bf80ef61c8f839359">operator*</link>()<emphasis role="keyword">&#32;const</emphasis>
235 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1ab20838e6a8fd6a9dde37e1227314a4c5">reference</link>(base_type::m_p_value);&#32;}
236 
238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it__">ov_tree_node_it_</link>
239 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1ad60f8b97cb50e3afd196eafbfa04fb48">get_l_child</link>()<emphasis role="keyword">&#32;const</emphasis>
240 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
241 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::m_p_begin_value&#32;==&#32;base_type::m_p_value)
242 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this_type(base_type::m_p_begin_value,&#32;&#32;base_type::m_p_begin_value,&#32;&#32;base_type::m_p_begin_value));
243 
244 &#32;&#32;&#32;&#32;const_metadata_pointer&#32;p_begin_metadata&#32;=
245 &#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_metadata&#32;-&#32;(base_type::m_p_value&#32;-&#32;base_type::m_p_begin_value);
246 
247 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this_type(base_type::mid_pointer(base_type::m_p_begin_value,&#32;base_type::m_p_value),
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_begin_value,
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_value,
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::mid_pointer(p_begin_metadata,&#32;base_type::m_p_metadata)));
251 &#32;&#32;&#32;&#32;&#32;&#32;}
252 
254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it__">ov_tree_node_it_</link>
255 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it___1a788c2a4ac9e879eb8e12dd186064694a">get_r_child</link>()<emphasis role="keyword">&#32;const</emphasis>
256 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::m_p_value&#32;==&#32;base_type::m_p_end_value)
258 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this_type(base_type::m_p_end_value,&#32;base_type::m_p_end_value,&#32;&#32;
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_end_value);
260 
261 &#32;&#32;&#32;&#32;const_metadata_pointer&#32;p_end_metadata&#32;=
262 &#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_metadata&#32;+&#32;(base_type::m_p_end_value&#32;-&#32;base_type::m_p_value);
263 
264 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this_type(base_type::mid_pointer(base_type::m_p_value&#32;+&#32;1,&#32;base_type::m_p_end_value),
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_value&#32;+&#32;1,
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_end_value,(base_type::m_p_metadata&#32;==&#32;0)?
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;:&#32;base_type::mid_pointer(base_type::m_p_metadata&#32;+&#32;1,&#32;p_end_metadata)));
268 &#32;&#32;&#32;&#32;&#32;&#32;}
269 
270 &#32;&#32;&#32;&#32;};
271 
272 <emphasis role="preprocessor">#undef&#32;PB_DS_OV_TREE_NODE_ITERATOR_C_DEC</emphasis>
273 <emphasis role="preprocessor">#undef&#32;PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC</emphasis>
274 
275 }&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
276 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
277 
278 <emphasis role="preprocessor">#endif&#32;</emphasis>
</programlisting></section>
