<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_source" xml:lang="en-US">
<title>stl_numeric.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/bits/stl_numeric.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Numeric&#32;functions&#32;implementation&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2001-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">/*</emphasis>
26 <emphasis role="comment">&#32;*</emphasis>
27 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;1994</emphasis>
28 <emphasis role="comment">&#32;*&#32;Hewlett-Packard&#32;Company</emphasis>
29 <emphasis role="comment">&#32;*</emphasis>
30 <emphasis role="comment">&#32;*&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;distribute&#32;and&#32;sell&#32;this&#32;software</emphasis>
31 <emphasis role="comment">&#32;*&#32;and&#32;its&#32;documentation&#32;for&#32;any&#32;purpose&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,</emphasis>
32 <emphasis role="comment">&#32;*&#32;provided&#32;that&#32;the&#32;above&#32;copyright&#32;notice&#32;appear&#32;in&#32;all&#32;copies&#32;and</emphasis>
33 <emphasis role="comment">&#32;*&#32;that&#32;both&#32;that&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;appear</emphasis>
34 <emphasis role="comment">&#32;*&#32;in&#32;supporting&#32;documentation.&#32;&#32;Hewlett-Packard&#32;Company&#32;makes&#32;no</emphasis>
35 <emphasis role="comment">&#32;*&#32;representations&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
36 <emphasis role="comment">&#32;*&#32;purpose.&#32;&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied&#32;warranty.</emphasis>
37 <emphasis role="comment">&#32;*</emphasis>
38 <emphasis role="comment">&#32;*</emphasis>
39 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;1996,1997</emphasis>
40 <emphasis role="comment">&#32;*&#32;Silicon&#32;Graphics&#32;Computer&#32;Systems,&#32;Inc.</emphasis>
41 <emphasis role="comment">&#32;*</emphasis>
42 <emphasis role="comment">&#32;*&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;distribute&#32;and&#32;sell&#32;this&#32;software</emphasis>
43 <emphasis role="comment">&#32;*&#32;and&#32;its&#32;documentation&#32;for&#32;any&#32;purpose&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,</emphasis>
44 <emphasis role="comment">&#32;*&#32;provided&#32;that&#32;the&#32;above&#32;copyright&#32;notice&#32;appear&#32;in&#32;all&#32;copies&#32;and</emphasis>
45 <emphasis role="comment">&#32;*&#32;that&#32;both&#32;that&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;appear</emphasis>
46 <emphasis role="comment">&#32;*&#32;in&#32;supporting&#32;documentation.&#32;&#32;Silicon&#32;Graphics&#32;makes&#32;no</emphasis>
47 <emphasis role="comment">&#32;*&#32;representations&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
48 <emphasis role="comment">&#32;*&#32;purpose.&#32;&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied&#32;warranty.</emphasis>
49 <emphasis role="comment">&#32;*/</emphasis>
50 
56 <emphasis role="preprocessor">#ifndef&#32;_STL_NUMERIC_H</emphasis>
57 <emphasis role="preprocessor">#define&#32;_STL_NUMERIC_H&#32;1</emphasis>
58 
59 <emphasis role="preprocessor">#include&#32;&lt;bits/concept_check.h&gt;</emphasis>
60 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
61 <emphasis role="preprocessor">#include&#32;&lt;bits/move.h&gt;</emphasis>&#32;<emphasis role="comment">//&#32;For&#32;_GLIBCXX_MOVE</emphasis>
62 
63 
64 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
65 {
66 _GLIBCXX_BEGIN_NAMESPACE_VERSION
67 
72 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
85 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
86 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
87 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
88 &#32;&#32;&#32;&#32;iota(_ForwardIterator&#32;__first,&#32;_ForwardIterator&#32;__last,&#32;_Tp&#32;__value)
89 &#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_Mutable_ForwardIteratorConcept&lt;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ForwardIterator&gt;)
93 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_ConvertibleConcept&lt;_Tp,
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;iterator_traits&lt;_ForwardIterator&gt;::value_type&gt;)
95 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
96 
97 &#32;&#32;&#32;&#32;&#32;&#32;for&#32;(;&#32;__first&#32;!=&#32;__last;&#32;++__first)
98 &#32;&#32;&#32;&#32;{
99 &#32;&#32;&#32;&#32;&#32;&#32;*__first&#32;=&#32;__value;
100 &#32;&#32;&#32;&#32;&#32;&#32;++__value;
101 &#32;&#32;&#32;&#32;}
102 &#32;&#32;&#32;&#32;}
103 <emphasis role="preprocessor">#endif</emphasis>
104 
105 _GLIBCXX_END_NAMESPACE_VERSION
106 
107 _GLIBCXX_BEGIN_NAMESPACE_ALGO
108 
109 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;&#32;201703L</emphasis>
110 <emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
111 <emphasis role="comment">//&#32;DR&#32;2055.&#32;std::move&#32;in&#32;std::accumulate&#32;and&#32;other&#32;algorithms</emphasis>
112 <emphasis role="preprocessor">#&#32;define&#32;_GLIBCXX_MOVE_IF_20(_E)&#32;std::move(_E)</emphasis>
113 <emphasis role="preprocessor">#else</emphasis>
114 <emphasis role="preprocessor">#&#32;define&#32;_GLIBCXX_MOVE_IF_20(_E)&#32;_E</emphasis>
115 <emphasis role="preprocessor">#endif</emphasis>
116 
119 
131 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
132 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
133 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
134 &#32;&#32;&#32;&#32;accumulate(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last,&#32;_Tp&#32;__init)
135 &#32;&#32;&#32;&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator&gt;)
138 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__first&#32;!=&#32;__last;&#32;++__first)
141 &#32;&#32;&#32;&#32;__init&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__init)&#32;+&#32;*__first;
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__init;
143 &#32;&#32;&#32;&#32;}
144 
158 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_BinaryOperation&gt;
159 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
160 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
161 &#32;&#32;&#32;&#32;accumulate(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last,&#32;_Tp&#32;__init,
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation&#32;__binary_op)
163 &#32;&#32;&#32;&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator&gt;)
166 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__first&#32;!=&#32;__last;&#32;++__first)
169 &#32;&#32;&#32;&#32;__init&#32;=&#32;__binary_op(<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__init),&#32;*__first);
170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__init;
171 &#32;&#32;&#32;&#32;}
172 
187 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator2,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
188 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
189 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
190 &#32;&#32;&#32;&#32;inner_product(_InputIterator1&#32;__first1,&#32;_InputIterator1&#32;__last1,
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_InputIterator2&#32;__first2,&#32;_Tp&#32;__init)
192 &#32;&#32;&#32;&#32;{
193 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
194 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator1&gt;)
195 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator2&gt;)
196 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first1,&#32;__last1);
197 
198 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__first1&#32;!=&#32;__last1;&#32;++__first1,&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)++__first2)
199 &#32;&#32;&#32;&#32;__init&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__init)&#32;+&#32;(*__first1&#32;*&#32;*__first2);
200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__init;
201 &#32;&#32;&#32;&#32;}
202 
219 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator2,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_BinaryOperation1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_BinaryOperation2&gt;
221 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
222 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
223 &#32;&#32;&#32;&#32;inner_product(_InputIterator1&#32;__first1,&#32;_InputIterator1&#32;__last1,
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_InputIterator2&#32;__first2,&#32;_Tp&#32;__init,
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation1&#32;__binary_op1,
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation2&#32;__binary_op2)
227 &#32;&#32;&#32;&#32;{
228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
229 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator1&gt;)
230 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator2&gt;)
231 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first1,&#32;__last1);
232 
233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__first1&#32;!=&#32;__last1;&#32;++__first1,&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)++__first2)
234 &#32;&#32;&#32;&#32;__init&#32;=&#32;__binary_op1(<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__init),
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__binary_op2(*__first1,&#32;*__first2));
236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__init;
237 &#32;&#32;&#32;&#32;}
238 
253 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator&gt;
254 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
255 &#32;&#32;&#32;&#32;_OutputIterator
256 &#32;&#32;&#32;&#32;partial_sum(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last,
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator&#32;__result)
258 &#32;&#32;&#32;&#32;{
259 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;iterator_traits&lt;_InputIterator&gt;::value_type&#32;_ValueType;
260 
261 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
262 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator&gt;)
263 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_OutputIteratorConcept&lt;_OutputIterator,
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType&gt;)
265 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
266 
267 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(__first&#32;==&#32;__last)
268 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;__result;
269 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType&#32;__value&#32;=&#32;*__first;
270 &#32;&#32;&#32;&#32;&#32;&#32;*__result&#32;=&#32;__value;
271 &#32;&#32;&#32;&#32;&#32;&#32;while&#32;(++__first&#32;!=&#32;__last)
272 &#32;&#32;&#32;&#32;{
273 &#32;&#32;&#32;&#32;&#32;&#32;__value&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__value)&#32;+&#32;*__first;
274 &#32;&#32;&#32;&#32;&#32;&#32;*++__result&#32;=&#32;__value;
275 &#32;&#32;&#32;&#32;}
276 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;++__result;
277 &#32;&#32;&#32;&#32;}
278 
294 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator,
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_BinaryOperation&gt;
296 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
297 &#32;&#32;&#32;&#32;_OutputIterator
298 &#32;&#32;&#32;&#32;partial_sum(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last,
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator&#32;__result,&#32;_BinaryOperation&#32;__binary_op)
300 &#32;&#32;&#32;&#32;{
301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;iterator_traits&lt;_InputIterator&gt;::value_type&#32;_ValueType;
302 
303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
304 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator&gt;)
305 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_OutputIteratorConcept&lt;_OutputIterator,
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType&gt;)
307 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
308 
309 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(__first&#32;==&#32;__last)
310 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;__result;
311 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType&#32;__value&#32;=&#32;*__first;
312 &#32;&#32;&#32;&#32;&#32;&#32;*__result&#32;=&#32;__value;
313 &#32;&#32;&#32;&#32;&#32;&#32;while&#32;(++__first&#32;!=&#32;__last)
314 &#32;&#32;&#32;&#32;{
315 &#32;&#32;&#32;&#32;&#32;&#32;__value&#32;=&#32;__binary_op(<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__value),&#32;*__first);
316 &#32;&#32;&#32;&#32;&#32;&#32;*++__result&#32;=&#32;__value;
317 &#32;&#32;&#32;&#32;}
318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;++__result;
319 &#32;&#32;&#32;&#32;}
320 
335 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator&gt;
336 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
337 &#32;&#32;&#32;&#32;_OutputIterator
338 &#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a8e0ebcf0b7a1a4e60d98f9a377ed012a">adjacent_difference</link>(_InputIterator&#32;__first,
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_InputIterator&#32;__last,&#32;_OutputIterator&#32;__result)
340 &#32;&#32;&#32;&#32;{
341 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;iterator_traits&lt;_InputIterator&gt;::value_type&#32;_ValueType;
342 
343 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
344 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator&gt;)
345 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_OutputIteratorConcept&lt;_OutputIterator,
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType&gt;)
347 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
348 
349 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(__first&#32;==&#32;__last)
350 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;__result;
351 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType&#32;__value&#32;=&#32;*__first;
352 &#32;&#32;&#32;&#32;&#32;&#32;*__result&#32;=&#32;__value;
353 &#32;&#32;&#32;&#32;&#32;&#32;while&#32;(++__first&#32;!=&#32;__last)
354 &#32;&#32;&#32;&#32;{
355 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;*__first;
356 &#32;&#32;&#32;&#32;&#32;&#32;*++__result&#32;=&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;-&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__value);
357 &#32;&#32;&#32;&#32;&#32;&#32;__value&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2move_8h_1a25fb9ca1ff181cdd99fa46b2fd2eeddc">_GLIBCXX_MOVE</link>(<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>);
358 &#32;&#32;&#32;&#32;}
359 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;++__result;
360 &#32;&#32;&#32;&#32;}
361 
378 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_InputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator,
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_BinaryOperation&gt;
380 &#32;&#32;&#32;&#32;_GLIBCXX20_CONSTEXPR
381 &#32;&#32;&#32;&#32;_OutputIterator
382 &#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a8e0ebcf0b7a1a4e60d98f9a377ed012a">adjacent_difference</link>(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last,
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator&#32;__result,&#32;_BinaryOperation&#32;__binary_op)
384 &#32;&#32;&#32;&#32;{
385 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;iterator_traits&lt;_InputIterator&gt;::value_type&#32;_ValueType;
386 
387 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concept&#32;requirements</emphasis>
388 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_InputIteratorConcept&lt;_InputIterator&gt;)
389 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2concept__check_8h_1ad4d65553da008b4ea233b534b21d4009">__glibcxx_function_requires</link>(_OutputIteratorConcept&lt;_OutputIterator,
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType&gt;)
391 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__first,&#32;__last);
392 
393 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(__first&#32;==&#32;__last)
394 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;__result;
395 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType&#32;__value&#32;=&#32;*__first;
396 &#32;&#32;&#32;&#32;&#32;&#32;*__result&#32;=&#32;__value;
397 &#32;&#32;&#32;&#32;&#32;&#32;while&#32;(++__first&#32;!=&#32;__last)
398 &#32;&#32;&#32;&#32;{
399 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;*__first;
400 &#32;&#32;&#32;&#32;&#32;&#32;*++__result&#32;=&#32;__binary_op(<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2stl__numeric_8h_1a62b3310b4595e3e42b5890c9067441b0">_GLIBCXX_MOVE_IF_20</link>(__value));
401 &#32;&#32;&#32;&#32;&#32;&#32;__value&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2move_8h_1a25fb9ca1ff181cdd99fa46b2fd2eeddc">_GLIBCXX_MOVE</link>(<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>);
402 &#32;&#32;&#32;&#32;}
403 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;++__result;
404 &#32;&#32;&#32;&#32;}
405 
407 
408 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_MOVE_IF_20</emphasis>
409 
410 _GLIBCXX_END_NAMESPACE_ALGO
411 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
412 
413 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_STL_NUMERIC_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
