<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/multiway_merge.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/multiway_merge.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;vector&gt;<?linebreak?>#include &lt;bits/stl_algo.h&gt;<?linebreak?>#include &lt;parallel/features.h&gt;<?linebreak?>#include &lt;parallel/parallel.h&gt;<?linebreak?>#include &lt;parallel/losertree.h&gt;<?linebreak?>#include &lt;parallel/multiseq_selection.h&gt;<?linebreak?></programlisting>Include dependency graph for multiway_merge.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class____gnu__parallel_1_1___guarded_iterator">__gnu_parallel::_GuardedIterator&lt; _RAIter, _Compare &gt;</link></para>

<para>_Iterator wrapper supporting an implicit supremum at the end of the sequence, dominating all comparisons. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1___loser_tree_traits">__gnu_parallel::_LoserTreeTraits&lt; _Tp &gt;</link></para>

<para>Traits for determining whether the loser tree should use pointers or copies. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch">__gnu_parallel::__multiway_merge_3_variant_sentinel_switch&lt; __sentinels, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link></para>

<para>Switch for 3-way merging with __sentinels turned off. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch_3_01true_00_01___r_ac490d6391875988d944af0889050584">__gnu_parallel::__multiway_merge_3_variant_sentinel_switch&lt; true, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link></para>

<para>Switch for 3-way merging with __sentinels turned on. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch">__gnu_parallel::__multiway_merge_4_variant_sentinel_switch&lt; __sentinels, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link></para>

<para>Switch for 4-way merging with __sentinels turned off. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch_3_01true_00_01___r_29263920f3b19b06bcc0641dbe166144">__gnu_parallel::__multiway_merge_4_variant_sentinel_switch&lt; true, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link></para>

<para>Switch for 4-way merging with __sentinels turned on. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch">__gnu_parallel::__multiway_merge_k_variant_sentinel_switch&lt; __sentinels, __stable, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link></para>

<para>Switch for k-way merging with __sentinels turned on. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch_3_01false_00_01____93150e0a1bf1e3fb3017cac94cf50485">__gnu_parallel::__multiway_merge_k_variant_sentinel_switch&lt; false, __stable, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link></para>

<para>Switch for k-way merging with __sentinels turned off. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1___sampling_sorter">__gnu_parallel::_SamplingSorter&lt; __stable, _RAIter, _StrictWeakOrdering &gt;</link></para>

<para>Stable sorting functor. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1___sampling_sorter_3_01false_00_01___r_a_iter_00_01___strict_weak_ordering_01_4">__gnu_parallel::_SamplingSorter&lt; false, _RAIter, _StrictWeakOrdering &gt;</link></para>

<para>Non-__stable sorting functor. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__parallel">__gnu_parallel</link></para>

<para>GNU parallel code for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(__s)&#160;&#160;&#160;((__s).second - (__s).<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)</para>

<para>Length of a sequence described by a pair of iterators. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(__a,  __b,  __c,  __c0,  __c1)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(__a,  __b,  __c,  __d)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(__a,  __b,  __c,  __d,  __c0,  __c1,  __c2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _OutputIterator , typename _DifferenceTp , typename _Compare &gt; </para><para>_OutputIterator <link linkend="_namespace____gnu__parallel_1a0059cd13cc6ab70692f8309ad92cb548">__gnu_parallel::__merge_advance</link> (_RAIter1 &amp;__begin1, _RAIter1 __end1, _RAIter2 &amp;__begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)</para>

<para>Merge routine being able to merge only the <computeroutput>__max_length</computeroutput> smallest elements. </para>
</listitem>
            <listitem><para>template&lt;template&lt; typename _RAI, typename _Cp &gt; class iterator, typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1a7ee9d79b73a6f85ae97e472312ba411e">__gnu_parallel::multiway_merge_3_variant</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)</para>

<para>Highly efficient 3-way merging procedure. </para>
</listitem>
            <listitem><para>template&lt;template&lt; typename _RAI, typename _Cp &gt; class iterator, typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1ac4af8f9977aa36823357bce35be6c946">__gnu_parallel::multiway_merge_4_variant</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)</para>

<para>Highly efficient 4-way merging procedure. </para>
</listitem>
            <listitem><para>template&lt;typename _LT , typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1a150b06a4da2cf1cff673d1b6242c27fa">__gnu_parallel::multiway_merge_loser_tree</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)</para>

<para>Multi-way merging procedure for a high branching factor, guarded case. </para>
</listitem>
            <listitem><para>template&lt;typename _LT , typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1a3ffd0c9da50da6118291d38f95d44b52">__gnu_parallel::multiway_merge_loser_tree_unguarded</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits&lt; typename std::iterator_traits&lt; _RAIterIterator &gt;::value_type::first_type &gt;::value_type &amp;__sentinel, _DifferenceTp __length, _Compare __comp)</para>

<para>Multi-way merging procedure for a high branching factor, unguarded case. </para>
</listitem>
            <listitem><para>template&lt;typename _UnguardedLoserTree , typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1a686704fa4da0a4fdbc6800fe46048366">__gnu_parallel::multiway_merge_loser_tree_sentinel</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits&lt; typename std::iterator_traits&lt; _RAIterIterator &gt;::value_type::first_type &gt;::value_type &amp;__sentinel, _DifferenceTp __length, _Compare __comp)</para>

<para>Multi-way merging procedure for a high branching factor, requiring sentinels to exist. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> __stable, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> __sentinels, typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__gnu_parallel::__sequential_multiway_merge</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits&lt; typename std::iterator_traits&lt; _RAIterIterator &gt;::value_type::first_type &gt;::value_type &amp;__sentinel, _DifferenceTp __length, _Compare __comp)</para>

<para>Sequential multi-way merging switch. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> __stable, typename _RAIterIterator , typename _Compare , typename _DifferenceType &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____gnu__parallel_1a0e39d3891745fd0e244fb125bf34ce8b">__gnu_parallel::multiway_merge_sampling_splitting</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _DifferenceType __length, _DifferenceType __total_length, _Compare __comp, std::vector&lt; std::pair&lt; _DifferenceType, _DifferenceType &gt; &gt; *__pieces)</para>

<para>Sampling based splitting for parallel multiway-merge routine. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> __stable, typename _RAIterIterator , typename _Compare , typename _DifferenceType &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">__gnu_parallel::multiway_merge_exact_splitting</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _DifferenceType __length, _DifferenceType __total_length, _Compare __comp, std::vector&lt; std::pair&lt; _DifferenceType, _DifferenceType &gt; &gt; *__pieces)</para>

<para>Exact splitting for parallel multiway-merge routine. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> __stable, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> __sentinels, typename _RAIterIterator , typename _RAIter3 , typename _DifferenceTp , typename _Splitter , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">__gnu_parallel::parallel_multiway_merge</link> (_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _Splitter __splitter, _DifferenceTp __length, _Compare __comp, <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __num_threads)</para>

<para>Parallel multi-way merge routine. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">__gnu_parallel::multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)</para>

<para>Multiway Merge Frontend. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1ac25efc956562ab237b7b6cb733060c6a">__gnu_parallel::multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a8c908c501ec9005517a88a3004ff6a75">__gnu_parallel::multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sampling__tag">__gnu_parallel::sampling_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a18da5adc61694c1f0c3f7735fa8daf2e">__gnu_parallel::multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link> __tag=<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a4569fbe5bdf414f0970bdc38875cdc2f">__gnu_parallel::multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">__gnu_parallel::stable_multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1aeb955a1aae5a2ad2e59e5f990625c678">__gnu_parallel::stable_multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a18b727aab25037e289fecb8d9861963a">__gnu_parallel::stable_multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sampling__tag">sampling_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a31162912a5b53056b8971c3ec0e718ba">__gnu_parallel::stable_multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link> __tag=<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a008a4daae19578fd8b00d789387f039f">__gnu_parallel::stable_multiway_merge</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">__gnu_parallel::multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)</para>

<para>Multiway Merge Frontend. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a5228d191a298cdaa42baacdfc821cc12">__gnu_parallel::multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a5db4fbc41fff695834ee6d0cbc91f8c6">__gnu_parallel::multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sampling__tag">sampling_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1adc0ae12fb2b2ce342e71691226729f1f">__gnu_parallel::multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link> __tag=<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1acb7509d5d4e88c17013e7f7a0fe539d5">__gnu_parallel::multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">__gnu_parallel::stable_multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1ab4bef8eb5bc6bb03b812eb3246e02de4">__gnu_parallel::stable_multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1aba7d273f820b57f9e0c709dbf68e6ee8">__gnu_parallel::stable_multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1sampling__tag">sampling_tag</link> __tag)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a5f4a6f141791040bebf482b269b3be2b">__gnu_parallel::stable_multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link> __tag=<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))</para>
</listitem>
            <listitem><para>template&lt;typename _RAIterPairIterator , typename _RAIterOut , typename _DifferenceTp , typename _Compare &gt; </para><para>_RAIterOut <link linkend="_namespace____gnu__parallel_1a9214bff1fbf949614c5f7f7d6fe129c3">__gnu_parallel::stable_multiway_merge_sentinels</link> (_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, <link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link> __tag)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba"/><section>
    <title>_GLIBCXX_PARALLEL_DECISION</title>
<indexterm><primary>_GLIBCXX_PARALLEL_DECISION</primary><secondary>multiway_merge.h</secondary></indexterm>
<indexterm><primary>multiway_merge.h</primary><secondary>_GLIBCXX_PARALLEL_DECISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_PARALLEL_DECISION( __a,  __b,  __c,  __d)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;\
&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__d&#32;&lt;&#32;__seq&#32;##&#32;__a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s&#32;##&#32;__d&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__d&#32;&lt;&#32;__seq&#32;##&#32;__b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s&#32;##&#32;__a&#32;##&#32;__d&#32;##&#32;__b&#32;##&#32;__c;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__d&#32;&lt;&#32;__seq&#32;##&#32;__c)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__d&#32;##&#32;__c;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d;&#32;&#32;}
</programlisting></section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085"/><section>
    <title>_GLIBCXX_PARALLEL_LENGTH</title>
<indexterm><primary>_GLIBCXX_PARALLEL_LENGTH</primary><secondary>multiway_merge.h</secondary></indexterm>
<indexterm><primary>multiway_merge.h</primary><secondary>_GLIBCXX_PARALLEL_LENGTH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_PARALLEL_LENGTH( __s)&#160;&#160;&#160;((__s).second - (__s).<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)</computeroutput></para><para>

<para>Length of a sequence described by a pair of iterators. </para>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2"/><section>
    <title>_GLIBCXX_PARALLEL_MERGE_3_CASE</title>
<indexterm><primary>_GLIBCXX_PARALLEL_MERGE_3_CASE</primary><secondary>multiway_merge.h</secondary></indexterm>
<indexterm><primary>multiway_merge.h</primary><secondary>_GLIBCXX_PARALLEL_MERGE_3_CASE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_PARALLEL_MERGE_3_CASE( __a,  __b,  __c,  __c0,  __c1)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;&#32;&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;*__target&#32;=&#32;*__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;++__target;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;--__length;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;++__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if&#32;(__length&#32;==&#32;0)&#32;goto&#32;__finish;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(__seq&#32;<emphasis role="preprocessor">##&#32;__a&#32;__c0&#32;__seq&#32;##&#32;__b)&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c1&#32;__seq&#32;##&#32;__c)&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__a&#32;##&#32;__c;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__a;</emphasis>
</programlisting></section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6"/><section>
    <title>_GLIBCXX_PARALLEL_MERGE_4_CASE</title>
<indexterm><primary>_GLIBCXX_PARALLEL_MERGE_4_CASE</primary><secondary>multiway_merge.h</secondary></indexterm>
<indexterm><primary>multiway_merge.h</primary><secondary>_GLIBCXX_PARALLEL_MERGE_4_CASE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_PARALLEL_MERGE_4_CASE( __a,  __b,  __c,  __d,  __c0,  __c1,  __c2)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;&#32;&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__length&#32;==&#32;0)&#32;goto&#32;__finish;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;*__target&#32;=&#32;*__seq&#32;<emphasis role="preprocessor">##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;++__target;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;--__length;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;++__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c0&#32;__seq&#32;##&#32;__b)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c1&#32;__seq&#32;##&#32;__c)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__a&#32;##&#32;__c&#32;##&#32;__d;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c2&#32;__seq&#32;##&#32;__d)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__a&#32;##&#32;__d;&#32;&#32;\</emphasis>
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d&#32;##&#32;__a;</emphasis>
</programlisting></section>
</section>
</section>
