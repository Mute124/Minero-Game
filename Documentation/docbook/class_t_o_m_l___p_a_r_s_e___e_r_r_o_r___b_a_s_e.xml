<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e" xml:lang="en-US">
<title>TOML_PARSE_ERROR_BASE Class Reference</title>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary></indexterm>
<para>

<para>An error generated when parsing fails. </para>
 
</para>
<para>
<computeroutput>#include &lt;parse_error.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a00e25a3aafdabaecf43c1b963c932933">parse_error</link> (std::string &amp;&amp;desc, <link linkend="_structsource__region">source_region</link> &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a2e2596415c0b4416ea318f066b31c780">parse_error</link> (std::string &amp;&amp;desc, const <link linkend="_structsource__region">source_region</link> &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cad309102946c5e9570f052fa4a2da8">parse_error</link> (std::string &amp;&amp;desc, const <link linkend="_structsource__position">source_position</link> &amp;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp;<link linkend="_classpath">path</link>={}) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> std::string_view <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cd74000216c01fdb432ec811cb51d2a">description</link> () const noexcept</para>

<para>Returns a textual description of the error. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structsource__region">source_region</link> &amp; <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a7bc4debd390ea05d61cf6a11707edfd2">source</link> () const noexcept</para>

<para>Returns the region of the source document responsible for the error. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a00e25a3aafdabaecf43c1b963c932933">parse_error</link> (std::string &amp;&amp;desc, <link linkend="_structsource__region">source_region</link> &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a2e2596415c0b4416ea318f066b31c780">parse_error</link> (std::string &amp;&amp;desc, const <link linkend="_structsource__region">source_region</link> &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cad309102946c5e9570f052fa4a2da8">parse_error</link> (std::string &amp;&amp;desc, const <link linkend="_structsource__position">source_position</link> &amp;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp;<link linkend="_classpath">path</link>={}) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> std::string_view <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cd74000216c01fdb432ec811cb51d2a">description</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structsource__region">source_region</link> &amp; <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a7bc4debd390ea05d61cf6a11707edfd2">source</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>std::ostream &amp; <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a3708b936f4344b8ca8a0e6a0de70f687">operator&lt;&lt;</link> (std::ostream &amp;lhs, const parse_error &amp;rhs)</para>

<para>Prints a parse_error to a stream. </para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a3708b936f4344b8ca8a0e6a0de70f687">operator&lt;&lt;</link> (std::ostream &amp;lhs, const parse_error &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>An error generated when parsing fails. </para>



<para><formalpara><title>Remarks</title>

<para>This class inherits from std::runtime_error when exceptions are enabled. The public interface is the same regardless of exception mode. </para>
</formalpara>
</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cd74000216c01fdb432ec811cb51d2a"/><section>
    <title>description()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>description</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>description</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> std::string_view TOML_PARSE_ERROR_BASE::description ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns a textual description of the error. </para>
</para>

<para><formalpara><title>Remarks</title>

<para>The backing string is guaranteed to be null-terminated. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cd74000216c01fdb432ec811cb51d2a"/><section>
    <title>description()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>description</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>description</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> std::string_view TOML_PARSE_ERROR_BASE::description ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cad309102946c5e9570f052fa4a2da8"/><section>
    <title>parse_error()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>parse_error</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>parse_error</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> TOML_PARSE_ERROR_BASE::parse_error (std::string &amp;&amp; desc, const <link linkend="_structsource__position">source_position</link> &amp; position, const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp; path = <computeroutput>{}</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a8cad309102946c5e9570f052fa4a2da8"/><section>
    <title>parse_error()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>parse_error</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>parse_error</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> TOML_PARSE_ERROR_BASE::parse_error (std::string &amp;&amp; desc, const <link linkend="_structsource__position">source_position</link> &amp; position, const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp; path = <computeroutput>{}</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a2e2596415c0b4416ea318f066b31c780"/><section>
    <title>parse_error()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>parse_error</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>parse_error</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> TOML_PARSE_ERROR_BASE::parse_error (std::string &amp;&amp; desc, const <link linkend="_structsource__region">source_region</link> &amp; src)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_a2e2596415c0b4416ea318f066b31c780_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a2e2596415c0b4416ea318f066b31c780"/><section>
    <title>parse_error()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>parse_error</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>parse_error</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> TOML_PARSE_ERROR_BASE::parse_error (std::string &amp;&amp; desc, const <link linkend="_structsource__region">source_region</link> &amp; src)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_a2e2596415c0b4416ea318f066b31c780_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a00e25a3aafdabaecf43c1b963c932933"/><section>
    <title>parse_error()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>parse_error</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>parse_error</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> TOML_PARSE_ERROR_BASE::parse_error (std::string &amp;&amp; desc, <link linkend="_structsource__region">source_region</link> &amp;&amp; src)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_a00e25a3aafdabaecf43c1b963c932933_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a00e25a3aafdabaecf43c1b963c932933"/><section>
    <title>parse_error()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>parse_error</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>parse_error</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> TOML_PARSE_ERROR_BASE::parse_error (std::string &amp;&amp; desc, <link linkend="_structsource__region">source_region</link> &amp;&amp; src)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_a00e25a3aafdabaecf43c1b963c932933_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a7bc4debd390ea05d61cf6a11707edfd2"/><section>
    <title>source()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>source</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>source</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structsource__region">source_region</link> &amp; TOML_PARSE_ERROR_BASE::source ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns the region of the source document responsible for the error. </para>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a7bc4debd390ea05d61cf6a11707edfd2"/><section>
    <title>source()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>source</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>source</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structsource__region">source_region</link> &amp; TOML_PARSE_ERROR_BASE::source ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a3708b936f4344b8ca8a0e6a0de70f687"/><section>
    <title>operator&lt;&lt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const parse_error &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Prints a parse_error to a stream. </para>
</para>

<para>\detail \cpp try { auto tbl = toml::parse(&quot;enabled = trUe&quot;sv); } catch (const toml::parse_error &amp; err) { std::cerr &lt;&lt; &quot;Parsing failed:\n&quot;sv &lt;&lt; err &lt;&lt; &quot;\n&quot;; } \ecpp</para>

<para>\out Parsing failed: Encountered unexpected character while parsing boolean; expected &apos;true&apos;, saw &apos;trU&apos; (error occurred at line 1, column 13) \eout</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Char</entry><entry>
<para>The output stream&apos;s underlying character type. Must be 1 byte in size. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>lhs</entry><entry>
<para>The stream. </para>
</entry>
                            </row>
                            <row>
<entry>rhs</entry><entry>
<para>The parse_error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The input stream. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e_1a3708b936f4344b8ca8a0e6a0de70f687"/><section>
    <title>operator&lt;&lt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const parse_error &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/<link linkend="_parse__error_8h">parse_error.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
