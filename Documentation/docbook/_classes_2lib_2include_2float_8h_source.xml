<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2float_8h_source" xml:lang="en-US">
<title>float.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/float.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2002-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="comment">/*</emphasis>
25 <emphasis role="comment">&#32;*&#32;ISO&#32;C&#32;Standard:&#32;&#32;5.2.4.2.2&#32;&#32;Characteristics&#32;of&#32;floating&#32;types&#32;&lt;float.h&gt;</emphasis>
26 <emphasis role="comment">&#32;*/</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_FLOAT_H___</emphasis>
29 <emphasis role="preprocessor">#define&#32;_FLOAT_H___</emphasis>
30 
31 <emphasis role="comment">/*&#32;Radix&#32;of&#32;exponent&#32;representation,&#32;b.&#32;*/</emphasis>
32 <emphasis role="preprocessor">#undef&#32;FLT_RADIX</emphasis>
33 <emphasis role="preprocessor">#define&#32;FLT_RADIX&#32;&#32;&#32;__FLT_RADIX__</emphasis>
34 
35 <emphasis role="comment">/*&#32;Number&#32;of&#32;base-FLT_RADIX&#32;digits&#32;in&#32;the&#32;significand,&#32;p.&#32;&#32;*/</emphasis>
36 <emphasis role="preprocessor">#undef&#32;FLT_MANT_DIG</emphasis>
37 <emphasis role="preprocessor">#undef&#32;DBL_MANT_DIG</emphasis>
38 <emphasis role="preprocessor">#undef&#32;LDBL_MANT_DIG</emphasis>
39 <emphasis role="preprocessor">#define&#32;FLT_MANT_DIG&#32;&#32;&#32;&#32;__FLT_MANT_DIG__</emphasis>
40 <emphasis role="preprocessor">#define&#32;DBL_MANT_DIG&#32;&#32;&#32;&#32;__DBL_MANT_DIG__</emphasis>
41 <emphasis role="preprocessor">#define&#32;LDBL_MANT_DIG&#32;&#32;&#32;__LDBL_MANT_DIG__</emphasis>
42 
43 <emphasis role="comment">/*&#32;Number&#32;of&#32;decimal&#32;digits,&#32;q,&#32;such&#32;that&#32;any&#32;floating-point&#32;number&#32;with&#32;q</emphasis>
44 <emphasis role="comment">&#32;&#32;&#32;decimal&#32;digits&#32;can&#32;be&#32;rounded&#32;into&#32;a&#32;floating-point&#32;number&#32;with&#32;p&#32;radix&#32;b</emphasis>
45 <emphasis role="comment">&#32;&#32;&#32;digits&#32;and&#32;back&#32;again&#32;without&#32;change&#32;to&#32;the&#32;q&#32;decimal&#32;digits,</emphasis>
46 <emphasis role="comment"></emphasis>
47 <emphasis role="comment">&#32;&#32;&#32;&#32;p&#32;*&#32;log10(b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;b&#32;is&#32;a&#32;power&#32;of&#32;10</emphasis>
48 <emphasis role="comment">&#32;&#32;&#32;&#32;floor((p&#32;-&#32;1)&#32;*&#32;log10(b))&#32;&#32;&#32;otherwise</emphasis>
49 <emphasis role="comment">*/</emphasis>
50 <emphasis role="preprocessor">#undef&#32;FLT_DIG</emphasis>
51 <emphasis role="preprocessor">#undef&#32;DBL_DIG</emphasis>
52 <emphasis role="preprocessor">#undef&#32;LDBL_DIG</emphasis>
53 <emphasis role="preprocessor">#define&#32;FLT_DIG&#32;&#32;&#32;&#32;&#32;__FLT_DIG__</emphasis>
54 <emphasis role="preprocessor">#define&#32;DBL_DIG&#32;&#32;&#32;&#32;&#32;__DBL_DIG__</emphasis>
55 <emphasis role="preprocessor">#define&#32;LDBL_DIG&#32;&#32;&#32;&#32;__LDBL_DIG__</emphasis>
56 
57 <emphasis role="comment">/*&#32;Minimum&#32;int&#32;x&#32;such&#32;that&#32;FLT_RADIX**(x-1)&#32;is&#32;a&#32;normalized&#32;float,&#32;emin&#32;*/</emphasis>
58 <emphasis role="preprocessor">#undef&#32;FLT_MIN_EXP</emphasis>
59 <emphasis role="preprocessor">#undef&#32;DBL_MIN_EXP</emphasis>
60 <emphasis role="preprocessor">#undef&#32;LDBL_MIN_EXP</emphasis>
61 <emphasis role="preprocessor">#define&#32;FLT_MIN_EXP&#32;__FLT_MIN_EXP__</emphasis>
62 <emphasis role="preprocessor">#define&#32;DBL_MIN_EXP&#32;__DBL_MIN_EXP__</emphasis>
63 <emphasis role="preprocessor">#define&#32;LDBL_MIN_EXP&#32;&#32;&#32;&#32;__LDBL_MIN_EXP__</emphasis>
64 
65 <emphasis role="comment">/*&#32;Minimum&#32;negative&#32;integer&#32;such&#32;that&#32;10&#32;raised&#32;to&#32;that&#32;power&#32;is&#32;in&#32;the</emphasis>
66 <emphasis role="comment">&#32;&#32;&#32;range&#32;of&#32;normalized&#32;floating-point&#32;numbers,</emphasis>
67 <emphasis role="comment"></emphasis>
68 <emphasis role="comment">&#32;&#32;&#32;&#32;ceil(log10(b)&#32;*&#32;(emin&#32;-&#32;1))</emphasis>
69 <emphasis role="comment">*/</emphasis>
70 <emphasis role="preprocessor">#undef&#32;FLT_MIN_10_EXP</emphasis>
71 <emphasis role="preprocessor">#undef&#32;DBL_MIN_10_EXP</emphasis>
72 <emphasis role="preprocessor">#undef&#32;LDBL_MIN_10_EXP</emphasis>
73 <emphasis role="preprocessor">#define&#32;FLT_MIN_10_EXP&#32;&#32;__FLT_MIN_10_EXP__</emphasis>
74 <emphasis role="preprocessor">#define&#32;DBL_MIN_10_EXP&#32;&#32;__DBL_MIN_10_EXP__</emphasis>
75 <emphasis role="preprocessor">#define&#32;LDBL_MIN_10_EXP&#32;__LDBL_MIN_10_EXP__</emphasis>
76 
77 <emphasis role="comment">/*&#32;Maximum&#32;int&#32;x&#32;such&#32;that&#32;FLT_RADIX**(x-1)&#32;is&#32;a&#32;representable&#32;float,&#32;emax.&#32;&#32;*/</emphasis>
78 <emphasis role="preprocessor">#undef&#32;FLT_MAX_EXP</emphasis>
79 <emphasis role="preprocessor">#undef&#32;DBL_MAX_EXP</emphasis>
80 <emphasis role="preprocessor">#undef&#32;LDBL_MAX_EXP</emphasis>
81 <emphasis role="preprocessor">#define&#32;FLT_MAX_EXP&#32;__FLT_MAX_EXP__</emphasis>
82 <emphasis role="preprocessor">#define&#32;DBL_MAX_EXP&#32;__DBL_MAX_EXP__</emphasis>
83 <emphasis role="preprocessor">#define&#32;LDBL_MAX_EXP&#32;&#32;&#32;&#32;__LDBL_MAX_EXP__</emphasis>
84 
85 <emphasis role="comment">/*&#32;Maximum&#32;integer&#32;such&#32;that&#32;10&#32;raised&#32;to&#32;that&#32;power&#32;is&#32;in&#32;the&#32;range&#32;of</emphasis>
86 <emphasis role="comment">&#32;&#32;&#32;representable&#32;finite&#32;floating-point&#32;numbers,</emphasis>
87 <emphasis role="comment"></emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;&#32;floor(log10((1&#32;-&#32;b**-p)&#32;*&#32;b**emax))</emphasis>
89 <emphasis role="comment">*/</emphasis>
90 <emphasis role="preprocessor">#undef&#32;FLT_MAX_10_EXP</emphasis>
91 <emphasis role="preprocessor">#undef&#32;DBL_MAX_10_EXP</emphasis>
92 <emphasis role="preprocessor">#undef&#32;LDBL_MAX_10_EXP</emphasis>
93 <emphasis role="preprocessor">#define&#32;FLT_MAX_10_EXP&#32;&#32;__FLT_MAX_10_EXP__</emphasis>
94 <emphasis role="preprocessor">#define&#32;DBL_MAX_10_EXP&#32;&#32;__DBL_MAX_10_EXP__</emphasis>
95 <emphasis role="preprocessor">#define&#32;LDBL_MAX_10_EXP&#32;__LDBL_MAX_10_EXP__</emphasis>
96 
97 <emphasis role="comment">/*&#32;Maximum&#32;representable&#32;finite&#32;floating-point&#32;number,</emphasis>
98 <emphasis role="comment"></emphasis>
99 <emphasis role="comment">&#32;&#32;&#32;&#32;(1&#32;-&#32;b**-p)&#32;*&#32;b**emax</emphasis>
100 <emphasis role="comment">*/</emphasis>
101 <emphasis role="preprocessor">#undef&#32;FLT_MAX</emphasis>
102 <emphasis role="preprocessor">#undef&#32;DBL_MAX</emphasis>
103 <emphasis role="preprocessor">#undef&#32;LDBL_MAX</emphasis>
104 <emphasis role="preprocessor">#define&#32;FLT_MAX&#32;&#32;&#32;&#32;&#32;__FLT_MAX__</emphasis>
105 <emphasis role="preprocessor">#define&#32;DBL_MAX&#32;&#32;&#32;&#32;&#32;__DBL_MAX__</emphasis>
106 <emphasis role="preprocessor">#define&#32;LDBL_MAX&#32;&#32;&#32;&#32;__LDBL_MAX__</emphasis>
107 
108 <emphasis role="comment">/*&#32;The&#32;difference&#32;between&#32;1&#32;and&#32;the&#32;least&#32;value&#32;greater&#32;than&#32;1&#32;that&#32;is</emphasis>
109 <emphasis role="comment">&#32;&#32;&#32;representable&#32;in&#32;the&#32;given&#32;floating&#32;point&#32;type,&#32;b**1-p.&#32;&#32;*/</emphasis>
110 <emphasis role="preprocessor">#undef&#32;FLT_EPSILON</emphasis>
111 <emphasis role="preprocessor">#undef&#32;DBL_EPSILON</emphasis>
112 <emphasis role="preprocessor">#undef&#32;LDBL_EPSILON</emphasis>
113 <emphasis role="preprocessor">#define&#32;FLT_EPSILON&#32;__FLT_EPSILON__</emphasis>
114 <emphasis role="preprocessor">#define&#32;DBL_EPSILON&#32;__DBL_EPSILON__</emphasis>
115 <emphasis role="preprocessor">#define&#32;LDBL_EPSILON&#32;&#32;&#32;&#32;__LDBL_EPSILON__</emphasis>
116 
117 <emphasis role="comment">/*&#32;Minimum&#32;normalized&#32;positive&#32;floating-point&#32;number,&#32;b**(emin&#32;-&#32;1).&#32;&#32;*/</emphasis>
118 <emphasis role="preprocessor">#undef&#32;FLT_MIN</emphasis>
119 <emphasis role="preprocessor">#undef&#32;DBL_MIN</emphasis>
120 <emphasis role="preprocessor">#undef&#32;LDBL_MIN</emphasis>
121 <emphasis role="preprocessor">#define&#32;FLT_MIN&#32;&#32;&#32;&#32;&#32;__FLT_MIN__</emphasis>
122 <emphasis role="preprocessor">#define&#32;DBL_MIN&#32;&#32;&#32;&#32;&#32;__DBL_MIN__</emphasis>
123 <emphasis role="preprocessor">#define&#32;LDBL_MIN&#32;&#32;&#32;&#32;__LDBL_MIN__</emphasis>
124 
125 <emphasis role="comment">/*&#32;Addition&#32;rounds&#32;to&#32;0:&#32;zero,&#32;1:&#32;nearest,&#32;2:&#32;+inf,&#32;3:&#32;-inf,&#32;-1:&#32;unknown.&#32;&#32;*/</emphasis>
126 <emphasis role="comment">/*&#32;???&#32;This&#32;is&#32;supposed&#32;to&#32;change&#32;with&#32;calls&#32;to&#32;fesetround&#32;in&#32;&lt;fenv.h&gt;.&#32;&#32;*/</emphasis>
127 <emphasis role="preprocessor">#undef&#32;FLT_ROUNDS</emphasis>
128 <emphasis role="preprocessor">#define&#32;FLT_ROUNDS&#32;1</emphasis>
129 
130 <emphasis role="preprocessor">#if&#32;(defined&#32;(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;199901L)&#32;\</emphasis>
131 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;(defined&#32;(__cplusplus)&#32;&amp;&amp;&#32;__cplusplus&#32;&gt;=&#32;201103L)</emphasis>
132 <emphasis role="comment">/*&#32;The&#32;floating-point&#32;expression&#32;evaluation&#32;method.&#32;&#32;The&#32;precise</emphasis>
133 <emphasis role="comment">&#32;&#32;&#32;definitions&#32;of&#32;these&#32;values&#32;are&#32;generalised&#32;to&#32;include&#32;support&#32;for</emphasis>
134 <emphasis role="comment">&#32;&#32;&#32;the&#32;interchange&#32;and&#32;extended&#32;types&#32;defined&#32;in&#32;ISO/IEC&#32;TS&#32;18661-3.</emphasis>
135 <emphasis role="comment">&#32;&#32;&#32;Prior&#32;to&#32;this&#32;(for&#32;C99/C11)&#32;the&#32;definitions&#32;were:</emphasis>
136 <emphasis role="comment"></emphasis>
137 <emphasis role="comment">&#32;&#32;&#32;&#32;-1&#32;&#32;indeterminate</emphasis>
138 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;0&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants&#32;just&#32;to&#32;the&#32;range&#32;and</emphasis>
139 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;the&#32;type</emphasis>
140 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;1&#32;&#32;evaluate&#32;operations&#32;and&#32;constants&#32;of&#32;type&#32;float&#32;and&#32;double</emphasis>
141 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;double&#32;type,&#32;evaluate</emphasis>
142 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;long&#32;double&#32;operations&#32;and&#32;constants&#32;to&#32;the&#32;range&#32;and</emphasis>
143 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;the&#32;long&#32;double&#32;type</emphasis>
144 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;2&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants&#32;to&#32;the&#32;range&#32;and</emphasis>
145 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;the&#32;long&#32;double&#32;type</emphasis>
146 <emphasis role="comment"></emphasis>
147 <emphasis role="comment">&#32;&#32;&#32;The&#32;TS&#32;18661-3&#32;definitions&#32;are:</emphasis>
148 <emphasis role="comment"></emphasis>
149 <emphasis role="comment">&#32;&#32;&#32;&#32;-1&#32;&#32;indeterminate</emphasis>
150 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;0&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants,&#32;whose&#32;semantic&#32;type&#32;has</emphasis>
151 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;most&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;float,&#32;to&#32;the&#32;range&#32;and</emphasis>
152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;float;&#32;evaluate&#32;all&#32;other&#32;operations&#32;and&#32;constants</emphasis>
153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;semantic&#32;type.</emphasis>
154 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;1&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants,&#32;whose&#32;semantic&#32;type&#32;has</emphasis>
155 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;most&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;double,&#32;to&#32;the&#32;range&#32;and</emphasis>
156 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;double;&#32;evaluate&#32;all&#32;other&#32;operations&#32;and&#32;constants</emphasis>
157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;semantic&#32;type.</emphasis>
158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;2&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants,&#32;whose&#32;semantic&#32;type&#32;has</emphasis>
159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;most&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;long&#32;double,&#32;to&#32;the&#32;range&#32;and</emphasis>
160 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;long&#32;double;&#32;evaluate&#32;all&#32;other&#32;operations&#32;and</emphasis>
161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constants&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;semantic&#32;type.</emphasis>
162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;N&#32;&#32;where&#32;_FloatN&#32;&#32;is&#32;a&#32;supported&#32;interchange&#32;floating&#32;type</emphasis>
163 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants,&#32;whose&#32;semantic&#32;type&#32;has</emphasis>
164 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;most&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;_FloatN&#32;type,&#32;to&#32;the</emphasis>
165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;_FloatN&#32;type;&#32;evaluate&#32;all&#32;other</emphasis>
166 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;operations&#32;and&#32;constants&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the</emphasis>
167 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semantic&#32;type.</emphasis>
168 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;N&#32;+&#32;1,&#32;where&#32;_FloatNx&#32;is&#32;a&#32;supported&#32;extended&#32;floating&#32;type</emphasis>
169 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluate&#32;operations&#32;and&#32;constants,&#32;whose&#32;semantic&#32;type&#32;has&#32;at</emphasis>
170 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;most&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;_FloatNx&#32;type,&#32;to&#32;the&#32;range</emphasis>
171 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;precision&#32;of&#32;the&#32;_FloatNx&#32;type;&#32;evaluate&#32;all&#32;other</emphasis>
172 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;operations&#32;and&#32;constants&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the</emphasis>
173 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semantic&#32;type.</emphasis>
174 <emphasis role="comment"></emphasis>
175 <emphasis role="comment">&#32;&#32;&#32;The&#32;compiler&#32;predefines&#32;two&#32;macros:</emphasis>
176 <emphasis role="comment"></emphasis>
177 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;__FLT_EVAL_METHOD__</emphasis>
178 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Which,&#32;depending&#32;on&#32;the&#32;value&#32;given&#32;for</emphasis>
179 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;-fpermitted-flt-eval-methods,&#32;may&#32;be&#32;limited&#32;to&#32;only&#32;those&#32;values</emphasis>
180 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;for&#32;FLT_EVAL_METHOD&#32;defined&#32;in&#32;C99/C11.</emphasis>
181 <emphasis role="comment"></emphasis>
182 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__FLT_EVAL_METHOD_TS_18661_3__</emphasis>
183 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Which&#32;always&#32;permits&#32;the&#32;values&#32;for&#32;FLT_EVAL_METHOD&#32;defined&#32;in</emphasis>
184 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;ISO/IEC&#32;TS&#32;18661-3.</emphasis>
185 <emphasis role="comment"></emphasis>
186 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;Here&#32;we&#32;want&#32;to&#32;use&#32;__FLT_EVAL_METHOD__,&#32;unless</emphasis>
187 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__STDC_WANT_IEC_60559_TYPES_EXT__&#32;is&#32;defined,&#32;in&#32;which&#32;case&#32;the&#32;user</emphasis>
188 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;is&#32;specifically&#32;asking&#32;for&#32;the&#32;ISO/IEC&#32;TS&#32;18661-3&#32;types,&#32;so&#32;we&#32;use</emphasis>
189 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__FLT_EVAL_METHOD_TS_18661_3__.</emphasis>
190 <emphasis role="comment"></emphasis>
191 <emphasis role="comment">&#32;&#32;&#32;???&#32;This&#32;ought&#32;to&#32;change&#32;with&#32;the&#32;setting&#32;of&#32;the&#32;fp&#32;control&#32;word;</emphasis>
192 <emphasis role="comment">&#32;&#32;&#32;the&#32;value&#32;provided&#32;by&#32;the&#32;compiler&#32;assumes&#32;the&#32;widest&#32;setting.&#32;&#32;*/</emphasis>
193 <emphasis role="preprocessor">#undef&#32;FLT_EVAL_METHOD</emphasis>
194 <emphasis role="preprocessor">#ifdef&#32;__STDC_WANT_IEC_60559_TYPES_EXT__</emphasis>
195 <emphasis role="preprocessor">#define&#32;FLT_EVAL_METHOD&#32;__FLT_EVAL_METHOD_TS_18661_3__</emphasis>
196 <emphasis role="preprocessor">#else</emphasis>
197 <emphasis role="preprocessor">#define&#32;FLT_EVAL_METHOD&#32;__FLT_EVAL_METHOD__</emphasis>
198 <emphasis role="preprocessor">#endif</emphasis>
199 
200 <emphasis role="comment">/*&#32;Number&#32;of&#32;decimal&#32;digits,&#32;n,&#32;such&#32;that&#32;any&#32;floating-point&#32;number&#32;in&#32;the</emphasis>
201 <emphasis role="comment">&#32;&#32;&#32;widest&#32;supported&#32;floating&#32;type&#32;with&#32;pmax&#32;radix&#32;b&#32;digits&#32;can&#32;be&#32;rounded</emphasis>
202 <emphasis role="comment">&#32;&#32;&#32;to&#32;a&#32;floating-point&#32;number&#32;with&#32;n&#32;decimal&#32;digits&#32;and&#32;back&#32;again&#32;without</emphasis>
203 <emphasis role="comment">&#32;&#32;&#32;change&#32;to&#32;the&#32;value,</emphasis>
204 <emphasis role="comment"></emphasis>
205 <emphasis role="comment">&#32;&#32;&#32;&#32;pmax&#32;*&#32;log10(b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;b&#32;is&#32;a&#32;power&#32;of&#32;10</emphasis>
206 <emphasis role="comment">&#32;&#32;&#32;&#32;ceil(1&#32;+&#32;pmax&#32;*&#32;log10(b))&#32;&#32;&#32;otherwise</emphasis>
207 <emphasis role="comment">*/</emphasis>
208 <emphasis role="preprocessor">#undef&#32;DECIMAL_DIG</emphasis>
209 <emphasis role="preprocessor">#define&#32;DECIMAL_DIG&#32;__DECIMAL_DIG__</emphasis>
210 
211 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C99&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
212 
213 <emphasis role="preprocessor">#if&#32;(defined&#32;(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;201112L)&#32;\</emphasis>
214 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;(defined&#32;(__cplusplus)&#32;&amp;&amp;&#32;__cplusplus&#32;&gt;=&#32;201703L)</emphasis>
215 <emphasis role="comment">/*&#32;Versions&#32;of&#32;DECIMAL_DIG&#32;for&#32;each&#32;floating-point&#32;type.&#32;&#32;*/</emphasis>
216 <emphasis role="preprocessor">#undef&#32;FLT_DECIMAL_DIG</emphasis>
217 <emphasis role="preprocessor">#undef&#32;DBL_DECIMAL_DIG</emphasis>
218 <emphasis role="preprocessor">#undef&#32;LDBL_DECIMAL_DIG</emphasis>
219 <emphasis role="preprocessor">#define&#32;FLT_DECIMAL_DIG&#32;&#32;&#32;&#32;&#32;__FLT_DECIMAL_DIG__</emphasis>
220 <emphasis role="preprocessor">#define&#32;DBL_DECIMAL_DIG&#32;&#32;&#32;&#32;&#32;__DBL_DECIMAL_DIG__</emphasis>
221 <emphasis role="preprocessor">#define&#32;LDBL_DECIMAL_DIG&#32;&#32;&#32;&#32;__LDBL_DECIMAL_DIG__</emphasis>
222 
223 <emphasis role="comment">/*&#32;Whether&#32;types&#32;support&#32;subnormal&#32;numbers.&#32;&#32;*/</emphasis>
224 <emphasis role="preprocessor">#undef&#32;FLT_HAS_SUBNORM</emphasis>
225 <emphasis role="preprocessor">#undef&#32;DBL_HAS_SUBNORM</emphasis>
226 <emphasis role="preprocessor">#undef&#32;LDBL_HAS_SUBNORM</emphasis>
227 <emphasis role="preprocessor">#define&#32;FLT_HAS_SUBNORM&#32;&#32;&#32;&#32;&#32;__FLT_HAS_DENORM__</emphasis>
228 <emphasis role="preprocessor">#define&#32;DBL_HAS_SUBNORM&#32;&#32;&#32;&#32;&#32;__DBL_HAS_DENORM__</emphasis>
229 <emphasis role="preprocessor">#define&#32;LDBL_HAS_SUBNORM&#32;&#32;&#32;&#32;__LDBL_HAS_DENORM__</emphasis>
230 
231 <emphasis role="comment">/*&#32;Minimum&#32;positive&#32;values,&#32;including&#32;subnormals.&#32;&#32;*/</emphasis>
232 <emphasis role="preprocessor">#undef&#32;FLT_TRUE_MIN</emphasis>
233 <emphasis role="preprocessor">#undef&#32;DBL_TRUE_MIN</emphasis>
234 <emphasis role="preprocessor">#undef&#32;LDBL_TRUE_MIN</emphasis>
235 <emphasis role="preprocessor">#define&#32;FLT_TRUE_MIN&#32;&#32;&#32;&#32;__FLT_DENORM_MIN__</emphasis>
236 <emphasis role="preprocessor">#define&#32;DBL_TRUE_MIN&#32;&#32;&#32;&#32;__DBL_DENORM_MIN__</emphasis>
237 <emphasis role="preprocessor">#define&#32;LDBL_TRUE_MIN&#32;&#32;&#32;__LDBL_DENORM_MIN__</emphasis>
238 
239 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C11&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
240 
241 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
242 <emphasis role="comment">/*&#32;Maximum&#32;finite&#32;positive&#32;value&#32;with&#32;MANT_DIG&#32;digits&#32;in&#32;the</emphasis>
243 <emphasis role="comment">&#32;&#32;&#32;significand&#32;taking&#32;their&#32;maximum&#32;value.&#32;&#32;*/</emphasis>
244 <emphasis role="preprocessor">#undef&#32;FLT_NORM_MAX</emphasis>
245 <emphasis role="preprocessor">#undef&#32;DBL_NORM_MAX</emphasis>
246 <emphasis role="preprocessor">#undef&#32;LDBL_NORM_MAX</emphasis>
247 <emphasis role="preprocessor">#define&#32;FLT_NORM_MAX&#32;&#32;&#32;&#32;__FLT_NORM_MAX__</emphasis>
248 <emphasis role="preprocessor">#define&#32;DBL_NORM_MAX&#32;&#32;&#32;&#32;__DBL_NORM_MAX__</emphasis>
249 <emphasis role="preprocessor">#define&#32;LDBL_NORM_MAX&#32;&#32;&#32;__LDBL_NORM_MAX__</emphasis>
250 
251 <emphasis role="comment">/*&#32;Whether&#32;each&#32;type&#32;matches&#32;an&#32;IEC&#32;60559&#32;format&#32;(1&#32;for&#32;format,&#32;2&#32;for</emphasis>
252 <emphasis role="comment">&#32;&#32;&#32;format&#32;and&#32;operations).&#32;&#32;*/</emphasis>
253 <emphasis role="preprocessor">#undef&#32;FLT_IS_IEC_60559</emphasis>
254 <emphasis role="preprocessor">#undef&#32;DBL_IS_IEC_60559</emphasis>
255 <emphasis role="preprocessor">#undef&#32;LDBL_IS_IEC_60559</emphasis>
256 <emphasis role="preprocessor">#define&#32;FLT_IS_IEC_60559&#32;&#32;&#32;&#32;__FLT_IS_IEC_60559__</emphasis>
257 <emphasis role="preprocessor">#define&#32;DBL_IS_IEC_60559&#32;&#32;&#32;&#32;__DBL_IS_IEC_60559__</emphasis>
258 <emphasis role="preprocessor">#define&#32;LDBL_IS_IEC_60559&#32;&#32;&#32;__LDBL_IS_IEC_60559__</emphasis>
259 
260 <emphasis role="comment">/*&#32;Infinity&#32;in&#32;type&#32;float,&#32;or&#32;overflow&#32;if&#32;infinity&#32;not&#32;supported.&#32;&#32;*/</emphasis>
261 <emphasis role="preprocessor">#undef&#32;INFINITY</emphasis>
262 <emphasis role="preprocessor">#define&#32;INFINITY&#32;&#32;&#32;&#32;(__builtin_inff&#32;())</emphasis>
263 
264 <emphasis role="comment">/*&#32;Quiet&#32;NaN,&#32;if&#32;supported&#32;for&#32;float.&#32;&#32;*/</emphasis>
265 <emphasis role="preprocessor">#if&#32;__FLT_HAS_QUIET_NAN__</emphasis>
266 <emphasis role="preprocessor">#undef&#32;NAN</emphasis>
267 <emphasis role="preprocessor">#define&#32;NAN&#32;&#32;&#32;&#32;&#32;(__builtin_nanf&#32;(&quot;&quot;))</emphasis>
268 <emphasis role="preprocessor">#endif</emphasis>
269 
270 <emphasis role="comment">/*&#32;Signaling&#32;NaN,&#32;if&#32;supported&#32;for&#32;each&#32;type.&#32;&#32;All&#32;formats&#32;supported</emphasis>
271 <emphasis role="comment">&#32;&#32;&#32;by&#32;GCC&#32;support&#32;either&#32;both&#32;quiet&#32;and&#32;signaling&#32;NaNs,&#32;or&#32;neither</emphasis>
272 <emphasis role="comment">&#32;&#32;&#32;kind&#32;of&#32;NaN.&#32;&#32;*/</emphasis>
273 <emphasis role="preprocessor">#if&#32;__FLT_HAS_QUIET_NAN__</emphasis>
274 <emphasis role="preprocessor">#undef&#32;FLT_SNAN</emphasis>
275 <emphasis role="preprocessor">#define&#32;FLT_SNAN&#32;&#32;&#32;&#32;(__builtin_nansf&#32;(&quot;&quot;))</emphasis>
276 <emphasis role="preprocessor">#endif</emphasis>
277 <emphasis role="preprocessor">#if&#32;__DBL_HAS_QUIET_NAN__</emphasis>
278 <emphasis role="preprocessor">#undef&#32;DBL_SNAN</emphasis>
279 <emphasis role="preprocessor">#define&#32;DBL_SNAN&#32;&#32;&#32;&#32;(__builtin_nans&#32;(&quot;&quot;))</emphasis>
280 <emphasis role="preprocessor">#endif</emphasis>
281 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_QUIET_NAN__</emphasis>
282 <emphasis role="preprocessor">#undef&#32;LDBL_SNAN</emphasis>
283 <emphasis role="preprocessor">#define&#32;LDBL_SNAN&#32;&#32;&#32;(__builtin_nansl&#32;(&quot;&quot;))</emphasis>
284 <emphasis role="preprocessor">#endif</emphasis>
285 
286 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
287 
288 <emphasis role="preprocessor">#if&#32;(defined&#32;__STDC_WANT_IEC_60559_BFP_EXT__&#32;\</emphasis>
289 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;defined&#32;__STDC_WANT_IEC_60559_EXT__)</emphasis>
290 <emphasis role="comment">/*&#32;Number&#32;of&#32;decimal&#32;digits&#32;for&#32;which&#32;conversions&#32;between&#32;decimal</emphasis>
291 <emphasis role="comment">&#32;&#32;&#32;character&#32;strings&#32;and&#32;binary&#32;formats,&#32;in&#32;both&#32;directions,&#32;are</emphasis>
292 <emphasis role="comment">&#32;&#32;&#32;correctly&#32;rounded.&#32;&#32;*/</emphasis>
293 <emphasis role="preprocessor">#define&#32;CR_DECIMAL_DIG&#32;&#32;__UINTMAX_MAX__</emphasis>
294 <emphasis role="preprocessor">#endif</emphasis>
295 
296 <emphasis role="preprocessor">#ifdef&#32;__STDC_WANT_IEC_60559_TYPES_EXT__</emphasis>
297 <emphasis role="comment">/*&#32;Constants&#32;for&#32;_FloatN&#32;and&#32;_FloatNx&#32;types&#32;from&#32;TS&#32;18661-3.&#32;&#32;See</emphasis>
298 <emphasis role="comment">&#32;&#32;&#32;comments&#32;above&#32;for&#32;their&#32;semantics.&#32;&#32;*/</emphasis>
299 
300 <emphasis role="preprocessor">#ifdef&#32;__FLT16_MANT_DIG__</emphasis>
301 <emphasis role="preprocessor">#undef&#32;FLT16_MANT_DIG</emphasis>
302 <emphasis role="preprocessor">#define&#32;FLT16_MANT_DIG&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_MANT_DIG__</emphasis>
303 <emphasis role="preprocessor">#undef&#32;FLT16_DIG</emphasis>
304 <emphasis role="preprocessor">#define&#32;FLT16_DIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_DIG__</emphasis>
305 <emphasis role="preprocessor">#undef&#32;FLT16_MIN_EXP</emphasis>
306 <emphasis role="preprocessor">#define&#32;FLT16_MIN_EXP&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_MIN_EXP__</emphasis>
307 <emphasis role="preprocessor">#undef&#32;FLT16_MIN_10_EXP</emphasis>
308 <emphasis role="preprocessor">#define&#32;FLT16_MIN_10_EXP&#32;&#32;&#32;&#32;__FLT16_MIN_10_EXP__</emphasis>
309 <emphasis role="preprocessor">#undef&#32;FLT16_MAX_EXP</emphasis>
310 <emphasis role="preprocessor">#define&#32;FLT16_MAX_EXP&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_MAX_EXP__</emphasis>
311 <emphasis role="preprocessor">#undef&#32;FLT16_MAX_10_EXP</emphasis>
312 <emphasis role="preprocessor">#define&#32;FLT16_MAX_10_EXP&#32;&#32;&#32;&#32;__FLT16_MAX_10_EXP__</emphasis>
313 <emphasis role="preprocessor">#undef&#32;FLT16_MAX</emphasis>
314 <emphasis role="preprocessor">#define&#32;FLT16_MAX&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_MAX__</emphasis>
315 <emphasis role="preprocessor">#undef&#32;FLT16_EPSILON</emphasis>
316 <emphasis role="preprocessor">#define&#32;FLT16_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_EPSILON__</emphasis>
317 <emphasis role="preprocessor">#undef&#32;FLT16_MIN</emphasis>
318 <emphasis role="preprocessor">#define&#32;FLT16_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_MIN__</emphasis>
319 <emphasis role="preprocessor">#undef&#32;FLT16_DECIMAL_DIG</emphasis>
320 <emphasis role="preprocessor">#define&#32;FLT16_DECIMAL_DIG&#32;&#32;&#32;__FLT16_DECIMAL_DIG__</emphasis>
321 <emphasis role="preprocessor">#undef&#32;FLT16_TRUE_MIN</emphasis>
322 <emphasis role="preprocessor">#define&#32;FLT16_TRUE_MIN&#32;&#32;&#32;&#32;&#32;&#32;__FLT16_DENORM_MIN__</emphasis>
323 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
324 <emphasis role="preprocessor">#undef&#32;FLT16_SNAN</emphasis>
325 <emphasis role="preprocessor">#define&#32;FLT16_SNAN&#32;&#32;(__builtin_nansf16&#32;(&quot;&quot;))</emphasis>
326 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
327 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT16_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
328 
329 <emphasis role="preprocessor">#ifdef&#32;__FLT32_MANT_DIG__</emphasis>
330 <emphasis role="preprocessor">#undef&#32;FLT32_MANT_DIG</emphasis>
331 <emphasis role="preprocessor">#define&#32;FLT32_MANT_DIG&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_MANT_DIG__</emphasis>
332 <emphasis role="preprocessor">#undef&#32;FLT32_DIG</emphasis>
333 <emphasis role="preprocessor">#define&#32;FLT32_DIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_DIG__</emphasis>
334 <emphasis role="preprocessor">#undef&#32;FLT32_MIN_EXP</emphasis>
335 <emphasis role="preprocessor">#define&#32;FLT32_MIN_EXP&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_MIN_EXP__</emphasis>
336 <emphasis role="preprocessor">#undef&#32;FLT32_MIN_10_EXP</emphasis>
337 <emphasis role="preprocessor">#define&#32;FLT32_MIN_10_EXP&#32;&#32;&#32;&#32;__FLT32_MIN_10_EXP__</emphasis>
338 <emphasis role="preprocessor">#undef&#32;FLT32_MAX_EXP</emphasis>
339 <emphasis role="preprocessor">#define&#32;FLT32_MAX_EXP&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_MAX_EXP__</emphasis>
340 <emphasis role="preprocessor">#undef&#32;FLT32_MAX_10_EXP</emphasis>
341 <emphasis role="preprocessor">#define&#32;FLT32_MAX_10_EXP&#32;&#32;&#32;&#32;__FLT32_MAX_10_EXP__</emphasis>
342 <emphasis role="preprocessor">#undef&#32;FLT32_MAX</emphasis>
343 <emphasis role="preprocessor">#define&#32;FLT32_MAX&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_MAX__</emphasis>
344 <emphasis role="preprocessor">#undef&#32;FLT32_EPSILON</emphasis>
345 <emphasis role="preprocessor">#define&#32;FLT32_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_EPSILON__</emphasis>
346 <emphasis role="preprocessor">#undef&#32;FLT32_MIN</emphasis>
347 <emphasis role="preprocessor">#define&#32;FLT32_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_MIN__</emphasis>
348 <emphasis role="preprocessor">#undef&#32;FLT32_DECIMAL_DIG</emphasis>
349 <emphasis role="preprocessor">#define&#32;FLT32_DECIMAL_DIG&#32;&#32;&#32;__FLT32_DECIMAL_DIG__</emphasis>
350 <emphasis role="preprocessor">#undef&#32;FLT32_TRUE_MIN</emphasis>
351 <emphasis role="preprocessor">#define&#32;FLT32_TRUE_MIN&#32;&#32;&#32;&#32;&#32;&#32;__FLT32_DENORM_MIN__</emphasis>
352 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
353 <emphasis role="preprocessor">#undef&#32;FLT32_SNAN</emphasis>
354 <emphasis role="preprocessor">#define&#32;FLT32_SNAN&#32;&#32;(__builtin_nansf32&#32;(&quot;&quot;))</emphasis>
355 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
356 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT32_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
357 
358 <emphasis role="preprocessor">#ifdef&#32;__FLT64_MANT_DIG__</emphasis>
359 <emphasis role="preprocessor">#undef&#32;FLT64_MANT_DIG</emphasis>
360 <emphasis role="preprocessor">#define&#32;FLT64_MANT_DIG&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_MANT_DIG__</emphasis>
361 <emphasis role="preprocessor">#undef&#32;FLT64_DIG</emphasis>
362 <emphasis role="preprocessor">#define&#32;FLT64_DIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_DIG__</emphasis>
363 <emphasis role="preprocessor">#undef&#32;FLT64_MIN_EXP</emphasis>
364 <emphasis role="preprocessor">#define&#32;FLT64_MIN_EXP&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_MIN_EXP__</emphasis>
365 <emphasis role="preprocessor">#undef&#32;FLT64_MIN_10_EXP</emphasis>
366 <emphasis role="preprocessor">#define&#32;FLT64_MIN_10_EXP&#32;&#32;&#32;&#32;__FLT64_MIN_10_EXP__</emphasis>
367 <emphasis role="preprocessor">#undef&#32;FLT64_MAX_EXP</emphasis>
368 <emphasis role="preprocessor">#define&#32;FLT64_MAX_EXP&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_MAX_EXP__</emphasis>
369 <emphasis role="preprocessor">#undef&#32;FLT64_MAX_10_EXP</emphasis>
370 <emphasis role="preprocessor">#define&#32;FLT64_MAX_10_EXP&#32;&#32;&#32;&#32;__FLT64_MAX_10_EXP__</emphasis>
371 <emphasis role="preprocessor">#undef&#32;FLT64_MAX</emphasis>
372 <emphasis role="preprocessor">#define&#32;FLT64_MAX&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_MAX__</emphasis>
373 <emphasis role="preprocessor">#undef&#32;FLT64_EPSILON</emphasis>
374 <emphasis role="preprocessor">#define&#32;FLT64_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_EPSILON__</emphasis>
375 <emphasis role="preprocessor">#undef&#32;FLT64_MIN</emphasis>
376 <emphasis role="preprocessor">#define&#32;FLT64_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_MIN__</emphasis>
377 <emphasis role="preprocessor">#undef&#32;FLT64_DECIMAL_DIG</emphasis>
378 <emphasis role="preprocessor">#define&#32;FLT64_DECIMAL_DIG&#32;&#32;&#32;__FLT64_DECIMAL_DIG__</emphasis>
379 <emphasis role="preprocessor">#undef&#32;FLT64_TRUE_MIN</emphasis>
380 <emphasis role="preprocessor">#define&#32;FLT64_TRUE_MIN&#32;&#32;&#32;&#32;&#32;&#32;__FLT64_DENORM_MIN__</emphasis>
381 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
382 <emphasis role="preprocessor">#undef&#32;FLT64_SNAN</emphasis>
383 <emphasis role="preprocessor">#define&#32;FLT64_SNAN&#32;&#32;(__builtin_nansf64&#32;(&quot;&quot;))</emphasis>
384 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
385 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT64_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
386 
387 <emphasis role="preprocessor">#ifdef&#32;__FLT128_MANT_DIG__</emphasis>
388 <emphasis role="preprocessor">#undef&#32;FLT128_MANT_DIG</emphasis>
389 <emphasis role="preprocessor">#define&#32;FLT128_MANT_DIG&#32;&#32;&#32;&#32;&#32;__FLT128_MANT_DIG__</emphasis>
390 <emphasis role="preprocessor">#undef&#32;FLT128_DIG</emphasis>
391 <emphasis role="preprocessor">#define&#32;FLT128_DIG&#32;&#32;&#32;&#32;&#32;&#32;__FLT128_DIG__</emphasis>
392 <emphasis role="preprocessor">#undef&#32;FLT128_MIN_EXP</emphasis>
393 <emphasis role="preprocessor">#define&#32;FLT128_MIN_EXP&#32;&#32;&#32;&#32;&#32;&#32;__FLT128_MIN_EXP__</emphasis>
394 <emphasis role="preprocessor">#undef&#32;FLT128_MIN_10_EXP</emphasis>
395 <emphasis role="preprocessor">#define&#32;FLT128_MIN_10_EXP&#32;&#32;&#32;__FLT128_MIN_10_EXP__</emphasis>
396 <emphasis role="preprocessor">#undef&#32;FLT128_MAX_EXP</emphasis>
397 <emphasis role="preprocessor">#define&#32;FLT128_MAX_EXP&#32;&#32;&#32;&#32;&#32;&#32;__FLT128_MAX_EXP__</emphasis>
398 <emphasis role="preprocessor">#undef&#32;FLT128_MAX_10_EXP</emphasis>
399 <emphasis role="preprocessor">#define&#32;FLT128_MAX_10_EXP&#32;&#32;&#32;__FLT128_MAX_10_EXP__</emphasis>
400 <emphasis role="preprocessor">#undef&#32;FLT128_MAX</emphasis>
401 <emphasis role="preprocessor">#define&#32;FLT128_MAX&#32;&#32;&#32;&#32;&#32;&#32;__FLT128_MAX__</emphasis>
402 <emphasis role="preprocessor">#undef&#32;FLT128_EPSILON</emphasis>
403 <emphasis role="preprocessor">#define&#32;FLT128_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;__FLT128_EPSILON__</emphasis>
404 <emphasis role="preprocessor">#undef&#32;FLT128_MIN</emphasis>
405 <emphasis role="preprocessor">#define&#32;FLT128_MIN&#32;&#32;&#32;&#32;&#32;&#32;__FLT128_MIN__</emphasis>
406 <emphasis role="preprocessor">#undef&#32;FLT128_DECIMAL_DIG</emphasis>
407 <emphasis role="preprocessor">#define&#32;FLT128_DECIMAL_DIG&#32;&#32;__FLT128_DECIMAL_DIG__</emphasis>
408 <emphasis role="preprocessor">#undef&#32;FLT128_TRUE_MIN</emphasis>
409 <emphasis role="preprocessor">#define&#32;FLT128_TRUE_MIN&#32;&#32;&#32;&#32;&#32;__FLT128_DENORM_MIN__</emphasis>
410 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
411 <emphasis role="preprocessor">#undef&#32;FLT128_SNAN</emphasis>
412 <emphasis role="preprocessor">#define&#32;FLT128_SNAN&#32;(__builtin_nansf128&#32;(&quot;&quot;))</emphasis>
413 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
414 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT128_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
415 
416 <emphasis role="preprocessor">#ifdef&#32;__FLT32X_MANT_DIG__</emphasis>
417 <emphasis role="preprocessor">#undef&#32;FLT32X_MANT_DIG</emphasis>
418 <emphasis role="preprocessor">#define&#32;FLT32X_MANT_DIG&#32;&#32;&#32;&#32;&#32;__FLT32X_MANT_DIG__</emphasis>
419 <emphasis role="preprocessor">#undef&#32;FLT32X_DIG</emphasis>
420 <emphasis role="preprocessor">#define&#32;FLT32X_DIG&#32;&#32;&#32;&#32;&#32;&#32;__FLT32X_DIG__</emphasis>
421 <emphasis role="preprocessor">#undef&#32;FLT32X_MIN_EXP</emphasis>
422 <emphasis role="preprocessor">#define&#32;FLT32X_MIN_EXP&#32;&#32;&#32;&#32;&#32;&#32;__FLT32X_MIN_EXP__</emphasis>
423 <emphasis role="preprocessor">#undef&#32;FLT32X_MIN_10_EXP</emphasis>
424 <emphasis role="preprocessor">#define&#32;FLT32X_MIN_10_EXP&#32;&#32;&#32;__FLT32X_MIN_10_EXP__</emphasis>
425 <emphasis role="preprocessor">#undef&#32;FLT32X_MAX_EXP</emphasis>
426 <emphasis role="preprocessor">#define&#32;FLT32X_MAX_EXP&#32;&#32;&#32;&#32;&#32;&#32;__FLT32X_MAX_EXP__</emphasis>
427 <emphasis role="preprocessor">#undef&#32;FLT32X_MAX_10_EXP</emphasis>
428 <emphasis role="preprocessor">#define&#32;FLT32X_MAX_10_EXP&#32;&#32;&#32;__FLT32X_MAX_10_EXP__</emphasis>
429 <emphasis role="preprocessor">#undef&#32;FLT32X_MAX</emphasis>
430 <emphasis role="preprocessor">#define&#32;FLT32X_MAX&#32;&#32;&#32;&#32;&#32;&#32;__FLT32X_MAX__</emphasis>
431 <emphasis role="preprocessor">#undef&#32;FLT32X_EPSILON</emphasis>
432 <emphasis role="preprocessor">#define&#32;FLT32X_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;__FLT32X_EPSILON__</emphasis>
433 <emphasis role="preprocessor">#undef&#32;FLT32X_MIN</emphasis>
434 <emphasis role="preprocessor">#define&#32;FLT32X_MIN&#32;&#32;&#32;&#32;&#32;&#32;__FLT32X_MIN__</emphasis>
435 <emphasis role="preprocessor">#undef&#32;FLT32X_DECIMAL_DIG</emphasis>
436 <emphasis role="preprocessor">#define&#32;FLT32X_DECIMAL_DIG&#32;&#32;__FLT32X_DECIMAL_DIG__</emphasis>
437 <emphasis role="preprocessor">#undef&#32;FLT32X_TRUE_MIN</emphasis>
438 <emphasis role="preprocessor">#define&#32;FLT32X_TRUE_MIN&#32;&#32;&#32;&#32;&#32;__FLT32X_DENORM_MIN__</emphasis>
439 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
440 <emphasis role="preprocessor">#undef&#32;FLT32X_SNAN</emphasis>
441 <emphasis role="preprocessor">#define&#32;FLT32X_SNAN&#32;(__builtin_nansf32x&#32;(&quot;&quot;))</emphasis>
442 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
443 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT32X_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
444 
445 <emphasis role="preprocessor">#ifdef&#32;__FLT64X_MANT_DIG__</emphasis>
446 <emphasis role="preprocessor">#undef&#32;FLT64X_MANT_DIG</emphasis>
447 <emphasis role="preprocessor">#define&#32;FLT64X_MANT_DIG&#32;&#32;&#32;&#32;&#32;__FLT64X_MANT_DIG__</emphasis>
448 <emphasis role="preprocessor">#undef&#32;FLT64X_DIG</emphasis>
449 <emphasis role="preprocessor">#define&#32;FLT64X_DIG&#32;&#32;&#32;&#32;&#32;&#32;__FLT64X_DIG__</emphasis>
450 <emphasis role="preprocessor">#undef&#32;FLT64X_MIN_EXP</emphasis>
451 <emphasis role="preprocessor">#define&#32;FLT64X_MIN_EXP&#32;&#32;&#32;&#32;&#32;&#32;__FLT64X_MIN_EXP__</emphasis>
452 <emphasis role="preprocessor">#undef&#32;FLT64X_MIN_10_EXP</emphasis>
453 <emphasis role="preprocessor">#define&#32;FLT64X_MIN_10_EXP&#32;&#32;&#32;__FLT64X_MIN_10_EXP__</emphasis>
454 <emphasis role="preprocessor">#undef&#32;FLT64X_MAX_EXP</emphasis>
455 <emphasis role="preprocessor">#define&#32;FLT64X_MAX_EXP&#32;&#32;&#32;&#32;&#32;&#32;__FLT64X_MAX_EXP__</emphasis>
456 <emphasis role="preprocessor">#undef&#32;FLT64X_MAX_10_EXP</emphasis>
457 <emphasis role="preprocessor">#define&#32;FLT64X_MAX_10_EXP&#32;&#32;&#32;__FLT64X_MAX_10_EXP__</emphasis>
458 <emphasis role="preprocessor">#undef&#32;FLT64X_MAX</emphasis>
459 <emphasis role="preprocessor">#define&#32;FLT64X_MAX&#32;&#32;&#32;&#32;&#32;&#32;__FLT64X_MAX__</emphasis>
460 <emphasis role="preprocessor">#undef&#32;FLT64X_EPSILON</emphasis>
461 <emphasis role="preprocessor">#define&#32;FLT64X_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;__FLT64X_EPSILON__</emphasis>
462 <emphasis role="preprocessor">#undef&#32;FLT64X_MIN</emphasis>
463 <emphasis role="preprocessor">#define&#32;FLT64X_MIN&#32;&#32;&#32;&#32;&#32;&#32;__FLT64X_MIN__</emphasis>
464 <emphasis role="preprocessor">#undef&#32;FLT64X_DECIMAL_DIG</emphasis>
465 <emphasis role="preprocessor">#define&#32;FLT64X_DECIMAL_DIG&#32;&#32;__FLT64X_DECIMAL_DIG__</emphasis>
466 <emphasis role="preprocessor">#undef&#32;FLT64X_TRUE_MIN</emphasis>
467 <emphasis role="preprocessor">#define&#32;FLT64X_TRUE_MIN&#32;&#32;&#32;&#32;&#32;__FLT64X_DENORM_MIN__</emphasis>
468 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
469 <emphasis role="preprocessor">#undef&#32;FLT64X_SNAN</emphasis>
470 <emphasis role="preprocessor">#define&#32;FLT64X_SNAN&#32;(__builtin_nansf64x&#32;(&quot;&quot;))</emphasis>
471 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
472 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT64X_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
473 
474 <emphasis role="preprocessor">#ifdef&#32;__FLT128X_MANT_DIG__</emphasis>
475 <emphasis role="preprocessor">#undef&#32;FLT128X_MANT_DIG</emphasis>
476 <emphasis role="preprocessor">#define&#32;FLT128X_MANT_DIG&#32;&#32;&#32;&#32;__FLT128X_MANT_DIG__</emphasis>
477 <emphasis role="preprocessor">#undef&#32;FLT128X_DIG</emphasis>
478 <emphasis role="preprocessor">#define&#32;FLT128X_DIG&#32;&#32;&#32;&#32;&#32;__FLT128X_DIG__</emphasis>
479 <emphasis role="preprocessor">#undef&#32;FLT128X_MIN_EXP</emphasis>
480 <emphasis role="preprocessor">#define&#32;FLT128X_MIN_EXP&#32;&#32;&#32;&#32;&#32;__FLT128X_MIN_EXP__</emphasis>
481 <emphasis role="preprocessor">#undef&#32;FLT128X_MIN_10_EXP</emphasis>
482 <emphasis role="preprocessor">#define&#32;FLT128X_MIN_10_EXP&#32;&#32;__FLT128X_MIN_10_EXP__</emphasis>
483 <emphasis role="preprocessor">#undef&#32;FLT128X_MAX_EXP</emphasis>
484 <emphasis role="preprocessor">#define&#32;FLT128X_MAX_EXP&#32;&#32;&#32;&#32;&#32;__FLT128X_MAX_EXP__</emphasis>
485 <emphasis role="preprocessor">#undef&#32;FLT128X_MAX_10_EXP</emphasis>
486 <emphasis role="preprocessor">#define&#32;FLT128X_MAX_10_EXP&#32;&#32;__FLT128X_MAX_10_EXP__</emphasis>
487 <emphasis role="preprocessor">#undef&#32;FLT128X_MAX</emphasis>
488 <emphasis role="preprocessor">#define&#32;FLT128X_MAX&#32;&#32;&#32;&#32;&#32;__FLT128X_MAX__</emphasis>
489 <emphasis role="preprocessor">#undef&#32;FLT128X_EPSILON</emphasis>
490 <emphasis role="preprocessor">#define&#32;FLT128X_EPSILON&#32;&#32;&#32;&#32;&#32;__FLT128X_EPSILON__</emphasis>
491 <emphasis role="preprocessor">#undef&#32;FLT128X_MIN</emphasis>
492 <emphasis role="preprocessor">#define&#32;FLT128X_MIN&#32;&#32;&#32;&#32;&#32;__FLT128X_MIN__</emphasis>
493 <emphasis role="preprocessor">#undef&#32;FLT128X_DECIMAL_DIG</emphasis>
494 <emphasis role="preprocessor">#define&#32;FLT128X_DECIMAL_DIG&#32;__FLT128X_DECIMAL_DIG__</emphasis>
495 <emphasis role="preprocessor">#undef&#32;FLT128X_TRUE_MIN</emphasis>
496 <emphasis role="preprocessor">#define&#32;FLT128X_TRUE_MIN&#32;&#32;&#32;&#32;__FLT128X_DENORM_MIN__</emphasis>
497 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
498 <emphasis role="preprocessor">#undef&#32;FLT128X_SNAN</emphasis>
499 <emphasis role="preprocessor">#define&#32;FLT128X_SNAN&#32;&#32;&#32;&#32;(__builtin_nansf128x&#32;(&quot;&quot;))</emphasis>
500 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
501 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__FLT128X_MANT_DIG__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
502 
503 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__STDC_WANT_IEC_60559_TYPES_EXT__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
504 
505 <emphasis role="preprocessor">#ifdef&#32;__DEC32_MANT_DIG__</emphasis>
506 <emphasis role="preprocessor">#if&#32;(defined&#32;__STDC_WANT_DEC_FP__&#32;\</emphasis>
507 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;defined&#32;__STDC_WANT_IEC_60559_DFP_EXT__&#32;\</emphasis>
508 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;(defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L))</emphasis>
509 <emphasis role="comment">/*&#32;C2X;&#32;formerly&#32;Technical&#32;Report&#32;24732,&#32;extension&#32;for&#32;decimal</emphasis>
510 <emphasis role="comment">&#32;&#32;&#32;floating-point&#32;arithmetic:&#32;Characteristic&#32;of&#32;decimal&#32;floating&#32;types</emphasis>
511 <emphasis role="comment">&#32;&#32;&#32;&lt;float.h&gt;,&#32;and&#32;TS&#32;18661-2.&#32;&#32;*/</emphasis>
512 
513 <emphasis role="comment">/*&#32;Number&#32;of&#32;base-FLT_RADIX&#32;digits&#32;in&#32;the&#32;significand,&#32;p.&#32;&#32;*/</emphasis>
514 <emphasis role="preprocessor">#undef&#32;DEC32_MANT_DIG</emphasis>
515 <emphasis role="preprocessor">#undef&#32;DEC64_MANT_DIG</emphasis>
516 <emphasis role="preprocessor">#undef&#32;DEC128_MANT_DIG</emphasis>
517 <emphasis role="preprocessor">#define&#32;DEC32_MANT_DIG&#32;&#32;__DEC32_MANT_DIG__</emphasis>
518 <emphasis role="preprocessor">#define&#32;DEC64_MANT_DIG&#32;&#32;__DEC64_MANT_DIG__</emphasis>
519 <emphasis role="preprocessor">#define&#32;DEC128_MANT_DIG&#32;__DEC128_MANT_DIG__</emphasis>
520 
521 <emphasis role="comment">/*&#32;Minimum&#32;exponent.&#32;*/</emphasis>
522 <emphasis role="preprocessor">#undef&#32;DEC32_MIN_EXP</emphasis>
523 <emphasis role="preprocessor">#undef&#32;DEC64_MIN_EXP</emphasis>
524 <emphasis role="preprocessor">#undef&#32;DEC128_MIN_EXP</emphasis>
525 <emphasis role="preprocessor">#define&#32;DEC32_MIN_EXP&#32;&#32;&#32;__DEC32_MIN_EXP__</emphasis>
526 <emphasis role="preprocessor">#define&#32;DEC64_MIN_EXP&#32;&#32;&#32;__DEC64_MIN_EXP__</emphasis>
527 <emphasis role="preprocessor">#define&#32;DEC128_MIN_EXP&#32;&#32;__DEC128_MIN_EXP__</emphasis>
528 
529 <emphasis role="comment">/*&#32;Maximum&#32;exponent.&#32;*/</emphasis>
530 <emphasis role="preprocessor">#undef&#32;DEC32_MAX_EXP</emphasis>
531 <emphasis role="preprocessor">#undef&#32;DEC64_MAX_EXP</emphasis>
532 <emphasis role="preprocessor">#undef&#32;DEC128_MAX_EXP</emphasis>
533 <emphasis role="preprocessor">#define&#32;DEC32_MAX_EXP&#32;&#32;&#32;__DEC32_MAX_EXP__</emphasis>
534 <emphasis role="preprocessor">#define&#32;DEC64_MAX_EXP&#32;&#32;&#32;__DEC64_MAX_EXP__</emphasis>
535 <emphasis role="preprocessor">#define&#32;DEC128_MAX_EXP&#32;&#32;__DEC128_MAX_EXP__</emphasis>
536 
537 <emphasis role="comment">/*&#32;Maximum&#32;representable&#32;finite&#32;decimal&#32;floating-point&#32;number</emphasis>
538 <emphasis role="comment">&#32;&#32;&#32;(there&#32;are&#32;6,&#32;15,&#32;and&#32;33&#32;9s&#32;after&#32;the&#32;decimal&#32;points&#32;respectively).&#32;*/</emphasis>
539 <emphasis role="preprocessor">#undef&#32;DEC32_MAX</emphasis>
540 <emphasis role="preprocessor">#undef&#32;DEC64_MAX</emphasis>
541 <emphasis role="preprocessor">#undef&#32;DEC128_MAX</emphasis>
542 <emphasis role="preprocessor">#define&#32;DEC32_MAX&#32;&#32;&#32;__DEC32_MAX__</emphasis>
543 <emphasis role="preprocessor">#define&#32;DEC64_MAX&#32;&#32;&#32;__DEC64_MAX__</emphasis>
544 <emphasis role="preprocessor">#define&#32;DEC128_MAX&#32;&#32;__DEC128_MAX__</emphasis>
545 
546 <emphasis role="comment">/*&#32;The&#32;difference&#32;between&#32;1&#32;and&#32;the&#32;least&#32;value&#32;greater&#32;than&#32;1&#32;that&#32;is</emphasis>
547 <emphasis role="comment">&#32;&#32;&#32;representable&#32;in&#32;the&#32;given&#32;floating&#32;point&#32;type.&#32;*/</emphasis>
548 <emphasis role="preprocessor">#undef&#32;DEC32_EPSILON</emphasis>
549 <emphasis role="preprocessor">#undef&#32;DEC64_EPSILON</emphasis>
550 <emphasis role="preprocessor">#undef&#32;DEC128_EPSILON</emphasis>
551 <emphasis role="preprocessor">#define&#32;DEC32_EPSILON&#32;&#32;&#32;__DEC32_EPSILON__</emphasis>
552 <emphasis role="preprocessor">#define&#32;DEC64_EPSILON&#32;&#32;&#32;__DEC64_EPSILON__</emphasis>
553 <emphasis role="preprocessor">#define&#32;DEC128_EPSILON&#32;&#32;__DEC128_EPSILON__</emphasis>
554 
555 <emphasis role="comment">/*&#32;Minimum&#32;normalized&#32;positive&#32;floating-point&#32;number.&#32;*/</emphasis>
556 <emphasis role="preprocessor">#undef&#32;DEC32_MIN</emphasis>
557 <emphasis role="preprocessor">#undef&#32;DEC64_MIN</emphasis>
558 <emphasis role="preprocessor">#undef&#32;DEC128_MIN</emphasis>
559 <emphasis role="preprocessor">#define&#32;DEC32_MIN&#32;&#32;&#32;__DEC32_MIN__</emphasis>
560 <emphasis role="preprocessor">#define&#32;DEC64_MIN&#32;&#32;&#32;__DEC64_MIN__</emphasis>
561 <emphasis role="preprocessor">#define&#32;DEC128_MIN&#32;&#32;__DEC128_MIN__</emphasis>
562 
563 <emphasis role="comment">/*&#32;The&#32;floating-point&#32;expression&#32;evaluation&#32;method.</emphasis>
564 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1&#32;&#32;indeterminate</emphasis>
565 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants&#32;just&#32;to&#32;the&#32;range&#32;and</emphasis>
566 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;the&#32;type</emphasis>
567 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1&#32;&#32;evaluate&#32;operations&#32;and&#32;constants&#32;of&#32;type&#32;_Decimal32&#32;</emphasis>
568 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;_Decimal64&#32;to&#32;the&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;_Decimal64&#32;</emphasis>
569 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type,&#32;evaluate&#32;_Decimal128&#32;operations&#32;and&#32;constants&#32;to&#32;the&#32;</emphasis>
570 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range&#32;and&#32;precision&#32;of&#32;the&#32;_Decimal128&#32;type;</emphasis>
571 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;2&#32;&#32;evaluate&#32;all&#32;operations&#32;and&#32;constants&#32;to&#32;the&#32;range&#32;and</emphasis>
572 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precision&#32;of&#32;the&#32;_Decimal128&#32;type.&#32;&#32;*/</emphasis>
573 
574 <emphasis role="preprocessor">#undef&#32;DEC_EVAL_METHOD</emphasis>
575 <emphasis role="preprocessor">#define&#32;DEC_EVAL_METHOD&#32;__DEC_EVAL_METHOD__</emphasis>
576 
577 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__STDC_WANT_DEC_FP__&#32;||&#32;__STDC_WANT_IEC_60559_DFP_EXT__&#32;||&#32;C2X.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
578 
579 <emphasis role="preprocessor">#ifdef&#32;__STDC_WANT_DEC_FP__</emphasis>
580 
581 <emphasis role="comment">/*&#32;Minimum&#32;subnormal&#32;positive&#32;floating-point&#32;number.&#32;*/</emphasis>
582 <emphasis role="preprocessor">#undef&#32;DEC32_SUBNORMAL_MIN</emphasis>
583 <emphasis role="preprocessor">#undef&#32;DEC64_SUBNORMAL_MIN</emphasis>
584 <emphasis role="preprocessor">#undef&#32;DEC128_SUBNORMAL_MIN</emphasis>
585 <emphasis role="preprocessor">#define&#32;DEC32_SUBNORMAL_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__DEC32_SUBNORMAL_MIN__</emphasis>
586 <emphasis role="preprocessor">#define&#32;DEC64_SUBNORMAL_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__DEC64_SUBNORMAL_MIN__</emphasis>
587 <emphasis role="preprocessor">#define&#32;DEC128_SUBNORMAL_MIN&#32;&#32;&#32;&#32;&#32;&#32;__DEC128_SUBNORMAL_MIN__</emphasis>
588 
589 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__STDC_WANT_DEC_FP__.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
590 
591 <emphasis role="preprocessor">#if&#32;(defined&#32;__STDC_WANT_IEC_60559_DFP_EXT__&#32;\</emphasis>
592 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;(defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L))</emphasis>
593 
594 <emphasis role="comment">/*&#32;Minimum&#32;subnormal&#32;positive&#32;floating-point&#32;number.&#32;*/</emphasis>
595 <emphasis role="preprocessor">#undef&#32;DEC32_TRUE_MIN</emphasis>
596 <emphasis role="preprocessor">#undef&#32;DEC64_TRUE_MIN</emphasis>
597 <emphasis role="preprocessor">#undef&#32;DEC128_TRUE_MIN</emphasis>
598 <emphasis role="preprocessor">#define&#32;DEC32_TRUE_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__DEC32_SUBNORMAL_MIN__</emphasis>
599 <emphasis role="preprocessor">#define&#32;DEC64_TRUE_MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;__DEC64_SUBNORMAL_MIN__</emphasis>
600 <emphasis role="preprocessor">#define&#32;DEC128_TRUE_MIN&#32;&#32;&#32;&#32;&#32;&#32;__DEC128_SUBNORMAL_MIN__</emphasis>
601 
602 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__STDC_WANT_IEC_60559_DFP_EXT__&#32;||&#32;C2X.&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
603 
604 <emphasis role="preprocessor">#if&#32;defined&#32;__STDC_VERSION__&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L</emphasis>
605 
606 <emphasis role="comment">/*&#32;Infinity&#32;in&#32;type&#32;_Decimal32.&#32;&#32;*/</emphasis>
607 <emphasis role="preprocessor">#undef&#32;DEC_INFINITY</emphasis>
608 <emphasis role="preprocessor">#define&#32;DEC_INFINITY&#32;&#32;&#32;&#32;(__builtin_infd32&#32;())</emphasis>
609 
610 <emphasis role="comment">/*&#32;Quiet&#32;NaN&#32;in&#32;type&#32;_Decimal32.&#32;&#32;*/</emphasis>
611 <emphasis role="preprocessor">#undef&#32;DEC_NAN</emphasis>
612 <emphasis role="preprocessor">#define&#32;DEC_NAN&#32;&#32;&#32;&#32;&#32;(__builtin_nand32&#32;(&quot;&quot;))</emphasis>
613 
614 <emphasis role="comment">/*&#32;Signaling&#32;NaN&#32;in&#32;each&#32;decimal&#32;floating-point&#32;type.&#32;&#32;*/</emphasis>
615 <emphasis role="preprocessor">#undef&#32;DEC32_SNAN</emphasis>
616 <emphasis role="preprocessor">#define&#32;DEC32_SNAN&#32;&#32;(__builtin_nansd32&#32;(&quot;&quot;))</emphasis>
617 <emphasis role="preprocessor">#undef&#32;DEC64_SNAN</emphasis>
618 <emphasis role="preprocessor">#define&#32;DEC64_SNAN&#32;&#32;(__builtin_nansd64&#32;(&quot;&quot;))</emphasis>
619 <emphasis role="preprocessor">#undef&#32;DEC128_SNAN</emphasis>
620 <emphasis role="preprocessor">#define&#32;DEC128_SNAN&#32;(__builtin_nansd128&#32;(&quot;&quot;))</emphasis>
621 
622 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;C2X&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
623 
624 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DEC32_MANT_DIG__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
625 
626 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_FLOAT_H___&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
627 <emphasis role="preprocessor">#include_next&#32;&lt;float.h&gt;</emphasis>
</programlisting></section>
