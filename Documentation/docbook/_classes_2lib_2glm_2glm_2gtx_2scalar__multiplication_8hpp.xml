<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2gtx_2scalar__multiplication_8hpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/gtx/scalar_multiplication.hpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/gtx/scalar_multiplication.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;../detail/setup.hpp&quot;<?linebreak?>#include &quot;../vec2.hpp&quot;<?linebreak?>#include &quot;../vec3.hpp&quot;<?linebreak?>#include &quot;../vec4.hpp&quot;<?linebreak?>#include &quot;../mat2x2.hpp&quot;<?linebreak?>#include &lt;type_traits&gt;<?linebreak?></programlisting>Include dependency graph for scalar_multiplication.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2glm_2glm_2gtx_2scalar__multiplication_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespaceglm">glm</link></para>

<para><link linkend="_group__core">Core features</link> </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__classes_2lib_2glm_2glm_2gtx_2scalar__multiplication_8hpp_1aa1e74ac9f6e034680f02523fb962bd0c">GLM_IMPLEMENT_SCAL_MULT</link>(Vec)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , typename Vec &gt; </para><para>using <link linkend="_namespaceglm_1a68a5dc6ff1dbac4fda02c3b177afa4aa">glm::return_type_scalar_multiplication</link> = typename std::enable_if&lt; !std::is_same&lt; T, float &gt;<link linkend="_classvalue">::value</link> &amp;&amp;std::is_arithmetic&lt; T &gt;<link linkend="_classvalue">::value</link>, Vec &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__classes_2lib_2glm_2glm_2gtx_2scalar__multiplication_8hpp_1aa1e74ac9f6e034680f02523fb962bd0c"/><section>
    <title>GLM_IMPLEMENT_SCAL_MULT</title>
<indexterm><primary>GLM_IMPLEMENT_SCAL_MULT</primary><secondary>scalar_multiplication.hpp</secondary></indexterm>
<indexterm><primary>scalar_multiplication.hpp</primary><secondary>GLM_IMPLEMENT_SCAL_MULT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLM_IMPLEMENT_SCAL_MULT( Vec)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;template&lt;typename&#32;T&gt;&#32;\
&#32;&#32;&#32;&#32;return_type_scalar_multiplication&lt;T,&#32;Vec&gt;&#32;\
&#32;&#32;&#32;&#32;operator*(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s,&#32;Vec&#32;rh){&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rh&#32;*=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(s);&#32;\
&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;template&lt;typename&#32;T&gt;&#32;\
&#32;&#32;&#32;&#32;return_type_scalar_multiplication&lt;T,&#32;Vec&gt;&#32;\
&#32;&#32;&#32;&#32;operator*(Vec&#32;lh,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s){&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lh&#32;*=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(s);&#32;\
&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;template&lt;typename&#32;T&gt;&#32;\
&#32;&#32;&#32;&#32;return_type_scalar_multiplication&lt;T,&#32;Vec&gt;&#32;\
&#32;&#32;&#32;&#32;operator/(Vec&#32;lh,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s){&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lh&#32;*=&#32;1.0f&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(s);&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
</section>
</section>
