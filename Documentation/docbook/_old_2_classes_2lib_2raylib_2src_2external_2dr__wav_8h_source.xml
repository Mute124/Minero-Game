<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2raylib_2src_2external_2dr__wav_8h_source" xml:lang="en-US">
<title>dr_wav.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/raylib/src/external/dr_wav.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">WAV&#32;audio&#32;loader&#32;and&#32;writer.&#32;Choice&#32;of&#32;public&#32;domain&#32;or&#32;MIT-0.&#32;See&#32;license&#32;statements&#32;at&#32;the&#32;end&#32;of&#32;this&#32;file.</emphasis>
3 <emphasis role="comment">dr_wav&#32;-&#32;v0.9.2&#32;-&#32;2019-05-21</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">David&#32;Reid&#32;-&#32;mackron@gmail.com</emphasis>
6 <emphasis role="comment">*/</emphasis>
7 
8 <emphasis role="comment">/*</emphasis>
9 <emphasis role="comment">DEPRECATED&#32;APIS</emphasis>
10 <emphasis role="comment">===============</emphasis>
11 <emphasis role="comment">Version&#32;0.9.0&#32;deprecated&#32;the&#32;per-sample&#32;reading&#32;and&#32;seeking&#32;APIs&#32;and&#32;replaced&#32;them&#32;with&#32;versions&#32;that&#32;work&#32;on&#32;the&#32;resolution</emphasis>
12 <emphasis role="comment">of&#32;a&#32;PCM&#32;frame&#32;instead.&#32;For&#32;example,&#32;given&#32;a&#32;stereo&#32;WAV&#32;file,&#32;previously&#32;you&#32;would&#32;pass&#32;2&#32;to&#32;drwav_read_f32()&#32;to&#32;read&#32;one</emphasis>
13 <emphasis role="comment">PCM&#32;frame,&#32;whereas&#32;now&#32;you&#32;would&#32;pass&#32;in&#32;1&#32;to&#32;drwav_read_pcm_frames_f32().&#32;The&#32;old&#32;APIs&#32;would&#32;return&#32;the&#32;number&#32;of&#32;samples</emphasis>
14 <emphasis role="comment">read,&#32;whereas&#32;now&#32;it&#32;will&#32;return&#32;the&#32;number&#32;of&#32;PCM&#32;frames.&#32;Below&#32;is&#32;a&#32;list&#32;of&#32;APIs&#32;that&#32;have&#32;been&#32;deprecated&#32;and&#32;their</emphasis>
15 <emphasis role="comment">replacements.</emphasis>
16 <emphasis role="comment"></emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_read()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames()</emphasis>
18 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_read_s16()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames_s16()</emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_read_f32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames_f32()</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_read_s32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames_s32()</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_seek_to_sample()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_seek_to_pcm_frame()</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_write()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_write_pcm_frames()</emphasis>
23 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_and_read_s16()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_open_and_read_pcm_frames_s16()</emphasis>
24 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_and_read_f32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_open_and_read_pcm_frames_f32()</emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_and_read_s32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_open_and_read_pcm_frames_s32()</emphasis>
26 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_file_and_read_s16()&#32;&#32;&#32;-&gt;&#32;drwav_open_file_and_read_pcm_frames_s16()</emphasis>
27 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_file_and_read_f32()&#32;&#32;&#32;-&gt;&#32;drwav_open_file_and_read_pcm_frames_f32()</emphasis>
28 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_file_and_read_s32()&#32;&#32;&#32;-&gt;&#32;drwav_open_file_and_read_pcm_frames_s32()</emphasis>
29 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_memory_and_read_s16()&#32;-&gt;&#32;drwav_open_memory_and_read_pcm_frames_s16()</emphasis>
30 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_memory_and_read_f32()&#32;-&gt;&#32;drwav_open_memory_and_read_pcm_frames_f32()</emphasis>
31 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_open_memory_and_read_s32()&#32;-&gt;&#32;drwav_open_memory_and_read_pcm_frames_s32()</emphasis>
32 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav::totalSampleCount&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav::totalPCMFrameCount</emphasis>
33 <emphasis role="comment"></emphasis>
34 <emphasis role="comment">Rationale:</emphasis>
35 <emphasis role="comment">&#32;&#32;&#32;&#32;1)&#32;Most&#32;programs&#32;will&#32;want&#32;to&#32;read&#32;in&#32;multiples&#32;of&#32;the&#32;channel&#32;count&#32;which&#32;demands&#32;a&#32;per-frame&#32;reading&#32;API.&#32;Per-sample</emphasis>
36 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;reading&#32;just&#32;adds&#32;complexity&#32;and&#32;maintenance&#32;costs&#32;for&#32;no&#32;practical&#32;benefit.</emphasis>
37 <emphasis role="comment">&#32;&#32;&#32;&#32;2)&#32;This&#32;is&#32;consistent&#32;with&#32;my&#32;other&#32;decoders&#32;-&#32;dr_flac&#32;and&#32;dr_mp3.</emphasis>
38 <emphasis role="comment"></emphasis>
39 <emphasis role="comment">These&#32;APIs&#32;will&#32;be&#32;removed&#32;completely&#32;in&#32;version&#32;0.10.0.&#32;You&#32;can&#32;continue&#32;to&#32;use&#32;drwav_read_raw()&#32;if&#32;you&#32;need&#32;per-sample</emphasis>
40 <emphasis role="comment">reading.</emphasis>
41 <emphasis role="comment">*/</emphasis>
42 
43 <emphasis role="comment">/*</emphasis>
44 <emphasis role="comment">USAGE</emphasis>
45 <emphasis role="comment">=====</emphasis>
46 <emphasis role="comment">This&#32;is&#32;a&#32;single-file&#32;library.&#32;To&#32;use&#32;it,&#32;do&#32;something&#32;like&#32;the&#32;following&#32;in&#32;one&#32;.c&#32;file.</emphasis>
47 <emphasis role="comment">&#32;&#32;&#32;&#32;#define&#32;DR_WAV_IMPLEMENTATION</emphasis>
48 <emphasis role="comment">&#32;&#32;&#32;&#32;#include&#32;&quot;dr_wav.h&quot;</emphasis>
49 <emphasis role="comment"></emphasis>
50 <emphasis role="comment">You&#32;can&#32;then&#32;#include&#32;this&#32;file&#32;in&#32;other&#32;parts&#32;of&#32;the&#32;program&#32;as&#32;you&#32;would&#32;with&#32;any&#32;other&#32;header&#32;file.&#32;Do&#32;something</emphasis>
51 <emphasis role="comment">like&#32;the&#32;following&#32;to&#32;read&#32;audio&#32;data:</emphasis>
52 <emphasis role="comment"></emphasis>
53 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav&#32;wav;</emphasis>
54 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(!drwav_init_file(&amp;wav,&#32;&quot;my_song.wav&quot;))&#32;{</emphasis>
55 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Error&#32;opening&#32;WAV&#32;file.</emphasis>
56 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
57 <emphasis role="comment"></emphasis>
58 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_int32*&#32;pDecodedInterleavedSamples&#32;=&#32;malloc(wav.totalPCMFrameCount&#32;*&#32;wav.channels&#32;*&#32;sizeof(drwav_int32));</emphasis>
59 <emphasis role="comment">&#32;&#32;&#32;&#32;size_t&#32;numberOfSamplesActuallyDecoded&#32;=&#32;drwav_read_pcm_frames_s32(&amp;wav,&#32;wav.totalPCMFrameCount,&#32;pDecodedInterleavedSamples);</emphasis>
60 <emphasis role="comment"></emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
62 <emphasis role="comment"></emphasis>
63 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_uninit(&amp;wav);</emphasis>
64 <emphasis role="comment"></emphasis>
65 <emphasis role="comment">You&#32;can&#32;also&#32;use&#32;drwav_open()&#32;to&#32;allocate&#32;and&#32;initialize&#32;the&#32;loader&#32;for&#32;you:</emphasis>
66 <emphasis role="comment"></emphasis>
67 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav*&#32;pWav&#32;=&#32;drwav_open_file(&quot;my_song.wav&quot;);</emphasis>
68 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(pWav&#32;==&#32;NULL)&#32;{</emphasis>
69 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Error&#32;opening&#32;WAV&#32;file.</emphasis>
70 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
71 <emphasis role="comment"></emphasis>
72 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
73 <emphasis role="comment"></emphasis>
74 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_close(pWav);</emphasis>
75 <emphasis role="comment"></emphasis>
76 <emphasis role="comment">If&#32;you&#32;just&#32;want&#32;to&#32;quickly&#32;open&#32;and&#32;read&#32;the&#32;audio&#32;data&#32;in&#32;a&#32;single&#32;operation&#32;you&#32;can&#32;do&#32;something&#32;like&#32;this:</emphasis>
77 <emphasis role="comment"></emphasis>
78 <emphasis role="comment">&#32;&#32;&#32;&#32;unsigned&#32;int&#32;channels;</emphasis>
79 <emphasis role="comment">&#32;&#32;&#32;&#32;unsigned&#32;int&#32;sampleRate;</emphasis>
80 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_uint64&#32;totalPCMFrameCount;</emphasis>
81 <emphasis role="comment">&#32;&#32;&#32;&#32;float*&#32;pSampleData&#32;=&#32;drwav_open_file_and_read_pcm_frames_f32(&quot;my_song.wav&quot;,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalPCMFrameCount);</emphasis>
82 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(pSampleData&#32;==&#32;NULL)&#32;{</emphasis>
83 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Error&#32;opening&#32;and&#32;reading&#32;WAV&#32;file.</emphasis>
84 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
85 <emphasis role="comment"></emphasis>
86 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
87 <emphasis role="comment"></emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_free(pSampleData);</emphasis>
89 <emphasis role="comment"></emphasis>
90 <emphasis role="comment">The&#32;examples&#32;above&#32;use&#32;versions&#32;of&#32;the&#32;API&#32;that&#32;convert&#32;the&#32;audio&#32;data&#32;to&#32;a&#32;consistent&#32;format&#32;(32-bit&#32;signed&#32;PCM,&#32;in</emphasis>
91 <emphasis role="comment">this&#32;case),&#32;but&#32;you&#32;can&#32;still&#32;output&#32;the&#32;audio&#32;data&#32;in&#32;its&#32;internal&#32;format&#32;(see&#32;notes&#32;below&#32;for&#32;supported&#32;formats):</emphasis>
92 <emphasis role="comment"></emphasis>
93 <emphasis role="comment">&#32;&#32;&#32;&#32;size_t&#32;samplesRead&#32;=&#32;drwav_read_pcm_frames(&amp;wav,&#32;wav.totalPCMFrameCount,&#32;pDecodedInterleavedSamples);</emphasis>
94 <emphasis role="comment"></emphasis>
95 <emphasis role="comment">You&#32;can&#32;also&#32;read&#32;the&#32;raw&#32;bytes&#32;of&#32;audio&#32;data,&#32;which&#32;could&#32;be&#32;useful&#32;if&#32;dr_wav&#32;does&#32;not&#32;have&#32;native&#32;support&#32;for</emphasis>
96 <emphasis role="comment">a&#32;particular&#32;data&#32;format:</emphasis>
97 <emphasis role="comment"></emphasis>
98 <emphasis role="comment">&#32;&#32;&#32;&#32;size_t&#32;bytesRead&#32;=&#32;drwav_read_raw(&amp;wav,&#32;bytesToRead,&#32;pRawDataBuffer);</emphasis>
99 <emphasis role="comment"></emphasis>
100 <emphasis role="comment"></emphasis>
101 <emphasis role="comment">dr_wav&#32;can&#32;also&#32;be&#32;used&#32;to&#32;output&#32;WAV&#32;files.&#32;This&#32;does&#32;not&#32;currently&#32;support&#32;compressed&#32;formats.&#32;To&#32;use&#32;this,&#32;look&#32;at</emphasis>
102 <emphasis role="comment">drwav_open_write(),&#32;drwav_open_file_write(),&#32;etc.&#32;Use&#32;drwav_write_pcm_frames()&#32;to&#32;write&#32;samples,&#32;or&#32;drwav_write_raw()</emphasis>
103 <emphasis role="comment">to&#32;write&#32;raw&#32;data&#32;in&#32;the&#32;&quot;data&quot;&#32;chunk.</emphasis>
104 <emphasis role="comment"></emphasis>
105 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_data_format&#32;format;</emphasis>
106 <emphasis role="comment">&#32;&#32;&#32;&#32;format.container&#32;=&#32;drwav_container_riff;&#32;&#32;&#32;&#32;&#32;//&#32;&lt;--&#32;drwav_container_riff&#32;=&#32;normal&#32;WAV&#32;files,&#32;drwav_container_w64&#32;=&#32;Sony&#32;Wave64.</emphasis>
107 <emphasis role="comment">&#32;&#32;&#32;&#32;format.format&#32;=&#32;DR_WAVE_FORMAT_PCM;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;&lt;--&#32;Any&#32;of&#32;the&#32;DR_WAVE_FORMAT_*&#32;codes.</emphasis>
108 <emphasis role="comment">&#32;&#32;&#32;&#32;format.channels&#32;=&#32;2;</emphasis>
109 <emphasis role="comment">&#32;&#32;&#32;&#32;format.sampleRate&#32;=&#32;44100;</emphasis>
110 <emphasis role="comment">&#32;&#32;&#32;&#32;format.bitsPerSample&#32;=&#32;16;</emphasis>
111 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav*&#32;pWav&#32;=&#32;drwav_open_file_write(&quot;data/recording.wav&quot;,&#32;&amp;format);</emphasis>
112 <emphasis role="comment"></emphasis>
113 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
114 <emphasis role="comment"></emphasis>
115 <emphasis role="comment">&#32;&#32;&#32;&#32;drwav_uint64&#32;samplesWritten&#32;=&#32;drwav_write_pcm_frames(pWav,&#32;frameCount,&#32;pSamples);</emphasis>
116 <emphasis role="comment"></emphasis>
117 <emphasis role="comment"></emphasis>
118 <emphasis role="comment">dr_wav&#32;has&#32;seamless&#32;support&#32;the&#32;Sony&#32;Wave64&#32;format.&#32;The&#32;decoder&#32;will&#32;automatically&#32;detect&#32;it&#32;and&#32;it&#32;should&#32;Just&#32;Work</emphasis>
119 <emphasis role="comment">without&#32;any&#32;manual&#32;intervention.</emphasis>
120 <emphasis role="comment"></emphasis>
121 <emphasis role="comment"></emphasis>
122 <emphasis role="comment">OPTIONS</emphasis>
123 <emphasis role="comment">=======</emphasis>
124 <emphasis role="comment">#define&#32;these&#32;options&#32;before&#32;including&#32;this&#32;file.</emphasis>
125 <emphasis role="comment"></emphasis>
126 <emphasis role="comment">#define&#32;DR_WAV_NO_CONVERSION_API</emphasis>
127 <emphasis role="comment">&#32;&#32;Disables&#32;conversion&#32;APIs&#32;such&#32;as&#32;drwav_read_pcm_frames_f32()&#32;and&#32;drwav_s16_to_f32().</emphasis>
128 <emphasis role="comment"></emphasis>
129 <emphasis role="comment">#define&#32;DR_WAV_NO_STDIO</emphasis>
130 <emphasis role="comment">&#32;&#32;Disables&#32;drwav_open_file(),&#32;drwav_open_file_write(),&#32;etc.</emphasis>
131 <emphasis role="comment"></emphasis>
132 <emphasis role="comment"></emphasis>
133 <emphasis role="comment"></emphasis>
134 <emphasis role="comment">QUICK&#32;NOTES</emphasis>
135 <emphasis role="comment">===========</emphasis>
136 <emphasis role="comment">-&#32;Samples&#32;are&#32;always&#32;interleaved.</emphasis>
137 <emphasis role="comment">-&#32;The&#32;default&#32;read&#32;function&#32;does&#32;not&#32;do&#32;any&#32;data&#32;conversion.&#32;Use&#32;drwav_read_pcm_frames_f32(),&#32;drwav_read_pcm_frames_s32()</emphasis>
138 <emphasis role="comment">&#32;&#32;and&#32;drwav_read_pcm_frames_s16()&#32;to&#32;read&#32;and&#32;convert&#32;audio&#32;data&#32;to&#32;32-bit&#32;floating&#32;point,&#32;signed&#32;32-bit&#32;integer&#32;and</emphasis>
139 <emphasis role="comment">&#32;&#32;signed&#32;16-bit&#32;integer&#32;samples&#32;respectively.&#32;Tested&#32;and&#32;supported&#32;internal&#32;formats&#32;include&#32;the&#32;following:</emphasis>
140 <emphasis role="comment">&#32;&#32;-&#32;Unsigned&#32;8-bit&#32;PCM</emphasis>
141 <emphasis role="comment">&#32;&#32;-&#32;Signed&#32;12-bit&#32;PCM</emphasis>
142 <emphasis role="comment">&#32;&#32;-&#32;Signed&#32;16-bit&#32;PCM</emphasis>
143 <emphasis role="comment">&#32;&#32;-&#32;Signed&#32;24-bit&#32;PCM</emphasis>
144 <emphasis role="comment">&#32;&#32;-&#32;Signed&#32;32-bit&#32;PCM</emphasis>
145 <emphasis role="comment">&#32;&#32;-&#32;IEEE&#32;32-bit&#32;floating&#32;point</emphasis>
146 <emphasis role="comment">&#32;&#32;-&#32;IEEE&#32;64-bit&#32;floating&#32;point</emphasis>
147 <emphasis role="comment">&#32;&#32;-&#32;A-law&#32;and&#32;u-law</emphasis>
148 <emphasis role="comment">&#32;&#32;-&#32;Microsoft&#32;ADPCM</emphasis>
149 <emphasis role="comment">&#32;&#32;-&#32;IMA&#32;ADPCM&#32;(DVI,&#32;format&#32;code&#32;0x11)</emphasis>
150 <emphasis role="comment">-&#32;dr_wav&#32;will&#32;try&#32;to&#32;read&#32;the&#32;WAV&#32;file&#32;as&#32;best&#32;it&#32;can,&#32;even&#32;if&#32;it&apos;s&#32;not&#32;strictly&#32;conformant&#32;to&#32;the&#32;WAV&#32;format.</emphasis>
151 <emphasis role="comment">*/</emphasis>
152 
153 <emphasis role="preprocessor">#ifndef&#32;dr_wav_h</emphasis>
154 <emphasis role="preprocessor">#define&#32;dr_wav_h</emphasis>
155 
156 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
157 
158 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&lt;&#32;1600</emphasis>
159 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab6e6439d0c4531e459e2a50d2d5a8077">drwav_int8</link>;
160 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>;
161 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>;
162 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>;
163 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>;
164 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>;
165 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;__int64&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac99c9056e44b9c212511a49380d3c666">drwav_int64</link>;
166 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;__int64&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>;
167 <emphasis role="preprocessor">#else</emphasis>
168 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
169 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aef44329758059c91c76d334e8fc09700">int8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab6e6439d0c4531e459e2a50d2d5a8077">drwav_int8</link>;
170 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>;
171 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a269259c924dce846340ddbb810db2e3c">int16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>;
172 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>;
173 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>;
174 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>;
175 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac99c9056e44b9c212511a49380d3c666">drwav_int64</link>;
176 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>;
177 <emphasis role="preprocessor">#endif</emphasis>
178 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a041e9e1ee21cd25f007de7baf285d9fd">drwav_bool8</link>;
179 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>;
180 <emphasis role="preprocessor">#define&#32;DRWAV_TRUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
181 <emphasis role="preprocessor">#define&#32;DRWAV_FALSE&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
182 
183 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
184 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
185 <emphasis role="preprocessor">#endif</emphasis>
186 
187 <emphasis role="comment">/*&#32;Common&#32;data&#32;formats.&#32;*/</emphasis>
188 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_PCM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1</emphasis>
189 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_ADPCM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x2</emphasis>
190 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_IEEE_FLOAT&#32;&#32;&#32;0x3</emphasis>
191 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_ALAW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x6</emphasis>
192 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_MULAW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x7</emphasis>
193 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_DVI_ADPCM&#32;&#32;&#32;&#32;0x11</emphasis>
194 <emphasis role="preprocessor">#define&#32;DR_WAVE_FORMAT_EXTENSIBLE&#32;&#32;&#32;0xFFFE</emphasis>
195 
196 <emphasis role="comment">/*&#32;Constants.&#32;*/</emphasis>
197 <emphasis role="preprocessor">#ifndef&#32;DRWAV_MAX_SMPL_LOOPS</emphasis>
198 <emphasis role="preprocessor">#define&#32;DRWAV_MAX_SMPL_LOOPS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
199 <emphasis role="preprocessor">#endif</emphasis>
200 
201 <emphasis role="comment">/*&#32;Flags&#32;to&#32;pass&#32;into&#32;drwav_init_ex(),&#32;etc.&#32;*/</emphasis>
202 <emphasis role="preprocessor">#define&#32;DRWAV_SEQUENTIAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00000001</emphasis>
203 
204 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
205 {
206 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>,
207 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>
208 }&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8c">drwav_seek_origin</link>;
209 
210 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
211 {
212 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>,
213 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a82e82b19721ae7fc0ee13a3b4689e5dc">drwav_container_w64</link>
214 }&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993">drwav_container</link>;
215 
216 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
217 {
218 &#32;&#32;&#32;&#32;<emphasis role="keyword">union</emphasis>
219 &#32;&#32;&#32;&#32;{
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;fourcc[4];
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;guid[16];
222 &#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;
223 
224 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;size&#32;in&#32;bytes&#32;of&#32;the&#32;chunk.&#32;*/</emphasis>
225 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;sizeInBytes;
226 
227 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
228 <emphasis role="comment">&#32;&#32;&#32;&#32;RIFF&#32;=&#32;2&#32;byte&#32;alignment.</emphasis>
229 <emphasis role="comment">&#32;&#32;&#32;&#32;W64&#32;&#32;=&#32;8&#32;byte&#32;alignment.</emphasis>
230 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
231 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;paddingSize;
232 }&#32;<link linkend="_structdrwav__chunk__header">drwav_chunk_header</link>;
233 
234 <emphasis role="comment">/*</emphasis>
235 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;is&#32;read.&#32;Return&#32;value&#32;is&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
236 <emphasis role="comment"></emphasis>
237 <emphasis role="comment">pUserData&#32;&#32;&#32;[in]&#32;&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drwav_init(),&#32;drwav_open()&#32;and&#32;family.</emphasis>
238 <emphasis role="comment">pBufferOut&#32;&#32;[out]&#32;The&#32;output&#32;buffer.</emphasis>
239 <emphasis role="comment">bytesToRead&#32;[in]&#32;&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;read.</emphasis>
240 <emphasis role="comment"></emphasis>
241 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
242 <emphasis role="comment"></emphasis>
243 <emphasis role="comment">A&#32;return&#32;value&#32;of&#32;less&#32;than&#32;bytesToRead&#32;indicates&#32;the&#32;end&#32;of&#32;the&#32;stream.&#32;Do&#32;_not_&#32;return&#32;from&#32;this&#32;callback&#32;until</emphasis>
244 <emphasis role="comment">either&#32;the&#32;entire&#32;bytesToRead&#32;is&#32;filled&#32;or&#32;you&#32;have&#32;reached&#32;the&#32;end&#32;of&#32;the&#32;stream.</emphasis>
245 <emphasis role="comment">*/</emphasis>
246 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead);
247 
248 <emphasis role="comment">/*</emphasis>
249 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;is&#32;written.&#32;Returns&#32;value&#32;is&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;written.</emphasis>
250 <emphasis role="comment"></emphasis>
251 <emphasis role="comment">pUserData&#32;&#32;&#32;&#32;[in]&#32;&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drwav_init_write(),&#32;drwav_open_write()&#32;and&#32;family.</emphasis>
252 <emphasis role="comment">pData&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[out]&#32;A&#32;pointer&#32;to&#32;the&#32;data&#32;to&#32;write.</emphasis>
253 <emphasis role="comment">bytesToWrite&#32;[in]&#32;&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;write.</emphasis>
254 <emphasis role="comment"></emphasis>
255 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;written.</emphasis>
256 <emphasis role="comment"></emphasis>
257 <emphasis role="comment">If&#32;the&#32;return&#32;value&#32;differs&#32;from&#32;bytesToWrite,&#32;it&#32;indicates&#32;an&#32;error.</emphasis>
258 <emphasis role="comment">*/</emphasis>
259 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToWrite);
260 
261 <emphasis role="comment">/*</emphasis>
262 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;seeked.</emphasis>
263 <emphasis role="comment"></emphasis>
264 <emphasis role="comment">pUserData&#32;[in]&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drwav_init(),&#32;drwav_open()&#32;and&#32;family.</emphasis>
265 <emphasis role="comment">offset&#32;&#32;&#32;&#32;[in]&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;move,&#32;relative&#32;to&#32;the&#32;origin.&#32;Will&#32;never&#32;be&#32;negative.</emphasis>
266 <emphasis role="comment">origin&#32;&#32;&#32;&#32;[in]&#32;The&#32;origin&#32;of&#32;the&#32;seek&#32;-&#32;the&#32;current&#32;position&#32;or&#32;the&#32;start&#32;of&#32;the&#32;stream.</emphasis>
267 <emphasis role="comment"></emphasis>
268 <emphasis role="comment">Returns&#32;whether&#32;or&#32;not&#32;the&#32;seek&#32;was&#32;successful.</emphasis>
269 <emphasis role="comment"></emphasis>
270 <emphasis role="comment">Whether&#32;or&#32;not&#32;it&#32;is&#32;relative&#32;to&#32;the&#32;beginning&#32;or&#32;current&#32;position&#32;is&#32;determined&#32;by&#32;the&#32;&quot;origin&quot;&#32;parameter&#32;which</emphasis>
271 <emphasis role="comment">will&#32;be&#32;either&#32;drwav_seek_origin_start&#32;or&#32;drwav_seek_origin_current.</emphasis>
272 <emphasis role="comment">*/</emphasis>
273 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8c">drwav_seek_origin</link>&#32;origin);
274 
275 <emphasis role="comment">/*</emphasis>
276 <emphasis role="comment">Callback&#32;for&#32;when&#32;drwav_init_ex/drwav_open_ex&#32;finds&#32;a&#32;chunk.</emphasis>
277 <emphasis role="comment"></emphasis>
278 <emphasis role="comment">pChunkUserData&#32;&#32;&#32;&#32;[in]&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;the&#32;pChunkUserData&#32;parameter&#32;of&#32;drwav_init_ex(),&#32;drwav_open_ex()&#32;and&#32;family.</emphasis>
279 <emphasis role="comment">onRead&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in]&#32;A&#32;pointer&#32;to&#32;the&#32;function&#32;to&#32;call&#32;when&#32;reading.</emphasis>
280 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in]&#32;A&#32;pointer&#32;to&#32;the&#32;function&#32;to&#32;call&#32;when&#32;seeking.</emphasis>
281 <emphasis role="comment">pReadSeekUserData&#32;[in]&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;the&#32;pReadSeekUserData&#32;parameter&#32;of&#32;drwav_init_ex(),&#32;drwav_open_ex()&#32;and&#32;family.</emphasis>
282 <emphasis role="comment">pChunkHeader&#32;&#32;&#32;&#32;&#32;&#32;[in]&#32;A&#32;pointer&#32;to&#32;an&#32;object&#32;containing&#32;basic&#32;header&#32;information&#32;about&#32;the&#32;chunk.&#32;Use&#32;this&#32;to&#32;identify&#32;the&#32;chunk.</emphasis>
283 <emphasis role="comment"></emphasis>
284 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;read&#32;+&#32;seeked.</emphasis>
285 <emphasis role="comment"></emphasis>
286 <emphasis role="comment">To&#32;read&#32;data&#32;from&#32;the&#32;chunk,&#32;call&#32;onRead(),&#32;passing&#32;in&#32;pReadSeekUserData&#32;as&#32;the&#32;first&#32;parameter.&#32;Do&#32;the&#32;same</emphasis>
287 <emphasis role="comment">for&#32;seeking&#32;with&#32;onSeek().&#32;The&#32;return&#32;value&#32;must&#32;be&#32;the&#32;total&#32;number&#32;of&#32;bytes&#32;you&#32;have&#32;read&#32;_plus_&#32;seeked.</emphasis>
288 <emphasis role="comment"></emphasis>
289 <emphasis role="comment">You&#32;must&#32;not&#32;attempt&#32;to&#32;read&#32;beyond&#32;the&#32;boundary&#32;of&#32;the&#32;chunk.</emphasis>
290 <emphasis role="comment">*/</emphasis>
291 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pReadSeekUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__chunk__header">drwav_chunk_header</link>*&#32;pChunkHeader);
292 
293 <emphasis role="comment">/*&#32;Structure&#32;for&#32;internal&#32;use.&#32;Only&#32;used&#32;for&#32;loaders&#32;opened&#32;with&#32;drwav_open_memory().&#32;*/</emphasis>
294 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
295 {
296 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
297 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
298 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;currentReadPos;
299 }&#32;<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>;
300 
301 <emphasis role="comment">/*&#32;Structure&#32;for&#32;internal&#32;use.&#32;Only&#32;used&#32;for&#32;writers&#32;opened&#32;with&#32;drwav_open_memory_write().&#32;*/</emphasis>
302 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
303 {
304 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>**&#32;ppData;
305 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize;
306 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
307 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;dataCapacity;
308 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;currentWritePos;
309 }&#32;<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>;
310 
311 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
312 {
313 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993">drwav_container</link>&#32;container;&#32;&#32;<emphasis role="comment">/*&#32;RIFF,&#32;W64.&#32;*/</emphasis>
314 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;DR_WAVE_FORMAT_*&#32;*/</emphasis>
315 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;channels;
316 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;sampleRate;
317 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bitsPerSample;
318 }&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>;
319 
320 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
321 {
322 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
323 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;format&#32;tag&#32;exactly&#32;as&#32;specified&#32;in&#32;the&#32;wave&#32;file&apos;s&#32;&quot;fmt&quot;&#32;chunk.&#32;This&#32;can&#32;be&#32;used&#32;by&#32;applications</emphasis>
324 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;require&#32;support&#32;for&#32;data&#32;formats&#32;not&#32;natively&#32;supported&#32;by&#32;dr_wav.</emphasis>
325 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
326 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;formatTag;
327 
328 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;channels&#32;making&#32;up&#32;the&#32;audio&#32;data.&#32;When&#32;this&#32;is&#32;set&#32;to&#32;1&#32;it&#32;is&#32;mono,&#32;2&#32;is&#32;stereo,&#32;etc.&#32;*/</emphasis>
329 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;channels;
330 
331 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;sample&#32;rate.&#32;Usually&#32;set&#32;to&#32;something&#32;like&#32;44100.&#32;*/</emphasis>
332 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;sampleRate;
333 
334 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Average&#32;bytes&#32;per&#32;second.&#32;You&#32;probably&#32;don&apos;t&#32;need&#32;this,&#32;but&#32;it&apos;s&#32;left&#32;here&#32;for&#32;informational&#32;purposes.&#32;*/</emphasis>
335 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;avgBytesPerSec;
336 
337 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Block&#32;align.&#32;This&#32;is&#32;equal&#32;to&#32;the&#32;number&#32;of&#32;channels&#32;*&#32;bytes&#32;per&#32;sample.&#32;*/</emphasis>
338 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;blockAlign;
339 
340 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Bits&#32;per&#32;sample.&#32;*/</emphasis>
341 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;bitsPerSample;
342 
343 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;size&#32;of&#32;the&#32;extended&#32;data.&#32;Only&#32;used&#32;internally&#32;for&#32;validation,&#32;but&#32;left&#32;here&#32;for&#32;informational&#32;purposes.&#32;*/</emphasis>
344 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;extendedSize;
345 
346 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
347 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;number&#32;of&#32;valid&#32;bits&#32;per&#32;sample.&#32;When&#32;&lt;formatTag&gt;&#32;is&#32;equal&#32;to&#32;WAVE_FORMAT_EXTENSIBLE,&#32;&lt;bitsPerSample&gt;</emphasis>
348 <emphasis role="comment">&#32;&#32;&#32;&#32;is&#32;always&#32;rounded&#32;up&#32;to&#32;the&#32;nearest&#32;multiple&#32;of&#32;8.&#32;This&#32;variable&#32;contains&#32;information&#32;about&#32;exactly&#32;how</emphasis>
349 <emphasis role="comment">&#32;&#32;&#32;&#32;many&#32;bits&#32;a&#32;valid&#32;per&#32;sample.&#32;Mainly&#32;used&#32;for&#32;informational&#32;purposes.</emphasis>
350 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
351 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;validBitsPerSample;
352 
353 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;channel&#32;mask.&#32;Not&#32;used&#32;at&#32;the&#32;moment.&#32;*/</emphasis>
354 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;channelMask;
355 
356 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;sub-format,&#32;exactly&#32;as&#32;specified&#32;by&#32;the&#32;wave&#32;file.&#32;*/</emphasis>
357 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;subFormat[16];
358 }&#32;<link linkend="_structdrwav__fmt">drwav_fmt</link>;
359 
360 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
361 {
362 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;cuePointId;
363 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
364 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>;
365 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>;
366 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;fraction;
367 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;playCount;
368 }&#32;<link linkend="_structdrwav__smpl__loop">drwav_smpl_loop</link>;
369 
370 &#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
371 {
372 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;manufacturer;
373 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;product;
374 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;samplePeriod;
375 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;midiUnityNotes;
376 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;midiPitchFraction;
377 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;smpteFormat;
378 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;smpteOffset;
379 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;numSampleLoops;
380 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;samplerData;
381 &#32;&#32;&#32;&#32;<link linkend="_structdrwav__smpl__loop">drwav_smpl_loop</link>&#32;loops[<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1afa31308fe6e6a0d80660cc713500d2a3">DRWAV_MAX_SMPL_LOOPS</link>];
382 }&#32;<link linkend="_structdrwav__smpl">drwav_smpl</link>;
383 
384 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
385 {
386 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;pointer&#32;to&#32;the&#32;function&#32;to&#32;call&#32;when&#32;more&#32;data&#32;is&#32;needed.&#32;*/</emphasis>
387 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead;
388 
389 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;pointer&#32;to&#32;the&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;written.&#32;Only&#32;used&#32;when&#32;the&#32;drwav&#32;object&#32;is&#32;opened&#32;in&#32;write&#32;mode.&#32;*/</emphasis>
390 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite;
391 
392 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;pointer&#32;to&#32;the&#32;function&#32;to&#32;call&#32;when&#32;the&#32;wav&#32;file&#32;needs&#32;to&#32;be&#32;seeked.&#32;*/</emphasis>
393 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek;
394 
395 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;user&#32;data&#32;to&#32;pass&#32;to&#32;callbacks.&#32;*/</emphasis>
396 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData;
397 
398 
399 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Whether&#32;or&#32;not&#32;the&#32;WAV&#32;file&#32;is&#32;formatted&#32;as&#32;a&#32;standard&#32;RIFF&#32;file&#32;or&#32;W64.&#32;*/</emphasis>
400 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993">drwav_container</link>&#32;container;
401 
402 
403 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Structure&#32;containing&#32;format&#32;information&#32;exactly&#32;as&#32;specified&#32;by&#32;the&#32;wav&#32;file.&#32;*/</emphasis>
404 &#32;&#32;&#32;&#32;<link linkend="_structdrwav__fmt">drwav_fmt</link>&#32;fmt;
405 
406 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;sample&#32;rate.&#32;Will&#32;be&#32;set&#32;to&#32;something&#32;like&#32;44100.&#32;*/</emphasis>
407 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;sampleRate;
408 
409 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;channels.&#32;This&#32;will&#32;be&#32;set&#32;to&#32;1&#32;for&#32;monaural&#32;streams,&#32;2&#32;for&#32;stereo,&#32;etc.&#32;*/</emphasis>
410 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;channels;
411 
412 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;bits&#32;per&#32;sample.&#32;Will&#32;be&#32;set&#32;to&#32;something&#32;like&#32;16,&#32;24,&#32;etc.&#32;*/</emphasis>
413 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;bitsPerSample;
414 
415 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Equal&#32;to&#32;fmt.formatTag,&#32;or&#32;the&#32;value&#32;specified&#32;by&#32;fmt.subFormat&#32;if&#32;fmt.formatTag&#32;is&#32;equal&#32;to&#32;65534&#32;(WAVE_FORMAT_EXTENSIBLE).&#32;*/</emphasis>
416 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;translatedFormatTag;
417 
418 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;total&#32;number&#32;of&#32;PCM&#32;frames&#32;making&#32;up&#32;the&#32;audio&#32;data.&#32;*/</emphasis>
419 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalPCMFrameCount;
420 
421 
422 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;size&#32;in&#32;bytes&#32;of&#32;the&#32;data&#32;chunk.&#32;*/</emphasis>
423 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkDataSize;
424 &#32;&#32;&#32;&#32;
425 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;position&#32;in&#32;the&#32;stream&#32;of&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;data&#32;chunk.&#32;This&#32;is&#32;used&#32;for&#32;seeking.&#32;*/</emphasis>
426 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkDataPos;
427 
428 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;bytes&#32;remaining&#32;in&#32;the&#32;data&#32;chunk.&#32;*/</emphasis>
429 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;bytesRemaining;
430 
431 
432 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
433 <emphasis role="comment">&#32;&#32;&#32;&#32;Only&#32;used&#32;in&#32;sequential&#32;write&#32;mode.&#32;Keeps&#32;track&#32;of&#32;the&#32;desired&#32;size&#32;of&#32;the&#32;&quot;data&quot;&#32;chunk&#32;at&#32;the&#32;point&#32;of&#32;initialization&#32;time.&#32;Always</emphasis>
434 <emphasis role="comment">&#32;&#32;&#32;&#32;set&#32;to&#32;0&#32;for&#32;non-sequential&#32;writes&#32;and&#32;when&#32;the&#32;drwav&#32;object&#32;is&#32;opened&#32;in&#32;read&#32;mode.&#32;Used&#32;for&#32;validation.</emphasis>
435 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
436 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkDataSizeTargetWrite;
437 
438 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Keeps&#32;track&#32;of&#32;whether&#32;or&#32;not&#32;the&#32;wav&#32;writer&#32;was&#32;initialized&#32;in&#32;sequential&#32;mode.&#32;*/</emphasis>
439 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequentialWrite;
440 
441 
442 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;smpl&#32;chunk.&#32;*/</emphasis>
443 &#32;&#32;&#32;&#32;<link linkend="_structdrwav__smpl">drwav_smpl</link>&#32;smpl;
444 
445 
446 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;hack&#32;to&#32;avoid&#32;a&#32;DRWAV_MALLOC()&#32;when&#32;opening&#32;a&#32;decoder&#32;with&#32;drwav_open_memory().&#32;*/</emphasis>
447 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>&#32;memoryStream;
448 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>&#32;memoryStreamWrite;
449 
450 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generic&#32;data&#32;for&#32;compressed&#32;formats.&#32;This&#32;data&#32;is&#32;shared&#32;across&#32;all&#32;block-compressed&#32;formats.&#32;*/</emphasis>
451 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
452 &#32;&#32;&#32;&#32;{
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;iCurrentSample;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;index&#32;of&#32;the&#32;next&#32;sample&#32;that&#32;will&#32;be&#32;read&#32;by&#32;drwav_read_*().&#32;This&#32;is&#32;used&#32;with&#32;&quot;totalSampleCount&quot;&#32;to&#32;ensure&#32;we&#32;don&apos;t&#32;read&#32;excess&#32;samples&#32;at&#32;the&#32;end&#32;of&#32;the&#32;last&#32;block.&#32;*/</emphasis>
454 &#32;&#32;&#32;&#32;}&#32;compressed;
455 &#32;&#32;&#32;&#32;
456 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Microsoft&#32;ADPCM&#32;specific&#32;data.&#32;*/</emphasis>
457 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
458 &#32;&#32;&#32;&#32;{
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesRemainingInBlock;
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;predictor[2];
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;delta[2];
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;cachedSamples[4];&#32;&#32;<emphasis role="comment">/*&#32;Samples&#32;are&#32;stored&#32;in&#32;this&#32;cache&#32;during&#32;decoding.&#32;*/</emphasis>
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;cachedSampleCount;
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;prevSamples[2][2];&#32;<emphasis role="comment">/*&#32;The&#32;previous&#32;2&#32;samples&#32;for&#32;each&#32;channel&#32;(2&#32;channels&#32;at&#32;most).&#32;*/</emphasis>
465 &#32;&#32;&#32;&#32;}&#32;msadpcm;
466 
467 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;IMA&#32;ADPCM&#32;specific&#32;data.&#32;*/</emphasis>
468 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
469 &#32;&#32;&#32;&#32;{
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesRemainingInBlock;
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;predictor[2];
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;stepIndex[2];
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;cachedSamples[16];&#32;<emphasis role="comment">/*&#32;Samples&#32;are&#32;stored&#32;in&#32;this&#32;cache&#32;during&#32;decoding.&#32;*/</emphasis>
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;cachedSampleCount;
475 &#32;&#32;&#32;&#32;}&#32;ima;
476 
477 
478 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;DEPRECATED.&#32;Will&#32;be&#32;removed&#32;in&#32;a&#32;future&#32;version.&#32;*/</emphasis>
479 }&#32;<link linkend="_structdrwav">drwav</link>;
480 
481 
482 <emphasis role="comment">/*</emphasis>
483 <emphasis role="comment">Initializes&#32;a&#32;pre-allocated&#32;drwav&#32;object.</emphasis>
484 <emphasis role="comment"></emphasis>
485 <emphasis role="comment">pWav&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[out]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;pointer&#32;to&#32;the&#32;drwav&#32;object&#32;being&#32;initialized.</emphasis>
486 <emphasis role="comment">onRead&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;read&#32;from&#32;the&#32;client.</emphasis>
487 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;the&#32;read&#32;position&#32;of&#32;the&#32;client&#32;data&#32;needs&#32;to&#32;move.</emphasis>
488 <emphasis role="comment">onChunk&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in,&#32;optional]&#32;The&#32;function&#32;to&#32;call&#32;when&#32;a&#32;chunk&#32;is&#32;enumerated&#32;at&#32;initialized&#32;time.</emphasis>
489 <emphasis role="comment">pUserData,&#32;pReadSeekUserData&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onRead&#32;and&#32;onSeek.</emphasis>
490 <emphasis role="comment">pChunkUserData&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onChunk.</emphasis>
491 <emphasis role="comment">flags&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[in,&#32;optional]&#32;A&#32;set&#32;of&#32;flags&#32;for&#32;controlling&#32;how&#32;things&#32;are&#32;loaded.</emphasis>
492 <emphasis role="comment"></emphasis>
493 <emphasis role="comment">Returns&#32;true&#32;if&#32;successful;&#32;false&#32;otherwise.</emphasis>
494 <emphasis role="comment"></emphasis>
495 <emphasis role="comment">Close&#32;the&#32;loader&#32;with&#32;drwav_uninit().</emphasis>
496 <emphasis role="comment"></emphasis>
497 <emphasis role="comment">This&#32;is&#32;the&#32;lowest&#32;level&#32;function&#32;for&#32;initializing&#32;a&#32;WAV&#32;file.&#32;You&#32;can&#32;also&#32;use&#32;drwav_init_file()&#32;and&#32;drwav_init_memory()</emphasis>
498 <emphasis role="comment">to&#32;open&#32;the&#32;stream&#32;from&#32;a&#32;file&#32;or&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;respectively.</emphasis>
499 <emphasis role="comment"></emphasis>
500 <emphasis role="comment">If&#32;you&#32;want&#32;dr_wav&#32;to&#32;manage&#32;the&#32;memory&#32;allocation&#32;for&#32;you,&#32;consider&#32;using&#32;drwav_open()&#32;instead.&#32;This&#32;will&#32;allocate</emphasis>
501 <emphasis role="comment">a&#32;drwav&#32;object&#32;on&#32;the&#32;heap&#32;and&#32;return&#32;a&#32;pointer&#32;to&#32;it.</emphasis>
502 <emphasis role="comment"></emphasis>
503 <emphasis role="comment">Possible&#32;values&#32;for&#32;flags:</emphasis>
504 <emphasis role="comment">&#32;&#32;DRWAV_SEQUENTIAL:&#32;Never&#32;perform&#32;a&#32;backwards&#32;seek&#32;while&#32;loading.&#32;This&#32;disables&#32;the&#32;chunk&#32;callback&#32;and&#32;will&#32;cause&#32;this&#32;function</emphasis>
505 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;return&#32;as&#32;soon&#32;as&#32;the&#32;data&#32;chunk&#32;is&#32;found.&#32;Any&#32;chunks&#32;after&#32;the&#32;data&#32;chunk&#32;will&#32;be&#32;ignored.</emphasis>
506 <emphasis role="comment"></emphasis>
507 <emphasis role="comment">drwav_init()&#32;is&#32;equivalent&#32;to&#32;&quot;drwav_init_ex(pWav,&#32;onRead,&#32;onSeek,&#32;NULL,&#32;pUserData,&#32;NULL,&#32;0);&quot;.</emphasis>
508 <emphasis role="comment"></emphasis>
509 <emphasis role="comment">The&#32;onChunk&#32;callback&#32;is&#32;not&#32;called&#32;for&#32;the&#32;WAVE&#32;or&#32;FMT&#32;chunks.&#32;The&#32;contents&#32;of&#32;the&#32;FMT&#32;chunk&#32;can&#32;be&#32;read&#32;from&#32;pWav-&gt;fmt</emphasis>
510 <emphasis role="comment">after&#32;the&#32;function&#32;returns.</emphasis>
511 <emphasis role="comment"></emphasis>
512 <emphasis role="comment">See&#32;also:&#32;drwav_init_file(),&#32;drwav_init_memory(),&#32;drwav_uninit()</emphasis>
513 <emphasis role="comment">*/</emphasis>
514 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aee95432c783db4b35f81fb64e465a9cf">drwav_init</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
515 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afd87909668f84c27f3518a36a15246c4">drwav_init_ex</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pReadSeekUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
516 
517 <emphasis role="comment">/*</emphasis>
518 <emphasis role="comment">Initializes&#32;a&#32;pre-allocated&#32;drwav&#32;object&#32;for&#32;writing.</emphasis>
519 <emphasis role="comment"></emphasis>
520 <emphasis role="comment">onWrite&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;written.</emphasis>
521 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;the&#32;write&#32;position&#32;needs&#32;to&#32;move.</emphasis>
522 <emphasis role="comment">pUserData&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onWrite&#32;and&#32;onSeek.</emphasis>
523 <emphasis role="comment"></emphasis>
524 <emphasis role="comment">Returns&#32;true&#32;if&#32;successful;&#32;false&#32;otherwise.</emphasis>
525 <emphasis role="comment"></emphasis>
526 <emphasis role="comment">Close&#32;the&#32;writer&#32;with&#32;drwav_uninit().</emphasis>
527 <emphasis role="comment"></emphasis>
528 <emphasis role="comment">This&#32;is&#32;the&#32;lowest&#32;level&#32;function&#32;for&#32;initializing&#32;a&#32;WAV&#32;file.&#32;You&#32;can&#32;also&#32;use&#32;drwav_init_file()&#32;and&#32;drwav_init_memory()</emphasis>
529 <emphasis role="comment">to&#32;open&#32;the&#32;stream&#32;from&#32;a&#32;file&#32;or&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;respectively.</emphasis>
530 <emphasis role="comment"></emphasis>
531 <emphasis role="comment">If&#32;the&#32;total&#32;sample&#32;count&#32;is&#32;known,&#32;you&#32;can&#32;use&#32;drwav_init_write_sequential().&#32;This&#32;avoids&#32;the&#32;need&#32;for&#32;dr_wav&#32;to&#32;perform</emphasis>
532 <emphasis role="comment">a&#32;post-processing&#32;step&#32;for&#32;storing&#32;the&#32;total&#32;sample&#32;count&#32;and&#32;the&#32;size&#32;of&#32;the&#32;data&#32;chunk&#32;which&#32;requires&#32;a&#32;backwards&#32;seek.</emphasis>
533 <emphasis role="comment"></emphasis>
534 <emphasis role="comment">If&#32;you&#32;want&#32;dr_wav&#32;to&#32;manage&#32;the&#32;memory&#32;allocation&#32;for&#32;you,&#32;consider&#32;using&#32;drwav_open()&#32;instead.&#32;This&#32;will&#32;allocate</emphasis>
535 <emphasis role="comment">a&#32;drwav&#32;object&#32;on&#32;the&#32;heap&#32;and&#32;return&#32;a&#32;pointer&#32;to&#32;it.</emphasis>
536 <emphasis role="comment"></emphasis>
537 <emphasis role="comment">See&#32;also:&#32;drwav_init_file_write(),&#32;drwav_init_memory_write(),&#32;drwav_uninit()</emphasis>
538 <emphasis role="comment">*/</emphasis>
539 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af154c1718c4b54490fff0b34abb08ad5">drwav_init_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
540 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a62bf5823d0186115f7f5e8afcfdf5174">drwav_init_write_sequential</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
541 
542 <emphasis role="comment">/*</emphasis>
543 <emphasis role="comment">Uninitializes&#32;the&#32;given&#32;drwav&#32;object.</emphasis>
544 <emphasis role="comment"></emphasis>
545 <emphasis role="comment">Use&#32;this&#32;only&#32;for&#32;objects&#32;initialized&#32;with&#32;drwav_init().</emphasis>
546 <emphasis role="comment">*/</emphasis>
547 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav);
548 
549 
550 <emphasis role="comment">/*</emphasis>
551 <emphasis role="comment">Opens&#32;a&#32;wav&#32;file&#32;using&#32;the&#32;given&#32;callbacks.</emphasis>
552 <emphasis role="comment"></emphasis>
553 <emphasis role="comment">onRead&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;read&#32;from&#32;the&#32;client.</emphasis>
554 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;the&#32;read&#32;position&#32;of&#32;the&#32;client&#32;data&#32;needs&#32;to&#32;move.</emphasis>
555 <emphasis role="comment">pUserData&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onRead&#32;and&#32;onSeek.</emphasis>
556 <emphasis role="comment"></emphasis>
557 <emphasis role="comment">Returns&#32;null&#32;on&#32;error.</emphasis>
558 <emphasis role="comment"></emphasis>
559 <emphasis role="comment">Close&#32;the&#32;loader&#32;with&#32;drwav_close().</emphasis>
560 <emphasis role="comment"></emphasis>
561 <emphasis role="comment">You&#32;can&#32;also&#32;use&#32;drwav_open_file()&#32;and&#32;drwav_open_memory()&#32;to&#32;open&#32;the&#32;stream&#32;from&#32;a&#32;file&#32;or&#32;from&#32;a&#32;block&#32;of</emphasis>
562 <emphasis role="comment">memory&#32;respectively.</emphasis>
563 <emphasis role="comment"></emphasis>
564 <emphasis role="comment">This&#32;is&#32;different&#32;from&#32;drwav_init()&#32;in&#32;that&#32;it&#32;will&#32;allocate&#32;the&#32;drwav&#32;object&#32;for&#32;you&#32;via&#32;DRWAV_MALLOC()&#32;before</emphasis>
565 <emphasis role="comment">initializing&#32;it.</emphasis>
566 <emphasis role="comment"></emphasis>
567 <emphasis role="comment">See&#32;also:&#32;drwav_init(),&#32;drwav_open_file(),&#32;drwav_open_memory(),&#32;drwav_close()</emphasis>
568 <emphasis role="comment">*/</emphasis>
569 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6d76c703b97de35bc6e847ab1af03fc6">drwav_open</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
570 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a20c7338eae3c9e19c060890903be1822">drwav_open_ex</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pReadSeekUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
571 
572 <emphasis role="comment">/*</emphasis>
573 <emphasis role="comment">Opens&#32;a&#32;wav&#32;file&#32;for&#32;writing&#32;using&#32;the&#32;given&#32;callbacks.</emphasis>
574 <emphasis role="comment"></emphasis>
575 <emphasis role="comment">onWrite&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;written.</emphasis>
576 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;the&#32;write&#32;position&#32;needs&#32;to&#32;move.</emphasis>
577 <emphasis role="comment">pUserData&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onWrite&#32;and&#32;onSeek.</emphasis>
578 <emphasis role="comment"></emphasis>
579 <emphasis role="comment">Returns&#32;null&#32;on&#32;error.</emphasis>
580 <emphasis role="comment"></emphasis>
581 <emphasis role="comment">Close&#32;the&#32;loader&#32;with&#32;drwav_close().</emphasis>
582 <emphasis role="comment"></emphasis>
583 <emphasis role="comment">You&#32;can&#32;also&#32;use&#32;drwav_open_file_write()&#32;and&#32;drwav_open_memory_write()&#32;to&#32;open&#32;the&#32;stream&#32;from&#32;a&#32;file&#32;or&#32;from&#32;a&#32;block</emphasis>
584 <emphasis role="comment">of&#32;memory&#32;respectively.</emphasis>
585 <emphasis role="comment"></emphasis>
586 <emphasis role="comment">This&#32;is&#32;different&#32;from&#32;drwav_init_write()&#32;in&#32;that&#32;it&#32;will&#32;allocate&#32;the&#32;drwav&#32;object&#32;for&#32;you&#32;via&#32;DRWAV_MALLOC()&#32;before</emphasis>
587 <emphasis role="comment">initializing&#32;it.</emphasis>
588 <emphasis role="comment"></emphasis>
589 <emphasis role="comment">See&#32;also:&#32;drwav_open_file_write(),&#32;drwav_open_memory_write(),&#32;drwav_close()</emphasis>
590 <emphasis role="comment">*/</emphasis>
591 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2d21c087e120d2ae981691db3693d214">drwav_open_write</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
592 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ad9d9db5d36fa5d16f2c21b7a59045a08">drwav_open_write_sequential</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
593 
594 <emphasis role="comment">/*</emphasis>
595 <emphasis role="comment">Uninitializes&#32;and&#32;deletes&#32;the&#32;the&#32;given&#32;drwav&#32;object.</emphasis>
596 <emphasis role="comment"></emphasis>
597 <emphasis role="comment">Use&#32;this&#32;only&#32;for&#32;objects&#32;created&#32;with&#32;drwav_open().</emphasis>
598 <emphasis role="comment">*/</emphasis>
599 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ad8bab60f34651ab3eeeba5fb602f538e">drwav_close</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav);
600 
601 
602 <emphasis role="comment">/*</emphasis>
603 <emphasis role="comment">Reads&#32;raw&#32;audio&#32;data.</emphasis>
604 <emphasis role="comment"></emphasis>
605 <emphasis role="comment">This&#32;is&#32;the&#32;lowest&#32;level&#32;function&#32;for&#32;reading&#32;audio&#32;data.&#32;It&#32;simply&#32;reads&#32;the&#32;given&#32;number&#32;of</emphasis>
606 <emphasis role="comment">bytes&#32;of&#32;the&#32;raw&#32;internal&#32;sample&#32;data.</emphasis>
607 <emphasis role="comment"></emphasis>
608 <emphasis role="comment">Consider&#32;using&#32;drwav_read_pcm_frames_s16(),&#32;drwav_read_pcm_frames_s32()&#32;or&#32;drwav_read_pcm_frames_f32()&#32;for</emphasis>
609 <emphasis role="comment">reading&#32;sample&#32;data&#32;in&#32;a&#32;consistent&#32;format.</emphasis>
610 <emphasis role="comment"></emphasis>
611 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
612 <emphasis role="comment">*/</emphasis>
613 <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a79c5b06f8f5c742e6a1ed5e3b3e36e28">drwav_read_raw</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut);
614 
615 <emphasis role="comment">/*</emphasis>
616 <emphasis role="comment">Reads&#32;a&#32;chunk&#32;of&#32;audio&#32;data&#32;in&#32;the&#32;native&#32;internal&#32;format.</emphasis>
617 <emphasis role="comment"></emphasis>
618 <emphasis role="comment">This&#32;is&#32;typically&#32;the&#32;most&#32;efficient&#32;way&#32;to&#32;retrieve&#32;audio&#32;data,&#32;but&#32;it&#32;does&#32;not&#32;do&#32;any&#32;format</emphasis>
619 <emphasis role="comment">conversions&#32;which&#32;means&#32;you&apos;ll&#32;need&#32;to&#32;convert&#32;the&#32;data&#32;manually&#32;if&#32;required.</emphasis>
620 <emphasis role="comment"></emphasis>
621 <emphasis role="comment">If&#32;the&#32;return&#32;value&#32;is&#32;less&#32;than&#32;&lt;framesToRead&gt;&#32;it&#32;means&#32;the&#32;end&#32;of&#32;the&#32;file&#32;has&#32;been&#32;reached&#32;or</emphasis>
622 <emphasis role="comment">you&#32;have&#32;requested&#32;more&#32;samples&#32;than&#32;can&#32;possibly&#32;fit&#32;in&#32;the&#32;output&#32;buffer.</emphasis>
623 <emphasis role="comment"></emphasis>
624 <emphasis role="comment">This&#32;function&#32;will&#32;only&#32;work&#32;when&#32;sample&#32;data&#32;is&#32;of&#32;a&#32;fixed&#32;size&#32;and&#32;uncompressed.&#32;If&#32;you&#32;are</emphasis>
625 <emphasis role="comment">using&#32;a&#32;compressed&#32;format&#32;consider&#32;using&#32;drwav_read_raw()&#32;or&#32;drwav_read_pcm_frames_s16/s32/f32/etc().</emphasis>
626 <emphasis role="comment">*/</emphasis>
627 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1affa63762e9f68edeb5b3b948741d101b">drwav_read_pcm_frames</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut);
628 
629 <emphasis role="comment">/*</emphasis>
630 <emphasis role="comment">Seeks&#32;to&#32;the&#32;given&#32;PCM&#32;frame.</emphasis>
631 <emphasis role="comment"></emphasis>
632 <emphasis role="comment">Returns&#32;true&#32;if&#32;successful;&#32;false&#32;otherwise.</emphasis>
633 <emphasis role="comment">*/</emphasis>
634 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa70cac2507023d65e733dad109a8d51a">drwav_seek_to_pcm_frame</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;targetFrameIndex);
635 
636 
637 <emphasis role="comment">/*</emphasis>
638 <emphasis role="comment">Writes&#32;raw&#32;audio&#32;data.</emphasis>
639 <emphasis role="comment"></emphasis>
640 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;written.&#32;If&#32;this&#32;differs&#32;from&#32;bytesToWrite,&#32;it&#32;indicates&#32;an&#32;error.</emphasis>
641 <emphasis role="comment">*/</emphasis>
642 <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a571377c36190772e963f65986dbd6492">drwav_write_raw</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToWrite,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData);
643 
644 <emphasis role="comment">/*</emphasis>
645 <emphasis role="comment">Writes&#32;PCM&#32;frames.</emphasis>
646 <emphasis role="comment"></emphasis>
647 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;written.</emphasis>
648 <emphasis role="comment">*/</emphasis>
649 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1adc835c2612f87da65cea7c1b2ee20ca6">drwav_write_pcm_frames</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToWrite,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData);
650 
651 
652 <emphasis role="comment">/*&#32;Conversion&#32;Utilities&#32;*/</emphasis>
653 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_CONVERSION_API</emphasis>
654 
655 <emphasis role="comment">/*</emphasis>
656 <emphasis role="comment">Reads&#32;a&#32;chunk&#32;of&#32;audio&#32;data&#32;and&#32;converts&#32;it&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.</emphasis>
657 <emphasis role="comment"></emphasis>
658 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;actually&#32;read.</emphasis>
659 <emphasis role="comment"></emphasis>
660 <emphasis role="comment">If&#32;the&#32;return&#32;value&#32;is&#32;less&#32;than&#32;&lt;framesToRead&gt;&#32;it&#32;means&#32;the&#32;end&#32;of&#32;the&#32;file&#32;has&#32;been&#32;reached.</emphasis>
661 <emphasis role="comment">*/</emphasis>
662 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf48d38f1258631922c4f4ab5b8357d7">drwav_read_pcm_frames_s16</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut);
663 
664 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;unsigned&#32;8-bit&#32;PCM&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
665 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad1e34dde45f7a2d05672ed41e5521d80">drwav_u8_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
666 
667 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;24-bit&#32;PCM&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
668 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af86c7957c9a4d3d56668ccca558ea7fd">drwav_s24_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
669 
670 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;32-bit&#32;PCM&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
671 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a034dd2873664148ff69483d27a2ba39b">drwav_s32_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
672 
673 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
674 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a071c19178e72559fc0803526143d752c">drwav_f32_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
675 
676 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;IEEE&#32;64-bit&#32;floating&#32;point&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
677 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a36329c77460fe262e6be3d435dc5dc93">drwav_f64_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
678 
679 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;A-law&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
680 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3eb2e9f6710a6236368790014eb79c1">drwav_alaw_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
681 
682 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;u-law&#32;samples&#32;to&#32;signed&#32;16-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
683 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa73c89d2d43b0ef8efeac0c7ebbe4faa">drwav_mulaw_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
684 
685 
686 <emphasis role="comment">/*</emphasis>
687 <emphasis role="comment">Reads&#32;a&#32;chunk&#32;of&#32;audio&#32;data&#32;and&#32;converts&#32;it&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.</emphasis>
688 <emphasis role="comment"></emphasis>
689 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;actually&#32;read.</emphasis>
690 <emphasis role="comment"></emphasis>
691 <emphasis role="comment">If&#32;the&#32;return&#32;value&#32;is&#32;less&#32;than&#32;&lt;framesToRead&gt;&#32;it&#32;means&#32;the&#32;end&#32;of&#32;the&#32;file&#32;has&#32;been&#32;reached.</emphasis>
692 <emphasis role="comment">*/</emphasis>
693 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a5a8ce89d5c12f4e7f9ea8a17d2c8337c">drwav_read_pcm_frames_f32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut);
694 
695 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;unsigned&#32;8-bit&#32;PCM&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
696 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad16025292a474ec2584af782096879a9">drwav_u8_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
697 
698 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;16-bit&#32;PCM&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
699 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6857debfce0ee3e50eb00eddc563aa45">drwav_s16_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
700 
701 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;24-bit&#32;PCM&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
702 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a139b36057c0c0b08ddf3038ae193a9cc">drwav_s24_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
703 
704 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;32-bit&#32;PCM&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
705 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a149fd11144e26d1491a88d7dbd0ae286">drwav_s32_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
706 
707 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;IEEE&#32;64-bit&#32;floating&#32;point&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
708 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a4c60f48d3486ba4b7ece5705244673a7">drwav_f64_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
709 
710 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;A-law&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
711 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7cbbb839d69432c8f1be125c36abda4c">drwav_alaw_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
712 
713 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;u-law&#32;samples&#32;to&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples.&#32;*/</emphasis>
714 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab7b73d93cc2da7c4d27dbf8619af20e3">drwav_mulaw_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
715 
716 
717 <emphasis role="comment">/*</emphasis>
718 <emphasis role="comment">Reads&#32;a&#32;chunk&#32;of&#32;audio&#32;data&#32;and&#32;converts&#32;it&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.</emphasis>
719 <emphasis role="comment"></emphasis>
720 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;actually&#32;read.</emphasis>
721 <emphasis role="comment"></emphasis>
722 <emphasis role="comment">If&#32;the&#32;return&#32;value&#32;is&#32;less&#32;than&#32;&lt;framesToRead&gt;&#32;it&#32;means&#32;the&#32;end&#32;of&#32;the&#32;file&#32;has&#32;been&#32;reached.</emphasis>
723 <emphasis role="comment">*/</emphasis>
724 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a99e103c778f3921a61400ec6a5d40a1c">drwav_read_pcm_frames_s32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut);
725 
726 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;unsigned&#32;8-bit&#32;PCM&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
727 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a589e32ea40ffa69b32e63b9c9697721c">drwav_u8_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
728 
729 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;16-bit&#32;PCM&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
730 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aaf050adf47878c85984d7374caf2cd36">drwav_s16_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
731 
732 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;signed&#32;24-bit&#32;PCM&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
733 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a390438959679ac496bedfada40673f38">drwav_s24_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
734 
735 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;IEEE&#32;32-bit&#32;floating&#32;point&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
736 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a945e89df18cac4c6dd71abda788ccaf8">drwav_f32_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
737 
738 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;IEEE&#32;64-bit&#32;floating&#32;point&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
739 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7a1474be08f28eed96b1d472576ed6a3">drwav_f64_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
740 
741 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;A-law&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
742 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a35032e0fd593a612f29921a692af810e">drwav_alaw_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
743 
744 <emphasis role="comment">/*&#32;Low-level&#32;function&#32;for&#32;converting&#32;u-law&#32;samples&#32;to&#32;signed&#32;32-bit&#32;PCM&#32;samples.&#32;*/</emphasis>
745 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3fb855d8eb4fef3a59fd7241a3c780d">drwav_mulaw_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount);
746 
747 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;DR_WAV_NO_CONVERSION_API&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
748 
749 
750 <emphasis role="comment">/*&#32;High-Level&#32;Convenience&#32;Helpers&#32;*/</emphasis>
751 
752 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
753 <emphasis role="comment">/*</emphasis>
754 <emphasis role="comment">Helper&#32;for&#32;initializing&#32;a&#32;wave&#32;file&#32;using&#32;stdio.</emphasis>
755 <emphasis role="comment"></emphasis>
756 <emphasis role="comment">This&#32;holds&#32;the&#32;internal&#32;FILE&#32;object&#32;until&#32;drwav_uninit()&#32;is&#32;called.&#32;Keep&#32;this&#32;in&#32;mind&#32;if&#32;you&apos;re&#32;caching&#32;drwav</emphasis>
757 <emphasis role="comment">objects&#32;because&#32;the&#32;operating&#32;system&#32;may&#32;restrict&#32;the&#32;number&#32;of&#32;file&#32;handles&#32;an&#32;application&#32;can&#32;have&#32;open&#32;at</emphasis>
758 <emphasis role="comment">any&#32;given&#32;time.</emphasis>
759 <emphasis role="comment">*/</emphasis>
760 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a9cf60c3ba098367782fabe7486bdc15e">drwav_init_file</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>);
761 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a608675ae43ae0a769961cc0cac98fd86">drwav_init_file_ex</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
762 
763 <emphasis role="comment">/*</emphasis>
764 <emphasis role="comment">Helper&#32;for&#32;initializing&#32;a&#32;wave&#32;file&#32;for&#32;writing&#32;using&#32;stdio.</emphasis>
765 <emphasis role="comment"></emphasis>
766 <emphasis role="comment">This&#32;holds&#32;the&#32;internal&#32;FILE&#32;object&#32;until&#32;drwav_uninit()&#32;is&#32;called.&#32;Keep&#32;this&#32;in&#32;mind&#32;if&#32;you&apos;re&#32;caching&#32;drwav</emphasis>
767 <emphasis role="comment">objects&#32;because&#32;the&#32;operating&#32;system&#32;may&#32;restrict&#32;the&#32;number&#32;of&#32;file&#32;handles&#32;an&#32;application&#32;can&#32;have&#32;open&#32;at</emphasis>
768 <emphasis role="comment">any&#32;given&#32;time.</emphasis>
769 <emphasis role="comment">*/</emphasis>
770 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa3cacb8f1c37dee190fcb3adae03ce85">drwav_init_file_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat);
771 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aeac40d6aa85e2a3bdbd99dfef71d121a">drwav_init_file_write_sequential</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount);
772 
773 <emphasis role="comment">/*</emphasis>
774 <emphasis role="comment">Helper&#32;for&#32;opening&#32;a&#32;wave&#32;file&#32;using&#32;stdio.</emphasis>
775 <emphasis role="comment"></emphasis>
776 <emphasis role="comment">This&#32;holds&#32;the&#32;internal&#32;FILE&#32;object&#32;until&#32;drwav_close()&#32;is&#32;called.&#32;Keep&#32;this&#32;in&#32;mind&#32;if&#32;you&apos;re&#32;caching&#32;drwav</emphasis>
777 <emphasis role="comment">objects&#32;because&#32;the&#32;operating&#32;system&#32;may&#32;restrict&#32;the&#32;number&#32;of&#32;file&#32;handles&#32;an&#32;application&#32;can&#32;have&#32;open&#32;at</emphasis>
778 <emphasis role="comment">any&#32;given&#32;time.</emphasis>
779 <emphasis role="comment">*/</emphasis>
780 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a9de2bc364f54c253c5ebb27c71826584">drwav_open_file</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>);
781 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4d3427ae5b425b816b50f573d90e06d5">drwav_open_file_ex</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
782 
783 <emphasis role="comment">/*</emphasis>
784 <emphasis role="comment">Helper&#32;for&#32;opening&#32;a&#32;wave&#32;file&#32;for&#32;writing&#32;using&#32;stdio.</emphasis>
785 <emphasis role="comment"></emphasis>
786 <emphasis role="comment">This&#32;holds&#32;the&#32;internal&#32;FILE&#32;object&#32;until&#32;drwav_close()&#32;is&#32;called.&#32;Keep&#32;this&#32;in&#32;mind&#32;if&#32;you&apos;re&#32;caching&#32;drwav</emphasis>
787 <emphasis role="comment">objects&#32;because&#32;the&#32;operating&#32;system&#32;may&#32;restrict&#32;the&#32;number&#32;of&#32;file&#32;handles&#32;an&#32;application&#32;can&#32;have&#32;open&#32;at</emphasis>
788 <emphasis role="comment">any&#32;given&#32;time.</emphasis>
789 <emphasis role="comment">*/</emphasis>
790 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a8038e0d5015caa761b81b100dfe5f0ba">drwav_open_file_write</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat);
791 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1af73face1d7c18a4c722c27afaeba8601">drwav_open_file_write_sequential</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount);
792 
793 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;DR_WAV_NO_STDIO&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
794 
795 <emphasis role="comment">/*</emphasis>
796 <emphasis role="comment">Helper&#32;for&#32;initializing&#32;a&#32;loader&#32;from&#32;a&#32;pre-allocated&#32;memory&#32;buffer.</emphasis>
797 <emphasis role="comment"></emphasis>
798 <emphasis role="comment">This&#32;does&#32;not&#32;create&#32;a&#32;copy&#32;of&#32;the&#32;data.&#32;It&#32;is&#32;up&#32;to&#32;the&#32;application&#32;to&#32;ensure&#32;the&#32;buffer&#32;remains&#32;valid&#32;for</emphasis>
799 <emphasis role="comment">the&#32;lifetime&#32;of&#32;the&#32;drwav&#32;object.</emphasis>
800 <emphasis role="comment"></emphasis>
801 <emphasis role="comment">The&#32;buffer&#32;should&#32;contain&#32;the&#32;contents&#32;of&#32;the&#32;entire&#32;wave&#32;file,&#32;not&#32;just&#32;the&#32;sample&#32;data.</emphasis>
802 <emphasis role="comment">*/</emphasis>
803 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8133667245ee84be65c58c972411858b">drwav_init_memory</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>);
804 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aadd430ef7d8f5103770c81fc2b9a1d9c">drwav_init_memory_ex</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
805 
806 <emphasis role="comment">/*</emphasis>
807 <emphasis role="comment">Helper&#32;for&#32;initializing&#32;a&#32;writer&#32;which&#32;outputs&#32;data&#32;to&#32;a&#32;memory&#32;buffer.</emphasis>
808 <emphasis role="comment"></emphasis>
809 <emphasis role="comment">dr_wav&#32;will&#32;manage&#32;the&#32;memory&#32;allocations,&#32;however&#32;it&#32;is&#32;up&#32;to&#32;the&#32;caller&#32;to&#32;free&#32;the&#32;data&#32;with&#32;drwav_free().</emphasis>
810 <emphasis role="comment"></emphasis>
811 <emphasis role="comment">The&#32;buffer&#32;will&#32;remain&#32;allocated&#32;even&#32;after&#32;drwav_uninit()&#32;is&#32;called.&#32;Indeed,&#32;the&#32;buffer&#32;should&#32;not&#32;be</emphasis>
812 <emphasis role="comment">considered&#32;valid&#32;until&#32;after&#32;drwav_uninit()&#32;has&#32;been&#32;called&#32;anyway.</emphasis>
813 <emphasis role="comment">*/</emphasis>
814 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6da330179be2662159a675e403cec76b">drwav_init_memory_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat);
815 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a847e87399e1310ba1f8a8bbe589fd84d">drwav_init_memory_write_sequential</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount);
816 
817 <emphasis role="comment">/*</emphasis>
818 <emphasis role="comment">Helper&#32;for&#32;opening&#32;a&#32;loader&#32;from&#32;a&#32;pre-allocated&#32;memory&#32;buffer.</emphasis>
819 <emphasis role="comment"></emphasis>
820 <emphasis role="comment">This&#32;does&#32;not&#32;create&#32;a&#32;copy&#32;of&#32;the&#32;data.&#32;It&#32;is&#32;up&#32;to&#32;the&#32;application&#32;to&#32;ensure&#32;the&#32;buffer&#32;remains&#32;valid&#32;for</emphasis>
821 <emphasis role="comment">the&#32;lifetime&#32;of&#32;the&#32;drwav&#32;object.</emphasis>
822 <emphasis role="comment"></emphasis>
823 <emphasis role="comment">The&#32;buffer&#32;should&#32;contain&#32;the&#32;contents&#32;of&#32;the&#32;entire&#32;wave&#32;file,&#32;not&#32;just&#32;the&#32;sample&#32;data.</emphasis>
824 <emphasis role="comment">*/</emphasis>
825 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a576028f658a8a4ea06426cd8f864b85c">drwav_open_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>);
826 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a56262661d43e512fdb02fa99b876df7e">drwav_open_memory_ex</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
827 
828 <emphasis role="comment">/*</emphasis>
829 <emphasis role="comment">Helper&#32;for&#32;opening&#32;a&#32;writer&#32;which&#32;outputs&#32;data&#32;to&#32;a&#32;memory&#32;buffer.</emphasis>
830 <emphasis role="comment"></emphasis>
831 <emphasis role="comment">dr_wav&#32;will&#32;manage&#32;the&#32;memory&#32;allocations,&#32;however&#32;it&#32;is&#32;up&#32;to&#32;the&#32;caller&#32;to&#32;free&#32;the&#32;data&#32;with&#32;drwav_free().</emphasis>
832 <emphasis role="comment"></emphasis>
833 <emphasis role="comment">The&#32;buffer&#32;will&#32;remain&#32;allocated&#32;even&#32;after&#32;drwav_close()&#32;is&#32;called.&#32;Indeed,&#32;the&#32;buffer&#32;should&#32;not&#32;be</emphasis>
834 <emphasis role="comment">considered&#32;valid&#32;until&#32;after&#32;drwav_close()&#32;has&#32;been&#32;called&#32;anyway.</emphasis>
835 <emphasis role="comment">*/</emphasis>
836 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ace73a04ffd7fec3d0983f36ee20012f3">drwav_open_memory_write</link>(<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat);
837 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6c7918c54a0dc756c883c66ecbd328f2">drwav_open_memory_write_sequential</link>(<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount);
838 
839 
840 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_CONVERSION_API</emphasis>
841 <emphasis role="comment">/*&#32;Opens&#32;and&#32;reads&#32;a&#32;wav&#32;file&#32;in&#32;a&#32;single&#32;operation.&#32;*/</emphasis>
842 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aea7a08fa82b3dc1a1eacb9043502bd63">drwav_open_and_read_pcm_frames_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
843 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aed7004f802746b3a1710f583d13e5a65">drwav_open_and_read_pcm_frames_f32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
844 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aea79576c6a41625cfba99eaea0036043">drwav_open_and_read_pcm_frames_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
845 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
846 <emphasis role="comment">/*&#32;Opens&#32;and&#32;decodes&#32;a&#32;wav&#32;file&#32;in&#32;a&#32;single&#32;operation.&#32;*/</emphasis>
847 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a682463920653c3093d0b3c3b4471609e">drwav_open_file_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
848 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac8d13b0e1ea2ef90b51283e8bc192b0f">drwav_open_file_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
849 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6768611a1ca5324d0cc11d1ea0ae9a4c">drwav_open_file_and_read_pcm_frames_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
850 <emphasis role="preprocessor">#endif</emphasis>
851 
852 <emphasis role="comment">/*&#32;Opens&#32;and&#32;decodes&#32;a&#32;wav&#32;file&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;in&#32;a&#32;single&#32;operation.&#32;*/</emphasis>
853 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae1cda8bd3359cccad3a2cebe2a136a95">drwav_open_memory_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
854 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ede913b86ce617356588bd4c4582bb7">drwav_open_memory_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
855 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a2bdb7274d057791d9d9bda1c06a7b349">drwav_open_memory_and_read_pcm_frames_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCount);
856 <emphasis role="preprocessor">#endif</emphasis>
857 
858 <emphasis role="comment">/*&#32;Frees&#32;data&#32;that&#32;was&#32;allocated&#32;internally&#32;by&#32;dr_wav.&#32;*/</emphasis>
859 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a331da89906d869a720a035b34f68ea3b">drwav_free</link>(<emphasis role="keywordtype">void</emphasis>*&#32;pDataReturnedByOpenAndRead);
860 
861 
862 <emphasis role="comment">/*&#32;DEPRECATED&#32;APIS&#32;*/</emphasis>
863 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut);
864 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut);
865 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1afd99cb4c4304754642e8124ac850481c">drwav_read_f32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut);
866 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab2294bc72486feb4105b35b93490645d">drwav_read_s32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut);
867 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a837d7efc0bd768b2ff2a1fb98495c4fc">drwav_seek_to_sample</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="_structsample">sample</link>);
868 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a83cf34f9deb521dec55015b81da1fd88">drwav_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToWrite,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData);
869 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_CONVERSION_API</emphasis>
870 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab7862cc12ffdf1c8051d7b0926eb5a59">drwav_open_and_read_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
871 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a52f83626128d834ba8f5bc63b26fded1">drwav_open_and_read_f32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
872 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a1214d286e367ccf654fe2e6503e084d9">drwav_open_and_read_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
873 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
874 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a8f1c82c79e7c4573b2fed85a38d7bef1">drwav_open_memory_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
875 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4f6b3b2b5caf1d5f4a4ff92ccb6c4c4a">drwav_open_file_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
876 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4764c9454ef5f96878f7c9a1af2f5952">drwav_open_file_and_read_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
877 <emphasis role="preprocessor">#endif</emphasis>
878 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a8f1c82c79e7c4573b2fed85a38d7bef1">drwav_open_memory_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
879 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a58d58a4aa171a32bd3091d32b0b00cbc">drwav_open_memory_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
880 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2c670216b9671cfb56b08082b90225b5">drwav_open_memory_and_read_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount);
881 <emphasis role="preprocessor">#endif</emphasis>
882 
883 
884 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
885 }
886 <emphasis role="preprocessor">#endif</emphasis>
887 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;dr_wav_h&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
888 
889 
890 <emphasis role="comment">/************************************************************************************************************************************************************</emphasis>
891 <emphasis role="comment">&#32;************************************************************************************************************************************************************</emphasis>
892 <emphasis role="comment"></emphasis>
893 <emphasis role="comment">&#32;IMPLEMENTATION</emphasis>
894 <emphasis role="comment"></emphasis>
895 <emphasis role="comment">&#32;************************************************************************************************************************************************************</emphasis>
896 <emphasis role="comment">&#32;************************************************************************************************************************************************************/</emphasis>
897 <emphasis role="preprocessor">#ifdef&#32;DR_WAV_IMPLEMENTATION</emphasis>
898 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
899 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>&#32;<emphasis role="comment">/*&#32;For&#32;memcpy(),&#32;memset()&#32;*/</emphasis>
900 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>&#32;<emphasis role="comment">/*&#32;For&#32;INT_MAX&#32;*/</emphasis>
901 
902 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
903 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
904 <emphasis role="preprocessor">#endif</emphasis>
905 
906 <emphasis role="comment">/*&#32;Standard&#32;library&#32;stuff.&#32;*/</emphasis>
907 <emphasis role="preprocessor">#ifndef&#32;DRWAV_ASSERT</emphasis>
908 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
909 <emphasis role="preprocessor">#define&#32;DRWAV_ASSERT(expression)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(expression)</emphasis>
910 <emphasis role="preprocessor">#endif</emphasis>
911 <emphasis role="preprocessor">#ifndef&#32;DRWAV_MALLOC</emphasis>
912 <emphasis role="preprocessor">#define&#32;DRWAV_MALLOC(sz)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;malloc((sz))</emphasis>
913 <emphasis role="preprocessor">#endif</emphasis>
914 <emphasis role="preprocessor">#ifndef&#32;DRWAV_REALLOC</emphasis>
915 <emphasis role="preprocessor">#define&#32;DRWAV_REALLOC(p,&#32;sz)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;realloc((p),&#32;(sz))</emphasis>
916 <emphasis role="preprocessor">#endif</emphasis>
917 <emphasis role="preprocessor">#ifndef&#32;DRWAV_FREE</emphasis>
918 <emphasis role="preprocessor">#define&#32;DRWAV_FREE(p)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free((p))</emphasis>
919 <emphasis role="preprocessor">#endif</emphasis>
920 <emphasis role="preprocessor">#ifndef&#32;DRWAV_COPY_MEMORY</emphasis>
921 <emphasis role="preprocessor">#define&#32;DRWAV_COPY_MEMORY(dst,&#32;src,&#32;sz)&#32;&#32;&#32;&#32;memcpy((dst),&#32;(src),&#32;(sz))</emphasis>
922 <emphasis role="preprocessor">#endif</emphasis>
923 <emphasis role="preprocessor">#ifndef&#32;DRWAV_ZERO_MEMORY</emphasis>
924 <emphasis role="preprocessor">#define&#32;DRWAV_ZERO_MEMORY(p,&#32;sz)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset((p),&#32;0,&#32;(sz))</emphasis>
925 <emphasis role="preprocessor">#endif</emphasis>
926 
927 <emphasis role="preprocessor">#define&#32;drwav_countof(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(sizeof(x)&#32;/&#32;sizeof(x[0]))</emphasis>
928 <emphasis role="preprocessor">#define&#32;drwav_align(x,&#32;a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((((x)&#32;+&#32;(a)&#32;-&#32;1)&#32;/&#32;(a))&#32;*&#32;(a))</emphasis>
929 <emphasis role="preprocessor">#define&#32;drwav_min(a,&#32;b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((a)&#32;&lt;&#32;(b))&#32;?&#32;(a)&#32;:&#32;(b))</emphasis>
930 <emphasis role="preprocessor">#define&#32;drwav_max(a,&#32;b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((a)&#32;&gt;&#32;(b))&#32;?&#32;(a)&#32;:&#32;(b))</emphasis>
931 <emphasis role="preprocessor">#define&#32;drwav_clamp(x,&#32;lo,&#32;hi)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(drwav_max((lo),&#32;drwav_min((hi),&#32;(x))))</emphasis>
932 
933 <emphasis role="preprocessor">#define&#32;drwav_assert&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRWAV_ASSERT</emphasis>
934 <emphasis role="preprocessor">#define&#32;drwav_copy_memory&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRWAV_COPY_MEMORY</emphasis>
935 <emphasis role="preprocessor">#define&#32;drwav_zero_memory&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRWAV_ZERO_MEMORY</emphasis>
936 
937 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a214864129697c3f4bee78dff49e07be6">drwav_result</link>;
938 <emphasis role="preprocessor">#define&#32;DRWAV_SUCCESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
939 <emphasis role="preprocessor">#define&#32;DRWAV_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1</emphasis>
940 <emphasis role="preprocessor">#define&#32;DRWAV_INVALID_ARGS&#32;&#32;&#32;&#32;&#32;&#32;-2</emphasis>
941 <emphasis role="preprocessor">#define&#32;DRWAV_INVALID_OPERATION&#32;-3</emphasis>
942 <emphasis role="preprocessor">#define&#32;DRWAV_INVALID_FILE&#32;&#32;&#32;&#32;&#32;&#32;-100</emphasis>
943 <emphasis role="preprocessor">#define&#32;DRWAV_EOF&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-101</emphasis>
944 
945 <emphasis role="preprocessor">#define&#32;DRWAV_MAX_SIMD_VECTOR_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;64&#32;&#32;</emphasis><emphasis role="comment">/*&#32;64&#32;for&#32;AVX-512&#32;in&#32;the&#32;future.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
946 
947 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
948 <emphasis role="preprocessor">#define&#32;DRWAV_INLINE&#32;__forceinline</emphasis>
949 <emphasis role="preprocessor">#else</emphasis>
950 <emphasis role="preprocessor">#ifdef&#32;__GNUC__</emphasis>
951 <emphasis role="preprocessor">#define&#32;DRWAV_INLINE&#32;__inline__&#32;__attribute__((always_inline))</emphasis>
952 <emphasis role="preprocessor">#else</emphasis>
953 <emphasis role="preprocessor">#define&#32;DRWAV_INLINE</emphasis>
954 <emphasis role="preprocessor">#endif</emphasis>
955 <emphasis role="preprocessor">#endif</emphasis>
956 
957 <emphasis role="preprocessor">#if&#32;defined(SIZE_MAX)</emphasis>
958 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;DRWAV_SIZE_MAX&#32;&#32;SIZE_MAX</emphasis>
959 <emphasis role="preprocessor">#else</emphasis>
960 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(_WIN64)&#32;||&#32;defined(_LP64)&#32;||&#32;defined(__LP64__)</emphasis>
961 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRWAV_SIZE_MAX&#32;&#32;((drwav_uint64)0xFFFFFFFFFFFFFFFF)</emphasis>
962 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
963 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRWAV_SIZE_MAX&#32;&#32;0xFFFFFFFF</emphasis>
964 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
965 <emphasis role="preprocessor">#endif</emphasis>
966 
967 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_RIFF[16]&#32;=&#32;{0x72,0x69,0x66,0x66,&#32;0x2E,0x91,&#32;0xCF,0x11,&#32;0xA5,0xD6,&#32;0x28,0xDB,0x04,0xC1,0x00,0x00};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;66666972-912E-11CF-A5D6-28DB04C10000&#32;*/</emphasis>
968 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_WAVE[16]&#32;=&#32;{0x77,0x61,0x76,0x65,&#32;0xF3,0xAC,&#32;0xD3,0x11,&#32;0x8C,0xD1,&#32;0x00,0xC0,0x4F,0x8E,0xDB,0x8A};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;65766177-ACF3-11D3-8CD1-00C04F8EDB8A&#32;*/</emphasis>
969 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_JUNK[16]&#32;=&#32;{0x6A,0x75,0x6E,0x6B,&#32;0xF3,0xAC,&#32;0xD3,0x11,&#32;0x8C,0xD1,&#32;0x00,0xC0,0x4F,0x8E,0xDB,0x8A};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;6B6E756A-ACF3-11D3-8CD1-00C04F8EDB8A&#32;*/</emphasis>
970 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_FMT&#32;[16]&#32;=&#32;{0x66,0x6D,0x74,0x20,&#32;0xF3,0xAC,&#32;0xD3,0x11,&#32;0x8C,0xD1,&#32;0x00,0xC0,0x4F,0x8E,0xDB,0x8A};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;20746D66-ACF3-11D3-8CD1-00C04F8EDB8A&#32;*/</emphasis>
971 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_FACT[16]&#32;=&#32;{0x66,0x61,0x63,0x74,&#32;0xF3,0xAC,&#32;0xD3,0x11,&#32;0x8C,0xD1,&#32;0x00,0xC0,0x4F,0x8E,0xDB,0x8A};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;74636166-ACF3-11D3-8CD1-00C04F8EDB8A&#32;*/</emphasis>
972 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_DATA[16]&#32;=&#32;{0x64,0x61,0x74,0x61,&#32;0xF3,0xAC,&#32;0xD3,0x11,&#32;0x8C,0xD1,&#32;0x00,0xC0,0x4F,0x8E,0xDB,0x8A};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;61746164-ACF3-11D3-8CD1-00C04F8EDB8A&#32;*/</emphasis>
973 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;drwavGUID_W64_SMPL[16]&#32;=&#32;{0x73,0x6D,0x70,0x6C,&#32;0xF3,0xAC,&#32;0xD3,0x11,&#32;0x8C,0xD1,&#32;0x00,0xC0,0x4F,0x8E,0xDB,0x8A};&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;6C706D73-ACF3-11D3-8CD1-00C04F8EDB8A&#32;*/</emphasis>
974 
975 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__guid_equal(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[16],&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[16])
976 {
977 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>*&#32;a32&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>*)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
978 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>*&#32;b32&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>*)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
979 
980 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a32[0]&#32;==&#32;b32[0]&#32;&amp;&amp;
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a32[1]&#32;==&#32;b32[1]&#32;&amp;&amp;
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a32[2]&#32;==&#32;b32[2]&#32;&amp;&amp;
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a32[3]&#32;==&#32;b32[3];
985 }
986 
987 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__fourcc_equal(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
988 {
989 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[0]&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[0]&#32;&amp;&amp;
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[1]&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[1]&#32;&amp;&amp;
992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[2]&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[2]&#32;&amp;&amp;
993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[3]&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[3];
994 }
995 
996 
997 
998 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<emphasis role="keywordtype">int</emphasis>&#32;drwav__is_little_endian()
999 {
1000 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;1;
1001 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*(<emphasis role="keywordtype">char</emphasis>*)&amp;n)&#32;==&#32;1;
1002 }
1003 
1004 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;drwav__bytes_to_u16(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
1005 {
1006 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;&lt;&lt;&#32;0)&#32;|&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[1]&#32;&lt;&lt;&#32;8);
1007 }
1008 
1009 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<emphasis role="keywordtype">short</emphasis>&#32;drwav__bytes_to_s16(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
1010 {
1011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">short</emphasis>)drwav__bytes_to_u16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1012 }
1013 
1014 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drwav__bytes_to_u32(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
1015 {
1016 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;&lt;&lt;&#32;0)&#32;|&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[1]&#32;&lt;&lt;&#32;8)&#32;|&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[2]&#32;&lt;&lt;&#32;16)&#32;|&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[3]&#32;&lt;&lt;&#32;24);
1017 }
1018 
1019 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav__bytes_to_u64(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
1020 {
1021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
1022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;&lt;&lt;&#32;&#32;0)&#32;|&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[1]&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[2]&#32;&lt;&lt;&#32;16)&#32;|&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[3]&#32;&lt;&lt;&#32;24)&#32;|
1023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[4]&#32;&lt;&lt;&#32;32)&#32;|&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[5]&#32;&lt;&lt;&#32;40)&#32;|&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[6]&#32;&lt;&lt;&#32;48)&#32;|&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[7]&#32;&lt;&lt;&#32;56);
1024 }
1025 
1026 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__bytes_to_guid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;guid)
1027 {
1028 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;16;&#32;++i)&#32;{
1030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guid[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i];
1031 &#32;&#32;&#32;&#32;}
1032 }
1033 
1034 
1035 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__is_compressed_format_tag(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>&#32;formatTag)
1036 {
1037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formatTag&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>&#32;||
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formatTag&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>;
1040 }
1041 
1042 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__msadpcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut);
1043 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__ima(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut);
1044 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav_init_write__internal(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
1045 <link linkend="_structdrwav">drwav</link>*&#32;drwav_open_write__internal(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
1046 
1047 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a214864129697c3f4bee78dff49e07be6">drwav_result</link>&#32;drwav__read_chunk_header(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993">drwav_container</link>&#32;container,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;pRunningBytesReadOut,&#32;<link linkend="_structdrwav__chunk__header">drwav_chunk_header</link>*&#32;pHeaderOut)
1048 {
1049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(container&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sizeInBytes[4];
1051 
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a1358819813c1f1904fafedf81d8e9229">fourcc</link>,&#32;4)&#32;!=&#32;4)&#32;{
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DRWAV_EOF;
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1055 
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;sizeInBytes,&#32;4)&#32;!=&#32;4)&#32;{
1057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a91dffcddae113d219ef635cf7d994659">DRWAV_INVALID_FILE</link>;
1058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1059 
1060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;=&#32;drwav__bytes_to_u32(sizeInBytes);
1061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;int)(pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;%&#32;2);
1062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;8;
1063 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sizeInBytes[8];
1065 
1066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a45f2d3ba26c61347d49fa2831612c691">guid</link>,&#32;16)&#32;!=&#32;16)&#32;{
1067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DRWAV_EOF;
1068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1069 
1070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;sizeInBytes,&#32;8)&#32;!=&#32;8)&#32;{
1071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a91dffcddae113d219ef635cf7d994659">DRWAV_INVALID_FILE</link>;
1072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1073 
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;=&#32;drwav__bytes_to_u64(sizeInBytes)&#32;-&#32;24;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Subtract&#32;24&#32;because&#32;w64&#32;includes&#32;the&#32;size&#32;of&#32;the&#32;header.&#32;*/</emphasis>
1075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;int)(pHeaderOut-&gt;<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;%&#32;8);
1076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;24;
1077 &#32;&#32;&#32;&#32;}
1078 
1079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab539e2817efa7287b43961eb893f41a7">DRWAV_SUCCESS</link>;
1080 }
1081 
1082 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__seek_forward(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
1083 {
1084 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;bytesRemainingToSeek&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(bytesRemainingToSeek&#32;&gt;&#32;0)&#32;{
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesRemainingToSeek&#32;&gt;&#32;0x7FFFFFFF)&#32;{
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesRemainingToSeek&#32;-=&#32;0x7FFFFFFF;
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;(<emphasis role="keywordtype">int</emphasis>)bytesRemainingToSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
1093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesRemainingToSeek&#32;=&#32;0;
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1097 &#32;&#32;&#32;&#32;}
1098 
1099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1100 }
1101 
1102 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__seek_from_start(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
1103 {
1104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&lt;=&#32;0x7FFFFFFF)&#32;{
1105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;onSeek(pUserData,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>);
1106 &#32;&#32;&#32;&#32;}
1107 
1108 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Larger&#32;than&#32;32-bit&#32;seek.&#32;*/</emphasis>
1109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>))&#32;{
1110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1111 &#32;&#32;&#32;&#32;}
1112 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;0x7FFFFFFF;
1113 
1114 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
1115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&lt;=&#32;0x7FFFFFFF)&#32;{
1116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;onSeek(pUserData,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>);
1117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1118 
1119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
1120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;0x7FFFFFFF;
1123 &#32;&#32;&#32;&#32;}
1124 
1125 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;never&#32;get&#32;here.&#32;*/</emphasis>
1126 &#32;&#32;&#32;&#32;<emphasis role="comment">/*return&#32;DRWAV_TRUE;&#32;*/</emphasis>
1127 }
1128 
1129 
1130 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__read_fmt(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993">drwav_container</link>&#32;container,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;pRunningBytesReadOut,&#32;<link linkend="_structdrwav__fmt">drwav_fmt</link>*&#32;fmtOut)
1131 {
1132 &#32;&#32;&#32;&#32;<link linkend="_structdrwav__chunk__header">drwav_chunk_header</link>&#32;header;
1133 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;fmt[16];
1134 
1135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__read_chunk_header(onRead,&#32;pUserData,&#32;container,&#32;pRunningBytesReadOut,&#32;&amp;header)&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab539e2817efa7287b43961eb893f41a7">DRWAV_SUCCESS</link>)&#32;{
1136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1137 &#32;&#32;&#32;&#32;}
1138 
1139 
1140 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Skip&#32;non-fmt&#32;chunks.&#32;*/</emphasis>
1141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((container&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>&#32;&amp;&amp;&#32;!drwav__fourcc_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a1358819813c1f1904fafedf81d8e9229">fourcc</link>,&#32;<emphasis role="stringliteral">&quot;fmt&#32;&quot;</emphasis>))&#32;||&#32;(container&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a82e82b19721ae7fc0ee13a3b4689e5dc">drwav_container_w64</link>&#32;&amp;&amp;&#32;!drwav__guid_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a45f2d3ba26c61347d49fa2831612c691">guid</link>,&#32;drwavGUID_W64_FMT)))&#32;{
1142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__seek_forward(onSeek,&#32;header.<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;+&#32;header.<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>,&#32;pUserData))&#32;{
1143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;header.<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;+&#32;header.<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>;
1146 
1147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Try&#32;the&#32;next&#32;header.&#32;*/</emphasis>
1148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__read_chunk_header(onRead,&#32;pUserData,&#32;container,&#32;pRunningBytesReadOut,&#32;&amp;header)&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab539e2817efa7287b43961eb893f41a7">DRWAV_SUCCESS</link>)&#32;{
1149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1151 &#32;&#32;&#32;&#32;}
1152 
1153 
1154 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Validation.&#32;*/</emphasis>
1155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(container&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__fourcc_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a1358819813c1f1904fafedf81d8e9229">fourcc</link>,&#32;<emphasis role="stringliteral">&quot;fmt&#32;&quot;</emphasis>))&#32;{
1157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1159 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__guid_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a45f2d3ba26c61347d49fa2831612c691">guid</link>,&#32;drwavGUID_W64_FMT))&#32;{
1161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1163 &#32;&#32;&#32;&#32;}
1164 
1165 
1166 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;fmt,&#32;<emphasis role="keyword">sizeof</emphasis>(fmt))&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(fmt))&#32;{
1167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1168 &#32;&#32;&#32;&#32;}
1169 &#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(fmt);
1170 
1171 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1a4e2484decd3b42c4c5d4076ce6696d33">formatTag</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u16(fmt&#32;+&#32;0);
1172 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u16(fmt&#32;+&#32;2);
1173 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1ab20daecbfedf948d9ed2c34737d0d726">sampleRate</link>&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(fmt&#32;+&#32;4);
1174 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1a5b7224cb537694f3319a0ebe88cea8f0">avgBytesPerSec</link>&#32;=&#32;drwav__bytes_to_u32(fmt&#32;+&#32;8);
1175 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u16(fmt&#32;+&#32;12);
1176 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1a0bf44f53e540dd652cf6f336446f6d42">bitsPerSample</link>&#32;&#32;=&#32;drwav__bytes_to_u16(fmt&#32;+&#32;14);
1177 
1178 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
1179 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1ae0c5f88e67ed34396dfa9eb91191d768">validBitsPerSample</link>&#32;=&#32;0;
1180 &#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1a5d57cd67b6b8143eea7693eb05e034b6">channelMask</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
1181 &#32;&#32;&#32;&#32;memset(fmtOut-&gt;<link linkend="_structdrwav__fmt_1a0b583527704e56a78b10fae732a2a60b">subFormat</link>,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(fmtOut-&gt;<link linkend="_structdrwav__fmt_1a0b583527704e56a78b10fae732a2a60b">subFormat</link>));
1182 
1183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header.<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;&gt;&#32;16)&#32;{
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;fmt_cbSize[2];
1185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesReadSoFar&#32;=&#32;0;
1186 
1187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;fmt_cbSize,&#32;<emphasis role="keyword">sizeof</emphasis>(fmt_cbSize))&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(fmt_cbSize))&#32;{
1188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Expecting&#32;more&#32;data.&#32;*/</emphasis>
1189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(fmt_cbSize);
1191 
1192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesReadSoFar&#32;=&#32;18;
1193 
1194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>&#32;=&#32;drwav__bytes_to_u16(fmt_cbSize);
1195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>&#32;&gt;&#32;0)&#32;{
1196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Simple&#32;validation.&#32;*/</emphasis>
1197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmtOut-&gt;<link linkend="_structdrwav__fmt_1a4e2484decd3b42c4c5d4076ce6696d33">formatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a51c6c37a181cf259f3bf9057c6c052a0">DR_WAVE_FORMAT_EXTENSIBLE</link>)&#32;{
1198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>&#32;!=&#32;22)&#32;{
1199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1202 
1203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmtOut-&gt;<link linkend="_structdrwav__fmt_1a4e2484decd3b42c4c5d4076ce6696d33">formatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a51c6c37a181cf259f3bf9057c6c052a0">DR_WAVE_FORMAT_EXTENSIBLE</link>)&#32;{
1204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;fmtext[22];
1205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead(pUserData,&#32;fmtext,&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>)&#32;!=&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>)&#32;{
1206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Expecting&#32;more&#32;data.&#32;*/</emphasis>
1207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1208 
1209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1ae0c5f88e67ed34396dfa9eb91191d768">validBitsPerSample</link>&#32;=&#32;drwav__bytes_to_u16(fmtext&#32;+&#32;0);
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1a5d57cd67b6b8143eea7693eb05e034b6">channelMask</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(fmtext&#32;+&#32;2);
1211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__bytes_to_guid(fmtext&#32;+&#32;6,&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1a0b583527704e56a78b10fae732a2a60b">subFormat</link>);
1212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>;
1218 
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesReadSoFar&#32;+=&#32;fmtOut-&gt;<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>;
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1221 
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Seek&#32;past&#32;any&#32;leftover&#32;bytes.&#32;For&#32;w64&#32;the&#32;leftover&#32;will&#32;be&#32;defined&#32;based&#32;on&#32;the&#32;chunk&#32;size.&#32;*/</emphasis>
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;(<emphasis role="keywordtype">int</emphasis>)(header.<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;-&#32;bytesReadSoFar),&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;(header.<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>&#32;-&#32;bytesReadSoFar);
1227 &#32;&#32;&#32;&#32;}
1228 
1229 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header.<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>&#32;&gt;&#32;0)&#32;{
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;header.<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRunningBytesReadOut&#32;+=&#32;header.<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>;
1234 &#32;&#32;&#32;&#32;}
1235 
1236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1237 }
1238 
1239 
1240 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
1241 FILE*&#32;drwav_fopen(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;openMode)
1242 {
1243 &#32;&#32;&#32;&#32;FILE*&#32;pFile;
1244 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
1245 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fopen_s(&amp;pFile,&#32;filePath,&#32;openMode)&#32;!=&#32;0)&#32;{
1246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1247 &#32;&#32;&#32;&#32;}
1248 <emphasis role="preprocessor">#else</emphasis>
1249 &#32;&#32;&#32;&#32;pFile&#32;=&#32;fopen(filePath,&#32;openMode);
1250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1252 &#32;&#32;&#32;&#32;}
1253 <emphasis role="preprocessor">#endif</emphasis>
1254 
1255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pFile;
1256 }
1257 
1258 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drwav__on_read_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
1259 {
1260 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fread(pBufferOut,&#32;1,&#32;bytesToRead,&#32;(FILE*)pUserData);
1261 }
1262 
1263 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drwav__on_write_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToWrite)
1264 {
1265 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fwrite(pData,&#32;1,&#32;bytesToWrite,&#32;(FILE*)pUserData);
1266 }
1267 
1268 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__on_seek_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8c">drwav_seek_origin</link>&#32;origin)
1269 {
1270 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fseek((FILE*)pUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>)&#32;?&#32;SEEK_CUR&#32;:&#32;SEEK_SET)&#32;==&#32;0;
1271 }
1272 
1273 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a9cf60c3ba098367782fabe7486bdc15e">drwav_init_file</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>)
1274 {
1275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a608675ae43ae0a769961cc0cac98fd86">drwav_init_file_ex</link>(pWav,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1276 }
1277 
1278 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a608675ae43ae0a769961cc0cac98fd86">drwav_init_file_ex</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
1279 {
1280 &#32;&#32;&#32;&#32;FILE*&#32;pFile&#32;=&#32;drwav_fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
1281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1283 &#32;&#32;&#32;&#32;}
1284 
1285 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afd87909668f84c27f3518a36a15246c4">drwav_init_ex</link>(pWav,&#32;drwav__on_read_stdio,&#32;drwav__on_seek_stdio,&#32;onChunk,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile,&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
1286 }
1287 
1288 
1289 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav_init_file_write__internal(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential)
1290 {
1291 &#32;&#32;&#32;&#32;FILE*&#32;pFile&#32;=&#32;drwav_fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>);
1292 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1294 &#32;&#32;&#32;&#32;}
1295 
1296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_write__internal(pWav,&#32;pFormat,&#32;totalSampleCount,&#32;isSequential,&#32;drwav__on_write_stdio,&#32;drwav__on_seek_stdio,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile);
1297 }
1298 
1299 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa3cacb8f1c37dee190fcb3adae03ce85">drwav_init_file_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat)
1300 {
1301 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_file_write__internal(pWav,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;pFormat,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>);
1302 }
1303 
1304 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aeac40d6aa85e2a3bdbd99dfef71d121a">drwav_init_file_write_sequential</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount)
1305 {
1306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_file_write__internal(pWav,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;pFormat,&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>);
1307 }
1308 
1309 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a9de2bc364f54c253c5ebb27c71826584">drwav_open_file</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>)
1310 {
1311 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4d3427ae5b425b816b50f573d90e06d5">drwav_open_file_ex</link>(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1312 }
1313 
1314 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4d3427ae5b425b816b50f573d90e06d5">drwav_open_file_ex</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
1315 {
1316 &#32;&#32;&#32;&#32;FILE*&#32;pFile;
1317 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>*&#32;pWav;
1318 
1319 &#32;&#32;&#32;&#32;pFile&#32;=&#32;drwav_fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
1320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1322 &#32;&#32;&#32;&#32;}
1323 
1324 &#32;&#32;&#32;&#32;pWav&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a20c7338eae3c9e19c060890903be1822">drwav_open_ex</link>(drwav__on_read_stdio,&#32;drwav__on_seek_stdio,&#32;onChunk,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile,&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
1325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose(pFile);
1327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1328 &#32;&#32;&#32;&#32;}
1329 
1330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pWav;
1331 }
1332 
1333 
1334 <link linkend="_structdrwav">drwav</link>*&#32;drwav_open_file_write__internal(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential)
1335 {
1336 &#32;&#32;&#32;&#32;FILE*&#32;pFile;
1337 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>*&#32;pWav;
1338 
1339 &#32;&#32;&#32;&#32;pFile&#32;=&#32;drwav_fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>);
1340 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1342 &#32;&#32;&#32;&#32;}
1343 
1344 &#32;&#32;&#32;&#32;pWav&#32;=&#32;drwav_open_write__internal(pFormat,&#32;totalSampleCount,&#32;isSequential,&#32;drwav__on_write_stdio,&#32;drwav__on_seek_stdio,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile);
1345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose(pFile);
1347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1348 &#32;&#32;&#32;&#32;}
1349 
1350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pWav;
1351 }
1352 
1353 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a8038e0d5015caa761b81b100dfe5f0ba">drwav_open_file_write</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat)
1354 {
1355 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_open_file_write__internal(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;pFormat,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>);
1356 }
1357 
1358 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1af73face1d7c18a4c722c27afaeba8601">drwav_open_file_write_sequential</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount)
1359 {
1360 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_open_file_write__internal(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;pFormat,&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>);
1361 }
1362 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;DR_WAV_NO_STDIO&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1363 
1364 
1365 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drwav__on_read_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
1366 {
1367 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>*&#32;memory&#32;=&#32;(<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>*)pUserData;
1368 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRemaining;
1369 
1370 &#32;&#32;&#32;&#32;drwav_assert(memory&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1371 &#32;&#32;&#32;&#32;drwav_assert(memory-&gt;<link linkend="_structdrwav____memory__stream_1ac9afa4dd398c46e0d690e41c79f1b984">dataSize</link>&#32;&gt;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>);
1372 
1373 &#32;&#32;&#32;&#32;bytesRemaining&#32;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ac9afa4dd398c46e0d690e41c79f1b984">dataSize</link>&#32;-&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>;
1374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;bytesRemaining)&#32;{
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToRead&#32;=&#32;bytesRemaining;
1376 &#32;&#32;&#32;&#32;}
1377 
1378 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;0)&#32;{
1379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRWAV_COPY_MEMORY(pBufferOut,&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ab6d0b0640f19e02e45abcbcd821847d6">data</link>&#32;+&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>,&#32;bytesToRead);
1380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;+=&#32;bytesToRead;
1381 &#32;&#32;&#32;&#32;}
1382 
1383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesToRead;
1384 }
1385 
1386 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__on_seek_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8c">drwav_seek_origin</link>&#32;origin)
1387 {
1388 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>*&#32;memory&#32;=&#32;(<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>*)pUserData;
1389 &#32;&#32;&#32;&#32;drwav_assert(memory&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1390 
1391 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>)&#32;{
1392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;0)&#32;{
1393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ac9afa4dd398c46e0d690e41c79f1b984">dataSize</link>)&#32;{
1394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
1395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;&lt;&#32;(<emphasis role="keywordtype">size_t</emphasis>)-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>)&#32;{
1398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;backwards.&#32;*/</emphasis>
1399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1401 
1402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;will&#32;never&#32;underflow&#32;thanks&#32;to&#32;the&#32;clamps&#32;above.&#32;*/</emphasis>
1403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1404 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)offset&#32;&lt;=&#32;memory-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>)&#32;{
1406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
1409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1410 &#32;&#32;&#32;&#32;}
1411 &#32;&#32;&#32;&#32;
1412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1413 }
1414 
1415 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drwav__on_write_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pDataIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToWrite)
1416 {
1417 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>*&#32;memory&#32;=&#32;(<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>*)pUserData;
1418 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRemaining;
1419 
1420 &#32;&#32;&#32;&#32;drwav_assert(memory&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1421 &#32;&#32;&#32;&#32;drwav_assert(memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9101d09c995e2934734d86313659d262">dataCapacity</link>&#32;&gt;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>);
1422 
1423 &#32;&#32;&#32;&#32;bytesRemaining&#32;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9101d09c995e2934734d86313659d262">dataCapacity</link>&#32;-&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>;
1424 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesRemaining&#32;&lt;&#32;bytesToWrite)&#32;{
1425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Need&#32;to&#32;reallocate.&#32;*/</emphasis>
1426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pNewData;
1427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;newDataCapacity&#32;=&#32;(memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9101d09c995e2934734d86313659d262">dataCapacity</link>&#32;==&#32;0)&#32;?&#32;256&#32;:&#32;memory-&gt;dataCapacity&#32;*&#32;2;
1428 
1429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;doubling&#32;wasn&apos;t&#32;enough,&#32;just&#32;make&#32;it&#32;the&#32;minimum&#32;required&#32;size&#32;to&#32;write&#32;the&#32;data.&#32;*/</emphasis>
1430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((newDataCapacity&#32;-&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>)&#32;&lt;&#32;bytesToWrite)&#32;{
1431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newDataCapacity&#32;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;+&#32;bytesToWrite;
1432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1433 
1434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewData&#32;=&#32;<link linkend="__classes_2lib_2raudio_8c_1ab0062463272fa8aedbf45bbbbc824fda">DRWAV_REALLOC</link>(*memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a6dd59c7b435ccc4b6bf3ae45923f64be">ppData</link>,&#32;newDataCapacity);
1435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1438 
1439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a6dd59c7b435ccc4b6bf3ae45923f64be">ppData</link>&#32;=&#32;pNewData;
1440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9101d09c995e2934734d86313659d262">dataCapacity</link>&#32;=&#32;newDataCapacity;
1441 &#32;&#32;&#32;&#32;}
1442 
1443 &#32;&#32;&#32;&#32;DRWAV_COPY_MEMORY(((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*)(*memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a6dd59c7b435ccc4b6bf3ae45923f64be">ppData</link>))&#32;+&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>,&#32;pDataIn,&#32;bytesToWrite);
1444 
1445 &#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;+=&#32;bytesToWrite;
1446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>&#32;&lt;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>)&#32;{
1447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>&#32;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>;
1448 &#32;&#32;&#32;&#32;}
1449 
1450 &#32;&#32;&#32;&#32;*memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a58da28118ac46f81d8905a5ecc09c57c">pDataSize</link>&#32;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>;
1451 
1452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesToWrite;
1453 }
1454 
1455 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__on_seek_memory_write(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8c">drwav_seek_origin</link>&#32;origin)
1456 {
1457 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>*&#32;memory&#32;=&#32;(<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>*)pUserData;
1458 &#32;&#32;&#32;&#32;drwav_assert(memory&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1459 
1460 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>)&#32;{
1461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;0)&#32;{
1462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>)&#32;{
1463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;(int)(memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>&#32;-&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>);&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
1464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;&lt;&#32;(<emphasis role="keywordtype">size_t</emphasis>)-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>)&#32;{
1467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;-(int)memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>;&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;backwards.&#32;*/</emphasis>
1468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1470 
1471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;will&#32;never&#32;underflow&#32;thanks&#32;to&#32;the&#32;clamps&#32;above.&#32;*/</emphasis>
1472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1473 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)offset&#32;&lt;=&#32;memory-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>)&#32;{
1475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;=&#32;memory-&gt;<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>;&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
1478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1479 &#32;&#32;&#32;&#32;}
1480 &#32;&#32;&#32;&#32;
1481 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1482 }
1483 
1484 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8133667245ee84be65c58c972411858b">drwav_init_memory</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>)
1485 {
1486 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aadd430ef7d8f5103770c81fc2b9a1d9c">drwav_init_memory_ex</link>(pWav,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1487 }
1488 
1489 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aadd430ef7d8f5103770c81fc2b9a1d9c">drwav_init_memory_ex</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
1490 {
1491 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>&#32;memoryStream;
1492 
1493 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>&#32;==&#32;0)&#32;{
1494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1495 &#32;&#32;&#32;&#32;}
1496 
1497 &#32;&#32;&#32;&#32;drwav_zero_memory(&amp;memoryStream,&#32;<emphasis role="keyword">sizeof</emphasis>(memoryStream));
1498 &#32;&#32;&#32;&#32;memoryStream.<link linkend="_structdrwav____memory__stream_1ab6d0b0640f19e02e45abcbcd821847d6">data</link>&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1499 &#32;&#32;&#32;&#32;memoryStream.<link linkend="_structdrwav____memory__stream_1ac9afa4dd398c46e0d690e41c79f1b984">dataSize</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
1500 &#32;&#32;&#32;&#32;memoryStream.<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;=&#32;0;
1501 
1502 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1afd87909668f84c27f3518a36a15246c4">drwav_init_ex</link>(pWav,&#32;drwav__on_read_memory,&#32;drwav__on_seek_memory,&#32;onChunk,&#32;(<emphasis role="keywordtype">void</emphasis>*)&amp;memoryStream,&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>))&#32;{
1503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1504 &#32;&#32;&#32;&#32;}
1505 
1506 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6bffd178879c0016be00a08b124fa976">memoryStream</link>&#32;=&#32;memoryStream;
1507 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>&#32;=&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a6bffd178879c0016be00a08b124fa976">memoryStream</link>;
1508 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1509 }
1510 
1511 
1512 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav_init_memory_write__internal(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential)
1513 {
1514 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>&#32;memoryStreamWrite;
1515 
1516 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ppData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1518 &#32;&#32;&#32;&#32;}
1519 
1520 &#32;&#32;&#32;&#32;*ppData&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;<emphasis role="comment">/*&#32;Important&#32;because&#32;we&apos;re&#32;using&#32;realloc()!&#32;*/</emphasis>
1521 &#32;&#32;&#32;&#32;*pDataSize&#32;=&#32;0;
1522 
1523 &#32;&#32;&#32;&#32;drwav_zero_memory(&amp;memoryStreamWrite,&#32;<emphasis role="keyword">sizeof</emphasis>(memoryStreamWrite));
1524 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a6dd59c7b435ccc4b6bf3ae45923f64be">ppData</link>&#32;=&#32;ppData;
1525 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a58da28118ac46f81d8905a5ecc09c57c">pDataSize</link>&#32;=&#32;pDataSize;
1526 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>&#32;=&#32;0;
1527 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a9101d09c995e2934734d86313659d262">dataCapacity</link>&#32;=&#32;0;
1528 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;=&#32;0;
1529 
1530 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav_init_write__internal(pWav,&#32;pFormat,&#32;totalSampleCount,&#32;isSequential,&#32;drwav__on_write_memory,&#32;drwav__on_seek_memory_write,&#32;(<emphasis role="keywordtype">void</emphasis>*)&amp;memoryStreamWrite))&#32;{
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1532 &#32;&#32;&#32;&#32;}
1533 
1534 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6cf469b4270d486b8940be5e2cc2f961">memoryStreamWrite</link>&#32;=&#32;memoryStreamWrite;
1535 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>&#32;=&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a6cf469b4270d486b8940be5e2cc2f961">memoryStreamWrite</link>;
1536 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1537 }
1538 
1539 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6da330179be2662159a675e403cec76b">drwav_init_memory_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat)
1540 {
1541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_memory_write__internal(pWav,&#32;ppData,&#32;pDataSize,&#32;pFormat,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>);
1542 }
1543 
1544 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a847e87399e1310ba1f8a8bbe589fd84d">drwav_init_memory_write_sequential</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount)
1545 {
1546 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_memory_write__internal(pWav,&#32;ppData,&#32;pDataSize,&#32;pFormat,&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>);
1547 }
1548 
1549 
1550 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a576028f658a8a4ea06426cd8f864b85c">drwav_open_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>)
1551 {
1552 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a56262661d43e512fdb02fa99b876df7e">drwav_open_memory_ex</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1553 }
1554 
1555 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a56262661d43e512fdb02fa99b876df7e">drwav_open_memory_ex</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
1556 {
1557 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream">drwav__memory_stream</link>&#32;memoryStream;
1558 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>*&#32;pWav;
1559 
1560 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>&#32;==&#32;0)&#32;{
1561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1562 &#32;&#32;&#32;&#32;}
1563 
1564 &#32;&#32;&#32;&#32;drwav_zero_memory(&amp;memoryStream,&#32;<emphasis role="keyword">sizeof</emphasis>(memoryStream));
1565 &#32;&#32;&#32;&#32;memoryStream.<link linkend="_structdrwav____memory__stream_1ab6d0b0640f19e02e45abcbcd821847d6">data</link>&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1566 &#32;&#32;&#32;&#32;memoryStream.<link linkend="_structdrwav____memory__stream_1ac9afa4dd398c46e0d690e41c79f1b984">dataSize</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
1567 &#32;&#32;&#32;&#32;memoryStream.<link linkend="_structdrwav____memory__stream_1ade61b945505553e8ba4318dfeed2afbe">currentReadPos</link>&#32;=&#32;0;
1568 
1569 &#32;&#32;&#32;&#32;pWav&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a20c7338eae3c9e19c060890903be1822">drwav_open_ex</link>(drwav__on_read_memory,&#32;drwav__on_seek_memory,&#32;onChunk,&#32;(<emphasis role="keywordtype">void</emphasis>*)&amp;memoryStream,&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
1570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1572 &#32;&#32;&#32;&#32;}
1573 
1574 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6bffd178879c0016be00a08b124fa976">memoryStream</link>&#32;=&#32;memoryStream;
1575 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>&#32;=&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a6bffd178879c0016be00a08b124fa976">memoryStream</link>;
1576 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pWav;
1577 }
1578 
1579 
1580 <link linkend="_structdrwav">drwav</link>*&#32;drwav_open_memory_write__internal(<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential)
1581 {
1582 &#32;&#32;&#32;&#32;<link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link>&#32;memoryStreamWrite;
1583 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>*&#32;pWav;
1584 
1585 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ppData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1587 &#32;&#32;&#32;&#32;}
1588 
1589 &#32;&#32;&#32;&#32;*ppData&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;<emphasis role="comment">/*&#32;Important&#32;because&#32;we&apos;re&#32;using&#32;realloc()!&#32;*/</emphasis>
1590 &#32;&#32;&#32;&#32;*pDataSize&#32;=&#32;0;
1591 
1592 &#32;&#32;&#32;&#32;drwav_zero_memory(&amp;memoryStreamWrite,&#32;<emphasis role="keyword">sizeof</emphasis>(memoryStreamWrite));
1593 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a6dd59c7b435ccc4b6bf3ae45923f64be">ppData</link>&#32;=&#32;ppData;
1594 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a58da28118ac46f81d8905a5ecc09c57c">pDataSize</link>&#32;=&#32;pDataSize;
1595 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a9e01cbf6578e9f2b92b7ea7021078c71">dataSize</link>&#32;=&#32;0;
1596 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1a9101d09c995e2934734d86313659d262">dataCapacity</link>&#32;=&#32;0;
1597 &#32;&#32;&#32;&#32;memoryStreamWrite.<link linkend="_structdrwav____memory__stream__write_1ac65a0c98d3a2e7d504247c73168bd088">currentWritePos</link>&#32;=&#32;0;
1598 
1599 &#32;&#32;&#32;&#32;pWav&#32;=&#32;drwav_open_write__internal(pFormat,&#32;totalSampleCount,&#32;isSequential,&#32;drwav__on_write_memory,&#32;drwav__on_seek_memory_write,&#32;(<emphasis role="keywordtype">void</emphasis>*)&amp;memoryStreamWrite);
1600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1602 &#32;&#32;&#32;&#32;}
1603 
1604 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6cf469b4270d486b8940be5e2cc2f961">memoryStreamWrite</link>&#32;=&#32;memoryStreamWrite;
1605 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>&#32;=&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a6cf469b4270d486b8940be5e2cc2f961">memoryStreamWrite</link>;
1606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pWav;
1607 }
1608 
1609 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ace73a04ffd7fec3d0983f36ee20012f3">drwav_open_memory_write</link>(<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat)
1610 {
1611 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_open_memory_write__internal(ppData,&#32;pDataSize,&#32;pFormat,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>);
1612 }
1613 
1614 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6c7918c54a0dc756c883c66ecbd328f2">drwav_open_memory_write_sequential</link>(<emphasis role="keywordtype">void</emphasis>**&#32;ppData,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;pDataSize,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount)
1615 {
1616 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_open_memory_write__internal(ppData,&#32;pDataSize,&#32;pFormat,&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>);
1617 }
1618 
1619 
1620 <emphasis role="keywordtype">size_t</emphasis>&#32;drwav__on_read(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;pCursor)
1621 {
1622 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
1623 
1624 &#32;&#32;&#32;&#32;drwav_assert(onRead&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1625 &#32;&#32;&#32;&#32;drwav_assert(pCursor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1626 
1627 &#32;&#32;&#32;&#32;bytesRead&#32;=&#32;onRead(pUserData,&#32;pBufferOut,&#32;bytesToRead);
1628 &#32;&#32;&#32;&#32;*pCursor&#32;+=&#32;bytesRead;
1629 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesRead;
1630 }
1631 
1632 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav__on_seek(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8c">drwav_seek_origin</link>&#32;origin,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;pCursor)
1633 {
1634 &#32;&#32;&#32;&#32;drwav_assert(onSeek&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1635 &#32;&#32;&#32;&#32;drwav_assert(pCursor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1636 
1637 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onSeek(pUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;origin))&#32;{
1638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1639 &#32;&#32;&#32;&#32;}
1640 
1641 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>)&#32;{
1642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pCursor&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1643 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pCursor&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1645 &#32;&#32;&#32;&#32;}
1646 
1647 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1648 }
1649 
1650 
1651 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;drwav_get_bytes_per_sample(<link linkend="_structdrwav">drwav</link>*&#32;pWav)
1652 {
1653 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1654 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;number&#32;of&#32;bytes&#32;per&#32;sample&#32;is&#32;based&#32;on&#32;the&#32;bits&#32;per&#32;sample&#32;or&#32;the&#32;block&#32;align.&#32;We&#32;prioritize&#32;floor(bitsPerSample/8),&#32;but&#32;if</emphasis>
1655 <emphasis role="comment">&#32;&#32;&#32;&#32;this&#32;is&#32;zero&#32;or&#32;the&#32;bits&#32;per&#32;sample&#32;is&#32;not&#32;a&#32;multiple&#32;of&#32;8&#32;we&#32;need&#32;to&#32;fall&#32;back&#32;to&#32;the&#32;block&#32;align.</emphasis>
1656 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
1657 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;&gt;&gt;&#32;3;
1658 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0&#32;||&#32;(pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;&amp;&#32;0x7)&#32;!=&#32;0)&#32;{
1659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesPerSample&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>/pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;
1660 &#32;&#32;&#32;&#32;}
1661 
1662 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesPerSample;
1663 }
1664 
1665 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;drwav_get_bytes_per_pcm_frame(<link linkend="_structdrwav">drwav</link>*&#32;pWav)
1666 {
1667 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1668 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;number&#32;of&#32;bytes&#32;per&#32;frame&#32;is&#32;based&#32;on&#32;the&#32;bits&#32;per&#32;sample&#32;or&#32;the&#32;block&#32;align.&#32;We&#32;prioritize&#32;floor(bitsPerSample*channels/8),&#32;but&#32;if</emphasis>
1669 <emphasis role="comment">&#32;&#32;&#32;&#32;this&#32;is&#32;zero&#32;or&#32;the&#32;bits&#32;per&#32;frame&#32;is&#32;not&#32;a&#32;multiple&#32;of&#32;8&#32;we&#32;need&#32;to&#32;fall&#32;back&#32;to&#32;the&#32;block&#32;align.</emphasis>
1670 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
1671 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bitsPerFrame&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;
1672 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerFrame&#32;=&#32;bitsPerFrame&#32;&gt;&gt;&#32;3;
1673 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerFrame&#32;==&#32;0&#32;||&#32;(bitsPerFrame&#32;&amp;&#32;0x7)&#32;!=&#32;0)&#32;{
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesPerFrame&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>;
1675 &#32;&#32;&#32;&#32;}
1676 
1677 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesPerFrame;
1678 }
1679 
1680 
1681 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aee95432c783db4b35f81fb64e465a9cf">drwav_init</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
1682 {
1683 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afd87909668f84c27f3518a36a15246c4">drwav_init_ex</link>(pWav,&#32;onRead,&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;pUserData,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1684 }
1685 
1686 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1afd87909668f84c27f3518a36a15246c4">drwav_init_ex</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pReadSeekUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
1687 {
1688 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;cursor;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Keeps&#32;track&#32;of&#32;the&#32;byte&#32;position&#32;so&#32;we&#32;can&#32;seek&#32;to&#32;specific&#32;locations.&#32;*/</emphasis>
1689 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="_namespace____gnu__parallel_1a76f6cbf29b1b8d57762cce1ed9bd01a8ab0ba01dff81610e2936ab2e3c49445f9">sequential</link>;
1690 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;riff[4];
1691 &#32;&#32;&#32;&#32;<link linkend="_structdrwav__fmt">drwav_fmt</link>&#32;fmt;
1692 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;translatedFormatTag;
1693 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;sampleCountFromFactChunk;
1694 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;foundDataChunk;
1695 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkSize;
1696 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;chunkSize;
1697 
1698 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onRead&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;onSeek&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1700 &#32;&#32;&#32;&#32;}
1701 
1702 &#32;&#32;&#32;&#32;cursor&#32;=&#32;0;
1703 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a76f6cbf29b1b8d57762cce1ed9bd01a8ab0ba01dff81610e2936ab2e3c49445f9">sequential</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a1bc62dedfa8f36a61810e9718d22f547">DRWAV_SEQUENTIAL</link>)&#32;!=&#32;0;
1704 
1705 &#32;&#32;&#32;&#32;drwav_zero_memory(pWav,&#32;<emphasis role="keyword">sizeof</emphasis>(*pWav));
1706 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>&#32;&#32;&#32;&#32;=&#32;onRead;
1707 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>&#32;&#32;&#32;&#32;=&#32;onSeek;
1708 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>&#32;=&#32;pReadSeekUserData;
1709 
1710 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;first&#32;4&#32;bytes&#32;should&#32;be&#32;the&#32;RIFF&#32;identifier.&#32;*/</emphasis>
1711 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;riff,&#32;<emphasis role="keyword">sizeof</emphasis>(riff),&#32;&amp;cursor)&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(riff))&#32;{
1712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1713 &#32;&#32;&#32;&#32;}
1714 
1715 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1716 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;first&#32;4&#32;bytes&#32;can&#32;be&#32;used&#32;to&#32;identify&#32;the&#32;container.&#32;For&#32;RIFF&#32;files&#32;it&#32;will&#32;start&#32;with&#32;&quot;RIFF&quot;&#32;and&#32;for</emphasis>
1717 <emphasis role="comment">&#32;&#32;&#32;&#32;w64&#32;it&#32;will&#32;start&#32;with&#32;&quot;riff&quot;.</emphasis>
1718 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
1719 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__fourcc_equal(riff,&#32;<emphasis role="stringliteral">&quot;RIFF&quot;</emphasis>))&#32;{
1720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>;
1721 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__fourcc_equal(riff,&#32;<emphasis role="stringliteral">&quot;riff&quot;</emphasis>))&#32;{
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;riff2[12];
1724 
1725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a82e82b19721ae7fc0ee13a3b4689e5dc">drwav_container_w64</link>;
1726 
1727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;rest&#32;of&#32;the&#32;GUID&#32;for&#32;validity.&#32;*/</emphasis>
1728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;riff2,&#32;<emphasis role="keyword">sizeof</emphasis>(riff2),&#32;&amp;cursor)&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(riff2))&#32;{
1729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1731 
1732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;12;&#32;++i)&#32;{
1733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(riff2[i]&#32;!=&#32;drwavGUID_W64_RIFF[i+4])&#32;{
1734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1737 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unknown&#32;or&#32;unsupported&#32;container.&#32;*/</emphasis>
1739 &#32;&#32;&#32;&#32;}
1740 
1741 
1742 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
1743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;chunkSizeBytes[4];
1744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;wave[4];
1745 
1746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RIFF/WAVE&#32;*/</emphasis>
1747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;chunkSizeBytes,&#32;<emphasis role="keyword">sizeof</emphasis>(chunkSizeBytes),&#32;&amp;cursor)&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(chunkSizeBytes))&#32;{
1748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1750 
1751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__bytes_to_u32(chunkSizeBytes)&#32;&lt;&#32;36)&#32;{
1752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Chunk&#32;size&#32;should&#32;always&#32;be&#32;at&#32;least&#32;36&#32;bytes.&#32;*/</emphasis>
1753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1754 
1755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;wave,&#32;<emphasis role="keyword">sizeof</emphasis>(wave),&#32;&amp;cursor)&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(wave))&#32;{
1756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1758 
1759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__fourcc_equal(wave,&#32;<emphasis role="stringliteral">&quot;WAVE&quot;</emphasis>))&#32;{
1760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Expecting&#32;&quot;WAVE&quot;.&#32;*/</emphasis>
1761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1762 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;chunkSizeBytes[8];
1764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;wave[16];
1765 
1766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;W64&#32;*/</emphasis>
1767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;chunkSizeBytes,&#32;<emphasis role="keyword">sizeof</emphasis>(chunkSizeBytes),&#32;&amp;cursor)&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(chunkSizeBytes))&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1770 
1771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__bytes_to_u64(chunkSizeBytes)&#32;&lt;&#32;80)&#32;{
1772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1774 
1775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;wave,&#32;<emphasis role="keyword">sizeof</emphasis>(wave),&#32;&amp;cursor)&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(wave))&#32;{
1776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1778 
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__guid_equal(wave,&#32;drwavGUID_W64_WAVE))&#32;{
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1782 &#32;&#32;&#32;&#32;}
1783 
1784 
1785 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;next&#32;bytes&#32;should&#32;be&#32;the&#32;&quot;fmt&#32;&quot;&#32;chunk.&#32;*/</emphasis>
1786 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__read_fmt(onRead,&#32;onSeek,&#32;pReadSeekUserData,&#32;pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>,&#32;&amp;cursor,&#32;&amp;fmt))&#32;{
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Failed&#32;to&#32;read&#32;the&#32;&quot;fmt&#32;&quot;&#32;chunk.&#32;*/</emphasis>
1788 &#32;&#32;&#32;&#32;}
1789 
1790 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Basic&#32;validation.&#32;*/</emphasis>
1791 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmt.<link linkend="_structdrwav__fmt_1ab20daecbfedf948d9ed2c34737d0d726">sampleRate</link>&#32;==&#32;0&#32;||&#32;fmt.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>&#32;==&#32;0&#32;||&#32;fmt.<link linkend="_structdrwav__fmt_1a0bf44f53e540dd652cf6f336446f6d42">bitsPerSample</link>&#32;==&#32;0&#32;||&#32;fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;==&#32;0)&#32;{
1792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Invalid&#32;channel&#32;count.&#32;Probably&#32;an&#32;invalid&#32;WAV&#32;file.&#32;*/</emphasis>
1793 &#32;&#32;&#32;&#32;}
1794 
1795 
1796 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Translate&#32;the&#32;internal&#32;format.&#32;*/</emphasis>
1797 &#32;&#32;&#32;&#32;translatedFormatTag&#32;=&#32;fmt.<link linkend="_structdrwav__fmt_1a4e2484decd3b42c4c5d4076ce6696d33">formatTag</link>;
1798 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(translatedFormatTag&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a51c6c37a181cf259f3bf9057c6c052a0">DR_WAVE_FORMAT_EXTENSIBLE</link>)&#32;{
1799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;translatedFormatTag&#32;=&#32;drwav__bytes_to_u16(fmt.<link linkend="_structdrwav__fmt_1a0b583527704e56a78b10fae732a2a60b">subFormat</link>&#32;+&#32;0);
1800 &#32;&#32;&#32;&#32;}
1801 
1802 
1803 
1804 &#32;&#32;&#32;&#32;sampleCountFromFactChunk&#32;=&#32;0;
1805 
1806 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1807 <emphasis role="comment">&#32;&#32;&#32;&#32;We&#32;need&#32;to&#32;enumerate&#32;over&#32;each&#32;chunk&#32;for&#32;two&#32;reasons:</emphasis>
1808 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1)&#32;The&#32;&quot;data&quot;&#32;chunk&#32;may&#32;not&#32;be&#32;the&#32;next&#32;one</emphasis>
1809 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2)&#32;We&#32;may&#32;want&#32;to&#32;report&#32;each&#32;chunk&#32;back&#32;to&#32;the&#32;client</emphasis>
1810 <emphasis role="comment">&#32;&#32;&#32;&#32;</emphasis>
1811 <emphasis role="comment">&#32;&#32;&#32;&#32;In&#32;order&#32;to&#32;correctly&#32;report&#32;each&#32;chunk&#32;back&#32;to&#32;the&#32;client&#32;we&#32;will&#32;need&#32;to&#32;keep&#32;looping&#32;until&#32;the&#32;end&#32;of&#32;the&#32;file.</emphasis>
1812 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
1813 &#32;&#32;&#32;&#32;foundDataChunk&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1814 &#32;&#32;&#32;&#32;dataChunkSize&#32;=&#32;0;
1815 
1816 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;next&#32;chunk&#32;we&#32;care&#32;about&#32;is&#32;the&#32;&quot;data&quot;&#32;chunk.&#32;This&#32;is&#32;not&#32;necessarily&#32;the&#32;next&#32;chunk&#32;so&#32;we&apos;ll&#32;need&#32;to&#32;loop.&#32;*/</emphasis>
1817 &#32;&#32;&#32;&#32;chunkSize&#32;=&#32;0;
1818 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)
1819 &#32;&#32;&#32;&#32;{
1820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdrwav__chunk__header">drwav_chunk_header</link>&#32;header;
1821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a214864129697c3f4bee78dff49e07be6">drwav_result</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;drwav__read_chunk_header(onRead,&#32;pReadSeekUserData,&#32;pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>,&#32;&amp;cursor,&#32;&amp;header);
1822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab539e2817efa7287b43961eb893f41a7">DRWAV_SUCCESS</link>)&#32;{
1823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundDataChunk)&#32;{
1824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;Probably&#32;at&#32;the&#32;end&#32;of&#32;the&#32;file.&#32;Get&#32;out&#32;of&#32;the&#32;loop.&#32;*/</emphasis>
1827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1829 
1830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tell&#32;the&#32;client&#32;about&#32;this&#32;chunk.&#32;*/</emphasis>
1831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!sequential&#32;&amp;&amp;&#32;onChunk&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;callbackBytesRead&#32;=&#32;onChunk(pChunkUserData,&#32;onRead,&#32;onSeek,&#32;pReadSeekUserData,&#32;&amp;header);
1833 
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1835 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dr_wav&#32;may&#32;need&#32;to&#32;read&#32;the&#32;contents&#32;of&#32;the&#32;chunk,&#32;so&#32;we&#32;now&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;the&#32;position&#32;before</emphasis>
1836 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;we&#32;called&#32;the&#32;callback.</emphasis>
1837 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
1838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(callbackBytesRead&#32;&gt;&#32;0)&#32;{
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__seek_from_start(onSeek,&#32;cursor,&#32;pReadSeekUserData))&#32;{
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
1845 
1846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundDataChunk)&#32;{
1847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;=&#32;cursor;
1848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1849 
1850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSize&#32;=&#32;header.<link linkend="_structdrwav__chunk__header_1aa1cb86d096c1402276dabaab65c76cd2">sizeInBytes</link>;
1851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
1852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__fourcc_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a1358819813c1f1904fafedf81d8e9229">fourcc</link>,&#32;<emphasis role="stringliteral">&quot;data&quot;</emphasis>))&#32;{
1853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundDataChunk&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dataChunkSize&#32;=&#32;chunkSize;
1855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__guid_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a45f2d3ba26c61347d49fa2831612c691">guid</link>,&#32;drwavGUID_W64_DATA))&#32;{
1858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundDataChunk&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
1859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dataChunkSize&#32;=&#32;chunkSize;
1860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1862 
1863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1864 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;at&#32;this&#32;point&#32;we&#32;have&#32;found&#32;the&#32;data&#32;chunk&#32;and&#32;we&apos;re&#32;running&#32;in&#32;sequential&#32;mode,&#32;we&#32;need&#32;to&#32;break&#32;out&#32;of&#32;this&#32;loop.&#32;The&#32;reason&#32;for</emphasis>
1865 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;is&#32;that&#32;we&#32;would&#32;otherwise&#32;require&#32;a&#32;backwards&#32;seek&#32;which&#32;sequential&#32;mode&#32;forbids.</emphasis>
1866 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
1867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foundDataChunk&#32;&amp;&amp;&#32;sequential)&#32;{
1868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1870 
1871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Optional.&#32;Get&#32;the&#32;total&#32;sample&#32;count&#32;from&#32;the&#32;FACT&#32;chunk.&#32;This&#32;is&#32;useful&#32;for&#32;compressed&#32;formats.&#32;*/</emphasis>
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
1873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__fourcc_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a1358819813c1f1904fafedf81d8e9229">fourcc</link>,&#32;<emphasis role="stringliteral">&quot;fact&quot;</emphasis>))&#32;{
1874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;sampleCount;
1875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;&amp;sampleCount,&#32;4,&#32;&amp;cursor)&#32;!=&#32;4)&#32;{
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSize&#32;-=&#32;4;
1879 
1880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundDataChunk)&#32;{
1881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;=&#32;cursor;
1882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1883 
1884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1885 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;sample&#32;count&#32;in&#32;the&#32;&quot;fact&quot;&#32;chunk&#32;is&#32;either&#32;unreliable,&#32;or&#32;I&apos;m&#32;not&#32;understanding&#32;it&#32;properly.&#32;For&#32;now&#32;I&#32;am&#32;only&#32;enabling&#32;this</emphasis>
1886 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;Microsoft&#32;ADPCM&#32;formats.</emphasis>
1887 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
1888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
1889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampleCountFromFactChunk&#32;=&#32;sampleCount;
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampleCountFromFactChunk&#32;=&#32;0;
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__guid_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a45f2d3ba26c61347d49fa2831612c691">guid</link>,&#32;drwavGUID_W64_FACT))&#32;{
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;&amp;sampleCountFromFactChunk,&#32;8,&#32;&amp;cursor)&#32;!=&#32;8)&#32;{
1897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSize&#32;-=&#32;8;
1900 
1901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundDataChunk)&#32;{
1902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;=&#32;cursor;
1903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1906 
1907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&quot;smpl&quot;&#32;chunk.&#32;*/</emphasis>
1908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
1909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__fourcc_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a1358819813c1f1904fafedf81d8e9229">fourcc</link>,&#32;<emphasis role="stringliteral">&quot;smpl&quot;</emphasis>))&#32;{
1910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;smplHeaderData[36];&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;36&#32;=&#32;size&#32;of&#32;the&#32;smpl&#32;header&#32;section,&#32;not&#32;including&#32;the&#32;loop&#32;data.&#32;*/</emphasis>
1911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chunkSize&#32;&gt;=&#32;<emphasis role="keyword">sizeof</emphasis>(smplHeaderData))&#32;{
1912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;bytesJustRead&#32;=&#32;drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;smplHeaderData,&#32;<emphasis role="keyword">sizeof</emphasis>(smplHeaderData),&#32;&amp;cursor);
1913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSize&#32;-=&#32;bytesJustRead;
1914 
1915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesJustRead&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(smplHeaderData))&#32;{
1916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;iLoop;
1917 
1918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a7fdc89c97102bd511d06bf2716ec0634">manufacturer</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+0);
1919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1aea7fc1664f91ec1637dc7f0216805302">product</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+4);
1920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a0172803c3912f0c49e773a85f7f518ca">samplePeriod</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+8);
1921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a9ccc93eeeef6c22e41f1a8ee3a5ea651">midiUnityNotes</link>&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+12);
1922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a5544a723488dc8366aca3a88550f6934">midiPitchFraction</link>&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+16);
1923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a984cf30eedef739a3eec02c5e5506096">smpteFormat</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+20);
1924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a6291fe764ee12e0bcfc34295f2f68b1c">smpteOffset</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+24);
1925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a8d80b719a95940e83c6c7e06c2df858f">numSampleLoops</link>&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+28);
1926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a79e76e9d290dc97b2db70a86da9f9d32">samplerData</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplHeaderData+32);
1927 
1928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iLoop&#32;=&#32;0;&#32;iLoop&#32;&lt;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1a8d80b719a95940e83c6c7e06c2df858f">numSampleLoops</link>&#32;&amp;&amp;&#32;iLoop&#32;&lt;&#32;drwav_countof(pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>);&#32;++iLoop)&#32;{
1929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;smplLoopData[24];&#32;&#32;<emphasis role="comment">/*&#32;24&#32;=&#32;size&#32;of&#32;a&#32;loop&#32;section&#32;in&#32;the&#32;smpl&#32;chunk.&#32;*/</emphasis>
1930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesJustRead&#32;=&#32;drwav__on_read(onRead,&#32;pReadSeekUserData,&#32;smplLoopData,&#32;<emphasis role="keyword">sizeof</emphasis>(smplLoopData),&#32;&amp;cursor);
1931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSize&#32;-=&#32;bytesJustRead;
1932 
1933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesJustRead&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(smplLoopData))&#32;{
1934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>[iLoop].<link linkend="_structdrwav__smpl__loop_1a494799db87ae8d4ff075f1283cabca0f">cuePointId</link>&#32;=&#32;drwav__bytes_to_u32(smplLoopData+0);
1935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>[iLoop].<link linkend="_structdrwav__smpl__loop_1a920eae2dd73283716ed3a3ccd90e5ec2">type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplLoopData+4);
1936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>[iLoop].<link linkend="_structdrwav__smpl__loop_1a573a4644042d63189fc9420053ed031e">start</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplLoopData+8);
1937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>[iLoop].<link linkend="_structdrwav__smpl__loop_1a2b2de7e23e94ba275296d9b6ae8c3db6">end</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplLoopData+12);
1938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>[iLoop].<link linkend="_structdrwav__smpl__loop_1afc450d1301cff73d5052e508f513b544">fraction</link>&#32;&#32;&#32;=&#32;drwav__bytes_to_u32(smplLoopData+16);
1939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ad59f1f3335ae2691b51444e7ed4d4f29">smpl</link>.<link linkend="_structdrwav__smpl_1af2c861b2b2996b803a476571092da63a">loops</link>[iLoop].<link linkend="_structdrwav__smpl__loop_1acbde654bad7680c6b8ef01cbd7b3a7b7">playCount</link>&#32;&#32;=&#32;drwav__bytes_to_u32(smplLoopData+20);
1940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;Break&#32;from&#32;the&#32;smpl&#32;loop&#32;for&#32;loop.&#32;*/</emphasis>
1942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Looks&#32;like&#32;invalid&#32;data.&#32;Ignore&#32;the&#32;chunk.&#32;*/</emphasis>
1947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__guid_equal(header.<link linkend="_structdrwav__chunk__header_1a3f5135840727f8c094c0407e04f623d0">id</link>.<link linkend="_structdrwav__chunk__header_1a45f2d3ba26c61347d49fa2831612c691">guid</link>,&#32;drwavGUID_W64_SMPL))&#32;{
1951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
1952 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;path&#32;will&#32;be&#32;hit&#32;when&#32;a&#32;W64&#32;WAV&#32;file&#32;contains&#32;a&#32;smpl&#32;chunk.&#32;I&#32;don&apos;t&#32;have&#32;a&#32;sample&#32;file&#32;to&#32;test&#32;this&#32;path,&#32;so&#32;a&#32;contribution</emphasis>
1953 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;welcome&#32;to&#32;add&#32;support&#32;for&#32;this.</emphasis>
1954 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
1955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1957 
1958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Make&#32;sure&#32;we&#32;seek&#32;past&#32;the&#32;padding.&#32;*/</emphasis>
1959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSize&#32;+=&#32;header.<link linkend="_structdrwav__chunk__header_1ad9da64cda7715e1a7714c30b4e2e91a2">paddingSize</link>;
1960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__seek_forward(onSeek,&#32;chunkSize,&#32;pReadSeekUserData))&#32;{
1961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor&#32;+=&#32;chunkSize;
1964 
1965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundDataChunk)&#32;{
1966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;=&#32;cursor;
1967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1968 &#32;&#32;&#32;&#32;}
1969 
1970 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;we&#32;haven&apos;t&#32;found&#32;a&#32;data&#32;chunk,&#32;return&#32;an&#32;error.&#32;*/</emphasis>
1971 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundDataChunk)&#32;{
1972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1973 &#32;&#32;&#32;&#32;}
1974 
1975 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;may&#32;have&#32;moved&#32;passed&#32;the&#32;data&#32;chunk.&#32;If&#32;so&#32;we&#32;need&#32;to&#32;move&#32;back.&#32;If&#32;running&#32;in&#32;sequential&#32;mode&#32;we&#32;can&#32;assume&#32;we&#32;are&#32;already&#32;sitting&#32;on&#32;the&#32;data&#32;chunk.&#32;*/</emphasis>
1976 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!sequential)&#32;{
1977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav__seek_from_start(onSeek,&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>,&#32;pReadSeekUserData))&#32;{
1978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
1979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>;
1981 &#32;&#32;&#32;&#32;}
1982 &#32;&#32;&#32;&#32;
1983 
1984 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;At&#32;this&#32;point&#32;we&#32;should&#32;be&#32;sitting&#32;on&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;raw&#32;audio&#32;data.&#32;*/</emphasis>
1985 
1986 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;fmt;
1987 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6f3a893019f8b2b0bcc1939d48ae2da5">sampleRate</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;fmt.<link linkend="_structdrwav__fmt_1ab20daecbfedf948d9ed2c34737d0d726">sampleRate</link>;
1988 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;fmt.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;
1989 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;fmt.<link linkend="_structdrwav__fmt_1a0bf44f53e540dd652cf6f336446f6d42">bitsPerSample</link>;
1990 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;dataChunkSize;
1991 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;=&#32;translatedFormatTag;
1992 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>&#32;&#32;&#32;=&#32;dataChunkSize;
1993 
1994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleCountFromFactChunk&#32;!=&#32;0)&#32;{
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;=&#32;sampleCountFromFactChunk;
1996 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;=&#32;dataChunkSize&#32;/&#32;drwav_get_bytes_per_pcm_frame(pWav);
1998 
1999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
2000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;blockCount&#32;=&#32;dataChunkSize&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>;
2001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;=&#32;(((blockCount&#32;*&#32;(fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;(6*pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>)))&#32;*&#32;2))&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;&#32;&#32;<emphasis role="comment">/*&#32;x2&#32;because&#32;two&#32;samples&#32;per&#32;byte.&#32;*/</emphasis>
2002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
2004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;blockCount&#32;=&#32;dataChunkSize&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>;
2005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;=&#32;(((blockCount&#32;*&#32;(fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;(4*pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>)))&#32;*&#32;2)&#32;+&#32;(blockCount&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>))&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;
2006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2007 &#32;&#32;&#32;&#32;}
2008 
2009 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Some&#32;formats&#32;only&#32;support&#32;a&#32;certain&#32;number&#32;of&#32;channels.&#32;*/</emphasis>
2010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>&#32;||&#32;pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
2011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;&gt;&#32;2)&#32;{
2012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2014 &#32;&#32;&#32;&#32;}
2015 
2016 <emphasis role="preprocessor">#ifdef&#32;DR_WAV_LIBSNDFILE_COMPAT</emphasis>
2017 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2018 <emphasis role="comment">&#32;&#32;&#32;&#32;I&#32;use&#32;libsndfile&#32;as&#32;a&#32;benchmark&#32;for&#32;testing,&#32;however&#32;in&#32;the&#32;version&#32;I&apos;m&#32;using&#32;(from&#32;the&#32;Windows&#32;installer&#32;on&#32;the&#32;libsndfile&#32;website),</emphasis>
2019 <emphasis role="comment">&#32;&#32;&#32;&#32;it&#32;appears&#32;the&#32;total&#32;sample&#32;count&#32;libsndfile&#32;uses&#32;for&#32;MS-ADPCM&#32;is&#32;incorrect.&#32;It&#32;would&#32;seem&#32;they&#32;are&#32;computing&#32;the&#32;total&#32;sample&#32;count</emphasis>
2020 <emphasis role="comment">&#32;&#32;&#32;&#32;from&#32;the&#32;number&#32;of&#32;blocks,&#32;however&#32;this&#32;results&#32;in&#32;the&#32;inclusion&#32;of&#32;extra&#32;silent&#32;samples&#32;at&#32;the&#32;end&#32;of&#32;the&#32;last&#32;block.&#32;The&#32;correct</emphasis>
2021 <emphasis role="comment">&#32;&#32;&#32;&#32;way&#32;to&#32;know&#32;the&#32;total&#32;sample&#32;count&#32;is&#32;to&#32;inspect&#32;the&#32;&quot;fact&quot;&#32;chunk,&#32;which&#32;should&#32;always&#32;be&#32;present&#32;for&#32;compressed&#32;formats,&#32;and&#32;should</emphasis>
2022 <emphasis role="comment">&#32;&#32;&#32;&#32;always&#32;include&#32;the&#32;sample&#32;count.&#32;This&#32;little&#32;block&#32;of&#32;code&#32;below&#32;is&#32;only&#32;used&#32;to&#32;emulate&#32;the&#32;libsndfile&#32;logic&#32;so&#32;I&#32;can&#32;properly&#32;run&#32;my</emphasis>
2023 <emphasis role="comment">&#32;&#32;&#32;&#32;correctness&#32;tests&#32;against&#32;libsndfile,&#32;and&#32;is&#32;disabled&#32;by&#32;default.</emphasis>
2024 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
2025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
2026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;blockCount&#32;=&#32;dataChunkSize&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>;
2027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;=&#32;(((blockCount&#32;*&#32;(fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;(6*pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>)))&#32;*&#32;2))&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;&#32;&#32;<emphasis role="comment">/*&#32;x2&#32;because&#32;two&#32;samples&#32;per&#32;byte.&#32;*/</emphasis>
2028 &#32;&#32;&#32;&#32;}
2029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
2030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;blockCount&#32;=&#32;dataChunkSize&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>;
2031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;=&#32;(((blockCount&#32;*&#32;(fmt.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;(4*pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>)))&#32;*&#32;2)&#32;+&#32;(blockCount&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>))&#32;/&#32;fmt.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>;
2032 &#32;&#32;&#32;&#32;}
2033 <emphasis role="preprocessor">#endif</emphasis>
2034 
2035 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
2036 
2037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
2038 }
2039 
2040 
2041 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;drwav_riff_chunk_size_riff(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkSize)
2042 {
2043 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dataChunkSize&#32;&lt;=&#32;(0xFFFFFFFFUL&#32;-&#32;36))&#32;{
2044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;36&#32;+&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)dataChunkSize;
2045 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0xFFFFFFFF;
2047 &#32;&#32;&#32;&#32;}
2048 }
2049 
2050 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;drwav_data_chunk_size_riff(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkSize)
2051 {
2052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dataChunkSize&#32;&lt;=&#32;0xFFFFFFFFUL)&#32;{
2053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)dataChunkSize;
2054 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0xFFFFFFFFUL;
2056 &#32;&#32;&#32;&#32;}
2057 }
2058 
2059 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_riff_chunk_size_w64(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkSize)
2060 {
2061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;80&#32;+&#32;24&#32;+&#32;dataChunkSize;&#32;&#32;&#32;<emphasis role="comment">/*&#32;+24&#32;because&#32;W64&#32;includes&#32;the&#32;size&#32;of&#32;the&#32;GUID&#32;and&#32;size&#32;fields.&#32;*/</emphasis>
2062 }
2063 
2064 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_data_chunk_size_w64(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkSize)
2065 {
2066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;24&#32;+&#32;dataChunkSize;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;+24&#32;because&#32;W64&#32;includes&#32;the&#32;size&#32;of&#32;the&#32;GUID&#32;and&#32;size&#32;fields.&#32;*/</emphasis>
2067 }
2068 
2069 
2070 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav_init_write__internal(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2071 {
2072 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;runningPos&#32;=&#32;0;
2073 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;initialDataChunkSize&#32;=&#32;0;
2074 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;chunkSizeFMT;
2075 
2076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2078 &#32;&#32;&#32;&#32;}
2079 
2080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onWrite&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2082 &#32;&#32;&#32;&#32;}
2083 
2084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isSequential&#32;&amp;&amp;&#32;onSeek&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;onSeek&#32;is&#32;required&#32;when&#32;in&#32;non-sequential&#32;mode.&#32;*/</emphasis>
2086 &#32;&#32;&#32;&#32;}
2087 
2088 
2089 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Not&#32;currently&#32;supporting&#32;compressed&#32;formats.&#32;Will&#32;need&#32;to&#32;add&#32;support&#32;for&#32;the&#32;&quot;fact&quot;&#32;chunk&#32;before&#32;we&#32;enable&#32;this.&#32;*/</emphasis>
2090 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1abc2fcad3dcac30abe6f8a3d03591bb98">format</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a51c6c37a181cf259f3bf9057c6c052a0">DR_WAVE_FORMAT_EXTENSIBLE</link>)&#32;{
2091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2092 &#32;&#32;&#32;&#32;}
2093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1abc2fcad3dcac30abe6f8a3d03591bb98">format</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>&#32;||&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1abc2fcad3dcac30abe6f8a3d03591bb98">format</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
2094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2095 &#32;&#32;&#32;&#32;}
2096 
2097 
2098 &#32;&#32;&#32;&#32;drwav_zero_memory(pWav,&#32;<emphasis role="keyword">sizeof</emphasis>(*pWav));
2099 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>&#32;=&#32;onWrite;
2100 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>&#32;=&#32;onSeek;
2101 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>&#32;=&#32;pUserData;
2102 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a4e2484decd3b42c4c5d4076ce6696d33">formatTag</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)pFormat-&gt;<link linkend="_structdrwav__data__format_1abc2fcad3dcac30abe6f8a3d03591bb98">format</link>;
2103 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)pFormat-&gt;<link linkend="_structdrwav__data__format_1a13b31399c0f47c1742ee9cfa490d6729">channels</link>;
2104 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1ab20daecbfedf948d9ed2c34737d0d726">sampleRate</link>&#32;=&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1acce462278b2e0403af7fee1ff24312d9">sampleRate</link>;
2105 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a5b7224cb537694f3319a0ebe88cea8f0">avgBytesPerSec</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)((pFormat-&gt;<link linkend="_structdrwav__data__format_1a07f788b46635807997eedde130fdd034">bitsPerSample</link>&#32;*&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1acce462278b2e0403af7fee1ff24312d9">sampleRate</link>&#32;*&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1a13b31399c0f47c1742ee9cfa490d6729">channels</link>)&#32;/&#32;8);
2106 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)((pFormat-&gt;<link linkend="_structdrwav__data__format_1a13b31399c0f47c1742ee9cfa490d6729">channels</link>&#32;*&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1a07f788b46635807997eedde130fdd034">bitsPerSample</link>)&#32;/&#32;8);
2107 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a0bf44f53e540dd652cf6f336446f6d42">bitsPerSample</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)pFormat-&gt;<link linkend="_structdrwav__data__format_1a07f788b46635807997eedde130fdd034">bitsPerSample</link>;
2108 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1af0ae487d3090123258fe0a13cc9273fc">extendedSize</link>&#32;=&#32;0;
2109 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6e048af649de76096464bef56315f190">isSequentialWrite</link>&#32;=&#32;isSequential;
2110 
2111 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2112 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;initial&#32;values&#32;for&#32;the&#32;&quot;RIFF&quot;&#32;and&#32;&quot;data&quot;&#32;chunks&#32;depends&#32;on&#32;whether&#32;or&#32;not&#32;we&#32;are&#32;initializing&#32;in&#32;sequential&#32;mode&#32;or&#32;not.&#32;In</emphasis>
2113 <emphasis role="comment">&#32;&#32;&#32;&#32;sequential&#32;mode&#32;we&#32;set&#32;this&#32;to&#32;its&#32;final&#32;values&#32;straight&#32;away&#32;since&#32;they&#32;can&#32;be&#32;calculated&#32;from&#32;the&#32;total&#32;sample&#32;count.&#32;In&#32;non-</emphasis>
2114 <emphasis role="comment">&#32;&#32;&#32;&#32;sequential&#32;mode&#32;we&#32;initialize&#32;it&#32;all&#32;to&#32;zero&#32;and&#32;fill&#32;it&#32;out&#32;in&#32;drwav_uninit()&#32;using&#32;a&#32;backwards&#32;seek.</emphasis>
2115 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
2116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isSequential)&#32;{
2117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialDataChunkSize&#32;=&#32;(totalSampleCount&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a0bf44f53e540dd652cf6f336446f6d42">bitsPerSample</link>)&#32;/&#32;8;
2118 
2119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;RIFF&#32;container&#32;has&#32;a&#32;limit&#32;on&#32;the&#32;number&#32;of&#32;samples.&#32;drwav&#32;is&#32;not&#32;allowing&#32;this.&#32;There&apos;s&#32;no&#32;practical&#32;limits&#32;for&#32;Wave64</emphasis>
2121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so&#32;for&#32;the&#32;sake&#32;of&#32;simplicity&#32;I&apos;m&#32;not&#32;doing&#32;any&#32;validation&#32;for&#32;that.</emphasis>
2122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1ac1973d5e81f2a89c01a67d8ed11c73f4">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(initialDataChunkSize&#32;&gt;&#32;(0xFFFFFFFFUL&#32;-&#32;36))&#32;{
2125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Not&#32;enough&#32;room&#32;to&#32;store&#32;every&#32;sample.&#32;*/</emphasis>
2126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2128 &#32;&#32;&#32;&#32;}
2129 
2130 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a18f4fc049e3c11a30675289d74058522">dataChunkDataSizeTargetWrite</link>&#32;=&#32;initialDataChunkSize;
2131 
2132 
2133 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&quot;RIFF&quot;&#32;chunk.&#32;*/</emphasis>
2134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1ac1973d5e81f2a89c01a67d8ed11c73f4">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;chunkSizeRIFF&#32;=&#32;36&#32;+&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)initialDataChunkSize;&#32;&#32;&#32;<emphasis role="comment">/*&#32;+36&#32;=&#32;&quot;RIFF&quot;+[RIFF&#32;Chunk&#32;Size]+&quot;WAVE&quot;&#32;+&#32;[sizeof&#32;&quot;fmt&#32;&quot;&#32;chunk]&#32;*/</emphasis>
2136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;<emphasis role="stringliteral">&quot;RIFF&quot;</emphasis>,&#32;4);
2137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;chunkSizeRIFF,&#32;4);
2138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;<emphasis role="stringliteral">&quot;WAVE&quot;</emphasis>,&#32;4);
2139 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;chunkSizeRIFF&#32;=&#32;80&#32;+&#32;24&#32;+&#32;initialDataChunkSize;&#32;&#32;&#32;<emphasis role="comment">/*&#32;+24&#32;because&#32;W64&#32;includes&#32;the&#32;size&#32;of&#32;the&#32;GUID&#32;and&#32;size&#32;fields.&#32;*/</emphasis>
2141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;drwavGUID_W64_RIFF,&#32;16);
2142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;chunkSizeRIFF,&#32;8);
2143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;drwavGUID_W64_WAVE,&#32;16);
2144 &#32;&#32;&#32;&#32;}
2145 
2146 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&quot;fmt&#32;&quot;&#32;chunk.&#32;*/</emphasis>
2147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1ac1973d5e81f2a89c01a67d8ed11c73f4">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSizeFMT&#32;=&#32;16;
2149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;<emphasis role="stringliteral">&quot;fmt&#32;&quot;</emphasis>,&#32;4);
2150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;chunkSizeFMT,&#32;4);
2151 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunkSizeFMT&#32;=&#32;40;
2153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;drwavGUID_W64_FMT,&#32;16);
2154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;chunkSizeFMT,&#32;8);
2155 &#32;&#32;&#32;&#32;}
2156 
2157 &#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a4e2484decd3b42c4c5d4076ce6696d33">formatTag</link>,&#32;&#32;&#32;&#32;&#32;&#32;2);
2158 &#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1ad46fd117a99f918729ab46775c046c37">channels</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;2);
2159 &#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1ab20daecbfedf948d9ed2c34737d0d726">sampleRate</link>,&#32;&#32;&#32;&#32;&#32;4);
2160 &#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a5b7224cb537694f3319a0ebe88cea8f0">avgBytesPerSec</link>,&#32;4);
2161 &#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>,&#32;&#32;&#32;&#32;&#32;2);
2162 &#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1a0bf44f53e540dd652cf6f336446f6d42">bitsPerSample</link>,&#32;&#32;2);
2163 
2164 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;=&#32;runningPos;
2165 
2166 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&quot;data&quot;&#32;chunk.&#32;*/</emphasis>
2167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1ac1973d5e81f2a89c01a67d8ed11c73f4">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;chunkSizeDATA&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)initialDataChunkSize;
2169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;<emphasis role="stringliteral">&quot;data&quot;</emphasis>,&#32;4);
2170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;chunkSizeDATA,&#32;4);
2171 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;chunkSizeDATA&#32;=&#32;24&#32;+&#32;initialDataChunkSize;&#32;<emphasis role="comment">/*&#32;+24&#32;because&#32;W64&#32;includes&#32;the&#32;size&#32;of&#32;the&#32;GUID&#32;and&#32;size&#32;fields.&#32;*/</emphasis>
2173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;drwavGUID_W64_DATA,&#32;16);
2174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runningPos&#32;+=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pUserData,&#32;&amp;chunkSizeDATA,&#32;8);
2175 &#32;&#32;&#32;&#32;}
2176 
2177 
2178 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Simple&#32;validation.&#32;*/</emphasis>
2179 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFormat-&gt;<link linkend="_structdrwav__data__format_1ac1973d5e81f2a89c01a67d8ed11c73f4">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(runningPos&#32;!=&#32;20&#32;+&#32;chunkSizeFMT&#32;+&#32;8)&#32;{
2181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2183 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(runningPos&#32;!=&#32;40&#32;+&#32;chunkSizeFMT&#32;+&#32;24)&#32;{
2185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2187 &#32;&#32;&#32;&#32;}
2188 &#32;&#32;&#32;&#32;
2189 
2190 
2191 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;some&#32;properties&#32;for&#32;the&#32;client&apos;s&#32;convenience.&#32;*/</emphasis>
2192 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;=&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1ac1973d5e81f2a89c01a67d8ed11c73f4">container</link>;
2193 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)pFormat-&gt;<link linkend="_structdrwav__data__format_1a13b31399c0f47c1742ee9cfa490d6729">channels</link>;
2194 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a6f3a893019f8b2b0bcc1939d48ae2da5">sampleRate</link>&#32;=&#32;pFormat-&gt;<link linkend="_structdrwav__data__format_1acce462278b2e0403af7fee1ff24312d9">sampleRate</link>;
2195 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)pFormat-&gt;<link linkend="_structdrwav__data__format_1a07f788b46635807997eedde130fdd034">bitsPerSample</link>;
2196 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1afacd6fbdb98898ede25250c9cacbcc35">drwav_uint16</link>)pFormat-&gt;<link linkend="_structdrwav__data__format_1abc2fcad3dcac30abe6f8a3d03591bb98">format</link>;
2197 
2198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
2199 }
2200 
2201 
2202 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af154c1718c4b54490fff0b34abb08ad5">drwav_init_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2203 {
2204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_write__internal(pWav,&#32;pFormat,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>,&#32;onWrite,&#32;onSeek,&#32;pUserData);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;DRWAV_FALSE&#32;=&#32;Not&#32;Sequential&#32;*/</emphasis>
2205 }
2206 
2207 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a62bf5823d0186115f7f5e8afcfdf5174">drwav_init_write_sequential</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2208 {
2209 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_init_write__internal(pWav,&#32;pFormat,&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>,&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;pUserData);&#32;&#32;&#32;<emphasis role="comment">/*&#32;DRWAV_TRUE&#32;=&#32;Sequential&#32;*/</emphasis>
2210 }
2211 
2212 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav)
2213 {
2214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2216 &#32;&#32;&#32;&#32;}
2217 
2218 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2219 <emphasis role="comment">&#32;&#32;&#32;&#32;If&#32;the&#32;drwav&#32;object&#32;was&#32;opened&#32;in&#32;write&#32;mode&#32;we&apos;ll&#32;need&#32;to&#32;finalize&#32;a&#32;few&#32;things:</emphasis>
2220 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Make&#32;sure&#32;the&#32;&quot;data&quot;&#32;chunk&#32;is&#32;aligned&#32;to&#32;16-bits&#32;for&#32;RIFF&#32;containers,&#32;or&#32;64&#32;bits&#32;for&#32;W64&#32;containers.</emphasis>
2221 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Set&#32;the&#32;size&#32;of&#32;the&#32;&quot;data&quot;&#32;chunk.</emphasis>
2222 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
2223 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;paddingSize&#32;=&#32;0;
2225 
2226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Validation&#32;for&#32;sequential&#32;mode.&#32;*/</emphasis>
2227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a6e048af649de76096464bef56315f190">isSequentialWrite</link>)&#32;{
2228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_assert(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>&#32;==&#32;pWav-&gt;<link linkend="_structdrwav_1a18f4fc049e3c11a30675289d74058522">dataChunkDataSizeTargetWrite</link>);
2229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2230 
2231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Padding.&#32;Do&#32;not&#32;adjust&#32;pWav-&gt;dataChunkDataSize&#32;-&#32;this&#32;should&#32;not&#32;include&#32;the&#32;padding.&#32;*/</emphasis>
2232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paddingSize&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>&#32;%&#32;2);
2234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paddingSize&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>)(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>&#32;%&#32;8);
2236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
2238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(paddingSize&#32;&gt;&#32;0)&#32;{
2239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;paddingData&#32;=&#32;0;
2240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;paddingData,&#32;paddingSize);
2241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2242 
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2244 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Chunk&#32;sizes.&#32;When&#32;using&#32;sequential&#32;mode,&#32;these&#32;will&#32;have&#32;been&#32;filled&#32;in&#32;at&#32;initialization&#32;time.&#32;We&#32;only&#32;need</emphasis>
2245 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;do&#32;this&#32;when&#32;using&#32;non-sequential&#32;mode.</emphasis>
2246 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>&#32;&amp;&amp;&#32;!pWav-&gt;<link linkend="_structdrwav_1a6e048af649de76096464bef56315f190">isSequentialWrite</link>)&#32;{
2248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a287fdd02d1fd755e827609b857141cbe">container</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a0d6b4071cf04dc3fb0d37bbd030c3993a93fde41937ed3d8f34e56e2a449754aa">drwav_container_riff</link>)&#32;{
2249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;&quot;RIFF&quot;&#32;chunk&#32;size.&#32;*/</emphasis>
2250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;4,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>))&#32;{
2251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;riffChunkSize&#32;=&#32;drwav_riff_chunk_size_riff(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>);
2252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;riffChunkSize,&#32;4);
2253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2254 
2255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;the&#32;&quot;data&quot;&#32;chunk&#32;size.&#32;*/</emphasis>
2256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;+&#32;4,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>))&#32;{
2257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;dataChunkSize&#32;=&#32;drwav_data_chunk_size_riff(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>);
2258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;dataChunkSize,&#32;4);
2259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;&quot;RIFF&quot;&#32;chunk&#32;size.&#32;*/</emphasis>
2262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;16,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>))&#32;{
2263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;riffChunkSize&#32;=&#32;drwav_riff_chunk_size_w64(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>);
2264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;riffChunkSize,&#32;8);
2265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2266 
2267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;&quot;data&quot;&#32;chunk&#32;size.&#32;*/</emphasis>
2268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>&#32;+&#32;16,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>))&#32;{
2269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;dataChunkSize&#32;=&#32;drwav_data_chunk_size_w64(pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>);
2270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;dataChunkSize,&#32;8);
2271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2274 &#32;&#32;&#32;&#32;}
2275 
2276 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
2277 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2278 <emphasis role="comment">&#32;&#32;&#32;&#32;If&#32;we&#32;opened&#32;the&#32;file&#32;with&#32;drwav_open_file()&#32;we&#32;will&#32;want&#32;to&#32;close&#32;the&#32;file&#32;handle.&#32;We&#32;can&#32;know&#32;whether&#32;or&#32;not&#32;drwav_open_file()</emphasis>
2279 <emphasis role="comment">&#32;&#32;&#32;&#32;was&#32;used&#32;by&#32;looking&#32;at&#32;the&#32;onRead&#32;and&#32;onSeek&#32;callbacks.</emphasis>
2280 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
2281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>&#32;==&#32;drwav__on_read_stdio&#32;||&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>&#32;==&#32;drwav__on_write_stdio)&#32;{
2282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose((FILE*)pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>);
2283 &#32;&#32;&#32;&#32;}
2284 <emphasis role="preprocessor">#endif</emphasis>
2285 }
2286 
2287 
2288 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6d76c703b97de35bc6e847ab1af03fc6">drwav_open</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2289 {
2290 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a20c7338eae3c9e19c060890903be1822">drwav_open_ex</link>(onRead,&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;pUserData,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
2291 }
2292 
2293 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a20c7338eae3c9e19c060890903be1822">drwav_open_ex</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6d14150af9f3e755d73e5a9ff8687a22">drwav_chunk_proc</link>&#32;onChunk,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pReadSeekUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
2294 {
2295 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>*&#32;pWav&#32;=&#32;(<link linkend="_structdrwav">drwav</link>*)<link linkend="__classes_2lib_2raudio_8c_1a1be4e74d531c17f7a9282e7218f93904">DRWAV_MALLOC</link>(<emphasis role="keyword">sizeof</emphasis>(*pWav));
2296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2298 &#32;&#32;&#32;&#32;}
2299 
2300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1afd87909668f84c27f3518a36a15246c4">drwav_init_ex</link>(pWav,&#32;onRead,&#32;onSeek,&#32;onChunk,&#32;pReadSeekUserData,&#32;pChunkUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>))&#32;{
2301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pWav);
2302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2303 &#32;&#32;&#32;&#32;}
2304 
2305 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pWav;
2306 }
2307 
2308 
2309 <link linkend="_structdrwav">drwav</link>*&#32;drwav_open_write__internal(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;isSequential,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2310 {
2311 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>*&#32;pWav&#32;=&#32;(<link linkend="_structdrwav">drwav</link>*)<link linkend="__classes_2lib_2raudio_8c_1a1be4e74d531c17f7a9282e7218f93904">DRWAV_MALLOC</link>(<emphasis role="keyword">sizeof</emphasis>(*pWav));
2312 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2314 &#32;&#32;&#32;&#32;}
2315 
2316 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav_init_write__internal(pWav,&#32;pFormat,&#32;totalSampleCount,&#32;isSequential,&#32;onWrite,&#32;onSeek,&#32;pUserData))&#32;{
2317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pWav);
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2319 &#32;&#32;&#32;&#32;}
2320 
2321 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pWav;
2322 }
2323 
2324 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2d21c087e120d2ae981691db3693d214">drwav_open_write</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2325 {
2326 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_open_write__internal(pFormat,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>,&#32;onWrite,&#32;onSeek,&#32;pUserData);
2327 }
2328 
2329 <link linkend="_structdrwav">drwav</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ad9d9db5d36fa5d16f2c21b7a59045a08">drwav_open_write_sequential</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrwav__data__format">drwav_data_format</link>*&#32;pFormat,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1abded69a687507b6572db8ce854891350">drwav_write_proc</link>&#32;onWrite,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2330 {
2331 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_open_write__internal(pFormat,&#32;totalSampleCount,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>,&#32;onWrite,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;pUserData);
2332 }
2333 
2334 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ad8bab60f34651ab3eeeba5fb602f538e">drwav_close</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav)
2335 {
2336 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
2337 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pWav);
2338 }
2339 
2340 
2341 <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a79c5b06f8f5c742e6a1ed5e3b3e36e28">drwav_read_raw</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut)
2342 {
2343 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2344 
2345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;bytesToRead&#32;==&#32;0&#32;||&#32;pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2347 &#32;&#32;&#32;&#32;}
2348 
2349 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>)&#32;{
2350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToRead&#32;=&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>;
2351 &#32;&#32;&#32;&#32;}
2352 
2353 &#32;&#32;&#32;&#32;bytesRead&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;pBufferOut,&#32;bytesToRead);
2354 
2355 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>&#32;-=&#32;bytesRead;
2356 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesRead;
2357 }
2358 
2359 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut)
2360 {
2361 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample;
2362 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2363 
2364 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;samplesToRead&#32;==&#32;0&#32;||&#32;pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2366 &#32;&#32;&#32;&#32;}
2367 
2368 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;use&#32;this&#32;function&#32;for&#32;compressed&#32;formats.&#32;*/</emphasis>
2369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__is_compressed_format_tag(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>))&#32;{
2370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2371 &#32;&#32;&#32;&#32;}
2372 
2373 &#32;&#32;&#32;&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
2374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
2375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2376 &#32;&#32;&#32;&#32;}
2377 
2378 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Don&apos;t&#32;try&#32;to&#32;read&#32;more&#32;samples&#32;than&#32;can&#32;potentially&#32;fit&#32;in&#32;the&#32;output&#32;buffer.&#32;*/</emphasis>
2379 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;*&#32;bytesPerSample&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
2380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;=&#32;DRWAV_SIZE_MAX&#32;/&#32;bytesPerSample;
2381 &#32;&#32;&#32;&#32;}
2382 
2383 &#32;&#32;&#32;&#32;bytesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a79c5b06f8f5c742e6a1ed5e3b3e36e28">drwav_read_raw</link>(pWav,&#32;(<emphasis role="keywordtype">size_t</emphasis>)(samplesToRead&#32;*&#32;bytesPerSample),&#32;pBufferOut);
2384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesRead&#32;/&#32;bytesPerSample;
2385 }
2386 
2387 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1affa63762e9f68edeb5b3b948741d101b">drwav_read_pcm_frames</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut)
2388 {
2389 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerFrame;
2390 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2391 
2392 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;framesToRead&#32;==&#32;0&#32;||&#32;pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2394 &#32;&#32;&#32;&#32;}
2395 
2396 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;use&#32;this&#32;function&#32;for&#32;compressed&#32;formats.&#32;*/</emphasis>
2397 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__is_compressed_format_tag(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>))&#32;{
2398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2399 &#32;&#32;&#32;&#32;}
2400 
2401 &#32;&#32;&#32;&#32;bytesPerFrame&#32;=&#32;drwav_get_bytes_per_pcm_frame(pWav);
2402 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerFrame&#32;==&#32;0)&#32;{
2403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2404 &#32;&#32;&#32;&#32;}
2405 
2406 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Don&apos;t&#32;try&#32;to&#32;read&#32;more&#32;samples&#32;than&#32;can&#32;potentially&#32;fit&#32;in&#32;the&#32;output&#32;buffer.&#32;*/</emphasis>
2407 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToRead&#32;*&#32;bytesPerFrame&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
2408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToRead&#32;=&#32;DRWAV_SIZE_MAX&#32;/&#32;bytesPerFrame;
2409 &#32;&#32;&#32;&#32;}
2410 
2411 &#32;&#32;&#32;&#32;bytesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a79c5b06f8f5c742e6a1ed5e3b3e36e28">drwav_read_raw</link>(pWav,&#32;(<emphasis role="keywordtype">size_t</emphasis>)(framesToRead&#32;*&#32;bytesPerFrame),&#32;pBufferOut);
2412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesRead&#32;/&#32;bytesPerFrame;
2413 }
2414 
2415 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;drwav_seek_to_first_pcm_frame(<link linkend="_structdrwav">drwav</link>*&#32;pWav)
2416 {
2417 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;No&#32;seeking&#32;in&#32;write&#32;mode.&#32;*/</emphasis>
2419 &#32;&#32;&#32;&#32;}
2420 
2421 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)pWav-&gt;<link linkend="_structdrwav_1ac072363918628b9c86f785ef6d88989c">dataChunkDataPos</link>,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8caab31d3894961ecc5e411e7b0b0ddca4d">drwav_seek_origin_start</link>))&#32;{
2422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2423 &#32;&#32;&#32;&#32;}
2424 
2425 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__is_compressed_format_tag(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>))&#32;{
2426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;=&#32;0;
2427 &#32;&#32;&#32;&#32;}
2428 &#32;&#32;&#32;&#32;
2429 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>;
2430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
2431 }
2432 
2433 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a837d7efc0bd768b2ff2a1fb98495c4fc">drwav_seek_to_sample</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="_structsample">sample</link>)
2434 {
2435 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Seeking&#32;should&#32;be&#32;compatible&#32;with&#32;wave&#32;files&#32;&gt;&#32;2GB.&#32;*/</emphasis>
2436 
2437 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;&#32;<emphasis role="comment">/*&#32;No&#32;seeking&#32;in&#32;write&#32;mode.&#32;*/</emphasis>
2439 &#32;&#32;&#32;&#32;}
2440 
2441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2443 &#32;&#32;&#32;&#32;}
2444 
2445 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;are&#32;no&#32;samples,&#32;just&#32;return&#32;DRWAV_TRUE&#32;without&#32;doing&#32;anything.&#32;*/</emphasis>
2446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>&#32;==&#32;0)&#32;{
2447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
2448 &#32;&#32;&#32;&#32;}
2449 
2450 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Make&#32;sure&#32;the&#32;sample&#32;is&#32;clamped.&#32;*/</emphasis>
2451 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&gt;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
2452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>&#32;-&#32;1;
2453 &#32;&#32;&#32;&#32;}
2454 
2455 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2456 <emphasis role="comment">&#32;&#32;&#32;&#32;For&#32;compressed&#32;formats&#32;we&#32;just&#32;use&#32;a&#32;slow&#32;generic&#32;seek.&#32;If&#32;we&#32;are&#32;seeking&#32;forward&#32;we&#32;just&#32;seek&#32;forward.&#32;If&#32;we&#32;are&#32;going&#32;backwards&#32;we&#32;need</emphasis>
2457 <emphasis role="comment">&#32;&#32;&#32;&#32;to&#32;seek&#32;back&#32;to&#32;the&#32;start.</emphasis>
2458 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
2459 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drwav__is_compressed_format_tag(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>))&#32;{
2460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;This&#32;can&#32;be&#32;optimized.&#32;*/</emphasis>
2461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
2462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2463 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;we&apos;re&#32;seeking&#32;forward&#32;it&apos;s&#32;simple&#32;-&#32;just&#32;keep&#32;reading&#32;samples&#32;until&#32;we&#32;hit&#32;the&#32;sample&#32;we&apos;re&#32;requesting.&#32;If&#32;we&apos;re&#32;seeking&#32;backwards,</emphasis>
2464 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;we&#32;first&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;the&#32;start&#32;and&#32;then&#32;just&#32;do&#32;the&#32;same&#32;thing&#32;as&#32;a&#32;forward&#32;seek.</emphasis>
2465 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sample&#32;&lt;&#32;pWav-&gt;compressed.iCurrentSample)&#32;{
2467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav_seek_to_first_pcm_frame(pWav))&#32;{
2468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2471 
2472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&gt;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>)&#32;{
2473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;<link linkend="_structsample">sample</link>&#32;-&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>;
2474 
2475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;devnull[2048];
2476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;0)&#32;{
2477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;0;
2478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
2479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;&gt;&#32;2048)&#32;{
2480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;=&#32;2048;
2481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2482 
2483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
2484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesRead&#32;=&#32;drwav_read_s16__msadpcm(pWav,&#32;samplesToRead,&#32;devnull);
2485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
2486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesRead&#32;=&#32;drwav_read_s16__ima(pWav,&#32;samplesToRead,&#32;devnull);
2487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;this&#32;assertion&#32;is&#32;triggered&#32;it&#32;means&#32;I&apos;ve&#32;implemented&#32;a&#32;new&#32;compressed&#32;format&#32;but&#32;forgot&#32;to&#32;add&#32;a&#32;branch&#32;for&#32;it&#32;here.&#32;*/</emphasis>
2489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2490 
2491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;!=&#32;samplesToRead)&#32;{
2492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2494 
2495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;samplesRead;
2496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2498 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSizeInBytes;
2500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;currentBytePos;
2501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;targetBytePos;
2502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
2503 
2504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSizeInBytes&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1ac8e8a1d641a939c0509bdb8a66756305">totalPCMFrameCount</link>&#32;*&#32;drwav_get_bytes_per_pcm_frame(pWav);
2505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_assert(totalSizeInBytes&#32;&gt;=&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>);
2506 
2507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentBytePos&#32;=&#32;totalSizeInBytes&#32;-&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>;
2508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetBytePos&#32;&#32;=&#32;<link linkend="_structsample">sample</link>&#32;*&#32;drwav_get_bytes_per_sample(pWav);
2509 
2510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentBytePos&#32;&lt;&#32;targetBytePos)&#32;{
2511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Offset&#32;forwards.&#32;*/</emphasis>
2512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;(targetBytePos&#32;-&#32;currentBytePos);
2513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Offset&#32;backwards.&#32;*/</emphasis>
2515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drwav_seek_to_first_pcm_frame(pWav))&#32;{
2516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;targetBytePos;
2519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2520 
2521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;0)&#32;{
2522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset32&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;INT_MAX)&#32;?&#32;INT_MAX&#32;:&#32;(int)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>);
2523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pWav-&gt;<link linkend="_structdrwav_1a71fa3abce7f96f79ba2e791fb97ed256">onSeek</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;offset32,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa0e83447af6f3534236fae01da003d8ca85a13e0d2d0131629ae390c288d056c4">drwav_seek_origin_current</link>))&#32;{
2524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a093e5fd35f7001af6febcc540825fb28">DRWAV_FALSE</link>;
2525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2526 
2527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1adbaabf47d5befd4198937bb6232fe2ad">bytesRemaining</link>&#32;-=&#32;offset32;
2528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;offset32;
2529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2530 &#32;&#32;&#32;&#32;}
2531 
2532 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab1dfb36a3381290850e5afd7eb9ec2ad">DRWAV_TRUE</link>;
2533 }
2534 
2535 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a3fba84bb8a4fd85639b88c686bd699e9">drwav_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa70cac2507023d65e733dad109a8d51a">drwav_seek_to_pcm_frame</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;targetFrameIndex)
2536 {
2537 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a837d7efc0bd768b2ff2a1fb98495c4fc">drwav_seek_to_sample</link>(pWav,&#32;targetFrameIndex&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>);
2538 }
2539 
2540 
2541 <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a571377c36190772e963f65986dbd6492">drwav_write_raw</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToWrite,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData)
2542 {
2543 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>;
2544 
2545 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;bytesToWrite&#32;==&#32;0&#32;||&#32;pData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2547 &#32;&#32;&#32;&#32;}
2548 
2549 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a1ca22d7ee1b573fe1d758e131f486e60">onWrite</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;pData,&#32;bytesToWrite);
2550 &#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a9b86f18b7e61119b7cb1508b1fa7ad81">dataChunkDataSize</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>;
2551 
2552 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>;
2553 }
2554 
2555 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a83cf34f9deb521dec55015b81da1fd88">drwav_write</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToWrite,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData)
2556 {
2557 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;bytesToWrite;
2558 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>;
2559 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pRunningData;
2560 
2561 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;samplesToWrite&#32;==&#32;0&#32;||&#32;pData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2563 &#32;&#32;&#32;&#32;}
2564 
2565 &#32;&#32;&#32;&#32;bytesToWrite&#32;=&#32;((samplesToWrite&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>)&#32;/&#32;8);
2566 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToWrite&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
2567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2568 &#32;&#32;&#32;&#32;}
2569 
2570 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>&#32;=&#32;0;
2571 &#32;&#32;&#32;&#32;pRunningData&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*)pData;
2572 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(bytesToWrite&#32;&gt;&#32;0)&#32;{
2573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesJustWritten;
2574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;bytesToWriteThisIteration&#32;=&#32;bytesToWrite;
2575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToWriteThisIteration&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
2576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToWriteThisIteration&#32;=&#32;DRWAV_SIZE_MAX;
2577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2578 
2579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesJustWritten&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a571377c36190772e963f65986dbd6492">drwav_write_raw</link>(pWav,&#32;(<emphasis role="keywordtype">size_t</emphasis>)bytesToWriteThisIteration,&#32;pRunningData);
2580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesJustWritten&#32;==&#32;0)&#32;{
2581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2583 
2584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToWrite&#32;-=&#32;bytesJustWritten;
2585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>&#32;+=&#32;bytesJustWritten;
2586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pRunningData&#32;+=&#32;bytesJustWritten;
2587 &#32;&#32;&#32;&#32;}
2588 
2589 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a36c2e355881c41a0e4173a8fdb729904">bytesWritten</link>&#32;*&#32;8)&#32;/&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>;
2590 }
2591 
2592 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1adc835c2612f87da65cea7c1b2ee20ca6">drwav_write_pcm_frames</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToWrite,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData)
2593 {
2594 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a83cf34f9deb521dec55015b81da1fd88">drwav_write</link>(pWav,&#32;framesToWrite&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>,&#32;pData)&#32;/&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
2595 }
2596 
2597 
2598 
2599 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__msadpcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
2600 {
2601 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead&#32;=&#32;0;
2602 
2603 &#32;&#32;&#32;&#32;drwav_assert(pWav&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2604 &#32;&#32;&#32;&#32;drwav_assert(samplesToRead&#32;&gt;&#32;0);
2605 &#32;&#32;&#32;&#32;drwav_assert(pBufferOut&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2606 
2607 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;Lots&#32;of&#32;room&#32;for&#32;optimization&#32;here.&#32;*/</emphasis>
2608 
2609 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;&lt;&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
2610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;are&#32;no&#32;cached&#32;samples&#32;we&#32;need&#32;to&#32;load&#32;a&#32;new&#32;block.&#32;*/</emphasis>
2611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;==&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;==&#32;0)&#32;{
2612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;==&#32;1)&#32;{
2613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono.&#32;*/</emphasis>
2614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;header[7];
2615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;header,&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;{
2616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;<emphasis role="keyword">sizeof</emphasis>(header);
2619 
2620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]&#32;=&#32;header[0];
2621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;drwav__bytes_to_s16(header&#32;+&#32;1);
2622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__bytes_to_s16(header&#32;+&#32;3);
2623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__bytes_to_s16(header&#32;+&#32;5);
2624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[2]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0];
2625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[3]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1];
2626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;2;
2627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo.&#32;*/</emphasis>
2629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;header[14];
2630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;header,&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;{
2631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;<emphasis role="keyword">sizeof</emphasis>(header);
2634 
2635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]&#32;=&#32;header[0];
2636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[1]&#32;=&#32;header[1];
2637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;drwav__bytes_to_s16(header&#32;+&#32;2);
2638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[1]&#32;=&#32;drwav__bytes_to_s16(header&#32;+&#32;4);
2639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__bytes_to_s16(header&#32;+&#32;6);
2640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__bytes_to_s16(header&#32;+&#32;8);
2641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__bytes_to_s16(header&#32;+&#32;10);
2642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__bytes_to_s16(header&#32;+&#32;12);
2643 
2644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[0]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0];
2645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[1]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][0];
2646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[2]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1];
2647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[3]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][1];
2648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;4;
2649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2651 
2652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Output&#32;anything&#32;that&apos;s&#32;cached.&#32;*/</emphasis>
2653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;&lt;&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
2654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>)pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>];
2655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;-=&#32;1;
2656 
2657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;+=&#32;1;
2658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;-=&#32;1;
2659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;1;
2660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;+=&#32;1;
2661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2662 
2663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;==&#32;0)&#32;{
2664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2666 
2667 
2668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2669 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;there&apos;s&#32;nothing&#32;left&#32;in&#32;the&#32;cache,&#32;just&#32;go&#32;ahead&#32;and&#32;load&#32;more.&#32;If&#32;there&apos;s&#32;nothing&#32;left&#32;to&#32;load&#32;in&#32;the&#32;current&#32;block&#32;we&#32;just&#32;continue&#32;to&#32;the&#32;next</emphasis>
2670 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loop&#32;iteration&#32;which&#32;will&#32;trigger&#32;the&#32;loading&#32;of&#32;a&#32;new&#32;block.</emphasis>
2671 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;==&#32;0)&#32;{
2673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;==&#32;0)&#32;{
2674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
2675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;adaptationTable[]&#32;=&#32;{&#32;
2677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;230,&#32;230,&#32;230,&#32;230,&#32;307,&#32;409,&#32;512,&#32;614,&#32;
2678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;768,&#32;614,&#32;512,&#32;409,&#32;307,&#32;230,&#32;230,&#32;230&#32;
2679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;coeff1Table[]&#32;=&#32;{&#32;256,&#32;512,&#32;0,&#32;192,&#32;240,&#32;460,&#32;&#32;392&#32;};
2681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;coeff2Table[]&#32;=&#32;{&#32;0,&#32;&#32;-256,&#32;0,&#32;64,&#32;&#32;0,&#32;&#32;-208,&#32;-232&#32;};
2682 
2683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;nibbles;
2684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;nibble0;
2685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;nibble1;
2686 
2687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;nibbles,&#32;1)&#32;!=&#32;1)&#32;{
2688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;-=&#32;1;
2691 
2692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;Optimize&#32;away&#32;these&#32;if&#32;statements.&#32;*/</emphasis>
2693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nibble0&#32;=&#32;((nibbles&#32;&amp;&#32;0xF0)&#32;&gt;&gt;&#32;4);&#32;<emphasis role="keywordflow">if</emphasis>&#32;((nibbles&#32;&amp;&#32;0x80))&#32;{&#32;nibble0&#32;|=&#32;0xFFFFFFF0UL;&#32;}
2694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nibble1&#32;=&#32;((nibbles&#32;&amp;&#32;0x0F)&#32;&gt;&gt;&#32;0);&#32;<emphasis role="keywordflow">if</emphasis>&#32;((nibbles&#32;&amp;&#32;0x08))&#32;{&#32;nibble1&#32;|=&#32;0xFFFFFFF0UL;&#32;}
2695 
2696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;==&#32;1)&#32;{
2697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono.&#32;*/</emphasis>
2698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;newSample0;
2699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;newSample1;
2700 
2701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample0&#32;&#32;=&#32;((pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;*&#32;coeff1Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]])&#32;+&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;*&#32;coeff2Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]]))&#32;&gt;&gt;&#32;8;
2702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample0&#32;+=&#32;nibble0&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0];
2703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample0&#32;&#32;=&#32;drwav_clamp(newSample0,&#32;-32768,&#32;32767);
2704 
2705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;(adaptationTable[((nibbles&#32;&amp;&#32;0xF0)&#32;&gt;&gt;&#32;4)]&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0])&#32;&gt;&gt;&#32;8;
2706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;&lt;&#32;16)&#32;{
2707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;16;
2708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2709 
2710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1];
2711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;=&#32;newSample0;
2712 
2713 
2714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample1&#32;&#32;=&#32;((pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;*&#32;coeff1Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]])&#32;+&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;*&#32;coeff2Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]]))&#32;&gt;&gt;&#32;8;
2715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample1&#32;+=&#32;nibble1&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0];
2716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample1&#32;&#32;=&#32;drwav_clamp(newSample1,&#32;-32768,&#32;32767);
2717 
2718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;(adaptationTable[((nibbles&#32;&amp;&#32;0x0F)&#32;&gt;&gt;&#32;0)]&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0])&#32;&gt;&gt;&#32;8;
2719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;&lt;&#32;16)&#32;{
2720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;16;
2721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2722 
2723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1];
2724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;=&#32;newSample1;
2725 
2726 
2727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[2]&#32;=&#32;newSample0;
2728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[3]&#32;=&#32;newSample1;
2729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;2;
2730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo.&#32;*/</emphasis>
2732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;newSample0;
2733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;newSample1;
2734 
2735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Left.&#32;*/</emphasis>
2736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample0&#32;&#32;=&#32;((pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;*&#32;coeff1Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]])&#32;+&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;*&#32;coeff2Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]]))&#32;&gt;&gt;&#32;8;
2737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample0&#32;+=&#32;nibble0&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0];
2738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample0&#32;&#32;=&#32;drwav_clamp(newSample0,&#32;-32768,&#32;32767);
2739 
2740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;(adaptationTable[((nibbles&#32;&amp;&#32;0xF0)&#32;&gt;&gt;&#32;4)]&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0])&#32;&gt;&gt;&#32;8;
2741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;&lt;&#32;16)&#32;{
2742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[0]&#32;=&#32;16;
2743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2744 
2745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][0]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1];
2746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[0][1]&#32;=&#32;newSample0;
2747 
2748 
2749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Right.&#32;*/</emphasis>
2750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample1&#32;&#32;=&#32;((pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][1]&#32;*&#32;coeff1Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[1]])&#32;+&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][0]&#32;*&#32;coeff2Table[pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[1]]))&#32;&gt;&gt;&#32;8;
2751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample1&#32;+=&#32;nibble1&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[1];
2752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSample1&#32;&#32;=&#32;drwav_clamp(newSample1,&#32;-32768,&#32;32767);
2753 
2754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[1]&#32;=&#32;(adaptationTable[((nibbles&#32;&amp;&#32;0x0F)&#32;&gt;&gt;&#32;0)]&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[1])&#32;&gt;&gt;&#32;8;
2755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[1]&#32;&lt;&#32;16)&#32;{
2756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a6b37897e3c7d52d65627b5c85bfbc2e5">delta</link>[1]&#32;=&#32;16;
2757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2758 
2759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][0]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][1];
2760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a5ce38ba220e7146ed43fef0ba4fb251d">prevSamples</link>[1][1]&#32;=&#32;newSample1;
2761 
2762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[2]&#32;=&#32;newSample0;
2763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[3]&#32;=&#32;newSample1;
2764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a04a9dd3201c9942e114010d5077e1427">msadpcm</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;2;
2765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2768 &#32;&#32;&#32;&#32;}
2769 
2770 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2771 }
2772 
2773 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__ima(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
2774 {
2775 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead&#32;=&#32;0;
2776 
2777 &#32;&#32;&#32;&#32;drwav_assert(pWav&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2778 &#32;&#32;&#32;&#32;drwav_assert(samplesToRead&#32;&gt;&#32;0);
2779 &#32;&#32;&#32;&#32;drwav_assert(pBufferOut&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2780 
2781 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;Lots&#32;of&#32;room&#32;for&#32;optimization&#32;here.&#32;*/</emphasis>
2782 
2783 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;&lt;&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
2784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;are&#32;no&#32;cached&#32;samples&#32;we&#32;need&#32;to&#32;load&#32;a&#32;new&#32;block.&#32;*/</emphasis>
2785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;==&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;==&#32;0)&#32;{
2786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;==&#32;1)&#32;{
2787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono.&#32;*/</emphasis>
2788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;header[4];
2789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;header,&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;{
2790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;<emphasis role="keyword">sizeof</emphasis>(header);
2793 
2794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]&#32;=&#32;drwav__bytes_to_s16(header&#32;+&#32;0);
2795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[0]&#32;=&#32;header[2];
2796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;1]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0];
2797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;1;
2798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo.&#32;*/</emphasis>
2800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;header[8];
2801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;header,&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>(header))&#32;{
2802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a85813f6f6280c2b79abff00aa332e78a">fmt</link>.<link linkend="_structdrwav__fmt_1acecf247591929bbcab48edf897b336eb">blockAlign</link>&#32;-&#32;<emphasis role="keyword">sizeof</emphasis>(header);
2805 
2806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0]&#32;=&#32;drwav__bytes_to_s16(header&#32;+&#32;0);
2807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[0]&#32;=&#32;header[2];
2808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[1]&#32;=&#32;drwav__bytes_to_s16(header&#32;+&#32;4);
2809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[1]&#32;=&#32;header[6];
2810 
2811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;2]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[0];
2812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;1]&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[1];
2813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;2;
2814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2816 
2817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Output&#32;anything&#32;that&apos;s&#32;cached.&#32;*/</emphasis>
2818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;&lt;&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
2819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>)pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>];
2820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;-=&#32;1;
2821 
2822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;+=&#32;1;
2823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;-=&#32;1;
2824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;1;
2825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a561e65ffe27549cae34ac4d562a66715">compressed</link>.<link linkend="_structdrwav_1ac6a9019450bff0c51b1005a4727a8044">iCurrentSample</link>&#32;+=&#32;1;
2826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2827 
2828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;==&#32;0)&#32;{
2829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2831 
2832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2833 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;there&apos;s&#32;nothing&#32;left&#32;in&#32;the&#32;cache,&#32;just&#32;go&#32;ahead&#32;and&#32;load&#32;more.&#32;If&#32;there&apos;s&#32;nothing&#32;left&#32;to&#32;load&#32;in&#32;the&#32;current&#32;block&#32;we&#32;just&#32;continue&#32;to&#32;the&#32;next</emphasis>
2834 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loop&#32;iteration&#32;which&#32;will&#32;trigger&#32;the&#32;loading&#32;of&#32;a&#32;new&#32;block.</emphasis>
2835 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;==&#32;0)&#32;{
2837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;==&#32;0)&#32;{
2838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
2839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;indexTable[16]&#32;=&#32;{
2841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;2,&#32;4,&#32;6,&#32;8,
2842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;2,&#32;4,&#32;6,&#32;8
2843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2844 
2845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;stepTable[89]&#32;=&#32;{&#32;
2846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;7,&#32;&#32;&#32;&#32;&#32;8,&#32;&#32;&#32;&#32;&#32;9,&#32;&#32;&#32;&#32;&#32;10,&#32;&#32;&#32;&#32;11,&#32;&#32;&#32;&#32;12,&#32;&#32;&#32;&#32;13,&#32;&#32;&#32;&#32;14,&#32;&#32;&#32;&#32;16,&#32;&#32;&#32;&#32;17,&#32;
2847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;19,&#32;&#32;&#32;&#32;21,&#32;&#32;&#32;&#32;23,&#32;&#32;&#32;&#32;25,&#32;&#32;&#32;&#32;28,&#32;&#32;&#32;&#32;31,&#32;&#32;&#32;&#32;34,&#32;&#32;&#32;&#32;37,&#32;&#32;&#32;&#32;41,&#32;&#32;&#32;&#32;45,&#32;
2848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;50,&#32;&#32;&#32;&#32;55,&#32;&#32;&#32;&#32;60,&#32;&#32;&#32;&#32;66,&#32;&#32;&#32;&#32;73,&#32;&#32;&#32;&#32;80,&#32;&#32;&#32;&#32;88,&#32;&#32;&#32;&#32;97,&#32;&#32;&#32;&#32;107,&#32;&#32;&#32;118,&#32;
2849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;130,&#32;&#32;&#32;143,&#32;&#32;&#32;157,&#32;&#32;&#32;173,&#32;&#32;&#32;190,&#32;&#32;&#32;209,&#32;&#32;&#32;230,&#32;&#32;&#32;253,&#32;&#32;&#32;279,&#32;&#32;&#32;307,
2850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;337,&#32;&#32;&#32;371,&#32;&#32;&#32;408,&#32;&#32;&#32;449,&#32;&#32;&#32;494,&#32;&#32;&#32;544,&#32;&#32;&#32;598,&#32;&#32;&#32;658,&#32;&#32;&#32;724,&#32;&#32;&#32;796,
2851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;876,&#32;&#32;&#32;963,&#32;&#32;&#32;1060,&#32;&#32;1166,&#32;&#32;1282,&#32;&#32;1411,&#32;&#32;1552,&#32;&#32;1707,&#32;&#32;1878,&#32;&#32;2066,&#32;
2852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2272,&#32;&#32;2499,&#32;&#32;2749,&#32;&#32;3024,&#32;&#32;3327,&#32;&#32;3660,&#32;&#32;4026,&#32;&#32;4428,&#32;&#32;4871,&#32;&#32;5358,
2853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5894,&#32;&#32;6484,&#32;&#32;7132,&#32;&#32;7845,&#32;&#32;8630,&#32;&#32;9493,&#32;&#32;10442,&#32;11487,&#32;12635,&#32;13899,&#32;
2854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;15289,&#32;16818,&#32;18500,&#32;20350,&#32;22385,&#32;24623,&#32;27086,&#32;29794,&#32;32767&#32;
2855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2856 
2857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;iChannel;
2858 
2859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2860 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;From&#32;what&#32;I&#32;can&#32;tell&#32;with&#32;stereo&#32;streams,&#32;it&#32;looks&#32;like&#32;every&#32;4&#32;bytes&#32;(8&#32;samples)&#32;is&#32;for&#32;one&#32;channel.&#32;So&#32;it&#32;goes&#32;4&#32;bytes&#32;for&#32;the</emphasis>
2861 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;channel,&#32;4&#32;bytes&#32;for&#32;the&#32;right&#32;channel.</emphasis>
2862 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>&#32;=&#32;8&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
2864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iChannel&#32;=&#32;0;&#32;iChannel&#32;&lt;&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;&#32;++iChannel)&#32;{
2865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;iByte;
2866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;nibbles[4];
2867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1ab08d1b37037df5b2af88cc549d93b550">onRead</link>(pWav-&gt;<link linkend="_structdrwav_1a518c37f79f3eccd90bc9f4102f475729">pUserData</link>,&#32;&amp;nibbles,&#32;4)&#32;!=&#32;4)&#32;{
2868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aaf8734451359d42f35c98914dea4f8a2">bytesRemainingInBlock</link>&#32;-=&#32;4;
2871 
2872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iByte&#32;=&#32;0;&#32;iByte&#32;&lt;&#32;4;&#32;++iByte)&#32;{
2873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;nibble0&#32;=&#32;((nibbles[iByte]&#32;&amp;&#32;0x0F)&#32;&gt;&gt;&#32;0);
2874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;nibble1&#32;=&#32;((nibbles[iByte]&#32;&amp;&#32;0xF0)&#32;&gt;&gt;&#32;4);
2875 
2876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;stepTable[pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[iChannel]];
2877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;predictor&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[iChannel];
2878 
2879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;&#32;&#32;&#32;&#32;&#32;diff&#32;&#32;=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&gt;&gt;&#32;3;
2880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble0&#32;&amp;&#32;1)&#32;diff&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&gt;&gt;&#32;2;
2881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble0&#32;&amp;&#32;2)&#32;diff&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&gt;&gt;&#32;1;
2882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble0&#32;&amp;&#32;4)&#32;diff&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
2883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble0&#32;&amp;&#32;8)&#32;diff&#32;&#32;=&#32;-diff;
2884 
2885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;predictor&#32;=&#32;drwav_clamp(predictor&#32;+&#32;diff,&#32;-32768,&#32;32767);
2886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[iChannel]&#32;=&#32;predictor;
2887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[iChannel]&#32;=&#32;drwav_clamp(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[iChannel]&#32;+&#32;indexTable[nibble0],&#32;0,&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav_countof(stepTable)-1);
2888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[(drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>)&#32;+&#32;(iByte*2+0)*pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;+&#32;iChannel]&#32;=&#32;predictor;
2889 
2890 
2891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;stepTable[pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[iChannel]];
2892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;predictor&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[iChannel];
2893 
2894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diff&#32;&#32;=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&gt;&gt;&#32;3;
2895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble1&#32;&amp;&#32;1)&#32;diff&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&gt;&gt;&#32;2;
2896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble1&#32;&amp;&#32;2)&#32;diff&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;&gt;&gt;&#32;1;
2897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble1&#32;&amp;&#32;4)&#32;diff&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
2898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nibble1&#32;&amp;&#32;8)&#32;diff&#32;&#32;=&#32;-diff;
2899 
2900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;predictor&#32;=&#32;drwav_clamp(predictor&#32;+&#32;diff,&#32;-32768,&#32;32767);
2901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a1c314262c91a4b280661684d08755b7f">predictor</link>[iChannel]&#32;=&#32;predictor;
2902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[iChannel]&#32;=&#32;drwav_clamp(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a491db831247a149690a5d994f7933a99">stepIndex</link>[iChannel]&#32;+&#32;indexTable[nibble1],&#32;0,&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav_countof(stepTable)-1);
2903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>[(drwav_countof(pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1aea16d23fa487594b6f24d6622d0deb85">cachedSamples</link>)&#32;-&#32;pWav-&gt;<link linkend="_structdrwav_1a03f25e638714ed523edd5615535d8462">ima</link>.<link linkend="_structdrwav_1a045269b5432800ab6bc0c2185d3897b7">cachedSampleCount</link>)&#32;+&#32;(iByte*2+1)*pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>&#32;+&#32;iChannel]&#32;=&#32;predictor;
2904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2908 &#32;&#32;&#32;&#32;}
2909 
2910 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
2911 }
2912 
2913 
2914 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_CONVERSION_API</emphasis>
2915 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;g_drwavAlawTable[256]&#32;=&#32;{
2916 &#32;&#32;&#32;&#32;0xEA80,&#32;0xEB80,&#32;0xE880,&#32;0xE980,&#32;0xEE80,&#32;0xEF80,&#32;0xEC80,&#32;0xED80,&#32;0xE280,&#32;0xE380,&#32;0xE080,&#32;0xE180,&#32;0xE680,&#32;0xE780,&#32;0xE480,&#32;0xE580,&#32;
2917 &#32;&#32;&#32;&#32;0xF540,&#32;0xF5C0,&#32;0xF440,&#32;0xF4C0,&#32;0xF740,&#32;0xF7C0,&#32;0xF640,&#32;0xF6C0,&#32;0xF140,&#32;0xF1C0,&#32;0xF040,&#32;0xF0C0,&#32;0xF340,&#32;0xF3C0,&#32;0xF240,&#32;0xF2C0,&#32;
2918 &#32;&#32;&#32;&#32;0xAA00,&#32;0xAE00,&#32;0xA200,&#32;0xA600,&#32;0xBA00,&#32;0xBE00,&#32;0xB200,&#32;0xB600,&#32;0x8A00,&#32;0x8E00,&#32;0x8200,&#32;0x8600,&#32;0x9A00,&#32;0x9E00,&#32;0x9200,&#32;0x9600,&#32;
2919 &#32;&#32;&#32;&#32;0xD500,&#32;0xD700,&#32;0xD100,&#32;0xD300,&#32;0xDD00,&#32;0xDF00,&#32;0xD900,&#32;0xDB00,&#32;0xC500,&#32;0xC700,&#32;0xC100,&#32;0xC300,&#32;0xCD00,&#32;0xCF00,&#32;0xC900,&#32;0xCB00,&#32;
2920 &#32;&#32;&#32;&#32;0xFEA8,&#32;0xFEB8,&#32;0xFE88,&#32;0xFE98,&#32;0xFEE8,&#32;0xFEF8,&#32;0xFEC8,&#32;0xFED8,&#32;0xFE28,&#32;0xFE38,&#32;0xFE08,&#32;0xFE18,&#32;0xFE68,&#32;0xFE78,&#32;0xFE48,&#32;0xFE58,&#32;
2921 &#32;&#32;&#32;&#32;0xFFA8,&#32;0xFFB8,&#32;0xFF88,&#32;0xFF98,&#32;0xFFE8,&#32;0xFFF8,&#32;0xFFC8,&#32;0xFFD8,&#32;0xFF28,&#32;0xFF38,&#32;0xFF08,&#32;0xFF18,&#32;0xFF68,&#32;0xFF78,&#32;0xFF48,&#32;0xFF58,&#32;
2922 &#32;&#32;&#32;&#32;0xFAA0,&#32;0xFAE0,&#32;0xFA20,&#32;0xFA60,&#32;0xFBA0,&#32;0xFBE0,&#32;0xFB20,&#32;0xFB60,&#32;0xF8A0,&#32;0xF8E0,&#32;0xF820,&#32;0xF860,&#32;0xF9A0,&#32;0xF9E0,&#32;0xF920,&#32;0xF960,&#32;
2923 &#32;&#32;&#32;&#32;0xFD50,&#32;0xFD70,&#32;0xFD10,&#32;0xFD30,&#32;0xFDD0,&#32;0xFDF0,&#32;0xFD90,&#32;0xFDB0,&#32;0xFC50,&#32;0xFC70,&#32;0xFC10,&#32;0xFC30,&#32;0xFCD0,&#32;0xFCF0,&#32;0xFC90,&#32;0xFCB0,&#32;
2924 &#32;&#32;&#32;&#32;0x1580,&#32;0x1480,&#32;0x1780,&#32;0x1680,&#32;0x1180,&#32;0x1080,&#32;0x1380,&#32;0x1280,&#32;0x1D80,&#32;0x1C80,&#32;0x1F80,&#32;0x1E80,&#32;0x1980,&#32;0x1880,&#32;0x1B80,&#32;0x1A80,&#32;
2925 &#32;&#32;&#32;&#32;0x0AC0,&#32;0x0A40,&#32;0x0BC0,&#32;0x0B40,&#32;0x08C0,&#32;0x0840,&#32;0x09C0,&#32;0x0940,&#32;0x0EC0,&#32;0x0E40,&#32;0x0FC0,&#32;0x0F40,&#32;0x0CC0,&#32;0x0C40,&#32;0x0DC0,&#32;0x0D40,&#32;
2926 &#32;&#32;&#32;&#32;0x5600,&#32;0x5200,&#32;0x5E00,&#32;0x5A00,&#32;0x4600,&#32;0x4200,&#32;0x4E00,&#32;0x4A00,&#32;0x7600,&#32;0x7200,&#32;0x7E00,&#32;0x7A00,&#32;0x6600,&#32;0x6200,&#32;0x6E00,&#32;0x6A00,&#32;
2927 &#32;&#32;&#32;&#32;0x2B00,&#32;0x2900,&#32;0x2F00,&#32;0x2D00,&#32;0x2300,&#32;0x2100,&#32;0x2700,&#32;0x2500,&#32;0x3B00,&#32;0x3900,&#32;0x3F00,&#32;0x3D00,&#32;0x3300,&#32;0x3100,&#32;0x3700,&#32;0x3500,&#32;
2928 &#32;&#32;&#32;&#32;0x0158,&#32;0x0148,&#32;0x0178,&#32;0x0168,&#32;0x0118,&#32;0x0108,&#32;0x0138,&#32;0x0128,&#32;0x01D8,&#32;0x01C8,&#32;0x01F8,&#32;0x01E8,&#32;0x0198,&#32;0x0188,&#32;0x01B8,&#32;0x01A8,&#32;
2929 &#32;&#32;&#32;&#32;0x0058,&#32;0x0048,&#32;0x0078,&#32;0x0068,&#32;0x0018,&#32;0x0008,&#32;0x0038,&#32;0x0028,&#32;0x00D8,&#32;0x00C8,&#32;0x00F8,&#32;0x00E8,&#32;0x0098,&#32;0x0088,&#32;0x00B8,&#32;0x00A8,&#32;
2930 &#32;&#32;&#32;&#32;0x0560,&#32;0x0520,&#32;0x05E0,&#32;0x05A0,&#32;0x0460,&#32;0x0420,&#32;0x04E0,&#32;0x04A0,&#32;0x0760,&#32;0x0720,&#32;0x07E0,&#32;0x07A0,&#32;0x0660,&#32;0x0620,&#32;0x06E0,&#32;0x06A0,&#32;
2931 &#32;&#32;&#32;&#32;0x02B0,&#32;0x0290,&#32;0x02F0,&#32;0x02D0,&#32;0x0230,&#32;0x0210,&#32;0x0270,&#32;0x0250,&#32;0x03B0,&#32;0x0390,&#32;0x03F0,&#32;0x03D0,&#32;0x0330,&#32;0x0310,&#32;0x0370,&#32;0x0350
2932 };
2933 
2934 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;g_drwavMulawTable[256]&#32;=&#32;{
2935 &#32;&#32;&#32;&#32;0x8284,&#32;0x8684,&#32;0x8A84,&#32;0x8E84,&#32;0x9284,&#32;0x9684,&#32;0x9A84,&#32;0x9E84,&#32;0xA284,&#32;0xA684,&#32;0xAA84,&#32;0xAE84,&#32;0xB284,&#32;0xB684,&#32;0xBA84,&#32;0xBE84,&#32;
2936 &#32;&#32;&#32;&#32;0xC184,&#32;0xC384,&#32;0xC584,&#32;0xC784,&#32;0xC984,&#32;0xCB84,&#32;0xCD84,&#32;0xCF84,&#32;0xD184,&#32;0xD384,&#32;0xD584,&#32;0xD784,&#32;0xD984,&#32;0xDB84,&#32;0xDD84,&#32;0xDF84,&#32;
2937 &#32;&#32;&#32;&#32;0xE104,&#32;0xE204,&#32;0xE304,&#32;0xE404,&#32;0xE504,&#32;0xE604,&#32;0xE704,&#32;0xE804,&#32;0xE904,&#32;0xEA04,&#32;0xEB04,&#32;0xEC04,&#32;0xED04,&#32;0xEE04,&#32;0xEF04,&#32;0xF004,&#32;
2938 &#32;&#32;&#32;&#32;0xF0C4,&#32;0xF144,&#32;0xF1C4,&#32;0xF244,&#32;0xF2C4,&#32;0xF344,&#32;0xF3C4,&#32;0xF444,&#32;0xF4C4,&#32;0xF544,&#32;0xF5C4,&#32;0xF644,&#32;0xF6C4,&#32;0xF744,&#32;0xF7C4,&#32;0xF844,&#32;
2939 &#32;&#32;&#32;&#32;0xF8A4,&#32;0xF8E4,&#32;0xF924,&#32;0xF964,&#32;0xF9A4,&#32;0xF9E4,&#32;0xFA24,&#32;0xFA64,&#32;0xFAA4,&#32;0xFAE4,&#32;0xFB24,&#32;0xFB64,&#32;0xFBA4,&#32;0xFBE4,&#32;0xFC24,&#32;0xFC64,&#32;
2940 &#32;&#32;&#32;&#32;0xFC94,&#32;0xFCB4,&#32;0xFCD4,&#32;0xFCF4,&#32;0xFD14,&#32;0xFD34,&#32;0xFD54,&#32;0xFD74,&#32;0xFD94,&#32;0xFDB4,&#32;0xFDD4,&#32;0xFDF4,&#32;0xFE14,&#32;0xFE34,&#32;0xFE54,&#32;0xFE74,&#32;
2941 &#32;&#32;&#32;&#32;0xFE8C,&#32;0xFE9C,&#32;0xFEAC,&#32;0xFEBC,&#32;0xFECC,&#32;0xFEDC,&#32;0xFEEC,&#32;0xFEFC,&#32;0xFF0C,&#32;0xFF1C,&#32;0xFF2C,&#32;0xFF3C,&#32;0xFF4C,&#32;0xFF5C,&#32;0xFF6C,&#32;0xFF7C,&#32;
2942 &#32;&#32;&#32;&#32;0xFF88,&#32;0xFF90,&#32;0xFF98,&#32;0xFFA0,&#32;0xFFA8,&#32;0xFFB0,&#32;0xFFB8,&#32;0xFFC0,&#32;0xFFC8,&#32;0xFFD0,&#32;0xFFD8,&#32;0xFFE0,&#32;0xFFE8,&#32;0xFFF0,&#32;0xFFF8,&#32;0x0000,&#32;
2943 &#32;&#32;&#32;&#32;0x7D7C,&#32;0x797C,&#32;0x757C,&#32;0x717C,&#32;0x6D7C,&#32;0x697C,&#32;0x657C,&#32;0x617C,&#32;0x5D7C,&#32;0x597C,&#32;0x557C,&#32;0x517C,&#32;0x4D7C,&#32;0x497C,&#32;0x457C,&#32;0x417C,&#32;
2944 &#32;&#32;&#32;&#32;0x3E7C,&#32;0x3C7C,&#32;0x3A7C,&#32;0x387C,&#32;0x367C,&#32;0x347C,&#32;0x327C,&#32;0x307C,&#32;0x2E7C,&#32;0x2C7C,&#32;0x2A7C,&#32;0x287C,&#32;0x267C,&#32;0x247C,&#32;0x227C,&#32;0x207C,&#32;
2945 &#32;&#32;&#32;&#32;0x1EFC,&#32;0x1DFC,&#32;0x1CFC,&#32;0x1BFC,&#32;0x1AFC,&#32;0x19FC,&#32;0x18FC,&#32;0x17FC,&#32;0x16FC,&#32;0x15FC,&#32;0x14FC,&#32;0x13FC,&#32;0x12FC,&#32;0x11FC,&#32;0x10FC,&#32;0x0FFC,&#32;
2946 &#32;&#32;&#32;&#32;0x0F3C,&#32;0x0EBC,&#32;0x0E3C,&#32;0x0DBC,&#32;0x0D3C,&#32;0x0CBC,&#32;0x0C3C,&#32;0x0BBC,&#32;0x0B3C,&#32;0x0ABC,&#32;0x0A3C,&#32;0x09BC,&#32;0x093C,&#32;0x08BC,&#32;0x083C,&#32;0x07BC,&#32;
2947 &#32;&#32;&#32;&#32;0x075C,&#32;0x071C,&#32;0x06DC,&#32;0x069C,&#32;0x065C,&#32;0x061C,&#32;0x05DC,&#32;0x059C,&#32;0x055C,&#32;0x051C,&#32;0x04DC,&#32;0x049C,&#32;0x045C,&#32;0x041C,&#32;0x03DC,&#32;0x039C,&#32;
2948 &#32;&#32;&#32;&#32;0x036C,&#32;0x034C,&#32;0x032C,&#32;0x030C,&#32;0x02EC,&#32;0x02CC,&#32;0x02AC,&#32;0x028C,&#32;0x026C,&#32;0x024C,&#32;0x022C,&#32;0x020C,&#32;0x01EC,&#32;0x01CC,&#32;0x01AC,&#32;0x018C,&#32;
2949 &#32;&#32;&#32;&#32;0x0174,&#32;0x0164,&#32;0x0154,&#32;0x0144,&#32;0x0134,&#32;0x0124,&#32;0x0114,&#32;0x0104,&#32;0x00F4,&#32;0x00E4,&#32;0x00D4,&#32;0x00C4,&#32;0x00B4,&#32;0x00A4,&#32;0x0094,&#32;0x0084,&#32;
2950 &#32;&#32;&#32;&#32;0x0078,&#32;0x0070,&#32;0x0068,&#32;0x0060,&#32;0x0058,&#32;0x0050,&#32;0x0048,&#32;0x0040,&#32;0x0038,&#32;0x0030,&#32;0x0028,&#32;0x0020,&#32;0x0018,&#32;0x0010,&#32;0x0008,&#32;0x0000
2951 };
2952 
2953 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;drwav__alaw_to_s16(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;sampleIn)
2954 {
2955 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">short</emphasis>)g_drwavAlawTable[sampleIn];
2956 }
2957 
2958 <emphasis role="keyword">static</emphasis>&#32;DRWAV_INLINE&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;drwav__mulaw_to_s16(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>&#32;sampleIn)
2959 {
2960 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">short</emphasis>)g_drwavMulawTable[sampleIn];
2961 }
2962 
2963 
2964 
2965 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__pcm_to_s16(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;totalSampleCount,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesPerSample)
2966 {
2967 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
2968 
2969 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Special&#32;case&#32;for&#32;8-bit&#32;sample&#32;data&#32;because&#32;it&apos;s&#32;treated&#32;as&#32;unsigned.&#32;*/</emphasis>
2970 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;1)&#32;{
2971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad1e34dde45f7a2d05672ed41e5521d80">drwav_u8_to_s16</link>(pOut,&#32;pIn,&#32;totalSampleCount);
2972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2973 &#32;&#32;&#32;&#32;}
2974 
2975 
2976 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Slightly&#32;more&#32;optimal&#32;implementation&#32;for&#32;common&#32;formats.&#32;*/</emphasis>
2977 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;2)&#32;{
2978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;totalSampleCount;&#32;++i)&#32;{
2979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;((<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*)pIn)[i];
2980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2982 &#32;&#32;&#32;&#32;}
2983 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;3)&#32;{
2984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af86c7957c9a4d3d56668ccca558ea7fd">drwav_s24_to_s16</link>(pOut,&#32;pIn,&#32;totalSampleCount);
2985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2986 &#32;&#32;&#32;&#32;}
2987 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;4)&#32;{
2988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a034dd2873664148ff69483d27a2ba39b">drwav_s32_to_s16</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*)pIn,&#32;totalSampleCount);
2989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2990 &#32;&#32;&#32;&#32;}
2991 
2992 
2993 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Anything&#32;more&#32;than&#32;64&#32;bits&#32;per&#32;sample&#32;is&#32;not&#32;supported.&#32;*/</emphasis>
2994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;&gt;&#32;8)&#32;{
2995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_zero_memory(pOut,&#32;totalSampleCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*pOut));
2996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2997 &#32;&#32;&#32;&#32;}
2998 
2999 
3000 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generic,&#32;slow&#32;converter.&#32;*/</emphasis>
3001 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;totalSampleCount;&#32;++i)&#32;{
3002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;0;
3003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;shift&#32;&#32;=&#32;(8&#32;-&#32;bytesPerSample)&#32;*&#32;8;
3004 
3005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
3006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;bytesPerSample&#32;&amp;&amp;&#32;j&#32;&lt;&#32;8;&#32;j&#32;+=&#32;1)&#32;{
3007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;|=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)(pIn[j])&#32;&lt;&lt;&#32;shift;
3008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift&#32;&#32;+=&#32;8;
3009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3010 
3011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pIn&#32;+=&#32;j;
3012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>)((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac99c9056e44b9c212511a49380d3c666">drwav_int64</link>)<link linkend="_structsample">sample</link>&#32;&gt;&gt;&#32;48);
3013 &#32;&#32;&#32;&#32;}
3014 }
3015 
3016 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__ieee_to_s16(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;totalSampleCount,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesPerSample)
3017 {
3018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;4)&#32;{
3019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a071c19178e72559fc0803526143d752c">drwav_f32_to_s16</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*)pIn,&#32;totalSampleCount);
3020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3021 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;8)&#32;{
3022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a36329c77460fe262e6be3d435dc5dc93">drwav_f64_to_s16</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*)pIn,&#32;totalSampleCount);
3023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3024 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;supporting&#32;32-&#32;and&#32;64-bit&#32;float.&#32;Output&#32;silence&#32;in&#32;all&#32;other&#32;cases.&#32;Contributions&#32;welcome&#32;for&#32;16-bit&#32;float.&#32;*/</emphasis>
3026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_zero_memory(pOut,&#32;totalSampleCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*pOut));
3027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3028 &#32;&#32;&#32;&#32;}
3029 }
3030 
3031 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__pcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
3032 {
3033 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample;
3034 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3035 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3036 
3037 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fast&#32;path.&#32;*/</emphasis>
3038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8804aa8b2267e5d0a5ebf433dbf433e3">DR_WAVE_FORMAT_PCM</link>&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;==&#32;16)&#32;{
3039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;samplesToRead,&#32;pBufferOut);
3040 &#32;&#32;&#32;&#32;}
3041 &#32;&#32;&#32;&#32;
3042 &#32;&#32;&#32;&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3043 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3045 &#32;&#32;&#32;&#32;}
3046 
3047 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3048 &#32;&#32;&#32;&#32;
3049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3054 
3055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__pcm_to_s16(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead,&#32;bytesPerSample);
3056 
3057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3060 &#32;&#32;&#32;&#32;}
3061 
3062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3063 }
3064 
3065 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__ieee(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
3066 {
3067 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3068 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3069 
3070 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3073 &#32;&#32;&#32;&#32;}
3074 
3075 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3076 &#32;&#32;&#32;&#32;
3077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3082 
3083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__ieee_to_s16(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead,&#32;bytesPerSample);
3084 
3085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3088 &#32;&#32;&#32;&#32;}
3089 
3090 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3091 }
3092 
3093 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__alaw(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
3094 {
3095 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3096 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3097 
3098 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3101 &#32;&#32;&#32;&#32;}
3102 
3103 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3104 &#32;&#32;&#32;&#32;
3105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3110 
3111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3eb2e9f6710a6236368790014eb79c1">drwav_alaw_to_s16</link>(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);
3112 
3113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3116 &#32;&#32;&#32;&#32;}
3117 
3118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3119 }
3120 
3121 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s16__mulaw(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
3122 {
3123 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3125 
3126 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3129 &#32;&#32;&#32;&#32;}
3130 
3131 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3132 
3133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3138 
3139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa73c89d2d43b0ef8efeac0c7ebbe4faa">drwav_mulaw_to_s16</link>(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);
3140 
3141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3144 &#32;&#32;&#32;&#32;}
3145 
3146 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3147 }
3148 
3149 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
3150 {
3151 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;samplesToRead&#32;==&#32;0&#32;||&#32;pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3153 &#32;&#32;&#32;&#32;}
3154 
3155 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Don&apos;t&#32;try&#32;to&#32;read&#32;more&#32;samples&#32;than&#32;can&#32;potentially&#32;fit&#32;in&#32;the&#32;output&#32;buffer.&#32;*/</emphasis>
3156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>)&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
3157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;=&#32;DRWAV_SIZE_MAX&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>);
3158 &#32;&#32;&#32;&#32;}
3159 
3160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8804aa8b2267e5d0a5ebf433dbf433e3">DR_WAVE_FORMAT_PCM</link>)&#32;{
3161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s16__pcm(pWav,&#32;samplesToRead,&#32;pBufferOut);
3162 &#32;&#32;&#32;&#32;}
3163 
3164 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
3165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s16__msadpcm(pWav,&#32;samplesToRead,&#32;pBufferOut);
3166 &#32;&#32;&#32;&#32;}
3167 
3168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ade52a22af3dde8fa637e7258fc3c34a4">DR_WAVE_FORMAT_IEEE_FLOAT</link>)&#32;{
3169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s16__ieee(pWav,&#32;samplesToRead,&#32;pBufferOut);
3170 &#32;&#32;&#32;&#32;}
3171 
3172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aac85303b228b086427890296bceaa243">DR_WAVE_FORMAT_ALAW</link>)&#32;{
3173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s16__alaw(pWav,&#32;samplesToRead,&#32;pBufferOut);
3174 &#32;&#32;&#32;&#32;}
3175 
3176 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a662479788c14c01dbe4f6113d457c3c9">DR_WAVE_FORMAT_MULAW</link>)&#32;{
3177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s16__mulaw(pWav,&#32;samplesToRead,&#32;pBufferOut);
3178 &#32;&#32;&#32;&#32;}
3179 
3180 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
3181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s16__ima(pWav,&#32;samplesToRead,&#32;pBufferOut);
3182 &#32;&#32;&#32;&#32;}
3183 
3184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3185 }
3186 
3187 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf48d38f1258631922c4f4ab5b8357d7">drwav_read_pcm_frames_s16</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pBufferOut)
3188 {
3189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(pWav,&#32;framesToRead&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>,&#32;pBufferOut)&#32;/&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
3190 }
3191 
3192 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad1e34dde45f7a2d05672ed41e5521d80">drwav_u8_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3193 {
3194 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3195 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3196 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;pIn[i];
3198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&lt;&#32;8;
3199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;32768;
3200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;(short)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3201 &#32;&#32;&#32;&#32;}
3202 }
3203 
3204 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1af86c7957c9a4d3d56668ccca558ea7fd">drwav_s24_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3205 {
3206 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3207 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;((int)(((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>)(((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)pIn)[i*3+0])&#32;&lt;&lt;&#32;8)&#32;|&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;int)(((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)pIn)[i*3+1])&#32;&lt;&lt;&#32;16)&#32;|&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;int)(((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)pIn)[i*3+2]))&#32;&lt;&lt;&#32;24))&#32;&gt;&gt;&#32;8;
3210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&gt;&#32;8;
3211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;(short)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3212 &#32;&#32;&#32;&#32;}
3213 }
3214 
3215 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a034dd2873664148ff69483d27a2ba39b">drwav_s32_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3216 {
3217 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3218 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3219 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;pIn[i];
3221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&gt;&#32;16;
3222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;(short)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3223 &#32;&#32;&#32;&#32;}
3224 }
3225 
3226 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a071c19178e72559fc0803526143d752c">drwav_f32_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3227 {
3228 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3229 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3230 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;pIn[i];
3232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;c;
3233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>));
3234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;c&#32;+&#32;1;
3235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;(int)(c&#32;*&#32;32767.5f);
3236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;32768;
3237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;(short)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3238 &#32;&#32;&#32;&#32;}
3239 }
3240 
3241 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a36329c77460fe262e6be3d435dc5dc93">drwav_f64_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3242 {
3243 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3244 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3245 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;pIn[i];
3247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;c;
3248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>));
3249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;c&#32;+&#32;1;
3250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;(int)(c&#32;*&#32;32767.5);
3251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;32768;
3252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;(short)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3253 &#32;&#32;&#32;&#32;}
3254 }
3255 
3256 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3eb2e9f6710a6236368790014eb79c1">drwav_alaw_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3257 {
3258 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3259 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;drwav__alaw_to_s16(pIn[i]);
3261 &#32;&#32;&#32;&#32;}
3262 }
3263 
3264 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aa73c89d2d43b0ef8efeac0c7ebbe4faa">drwav_mulaw_to_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3265 {
3266 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3267 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;drwav__mulaw_to_s16(pIn[i]);
3269 &#32;&#32;&#32;&#32;}
3270 }
3271 
3272 
3273 
3274 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__pcm_to_f32(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesPerSample)
3275 {
3276 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3277 
3278 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Special&#32;case&#32;for&#32;8-bit&#32;sample&#32;data&#32;because&#32;it&apos;s&#32;treated&#32;as&#32;unsigned.&#32;*/</emphasis>
3279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;1)&#32;{
3280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad16025292a474ec2584af782096879a9">drwav_u8_to_f32</link>(pOut,&#32;pIn,&#32;sampleCount);
3281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3282 &#32;&#32;&#32;&#32;}
3283 
3284 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Slightly&#32;more&#32;optimal&#32;implementation&#32;for&#32;common&#32;formats.&#32;*/</emphasis>
3285 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;2)&#32;{
3286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6857debfce0ee3e50eb00eddc563aa45">drwav_s16_to_f32</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*)pIn,&#32;sampleCount);
3287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3288 &#32;&#32;&#32;&#32;}
3289 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;3)&#32;{
3290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a139b36057c0c0b08ddf3038ae193a9cc">drwav_s24_to_f32</link>(pOut,&#32;pIn,&#32;sampleCount);
3291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3292 &#32;&#32;&#32;&#32;}
3293 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;4)&#32;{
3294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a149fd11144e26d1491a88d7dbd0ae286">drwav_s32_to_f32</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*)pIn,&#32;sampleCount);
3295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3296 &#32;&#32;&#32;&#32;}
3297 
3298 
3299 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Anything&#32;more&#32;than&#32;64&#32;bits&#32;per&#32;sample&#32;is&#32;not&#32;supported.&#32;*/</emphasis>
3300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;&gt;&#32;8)&#32;{
3301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_zero_memory(pOut,&#32;sampleCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*pOut));
3302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3303 &#32;&#32;&#32;&#32;}
3304 
3305 
3306 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generic,&#32;slow&#32;converter.&#32;*/</emphasis>
3307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;0;
3309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;shift&#32;&#32;=&#32;(8&#32;-&#32;bytesPerSample)&#32;*&#32;8;
3310 
3311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
3312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;bytesPerSample&#32;&amp;&amp;&#32;j&#32;&lt;&#32;8;&#32;j&#32;+=&#32;1)&#32;{
3313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;|=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)(pIn[j])&#32;&lt;&lt;&#32;shift;
3314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift&#32;&#32;+=&#32;8;
3315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3316 
3317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pIn&#32;+=&#32;j;
3318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(float)((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac99c9056e44b9c212511a49380d3c666">drwav_int64</link>)<link linkend="_structsample">sample</link>&#32;/&#32;9223372036854775807.0);
3319 &#32;&#32;&#32;&#32;}
3320 }
3321 
3322 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__ieee_to_f32(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesPerSample)
3323 {
3324 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;4)&#32;{
3325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*)pIn)[i];
3328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3330 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;8)&#32;{
3331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a4c60f48d3486ba4b7ece5705244673a7">drwav_f64_to_f32</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*)pIn,&#32;sampleCount);
3332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3333 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;supporting&#32;32-&#32;and&#32;64-bit&#32;float.&#32;Output&#32;silence&#32;in&#32;all&#32;other&#32;cases.&#32;Contributions&#32;welcome&#32;for&#32;16-bit&#32;float.&#32;*/</emphasis>
3335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_zero_memory(pOut,&#32;sampleCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*pOut));
3336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3337 &#32;&#32;&#32;&#32;}
3338 }
3339 
3340 
3341 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_f32__pcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3342 {
3343 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3344 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3345 
3346 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3347 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3349 &#32;&#32;&#32;&#32;}
3350 
3351 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3352 
3353 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3358 
3359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__pcm_to_f32(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead,&#32;bytesPerSample);
3360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;+=&#32;samplesRead;
3361 
3362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3364 &#32;&#32;&#32;&#32;}
3365 
3366 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3367 }
3368 
3369 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_f32__msadpcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3370 {
3371 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3372 <emphasis role="comment">&#32;&#32;&#32;&#32;We&apos;re&#32;just&#32;going&#32;to&#32;borrow&#32;the&#32;implementation&#32;from&#32;the&#32;drwav_read_s16()&#32;since&#32;ADPCM&#32;is&#32;a&#32;little&#32;bit&#32;more&#32;complicated&#32;than&#32;other&#32;formats&#32;and&#32;I&#32;don&apos;t</emphasis>
3373 <emphasis role="comment">&#32;&#32;&#32;&#32;want&#32;to&#32;duplicate&#32;that&#32;code.</emphasis>
3374 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3375 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead&#32;=&#32;0;
3376 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;samples16[2048];
3377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(pWav,&#32;drwav_min(samplesToRead,&#32;2048),&#32;samples16);
3379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3382 
3383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6857debfce0ee3e50eb00eddc563aa45">drwav_s16_to_f32</link>(pBufferOut,&#32;samples16,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;because&#32;we&apos;re&#32;clamping&#32;to&#32;2048.&#32;*/</emphasis>
3384 
3385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3388 &#32;&#32;&#32;&#32;}
3389 
3390 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3391 }
3392 
3393 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_f32__ima(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3394 {
3395 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3396 <emphasis role="comment">&#32;&#32;&#32;&#32;We&apos;re&#32;just&#32;going&#32;to&#32;borrow&#32;the&#32;implementation&#32;from&#32;the&#32;drwav_read_s16()&#32;since&#32;IMA-ADPCM&#32;is&#32;a&#32;little&#32;bit&#32;more&#32;complicated&#32;than&#32;other&#32;formats&#32;and&#32;I&#32;don&apos;t</emphasis>
3397 <emphasis role="comment">&#32;&#32;&#32;&#32;want&#32;to&#32;duplicate&#32;that&#32;code.</emphasis>
3398 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3399 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead&#32;=&#32;0;
3400 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;samples16[2048];
3401 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(pWav,&#32;drwav_min(samplesToRead,&#32;2048),&#32;samples16);
3403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3406 
3407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6857debfce0ee3e50eb00eddc563aa45">drwav_s16_to_f32</link>(pBufferOut,&#32;samples16,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;because&#32;we&apos;re&#32;clamping&#32;to&#32;2048.&#32;*/</emphasis>
3408 
3409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3412 &#32;&#32;&#32;&#32;}
3413 
3414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3415 }
3416 
3417 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_f32__ieee(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3418 {
3419 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3420 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3421 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample;
3422 
3423 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fast&#32;path.&#32;*/</emphasis>
3424 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ade52a22af3dde8fa637e7258fc3c34a4">DR_WAVE_FORMAT_IEEE_FLOAT</link>&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;==&#32;32)&#32;{
3425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;samplesToRead,&#32;pBufferOut);
3426 &#32;&#32;&#32;&#32;}
3427 &#32;&#32;&#32;&#32;
3428 &#32;&#32;&#32;&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3429 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3431 &#32;&#32;&#32;&#32;}
3432 
3433 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3434 
3435 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3440 
3441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__ieee_to_f32(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead,&#32;bytesPerSample);
3442 
3443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3446 &#32;&#32;&#32;&#32;}
3447 
3448 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3449 }
3450 
3451 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_f32__alaw(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3452 {
3453 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3454 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3455 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3456 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3458 &#32;&#32;&#32;&#32;}
3459 
3460 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3461 
3462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3467 
3468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7cbbb839d69432c8f1be125c36abda4c">drwav_alaw_to_f32</link>(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);
3469 
3470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3473 &#32;&#32;&#32;&#32;}
3474 
3475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3476 }
3477 
3478 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_f32__mulaw(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3479 {
3480 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3481 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3482 
3483 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3484 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3486 &#32;&#32;&#32;&#32;}
3487 
3488 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3489 
3490 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3495 
3496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab7b73d93cc2da7c4d27dbf8619af20e3">drwav_mulaw_to_f32</link>(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);
3497 
3498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3501 &#32;&#32;&#32;&#32;}
3502 
3503 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3504 }
3505 
3506 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1afd99cb4c4304754642e8124ac850481c">drwav_read_f32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3507 {
3508 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;samplesToRead&#32;==&#32;0&#32;||&#32;pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3510 &#32;&#32;&#32;&#32;}
3511 
3512 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Don&apos;t&#32;try&#32;to&#32;read&#32;more&#32;samples&#32;than&#32;can&#32;potentially&#32;fit&#32;in&#32;the&#32;output&#32;buffer.&#32;*/</emphasis>
3513 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
3514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;=&#32;DRWAV_SIZE_MAX&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(float);
3515 &#32;&#32;&#32;&#32;}
3516 
3517 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8804aa8b2267e5d0a5ebf433dbf433e3">DR_WAVE_FORMAT_PCM</link>)&#32;{
3518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_f32__pcm(pWav,&#32;samplesToRead,&#32;pBufferOut);
3519 &#32;&#32;&#32;&#32;}
3520 
3521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
3522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_f32__msadpcm(pWav,&#32;samplesToRead,&#32;pBufferOut);
3523 &#32;&#32;&#32;&#32;}
3524 
3525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ade52a22af3dde8fa637e7258fc3c34a4">DR_WAVE_FORMAT_IEEE_FLOAT</link>)&#32;{
3526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_f32__ieee(pWav,&#32;samplesToRead,&#32;pBufferOut);
3527 &#32;&#32;&#32;&#32;}
3528 
3529 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aac85303b228b086427890296bceaa243">DR_WAVE_FORMAT_ALAW</link>)&#32;{
3530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_f32__alaw(pWav,&#32;samplesToRead,&#32;pBufferOut);
3531 &#32;&#32;&#32;&#32;}
3532 
3533 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a662479788c14c01dbe4f6113d457c3c9">DR_WAVE_FORMAT_MULAW</link>)&#32;{
3534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_f32__mulaw(pWav,&#32;samplesToRead,&#32;pBufferOut);
3535 &#32;&#32;&#32;&#32;}
3536 
3537 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
3538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_f32__ima(pWav,&#32;samplesToRead,&#32;pBufferOut);
3539 &#32;&#32;&#32;&#32;}
3540 
3541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3542 }
3543 
3544 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a5a8ce89d5c12f4e7f9ea8a17d2c8337c">drwav_read_pcm_frames_f32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3545 {
3546 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1afd99cb4c4304754642e8124ac850481c">drwav_read_f32</link>(pWav,&#32;framesToRead&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>,&#32;pBufferOut)&#32;/&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
3547 }
3548 
3549 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad16025292a474ec2584af782096879a9">drwav_u8_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3550 {
3551 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3552 
3553 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3555 &#32;&#32;&#32;&#32;}
3556 
3557 <emphasis role="preprocessor">#ifdef&#32;DR_WAV_LIBSNDFILE_COMPAT</emphasis>
3558 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3559 <emphasis role="comment">&#32;&#32;&#32;&#32;It&#32;appears&#32;libsndfile&#32;uses&#32;slightly&#32;different&#32;logic&#32;for&#32;the&#32;u8&#32;-&gt;&#32;f32&#32;conversion&#32;to&#32;dr_wav,&#32;which&#32;in&#32;my&#32;opinion&#32;is&#32;incorrect.&#32;It&#32;appears</emphasis>
3560 <emphasis role="comment">&#32;&#32;&#32;&#32;libsndfile&#32;performs&#32;the&#32;conversion&#32;something&#32;like&#32;&quot;f32&#32;=&#32;(u8&#32;/&#32;256)&#32;*&#32;2&#32;-&#32;1&quot;,&#32;however&#32;I&#32;think&#32;it&#32;should&#32;be&#32;&quot;f32&#32;=&#32;(u8&#32;/&#32;255)&#32;*&#32;2&#32;-&#32;1&quot;&#32;(note</emphasis>
3561 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;divisor&#32;of&#32;256&#32;vs&#32;255).&#32;I&#32;use&#32;libsndfile&#32;as&#32;a&#32;benchmark&#32;for&#32;testing,&#32;so&#32;I&apos;m&#32;therefore&#32;leaving&#32;this&#32;block&#32;here&#32;just&#32;for&#32;my&#32;automated</emphasis>
3562 <emphasis role="comment">&#32;&#32;&#32;&#32;correctness&#32;testing.&#32;This&#32;is&#32;disabled&#32;by&#32;default.</emphasis>
3563 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3564 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(pIn[i]&#32;/&#32;256.0f)&#32;*&#32;2&#32;-&#32;1;
3566 &#32;&#32;&#32;&#32;}
3567 <emphasis role="preprocessor">#else</emphasis>
3568 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(pIn[i]&#32;/&#32;255.0f)&#32;*&#32;2&#32;-&#32;1;
3570 &#32;&#32;&#32;&#32;}
3571 <emphasis role="preprocessor">#endif</emphasis>
3572 }
3573 
3574 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6857debfce0ee3e50eb00eddc563aa45">drwav_s16_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3575 {
3576 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3577 
3578 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3580 &#32;&#32;&#32;&#32;}
3581 
3582 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;pIn[i]&#32;/&#32;32768.0f;
3584 &#32;&#32;&#32;&#32;}
3585 }
3586 
3587 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a139b36057c0c0b08ddf3038ae193a9cc">drwav_s24_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3588 {
3589 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3590 
3591 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3593 &#32;&#32;&#32;&#32;}
3594 
3595 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s0&#32;=&#32;pIn[i*3&#32;+&#32;0];
3597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s1&#32;=&#32;pIn[i*3&#32;+&#32;1];
3598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s2&#32;=&#32;pIn[i*3&#32;+&#32;2];
3599 
3600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sample32&#32;=&#32;(int)((s0&#32;&lt;&lt;&#32;8)&#32;|&#32;(s1&#32;&lt;&lt;&#32;16)&#32;|&#32;(s2&#32;&lt;&lt;&#32;24));
3601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(float)(sample32&#32;/&#32;2147483648.0);
3602 &#32;&#32;&#32;&#32;}
3603 }
3604 
3605 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a149fd11144e26d1491a88d7dbd0ae286">drwav_s32_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3606 {
3607 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3608 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3610 &#32;&#32;&#32;&#32;}
3611 
3612 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(float)(pIn[i]&#32;/&#32;2147483648.0);
3614 &#32;&#32;&#32;&#32;}
3615 }
3616 
3617 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a4c60f48d3486ba4b7ece5705244673a7">drwav_f64_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3618 {
3619 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3620 
3621 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3623 &#32;&#32;&#32;&#32;}
3624 
3625 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(float)pIn[i];
3627 &#32;&#32;&#32;&#32;}
3628 }
3629 
3630 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7cbbb839d69432c8f1be125c36abda4c">drwav_alaw_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3631 {
3632 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3633 
3634 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3636 &#32;&#32;&#32;&#32;}
3637 
3638 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;drwav__alaw_to_s16(pIn[i])&#32;/&#32;32768.0f;
3640 &#32;&#32;&#32;&#32;}
3641 }
3642 
3643 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab7b73d93cc2da7c4d27dbf8619af20e3">drwav_mulaw_to_f32</link>(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3644 {
3645 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3646 
3647 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3649 &#32;&#32;&#32;&#32;}
3650 
3651 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;drwav__mulaw_to_s16(pIn[i])&#32;/&#32;32768.0f;
3653 &#32;&#32;&#32;&#32;}
3654 }
3655 
3656 
3657 
3658 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__pcm_to_s32(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;totalSampleCount,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesPerSample)
3659 {
3660 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3661 
3662 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Special&#32;case&#32;for&#32;8-bit&#32;sample&#32;data&#32;because&#32;it&apos;s&#32;treated&#32;as&#32;unsigned.&#32;*/</emphasis>
3663 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;1)&#32;{
3664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a589e32ea40ffa69b32e63b9c9697721c">drwav_u8_to_s32</link>(pOut,&#32;pIn,&#32;totalSampleCount);
3665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3666 &#32;&#32;&#32;&#32;}
3667 
3668 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Slightly&#32;more&#32;optimal&#32;implementation&#32;for&#32;common&#32;formats.&#32;*/</emphasis>
3669 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;2)&#32;{
3670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aaf050adf47878c85984d7374caf2cd36">drwav_s16_to_s32</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*)pIn,&#32;totalSampleCount);
3671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3672 &#32;&#32;&#32;&#32;}
3673 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;3)&#32;{
3674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a390438959679ac496bedfada40673f38">drwav_s24_to_s32</link>(pOut,&#32;pIn,&#32;totalSampleCount);
3675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3676 &#32;&#32;&#32;&#32;}
3677 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;4)&#32;{
3678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;totalSampleCount;&#32;++i)&#32;{
3679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;((<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*)pIn)[i];
3680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3682 &#32;&#32;&#32;&#32;}
3683 
3684 
3685 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Anything&#32;more&#32;than&#32;64&#32;bits&#32;per&#32;sample&#32;is&#32;not&#32;supported.&#32;*/</emphasis>
3686 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;&gt;&#32;8)&#32;{
3687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_zero_memory(pOut,&#32;totalSampleCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*pOut));
3688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3689 &#32;&#32;&#32;&#32;}
3690 
3691 
3692 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generic,&#32;slow&#32;converter.&#32;*/</emphasis>
3693 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;totalSampleCount;&#32;++i)&#32;{
3694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;0;
3695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;shift&#32;&#32;=&#32;(8&#32;-&#32;bytesPerSample)&#32;*&#32;8;
3696 
3697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
3698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;bytesPerSample&#32;&amp;&amp;&#32;j&#32;&lt;&#32;8;&#32;j&#32;+=&#32;1)&#32;{
3699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;|=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>)(pIn[j])&#32;&lt;&lt;&#32;shift;
3700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift&#32;&#32;+=&#32;8;
3701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3702 
3703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pIn&#32;+=&#32;j;
3704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)((<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac99c9056e44b9c212511a49380d3c666">drwav_int64</link>)<link linkend="_structsample">sample</link>&#32;&gt;&gt;&#32;32);
3705 &#32;&#32;&#32;&#32;}
3706 }
3707 
3708 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drwav__ieee_to_s32(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;totalSampleCount,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesPerSample)
3709 {
3710 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;4)&#32;{
3711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a945e89df18cac4c6dd71abda788ccaf8">drwav_f32_to_s32</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*)pIn,&#32;totalSampleCount);
3712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3713 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;8)&#32;{
3714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7a1474be08f28eed96b1d472576ed6a3">drwav_f64_to_s32</link>(pOut,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*)pIn,&#32;totalSampleCount);
3715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3716 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;supporting&#32;32-&#32;and&#32;64-bit&#32;float.&#32;Output&#32;silence&#32;in&#32;all&#32;other&#32;cases.&#32;Contributions&#32;welcome&#32;for&#32;16-bit&#32;float.&#32;*/</emphasis>
3718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav_zero_memory(pOut,&#32;totalSampleCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*pOut));
3719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3720 &#32;&#32;&#32;&#32;}
3721 }
3722 
3723 
3724 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s32__pcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3725 {
3726 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3727 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3728 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample;
3729 
3730 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fast&#32;path.&#32;*/</emphasis>
3731 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8804aa8b2267e5d0a5ebf433dbf433e3">DR_WAVE_FORMAT_PCM</link>&#32;&amp;&amp;&#32;pWav-&gt;<link linkend="_structdrwav_1ab712d32dcc6b9c132ae43caf00827ea8">bitsPerSample</link>&#32;==&#32;32)&#32;{
3732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;samplesToRead,&#32;pBufferOut);
3733 &#32;&#32;&#32;&#32;}
3734 &#32;&#32;&#32;&#32;
3735 &#32;&#32;&#32;&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3736 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3738 &#32;&#32;&#32;&#32;}
3739 
3740 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3741 
3742 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3747 
3748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__pcm_to_s32(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead,&#32;bytesPerSample);
3749 
3750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3753 &#32;&#32;&#32;&#32;}
3754 
3755 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3756 }
3757 
3758 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s32__msadpcm(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3759 {
3760 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3761 <emphasis role="comment">&#32;&#32;&#32;&#32;We&apos;re&#32;just&#32;going&#32;to&#32;borrow&#32;the&#32;implementation&#32;from&#32;the&#32;drwav_read_s16()&#32;since&#32;ADPCM&#32;is&#32;a&#32;little&#32;bit&#32;more&#32;complicated&#32;than&#32;other&#32;formats&#32;and&#32;I&#32;don&apos;t</emphasis>
3762 <emphasis role="comment">&#32;&#32;&#32;&#32;want&#32;to&#32;duplicate&#32;that&#32;code.</emphasis>
3763 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3764 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead&#32;=&#32;0;
3765 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;samples16[2048];
3766 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(pWav,&#32;drwav_min(samplesToRead,&#32;2048),&#32;samples16);
3768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3771 
3772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aaf050adf47878c85984d7374caf2cd36">drwav_s16_to_s32</link>(pBufferOut,&#32;samples16,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;because&#32;we&apos;re&#32;clamping&#32;to&#32;2048.&#32;*/</emphasis>
3773 
3774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3777 &#32;&#32;&#32;&#32;}
3778 
3779 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3780 }
3781 
3782 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s32__ima(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3783 {
3784 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3785 <emphasis role="comment">&#32;&#32;&#32;&#32;We&apos;re&#32;just&#32;going&#32;to&#32;borrow&#32;the&#32;implementation&#32;from&#32;the&#32;drwav_read_s16()&#32;since&#32;IMA-ADPCM&#32;is&#32;a&#32;little&#32;bit&#32;more&#32;complicated&#32;than&#32;other&#32;formats&#32;and&#32;I&#32;don&apos;t</emphasis>
3786 <emphasis role="comment">&#32;&#32;&#32;&#32;want&#32;to&#32;duplicate&#32;that&#32;code.</emphasis>
3787 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3788 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead&#32;=&#32;0;
3789 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>&#32;samples16[2048];
3790 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(pWav,&#32;drwav_min(samplesToRead,&#32;2048),&#32;samples16);
3792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3795 
3796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aaf050adf47878c85984d7374caf2cd36">drwav_s16_to_s32</link>(pBufferOut,&#32;samples16,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;because&#32;we&apos;re&#32;clamping&#32;to&#32;2048.&#32;*/</emphasis>
3797 
3798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3801 &#32;&#32;&#32;&#32;}
3802 
3803 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3804 }
3805 
3806 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s32__ieee(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3807 {
3808 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3809 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3810 
3811 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3812 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3814 &#32;&#32;&#32;&#32;}
3815 
3816 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3817 
3818 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3823 
3824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drwav__ieee_to_s32(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead,&#32;bytesPerSample);
3825 
3826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3829 &#32;&#32;&#32;&#32;}
3830 
3831 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3832 }
3833 
3834 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s32__alaw(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3835 {
3836 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3837 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3838 
3839 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3840 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3842 &#32;&#32;&#32;&#32;}
3843 
3844 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3845 
3846 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3851 
3852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a35032e0fd593a612f29921a692af810e">drwav_alaw_to_s32</link>(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);
3853 
3854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3857 &#32;&#32;&#32;&#32;}
3858 
3859 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3860 }
3861 
3862 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;drwav_read_s32__mulaw(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3863 {
3864 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSamplesRead;
3865 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sampleData[4096];
3866 
3867 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a89e2d93bb94b521bbd2aacb9c451a862">drwav_uint32</link>&#32;bytesPerSample&#32;=&#32;drwav_get_bytes_per_sample(pWav);
3868 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesPerSample&#32;==&#32;0)&#32;{
3869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3870 &#32;&#32;&#32;&#32;}
3871 
3872 &#32;&#32;&#32;&#32;totalSamplesRead&#32;=&#32;0;
3873 
3874 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(samplesToRead&#32;&gt;&#32;0)&#32;{
3875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a6a08a93c478e313becb0583c3ccd2161">drwav_read</link>(pWav,&#32;drwav_min(samplesToRead,&#32;<emphasis role="keyword">sizeof</emphasis>(sampleData)/bytesPerSample),&#32;sampleData);
3876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;==&#32;0)&#32;{
3877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3879 
3880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3fb855d8eb4fef3a59fd7241a3c780d">drwav_mulaw_to_s32</link>(pBufferOut,&#32;sampleData,&#32;(<emphasis role="keywordtype">size_t</emphasis>)samplesRead);
3881 
3882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;samplesRead;
3883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;&#32;&#32;&#32;-=&#32;samplesRead;
3884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalSamplesRead&#32;+=&#32;samplesRead;
3885 &#32;&#32;&#32;&#32;}
3886 
3887 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalSamplesRead;
3888 }
3889 
3890 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab2294bc72486feb4105b35b93490645d">drwav_read_s32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3891 {
3892 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;samplesToRead&#32;==&#32;0&#32;||&#32;pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3894 &#32;&#32;&#32;&#32;}
3895 
3896 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Don&apos;t&#32;try&#32;to&#32;read&#32;more&#32;samples&#32;than&#32;can&#32;potentially&#32;fit&#32;in&#32;the&#32;output&#32;buffer.&#32;*/</emphasis>
3897 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesToRead&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
3898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesToRead&#32;=&#32;DRWAV_SIZE_MAX&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>);
3899 &#32;&#32;&#32;&#32;}
3900 
3901 
3902 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8804aa8b2267e5d0a5ebf433dbf433e3">DR_WAVE_FORMAT_PCM</link>)&#32;{
3903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s32__pcm(pWav,&#32;samplesToRead,&#32;pBufferOut);
3904 &#32;&#32;&#32;&#32;}
3905 
3906 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3077a4d3e43aeb7769e5539274e6130">DR_WAVE_FORMAT_ADPCM</link>)&#32;{
3907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s32__msadpcm(pWav,&#32;samplesToRead,&#32;pBufferOut);
3908 &#32;&#32;&#32;&#32;}
3909 
3910 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ade52a22af3dde8fa637e7258fc3c34a4">DR_WAVE_FORMAT_IEEE_FLOAT</link>)&#32;{
3911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s32__ieee(pWav,&#32;samplesToRead,&#32;pBufferOut);
3912 &#32;&#32;&#32;&#32;}
3913 
3914 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aac85303b228b086427890296bceaa243">DR_WAVE_FORMAT_ALAW</link>)&#32;{
3915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s32__alaw(pWav,&#32;samplesToRead,&#32;pBufferOut);
3916 &#32;&#32;&#32;&#32;}
3917 
3918 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a662479788c14c01dbe4f6113d457c3c9">DR_WAVE_FORMAT_MULAW</link>)&#32;{
3919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s32__mulaw(pWav,&#32;samplesToRead,&#32;pBufferOut);
3920 &#32;&#32;&#32;&#32;}
3921 
3922 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pWav-&gt;<link linkend="_structdrwav_1a842f721c6cd25a490163640b5e27e67e">translatedFormatTag</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a49a82fad306a802e50d401b602de3219">DR_WAVE_FORMAT_DVI_ADPCM</link>)&#32;{
3923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav_read_s32__ima(pWav,&#32;samplesToRead,&#32;pBufferOut);
3924 &#32;&#32;&#32;&#32;}
3925 
3926 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3927 }
3928 
3929 <link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a99e103c778f3921a61400ec6a5d40a1c">drwav_read_pcm_frames_s32</link>(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pBufferOut)
3930 {
3931 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab2294bc72486feb4105b35b93490645d">drwav_read_s32</link>(pWav,&#32;framesToRead&#32;*&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>,&#32;pBufferOut)&#32;/&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
3932 }
3933 
3934 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a589e32ea40ffa69b32e63b9c9697721c">drwav_u8_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3935 {
3936 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3937 
3938 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3940 &#32;&#32;&#32;&#32;}
3941 
3942 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;((int)pIn[i]&#32;-&#32;128)&#32;&lt;&lt;&#32;24;
3944 &#32;&#32;&#32;&#32;}
3945 }
3946 
3947 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aaf050adf47878c85984d7374caf2cd36">drwav_s16_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3948 {
3949 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3950 
3951 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3953 &#32;&#32;&#32;&#32;}
3954 
3955 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;pIn[i]&#32;&lt;&lt;&#32;16;
3957 &#32;&#32;&#32;&#32;}
3958 }
3959 
3960 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a390438959679ac496bedfada40673f38">drwav_s24_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3961 {
3962 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3963 
3964 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3966 &#32;&#32;&#32;&#32;}
3967 
3968 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s0&#32;=&#32;pIn[i*3&#32;+&#32;0];
3970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s1&#32;=&#32;pIn[i*3&#32;+&#32;1];
3971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s2&#32;=&#32;pIn[i*3&#32;+&#32;2];
3972 
3973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>&#32;sample32&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)((s0&#32;&lt;&lt;&#32;8)&#32;|&#32;(s1&#32;&lt;&lt;&#32;16)&#32;|&#32;(s2&#32;&lt;&lt;&#32;24));
3974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;sample32;
3975 &#32;&#32;&#32;&#32;}
3976 }
3977 
3978 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a945e89df18cac4c6dd71abda788ccaf8">drwav_f32_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3979 {
3980 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3981 
3982 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3984 &#32;&#32;&#32;&#32;}
3985 
3986 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
3987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)(2147483648.0&#32;*&#32;pIn[i]);
3988 &#32;&#32;&#32;&#32;}
3989 }
3990 
3991 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7a1474be08f28eed96b1d472576ed6a3">drwav_f64_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
3992 {
3993 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3994 
3995 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3997 &#32;&#32;&#32;&#32;}
3998 
3999 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
4000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)(2147483648.0&#32;*&#32;pIn[i]);
4001 &#32;&#32;&#32;&#32;}
4002 }
4003 
4004 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a35032e0fd593a612f29921a692af810e">drwav_alaw_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
4005 {
4006 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
4007 
4008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
4010 &#32;&#32;&#32;&#32;}
4011 
4012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
4013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__alaw_to_s16(pIn[i]))&#32;&lt;&lt;&#32;16;
4014 &#32;&#32;&#32;&#32;}
4015 }
4016 
4017 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ab3fb855d8eb4fef3a59fd7241a3c780d">drwav_mulaw_to_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pOut,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae433204b3e47bded80161f89f5d52895">drwav_uint8</link>*&#32;pIn,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sampleCount)
4018 {
4019 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
4020 
4021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pIn&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
4023 &#32;&#32;&#32;&#32;}
4024 
4025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;++i)&#32;{
4026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pOut++&#32;=&#32;((<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>)drwav__mulaw_to_s16(pIn[i]))&#32;&lt;&lt;&#32;16;
4027 &#32;&#32;&#32;&#32;}
4028 }
4029 
4030 
4031 
4032 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;drwav__read_and_close_s16(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4033 {
4034 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;sampleDataSize;
4035 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;pSampleData;
4036 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead;
4037 
4038 &#32;&#32;&#32;&#32;drwav_assert(pWav&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4039 
4040 &#32;&#32;&#32;&#32;sampleDataSize&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>);
4041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleDataSize&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
4042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;File&apos;s&#32;too&#32;big.&#32;*/</emphasis>
4044 &#32;&#32;&#32;&#32;}
4045 
4046 &#32;&#32;&#32;&#32;pSampleData&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*)<link linkend="__classes_2lib_2raudio_8c_1a1be4e74d531c17f7a9282e7218f93904">DRWAV_MALLOC</link>((<emphasis role="keywordtype">size_t</emphasis>)sampleDataSize);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;due&#32;to&#32;the&#32;check&#32;above.&#32;*/</emphasis>
4047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSampleData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Failed&#32;to&#32;allocate&#32;memory.&#32;*/</emphasis>
4050 &#32;&#32;&#32;&#32;}
4051 
4052 &#32;&#32;&#32;&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2f664abc5aa6720d807814aeee1bf503">drwav_read_s16</link>(pWav,&#32;(<emphasis role="keywordtype">size_t</emphasis>)pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>,&#32;pSampleData);
4053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;!=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
4054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pSampleData);
4055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;was&#32;an&#32;error&#32;reading&#32;the&#32;samples.&#32;*/</emphasis>
4057 &#32;&#32;&#32;&#32;}
4058 
4059 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4060 
4061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a6f3a893019f8b2b0bcc1939d48ae2da5">sampleRate</link>;
4063 &#32;&#32;&#32;&#32;}
4064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
4066 &#32;&#32;&#32;&#32;}
4067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>;
4069 &#32;&#32;&#32;&#32;}
4070 
4071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pSampleData;
4072 }
4073 
4074 <emphasis role="keywordtype">float</emphasis>*&#32;drwav__read_and_close_f32(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4075 {
4076 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;sampleDataSize;
4077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pSampleData;
4078 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead;
4079 
4080 &#32;&#32;&#32;&#32;drwav_assert(pWav&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4081 
4082 &#32;&#32;&#32;&#32;sampleDataSize&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(float);
4083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleDataSize&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
4084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;File&apos;s&#32;too&#32;big.&#32;*/</emphasis>
4086 &#32;&#32;&#32;&#32;}
4087 
4088 &#32;&#32;&#32;&#32;pSampleData&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>*)<link linkend="__classes_2lib_2raudio_8c_1a1be4e74d531c17f7a9282e7218f93904">DRWAV_MALLOC</link>((<emphasis role="keywordtype">size_t</emphasis>)sampleDataSize);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;due&#32;to&#32;the&#32;check&#32;above.&#32;*/</emphasis>
4089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSampleData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Failed&#32;to&#32;allocate&#32;memory.&#32;*/</emphasis>
4092 &#32;&#32;&#32;&#32;}
4093 
4094 &#32;&#32;&#32;&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1afd99cb4c4304754642e8124ac850481c">drwav_read_f32</link>(pWav,&#32;(<emphasis role="keywordtype">size_t</emphasis>)pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>,&#32;pSampleData);
4095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;!=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
4096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pSampleData);
4097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;was&#32;an&#32;error&#32;reading&#32;the&#32;samples.&#32;*/</emphasis>
4099 &#32;&#32;&#32;&#32;}
4100 
4101 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4102 
4103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a6f3a893019f8b2b0bcc1939d48ae2da5">sampleRate</link>;
4105 &#32;&#32;&#32;&#32;}
4106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
4108 &#32;&#32;&#32;&#32;}
4109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>;
4111 &#32;&#32;&#32;&#32;}
4112 
4113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pSampleData;
4114 }
4115 
4116 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;drwav__read_and_close_s32(<link linkend="_structdrwav">drwav</link>*&#32;pWav,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4117 {
4118 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;sampleDataSize;
4119 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;pSampleData;
4120 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;samplesRead;
4121 
4122 &#32;&#32;&#32;&#32;drwav_assert(pWav&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4123 
4124 &#32;&#32;&#32;&#32;sampleDataSize&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>);
4125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleDataSize&#32;&gt;&#32;DRWAV_SIZE_MAX)&#32;{
4126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;File&apos;s&#32;too&#32;big.&#32;*/</emphasis>
4128 &#32;&#32;&#32;&#32;}
4129 
4130 &#32;&#32;&#32;&#32;pSampleData&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*)<link linkend="__classes_2lib_2raudio_8c_1a1be4e74d531c17f7a9282e7218f93904">DRWAV_MALLOC</link>((<emphasis role="keywordtype">size_t</emphasis>)sampleDataSize);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;due&#32;to&#32;the&#32;check&#32;above.&#32;*/</emphasis>
4131 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSampleData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Failed&#32;to&#32;allocate&#32;memory.&#32;*/</emphasis>
4134 &#32;&#32;&#32;&#32;}
4135 
4136 &#32;&#32;&#32;&#32;samplesRead&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab2294bc72486feb4105b35b93490645d">drwav_read_s32</link>(pWav,&#32;(<emphasis role="keywordtype">size_t</emphasis>)pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>,&#32;pSampleData);
4137 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(samplesRead&#32;!=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>)&#32;{
4138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pSampleData);
4139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;was&#32;an&#32;error&#32;reading&#32;the&#32;samples.&#32;*/</emphasis>
4141 &#32;&#32;&#32;&#32;}
4142 
4143 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1acf4995813b3b22f0322863c5b4b45d24">drwav_uninit</link>(pWav);
4144 
4145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a6f3a893019f8b2b0bcc1939d48ae2da5">sampleRate</link>;
4147 &#32;&#32;&#32;&#32;}
4148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a62c845e3c6f6309850c42cd64ea6616e">channels</link>;
4150 &#32;&#32;&#32;&#32;}
4151 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;pWav-&gt;<link linkend="_structdrwav_1a7bc491dbb6f088c0e699c415a2bc8ec3">totalSampleCount</link>;
4153 &#32;&#32;&#32;&#32;}
4154 
4155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pSampleData;
4156 }
4157 
4158 
4159 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab7862cc12ffdf1c8051d7b0926eb5a59">drwav_open_and_read_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4160 {
4161 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4162 
4163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4165 &#32;&#32;&#32;&#32;}
4166 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4168 &#32;&#32;&#32;&#32;}
4169 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4171 &#32;&#32;&#32;&#32;}
4172 
4173 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1aee95432c783db4b35f81fb64e465a9cf">drwav_init</link>(&amp;wav,&#32;onRead,&#32;onSeek,&#32;pUserData))&#32;{
4174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4175 &#32;&#32;&#32;&#32;}
4176 
4177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_s16(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4178 }
4179 
4180 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aea7a08fa82b3dc1a1eacb9043502bd63">drwav_open_and_read_pcm_frames_s16</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4181 {
4182 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4183 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4184 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4185 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4186 
4187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4189 &#32;&#32;&#32;&#32;}
4190 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4192 &#32;&#32;&#32;&#32;}
4193 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4195 &#32;&#32;&#32;&#32;}
4196 
4197 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1ab7862cc12ffdf1c8051d7b0926eb5a59">drwav_open_and_read_s16</link>(onRead,&#32;onSeek,&#32;pUserData,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4200 &#32;&#32;&#32;&#32;}
4201 
4202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4204 &#32;&#32;&#32;&#32;}
4205 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4207 &#32;&#32;&#32;&#32;}
4208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4210 &#32;&#32;&#32;&#32;}
4211 
4212 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4213 }
4214 
4215 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a52f83626128d834ba8f5bc63b26fded1">drwav_open_and_read_f32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4216 {
4217 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4218 
4219 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4221 &#32;&#32;&#32;&#32;}
4222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4224 &#32;&#32;&#32;&#32;}
4225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4227 &#32;&#32;&#32;&#32;}
4228 
4229 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1aee95432c783db4b35f81fb64e465a9cf">drwav_init</link>(&amp;wav,&#32;onRead,&#32;onSeek,&#32;pUserData))&#32;{
4230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4231 &#32;&#32;&#32;&#32;}
4232 
4233 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_f32(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4234 }
4235 
4236 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aed7004f802746b3a1710f583d13e5a65">drwav_open_and_read_pcm_frames_f32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4237 {
4238 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4239 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4240 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4241 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4242 
4243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4245 &#32;&#32;&#32;&#32;}
4246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4248 &#32;&#32;&#32;&#32;}
4249 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4251 &#32;&#32;&#32;&#32;}
4252 
4253 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a52f83626128d834ba8f5bc63b26fded1">drwav_open_and_read_f32</link>(onRead,&#32;onSeek,&#32;pUserData,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4254 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4256 &#32;&#32;&#32;&#32;}
4257 
4258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4260 &#32;&#32;&#32;&#32;}
4261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4263 &#32;&#32;&#32;&#32;}
4264 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4266 &#32;&#32;&#32;&#32;}
4267 
4268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4269 }
4270 
4271 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a1214d286e367ccf654fe2e6503e084d9">drwav_open_and_read_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4272 {
4273 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4274 
4275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4277 &#32;&#32;&#32;&#32;}
4278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4280 &#32;&#32;&#32;&#32;}
4281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4283 &#32;&#32;&#32;&#32;}
4284 
4285 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1aee95432c783db4b35f81fb64e465a9cf">drwav_init</link>(&amp;wav,&#32;onRead,&#32;onSeek,&#32;pUserData))&#32;{
4286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4287 &#32;&#32;&#32;&#32;}
4288 
4289 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_s32(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4290 }
4291 
4292 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1aea79576c6a41625cfba99eaea0036043">drwav_open_and_read_pcm_frames_s32</link>(<link linkend="__classes_2lib_2external_2dr__wav_8h_1af6936eb29cda3efef3190c60f59116c8">drwav_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a38fb9d5d047556e6681dccb8ae82a154">drwav_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4293 {
4294 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4295 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4296 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4297 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4298 
4299 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4301 &#32;&#32;&#32;&#32;}
4302 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4304 &#32;&#32;&#32;&#32;}
4305 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4307 &#32;&#32;&#32;&#32;}
4308 
4309 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a1214d286e367ccf654fe2e6503e084d9">drwav_open_and_read_s32</link>(onRead,&#32;onSeek,&#32;pUserData,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4310 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4312 &#32;&#32;&#32;&#32;}
4313 
4314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4316 &#32;&#32;&#32;&#32;}
4317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4319 &#32;&#32;&#32;&#32;}
4320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4322 &#32;&#32;&#32;&#32;}
4323 
4324 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4325 }
4326 
4327 <emphasis role="preprocessor">#ifndef&#32;DR_WAV_NO_STDIO</emphasis>
4328 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;drwav_open_file_and_read_s16(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4329 {
4330 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4331 
4332 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4334 &#32;&#32;&#32;&#32;}
4335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4337 &#32;&#32;&#32;&#32;}
4338 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4340 &#32;&#32;&#32;&#32;}
4341 
4342 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1a9cf60c3ba098367782fabe7486bdc15e">drwav_init_file</link>(&amp;wav,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
4343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4344 &#32;&#32;&#32;&#32;}
4345 
4346 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_s16(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4347 }
4348 
4349 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a682463920653c3093d0b3c3b4471609e">drwav_open_file_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4350 {
4351 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4352 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4353 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4354 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4355 
4356 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4358 &#32;&#32;&#32;&#32;}
4359 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4361 &#32;&#32;&#32;&#32;}
4362 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4364 &#32;&#32;&#32;&#32;}
4365 
4366 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;drwav_open_file_and_read_s16(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4369 &#32;&#32;&#32;&#32;}
4370 
4371 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4373 &#32;&#32;&#32;&#32;}
4374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4376 &#32;&#32;&#32;&#32;}
4377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4379 &#32;&#32;&#32;&#32;}
4380 
4381 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4382 }
4383 
4384 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4f6b3b2b5caf1d5f4a4ff92ccb6c4c4a">drwav_open_file_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4385 {
4386 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4387 
4388 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4390 &#32;&#32;&#32;&#32;}
4391 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4393 &#32;&#32;&#32;&#32;}
4394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4396 &#32;&#32;&#32;&#32;}
4397 
4398 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1a9cf60c3ba098367782fabe7486bdc15e">drwav_init_file</link>(&amp;wav,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
4399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4400 &#32;&#32;&#32;&#32;}
4401 
4402 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_f32(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4403 }
4404 
4405 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ac8d13b0e1ea2ef90b51283e8bc192b0f">drwav_open_file_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4406 {
4407 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4408 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4409 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4410 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4411 
4412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4414 &#32;&#32;&#32;&#32;}
4415 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4417 &#32;&#32;&#32;&#32;}
4418 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4420 &#32;&#32;&#32;&#32;}
4421 
4422 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4f6b3b2b5caf1d5f4a4ff92ccb6c4c4a">drwav_open_file_and_read_f32</link>(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4423 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4425 &#32;&#32;&#32;&#32;}
4426 
4427 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4429 &#32;&#32;&#32;&#32;}
4430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4432 &#32;&#32;&#32;&#32;}
4433 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4435 &#32;&#32;&#32;&#32;}
4436 
4437 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4438 }
4439 
4440 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4764c9454ef5f96878f7c9a1af2f5952">drwav_open_file_and_read_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4441 {
4442 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4443 
4444 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4446 &#32;&#32;&#32;&#32;}
4447 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4449 &#32;&#32;&#32;&#32;}
4450 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4452 &#32;&#32;&#32;&#32;}
4453 
4454 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1a9cf60c3ba098367782fabe7486bdc15e">drwav_init_file</link>(&amp;wav,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
4455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4456 &#32;&#32;&#32;&#32;}
4457 
4458 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_s32(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4459 }
4460 
4461 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6768611a1ca5324d0cc11d1ea0ae9a4c">drwav_open_file_and_read_pcm_frames_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4462 {
4463 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4464 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4465 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4466 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4467 
4468 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4470 &#32;&#32;&#32;&#32;}
4471 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4473 &#32;&#32;&#32;&#32;}
4474 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4476 &#32;&#32;&#32;&#32;}
4477 
4478 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a4764c9454ef5f96878f7c9a1af2f5952">drwav_open_file_and_read_s32</link>(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4479 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4481 &#32;&#32;&#32;&#32;}
4482 
4483 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4485 &#32;&#32;&#32;&#32;}
4486 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4488 &#32;&#32;&#32;&#32;}
4489 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4491 &#32;&#32;&#32;&#32;}
4492 
4493 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4494 }
4495 <emphasis role="preprocessor">#endif</emphasis>
4496 
4497 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a8f1c82c79e7c4573b2fed85a38d7bef1">drwav_open_memory_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4498 {
4499 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4500 
4501 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4503 &#32;&#32;&#32;&#32;}
4504 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4506 &#32;&#32;&#32;&#32;}
4507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4509 &#32;&#32;&#32;&#32;}
4510 
4511 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8133667245ee84be65c58c972411858b">drwav_init_memory</link>(&amp;wav,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>))&#32;{
4512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4513 &#32;&#32;&#32;&#32;}
4514 
4515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_s16(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4516 }
4517 
4518 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ae1cda8bd3359cccad3a2cebe2a136a95">drwav_open_memory_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4519 {
4520 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4521 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4522 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4523 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ac683d8bc54eefd0544650a4e447c20">drwav_int16</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4524 
4525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4527 &#32;&#32;&#32;&#32;}
4528 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4530 &#32;&#32;&#32;&#32;}
4531 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4533 &#32;&#32;&#32;&#32;}
4534 
4535 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a8f1c82c79e7c4573b2fed85a38d7bef1">drwav_open_memory_and_read_s16</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4536 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4538 &#32;&#32;&#32;&#32;}
4539 
4540 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4542 &#32;&#32;&#32;&#32;}
4543 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4545 &#32;&#32;&#32;&#32;}
4546 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4548 &#32;&#32;&#32;&#32;}
4549 
4550 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4551 }
4552 
4553 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a58d58a4aa171a32bd3091d32b0b00cbc">drwav_open_memory_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4554 {
4555 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4556 
4557 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4559 &#32;&#32;&#32;&#32;}
4560 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4562 &#32;&#32;&#32;&#32;}
4563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4565 &#32;&#32;&#32;&#32;}
4566 
4567 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8133667245ee84be65c58c972411858b">drwav_init_memory</link>(&amp;wav,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>))&#32;{
4568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4569 &#32;&#32;&#32;&#32;}
4570 
4571 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_f32(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4572 }
4573 
4574 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a7ede913b86ce617356588bd4c4582bb7">drwav_open_memory_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4575 {
4576 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4577 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4578 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4579 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4580 
4581 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4583 &#32;&#32;&#32;&#32;}
4584 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4586 &#32;&#32;&#32;&#32;}
4587 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4589 &#32;&#32;&#32;&#32;}
4590 
4591 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a58d58a4aa171a32bd3091d32b0b00cbc">drwav_open_memory_and_read_f32</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4592 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4594 &#32;&#32;&#32;&#32;}
4595 
4596 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4598 &#32;&#32;&#32;&#32;}
4599 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4601 &#32;&#32;&#32;&#32;}
4602 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4604 &#32;&#32;&#32;&#32;}
4605 
4606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4607 }
4608 
4609 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2c670216b9671cfb56b08082b90225b5">drwav_open_memory_and_read_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channels,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRate,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalSampleCount)
4610 {
4611 &#32;&#32;&#32;&#32;<link linkend="_structdrwav">drwav</link>&#32;wav;
4612 
4613 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRate)&#32;{
4614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRate&#32;=&#32;0;
4615 &#32;&#32;&#32;&#32;}
4616 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels)&#32;{
4617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channels&#32;=&#32;0;
4618 &#32;&#32;&#32;&#32;}
4619 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalSampleCount)&#32;{
4620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalSampleCount&#32;=&#32;0;
4621 &#32;&#32;&#32;&#32;}
4622 
4623 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__wav_8h_1a8133667245ee84be65c58c972411858b">drwav_init_memory</link>(&amp;wav,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>))&#32;{
4624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4625 &#32;&#32;&#32;&#32;}
4626 
4627 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drwav__read_and_close_s32(&amp;wav,&#32;channels,&#32;sampleRate,&#32;totalSampleCount);
4628 }
4629 
4630 <link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a2bdb7274d057791d9d9bda1c06a7b349">drwav_open_memory_and_read_pcm_frames_s32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;channelsOut,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;sampleRateOut,&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>*&#32;totalFrameCountOut)
4631 {
4632 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels;
4633 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sampleRate;
4634 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1ad25b608525a9683bf6eb2f7cb21dd783">drwav_uint64</link>&#32;totalSampleCount;
4635 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a6b7e22340c29c334edaa7d890713750b">drwav_int32</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4636 
4637 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;0;
4639 &#32;&#32;&#32;&#32;}
4640 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;0;
4642 &#32;&#32;&#32;&#32;}
4643 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;0;
4645 &#32;&#32;&#32;&#32;}
4646 
4647 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__wav_8h_1a2c670216b9671cfb56b08082b90225b5">drwav_open_memory_and_read_s32</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;&amp;channels,&#32;&amp;sampleRate,&#32;&amp;totalSampleCount);
4648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4650 &#32;&#32;&#32;&#32;}
4651 
4652 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelsOut)&#32;{
4653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*channelsOut&#32;=&#32;channels;
4654 &#32;&#32;&#32;&#32;}
4655 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut)&#32;{
4656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*sampleRateOut&#32;=&#32;sampleRate;
4657 &#32;&#32;&#32;&#32;}
4658 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalFrameCountOut)&#32;{
4659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*totalFrameCountOut&#32;=&#32;totalSampleCount&#32;/&#32;channels;
4660 &#32;&#32;&#32;&#32;}
4661 
4662 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4663 }
4664 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;DR_WAV_NO_CONVERSION_API&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
4665 
4666 
4667 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__wav_8h_1a331da89906d869a720a035b34f68ea3b">drwav_free</link>(<emphasis role="keywordtype">void</emphasis>*&#32;pDataReturnedByOpenAndRead)
4668 {
4669 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a53cbde2dfd51a77b67c5f26113f9d021">DRWAV_FREE</link>(pDataReturnedByOpenAndRead);
4670 }
4671 
4672 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;DR_WAV_IMPLEMENTATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
4673 
4674 
4675 <emphasis role="comment">/*</emphasis>
4676 <emphasis role="comment">REVISION&#32;HISTORY</emphasis>
4677 <emphasis role="comment">================</emphasis>
4678 <emphasis role="comment">v0.9.2&#32;-&#32;2019-05-21</emphasis>
4679 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;warnings.</emphasis>
4680 <emphasis role="comment"></emphasis>
4681 <emphasis role="comment">v0.9.1&#32;-&#32;2019-05-05</emphasis>
4682 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;C89.</emphasis>
4683 <emphasis role="comment">&#32;&#32;-&#32;Change&#32;license&#32;to&#32;choice&#32;of&#32;public&#32;domain&#32;or&#32;MIT-0.</emphasis>
4684 <emphasis role="comment"></emphasis>
4685 <emphasis role="comment">v0.9.0&#32;-&#32;2018-12-16</emphasis>
4686 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Add&#32;new&#32;reading&#32;APIs&#32;for&#32;reading&#32;by&#32;PCM&#32;frames&#32;instead&#32;of&#32;samples.&#32;Old&#32;APIs&#32;have&#32;been&#32;deprecated&#32;and</emphasis>
4687 <emphasis role="comment">&#32;&#32;&#32;&#32;will&#32;be&#32;removed&#32;in&#32;v0.10.0.&#32;Deprecated&#32;APIs&#32;and&#32;their&#32;replacements:</emphasis>
4688 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_read()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames()</emphasis>
4689 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_read_s16()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames_s16()</emphasis>
4690 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_read_f32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames_f32()</emphasis>
4691 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_read_s32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_read_pcm_frames_s32()</emphasis>
4692 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_seek_to_sample()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_seek_to_pcm_frame()</emphasis>
4693 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_write()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_write_pcm_frames()</emphasis>
4694 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_and_read_s16()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_open_and_read_pcm_frames_s16()</emphasis>
4695 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_and_read_f32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_open_and_read_pcm_frames_f32()</emphasis>
4696 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_and_read_s32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav_open_and_read_pcm_frames_s32()</emphasis>
4697 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_file_and_read_s16()&#32;&#32;&#32;-&gt;&#32;drwav_open_file_and_read_pcm_frames_s16()</emphasis>
4698 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_file_and_read_f32()&#32;&#32;&#32;-&gt;&#32;drwav_open_file_and_read_pcm_frames_f32()</emphasis>
4699 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_file_and_read_s32()&#32;&#32;&#32;-&gt;&#32;drwav_open_file_and_read_pcm_frames_s32()</emphasis>
4700 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_memory_and_read_s16()&#32;-&gt;&#32;drwav_open_memory_and_read_pcm_frames_s16()</emphasis>
4701 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_memory_and_read_f32()&#32;-&gt;&#32;drwav_open_memory_and_read_pcm_frames_f32()</emphasis>
4702 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav_open_memory_and_read_s32()&#32;-&gt;&#32;drwav_open_memory_and_read_pcm_frames_s32()</emphasis>
4703 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;drwav::totalSampleCount&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drwav::totalPCMFrameCount</emphasis>
4704 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Rename&#32;drwav_open_and_read_file_*()&#32;to&#32;drwav_open_file_and_read_*().</emphasis>
4705 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Rename&#32;drwav_open_and_read_memory_*()&#32;to&#32;drwav_open_memory_and_read_*().</emphasis>
4706 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;built-in&#32;support&#32;for&#32;smpl&#32;chunks.</emphasis>
4707 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;firing&#32;a&#32;callback&#32;for&#32;each&#32;chunk&#32;in&#32;the&#32;file&#32;at&#32;initialization&#32;time.</emphasis>
4708 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;This&#32;is&#32;enabled&#32;through&#32;the&#32;drwav_init_ex(),&#32;etc.&#32;family&#32;of&#32;APIs.</emphasis>
4709 <emphasis role="comment">&#32;&#32;-&#32;Handle&#32;invalid&#32;FMT&#32;chunks&#32;more&#32;robustly.</emphasis>
4710 <emphasis role="comment"></emphasis>
4711 <emphasis role="comment">v0.8.5&#32;-&#32;2018-09-11</emphasis>
4712 <emphasis role="comment">&#32;&#32;-&#32;Const&#32;correctness.</emphasis>
4713 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;potential&#32;stack&#32;overflow.</emphasis>
4714 <emphasis role="comment"></emphasis>
4715 <emphasis role="comment">v0.8.4&#32;-&#32;2018-08-07</emphasis>
4716 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;64-bit&#32;detection.</emphasis>
4717 <emphasis role="comment"></emphasis>
4718 <emphasis role="comment">v0.8.3&#32;-&#32;2018-08-05</emphasis>
4719 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build&#32;on&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
4720 <emphasis role="comment"></emphasis>
4721 <emphasis role="comment">v0.8.2&#32;-&#32;2018-08-02</emphasis>
4722 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;some&#32;big-endian&#32;bugs.</emphasis>
4723 <emphasis role="comment"></emphasis>
4724 <emphasis role="comment">v0.8.1&#32;-&#32;2018-06-29</emphasis>
4725 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;sequential&#32;writing&#32;APIs.</emphasis>
4726 <emphasis role="comment">&#32;&#32;-&#32;Disable&#32;seeking&#32;in&#32;write&#32;mode.</emphasis>
4727 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;bugs&#32;with&#32;Wave64.</emphasis>
4728 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;typos.</emphasis>
4729 <emphasis role="comment"></emphasis>
4730 <emphasis role="comment">v0.8&#32;-&#32;2018-04-27</emphasis>
4731 <emphasis role="comment">&#32;&#32;-&#32;Bug&#32;fix.</emphasis>
4732 <emphasis role="comment">&#32;&#32;-&#32;Start&#32;using&#32;major.minor.revision&#32;versioning.</emphasis>
4733 <emphasis role="comment"></emphasis>
4734 <emphasis role="comment">v0.7f&#32;-&#32;2018-02-05</emphasis>
4735 <emphasis role="comment">&#32;&#32;-&#32;Restrict&#32;ADPCM&#32;formats&#32;to&#32;a&#32;maximum&#32;of&#32;2&#32;channels.</emphasis>
4736 <emphasis role="comment"></emphasis>
4737 <emphasis role="comment">v0.7e&#32;-&#32;2018-02-02</emphasis>
4738 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;crash.</emphasis>
4739 <emphasis role="comment"></emphasis>
4740 <emphasis role="comment">v0.7d&#32;-&#32;2018-02-01</emphasis>
4741 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;crash.</emphasis>
4742 <emphasis role="comment"></emphasis>
4743 <emphasis role="comment">v0.7c&#32;-&#32;2018-02-01</emphasis>
4744 <emphasis role="comment">&#32;&#32;-&#32;Set&#32;drwav.bytesPerSample&#32;to&#32;0&#32;for&#32;all&#32;compressed&#32;formats.</emphasis>
4745 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;crash&#32;when&#32;reading&#32;16-bit&#32;floating&#32;point&#32;WAV&#32;files.&#32;In&#32;this&#32;case&#32;dr_wav&#32;will&#32;output&#32;silence&#32;for</emphasis>
4746 <emphasis role="comment">&#32;&#32;&#32;&#32;all&#32;format&#32;conversion&#32;reading&#32;APIs&#32;(*_s16,&#32;*_s32,&#32;*_f32&#32;APIs).</emphasis>
4747 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;some&#32;divide-by-zero&#32;errors.</emphasis>
4748 <emphasis role="comment"></emphasis>
4749 <emphasis role="comment">v0.7b&#32;-&#32;2018-01-22</emphasis>
4750 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;errors&#32;with&#32;seeking&#32;of&#32;compressed&#32;formats.</emphasis>
4751 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;error&#32;when&#32;DR_WAV_NO_CONVERSION_API</emphasis>
4752 <emphasis role="comment"></emphasis>
4753 <emphasis role="comment">v0.7a&#32;-&#32;2017-11-17</emphasis>
4754 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;some&#32;GCC&#32;warnings.</emphasis>
4755 <emphasis role="comment"></emphasis>
4756 <emphasis role="comment">v0.7&#32;-&#32;2017-11-04</emphasis>
4757 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;writing&#32;APIs.</emphasis>
4758 <emphasis role="comment"></emphasis>
4759 <emphasis role="comment">v0.6&#32;-&#32;2017-08-16</emphasis>
4760 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Rename&#32;dr_*&#32;types&#32;to&#32;drwav_*.</emphasis>
4761 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;custom&#32;implementations&#32;of&#32;malloc(),&#32;realloc(),&#32;etc.</emphasis>
4762 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;Microsoft&#32;ADPCM.</emphasis>
4763 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;IMA&#32;ADPCM&#32;(DVI,&#32;format&#32;code&#32;0x11).</emphasis>
4764 <emphasis role="comment">&#32;&#32;-&#32;Optimizations&#32;to&#32;drwav_read_s16().</emphasis>
4765 <emphasis role="comment">&#32;&#32;-&#32;Bug&#32;fixes.</emphasis>
4766 <emphasis role="comment"></emphasis>
4767 <emphasis role="comment">v0.5g&#32;-&#32;2017-07-16</emphasis>
4768 <emphasis role="comment">&#32;&#32;-&#32;Change&#32;underlying&#32;type&#32;for&#32;booleans&#32;to&#32;unsigned.</emphasis>
4769 <emphasis role="comment"></emphasis>
4770 <emphasis role="comment">v0.5f&#32;-&#32;2017-04-04</emphasis>
4771 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;minor&#32;bug&#32;with&#32;drwav_open_and_read_s16()&#32;and&#32;family.</emphasis>
4772 <emphasis role="comment"></emphasis>
4773 <emphasis role="comment">v0.5e&#32;-&#32;2016-12-29</emphasis>
4774 <emphasis role="comment">&#32;&#32;-&#32;Added&#32;support&#32;for&#32;reading&#32;samples&#32;as&#32;signed&#32;16-bit&#32;integers.&#32;Use&#32;the&#32;_s16()&#32;family&#32;of&#32;APIs&#32;for&#32;this.</emphasis>
4775 <emphasis role="comment">&#32;&#32;-&#32;Minor&#32;fixes&#32;to&#32;documentation.</emphasis>
4776 <emphasis role="comment"></emphasis>
4777 <emphasis role="comment">v0.5d&#32;-&#32;2016-12-28</emphasis>
4778 <emphasis role="comment">&#32;&#32;-&#32;Use&#32;drwav_int*&#32;and&#32;drwav_uint*&#32;sized&#32;types&#32;to&#32;improve&#32;compiler&#32;support.</emphasis>
4779 <emphasis role="comment"></emphasis>
4780 <emphasis role="comment">v0.5c&#32;-&#32;2016-11-11</emphasis>
4781 <emphasis role="comment">&#32;&#32;-&#32;Properly&#32;handle&#32;JUNK&#32;chunks&#32;that&#32;come&#32;before&#32;the&#32;FMT&#32;chunk.</emphasis>
4782 <emphasis role="comment"></emphasis>
4783 <emphasis role="comment">v0.5b&#32;-&#32;2016-10-23</emphasis>
4784 <emphasis role="comment">&#32;&#32;-&#32;A&#32;minor&#32;change&#32;to&#32;drwav_bool8&#32;and&#32;drwav_bool32&#32;types.</emphasis>
4785 <emphasis role="comment"></emphasis>
4786 <emphasis role="comment">v0.5a&#32;-&#32;2016-10-11</emphasis>
4787 <emphasis role="comment">&#32;&#32;-&#32;Fixed&#32;a&#32;bug&#32;with&#32;drwav_open_and_read()&#32;and&#32;family&#32;due&#32;to&#32;incorrect&#32;argument&#32;ordering.</emphasis>
4788 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;A-law&#32;and&#32;mu-law&#32;efficiency.</emphasis>
4789 <emphasis role="comment"></emphasis>
4790 <emphasis role="comment">v0.5&#32;-&#32;2016-09-29</emphasis>
4791 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE.&#32;Swap&#32;the&#32;order&#32;of&#32;&quot;channels&quot;&#32;and&#32;&quot;sampleRate&quot;&#32;parameters&#32;in&#32;drwav_open_and_read*().&#32;Rationale&#32;for&#32;this&#32;is&#32;to</emphasis>
4792 <emphasis role="comment">&#32;&#32;&#32;&#32;keep&#32;it&#32;consistent&#32;with&#32;dr_audio&#32;and&#32;dr_flac.</emphasis>
4793 <emphasis role="comment"></emphasis>
4794 <emphasis role="comment">v0.4b&#32;-&#32;2016-09-18</emphasis>
4795 <emphasis role="comment">&#32;&#32;-&#32;Fixed&#32;a&#32;typo&#32;in&#32;documentation.</emphasis>
4796 <emphasis role="comment"></emphasis>
4797 <emphasis role="comment">v0.4a&#32;-&#32;2016-09-18</emphasis>
4798 <emphasis role="comment">&#32;&#32;-&#32;Fixed&#32;a&#32;typo.</emphasis>
4799 <emphasis role="comment">&#32;&#32;-&#32;Change&#32;date&#32;format&#32;to&#32;ISO&#32;8601&#32;(YYYY-MM-DD)</emphasis>
4800 <emphasis role="comment"></emphasis>
4801 <emphasis role="comment">v0.4&#32;-&#32;2016-07-13</emphasis>
4802 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE.&#32;Make&#32;onSeek&#32;consistent&#32;with&#32;dr_flac.</emphasis>
4803 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE.&#32;Rename&#32;drwav_seek()&#32;to&#32;drwav_seek_to_sample()&#32;for&#32;clarity&#32;and&#32;consistency&#32;with&#32;dr_flac.</emphasis>
4804 <emphasis role="comment">&#32;&#32;-&#32;Added&#32;support&#32;for&#32;Sony&#32;Wave64.</emphasis>
4805 <emphasis role="comment"></emphasis>
4806 <emphasis role="comment">v0.3a&#32;-&#32;2016-05-28</emphasis>
4807 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE.&#32;Return&#32;drwav_bool32&#32;instead&#32;of&#32;int&#32;in&#32;onSeek&#32;callback.</emphasis>
4808 <emphasis role="comment">&#32;&#32;-&#32;Fixed&#32;a&#32;memory&#32;leak.</emphasis>
4809 <emphasis role="comment"></emphasis>
4810 <emphasis role="comment">v0.3&#32;-&#32;2016-05-22</emphasis>
4811 <emphasis role="comment">&#32;&#32;-&#32;Lots&#32;of&#32;API&#32;changes&#32;for&#32;consistency.</emphasis>
4812 <emphasis role="comment"></emphasis>
4813 <emphasis role="comment">v0.2a&#32;-&#32;2016-05-16</emphasis>
4814 <emphasis role="comment">&#32;&#32;-&#32;Fixed&#32;Linux/GCC&#32;build.</emphasis>
4815 <emphasis role="comment"></emphasis>
4816 <emphasis role="comment">v0.2&#32;-&#32;2016-05-11</emphasis>
4817 <emphasis role="comment">&#32;&#32;-&#32;Added&#32;support&#32;for&#32;reading&#32;data&#32;as&#32;signed&#32;32-bit&#32;PCM&#32;for&#32;consistency&#32;with&#32;dr_flac.</emphasis>
4818 <emphasis role="comment"></emphasis>
4819 <emphasis role="comment">v0.1a&#32;-&#32;2016-05-07</emphasis>
4820 <emphasis role="comment">&#32;&#32;-&#32;Fixed&#32;a&#32;bug&#32;in&#32;drwav_open_file()&#32;where&#32;the&#32;file&#32;handle&#32;would&#32;not&#32;be&#32;closed&#32;if&#32;the&#32;loader&#32;failed&#32;to&#32;initialize.</emphasis>
4821 <emphasis role="comment"></emphasis>
4822 <emphasis role="comment">v0.1&#32;-&#32;2016-05-04</emphasis>
4823 <emphasis role="comment">&#32;&#32;-&#32;Initial&#32;versioned&#32;release.</emphasis>
4824 <emphasis role="comment">*/</emphasis>
4825 
4826 <emphasis role="comment">/*</emphasis>
4827 <emphasis role="comment">This&#32;software&#32;is&#32;available&#32;as&#32;a&#32;choice&#32;of&#32;the&#32;following&#32;licenses.&#32;Choose</emphasis>
4828 <emphasis role="comment">whichever&#32;you&#32;prefer.</emphasis>
4829 <emphasis role="comment"></emphasis>
4830 <emphasis role="comment">===============================================================================</emphasis>
4831 <emphasis role="comment">ALTERNATIVE&#32;1&#32;-&#32;Public&#32;Domain&#32;(www.unlicense.org)</emphasis>
4832 <emphasis role="comment">===============================================================================</emphasis>
4833 <emphasis role="comment">This&#32;is&#32;free&#32;and&#32;unencumbered&#32;software&#32;released&#32;into&#32;the&#32;public&#32;domain.</emphasis>
4834 <emphasis role="comment"></emphasis>
4835 <emphasis role="comment">Anyone&#32;is&#32;free&#32;to&#32;copy,&#32;modify,&#32;publish,&#32;use,&#32;compile,&#32;sell,&#32;or&#32;distribute&#32;this</emphasis>
4836 <emphasis role="comment">software,&#32;either&#32;in&#32;source&#32;code&#32;form&#32;or&#32;as&#32;a&#32;compiled&#32;binary,&#32;for&#32;any&#32;purpose,</emphasis>
4837 <emphasis role="comment">commercial&#32;or&#32;non-commercial,&#32;and&#32;by&#32;any&#32;means.</emphasis>
4838 <emphasis role="comment"></emphasis>
4839 <emphasis role="comment">In&#32;jurisdictions&#32;that&#32;recognize&#32;copyright&#32;laws,&#32;the&#32;author&#32;or&#32;authors&#32;of&#32;this</emphasis>
4840 <emphasis role="comment">software&#32;dedicate&#32;any&#32;and&#32;all&#32;copyright&#32;interest&#32;in&#32;the&#32;software&#32;to&#32;the&#32;public</emphasis>
4841 <emphasis role="comment">domain.&#32;We&#32;make&#32;this&#32;dedication&#32;for&#32;the&#32;benefit&#32;of&#32;the&#32;public&#32;at&#32;large&#32;and&#32;to</emphasis>
4842 <emphasis role="comment">the&#32;detriment&#32;of&#32;our&#32;heirs&#32;and&#32;successors.&#32;We&#32;intend&#32;this&#32;dedication&#32;to&#32;be&#32;an</emphasis>
4843 <emphasis role="comment">overt&#32;act&#32;of&#32;relinquishment&#32;in&#32;perpetuity&#32;of&#32;all&#32;present&#32;and&#32;future&#32;rights&#32;to</emphasis>
4844 <emphasis role="comment">this&#32;software&#32;under&#32;copyright&#32;law.</emphasis>
4845 <emphasis role="comment"></emphasis>
4846 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
4847 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
4848 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
4849 <emphasis role="comment">AUTHORS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN</emphasis>
4850 <emphasis role="comment">ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION</emphasis>
4851 <emphasis role="comment">WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
4852 <emphasis role="comment"></emphasis>
4853 <emphasis role="comment">For&#32;more&#32;information,&#32;please&#32;refer&#32;to&#32;&lt;http://unlicense.org/&gt;</emphasis>
4854 <emphasis role="comment"></emphasis>
4855 <emphasis role="comment">===============================================================================</emphasis>
4856 <emphasis role="comment">ALTERNATIVE&#32;2&#32;-&#32;MIT&#32;No&#32;Attribution</emphasis>
4857 <emphasis role="comment">===============================================================================</emphasis>
4858 <emphasis role="comment">Copyright&#32;2018&#32;David&#32;Reid</emphasis>
4859 <emphasis role="comment"></emphasis>
4860 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
4861 <emphasis role="comment">this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
4862 <emphasis role="comment">the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
4863 <emphasis role="comment">use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies</emphasis>
4864 <emphasis role="comment">of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do</emphasis>
4865 <emphasis role="comment">so.</emphasis>
4866 <emphasis role="comment"></emphasis>
4867 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
4868 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
4869 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
4870 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
4871 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
4872 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
4873 <emphasis role="comment">SOFTWARE.</emphasis>
4874 <emphasis role="comment">*/</emphasis>
</programlisting></section>
