<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__rotate__vector" xml:lang="en-US">
<title>GLM_GTX_rotate_vector</title>
<indexterm><primary>GLM_GTX_rotate_vector</primary></indexterm>
Collaboration diagram for GLM_GTX_rotate_vector:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga13360ebcb219dc64f9c58964ad99337c">glm::slerp</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga425a0ad3cfa89f8cfee1bab79021a755">glm::rotate</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1gaa9033100ff2f16c01fefb01a88769f27">glm::rotate</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;normal)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga49e6da0fe1423e934b338a62863f5fdc">glm::rotate</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;normal)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1gac6eaef961618708cb36c1af282ffe31a">glm::rotateX</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga919122e3280a912f4bece1d7d3db7d37">glm::rotateY</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga94df0a5dbacf290055b52fa8f57bc3ef">glm::rotateZ</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga673011e54271028cbf095ab39f870d77">glm::rotateX</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga60a21500f2564a7ed52cab7fb207ca1f">glm::rotateY</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga7baf259d6570d93e260ed3b5584239ba">glm::rotateZ</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__rotate__vector_1ga83099d005b4af6a7a0d882ff6eb1a536">glm::orientation</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;Normal, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;Up)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/rotate_vector.hpp&gt; to use the features of this extension.</para>

<para>Function to directly rotate a vector </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__rotate__vector_1ga83099d005b4af6a7a0d882ff6eb1a536"/><section>
    <title>orientation()</title>
<indexterm><primary>orientation</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>orientation</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::orientation (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; Normal, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; Up)</computeroutput></para>
<para>Build a rotation matrix from a normal and a up vector. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga83099d005b4af6a7a0d882ff6eb1a536_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga83099d005b4af6a7a0d882ff6eb1a536_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga425a0ad3cfa89f8cfee1bab79021a755"/><section>
    <title>rotate()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>rotate</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; glm::rotate (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a two dimensional vector. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga425a0ad3cfa89f8cfee1bab79021a755_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1gaa9033100ff2f16c01fefb01a88769f27"/><section>
    <title>rotate()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>rotate</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::rotate (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v, T const &amp; angle, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; normal)</computeroutput></para>
<para>Rotate a three dimensional vector around an axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_gaa9033100ff2f16c01fefb01a88769f27_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga49e6da0fe1423e934b338a62863f5fdc"/><section>
    <title>rotate()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>rotate</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; glm::rotate (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; v, T const &amp; angle, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; normal)</computeroutput></para>
<para>Rotate a four dimensional vector around an axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga49e6da0fe1423e934b338a62863f5fdc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1gac6eaef961618708cb36c1af282ffe31a"/><section>
    <title>rotateX()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>rotateX</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotateX</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::rotateX (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a three dimensional vector around the X axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_gac6eaef961618708cb36c1af282ffe31a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_gac6eaef961618708cb36c1af282ffe31a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga673011e54271028cbf095ab39f870d77"/><section>
    <title>rotateX()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>rotateX</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotateX</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; glm::rotateX (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a four dimensional vector around the X axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga673011e54271028cbf095ab39f870d77_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga919122e3280a912f4bece1d7d3db7d37"/><section>
    <title>rotateY()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>rotateY</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotateY</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::rotateY (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a three dimensional vector around the Y axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga919122e3280a912f4bece1d7d3db7d37_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga919122e3280a912f4bece1d7d3db7d37_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga60a21500f2564a7ed52cab7fb207ca1f"/><section>
    <title>rotateY()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>rotateY</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotateY</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; glm::rotateY (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a four dimensional vector around the Y axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga60a21500f2564a7ed52cab7fb207ca1f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga94df0a5dbacf290055b52fa8f57bc3ef"/><section>
    <title>rotateZ()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>rotateZ</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotateZ</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::rotateZ (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a three dimensional vector around the Z axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga94df0a5dbacf290055b52fa8f57bc3ef_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga94df0a5dbacf290055b52fa8f57bc3ef_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga7baf259d6570d93e260ed3b5584239ba"/><section>
    <title>rotateZ()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>rotateZ</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>rotateZ</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; glm::rotateZ (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; v, T const &amp; angle)</computeroutput></para>
<para>Rotate a four dimensional vector around the Z axis. From GLM_GTX_rotate_vector extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__rotate__vector_ga7baf259d6570d93e260ed3b5584239ba_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__rotate__vector_1ga13360ebcb219dc64f9c58964ad99337c"/><section>
    <title>slerp()</title>
<indexterm><primary>slerp</primary><secondary>GLM_GTX_rotate_vector</secondary></indexterm>
<indexterm><primary>GLM_GTX_rotate_vector</primary><secondary>slerp</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::slerp (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; x, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; y, T const &amp; a)</computeroutput></para>
<para>Returns Spherical interpolation between two vectors</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>x</entry><entry>
<para>A first vector </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>A second vector </para>
</entry>
                            </row>
                            <row>
<entry>a</entry><entry>
<para>Interpolation factor. The interpolation is defined beyond the range [0, 1].</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__gtx__rotate__vector">GLM_GTX_rotate_vector</link> </para>
</formalpara>
</para>
</section>
</section>
</section>
