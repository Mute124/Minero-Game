<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2parallel_2par__loop_8h_source" xml:lang="en-US">
<title>par_loop.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/par_loop.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
31 <emphasis role="comment">//&#32;Written&#32;by&#32;Felix&#32;Putze.</emphasis>
32 
33 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_PAR_LOOP_H</emphasis>
34 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_PAR_LOOP_H&#32;1</emphasis>
35 
36 <emphasis role="preprocessor">#include&#32;&lt;omp.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;parallel/settings.h&gt;</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;parallel/base.h&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;parallel/equally_split.h&gt;</emphasis>
40 
41 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
42 {
61 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Op,
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Fu,
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Red,
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Result&gt;
66 &#32;&#32;&#32;&#32;_Op
67 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a12c48efb47ea3e00a7ef666d595ae185">__for_each_template_random_access_ed</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Op&#32;__o,&#32;_Fu&amp;&#32;__f,&#32;_Red&#32;__r,
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Result&#32;__base,&#32;_Result&amp;&#32;__output,
70 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;::difference_type&#32;__bound)
71 &#32;&#32;&#32;&#32;{
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;&#32;_TraitsType;
73 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::difference_type&#32;_DifferenceType;
74 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_DifferenceType&#32;__length&#32;=&#32;__end&#32;-&#32;__begin;
75 &#32;&#32;&#32;&#32;&#32;&#32;_Result&#32;*__thread_results;
76 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>*&#32;__constructed;
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__num_threads&#32;=&#32;__gnu_parallel::min&lt;_DifferenceType&gt;
79 &#32;&#32;&#32;&#32;(<link linkend="_namespace____gnu__parallel_1aa72851b809c2b314bc09580c3512f281">__get_max_threads</link>(),&#32;__length);
80 
81 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;parallel&#32;num_threads(__num_threads)</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;{
83 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;single</emphasis>
84 &#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;__num_threads&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ac42ead04531fd33507e3d3a6f648b200">omp_get_num_threads</link>();
86 &#32;&#32;&#32;&#32;&#32;&#32;__thread_results&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_Result*<emphasis role="keyword">&gt;</emphasis>
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(::operator&#32;<emphasis role="keyword">new</emphasis>(__num_threads&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(_Result)));
88 &#32;&#32;&#32;&#32;&#32;&#32;__constructed&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>[__num_threads];
89 &#32;&#32;&#32;&#32;}
90 
91 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__iam&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1aa03cf372d8266eef024262a68d304e1b">omp_get_thread_num</link>();
92 
93 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Neutral&#32;element.</emphasis>
94 &#32;&#32;&#32;&#32;_Result*&#32;__reduct;
95 
96 &#32;&#32;&#32;&#32;_DifferenceType
97 &#32;&#32;&#32;&#32;&#32;&#32;__start&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a8e3a77cb920e419144b72d6d20167dfd">__equally_split_point</link>(__length,&#32;__num_threads,&#32;__iam),
98 &#32;&#32;&#32;&#32;&#32;&#32;__stop&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a8e3a77cb920e419144b72d6d20167dfd">__equally_split_point</link>(__length,&#32;__num_threads,&#32;__iam&#32;+&#32;1);
99 
100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__start&#32;&lt;&#32;__stop)
101 &#32;&#32;&#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reduct&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;_Result(__f(__o,&#32;__begin&#32;+&#32;__start));
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__start;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__constructed[__iam]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
105 &#32;&#32;&#32;&#32;&#32;&#32;}
106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;__constructed[__iam]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
108 
109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__start&#32;&lt;&#32;__stop;&#32;++__start)
110 &#32;&#32;&#32;&#32;&#32;&#32;*__reduct&#32;=&#32;__r(*__reduct,&#32;__f(__o,&#32;__begin&#32;+&#32;__start));
111 
112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__constructed[__iam])
113 &#32;&#32;&#32;&#32;&#32;&#32;{
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::new(&amp;__thread_results[__iam])&#32;_Result(*__reduct);
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;__reduct;
116 &#32;&#32;&#32;&#32;&#32;&#32;}
117 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//parallel</emphasis>
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;__num_threads;&#32;++__i)
120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__constructed[__i])
121 &#32;&#32;&#32;&#32;&#32;&#32;{
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__output&#32;=&#32;__r(__output,&#32;__thread_results[__i]);
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_results[__i].~_Result();
124 &#32;&#32;&#32;&#32;&#32;&#32;}
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Points&#32;to&#32;last&#32;element&#32;processed&#32;(needed&#32;as&#32;return&#32;value&#32;for</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;some&#32;algorithms&#32;like&#32;transform).</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;__f._M_finish_iterator&#32;=&#32;__begin&#32;+&#32;__length;
129 
130 &#32;&#32;&#32;&#32;&#32;&#32;::operator&#32;<emphasis role="keyword">delete</emphasis>(__thread_results);
131 
132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__constructed;
133 
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__o;
135 &#32;&#32;&#32;&#32;}
136 
137 }&#32;<emphasis role="comment">//&#32;end&#32;namespace</emphasis>
138 
139 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_PAR_LOOP_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
