<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2debug_2safe__base_8h_source" xml:lang="en-US">
<title>safe_base.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/debug/safe_base.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Safe&#32;sequence/iterator&#32;base&#32;implementation&#32;&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2003-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
29 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_DEBUG_SAFE_BASE_H</emphasis>
30 <emphasis role="preprocessor">#define&#32;_GLIBCXX_DEBUG_SAFE_BASE_H&#32;1</emphasis>
31 
32 <emphasis role="preprocessor">#include&#32;&lt;ext/concurrence.h&gt;</emphasis>
33 
34 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__debug">__gnu_debug</link>
35 {
36 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Safe_sequence_base;
37 
50 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>
51 &#32;&#32;{
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>;
53 
54 &#32;&#32;<emphasis role="keyword">public</emphasis>:
57 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>*&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad7ffe137fed29c851275dc5a9ddf06c1">_M_sequence</link>;
58 
66 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad07568d7660eb8b85493b548d10c637a">_M_version</link>;
67 
70 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>;
71 
74 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>;
75 
76 &#32;&#32;<emphasis role="keyword">protected</emphasis>:
78 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a3e6e1cb37b5585e5ee3b254bbd7d5cbb">_Safe_iterator_base</link>()
79 &#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad7ffe137fed29c851275dc5a9ddf06c1">_M_sequence</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad07568d7660eb8b85493b548d10c637a">_M_version</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>(0)
80 &#32;&#32;&#32;&#32;{&#32;}
81 
89 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a74a667bf14e3feb71571c352430fcf12">_Safe_iterator_base</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>*&#32;__seq,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__constant)
90 &#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad7ffe137fed29c851275dc5a9ddf06c1">_M_sequence</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad07568d7660eb8b85493b548d10c637a">_M_version</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>(0)
91 &#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a51809843192abdf6415ec0342fb0fdb9">_M_attach</link>(<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>*<emphasis role="keyword">&gt;</emphasis>(__seq),&#32;__constant);&#32;}
92 
96 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a0993fe5b5c385572b6261e2100f01191">_Safe_iterator_base</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>&amp;&#32;__x,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__constant)
97 &#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad7ffe137fed29c851275dc5a9ddf06c1">_M_sequence</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad07568d7660eb8b85493b548d10c637a">_M_version</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>(0)
98 &#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a51809843192abdf6415ec0342fb0fdb9">_M_attach</link>(__x.<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad7ffe137fed29c851275dc5a9ddf06c1">_M_sequence</link>,&#32;__constant);&#32;}
99 
100 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1aa04a365fa43696b90e0d490682639065">~_Safe_iterator_base</link>()&#32;{&#32;this-&gt;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a8deb31273aaf1912a5540ae046581c54">_M_detach</link>();&#32;}
101 
103 &#32;&#32;&#32;&#32;__gnu_cxx::__mutex&amp;
104 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a394cc3f97fe4fb1c7d4378faa0b02877">_M_get_mutex</link>()&#32;throw&#32;();
105 
111 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
112 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a51809843192abdf6415ec0342fb0fdb9">_M_attach</link>(<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>*&#32;__seq,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__constant);
113 
115 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
116 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a45148b9f8f44371fedfd62f39827a18b">_M_attach_single</link>(<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>*&#32;__seq,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__constant)&#32;throw&#32;();
117 
121 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
122 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a8deb31273aaf1912a5540ae046581c54">_M_detach</link>();
123 
124 &#32;&#32;public:
126 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
127 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1af1899eb4a27c3de8a74e9bf24dc920b4">_M_detach_single</link>()&#32;throw&#32;();
128 
130 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
131 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a66a6d55e473c9ee51324b1bd3a4d087d">_M_attached_to</link>(const&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>*&#32;__seq)<emphasis role="keyword">&#32;const</emphasis>
132 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad7ffe137fed29c851275dc5a9ddf06c1">_M_sequence</link>&#32;==&#32;__seq;&#32;}
133 
135 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a1cfdc101e86feb8a053ddc71bbef339b">_GLIBCXX_PURE</link>&#32;<emphasis role="keywordtype">bool</emphasis>
136 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1aefb17f520b7e88212cf86e552d440858">_M_singular</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;throw&#32;();
137 
141 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a1cfdc101e86feb8a053ddc71bbef339b">_GLIBCXX_PURE</link>&#32;<emphasis role="keywordtype">bool</emphasis>
142 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a180805af5a3c839c5d221660b0faae97">_M_can_compare</link>(const&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>&amp;&#32;__x)&#32;const&#32;throw&#32;();
143 
145 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
146 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a231c2eca561476c79c326ae696512cd2">_M_invalidate</link>()
147 &#32;&#32;&#32;&#32;{&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1ad07568d7660eb8b85493b548d10c637a">_M_version</link>&#32;=&#32;0;&#32;}
148 
150 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
151 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a1546bb95326eb29d175cb45140a128dd">_M_reset</link>()&#32;throw&#32;();
152 
154 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
155 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a15200550c9de14f693bd2fd9badbce2b">_M_unlink</link>()&#32;throw&#32;()
156 &#32;&#32;&#32;&#32;{
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>)
158 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>-&gt;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>&#32;=&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>;
159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>)
160 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7c9c250dea264463f74591429f8ba123">_M_next</link>-&gt;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>&#32;=&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1a7f653b7476705d7d0445edac938ac78f">_M_prior</link>;
161 &#32;&#32;&#32;&#32;}
162 &#32;&#32;};
163 
167 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
168 &#32;&#32;<link linkend="_namespace____gnu__debug_1a1fd55725dcc2e8966031ccb27778e2b8">__check_singular_aux</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;__x)
169 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__x-&gt;<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1aefb17f520b7e88212cf86e552d440858">_M_singular</link>();&#32;}
170 
188 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>
189 &#32;&#32;{
190 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>;
191 
192 &#32;&#32;<emphasis role="keyword">public</emphasis>:
194 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a715ed592a623b3bc625d773347216c32">_M_iterators</link>;
195 
197 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ad9e21ce9e18f4d060195458d3c197112">_M_const_iterators</link>;
198 
200 &#32;&#32;&#32;&#32;<emphasis role="keyword">mutable</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1af796b1fd115ea27cd078eeb7e4909bd5">_M_version</link>;
201 
202 &#32;&#32;<emphasis role="keyword">protected</emphasis>:
203 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;with&#32;a&#32;version&#32;number&#32;of&#32;1&#32;and&#32;no&#32;iterators</emphasis>
204 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link>()&#32;_GLIBCXX_NOEXCEPT
205 &#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a715ed592a623b3bc625d773347216c32">_M_iterators</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ad9e21ce9e18f4d060195458d3c197112">_M_const_iterators</link>(0),&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1af796b1fd115ea27cd078eeb7e4909bd5">_M_version</link>(1)
206 &#32;&#32;&#32;&#32;{&#32;}
207 
208 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
209 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>&amp;)&#32;noexcept
210 &#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link>()&#32;{&#32;}
211 
212 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;constructor&#32;swap&#32;iterators.</emphasis>
213 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link>(<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link>&amp;&amp;&#32;__seq)&#32;noexcept
214 &#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link>()
215 &#32;&#32;&#32;&#32;{&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a8782fb392e549945fd9e910caf3b1c23">_M_swap</link>(__seq);&#32;}
216 <emphasis role="preprocessor">#endif</emphasis>
217 
220 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a9061ce48f8c5627d61a2e4a72a43f479">~_Safe_sequence_base</link>()
221 &#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1acebac46f833f903deb7c094fc26cbea1">_M_detach_all</link>();&#32;}
222 
224 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
225 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1acebac46f833f903deb7c094fc26cbea1">_M_detach_all</link>();
226 
231 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
232 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1aadde2fc883be085fc4588c1ef442cd3d">_M_detach_singular</link>();
233 
239 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
240 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a75f6eb02cd1721b550bd5eb205ed6920">_M_revalidate_singular</link>();
241 
247 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
248 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a8782fb392e549945fd9e910caf3b1c23">_M_swap</link>(<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link>&amp;&#32;__x)&#32;_GLIBCXX_USE_NOEXCEPT;
249 
251 &#32;&#32;&#32;&#32;__gnu_cxx::__mutex&amp;
252 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a688ceccbb7f5cfb2b4e95f569df4191d">_M_get_mutex</link>()&#32;throw&#32;();
253 
255 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
256 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a58a4c8925457fcf371457ec9f071a31f">_M_invalidate_all</link>()<emphasis role="keyword">&#32;const</emphasis>
257 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(++<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1af796b1fd115ea27cd078eeb7e4909bd5">_M_version</link>&#32;==&#32;0)&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence__base_1af796b1fd115ea27cd078eeb7e4909bd5">_M_version</link>&#32;=&#32;1;&#32;}
258 
259 &#32;&#32;<emphasis role="keyword">private</emphasis>:
261 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
262 &#32;&#32;&#32;&#32;_M_attach(<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;__it,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__constant);
263 
265 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
266 &#32;&#32;&#32;&#32;_M_attach_single(<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;__it,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__constant)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
267 
269 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
270 &#32;&#32;&#32;&#32;_M_detach(<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;__it);
271 
273 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
274 &#32;&#32;&#32;&#32;_M_detach_single(<link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link>*&#32;__it)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
275 &#32;&#32;};
276 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_debug</emphasis>
277 
278 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
