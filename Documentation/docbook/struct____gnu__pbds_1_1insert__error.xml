<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__pbds_1_1insert__error" xml:lang="en-US">
<title>__gnu_pbds::insert_error Struct Reference</title>
<indexterm><primary>__gnu_pbds::insert_error</primary></indexterm>
<para>
<computeroutput>#include &lt;exception.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::insert_error:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1insert__error__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::insert_error:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1insert__error__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Additional Inherited Members    </title>
Public Member Functions inherited from <link linkend="_struct____gnu__pbds_1_1container__error">__gnu_pbds::container_error</link>        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1container__error_1afa81d9936c1706639e3a82d7959e1078">container_error</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1container__error_1afa81d9936c1706639e3a82d7959e1078">container_error</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1container__error_1afa81d9936c1706639e3a82d7959e1078">container_error</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>An entry cannot be inserted into a container object for logical reasons (not, e.g., if memory is unabvailable, in which case the allocator_type&apos;s exception will be thrown). </para>
<para>
The documentation for this struct was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2exception_8hpp">exception.hpp</link></section>
</section>
