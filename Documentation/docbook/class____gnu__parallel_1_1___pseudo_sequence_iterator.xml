<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator" xml:lang="en-US">
<title>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary></indexterm>
<para>

<para>_Iterator associated with <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>. If features the usual random-access iterator functionality. </para>
 
</para>
<para>
<computeroutput>#include &lt;base.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a574d92a66073699dae24d5080362898f">_PseudoSequenceIterator</link> (const _Tp &amp;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> __pos)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a36388bd8d2d83092cf15a6de5f012988">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8a24bc1098da3bde064977aa2096c439">operator++</link> (int)</para>
</listitem>
            <listitem><para>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1afebb1684631d4e50b8db994941191108">operator*</link> () const</para>
</listitem>
            <listitem><para>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae9a3dec224beaeda64d69fda041b63ea">operator[]</link> (<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link>) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a4a3fbcf4eb55bdb6b7a550c15ff19c45">operator==</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8f7ff1b11e997996b587f62146298e7d">operator!=</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae52e1365267623de55b9de1facc0b930">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a574d92a66073699dae24d5080362898f">_PseudoSequenceIterator</link> (const _Tp &amp;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> __pos)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a36388bd8d2d83092cf15a6de5f012988">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8a24bc1098da3bde064977aa2096c439">operator++</link> (int)</para>
</listitem>
            <listitem><para>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1afebb1684631d4e50b8db994941191108">operator*</link> () const</para>
</listitem>
            <listitem><para>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae9a3dec224beaeda64d69fda041b63ea">operator[]</link> (<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link>) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a4a3fbcf4eb55bdb6b7a550c15ff19c45">operator==</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8f7ff1b11e997996b587f62146298e7d">operator!=</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae52e1365267623de55b9de1facc0b930">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a574d92a66073699dae24d5080362898f">_PseudoSequenceIterator</link> (const _Tp &amp;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> __pos)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a36388bd8d2d83092cf15a6de5f012988">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8a24bc1098da3bde064977aa2096c439">operator++</link> (int)</para>
</listitem>
            <listitem><para>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1afebb1684631d4e50b8db994941191108">operator*</link> () const</para>
</listitem>
            <listitem><para>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae9a3dec224beaeda64d69fda041b63ea">operator[]</link> (<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link>) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a4a3fbcf4eb55bdb6b7a550c15ff19c45">operator==</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8f7ff1b11e997996b587f62146298e7d">operator!=</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae52e1365267623de55b9de1facc0b930">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp;__i2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Tp, typename _DifferenceTp&gt;<?linebreak?>class __gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</title></simplesect>

<para>_Iterator associated with <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>. If features the usual random-access iterator functionality. </para>



<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>_Tp</entry><entry>
<para>Sequence _M_value type. </para>
</entry>
                            </row>
                            <row>
<entry>_DifferenceTp</entry><entry>
<para>Sequence difference type. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c"/><section>
    <title>_DifferenceType<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c"/><section>
    <title>_DifferenceType<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c"/><section>
    <title>_DifferenceType<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::_DifferenceType</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a574d92a66073699dae24d5080362898f"/><section>
    <title>_PseudoSequenceIterator()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_PseudoSequenceIterator</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_PseudoSequenceIterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::_PseudoSequenceIterator (const _Tp &amp; __val, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> __pos)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a574d92a66073699dae24d5080362898f"/><section>
    <title>_PseudoSequenceIterator()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_PseudoSequenceIterator</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_PseudoSequenceIterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::_PseudoSequenceIterator (const _Tp &amp; __val, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> __pos)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a574d92a66073699dae24d5080362898f"/><section>
    <title>_PseudoSequenceIterator()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_PseudoSequenceIterator</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_PseudoSequenceIterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::_PseudoSequenceIterator (const _Tp &amp; __val, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> __pos)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8f7ff1b11e997996b587f62146298e7d"/><section>
    <title>operator!=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator!= (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8f7ff1b11e997996b587f62146298e7d"/><section>
    <title>operator!=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator!= (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8f7ff1b11e997996b587f62146298e7d"/><section>
    <title>operator!=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator!= (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1afebb1684631d4e50b8db994941191108"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1afebb1684631d4e50b8db994941191108"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1afebb1684631d4e50b8db994941191108"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a36388bd8d2d83092cf15a6de5f012988"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a36388bd8d2d83092cf15a6de5f012988"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a36388bd8d2d83092cf15a6de5f012988"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8a24bc1098da3bde064977aa2096c439"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8a24bc1098da3bde064977aa2096c439"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a8a24bc1098da3bde064977aa2096c439"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae52e1365267623de55b9de1facc0b930"/><section>
    <title>operator-()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae52e1365267623de55b9de1facc0b930"/><section>
    <title>operator-()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae52e1365267623de55b9de1facc0b930"/><section>
    <title>operator-()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a4a3fbcf4eb55bdb6b7a550c15ff19c45"/><section>
    <title>operator==()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator== (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a4a3fbcf4eb55bdb6b7a550c15ff19c45"/><section>
    <title>operator==()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator== (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a4a3fbcf4eb55bdb6b7a550c15ff19c45"/><section>
    <title>operator==()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator== (const <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt; &amp; __i2)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae9a3dec224beaeda64d69fda041b63ea"/><section>
    <title>operator[]()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator[] (<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae9a3dec224beaeda64d69fda041b63ea"/><section>
    <title>operator[]()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator[] (<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1ae9a3dec224beaeda64d69fda041b63ea"/><section>
    <title>operator[]()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>const _Tp &amp; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator</link>&lt; _Tp, _DifferenceTp &gt;::operator[] (<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator_1a602a2a75510c97b714e1ea1315e5984c">_DifferenceType</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link></section>
</section>
