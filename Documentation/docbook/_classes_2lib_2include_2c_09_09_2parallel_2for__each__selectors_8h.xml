<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2parallel_2for__each__selectors_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/for_each_selectors.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/for_each_selectors.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;parallel/basic_iterator.h&gt;<?linebreak?></programlisting>Include dependency graph for for_each_selectors.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2include_2c_09_09_2parallel_2for__each__selectors_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____generic__for__each__selector">__gnu_parallel::__generic_for_each_selector&lt; _It &gt;</link></para>

<para>Generic __selector for embarrassingly parallel functions. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____for__each__selector">__gnu_parallel::__for_each_selector&lt; _It &gt;</link></para>

<para><link linkend="_namespacestd_1aefb696460665211a0f32f8a15f444c57">std::for_each()</link> selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____generate__selector">__gnu_parallel::__generate_selector&lt; _It &gt;</link></para>

<para><link linkend="_namespacestd_1af6065e33e83259566f3eed5b4ab8c0c7">std::generate()</link> selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____fill__selector">__gnu_parallel::__fill_selector&lt; _It &gt;</link></para>

<para><link linkend="_namespacestd_1a9042ae744521b1770e868813f939b4b7">std::fill()</link> selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____transform1__selector">__gnu_parallel::__transform1_selector&lt; _It &gt;</link></para>

<para><link linkend="_namespacestd_1a83797c5677d80005911de218c819adab">std::transform()</link> __selector, one input sequence variant. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____transform2__selector">__gnu_parallel::__transform2_selector&lt; _It &gt;</link></para>

<para><link linkend="_namespacestd_1a83797c5677d80005911de218c819adab">std::transform()</link> __selector, two input sequences variant. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____replace__selector">__gnu_parallel::__replace_selector&lt; _It, _Tp &gt;</link></para>

<para><link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">std::replace()</link> selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____replace__if__selector">__gnu_parallel::__replace_if_selector&lt; _It, _Op, _Tp &gt;</link></para>

<para><link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">std::replace()</link> selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____count__selector">__gnu_parallel::__count_selector&lt; _It, _Diff &gt;</link></para>

<para><link linkend="_namespacestd_1a30e2af881094d0e954ce605fdd3e0993">std::count()</link> selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____count__if__selector">__gnu_parallel::__count_if_selector&lt; _It, _Diff &gt;</link></para>

<para><link linkend="_namespacestd_1a3211beceffa7786771b08add1e4a7f9c">std::count_if</link> () selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____accumulate__selector">__gnu_parallel::__accumulate_selector&lt; _It &gt;</link></para>

<para>std::accumulate() selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____inner__product__selector">__gnu_parallel::__inner_product_selector&lt; _It, _It2, _Tp &gt;</link></para>

<para>std::inner_product() selector. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____identity__selector">__gnu_parallel::__identity_selector&lt; _It &gt;</link></para>

<para>Selector that just returns the passed iterator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____adjacent__difference__selector">__gnu_parallel::__adjacent_difference_selector&lt; _It &gt;</link></para>

<para>Selector that returns the difference between two adjacent __elements. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1___nothing">__gnu_parallel::_Nothing</link></para>

<para>Functor doing nothing. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1___dummy_reduct">__gnu_parallel::_DummyReduct</link></para>

<para>Reduction function doing nothing. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____min__element__reduct">__gnu_parallel::__min_element_reduct&lt; _Compare, _It &gt;</link></para>

<para>Reduction for finding the maximum element, using a comparator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____max__element__reduct">__gnu_parallel::__max_element_reduct&lt; _Compare, _It &gt;</link></para>

<para>Reduction for finding the maximum element, using a comparator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1____accumulate__binop__reduct">__gnu_parallel::__accumulate_binop_reduct&lt; _BinOp &gt;</link></para>

<para>General reduction, using a binary operator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__parallel">__gnu_parallel</link></para>

<para>GNU parallel code for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
