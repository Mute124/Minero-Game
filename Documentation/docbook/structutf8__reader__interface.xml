<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structutf8__reader__interface" xml:lang="en-US">
<title>utf8_reader_interface Struct Reference</title>
<indexterm><primary>utf8_reader_interface</primary></indexterm>
<para>
<computeroutput>#include &lt;toml.hpp&gt;</computeroutput>
</para>
Inheritance diagram for utf8_reader_interface:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structutf8__reader__interface__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp; <link linkend="_structutf8__reader__interface_1a4556538dd8acf45ad0e54594b7f23519">source_path</link> () const noexcept=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structutf8__codepoint">utf8_codepoint</link> * <link linkend="_structutf8__reader__interface_1abfc2cf51cb019309c776bcef347e9796">read_next</link> () noexcept(!<link linkend="_toml_8hpp_1a7006a81cb3a4676d1514dedfb77a1993">TOML_COMPILER_HAS_EXCEPTIONS</link>)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structutf8__reader__interface_1aa49d7571963817157d85094a3191997c">peek_eof</link> () const noexcept(!<link linkend="_toml_8hpp_1a7006a81cb3a4676d1514dedfb77a1993">TOML_COMPILER_HAS_EXCEPTIONS</link>)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> optional&lt; parse_error &gt; &amp;&amp; <link linkend="_structutf8__reader__interface_1a137047d526546c1d4e0ce23ba69ceac5">error</link> () noexcept=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_structutf8__reader__interface_1a467484791fcf69056a30f380439703ba">~utf8_reader_interface</link> () noexcept=default</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp; <link linkend="_structutf8__reader__interface_1a4556538dd8acf45ad0e54594b7f23519">source_path</link> () const noexcept=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structutf8__codepoint">utf8_codepoint</link> * <link linkend="_structutf8__reader__interface_1abfc2cf51cb019309c776bcef347e9796">read_next</link> () noexcept(!<link linkend="_toml_8hpp_1a7006a81cb3a4676d1514dedfb77a1993">TOML_COMPILER_HAS_EXCEPTIONS</link>)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structutf8__reader__interface_1aa49d7571963817157d85094a3191997c">peek_eof</link> () const noexcept(!<link linkend="_toml_8hpp_1a7006a81cb3a4676d1514dedfb77a1993">TOML_COMPILER_HAS_EXCEPTIONS</link>)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> optional&lt; parse_error &gt; &amp;&amp; <link linkend="_structutf8__reader__interface_1a137047d526546c1d4e0ce23ba69ceac5">error</link> () noexcept=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_structutf8__reader__interface_1a467484791fcf69056a30f380439703ba">~utf8_reader_interface</link> () noexcept=default</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structutf8__reader__interface_1a467484791fcf69056a30f380439703ba"/><section>
    <title>~utf8_reader_interface()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>~utf8_reader_interface</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>~utf8_reader_interface</secondary></indexterm>
<para><computeroutput>virtual utf8_reader_interface::~utf8_reader_interface ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structutf8__reader__interface_1a467484791fcf69056a30f380439703ba"/><section>
    <title>~utf8_reader_interface()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>~utf8_reader_interface</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>~utf8_reader_interface</secondary></indexterm>
<para><computeroutput>virtual utf8_reader_interface::~utf8_reader_interface ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structutf8__reader__interface_1a137047d526546c1d4e0ce23ba69ceac5"/><section>
    <title>error()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>error</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>error</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> optional&lt; parse_error &gt; &amp;&amp; utf8_reader_interface::error ( )<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1a70b6e1eebfed24383be8f99c675ed1b3">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1a70b6e1eebfed24383be8f99c675ed1b3">utf8_reader&lt; T &gt;</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structutf8__reader__interface_a137047d526546c1d4e0ce23ba69ceac5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1a137047d526546c1d4e0ce23ba69ceac5"/><section>
    <title>error()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>error</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>error</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> optional&lt; parse_error &gt; &amp;&amp; utf8_reader_interface::error ( )<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1a70b6e1eebfed24383be8f99c675ed1b3">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1a70b6e1eebfed24383be8f99c675ed1b3">utf8_reader&lt; T &gt;</link>.</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1aa49d7571963817157d85094a3191997c"/><section>
    <title>peek_eof()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>peek_eof</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>peek_eof</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> utf8_reader_interface::peek_eof ( ) const<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1ae203f27a05b9833af011c2f169b97dae">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1ae203f27a05b9833af011c2f169b97dae">utf8_reader&lt; T &gt;</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structutf8__reader__interface_aa49d7571963817157d85094a3191997c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1aa49d7571963817157d85094a3191997c"/><section>
    <title>peek_eof()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>peek_eof</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>peek_eof</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> utf8_reader_interface::peek_eof ( ) const<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1ae203f27a05b9833af011c2f169b97dae">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1ae203f27a05b9833af011c2f169b97dae">utf8_reader&lt; T &gt;</link>.</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1abfc2cf51cb019309c776bcef347e9796"/><section>
    <title>read_next()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>read_next</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>read_next</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structutf8__codepoint">utf8_codepoint</link> * utf8_reader_interface::read_next ( )<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1aed6bb16cd83adb87af6c0d008a0c78f7">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1aed6bb16cd83adb87af6c0d008a0c78f7">utf8_reader&lt; T &gt;</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structutf8__reader__interface_abfc2cf51cb019309c776bcef347e9796_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1abfc2cf51cb019309c776bcef347e9796"/><section>
    <title>read_next()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>read_next</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>read_next</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_structutf8__codepoint">utf8_codepoint</link> * utf8_reader_interface::read_next ( )<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1aed6bb16cd83adb87af6c0d008a0c78f7">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1aed6bb16cd83adb87af6c0d008a0c78f7">utf8_reader&lt; T &gt;</link>.</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1a4556538dd8acf45ad0e54594b7f23519"/><section>
    <title>source_path()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>source_path</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>source_path</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp; utf8_reader_interface::source_path ( ) const<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1a780f2a782652606b6db722e880019eb2">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1a780f2a782652606b6db722e880019eb2">utf8_reader&lt; T &gt;</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structutf8__reader__interface_a4556538dd8acf45ad0e54594b7f23519_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structutf8__reader__interface_1a4556538dd8acf45ad0e54594b7f23519"/><section>
    <title>source_path()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>source_path</primary><secondary>utf8_reader_interface</secondary></indexterm>
<indexterm><primary>utf8_reader_interface</primary><secondary>source_path</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> const <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> &amp; utf8_reader_interface::source_path ( ) const<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classutf8__reader_1a780f2a782652606b6db722e880019eb2">utf8_reader&lt; T &gt;</link>, and <link linkend="_classutf8__reader_1a780f2a782652606b6db722e880019eb2">utf8_reader&lt; T &gt;</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/<link linkend="_parser_8inl">parser.inl</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
