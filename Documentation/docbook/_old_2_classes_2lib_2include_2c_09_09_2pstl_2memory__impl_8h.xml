<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2pstl_2memory__impl_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/memory_impl.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/memory_impl.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;iterator&gt;<?linebreak?>#include &quot;unseq_backend_simd.h&quot;<?linebreak?></programlisting>Include dependency graph for memory_impl.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2pstl_2memory__impl_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2pstl_2memory__impl_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____pstl">__pstl</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____pstl_1_1____internal">__pstl::__internal</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _ForwardIterator , typename _OutputIterator &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1af0e19ee5ecb61c1dc825f6cf32f73187">__pstl::__internal::__brick_uninitialized_move</link> (_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _OutputIterator &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a0b4087c7ee26c9cfbfb34bd9b9483015">__pstl::__internal::__brick_uninitialized_move</link> (_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::true_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____internal_1a30e2ecbaecd03b7e1e3d0b9eeaed24db">__pstl::__internal::__brick_destroy</link> (_Iterator __first, _Iterator __last, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____internal_1a3aea87a05a5f6cfdbe3eac21991c7115">__pstl::__internal::__brick_destroy</link> (_Iterator __first, _Iterator __last, std::true_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _OutputIterator &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a4fb75417b7d24445de9704f283dc126b">__pstl::__internal::__brick_uninitialized_copy</link> (_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _OutputIterator &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a3876eab2404179bf5211468a07824055">__pstl::__internal::__brick_uninitialized_copy</link> (_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::true_type) noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
