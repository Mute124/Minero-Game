<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__window" xml:lang="en-US">
<title>Window reference</title>
<indexterm><primary>Window reference</primary></indexterm>
<para>

<para>Functions and types related to windows. </para>
 
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga88981797d29800808ec242274ab5c03a">GLFW_MOUSE_PASSTHROUGH</link>&#160;&#160;&#160;0x0002000D</para>

<para>Mouse input transparency window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaededa6b208b8e31343da56bb349c6fb2">GLFW_POSITION_X</link>&#160;&#160;&#160;0x0002000E</para>

<para>Initial position x-coordinate window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e">GLFW_POSITION_Y</link>&#160;&#160;&#160;0x0002000F</para>

<para>Initial position y-coordinate window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f">GLFW_CONTEXT_DEBUG</link>&#160;&#160;&#160;0x00022007</para>

<para>Debug mode context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;<link linkend="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f">GLFW_CONTEXT_DEBUG</link></para>

<para>Legacy name for compatibility. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafbf1ce7a4362c75e602a4df9e1bdecd3">GLFW_WAYLAND_APP_ID</link>&#160;&#160;&#160;0x00026001</para>

<para>Wayland specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;0x00022007</para>

<para>OpenGL debug context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;0x00022007</para>

<para>OpenGL debug context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga88981797d29800808ec242274ab5c03a">GLFW_MOUSE_PASSTHROUGH</link>&#160;&#160;&#160;0x0002000D</para>

<para>Mouse input transparency window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaededa6b208b8e31343da56bb349c6fb2">GLFW_POSITION_X</link>&#160;&#160;&#160;0x0002000E</para>

<para>Initial position x-coordinate window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e">GLFW_POSITION_Y</link>&#160;&#160;&#160;0x0002000F</para>

<para>Initial position y-coordinate window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f">GLFW_CONTEXT_DEBUG</link>&#160;&#160;&#160;0x00022007</para>

<para>Debug mode context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;<link linkend="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f">GLFW_CONTEXT_DEBUG</link></para>

<para>Legacy name for compatibility. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafbf1ce7a4362c75e602a4df9e1bdecd3">GLFW_WAYLAND_APP_ID</link>&#160;&#160;&#160;0x00026001</para>

<para>Wayland specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;0x00022007</para>

<para>OpenGL debug context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;0x00022007</para>

<para>OpenGL debug context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e">GLFW_FOCUSED</link>&#160;&#160;&#160;0x00020001</para>

<para>Input focus window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link>&#160;&#160;&#160;0x00020002</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d">GLFW_RESIZABLE</link>&#160;&#160;&#160;0x00020003</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4">GLFW_VISIBLE</link>&#160;&#160;&#160;0x00020004</para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga21b854d36314c94d65aed84405b2f25e">GLFW_DECORATED</link>&#160;&#160;&#160;0x00020005</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga9d9874fc928200136a6dcdad726aa252">GLFW_AUTO_ICONIFY</link>&#160;&#160;&#160;0x00020006</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80">GLFW_FLOATING</link>&#160;&#160;&#160;0x00020007</para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03">GLFW_MAXIMIZED</link>&#160;&#160;&#160;0x00020008</para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77">GLFW_CENTER_CURSOR</link>&#160;&#160;&#160;0x00020009</para>

<para>Cursor centering window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14">GLFW_TRANSPARENT_FRAMEBUFFER</link>&#160;&#160;&#160;0x0002000A</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a">GLFW_HOVERED</link>&#160;&#160;&#160;0x0002000B</para>

<para>Mouse cursor hover window attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafa94b1da34bfd6488c0d709761504dfc">GLFW_FOCUS_ON_SHOW</link>&#160;&#160;&#160;0x0002000C</para>

<para>Input focus on calling show window hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">GLFW_RED_BITS</link>&#160;&#160;&#160;0x00021001</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">GLFW_GREEN_BITS</link>&#160;&#160;&#160;0x00021002</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">GLFW_BLUE_BITS</link>&#160;&#160;&#160;0x00021003</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">GLFW_ALPHA_BITS</link>&#160;&#160;&#160;0x00021004</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">GLFW_DEPTH_BITS</link>&#160;&#160;&#160;0x00021005</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">GLFW_STENCIL_BITS</link>&#160;&#160;&#160;0x00021006</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">GLFW_ACCUM_RED_BITS</link>&#160;&#160;&#160;0x00021007</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">GLFW_ACCUM_GREEN_BITS</link>&#160;&#160;&#160;0x00021008</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">GLFW_ACCUM_BLUE_BITS</link>&#160;&#160;&#160;0x00021009</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">GLFW_ACCUM_ALPHA_BITS</link>&#160;&#160;&#160;0x0002100A</para>

<para>Framebuffer bit depth hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">GLFW_AUX_BUFFERS</link>&#160;&#160;&#160;0x0002100B</para>

<para>Framebuffer auxiliary buffer hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">GLFW_STEREO</link>&#160;&#160;&#160;0x0002100C</para>

<para>OpenGL stereoscopic rendering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>&#160;&#160;&#160;0x0002100D</para>

<para>Framebuffer MSAA samples hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">GLFW_SRGB_CAPABLE</link>&#160;&#160;&#160;0x0002100E</para>

<para>Framebuffer sRGB hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">GLFW_REFRESH_RATE</link>&#160;&#160;&#160;0x0002100F</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">GLFW_DOUBLEBUFFER</link>&#160;&#160;&#160;0x00021010</para>

<para>Framebuffer double buffering hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b">GLFW_CLIENT_API</link>&#160;&#160;&#160;0x00022001</para>

<para>Context client API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>&#160;&#160;&#160;0x00022002</para>

<para>Context client API major version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>&#160;&#160;&#160;0x00022003</para>

<para>Context client API minor version hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08">GLFW_CONTEXT_REVISION</link>&#160;&#160;&#160;0x00022004</para>

<para>Context client API revision number hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gade3593916b4c507900aa2d6844810e00">GLFW_CONTEXT_ROBUSTNESS</link>&#160;&#160;&#160;0x00022005</para>

<para>Context robustness hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga13d24b12465da8b28985f46c8557925b">GLFW_OPENGL_FORWARD_COMPAT</link>&#160;&#160;&#160;0x00022006</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1">GLFW_OPENGL_DEBUG_CONTEXT</link>&#160;&#160;&#160;0x00022007</para>

<para>OpenGL debug context hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>&#160;&#160;&#160;0x00022008</para>

<para>OpenGL profile hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6">GLFW_CONTEXT_RELEASE_BEHAVIOR</link>&#160;&#160;&#160;0x00022009</para>

<para>Context flush-on-release hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5a52fdfd46d8249c211f923675728082">GLFW_CONTEXT_NO_ERROR</link>&#160;&#160;&#160;0x0002200A</para>

<para>Context error suppression hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486">GLFW_CONTEXT_CREATION_API</link>&#160;&#160;&#160;0x0002200B</para>

<para>Context creation API hint and attribute. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>&#160;&#160;&#160;0x0002200C</para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e">GLFW_COCOA_RETINA_FRAMEBUFFER</link>&#160;&#160;&#160;0x00023001</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5">GLFW_COCOA_FRAME_NAME</link>&#160;&#160;&#160;0x00023002</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc">GLFW_COCOA_GRAPHICS_SWITCHING</link>&#160;&#160;&#160;0x00023003</para>

<para>macOS specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gae5a9ea2fccccd92edbd343fc56461114">GLFW_X11_CLASS_NAME</link>&#160;&#160;&#160;0x00024001</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1ga494c3c0d911e4b860b946530a3e389e8">GLFW_X11_INSTANCE_NAME</link>&#160;&#160;&#160;0x00024002</para>

<para>X11 specific window hint. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>&#160;&#160;&#160;0x00025001</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int xpos, int ypos)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int focused)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int iconified)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int maximized)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float xscale, float yscale)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga5c46f9d2435a22b531382ea642216a61">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga82868db51248e7bc2deb2082336e6c70">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga54302eebe2f81518a544723a1d805388">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga5c46f9d2435a22b531382ea642216a61">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga82868db51248e7bc2deb2082336e6c70">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga54302eebe2f81518a544723a1d805388">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int xpos, int ypos)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int focused)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int iconified)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int maximized)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float xscale, float yscale)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga5c46f9d2435a22b531382ea642216a61">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga82868db51248e7bc2deb2082336e6c70">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga54302eebe2f81518a544723a1d805388">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga5c46f9d2435a22b531382ea642216a61">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga82868db51248e7bc2deb2082336e6c70">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga54302eebe2f81518a544723a1d805388">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></para>

<para>Opaque window object. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13">GLFWwindowposfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window position callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58">GLFWwindowsizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for window size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga5c46f9d2435a22b531382ea642216a61">GLFWwindowclosefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window close callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd">GLFWwindowrefreshfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</para>

<para>The function pointer type for window content refresh callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a">GLFWwindowfocusfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window focus callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c">GLFWwindowiconifyfun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window iconify callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga82868db51248e7bc2deb2082336e6c70">GLFWwindowmaximizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</para>

<para>The function pointer type for window maximize callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1ga54302eebe2f81518a544723a1d805388">GLFWframebuffersizefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</para>

<para>The function pointer type for framebuffer size callbacks. </para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* <link linkend="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee">GLFWwindowcontentscalefun</link>) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</para>

<para>The function pointer type for window content scale callbacks. </para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca">GLFWimage</link></para>

<para><link linkend="_struct_image">Image</link> data. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4">glfwDefaultWindowHints</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>

<para>Resets all window hints to their default values. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link> (int hint, int <link linkend="_classvalue">value</link>)</para>

<para>Sets the specified window hint to the desired value. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga3c2270562d7ba13d92680ba1090adafe">glfwWindowHintString</link> (int hint, const char *<link linkend="_classvalue">value</link>)</para>

<para>Sets the specified window hint to the desired value. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * <link linkend="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055">glfwCreateWindow</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>, const char *title, <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *monitor, <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *share)</para>

<para>Creates a window and its associated context. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Destroys the specified window and its context. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int <link linkend="_group__window_1gaa6162f67dfa38b8beda2fea623649332">glfwWindowShouldClose</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Checks the close flag of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga1cadeda7a1e2f224e06a8415d30741aa">glfwSetWindowShouldClose</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="_classvalue">value</link>)</para>

<para>Sets the close flag of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga861ed3414ab8120e2f74151a666ed1dc">glfwSetWindowTitle</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, const char *title)</para>

<para>Sets the title of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga182987a1a62a41a924842b9473d560df">glfwSetWindowIcon</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>

<para>Sets the icon for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga0076a8591ef7494d359730cf2250b45b">glfwGetWindowPos</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *xpos, int *ypos)</para>

<para>Retrieves the position of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0">glfwSetWindowPos</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int xpos, int ypos)</para>

<para>Sets the position of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>Retrieves the size of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga8af814fc98d786d1de2505b40b707de8">glfwSetWindowSizeLimits</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int minwidth, int minheight, int maxwidth, int maxheight)</para>

<para>Sets the size limits of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac">glfwSetWindowAspectRatio</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int numer, int denom)</para>

<para>Sets the aspect ratio of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gae54d1f4915ded15e267ddd3f41496cd2">glfwSetWindowSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>Sets the size of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>Retrieves the size of the framebuffer of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gaad46cdaae2eb732f68d3a1499a7c5409">glfwGetWindowFrameSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *left, int *top, int *right, int *bottom)</para>

<para>Retrieves the size of the frame of the window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee">glfwGetWindowContentScale</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float *xscale, float *yscale)</para>

<para>Retrieves the content scale for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> float <link linkend="_group__window_1gad124d57a1c1c519f60c9765cd0c2a89c">glfwGetWindowOpacity</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Returns the opacity of the whole window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga62a784fe328f227727cbcd0d07480ff3">glfwSetWindowOpacity</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float opacity)</para>

<para>Sets the opacity of the whole window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3">glfwIconifyWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Iconifies the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Restores the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8">glfwMaximizeWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Maximizes the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga7945bcdff9e5e058cf36505d6873ed8c">glfwShowWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Makes the specified window visible. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gaa17e287d521544bdeceafa09ac036e20">glfwHideWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Hides the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga0da0e3daaa2d100f44a115c09077b510">glfwFocusWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Brings the specified window to front and sets input focus. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gad0c9629abb49447bedd28080642b8538">glfwRequestWindowAttention</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Requests user attention to the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> * <link linkend="_group__window_1gad441645a53bc9274a0ee163d40f0c637">glfwGetWindowMonitor</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Returns the monitor that the window uses for full screen mode. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *monitor, int xpos, int ypos, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>, int refreshRate)</para>

<para>Sets the mode, monitor, video mode and placement of a window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int <link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int attrib)</para>

<para>Returns an attribute of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gad39f43f07856efcf3d656426a9284c75">glfwSetWindowAttrib</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int attrib, int <link linkend="_classvalue">value</link>)</para>

<para>Sets an attribute of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gacc9e68faee3c1763b54cd9bc405cf43e">glfwSetWindowUserPointer</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>)</para>

<para>Sets the user pointer of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794">glfwGetWindowUserPointer</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Returns the user pointer of the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link> <link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link> callback)</para>

<para>Sets the position callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link> <link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link> callback)</para>

<para>Sets the size callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link> <link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link> callback)</para>

<para>Sets the close callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link> <link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link> callback)</para>

<para>Sets the refresh callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link> <link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link> callback)</para>

<para>Sets the focus callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link> <link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link> callback)</para>

<para>Sets the iconify callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link> <link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link> callback)</para>

<para>Sets the maximize callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link> <link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link> callback)</para>

<para>Sets the framebuffer resize callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link> <link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link> callback)</para>

<para>Sets the window content scale callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>

<para>Processes all pending events. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>

<para>Waits until events are queued and processes them. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1ga05223a0a4c5e50f10f289e60398153aa">glfwWaitEventsTimeout</link> (double <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>

<para>Waits with timeout until events are queued and processes them. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gad6f6b997278c91c43b35970eb9713d7e">glfwPostEmptyEvent</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>

<para>Posts an empty event to the event queue. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__window_1gafb827800eedbfcbc97b1e5408df668d7">glfwSwapBuffers</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>

<para>Swaps the front and back buffers of the specified window. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Functions and types related to windows. </para>

<para>This is the reference documentation for window related functions and types, including creation, deletion and event polling. For more task-oriented information, see the window_guide. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gae829b55591c18169a40ab4067a041b1f"/><section>
    <title>GLFW_ACCUM_ALPHA_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_ALPHA_BITS&#160;&#160;&#160;0x0002100A</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gae829b55591c18169a40ab4067a041b1f">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce"/><section>
    <title>GLFW_ACCUM_BLUE_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_BLUE_BITS&#160;&#160;&#160;0x00021009</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga65713cee1326f8e9d806fdf93187b471"/><section>
    <title>GLFW_ACCUM_GREEN_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_GREEN_BITS&#160;&#160;&#160;0x00021008</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga65713cee1326f8e9d806fdf93187b471">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6"/><section>
    <title>GLFW_ACCUM_RED_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_ACCUM_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ACCUM_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ACCUM_RED_BITS&#160;&#160;&#160;0x00021007</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaead34a9a683b2bc20eecf30ba738bfc6">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafed79a3f468997877da86c449bd43e8c"/><section>
    <title>GLFW_ALPHA_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_ALPHA_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ALPHA_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ALPHA_BITS&#160;&#160;&#160;0x00021004</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafed79a3f468997877da86c449bd43e8c">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga9d9874fc928200136a6dcdad726aa252"/><section>
    <title>GLFW_AUTO_ICONIFY<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_AUTO_ICONIFY</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUTO_ICONIFY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUTO_ICONIFY&#160;&#160;&#160;0x00020006</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> auto-iconification window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab05108c5029443b371112b031d1fa174"/><section>
    <title>GLFW_AUX_BUFFERS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_AUX_BUFFERS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_AUX_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_AUX_BUFFERS&#160;&#160;&#160;0x0002100B</computeroutput></para><para>

<para>Framebuffer auxiliary buffer hint. </para>
</para>

<para>Framebuffer auxiliary buffer <link linkend="_group__window_1gab05108c5029443b371112b031d1fa174">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gab292ea403db6d514537b515311bf9ae3"/><section>
    <title>GLFW_BLUE_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_BLUE_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_BLUE_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_BLUE_BITS&#160;&#160;&#160;0x00021003</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gab292ea403db6d514537b515311bf9ae3">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77"/><section>
    <title>GLFW_CENTER_CURSOR<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CENTER_CURSOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CENTER_CURSOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CENTER_CURSOR&#160;&#160;&#160;0x00020009</computeroutput></para><para>

<para>Cursor centering window hint. </para>
</para>

<para>Cursor centering window hint. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga649309cf72a3d3de5b1348ca7936c95b"/><section>
    <title>GLFW_CLIENT_API<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CLIENT_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CLIENT_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CLIENT_API&#160;&#160;&#160;0x00022001</computeroutput></para><para>

<para>Context client API hint and attribute. </para>
</para>

<para>Context client API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga70fa0fbc745de6aa824df79a580e84b5"/><section>
    <title>GLFW_COCOA_FRAME_NAME<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_FRAME_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_FRAME_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_FRAME_NAME&#160;&#160;&#160;0x00023002</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc"/><section>
    <title>GLFW_COCOA_GRAPHICS_SWITCHING<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_GRAPHICS_SWITCHING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_GRAPHICS_SWITCHING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_GRAPHICS_SWITCHING&#160;&#160;&#160;0x00023003</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gab6ef2d02eb55800d249ccf1af253c35e"/><section>
    <title>GLFW_COCOA_RETINA_FRAMEBUFFER<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_COCOA_RETINA_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_COCOA_RETINA_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_COCOA_RETINA_FRAMEBUFFER&#160;&#160;&#160;0x00023001</computeroutput></para><para>

<para>macOS specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486"/><section>
    <title>GLFW_CONTEXT_CREATION_API<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_CREATION_API</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_CREATION_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_CREATION_API&#160;&#160;&#160;0x0002200B</computeroutput></para><para>

<para>Context creation API hint and attribute. </para>
</para>

<para>Context creation API hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f"/><section>
    <title>GLFW_CONTEXT_DEBUG<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_DEBUG</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_DEBUG</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_DEBUG&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>Debug mode context hint and attribute. </para>
</para>

<para>Debug mode context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f"/><section>
    <title>GLFW_CONTEXT_DEBUG<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_DEBUG</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_DEBUG</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_DEBUG&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>Debug mode context hint and attribute. </para>
</para>

<para>Debug mode context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga5a52fdfd46d8249c211f923675728082"/><section>
    <title>GLFW_CONTEXT_NO_ERROR<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_NO_ERROR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_NO_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_NO_ERROR&#160;&#160;&#160;0x0002200A</computeroutput></para><para>

<para>Context error suppression hint and attribute. </para>
</para>

<para>Context error suppression hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6"/><section>
    <title>GLFW_CONTEXT_RELEASE_BEHAVIOR<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_RELEASE_BEHAVIOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_RELEASE_BEHAVIOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_RELEASE_BEHAVIOR&#160;&#160;&#160;0x00022009</computeroutput></para><para>

<para>Context flush-on-release hint and attribute. </para>
</para>

<para>Context flush-on-release hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number attribute. </para>
</para>

<para>Context client API revision number hint and attribute.</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number hint and attribute. </para>
</para>

<para>Context client API revision number attribute.</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number hint and attribute. </para>
</para>

<para>Context client API revision number attribute.</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number attribute. </para>
</para>

<para>Context client API revision number hint and attribute.</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number hint and attribute. </para>
</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number hint and attribute. </para>
</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb9475071aa77c6fb05ca5a5c8678a08"/><section>
    <title>GLFW_CONTEXT_REVISION<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_REVISION</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_REVISION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_REVISION&#160;&#160;&#160;0x00022004</computeroutput></para><para>

<para>Context client API revision number hint and attribute. </para>
</para>

<para>Context client API revision number attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gade3593916b4c507900aa2d6844810e00"/><section>
    <title>GLFW_CONTEXT_ROBUSTNESS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_ROBUSTNESS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_ROBUSTNESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_ROBUSTNESS&#160;&#160;&#160;0x00022005</computeroutput></para><para>

<para>Context robustness hint and attribute. </para>
</para>

<para>Context client API revision number hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0"/><section>
    <title>GLFW_CONTEXT_VERSION_MAJOR<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MAJOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MAJOR&#160;&#160;&#160;0x00022002</computeroutput></para><para>

<para>Context client API major version hint and attribute. </para>
</para>

<para>Context client API major version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07"/><section>
    <title>GLFW_CONTEXT_VERSION_MINOR<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_CONTEXT_VERSION_MINOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_CONTEXT_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_CONTEXT_VERSION_MINOR&#160;&#160;&#160;0x00022003</computeroutput></para><para>

<para>Context client API minor version hint and attribute. </para>
</para>

<para>Context client API minor version hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga21b854d36314c94d65aed84405b2f25e"/><section>
    <title>GLFW_DECORATED<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_DECORATED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DECORATED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DECORATED&#160;&#160;&#160;0x00020005</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga318a55eac1fee57dfe593b6d38149d07"/><section>
    <title>GLFW_DEPTH_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_DEPTH_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DEPTH_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DEPTH_BITS&#160;&#160;&#160;0x00021005</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga318a55eac1fee57dfe593b6d38149d07">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint and attribute. </para>
</para>

<para>Framebuffer double buffering hint.</para>

<para>Framebuffer double buffering hint and attribute.</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint. </para>
</para>

<para>Framebuffer double buffering hint and attribute.</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>.</para>

<para>Framebuffer double buffering hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint. </para>
</para>

<para>Framebuffer double buffering hint and attribute.</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>.</para>

<para>Framebuffer double buffering hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint and attribute. </para>
</para>

<para>Framebuffer double buffering hint.</para>

<para>Framebuffer double buffering hint and attribute.</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint. </para>
</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint. </para>
</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga714a5d569e8a274ea58fdfa020955339"/><section>
    <title>GLFW_DOUBLEBUFFER<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_DOUBLEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_DOUBLEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_DOUBLEBUFFER&#160;&#160;&#160;0x00021010</computeroutput></para><para>

<para>Framebuffer double buffering hint. </para>
</para>

<para>Framebuffer double buffering <link linkend="_group__window_1ga714a5d569e8a274ea58fdfa020955339">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga7fb0be51407783b41adbf5bec0b09d80"/><section>
    <title>GLFW_FLOATING<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_FLOATING</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FLOATING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FLOATING&#160;&#160;&#160;0x00020007</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> decoration window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> decoration window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafa94b1da34bfd6488c0d709761504dfc"/><section>
    <title>GLFW_FOCUS_ON_SHOW<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUS_ON_SHOW</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUS_ON_SHOW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUS_ON_SHOW&#160;&#160;&#160;0x0002000C</computeroutput></para><para>

<para>Input focus on calling show window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga54ddb14825a1541a56e22afb5f832a9e"/><section>
    <title>GLFW_FOCUSED<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_FOCUSED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_FOCUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_FOCUSED&#160;&#160;&#160;0x00020001</computeroutput></para><para>

<para>Input focus window hint and attribute. </para>
</para>

<para>Input focus window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d"/><section>
    <title>GLFW_GREEN_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_GREEN_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_GREEN_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_GREEN_BITS&#160;&#160;&#160;0x00021002</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gafba3b72638c914e5fb8a237dd4c50d4d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a"/><section>
    <title>GLFW_HOVERED<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_HOVERED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_HOVERED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_HOVERED&#160;&#160;&#160;0x0002000B</computeroutput></para><para>

<para>Mouse cursor hover window attribute. </para>
</para>

<para>Mouse cursor hover window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga39d44b7c056e55e581355a92d240b58a"/><section>
    <title>GLFW_ICONIFIED<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_ICONIFIED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_ICONIFIED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_ICONIFIED&#160;&#160;&#160;0x00020002</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> iconification window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gad8ccb396253ad0b72c6d4c917eb38a03"/><section>
    <title>GLFW_MAXIMIZED<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_MAXIMIZED</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MAXIMIZED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MAXIMIZED&#160;&#160;&#160;0x00020008</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> maximization window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> maximization window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga88981797d29800808ec242274ab5c03a"/><section>
    <title>GLFW_MOUSE_PASSTHROUGH<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GLFW_MOUSE_PASSTHROUGH</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MOUSE_PASSTHROUGH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MOUSE_PASSTHROUGH&#160;&#160;&#160;0x0002000D</computeroutput></para><para>

<para>Mouse input transparency window hint and attribute. </para>
</para>

<para>Mouse input transparency window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga88981797d29800808ec242274ab5c03a"/><section>
    <title>GLFW_MOUSE_PASSTHROUGH<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GLFW_MOUSE_PASSTHROUGH</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_MOUSE_PASSTHROUGH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_MOUSE_PASSTHROUGH&#160;&#160;&#160;0x0002000D</computeroutput></para><para>

<para>Mouse input transparency window hint and attribute. </para>
</para>

<para>Mouse input transparency window hint or window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;<link linkend="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f">GLFW_CONTEXT_DEBUG</link></computeroutput></para><para>

<para>Legacy name for compatibility. </para>
</para>

<para>OpenGL debug context hint and attribute.</para>

<para>This is an alias for compatibility with earlier versions.</para>

<para>OpenGL debug context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>OpenGL debug context hint and attribute. </para>
</para>

<para>Legacy name for compatibility.</para>

<para>OpenGL debug context hint and attribute.</para>

<para>This is an alias for compatibility with earlier versions. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>OpenGL debug context hint and attribute. </para>
</para>

<para>Legacy name for compatibility.</para>

<para>OpenGL debug context hint and attribute.</para>

<para>This is an alias for compatibility with earlier versions. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;<link linkend="_group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f">GLFW_CONTEXT_DEBUG</link></computeroutput></para><para>

<para>Legacy name for compatibility. </para>
</para>

<para>OpenGL debug context hint and attribute.</para>

<para>This is an alias for compatibility with earlier versions.</para>

<para>OpenGL debug context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>OpenGL debug context hint and attribute. </para>
</para>

<para>OpenGL debug context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>OpenGL debug context hint and attribute. </para>
</para>

<para>OpenGL debug context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga87ec2df0b915201e950ca42d5d0831e1"/><section>
    <title>GLFW_OPENGL_DEBUG_CONTEXT<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_DEBUG_CONTEXT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_DEBUG_CONTEXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_DEBUG_CONTEXT&#160;&#160;&#160;0x00022007</computeroutput></para><para>

<para>OpenGL debug context hint and attribute. </para>
</para>

<para>OpenGL debug context hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga13d24b12465da8b28985f46c8557925b"/><section>
    <title>GLFW_OPENGL_FORWARD_COMPAT<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_FORWARD_COMPAT</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_FORWARD_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_FORWARD_COMPAT&#160;&#160;&#160;0x00022006</computeroutput></para><para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</para>

<para>OpenGL forward-compatibility hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12"/><section>
    <title>GLFW_OPENGL_PROFILE<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_OPENGL_PROFILE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_OPENGL_PROFILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_OPENGL_PROFILE&#160;&#160;&#160;0x00022008</computeroutput></para><para>

<para>OpenGL profile hint and attribute. </para>
</para>

<para>OpenGL profile hint and attribute. </para>
</section>
<anchor xml:id="_group__window_1gaededa6b208b8e31343da56bb349c6fb2"/><section>
    <title>GLFW_POSITION_X<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GLFW_POSITION_X</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_POSITION_X</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_POSITION_X&#160;&#160;&#160;0x0002000E</computeroutput></para><para>

<para>Initial position x-coordinate window hint. </para>
</para>

<para>Initial position x-coordinate <link linkend="_group__window_1gaededa6b208b8e31343da56bb349c6fb2">window hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaededa6b208b8e31343da56bb349c6fb2"/><section>
    <title>GLFW_POSITION_X<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GLFW_POSITION_X</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_POSITION_X</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_POSITION_X&#160;&#160;&#160;0x0002000E</computeroutput></para><para>

<para>Initial position x-coordinate window hint. </para>
</para>

<para>Initial position x-coordinate <link linkend="_group__window_1gaededa6b208b8e31343da56bb349c6fb2">window hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e"/><section>
    <title>GLFW_POSITION_Y<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GLFW_POSITION_Y</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_POSITION_Y</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_POSITION_Y&#160;&#160;&#160;0x0002000F</computeroutput></para><para>

<para>Initial position y-coordinate window hint. </para>
</para>

<para>Initial position y-coordinate <link linkend="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e">window hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e"/><section>
    <title>GLFW_POSITION_Y<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GLFW_POSITION_Y</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_POSITION_Y</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_POSITION_Y&#160;&#160;&#160;0x0002000F</computeroutput></para><para>

<para>Initial position y-coordinate window hint. </para>
</para>

<para>Initial position y-coordinate <link linkend="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e">window hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982"/><section>
    <title>GLFW_RED_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_RED_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RED_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RED_BITS&#160;&#160;&#160;0x00021001</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1gaf78ed8e417dbcc1e354906cc2708c982">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga0f20825e6e47ee8ba389024519682212"/><section>
    <title>GLFW_REFRESH_RATE<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_REFRESH_RATE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_REFRESH_RATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_REFRESH_RATE&#160;&#160;&#160;0x0002100F</computeroutput></para><para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate hint. </para>
</para>

<para><link linkend="_class_monitor">Monitor</link> refresh rate <link linkend="_group__window_1ga0f20825e6e47ee8ba389024519682212">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d"/><section>
    <title>GLFW_RESIZABLE<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_RESIZABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_RESIZABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_RESIZABLE&#160;&#160;&#160;0x00020003</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> resize-ability window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535"/><section>
    <title>GLFW_SAMPLES<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_SAMPLES</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SAMPLES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SAMPLES&#160;&#160;&#160;0x0002100D</computeroutput></para><para>

<para>Framebuffer MSAA samples hint. </para>
</para>

<para>Framebuffer MSAA samples <link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga620bc4280c7eab81ac9f02204500ed47"/><section>
    <title>GLFW_SCALE_TO_MONITOR<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_SCALE_TO_MONITOR</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SCALE_TO_MONITOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SCALE_TO_MONITOR&#160;&#160;&#160;0x0002200C</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> content area scaling window <link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">window hint</link>. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga444a8f00414a63220591f9fdb7b5642b"/><section>
    <title>GLFW_SRGB_CAPABLE<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_SRGB_CAPABLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_SRGB_CAPABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_SRGB_CAPABLE&#160;&#160;&#160;0x0002100E</computeroutput></para><para>

<para>Framebuffer sRGB hint. </para>
</para>

<para>Framebuffer sRGB <link linkend="_group__window_1ga444a8f00414a63220591f9fdb7b5642b">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d"/><section>
    <title>GLFW_STENCIL_BITS<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_STENCIL_BITS</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STENCIL_BITS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STENCIL_BITS&#160;&#160;&#160;0x00021006</computeroutput></para><para>

<para>Framebuffer bit depth hint. </para>
</para>

<para>Framebuffer bit depth <link linkend="_group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga83d991efca02537e2d69969135b77b03"/><section>
    <title>GLFW_STEREO<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_STEREO</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_STEREO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_STEREO&#160;&#160;&#160;0x0002100C</computeroutput></para><para>

<para>OpenGL stereoscopic rendering hint. </para>
</para>

<para>OpenGL stereoscopic rendering <link linkend="_group__window_1ga83d991efca02537e2d69969135b77b03">hint</link>. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1ga60a0578c3b9449027d683a9c6abb9f14"/><section>
    <title>GLFW_TRANSPARENT_FRAMEBUFFER<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_TRANSPARENT_FRAMEBUFFER</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_TRANSPARENT_FRAMEBUFFER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_TRANSPARENT_FRAMEBUFFER&#160;&#160;&#160;0x0002000A</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> framebuffer transparency hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> framebuffer transparency window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4"/><section>
    <title>GLFW_VISIBLE<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_VISIBLE</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_VISIBLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_VISIBLE&#160;&#160;&#160;0x00020004</computeroutput></para><para>

<para><link linkend="_class_window">Window</link> visibility window hint and attribute. </para>
</para>

<para><link linkend="_class_window">Window</link> visibility window hint and window attribute. </para>
</section>
<anchor xml:id="_group__window_1gafbf1ce7a4362c75e602a4df9e1bdecd3"/><section>
    <title>GLFW_WAYLAND_APP_ID<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GLFW_WAYLAND_APP_ID</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WAYLAND_APP_ID</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WAYLAND_APP_ID&#160;&#160;&#160;0x00026001</computeroutput></para><para>

<para>Wayland specific window hint. </para>
</para>

<para>Allows specification of the Wayland app_id. </para>
</section>
<anchor xml:id="_group__window_1gafbf1ce7a4362c75e602a4df9e1bdecd3"/><section>
    <title>GLFW_WAYLAND_APP_ID<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GLFW_WAYLAND_APP_ID</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WAYLAND_APP_ID</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WAYLAND_APP_ID&#160;&#160;&#160;0x00026001</computeroutput></para><para>

<para>Wayland specific window hint. </para>
</para>

<para>Allows specification of the Wayland app_id. </para>
</section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043"/><section>
    <title>GLFW_WIN32_KEYBOARD_MENU<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_WIN32_KEYBOARD_MENU</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_WIN32_KEYBOARD_MENU</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_WIN32_KEYBOARD_MENU&#160;&#160;&#160;0x00025001</computeroutput></para></section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1gae5a9ea2fccccd92edbd343fc56461114"/><section>
    <title>GLFW_X11_CLASS_NAME<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_CLASS_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_CLASS_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_CLASS_NAME&#160;&#160;&#160;0x00024001</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
<anchor xml:id="_group__window_1ga494c3c0d911e4b860b946530a3e389e8"/><section>
    <title>GLFW_X11_INSTANCE_NAME<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFW_X11_INSTANCE_NAME</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFW_X11_INSTANCE_NAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLFW_X11_INSTANCE_NAME&#160;&#160;&#160;0x00024002</computeroutput></para><para>

<para>X11 specific window hint. </para>
</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_group__window_1ga54302eebe2f81518a544723a1d805388"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga54302eebe2f81518a544723a1d805388"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga54302eebe2f81518a544723a1d805388"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga54302eebe2f81518a544723a1d805388"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga54302eebe2f81518a544723a1d805388"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gae18026e294dde685ed2e5f759533144d"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gae18026e294dde685ed2e5f759533144d"/><section>
    <title>GLFWframebuffersizefun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWframebuffersizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWframebuffersizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWframebuffersizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</computeroutput></para><para>

<para>The function pointer type for framebuffer size callbacks. </para>
</para>

<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in pixels, of the framebuffer. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in pixels, of the framebuffer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7cc0a09de172fa7250872046f8c4d2ca"/><section>
    <title>GLFWimage<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWimage</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWimage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_g_l_f_wimage">GLFWimage</link> <link linkend="_struct_g_l_f_wimage">GLFWimage</link></computeroutput></para><para>

<para><link linkend="_struct_image">Image</link> data. </para>
</para>

<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>

<para><formalpara><title>See also</title>

<para>cursor_custom </para>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242"/><section>
    <title>GLFWwindow<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindow</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link></computeroutput></para><para>

<para>Opaque window object. </para>
</para>

<para>Opaque window object.</para>

<para><formalpara><title>See also</title>

<para>window_object</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga5c46f9d2435a22b531382ea642216a61"/><section>
    <title>GLFWwindowclosefun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga5c46f9d2435a22b531382ea642216a61"/><section>
    <title>GLFWwindowclosefun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga5c46f9d2435a22b531382ea642216a61"/><section>
    <title>GLFWwindowclosefun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga5c46f9d2435a22b531382ea642216a61"/><section>
    <title>GLFWwindowclosefun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga5c46f9d2435a22b531382ea642216a61"/><section>
    <title>GLFWwindowclosefun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gabf859b936d80961b7d39013a9694cc3e"/><section>
    <title>GLFWwindowclosefun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gabf859b936d80961b7d39013a9694cc3e"/><section>
    <title>GLFWwindowclosefun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowclosefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowclosefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowclosefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</computeroutput></para><para>

<para>The function pointer type for window close callbacks. </para>
</para>

<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that the user attempted to close.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_close </para>

<para><link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaca2e04ad85e70a646f07a870c2cad4ee"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, float, float)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float xscale, float yscale)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e"/><section>
    <title>GLFWwindowcontentscalefun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowcontentscalefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowcontentscalefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowcontentscalefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float xscale, float yscale)</computeroutput></para><para>

<para>The function pointer type for window content scale callbacks. </para>
</para>

<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content scale changed. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xscale</entry><entry>
<para>The new x-axis content scale of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>yscale</entry><entry>
<para>The new y-axis content scale of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga6b15f80f61ff396d89720be2a183ca8a"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int focused)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46"/><section>
    <title>GLFWwindowfocusfun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowfocusfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowfocusfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowfocusfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int focused)</computeroutput></para><para>

<para>The function pointer type for window focus callbacks. </para>
</para>

<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that gained or lost input focus. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>focused</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_focus </para>

<para><link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaaa80beaa1d108e6bc09f666e186e735c"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int iconified)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f"/><section>
    <title>GLFWwindowiconifyfun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowiconifyfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowiconifyfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowiconifyfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int iconified)</computeroutput></para><para>

<para>The function pointer type for window iconify callbacks. </para>
</para>

<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was iconified or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga82868db51248e7bc2deb2082336e6c70"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga82868db51248e7bc2deb2082336e6c70"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga82868db51248e7bc2deb2082336e6c70"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga82868db51248e7bc2deb2082336e6c70"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga82868db51248e7bc2deb2082336e6c70"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>iconified</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3017196fdaec33ac3e095765176c2a90"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int maximized)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>maximized</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga3017196fdaec33ac3e095765176c2a90"/><section>
    <title>GLFWwindowmaximizefun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowmaximizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowmaximizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowmaximizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int maximized)</computeroutput></para><para>

<para>The function pointer type for window maximize callbacks. </para>
</para>

<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was maximized or restored. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>maximized</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_maximize </para>

<para><link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13"/><section>
    <title>GLFWwindowposfun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13"/><section>
    <title>GLFWwindowposfun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13"/><section>
    <title>GLFWwindowposfun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13"/><section>
    <title>GLFWwindowposfun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13"/><section>
    <title>GLFWwindowposfun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9"/><section>
    <title>GLFWwindowposfun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int xpos, int ypos)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9"/><section>
    <title>GLFWwindowposfun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowposfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowposfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowposfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int xpos, int ypos)</computeroutput></para><para>

<para>The function pointer type for window position callbacks. </para>
</para>

<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was moved. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7747bf66194241cff4f12d3500d8f9cd"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga431663a1427d2eb3a273bc398b6737b5"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga431663a1427d2eb3a273bc398b6737b5"/><section>
    <title>GLFWwindowrefreshfun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowrefreshfun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowrefreshfun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowrefreshfun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</computeroutput></para><para>

<para>The function pointer type for window content refresh callbacks. </para>
</para>

<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose content needs to be refreshed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_refresh </para>

<para><link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58"/><section>
    <title>GLFWwindowsizefun<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58"/><section>
    <title>GLFWwindowsizefun<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58"/><section>
    <title>GLFWwindowsizefun<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58"/><section>
    <title>GLFWwindowsizefun<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaac00a2d1d82875c2bac1af223e9d3c58"/><section>
    <title>GLFWwindowsizefun<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *, int, int)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaec0282944bb810f6f3163ec02da90350"/><section>
    <title>GLFWwindowsizefun<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaec0282944bb810f6f3163ec02da90350"/><section>
    <title>GLFWwindowsizefun<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>GLFWwindowsizefun</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>GLFWwindowsizefun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(* GLFWwindowsizefun) (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</computeroutput></para><para>

<para>The function pointer type for window size callbacks. </para>
</para>

<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;callback_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window that was resized. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The new width, in screen coordinates, of the window. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The new height, in screen coordinates, of the window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055"/><section>
    <title>glfwCreateWindow()</title>
<indexterm><primary>glfwCreateWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwCreateWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * glfwCreateWindow (int width, int height, const char * title, <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> * monitor, <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * share)</computeroutput></para><para>

<para>Creates a window and its associated context. </para>
</para>

<para>This function creates a window and its associated OpenGL or OpenGL ES context. Most of the options controlling how the window and its context should be created are specified with window hints.</para>

<para>Successful creation does not change which context is current. Before you can use the newly created context, you need to make it current. For information about the <computeroutput>share</computeroutput> parameter, see context_sharing.</para>

<para>The created window, framebuffer and context may differ from what you requested, as not all parameters and hints are hard constraints. This includes the size of the window, especially for full screen windows. To query the actual attributes of the created window, framebuffer and context, see <link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link>, <link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link> and <link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link>.</para>

<para>To create a full screen window, you need to specify the monitor the window will cover. If no monitor is specified, the window will be windowed mode. Unless you have a way for the user to choose a specific monitor, it is recommended that you pick the primary monitor. For more information on how to query connected monitors, see monitor_monitors.</para>

<para>For full screen windows, the specified size becomes the resolution of the window&apos;s <emphasis>desired video mode</emphasis>. As long as a full screen window is not iconified, the supported video mode most closely matching the desired video mode is set for the specified monitor. For more information about full screen windows, including the creation of so called <emphasis>windowed full screen</emphasis> or <emphasis>borderless full screen</emphasis> windows, see window_windowed_full_screen.</para>

<para>Once you have created the window, you can switch it between windowed and full screen mode with <link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link>. This will not affect its OpenGL or OpenGL ES context.</para>

<para>By default, newly created windows use the placement recommended by the window system. To create the window at a specific position, set the <link linkend="_group__window_1gaededa6b208b8e31343da56bb349c6fb2">GLFW_POSITION_X</link> and <link linkend="_group__window_1ga6b3ccf63683c81f479e2a98f5027200e">GLFW_POSITION_Y</link> window hints before creation. To restore the default behavior, set either or both hints back to <computeroutput>GLFW_ANY_POSITION</computeroutput>.</para>

<para>As long as at least one full screen window is not iconified, the screensaver is prohibited from starting.</para>

<para><link linkend="_class_window">Window</link> systems put limits on window sizes. Very large or very small window dimensions may be overridden by the window system on creation. Check the actual size after creation.</para>

<para>The swap interval is not set during window creation and the initial value may vary depending on driver settings and defaults.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The desired width, in screen coordinates, of the window. This must be greater than zero. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The desired height, in screen coordinates, of the window. This must be greater than zero. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>title</entry><entry>
<para>The initial, UTF-8 encoded window title. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>monitor</entry><entry>
<para>The monitor to use for full screen mode, or <computeroutput>NULL</computeroutput> for windowed mode. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>share</entry><entry>
<para>The window whose context to share resources with, or <computeroutput>NULL</computeroutput> to not share resources. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The handle of the created window, or <computeroutput>NULL</computeroutput> if an error occurred.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>, <link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>, <link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>, <link linkend="_group__errors_1ga196e125ef261d94184e2b55c05762f14">GLFW_FORMAT_UNAVAILABLE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@win32 <link linkend="_class_window">Window</link> creation will fail if the Microsoft GDI software OpenGL implementation is the only one available.</para>

<para>@win32 If the executable has an icon resource named <computeroutput>GLFW_ICON,</computeroutput> it will be set as the initial icon for the window. If no such icon is present, the <computeroutput>IDI_APPLICATION</computeroutput> icon will be used instead. To set a different icon, see <link linkend="_group__window_1ga182987a1a62a41a924842b9473d560df">glfwSetWindowIcon</link>.</para>

<para>@win32 The context to share resources with must not be current on any other thread.</para>

<para>@macos The OS only supports core profile contexts for OpenGL versions 3.2 and later. Before creating an OpenGL context of version 3.2 or later you must set the GLFW_OPENGL_PROFILE hint accordingly. OpenGL 3.0 and 3.1 contexts are not supported at all on macOS.</para>

<para>@macos The GLFW window has no icon, as it is not a document window, but the dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <link xlink:href="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</link> in the Mac Developer Library.</para>

<para>@macos On OS X 10.10 and later the window frame will not be rendered at full resolution on Retina displays unless the GLFW_COCOA_RETINA_FRAMEBUFFER hint is <computeroutput>GLFW_TRUE</computeroutput> and the <computeroutput>NSHighResolutionCapable</computeroutput> key is enabled in the application bundle&apos;s <computeroutput>Info.plist</computeroutput>. For more information, see <link xlink:href="https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Explained/Explained.html">High Resolution Guidelines for OS X</link> in the Mac Developer Library. The GLFW test and example programs use a custom <computeroutput>Info.plist</computeroutput> template for this, which can be found as <computeroutput>CMake/Info.plist.in</computeroutput> in the source tree.</para>

<para>@macos When activating frame autosaving with GLFW_COCOA_FRAME_NAME, the specified window size and position may be overridden by previously saved values.</para>

<para>@x11 Some window managers will not respect the placement of initially hidden windows.</para>

<para>@x11 Due to the asynchronous nature of X11, it may take a moment for a window to reach its requested state. This means you may not be able to query the final size, position or other attributes directly after window creation.</para>

<para>@x11 The class part of the <computeroutput>WM_CLASS</computeroutput> window property will by default be set to the window title passed to this function. The instance part will use the contents of the <computeroutput>RESOURCE_NAME</computeroutput> environment variable, if present and not empty, or fall back to the window title. Set the GLFW_X11_CLASS_NAME and GLFW_X11_INSTANCE_NAME window hints to override this.</para>

<para>@wayland Compositors should implement the xdg-decoration protocol for GLFW to decorate the window properly. If this protocol isn&apos;t supported, or if the compositor prefers client-side decorations, a very simple fallback frame will be drawn using the wp_viewporter protocol. A compositor can still emit close, maximize or fullscreen events, using for instance a keybind mechanism. If neither of these protocols is supported, the window won&apos;t be decorated.</para>

<para>@wayland A full screen window will not attempt to change the mode, no matter what the requested size or refresh rate.</para>

<para>@wayland Screensaver inhibition requires the idle-inhibit protocol to be implemented in the user&apos;s compositor.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_creation </para>

<para><link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindow</computeroutput>.</para>
</formalpara>
This function creates a window and its associated OpenGL or OpenGL ES context. Most of the options controlling how the window and its context should be created are specified with window hints.</para>

<para>Successful creation does not change which context is current. Before you can use the newly created context, you need to make it current. For information about the <computeroutput>share</computeroutput> parameter, see context_sharing.</para>

<para>The created window, framebuffer and context may differ from what you requested, as not all parameters and hints are hard constraints. This includes the size of the window, especially for full screen windows. To query the actual attributes of the created window, framebuffer and context, see <link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link>, <link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link> and <link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link>.</para>

<para>To create a full screen window, you need to specify the monitor the window will cover. If no monitor is specified, the window will be windowed mode. Unless you have a way for the user to choose a specific monitor, it is recommended that you pick the primary monitor. For more information on how to query connected monitors, see monitor_monitors.</para>

<para>For full screen windows, the specified size becomes the resolution of the window&apos;s <emphasis>desired video mode</emphasis>. As long as a full screen window is not iconified, the supported video mode most closely matching the desired video mode is set for the specified monitor. For more information about full screen windows, including the creation of so called <emphasis>windowed full screen</emphasis> or <emphasis>borderless full screen</emphasis> windows, see window_windowed_full_screen.</para>

<para>Once you have created the window, you can switch it between windowed and full screen mode with <link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link>. This will not affect its OpenGL or OpenGL ES context.</para>

<para>By default, newly created windows use the placement recommended by the window system. To create the window at a specific position, make it initially invisible using the GLFW_VISIBLE window hint, set its position and then show it.</para>

<para>As long as at least one full screen window is not iconified, the screensaver is prohibited from starting.</para>

<para><link linkend="_class_window">Window</link> systems put limits on window sizes. Very large or very small window dimensions may be overridden by the window system on creation. Check the actual size after creation.</para>

<para>The swap interval is not set during window creation and the initial value may vary depending on driver settings and defaults.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The desired width, in screen coordinates, of the window. This must be greater than zero. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The desired height, in screen coordinates, of the window. This must be greater than zero. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>title</entry><entry>
<para>The initial, UTF-8 encoded window title. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>monitor</entry><entry>
<para>The monitor to use for full screen mode, or <computeroutput>NULL</computeroutput> for windowed mode. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>share</entry><entry>
<para>The window whose context to share resources with, or <computeroutput>NULL</computeroutput> to not share resources. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The handle of the created window, or <computeroutput>NULL</computeroutput> if an error occurred.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>, <link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>, <link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>, <link linkend="_group__errors_1ga196e125ef261d94184e2b55c05762f14">GLFW_FORMAT_UNAVAILABLE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@win32 <link linkend="_class_window">Window</link> creation will fail if the Microsoft GDI software OpenGL implementation is the only one available.</para>

<para>@win32 If the executable has an icon resource named <computeroutput>GLFW_ICON,</computeroutput> it will be set as the initial icon for the window. If no such icon is present, the <computeroutput>IDI_APPLICATION</computeroutput> icon will be used instead. To set a different icon, see <link linkend="_group__window_1ga182987a1a62a41a924842b9473d560df">glfwSetWindowIcon</link>.</para>

<para>@win32 The context to share resources with must not be current on any other thread.</para>

<para>@macos The OS only supports core profile contexts for OpenGL versions 3.2 and later. Before creating an OpenGL context of version 3.2 or later you must set the GLFW_OPENGL_PROFILE hint accordingly. OpenGL 3.0 and 3.1 contexts are not supported at all on macOS.</para>

<para>@macos The GLFW window has no icon, as it is not a document window, but the dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <link xlink:href="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</link> in the Mac Developer Library.</para>

<para>@macos The first time a window is created the menu bar is created. If GLFW finds a <computeroutput>MainMenu.nib</computeroutput> it is loaded and assumed to contain a menu bar. Otherwise a minimal menu bar is created manually with common commands like Hide, Quit and About. The About entry opens a minimal about dialog with information from the application&apos;s bundle. <link linkend="_class_menu">Menu</link> bar creation can be disabled entirely with the <link linkend="_group__init_1ga71e0b4ce2f2696a84a9b8c5e12dc70cf">GLFW_COCOA_MENUBAR</link> init hint.</para>

<para>@macos On OS X 10.10 and later the window frame will not be rendered at full resolution on Retina displays unless the GLFW_COCOA_RETINA_FRAMEBUFFER hint is <computeroutput>GLFW_TRUE</computeroutput> and the <computeroutput>NSHighResolutionCapable</computeroutput> key is enabled in the application bundle&apos;s <computeroutput>Info.plist</computeroutput>. For more information, see <link xlink:href="https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Explained/Explained.html">High Resolution Guidelines for OS X</link> in the Mac Developer Library. The GLFW test and example programs use a custom <computeroutput>Info.plist</computeroutput> template for this, which can be found as <computeroutput>CMake/Info.plist.in</computeroutput> in the source tree.</para>

<para>@macos When activating frame autosaving with GLFW_COCOA_FRAME_NAME, the specified window size and position may be overridden by previously saved values.</para>

<para>@x11 Some window managers will not respect the placement of initially hidden windows.</para>

<para>@x11 Due to the asynchronous nature of X11, it may take a moment for a window to reach its requested state. This means you may not be able to query the final size, position or other attributes directly after window creation.</para>

<para>@x11 The class part of the <computeroutput>WM_CLASS</computeroutput> window property will by default be set to the window title passed to this function. The instance part will use the contents of the <computeroutput>RESOURCE_NAME</computeroutput> environment variable, if present and not empty, or fall back to the window title. Set the GLFW_X11_CLASS_NAME and GLFW_X11_INSTANCE_NAME window hints to override this.</para>

<para>@wayland Compositors should implement the xdg-decoration protocol for GLFW to decorate the window properly. If this protocol isn&apos;t supported, or if the compositor prefers client-side decorations, a very simple fallback frame will be drawn using the wp_viewporter protocol. A compositor can still emit close, maximize or fullscreen events, using for instance a keybind mechanism. If neither of these protocols is supported, the window won&apos;t be decorated.</para>

<para>@wayland A full screen window will not attempt to change the mode, no matter what the requested size or refresh rate.</para>

<para>@wayland Screensaver inhibition requires the idle-inhibit protocol to be implemented in the user&apos;s compositor.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_creation </para>

<para><link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindow</computeroutput>. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gaaccd00fafe81e2db94e8cdf55721e055_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4"/><section>
    <title>glfwDefaultWindowHints()</title>
<indexterm><primary>glfwDefaultWindowHints</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwDefaultWindowHints</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwDefaultWindowHints (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para><para>

<para>Resets all window hints to their default values. </para>
</para>

<para>This function resets all window hints to their default values.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_hints </para>

<para><link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link> </para>

<para><link linkend="_group__window_1ga3c2270562d7ba13d92680ba1090adafe">glfwWindowHintString</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga8050ddceed9dc6bd9d3aa35666195cd4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga806747476b7247d292be3711c323ea10"/><section>
    <title>glfwDestroyWindow()</title>
<indexterm><primary>glfwDestroyWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwDestroyWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwDestroyWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Destroys the specified window and its context. </para>
</para>

<para>This function destroys the specified window and its context. On calling this function, no further callbacks will be called for that window.</para>

<para>If the context of the specified window is current on the main thread, it is detached before being destroyed.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to destroy.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><note><title>Note</title>

<para>The context of the specified window must not be current on any other thread when this function is called.</para>
</note>
@reentrancy This function must not be called from a callback.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_creation </para>

<para><link linkend="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055">glfwCreateWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. Replaces <computeroutput>glfwCloseWindow</computeroutput>. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga806747476b7247d292be3711c323ea10_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga806747476b7247d292be3711c323ea10_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga0da0e3daaa2d100f44a115c09077b510"/><section>
    <title>glfwFocusWindow()</title>
<indexterm><primary>glfwFocusWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwFocusWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwFocusWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Brings the specified window to front and sets input focus. </para>
</para>

<para>This function brings the specified window to front and sets input focus. The window should already be visible and not iconified.</para>

<para>By default, both windowed and full screen mode windows are focused when initially created. Set the GLFW_FOCUSED to disable this behavior.</para>

<para>Also by default, windowed mode windows are focused when shown with <link linkend="_group__window_1ga7945bcdff9e5e058cf36505d6873ed8c">glfwShowWindow</link>. Set the GLFW_FOCUS_ON_SHOW to disable this behavior.</para>

<para><emphasis role="bold">Do not use this function</emphasis> to steal focus from other applications unless you are certain that is what the user wants. Focus stealing can be extremely disruptive.</para>

<para>For a less disruptive way of getting the user&apos;s attention, see attention requests.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to give input focus.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link> and <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link> (see remarks).</para>

<para><formalpara><title>Remarks</title>

<para>@wayland It is not possible for an application to set the input focus. This function will emit <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_focus </para>

<para>window_attention</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2.</para>
</formalpara>
This function brings the specified window to front and sets input focus. The window should already be visible and not iconified.</para>

<para>By default, both windowed and full screen mode windows are focused when initially created. Set the GLFW_FOCUSED to disable this behavior.</para>

<para>Also by default, windowed mode windows are focused when shown with <link linkend="_group__window_1ga7945bcdff9e5e058cf36505d6873ed8c">glfwShowWindow</link>. Set the GLFW_FOCUS_ON_SHOW to disable this behavior.</para>

<para><emphasis role="bold">Do not use this function</emphasis> to steal focus from other applications unless you are certain that is what the user wants. Focus stealing can be extremely disruptive.</para>

<para>For a less disruptive way of getting the user&apos;s attention, see attention requests.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to give input focus.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland It is not possible for an application to bring its windows to front, this function will always emit <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_focus </para>

<para>window_attention</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga0da0e3daaa2d100f44a115c09077b510_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e"/><section>
    <title>glfwGetFramebufferSize()</title>
<indexterm><primary>glfwGetFramebufferSize</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetFramebufferSize</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwGetFramebufferSize (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>

<para>Retrieves the size of the framebuffer of the specified window. </para>
</para>

<para>This function retrieves the size, in pixels, of the framebuffer of the specified window. If you wish to retrieve the size of the window in screen coordinates, see <link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link>.</para>

<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose framebuffer to query. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>width</entry><entry>
<para>Where to store the width, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>height</entry><entry>
<para>Where to store the height, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_fbsize </para>

<para><link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gaf7d17f3534b4b6dc9a6f905e3a240b7e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga1bb0c7e100418e284dbb800789c63d40"/><section>
    <title>glfwGetWindowAttrib()</title>
<indexterm><primary>glfwGetWindowAttrib</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowAttrib</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int glfwGetWindowAttrib (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int attrib)</computeroutput></para><para>

<para>Returns an attribute of the specified window. </para>
</para>

<para>This function returns the value of an attribute of the specified window or its OpenGL or OpenGL ES context.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>attrib</entry><entry>
<para>The window attribute whose value to return. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The value of the attribute, or zero if an error occurred.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>Framebuffer related hints are not window attributes. See window_attribs_fb for more information.</para>

<para>Zero is a valid value for many window and context related attributes so you cannot use a return value of zero as an indication of errors. However, this function should not fail as long as it is passed valid arguments and the library has been initialized.</para>

<para>@wayland The Wayland protocol provides no way to check whether a window is iconfied, so <link linkend="_group__window_1ga39d44b7c056e55e581355a92d240b58a">GLFW_ICONIFIED</link> always returns <computeroutput>GLFW_FALSE</computeroutput>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_attribs </para>

<para><link linkend="_group__window_1gad39f43f07856efcf3d656426a9284c75">glfwSetWindowAttrib</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. Replaces <computeroutput>glfwGetWindowParam</computeroutput> and <computeroutput>glfwGetGLVersion</computeroutput>.</para>
</formalpara>
This function returns the value of an attribute of the specified window or its OpenGL or OpenGL ES context.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>attrib</entry><entry>
<para>The window attribute whose value to return. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The value of the attribute, or zero if an error occurred.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>Framebuffer related hints are not window attributes. See window_attribs_fb for more information.</para>

<para>Zero is a valid value for many window and context related attributes so you cannot use a return value of zero as an indication of errors. However, this function should not fail as long as it is passed valid arguments and the library has been initialized.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_attribs </para>

<para><link linkend="_group__window_1gad39f43f07856efcf3d656426a9284c75">glfwSetWindowAttrib</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. Replaces <computeroutput>glfwGetWindowParam</computeroutput> and <computeroutput>glfwGetGLVersion</computeroutput>. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga1bb0c7e100418e284dbb800789c63d40_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga1bb0c7e100418e284dbb800789c63d40_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee"/><section>
    <title>glfwGetWindowContentScale()</title>
<indexterm><primary>glfwGetWindowContentScale</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowContentScale</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwGetWindowContentScale (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, float * xscale, float * yscale)</computeroutput></para><para>

<para>Retrieves the content scale for the specified window. </para>
</para>

<para>This function retrieves the content scale for the specified window. The content scale is the ratio between the current DPI and the platform&apos;s default DPI. This is especially important for text and any UI elements. If the pixel dimensions of your UI scaled by this look appropriate on your machine then it should appear at a reasonable size on other machines regardless of their DPI and scaling settings. This relies on the system DPI and scaling settings being somewhat correct.</para>

<para>On platforms where each monitors can have its own content scale, the window content scale will depend on which monitor the system considers the window to be on.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>xscale</entry><entry>
<para>Where to store the x-axis content scale, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>yscale</entry><entry>
<para>Where to store the y-axis content scale, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link> </para>

<para><link linkend="_group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff">glfwGetMonitorContentScale</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3.</para>
</formalpara>
This function retrieves the content scale for the specified window. The content scale is the ratio between the current DPI and the platform&apos;s default DPI. This is especially important for text and any UI elements. If the pixel dimensions of your UI scaled by this look appropriate on your machine then it should appear at a reasonable size on other machines regardless of their DPI and scaling settings. This relies on the system DPI and scaling settings being somewhat correct.</para>

<para>On systems where each monitors can have its own content scale, the window content scale will depend on which monitor the system considers the window to be on.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>xscale</entry><entry>
<para>Where to store the x-axis content scale, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>yscale</entry><entry>
<para>Where to store the y-axis content scale, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link> </para>

<para><link linkend="_group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff">glfwGetMonitorContentScale</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga72718c983a9fffaa27f786bfe7d1c9ee_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gaad46cdaae2eb732f68d3a1499a7c5409"/><section>
    <title>glfwGetWindowFrameSize()</title>
<indexterm><primary>glfwGetWindowFrameSize</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowFrameSize</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwGetWindowFrameSize (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int * left, int * top, int * right, int * bottom)</computeroutput></para><para>

<para>Retrieves the size of the frame of the window. </para>
</para>

<para>This function retrieves the size, in screen coordinates, of each edge of the frame of the specified window. This size includes the title bar, if the window has one. The size of the frame may vary depending on the window-related hints used to create it.</para>

<para>Because this function retrieves the size of each window frame edge and not the offset along a particular coordinate axis, the retrieved values will always be zero or positive.</para>

<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose frame size to query. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>left</entry><entry>
<para>Where to store the size, in screen coordinates, of the left edge of the window frame, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>top</entry><entry>
<para>Where to store the size, in screen coordinates, of the top edge of the window frame, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>right</entry><entry>
<para>Where to store the size, in screen coordinates, of the right edge of the window frame, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>bottom</entry><entry>
<para>Where to store the size, in screen coordinates, of the bottom edge of the window frame, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_size</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.1. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gaad46cdaae2eb732f68d3a1499a7c5409_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gad441645a53bc9274a0ee163d40f0c637"/><section>
    <title>glfwGetWindowMonitor()</title>
<indexterm><primary>glfwGetWindowMonitor</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowMonitor</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> * glfwGetWindowMonitor (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Returns the monitor that the window uses for full screen mode. </para>
</para>

<para>This function returns the handle of the monitor that the specified window is in full screen on.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The monitor, or <computeroutput>NULL</computeroutput> if the window is in windowed mode or an error occurred.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_monitor </para>

<para><link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad441645a53bc9274a0ee163d40f0c637_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gad124d57a1c1c519f60c9765cd0c2a89c"/><section>
    <title>glfwGetWindowOpacity()</title>
<indexterm><primary>glfwGetWindowOpacity</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowOpacity</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> float glfwGetWindowOpacity (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Returns the opacity of the whole window. </para>
</para>

<para>This function returns the opacity of the window, including any decorations.</para>

<para>The opacity (or alpha) value is a positive finite number between zero and one, where zero is fully transparent and one is fully opaque. If the system does not support whole window transparency, this function always returns one.</para>

<para>The initial opacity value for newly created windows is one.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The opacity value of the specified window.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_transparency </para>

<para><link linkend="_group__window_1ga62a784fe328f227727cbcd0d07480ff3">glfwSetWindowOpacity</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad124d57a1c1c519f60c9765cd0c2a89c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga0076a8591ef7494d359730cf2250b45b"/><section>
    <title>glfwGetWindowPos()</title>
<indexterm><primary>glfwGetWindowPos</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwGetWindowPos (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int * xpos, int * ypos)</computeroutput></para><para>

<para>Retrieves the position of the content area of the specified window. </para>
</para>

<para>This function retrieves the position, in screen coordinates, of the upper-left corner of the content area of the specified window.</para>

<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>xpos</entry><entry>
<para>Where to store the x-coordinate of the upper-left corner of the content area, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>ypos</entry><entry>
<para>Where to store the y-coordinate of the upper-left corner of the content area, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link> and <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link> (see remarks).</para>

<para><formalpara><title>Remarks</title>

<para>@wayland There is no way for an application to retrieve the global position of its windows. This function will emit <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0">glfwSetWindowPos</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0.</para>
</formalpara>
This function retrieves the position, in screen coordinates, of the upper-left corner of the content area of the specified window.</para>

<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>xpos</entry><entry>
<para>Where to store the x-coordinate of the upper-left corner of the content area, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>ypos</entry><entry>
<para>Where to store the y-coordinate of the upper-left corner of the content area, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland There is no way for an application to retrieve the global position of its windows, this function will always emit <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0">glfwSetWindowPos</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga0076a8591ef7494d359730cf2250b45b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga0076a8591ef7494d359730cf2250b45b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e"/><section>
    <title>glfwGetWindowSize()</title>
<indexterm><primary>glfwGetWindowSize</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwGetWindowSize (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>

<para>Retrieves the size of the content area of the specified window. </para>
</para>

<para>This function retrieves the size, in screen coordinates, of the content area of the specified window. If you wish to retrieve the size of the framebuffer of the window in pixels, see <link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link>.</para>

<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose size to retrieve. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>width</entry><entry>
<para>Where to store the width, in screen coordinates, of the content area, or <computeroutput>NULL</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>height</entry><entry>
<para>Where to store the height, in screen coordinates, of the content area, or <computeroutput>NULL</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1gae54d1f4915ded15e267ddd3f41496cd2">glfwSetWindowSize</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga7feb769ebb3f3d21579b5a3fb07be76e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794"/><section>
    <title>glfwGetWindowUserPointer()</title>
<indexterm><primary>glfwGetWindowUserPointer</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwGetWindowUserPointer</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * glfwGetWindowUserPointer (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Returns the user pointer of the specified window. </para>
</para>

<para>This function returns the current value of the user-defined pointer of the specified window. The initial value is <computeroutput>NULL</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose pointer to return.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>

<para><formalpara><title>See also</title>

<para>window_userptr </para>

<para><link linkend="_group__window_1gacc9e68faee3c1763b54cd9bc405cf43e">glfwSetWindowUserPointer</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gaa17e287d521544bdeceafa09ac036e20"/><section>
    <title>glfwHideWindow()</title>
<indexterm><primary>glfwHideWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwHideWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwHideWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Hides the specified window. </para>
</para>

<para>This function hides the specified window if it was previously visible. If the window is already hidden or is in full screen mode, this function does nothing.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to hide.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_hide </para>

<para><link linkend="_group__window_1ga7945bcdff9e5e058cf36505d6873ed8c">glfwShowWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gaa17e287d521544bdeceafa09ac036e20_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gaa17e287d521544bdeceafa09ac036e20_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3"/><section>
    <title>glfwIconifyWindow()</title>
<indexterm><primary>glfwIconifyWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwIconifyWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwIconifyWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Iconifies the specified window. </para>
</para>

<para>This function iconifies (minimizes) the specified window if it was previously restored. If the window is already iconified, this function does nothing.</para>

<para>If the specified window is a full screen window, GLFW restores the original video mode of the monitor. The window&apos;s desired video mode is set again when the window is restored.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to iconify.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland Once a window is iconified, <link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link> won’t be able to restore it. This is a design decision of the xdg-shell protocol.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link> </para>

<para><link linkend="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8">glfwMaximizeWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Added window handle parameter.</para>
</formalpara>
This function iconifies (minimizes) the specified window if it was previously restored. If the window is already iconified, this function does nothing.</para>

<para>If the specified window is a full screen window, the original monitor resolution is restored until the window is restored.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to iconify.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland Once a window is iconified, <link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link> won’t be able to restore it. This is a design decision of the xdg-shell protocol.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link> </para>

<para><link linkend="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8">glfwMaximizeWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga24274e3c6ecd44e11fec5e6b66e4d7f3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga24274e3c6ecd44e11fec5e6b66e4d7f3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8"/><section>
    <title>glfwMaximizeWindow()</title>
<indexterm><primary>glfwMaximizeWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwMaximizeWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwMaximizeWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Maximizes the specified window. </para>
</para>

<para>This function maximizes the specified window if it was previously not maximized. If the window is already maximized, this function does nothing.</para>

<para>If the specified window is a full screen window, this function does nothing.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to maximize.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara>
<title>Thread Safety</title>
<para>This function may only be called from the main thread.</para>
</formalpara>
<formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3">glfwIconifyWindow</link> </para>

<para><link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in GLFW 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga4f825a55367d3fabde3d06e7f30128e8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga4f825a55367d3fabde3d06e7f30128e8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga872d16e4c77f58c0436f356255920cfc"/><section>
    <title>glfwPollEvents()</title>
<indexterm><primary>glfwPollEvents</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwPollEvents</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwPollEvents (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para><para>

<para>Processes all pending events. </para>
</para>

<para>This function processes only those events that are already in the event queue and then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>

<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the window refresh callback to redraw the contents of your window when necessary during such operations.</para>

<para>Do not assume that callbacks you set will <emphasis>only</emphasis> be called in response to event processing functions like this one. While it is necessary to poll for events, window systems that require GLFW to register callbacks of its own can pass events to GLFW in response to many window system function calls. GLFW will pass those events on to the application callbacks before returning.</para>

<para>Event processing is not required for joystick input to work.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@reentrancy This function must not be called from a callback.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>events </para>

<para><link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link> </para>

<para><link linkend="_group__window_1ga05223a0a4c5e50f10f289e60398153aa">glfwWaitEventsTimeout</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga872d16e4c77f58c0436f356255920cfc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga872d16e4c77f58c0436f356255920cfc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gad6f6b997278c91c43b35970eb9713d7e"/><section>
    <title>glfwPostEmptyEvent()</title>
<indexterm><primary>glfwPostEmptyEvent</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwPostEmptyEvent</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwPostEmptyEvent (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para><para>

<para>Posts an empty event to the event queue. </para>
</para>

<para>This function posts an empty event from the current thread to the event queue, causing <link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link> or <link linkend="_group__window_1ga05223a0a4c5e50f10f289e60398153aa">glfwWaitEventsTimeout</link> to return.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function may be called from any thread.</para>

<para><formalpara><title>See also</title>

<para>events </para>

<para><link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link> </para>

<para><link linkend="_group__window_1ga05223a0a4c5e50f10f289e60398153aa">glfwWaitEventsTimeout</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.1. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad6f6b997278c91c43b35970eb9713d7e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gad0c9629abb49447bedd28080642b8538"/><section>
    <title>glfwRequestWindowAttention()</title>
<indexterm><primary>glfwRequestWindowAttention</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwRequestWindowAttention</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwRequestWindowAttention (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Requests user attention to the specified window. </para>
</para>

<para>This function requests user attention to the specified window. On platforms where this is not supported, attention is requested to the application as a whole.</para>

<para>Once the user has given attention, usually by focusing the window or application, the system will end the request automatically.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to request attention to.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@macos Attention is requested to the application as a whole, not the specific window.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_attention</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad0c9629abb49447bedd28080642b8538_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga1e29caf0b819f578b04db52fff17256c"/><section>
    <title>glfwRestoreWindow()</title>
<indexterm><primary>glfwRestoreWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwRestoreWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwRestoreWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Restores the specified window. </para>
</para>

<para>This function restores the specified window if it was previously iconified (minimized) or maximized. If the window is already restored, this function does nothing.</para>

<para>If the specified window is an iconified full screen window, its desired video mode is set again for its monitor when the window is restored.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to restore.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3">glfwIconifyWindow</link> </para>

<para><link linkend="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8">glfwMaximizeWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Added window handle parameter.</para>
</formalpara>
This function restores the specified window if it was previously iconified (minimized) or maximized. If the window is already restored, this function does nothing.</para>

<para>If the specified window is a full screen window, the resolution chosen for the window is restored on the selected monitor.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to restore.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_iconify </para>

<para><link linkend="_group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3">glfwIconifyWindow</link> </para>

<para><link linkend="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8">glfwMaximizeWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.1. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga1e29caf0b819f578b04db52fff17256c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga1e29caf0b819f578b04db52fff17256c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0"/><section>
    <title>glfwSetFramebufferSizeCallback()</title>
<indexterm><primary>glfwSetFramebufferSizeCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetFramebufferSizeCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link> glfwSetFramebufferSizeCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link> callback)</computeroutput></para><para>

<para>Sets the framebuffer resize callback for the specified window. </para>
</para>

<para>This function sets the framebuffer resize callback of the specified window, which is called when the framebuffer of the specified window is resized.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_fbsize</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac"/><section>
    <title>glfwSetWindowAspectRatio()</title>
<indexterm><primary>glfwSetWindowAspectRatio</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowAspectRatio</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowAspectRatio (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int numer, int denom)</computeroutput></para><para>

<para>Sets the aspect ratio of the specified window. </para>
</para>

<para>This function sets the required aspect ratio of the content area of the specified window. If the window is full screen, the aspect ratio only takes effect once it is made windowed. If the window is not resizable, this function does nothing.</para>

<para>The aspect ratio is specified as a numerator and a denominator and both values must be greater than zero. For example, the common 16:9 aspect ratio is specified as 16 and 9, respectively.</para>

<para>If the numerator and denominator is set to <computeroutput>GLFW_DONT_CARE</computeroutput> then the aspect ratio limit is disabled.</para>

<para>The aspect ratio is applied immediately to a windowed mode window and may cause it to be resized.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to set limits for. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>numer</entry><entry>
<para>The numerator of the desired aspect ratio, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>denom</entry><entry>
<para>The denominator of the desired aspect ratio, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>If you set size limits and an aspect ratio that conflict, the results are undefined.</para>

<para>@wayland The aspect ratio will not be applied until the window is actually resized, either by the user or by the compositor.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_sizelimits </para>

<para><link linkend="_group__window_1ga8af814fc98d786d1de2505b40b707de8">glfwSetWindowSizeLimits</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad2ae94a2c5ee1c46a36e13a8f4ac68ac_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gad39f43f07856efcf3d656426a9284c75"/><section>
    <title>glfwSetWindowAttrib()</title>
<indexterm><primary>glfwSetWindowAttrib</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowAttrib</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowAttrib (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int attrib, int value)</computeroutput></para><para>

<para>Sets an attribute of the specified window. </para>
</para>

<para>This function sets the value of an attribute of the specified window.</para>

<para>The supported attributes are GLFW_DECORATED, GLFW_RESIZABLE, GLFW_FLOATING, GLFW_AUTO_ICONIFY and GLFW_FOCUS_ON_SHOW. GLFW_MOUSE_PASSTHROUGH</para>

<para>Some of these attributes are ignored for full screen windows. The new value will take effect if the window is later made windowed.</para>

<para>Some of these attributes are ignored for windowed mode windows. The new value will take effect if the window is later made full screen.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to set the attribute for. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>attrib</entry><entry>
<para>A supported window attribute. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>value</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> or <computeroutput>GLFW_FALSE</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>Calling <link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link> will always return the latest value, even if that value is ignored by the current mode of the window.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_attribs </para>

<para><link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3.</para>
</formalpara>
This function sets the value of an attribute of the specified window.</para>

<para>The supported attributes are GLFW_DECORATED, GLFW_RESIZABLE, GLFW_FLOATING, GLFW_AUTO_ICONIFY and GLFW_FOCUS_ON_SHOW.</para>

<para>Some of these attributes are ignored for full screen windows. The new value will take effect if the window is later made windowed.</para>

<para>Some of these attributes are ignored for windowed mode windows. The new value will take effect if the window is later made full screen.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to set the attribute for. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>attrib</entry><entry>
<para>A supported window attribute. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>value</entry><entry>
<para><computeroutput>GLFW_TRUE</computeroutput> or <computeroutput>GLFW_FALSE</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>Calling <link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link> will always return the latest value, even if that value is ignored by the current mode of the window.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_attribs </para>

<para><link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad39f43f07856efcf3d656426a9284c75_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gad39f43f07856efcf3d656426a9284c75_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36"/><section>
    <title>glfwSetWindowCloseCallback()</title>
<indexterm><primary>glfwSetWindowCloseCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowCloseCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link> glfwSetWindowCloseCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link> callback)</computeroutput></para><para>

<para>Sets the close callback for the specified window. </para>
</para>

<para>This function sets the close callback of the specified window, which is called when the user attempts to close the window, for example by clicking the close widget in the title bar.</para>

<para>The close flag is set before this callback is called, but you can modify it at any time with <link linkend="_group__window_1ga1cadeda7a1e2f224e06a8415d30741aa">glfwSetWindowShouldClose</link>.</para>

<para>The close callback is not triggered by <link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@macos Selecting Quit from the application menu will trigger the close callback for all windows.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_close</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter and return value. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gac6edcddbe785445d0d2b7b7be500836e"/><section>
    <title>glfwSetWindowContentScaleCallback()</title>
<indexterm><primary>glfwSetWindowContentScaleCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowContentScaleCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link> glfwSetWindowContentScaleCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link> callback)</computeroutput></para><para>

<para>Sets the window content scale callback for the specified window. </para>
</para>

<para>This function sets the window content scale callback of the specified window, which is called when the content scale of the specified window changes.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yscale)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_scale </para>

<para><link linkend="_group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee">glfwGetWindowContentScale</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e"/><section>
    <title>glfwSetWindowFocusCallback()</title>
<indexterm><primary>glfwSetWindowFocusCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowFocusCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link> glfwSetWindowFocusCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link> callback)</computeroutput></para><para>

<para>Sets the focus callback for the specified window. </para>
</para>

<para>This function sets the focus callback of the specified window, which is called when the window gains or loses input focus.</para>

<para>After the focus callback is called for a window that lost input focus, synthetic key and mouse button release events will be generated for all such that had been pressed. For more information, see <link linkend="_group__input_1gaa4cbcb81b939b8800e44cea971ddae47">glfwSetKeyCallback</link> and <link linkend="_group__input_1gab8f17646f43cdca14e5095512618fdf6">glfwSetMouseButtonCallback</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;focused)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_focus</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga182987a1a62a41a924842b9473d560df"/><section>
    <title>glfwSetWindowIcon()</title>
<indexterm><primary>glfwSetWindowIcon</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowIcon</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowIcon (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int count, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * images)</computeroutput></para><para>

<para>Sets the icon for the specified window. </para>
</para>

<para>This function sets the icon of the specified window. If passed an array of candidate images, those of or closest to the sizes desired by the system are selected. If no images are specified, the window reverts to its default icon.</para>

<para>The pixels are 32-bit, little-endian, non-premultiplied RGBA, i.e. eight bits per channel with the red channel first. They are arranged canonically as packed sequential rows, starting from the top-left corner.</para>

<para>The desired image sizes varies depending on platform and system settings. The selected images will be rescaled as needed. Good sizes include 16x16, 32x32 and 48x48.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose icon to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>count</entry><entry>
<para>The number of images in the specified array, or zero to revert to the default window icon. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>images</entry><entry>
<para>The images to create the icon from. This is ignored if count is zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>, <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link> and <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link> (see remarks).</para>

<para>@pointer_lifetime The specified image data is copied before this function returns.</para>

<para><formalpara><title>Remarks</title>

<para>@macos Regular windows do not have icons on macOS. This function will emit <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>. The dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <link xlink:href="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</link> in the Mac Developer Library.</para>

<para>@wayland There is no existing protocol to change an icon, the window will thus inherit the one defined in the application&apos;s desktop file. This function will emit <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2.</para>
</formalpara>
This function sets the icon of the specified window. If passed an array of candidate images, those of or closest to the sizes desired by the system are selected. If no images are specified, the window reverts to its default icon.</para>

<para>The pixels are 32-bit, little-endian, non-premultiplied RGBA, i.e. eight bits per channel with the red channel first. They are arranged canonically as packed sequential rows, starting from the top-left corner.</para>

<para>The desired image sizes varies depending on platform and system settings. The selected images will be rescaled as needed. Good sizes include 16x16, 32x32 and 48x48.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose icon to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>count</entry><entry>
<para>The number of images in the specified array, or zero to revert to the default window icon. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>images</entry><entry>
<para>The images to create the icon from. This is ignored if count is zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@pointer_lifetime The specified image data is copied before this function returns.</para>

<para><formalpara><title>Remarks</title>

<para>@macos The GLFW window has no icon, as it is not a document window, so this function does nothing. The dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <link xlink:href="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</link> in the Mac Developer Library.</para>

<para>@wayland There is no existing protocol to change an icon, the window will thus inherit the one defined in the application&apos;s desktop file. This function always emits <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_icon</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga182987a1a62a41a924842b9473d560df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga182987a1a62a41a924842b9473d560df_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga3e9f355edb6b9247149ddea2335eda69"/><section>
    <title>glfwSetWindowIconifyCallback()</title>
<indexterm><primary>glfwSetWindowIconifyCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowIconifyCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link> glfwSetWindowIconifyCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link> callback)</computeroutput></para><para>

<para>Sets the iconify callback for the specified window. </para>
</para>

<para>This function sets the iconification callback of the specified window, which is called when the window is iconified or restored.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;iconified)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_iconify</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137"/><section>
    <title>glfwSetWindowMaximizeCallback()</title>
<indexterm><primary>glfwSetWindowMaximizeCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowMaximizeCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link> glfwSetWindowMaximizeCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link> callback)</computeroutput></para><para>

<para>Sets the maximize callback for the specified window. </para>
</para>

<para>This function sets the maximization callback of the specified window, which is called when the window is maximized or restored.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maximized)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_maximize</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae"/><section>
    <title>glfwSetWindowMonitor()</title>
<indexterm><primary>glfwSetWindowMonitor</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowMonitor</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowMonitor (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> * monitor, int xpos, int ypos, int width, int height, int refreshRate)</computeroutput></para><para>

<para>Sets the mode, monitor, video mode and placement of a window. </para>
</para>

<para>This function sets the monitor that the window uses for full screen mode or, if the monitor is <computeroutput>NULL</computeroutput>, makes it windowed mode.</para>

<para>When setting a monitor, this function updates the width, height and refresh rate of the desired video mode and switches to the video mode closest to it. The window position is ignored when setting a monitor.</para>

<para>When the monitor is <computeroutput>NULL</computeroutput>, the position, width and height are used to place the window content area. The refresh rate is ignored when no monitor is specified.</para>

<para>If you only wish to update the resolution of a full screen window or the size of a windowed mode window, see <link linkend="_group__window_1gae54d1f4915ded15e267ddd3f41496cd2">glfwSetWindowSize</link>.</para>

<para>When a window transitions from full screen to windowed mode, this function restores any previous window settings such as whether it is decorated, floating, resizable, has size or aspect ratio limits, etc.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose monitor, size or video mode to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>monitor</entry><entry>
<para>The desired monitor, or <computeroutput>NULL</computeroutput> to set windowed mode. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The desired x-coordinate of the upper-left corner of the content area. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The desired y-coordinate of the upper-left corner of the content area. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The desired with, in screen coordinates, of the content area or video mode. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The desired height, in screen coordinates, of the content area or video mode. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>refreshRate</entry><entry>
<para>The desired refresh rate, in Hz, of the video mode, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>The OpenGL or OpenGL ES context will not be destroyed or otherwise affected by any resizing or mode switching, although you may need to update your viewport if the framebuffer size has changed.</para>

<para>@wayland The desired window position is ignored, as there is no way for an application to set this property.</para>

<para>@wayland Setting the window to full screen will not attempt to change the mode, no matter what the requested size or refresh rate.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_monitor </para>

<para>window_full_screen </para>

<para><link linkend="_group__window_1gad441645a53bc9274a0ee163d40f0c637">glfwGetWindowMonitor</link> </para>

<para><link linkend="_group__window_1gae54d1f4915ded15e267ddd3f41496cd2">glfwSetWindowSize</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga12fabf78575e59c00f822f323ae0b6ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga12fabf78575e59c00f822f323ae0b6ae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga62a784fe328f227727cbcd0d07480ff3"/><section>
    <title>glfwSetWindowOpacity()</title>
<indexterm><primary>glfwSetWindowOpacity</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowOpacity</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowOpacity (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, float opacity)</computeroutput></para><para>

<para>Sets the opacity of the whole window. </para>
</para>

<para>This function sets the opacity of the window, including any decorations.</para>

<para>The opacity (or alpha) value is a positive finite number between zero and one, where zero is fully transparent and one is fully opaque.</para>

<para>The initial opacity value for newly created windows is one.</para>

<para>A window created with framebuffer transparency may not use whole window transparency. The results of doing this are undefined.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to set the opacity for. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>opacity</entry><entry>
<para>The desired opacity of the specified window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link> and <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link> (see remarks).</para>

<para><formalpara><title>Remarks</title>

<para>@wayland There is no way to set an opacity factor for a window. This function will emit <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_transparency </para>

<para><link linkend="_group__window_1gad124d57a1c1c519f60c9765cd0c2a89c">glfwGetWindowOpacity</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3.</para>
</formalpara>
This function sets the opacity of the window, including any decorations.</para>

<para>The opacity (or alpha) value is a positive finite number between zero and one, where zero is fully transparent and one is fully opaque.</para>

<para>The initial opacity value for newly created windows is one.</para>

<para>A window created with framebuffer transparency may not use whole window transparency. The results of doing this are undefined.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to set the opacity for. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>opacity</entry><entry>
<para>The desired opacity of the specified window.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_transparency </para>

<para><link linkend="_group__window_1gad124d57a1c1c519f60c9765cd0c2a89c">glfwGetWindowOpacity</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga62a784fe328f227727cbcd0d07480ff3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga62a784fe328f227727cbcd0d07480ff3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0"/><section>
    <title>glfwSetWindowPos()</title>
<indexterm><primary>glfwSetWindowPos</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowPos (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int xpos, int ypos)</computeroutput></para><para>

<para>Sets the position of the content area of the specified window. </para>
</para>

<para>This function sets the position, in screen coordinates, of the upper-left corner of the content area of the specified windowed mode window. If the window is a full screen window, this function does nothing.</para>

<para><emphasis role="bold">Do not use this function</emphasis> to move an already visible window unless you have very good reasons for doing so, as it will confuse and annoy the user.</para>

<para>The window manager may put limits on what positions are allowed. GLFW cannot and should not override these limits.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The x-coordinate of the upper-left corner of the content area. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The y-coordinate of the upper-left corner of the content area.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link> and <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link> (see remarks).</para>

<para><formalpara><title>Remarks</title>

<para>@wayland There is no way for an application to set the global position of its windows. This function will emit <link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga0076a8591ef7494d359730cf2250b45b">glfwGetWindowPos</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</formalpara>
This function sets the position, in screen coordinates, of the upper-left corner of the content area of the specified windowed mode window. If the window is a full screen window, this function does nothing.</para>

<para><emphasis role="bold">Do not use this function</emphasis> to move an already visible window unless you have very good reasons for doing so, as it will confuse and annoy the user.</para>

<para>The window manager may put limits on what positions are allowed. GLFW cannot and should not override these limits.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>xpos</entry><entry>
<para>The x-coordinate of the upper-left corner of the content area. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>ypos</entry><entry>
<para>The y-coordinate of the upper-left corner of the content area.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland There is no way for an application to set the global position of its windows, this function will always emit <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_pos </para>

<para><link linkend="_group__window_1ga0076a8591ef7494d359730cf2250b45b">glfwGetWindowPos</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga0dc8d880a0d87be16d3ea8114561f6f0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga0dc8d880a0d87be16d3ea8114561f6f0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6"/><section>
    <title>glfwSetWindowPosCallback()</title>
<indexterm><primary>glfwSetWindowPosCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowPosCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link> glfwSetWindowPosCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link> callback)</computeroutput></para><para>

<para>Sets the position callback for the specified window. </para>
</para>

<para>This function sets the position callback of the specified window, which is called when the window is moved. The callback is provided with the position, in screen coordinates, of the upper-left corner of the content area of the window.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland This callback will never be called, as there is no way for an application to know its global position.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_pos</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7"/><section>
    <title>glfwSetWindowRefreshCallback()</title>
<indexterm><primary>glfwSetWindowRefreshCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowRefreshCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link> glfwSetWindowRefreshCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link> callback)</computeroutput></para><para>

<para>Sets the refresh callback for the specified window. </para>
</para>

<para>This function sets the refresh callback of the specified window, which is called when the content area of the window needs to be redrawn, for example if the window has been exposed after having been covered by another window.</para>

<para>On compositing window systems such as Aero, Compiz, Aqua or Wayland, where the window contents are saved off-screen, this callback may be called only very infrequently or never at all.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>);
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_refresh</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. @glfw3 Added window handle parameter and return value. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga1cadeda7a1e2f224e06a8415d30741aa"/><section>
    <title>glfwSetWindowShouldClose()</title>
<indexterm><primary>glfwSetWindowShouldClose</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowShouldClose</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowShouldClose (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int value)</computeroutput></para><para>

<para>Sets the close flag of the specified window. </para>
</para>

<para>This function sets the value of the close flag of the specified window. This can be used to override the user&apos;s attempt to close the window, or to signal that it should be closed.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose flag to change. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>value</entry><entry>
<para>The new value.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>

<para><formalpara><title>See also</title>

<para>window_close</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga1cadeda7a1e2f224e06a8415d30741aa_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gae54d1f4915ded15e267ddd3f41496cd2"/><section>
    <title>glfwSetWindowSize()</title>
<indexterm><primary>glfwSetWindowSize</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowSize (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>

<para>Sets the size of the content area of the specified window. </para>
</para>

<para>This function sets the size, in screen coordinates, of the content area of the specified window.</para>

<para>For full screen windows, this function updates the resolution of its desired video mode and switches to the video mode closest to it, without affecting the window&apos;s context. As the context is unaffected, the bit depths of the framebuffer remain unchanged.</para>

<para>If you wish to update the refresh rate of the desired video mode in addition to its resolution, see <link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link>.</para>

<para>The window manager may put limits on what sizes are allowed. GLFW cannot and should not override these limits.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to resize. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>width</entry><entry>
<para>The desired width, in screen coordinates, of the window content area. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>height</entry><entry>
<para>The desired height, in screen coordinates, of the window content area.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland A full screen window will not attempt to change the mode, no matter what the requested size.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_size </para>

<para><link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link> </para>

<para><link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gae54d1f4915ded15e267ddd3f41496cd2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gae54d1f4915ded15e267ddd3f41496cd2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5"/><section>
    <title>glfwSetWindowSizeCallback()</title>
<indexterm><primary>glfwSetWindowSizeCallback</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowSizeCallback</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link> glfwSetWindowSizeCallback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link> callback)</computeroutput></para><para>

<para>Sets the size callback for the specified window. </para>
</para>

<para>This function sets the size callback of the specified window, which is called when the window is resized. The callback is provided with the size, in screen coordinates, of the content area of the window.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose callback to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para>
</formalpara>
@callback_signature <literallayout><computeroutput><emphasis role="keywordtype">void</emphasis>&#32;function_name(<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
</computeroutput></literallayout> For more information about the callback parameters, see the <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">function pointer type</link>.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_size</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter and return value. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga8af814fc98d786d1de2505b40b707de8"/><section>
    <title>glfwSetWindowSizeLimits()</title>
<indexterm><primary>glfwSetWindowSizeLimits</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowSizeLimits</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowSizeLimits (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int minwidth, int minheight, int maxwidth, int maxheight)</computeroutput></para><para>

<para>Sets the size limits of the specified window. </para>
</para>

<para>This function sets the size limits of the content area of the specified window. If the window is full screen, the size limits only take effect once it is made windowed. If the window is not resizable, this function does nothing.</para>

<para>The size limits are applied immediately to a windowed mode window and may cause it to be resized.</para>

<para>The maximum dimensions must be greater than or equal to the minimum dimensions and all must be greater than or equal to zero.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to set limits for. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>minwidth</entry><entry>
<para>The minimum width, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>minheight</entry><entry>
<para>The minimum height, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>maxwidth</entry><entry>
<para>The maximum width, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>maxheight</entry><entry>
<para>The maximum height, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>If you set size limits and an aspect ratio that conflict, the results are undefined.</para>

<para>@wayland The size limits will not be applied until the window is actually resized, either by the user or by the compositor.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_sizelimits </para>

<para><link linkend="_group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac">glfwSetWindowAspectRatio</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga8af814fc98d786d1de2505b40b707de8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga8af814fc98d786d1de2505b40b707de8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga861ed3414ab8120e2f74151a666ed1dc"/><section>
    <title>glfwSetWindowTitle()</title>
<indexterm><primary>glfwSetWindowTitle</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowTitle</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowTitle (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, const char * title)</computeroutput></para><para>

<para>Sets the title of the specified window. </para>
</para>

<para>This function sets the window title, encoded as UTF-8, of the specified window.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose title to change. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>title</entry><entry>
<para>The UTF-8 encoded window title.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@macos The window title will not be updated until the next time you process events.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_title</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga861ed3414ab8120e2f74151a666ed1dc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga861ed3414ab8120e2f74151a666ed1dc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gacc9e68faee3c1763b54cd9bc405cf43e"/><section>
    <title>glfwSetWindowUserPointer()</title>
<indexterm><primary>glfwSetWindowUserPointer</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSetWindowUserPointer</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSetWindowUserPointer (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * pointer)</computeroutput></para><para>

<para>Sets the user pointer of the specified window. </para>
</para>

<para>This function sets the user-defined pointer of the specified window. The current value is retained until the window is destroyed. The initial value is <computeroutput>NULL</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose pointer to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>pointer</entry><entry>
<para>The new value.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>

<para><formalpara><title>See also</title>

<para>window_userptr </para>

<para><link linkend="_group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794">glfwGetWindowUserPointer</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__window_1ga7945bcdff9e5e058cf36505d6873ed8c"/><section>
    <title>glfwShowWindow()</title>
<indexterm><primary>glfwShowWindow</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwShowWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwShowWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Makes the specified window visible. </para>
</para>

<para>This function makes the specified window visible if it was previously hidden. If the window is already visible or is in full screen mode, this function does nothing.</para>

<para>By default, windowed mode windows are focused when shown Set the GLFW_FOCUS_ON_SHOW window hint to change this behavior for all newly created windows, or change the behavior for an existing window with <link linkend="_group__window_1gad39f43f07856efcf3d656426a9284c75">glfwSetWindowAttrib</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to make visible.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para>@wayland Because Wayland wants every frame of the desktop to be complete, this function does not immediately make the window visible. Instead it will become visible the next time the window framebuffer is updated after this call.</para>
</formalpara>
@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_hide </para>

<para><link linkend="_group__window_1gaa17e287d521544bdeceafa09ac036e20">glfwHideWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0.</para>
</formalpara>
This function makes the specified window visible if it was previously hidden. If the window is already visible or is in full screen mode, this function does nothing.</para>

<para>By default, windowed mode windows are focused when shown Set the GLFW_FOCUS_ON_SHOW window hint to change this behavior for all newly created windows, or change the behavior for an existing window with <link linkend="_group__window_1gad39f43f07856efcf3d656426a9284c75">glfwSetWindowAttrib</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to make visible.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_hide </para>

<para><link linkend="_group__window_1gaa17e287d521544bdeceafa09ac036e20">glfwHideWindow</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga7945bcdff9e5e058cf36505d6873ed8c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga7945bcdff9e5e058cf36505d6873ed8c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gafb827800eedbfcbc97b1e5408df668d7"/><section>
    <title>glfwSwapBuffers()</title>
<indexterm><primary>glfwSwapBuffers</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwSwapBuffers</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwSwapBuffers (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Swaps the front and back buffers of the specified window. </para>
</para>

<para>This function swaps the front and back buffers of the specified window when rendering with OpenGL or OpenGL ES. If the swap interval is greater than zero, the GPU driver waits the specified number of screen updates before swapping the buffers.</para>

<para>The specified window must have an OpenGL or OpenGL ES context. Specifying a window without a context will generate a <link linkend="_group__errors_1gacff24d2757da752ae4c80bf452356487">GLFW_NO_WINDOW_CONTEXT</link> error.</para>

<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see <computeroutput>vkQueuePresentKHR</computeroutput> instead.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window whose buffers to swap.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gacff24d2757da752ae4c80bf452356487">GLFW_NO_WINDOW_CONTEXT</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para><formalpara><title>Remarks</title>

<para><emphasis role="bold">EGL:</emphasis> The context of the specified window must be current on the calling thread.</para>
</formalpara>
@thread_safety This function may be called from any thread.</para>

<para><formalpara><title>See also</title>

<para>buffer_swap </para>

<para><link linkend="_group__context_1ga12a595c06947cec4967c6e1f14210a8a">glfwSwapInterval</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gafb827800eedbfcbc97b1e5408df668d7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gafb827800eedbfcbc97b1e5408df668d7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga6e042d05823c11e11c7339b81a237738"/><section>
    <title>glfwWaitEvents()</title>
<indexterm><primary>glfwWaitEvents</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwWaitEvents</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwWaitEvents (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para><para>

<para>Waits until events are queued and processes them. </para>
</para>

<para>This function puts the calling thread to sleep until at least one event is available in the event queue. Once one or more events are available, it behaves exactly like <link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>

<para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para>

<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the window refresh callback to redraw the contents of your window when necessary during such operations.</para>

<para>Do not assume that callbacks you set will <emphasis>only</emphasis> be called in response to event processing functions like this one. While it is necessary to poll for events, window systems that require GLFW to register callbacks of its own can pass events to GLFW in response to many window system function calls. GLFW will pass those events on to the application callbacks before returning.</para>

<para>Event processing is not required for joystick input to work.</para>

<para>@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@reentrancy This function must not be called from a callback.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>events </para>

<para><link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link> </para>

<para><link linkend="_group__window_1ga05223a0a4c5e50f10f289e60398153aa">glfwWaitEventsTimeout</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 2.5. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga6e042d05823c11e11c7339b81a237738_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga6e042d05823c11e11c7339b81a237738_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga05223a0a4c5e50f10f289e60398153aa"/><section>
    <title>glfwWaitEventsTimeout()</title>
<indexterm><primary>glfwWaitEventsTimeout</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwWaitEventsTimeout</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwWaitEventsTimeout (double timeout)</computeroutput></para><para>

<para>Waits with timeout until events are queued and processes them. </para>
</para>

<para>This function puts the calling thread to sleep until at least one event is available in the event queue, or until the specified timeout is reached. If one or more events are available, it behaves exactly like <link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>

<para>The timeout value must be a positive finite number.</para>

<para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para>

<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the window refresh callback to redraw the contents of your window when necessary during such operations.</para>

<para>Do not assume that callbacks you set will <emphasis>only</emphasis> be called in response to event processing functions like this one. While it is necessary to poll for events, window systems that require GLFW to register callbacks of its own can pass events to GLFW in response to many window system function calls. GLFW will pass those events on to the application callbacks before returning.</para>

<para>Event processing is not required for joystick input to work.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>timeout</entry><entry>
<para>The maximum amount of time, in seconds, to wait.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>, <link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link> and <link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>.</para>

<para>@reentrancy This function must not be called from a callback.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>events </para>

<para><link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link> </para>

<para><link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.2. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga05223a0a4c5e50f10f289e60398153aa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga69c40728499720bef8a49aa925ea0efa"/><section>
    <title>glfwWindowHint()</title>
<indexterm><primary>glfwWindowHint</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwWindowHint</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwWindowHint (int hint, int value)</computeroutput></para><para>

<para>Sets the specified window hint to the desired value. </para>
</para>

<para>This function sets hints for the next call to <link linkend="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055">glfwCreateWindow</link>. The hints, once set, retain their values until changed by a call to this function or <link linkend="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4">glfwDefaultWindowHints</link>, or until the library is terminated.</para>

<para>Only integer value hints can be set with this function. String value hints are set with <link linkend="_group__window_1ga3c2270562d7ba13d92680ba1090adafe">glfwWindowHintString</link>.</para>

<para>This function does not check whether the specified hint values are valid. If you set hints to invalid values this will instead be reported by the next call to <link linkend="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055">glfwCreateWindow</link>.</para>

<para>Some hints are platform specific. These may be set on any platform but they will only affect their specific platform. Other platforms will ignore them. Setting these hints requires no platform specific headers or functions.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>hint</entry><entry>
<para>The window hint to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>value</entry><entry>
<para>The new value of the window hint.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_hints </para>

<para><link linkend="_group__window_1ga3c2270562d7ba13d92680ba1090adafe">glfwWindowHintString</link> </para>

<para><link linkend="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4">glfwDefaultWindowHints</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindowHint</computeroutput>. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga69c40728499720bef8a49aa925ea0efa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1ga3c2270562d7ba13d92680ba1090adafe"/><section>
    <title>glfwWindowHintString()</title>
<indexterm><primary>glfwWindowHintString</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwWindowHintString</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glfwWindowHintString (int hint, const char * value)</computeroutput></para><para>

<para>Sets the specified window hint to the desired value. </para>
</para>

<para>This function sets hints for the next call to <link linkend="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055">glfwCreateWindow</link>. The hints, once set, retain their values until changed by a call to this function or <link linkend="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4">glfwDefaultWindowHints</link>, or until the library is terminated.</para>

<para>Only string type hints can be set with this function. Integer value hints are set with <link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>.</para>

<para>This function does not check whether the specified hint values are valid. If you set hints to invalid values this will instead be reported by the next call to <link linkend="_group__window_1gaaccd00fafe81e2db94e8cdf55721e055">glfwCreateWindow</link>.</para>

<para>Some hints are platform specific. These may be set on any platform but they will only affect their specific platform. Other platforms will ignore them. Setting these hints requires no platform specific headers or functions.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>hint</entry><entry>
<para>The window hint to set. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>value</entry><entry>
<para>The new value of the window hint.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link> and <link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>.</para>

<para>@pointer_lifetime The specified string is copied before this function returns.</para>

<para>@thread_safety This function must only be called from the main thread.</para>

<para><formalpara><title>See also</title>

<para>window_hints </para>

<para><link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link> </para>

<para><link linkend="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4">glfwDefaultWindowHints</link></para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.3. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_ga3c2270562d7ba13d92680ba1090adafe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__window_1gaa6162f67dfa38b8beda2fea623649332"/><section>
    <title>glfwWindowShouldClose()</title>
<indexterm><primary>glfwWindowShouldClose</primary><secondary>Window reference</secondary></indexterm>
<indexterm><primary>Window reference</primary><secondary>glfwWindowShouldClose</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int glfwWindowShouldClose (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>

<para>Checks the close flag of the specified window. </para>
</para>

<para>This function returns the value of the close flag of the specified window.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>window</entry><entry>
<para>The window to query. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The value of the close flag.</para>
</formalpara>
@errors Possible errors include <link linkend="_group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a">GLFW_NOT_INITIALIZED</link>.</para>

<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>

<para><formalpara><title>See also</title>

<para>window_close</para>
</formalpara>
<formalpara><title>Since</title>

<para>Added in version 3.0. </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__window_gaa6162f67dfa38b8beda2fea623649332_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
