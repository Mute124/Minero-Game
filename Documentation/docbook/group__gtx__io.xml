<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__io" xml:lang="en-US">
<title>GLM_GTX_io</title>
<indexterm><primary>GLM_GTX_io</primary></indexterm>
Collaboration diagram for GLM_GTX_io:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespaceglm_1_1io">glm::io</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga7dbfaf92e0b3cd5e423526472cb33d80">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga4d7b2633e1737a8c3f17354b62b3e843">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1vec">vec</link>&lt; 1, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1gafb889e67dc67903f6d7423a7aac06817">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1gace7419e069c8e8e742077f604e29313a">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1gac1ab1431410d0896f129fd8c39a540a1">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga354984da3802a6fa7d47ae0662c97482">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga5831e1dafe0bd4a432a0738e00503145">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 3, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1gabe012e88526b4a19adaf54ce8c672cf6">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 4, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga84fba07d4cc4091ada0d7c155d0645a1">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 2, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga24f20a42378444d761f5fec0f12d337c">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga1838a598f413de8212009a206bfb53df">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 4, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1gab78ed0585006908fe284f2fdd802d4e8">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 2, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga985eec16a1cae3ac09f55f8354e15232">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 3, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1gaaacbc05dc7eabbed3dcbc5ed9d69781d">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; <link linkend="_group__gtx__io_1ga72ecd3d1dabd396b2cda883558313957">glm::operator&lt;&lt;</link> (std::basic_ostream&lt; CTy, CTr &gt; &amp;, std::pair&lt; <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &gt; const &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/io.hpp&gt; to use the features of this extension.</para>

<para>std::[w]ostream support for glm types</para>

<para>std::[w]ostream support for glm types + qualifier/width/etc. manipulators based on howard hinnant&apos;s std::chrono io proposal [<link xlink:href="http://home.roadrunner.com/~hinnant/bloomington/chrono_io.html">http://home.roadrunner.com/~hinnant/bloomington/chrono_io.html</link>] </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__io_1ga354984da3802a6fa7d47ae0662c97482"/><section>
    <title>operator&lt;&lt;()<computeroutput>[1/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga354984da3802a6fa7d47ae0662c97482_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga5831e1dafe0bd4a432a0738e00503145"/><section>
    <title>operator&lt;&lt;()<computeroutput>[2/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 3, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga5831e1dafe0bd4a432a0738e00503145_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1gabe012e88526b4a19adaf54ce8c672cf6"/><section>
    <title>operator&lt;&lt;()<computeroutput>[3/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 4, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_gabe012e88526b4a19adaf54ce8c672cf6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga84fba07d4cc4091ada0d7c155d0645a1"/><section>
    <title>operator&lt;&lt;()<computeroutput>[4/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 2, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga84fba07d4cc4091ada0d7c155d0645a1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga24f20a42378444d761f5fec0f12d337c"/><section>
    <title>operator&lt;&lt;()<computeroutput>[5/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga24f20a42378444d761f5fec0f12d337c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga1838a598f413de8212009a206bfb53df"/><section>
    <title>operator&lt;&lt;()<computeroutput>[6/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 4, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga1838a598f413de8212009a206bfb53df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1gab78ed0585006908fe284f2fdd802d4e8"/><section>
    <title>operator&lt;&lt;()<computeroutput>[7/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 2, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_gab78ed0585006908fe284f2fdd802d4e8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga985eec16a1cae3ac09f55f8354e15232"/><section>
    <title>operator&lt;&lt;()<computeroutput>[8/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 3, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga985eec16a1cae3ac09f55f8354e15232_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1gaaacbc05dc7eabbed3dcbc5ed9d69781d"/><section>
    <title>operator&lt;&lt;()<computeroutput>[9/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_gaaacbc05dc7eabbed3dcbc5ed9d69781d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga7dbfaf92e0b3cd5e423526472cb33d80"/><section>
    <title>operator&lt;&lt;()<computeroutput>[10/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga7dbfaf92e0b3cd5e423526472cb33d80_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga72ecd3d1dabd396b2cda883558313957"/><section>
    <title>operator&lt;&lt;()<computeroutput>[11/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, std::pair&lt; <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const, <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga72ecd3d1dabd396b2cda883558313957_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1ga4d7b2633e1737a8c3f17354b62b3e843"/><section>
    <title>operator&lt;&lt;()<computeroutput>[12/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1vec">vec</link>&lt; 1, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_ga4d7b2633e1737a8c3f17354b62b3e843_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1gafb889e67dc67903f6d7423a7aac06817"/><section>
    <title>operator&lt;&lt;()<computeroutput>[13/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_gafb889e67dc67903f6d7423a7aac06817_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1gace7419e069c8e8e742077f604e29313a"/><section>
    <title>operator&lt;&lt;()<computeroutput>[14/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_gace7419e069c8e8e742077f604e29313a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__io_1gac1ab1431410d0896f129fd8c39a540a1"/><section>
    <title>operator&lt;&lt;()<computeroutput>[15/15]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>GLM_GTX_io</secondary></indexterm>
<indexterm><primary>GLM_GTX_io</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename CTy , typename CTr , typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> std::basic_ostream&lt; CTy, CTr &gt; &amp; glm::operator&lt;&lt; (std::basic_ostream&lt; CTy, CTr &gt; &amp; os, <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; a)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__io_gac1ab1431410d0896f129fd8c39a540a1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
