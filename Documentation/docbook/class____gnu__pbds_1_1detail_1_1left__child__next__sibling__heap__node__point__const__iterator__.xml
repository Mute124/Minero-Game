<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__" xml:lang="en-US">
<title>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary></indexterm>
<para>

<para>Const point-type iterator. </para>
 
</para>
<para>
<computeroutput>#include &lt;point_const_iterator.hpp&gt;</computeroutput>
</para>
Collaboration diagram for __gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator____coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad578e2244dc434c3efe2c432b2ed6e49">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a616b40631335033152a105b5f70abd0a">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef Node::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af2d485e6c89750d2ba79c5e5d85236cd">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a34f86362fdd7d95212ccf7ee47c2faa5">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad578e2244dc434c3efe2c432b2ed6e49">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a616b40631335033152a105b5f70abd0a">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef Node::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af2d485e6c89750d2ba79c5e5d85236cd">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a34f86362fdd7d95212ccf7ee47c2faa5">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad578e2244dc434c3efe2c432b2ed6e49">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a616b40631335033152a105b5f70abd0a">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef Node::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af2d485e6c89750d2ba79c5e5d85236cd">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a34f86362fdd7d95212ccf7ee47c2faa5">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link> &gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a845de71c6dc1f361a8772223980f9c69">left_child_next_sibling_heap_node_point_const_iterator_</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2b5ec53c4fd8841483c95d86548cea47">left_child_next_sibling_heap_node_point_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1afbb9af6ccdfdb4ae9864cc6e12e15ada">left_child_next_sibling_heap_node_point_const_iterator_</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2096ba7f4be3c22e0f883172ba323f5c">operator-&gt;</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a60ad369139de2b800a5a729f10b992bb">operator*</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a8edba7b434d584bec3e5fcd40723c790">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a279a3467a420876fa21b8af5b5b6ed7c">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a845de71c6dc1f361a8772223980f9c69">left_child_next_sibling_heap_node_point_const_iterator_</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2b5ec53c4fd8841483c95d86548cea47">left_child_next_sibling_heap_node_point_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1afbb9af6ccdfdb4ae9864cc6e12e15ada">left_child_next_sibling_heap_node_point_const_iterator_</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2096ba7f4be3c22e0f883172ba323f5c">operator-&gt;</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a60ad369139de2b800a5a729f10b992bb">operator*</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a8edba7b434d584bec3e5fcd40723c790">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a279a3467a420876fa21b8af5b5b6ed7c">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a845de71c6dc1f361a8772223980f9c69">left_child_next_sibling_heap_node_point_const_iterator_</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2b5ec53c4fd8841483c95d86548cea47">left_child_next_sibling_heap_node_point_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1afbb9af6ccdfdb4ae9864cc6e12e15ada">left_child_next_sibling_heap_node_point_const_iterator_</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2096ba7f4be3c22e0f883172ba323f5c">operator-&gt;</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a60ad369139de2b800a5a729f10b992bb">operator*</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a8edba7b434d584bec3e5fcd40723c790">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a279a3467a420876fa21b8af5b5b6ed7c">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a9da93e74a85054ab67cb892492ddcbe6">m_p_nd</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, Node &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, Node &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, Node &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</title></simplesect>

<para>Const point-type iterator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a616b40631335033152a105b5f70abd0a"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a616b40631335033152a105b5f70abd0a"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a616b40631335033152a105b5f70abd0a"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad578e2244dc434c3efe2c432b2ed6e49"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad578e2244dc434c3efe2c432b2ed6e49"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad578e2244dc434c3efe2c432b2ed6e49"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c"/><section>
    <title>node_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>node_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,Node&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::node_pointer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c"/><section>
    <title>node_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>node_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,Node&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::node_pointer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c"/><section>
    <title>node_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>node_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,Node&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::node_pointer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af2d485e6c89750d2ba79c5e5d85236cd"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af2d485e6c89750d2ba79c5e5d85236cd"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af2d485e6c89750d2ba79c5e5d85236cd"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a34f86362fdd7d95212ccf7ee47c2faa5"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a34f86362fdd7d95212ccf7ee47c2faa5"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a34f86362fdd7d95212ccf7ee47c2faa5"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38">value_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a0d64aeaf34a1aa7635345e4100c2da38"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a845de71c6dc1f361a8772223980f9c69"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ (<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2b5ec53c4fd8841483c95d86548cea47"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1afbb9af6ccdfdb4ae9864cc6e12e15ada"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a845de71c6dc1f361a8772223980f9c69"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ (<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2b5ec53c4fd8841483c95d86548cea47"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1afbb9af6ccdfdb4ae9864cc6e12e15ada"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a845de71c6dc1f361a8772223980f9c69"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ (<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2b5ec53c4fd8841483c95d86548cea47"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1afbb9af6ccdfdb4ae9864cc6e12e15ada"/><section>
    <title>left_child_next_sibling_heap_node_point_const_iterator_()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_node_point_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_node_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_node_point_const_iterator_ (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a279a3467a420876fa21b8af5b5b6ed7c"/><section>
    <title>operator!=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a279a3467a420876fa21b8af5b5b6ed7c"/><section>
    <title>operator!=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a279a3467a420876fa21b8af5b5b6ed7c"/><section>
    <title>operator!=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a60ad369139de2b800a5a729f10b992bb"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a60ad369139de2b800a5a729f10b992bb"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a60ad369139de2b800a5a729f10b992bb"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1ad8775d34777d8e7bc7ed363f7f562303">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2096ba7f4be3c22e0f883172ba323f5c"/><section>
    <title>operator-&gt;()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2096ba7f4be3c22e0f883172ba323f5c"/><section>
    <title>operator-&gt;()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a2096ba7f4be3c22e0f883172ba323f5c"/><section>
    <title>operator-&gt;()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a92f42fc58c4ad63cf069654d1211e0e8">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a8edba7b434d584bec3e5fcd40723c790"/><section>
    <title>operator==()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a8edba7b434d584bec3e5fcd40723c790"/><section>
    <title>operator==()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a8edba7b434d584bec3e5fcd40723c790"/><section>
    <title>operator==()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1a9da93e74a85054ab67cb892492ddcbe6"/><section>
    <title>m_p_nd</title>
<indexterm><primary>m_p_nd</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>m_p_nd</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator___1af944ad74aaf5b91b0ab952ca79377e8c">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_</link>&lt; Node, _Alloc &gt;::m_p_nd</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2point__const__iterator_8hpp">point_const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2point__const__iterator_8hpp">point_const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2point__const__iterator_8hpp">point_const_iterator.hpp</link></section>
</section>
