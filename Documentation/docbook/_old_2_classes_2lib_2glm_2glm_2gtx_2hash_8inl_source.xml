<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2gtx_2hash_8inl_source" xml:lang="en-US">
<title>hash.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/gtx/hash.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
11 
12 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>&#32;{
13 <emphasis role="keyword">namespace&#32;</emphasis>detail
14 {
15 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a4603970cbd724c5d102bbcf17f430047">GLM_INLINE</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">hash_combine</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;&amp;seed,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash)
16 &#32;&#32;&#32;&#32;{
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;+=&#32;0x9e3779b9&#32;+&#32;(<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;&lt;&lt;&#32;6)&#32;+&#32;(seed&#32;&gt;&gt;&#32;2);
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;^=&#32;hash;
19 &#32;&#32;&#32;&#32;}
20 }}
21 
22 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>
23 {
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
25 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::vec&lt;1,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;1, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>
26 &#32;&#32;&#32;&#32;{
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;T&gt;&#32;hasher;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x);
29 &#32;&#32;&#32;&#32;}
30 
31 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
32 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::vec&lt;2,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>
33 &#32;&#32;&#32;&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;T&gt;&#32;hasher;
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x));
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y));
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
39 &#32;&#32;&#32;&#32;}
40 
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
42 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::vec&lt;3,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>
43 &#32;&#32;&#32;&#32;{
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;T&gt;&#32;hasher;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x));
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y));
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z));
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
50 &#32;&#32;&#32;&#32;}
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
53 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::vec&lt;4,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;T&gt;&#32;hasher;
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x));
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y));
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z));
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w));
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
62 &#32;&#32;&#32;&#32;}
63 
64 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
65 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::qua&lt;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1qua">glm::qua&lt;T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)&#32;<emphasis role="keyword">const</emphasis>
66 &#32;&#32;&#32;&#32;{
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;T&gt;&#32;hasher;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(q.x));
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(q.y));
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(q.z));
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(q.w));
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
74 &#32;&#32;&#32;&#32;}
75 
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
77 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::tdualquat&lt;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1tdualquat">glm::tdualquat&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)&#32;<emphasis role="keyword">const</emphasis>
78 &#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::qua&lt;T,&#32;Q&gt;&gt;&#32;hasher;
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(q.real));
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(q.dual));
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
84 &#32;&#32;&#32;&#32;}
85 
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
87 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
88 &#32;&#32;&#32;&#32;{
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;2,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
94 &#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
97 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
98 &#32;&#32;&#32;&#32;{
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;3,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
104 &#32;&#32;&#32;&#32;}
105 
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
107 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;2,&#32;4,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;2, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
108 &#32;&#32;&#32;&#32;{
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;4,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
114 &#32;&#32;&#32;&#32;}
115 
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
117 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;3, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
118 &#32;&#32;&#32;&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;2,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[2]));
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
125 &#32;&#32;&#32;&#32;}
126 
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
128 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
129 &#32;&#32;&#32;&#32;{
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;3,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[2]));
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
136 &#32;&#32;&#32;&#32;}
137 
138 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
139 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
140 &#32;&#32;&#32;&#32;{
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;4,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[2]));
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
147 &#32;&#32;&#32;&#32;}
148 
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
150 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;4,&#32;2,&#32;T,Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;4, 2, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
151 &#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;2,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[2]));
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[3]));
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
159 &#32;&#32;&#32;&#32;}
160 
161 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
162 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;4,&#32;3,&#32;T,Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;4, 3, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
163 &#32;&#32;&#32;&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;3,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[2]));
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[3]));
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
171 &#32;&#32;&#32;&#32;}
172 
173 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
174 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;hash&lt;glm::mat&lt;4,&#32;4,&#32;T,Q&gt;&gt;::operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>
175 &#32;&#32;&#32;&#32;{
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>&#32;=&#32;0;
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&lt;glm::vec&lt;4,&#32;T,&#32;Q&gt;&gt;&#32;hasher;
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[0]));
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[1]));
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[2]));
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a391b3eb8d7f4662a1b31046bd69f2755">glm::detail::hash_combine</link>(seed,&#32;hasher(m[3]));
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelest_1a9e3785d770073a52c90f475365f49542">seed</link>;
183 &#32;&#32;&#32;&#32;}
184 }
</programlisting></section>
