<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2tag__and__trait_8hpp_source" xml:lang="en-US">
<title>tag_and_trait.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/tag_and_trait.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
42 <emphasis role="preprocessor">#ifndef&#32;PB_DS_TAG_AND_TRAIT_HPP</emphasis>
43 <emphasis role="preprocessor">#define&#32;PB_DS_TAG_AND_TRAIT_HPP</emphasis>
44 
45 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
47 
52 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
53 {
75 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>trivial_iterator_tag
76 &#32;&#32;{&#32;};
77 
79 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link>;
80 
81 
93 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>basic_invalidation_guarantee
94 &#32;&#32;{&#32;};
95 
103 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>point_invalidation_guarantee&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;basic_invalidation_guarantee
104 &#32;&#32;{&#32;};
105 
114 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>range_invalidation_guarantee&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;point_invalidation_guarantee
115 &#32;&#32;{&#32;};
117 
118 
125 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_tag
126 &#32;&#32;{&#32;};
127 
129 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>sequence_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;container_tag&#32;{&#32;};
130 
132 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>string_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;sequence_tag&#32;{&#32;};
133 
135 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>associative_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;container_tag&#32;{&#32;};
136 
138 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>basic_hash_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;associative_tag&#32;{&#32;};
139 
141 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>cc_hash_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;basic_hash_tag&#32;{&#32;};
142 
144 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>gp_hash_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;basic_hash_tag&#32;{&#32;};
145 
147 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>basic_branch_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;associative_tag&#32;{&#32;};
148 
150 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tree_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;basic_branch_tag&#32;{&#32;};
151 
153 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>rb_tree_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;tree_tag&#32;{&#32;};
154 
156 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>splay_tree_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;tree_tag&#32;{&#32;};
157 
159 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>ov_tree_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;tree_tag&#32;{&#32;};
160 
162 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>trie_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;basic_branch_tag&#32;{&#32;};
163 
165 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>pat_trie_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;trie_tag&#32;{&#32;};
166 
168 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>list_update_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;associative_tag&#32;{&#32;};
169 
171 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>priority_queue_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;container_tag&#32;{&#32;};
172 
174 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>pairing_heap_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;priority_queue_tag&#32;{&#32;};
175 
177 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>binomial_heap_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;priority_queue_tag&#32;{&#32;};
178 
180 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>rc_binomial_heap_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;priority_queue_tag&#32;{&#32;};
181 
183 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>binary_heap_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;priority_queue_tag&#32;{&#32;};
184 
186 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>thin_heap_tag&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;priority_queue_tag&#32;{&#32;};
189 
190 
210 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>null_type&#32;{&#32;};
211 
213 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp2,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp3,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp4&gt;
214 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>null_node_update&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;null_type
215 &#32;&#32;&#32;&#32;{&#32;};
216 
217 
219 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tag&gt;
220 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base;
221 
223 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
224 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;cc_hash_tag&gt;
225 &#32;&#32;{
226 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1cc__hash__tag">cc_hash_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01cc__hash__tag_01_4_1ae5c521f32018c28c403b829eb7e0086f">container_category</link>;
227 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">point_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01cc__hash__tag_01_4_1ac9e26a34c6dc765de5f3371d4068b996">invalidation_guarantee</link>;
228 
229 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;{
231 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
232 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
233 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
234 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
235 &#32;&#32;&#32;&#32;&#32;&#32;};
236 &#32;&#32;};
237 
239 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
240 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;gp_hash_tag&gt;
241 &#32;&#32;{
242 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1gp__hash__tag">gp_hash_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01gp__hash__tag_01_4_1af3bad760360ceb9980c9699f06f0f805">container_category</link>;
243 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1basic__invalidation__guarantee">basic_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01gp__hash__tag_01_4_1aa9e90457ec6a74eec8eb13e707bfbbfb">invalidation_guarantee</link>;
244 
245 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
246 &#32;&#32;&#32;&#32;&#32;&#32;{
247 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
248 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
249 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
250 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
251 &#32;&#32;&#32;&#32;&#32;&#32;};
252 &#32;&#32;};
253 
255 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
256 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;rb_tree_tag&gt;
257 &#32;&#32;{
258 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1rb__tree__tag">rb_tree_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01rb__tree__tag_01_4_1a9b04a056ab33adf306537ccdcc73f653">container_category</link>;
259 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1range__invalidation__guarantee">range_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01rb__tree__tag_01_4_1a02af02502bec028242628c12b5d73677">invalidation_guarantee</link>;
260 
261 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
262 &#32;&#32;&#32;&#32;&#32;&#32;{
263 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">true</emphasis>,
264 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
265 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
266 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">true</emphasis>
267 &#32;&#32;&#32;&#32;&#32;&#32;};
268 &#32;&#32;};
269 
271 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
272 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;splay_tree_tag&gt;
273 &#32;&#32;{
274 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1splay__tree__tag">splay_tree_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01splay__tree__tag_01_4_1acddad656c9f26a08b29b93d160a3633a">container_category</link>;
275 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1range__invalidation__guarantee">range_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01splay__tree__tag_01_4_1a5354e0cdb2b54ba8cfaff02eaadd8d71">invalidation_guarantee</link>;
276 
277 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
278 &#32;&#32;&#32;&#32;&#32;&#32;{
279 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">true</emphasis>,
280 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
281 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
282 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">true</emphasis>
283 &#32;&#32;&#32;&#32;&#32;&#32;};
284 &#32;&#32;};
285 
287 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
288 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;ov_tree_tag&gt;
289 &#32;&#32;{
290 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1ov__tree__tag">ov_tree_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01ov__tree__tag_01_4_1a387a179e100d27cac203eef2ac51f594">container_category</link>;
291 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1basic__invalidation__guarantee">basic_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01ov__tree__tag_01_4_1adb89724c90b52373083aa3a224fb8a03">invalidation_guarantee</link>;
292 
293 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
294 &#32;&#32;&#32;&#32;&#32;&#32;{
295 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">true</emphasis>,
296 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">true</emphasis>,
297 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">true</emphasis>,
298 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
299 &#32;&#32;&#32;&#32;&#32;&#32;};
300 &#32;&#32;};
301 
303 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
304 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;pat_trie_tag&gt;
305 &#32;&#32;{
306 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1pat__trie__tag">pat_trie_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01pat__trie__tag_01_4_1af57be44e621bb4d7d742d83fcea554a3">container_category</link>;
307 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1range__invalidation__guarantee">range_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01pat__trie__tag_01_4_1a14fadd1c521fc08ea6249510091d2642">invalidation_guarantee</link>;
308 
309 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
310 &#32;&#32;&#32;&#32;&#32;&#32;{
311 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">true</emphasis>,
312 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
313 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">true</emphasis>,
314 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">true</emphasis>
315 &#32;&#32;&#32;&#32;&#32;&#32;};
316 &#32;&#32;};
317 
319 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
320 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;list_update_tag&gt;
321 &#32;&#32;{
322 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01list__update__tag_01_4_1a7f39fd7104637dd1e968b81b0e0d7124">container_category</link>;
323 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">point_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01list__update__tag_01_4_1a32ecea3475290b7ad4811465e51f5f66">invalidation_guarantee</link>;
324 
325 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
326 &#32;&#32;&#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
328 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
329 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
330 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
331 &#32;&#32;&#32;&#32;&#32;&#32;};
332 &#32;&#32;};
333 
335 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
336 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;pairing_heap_tag&gt;
337 &#32;&#32;{
338 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1pairing__heap__tag">pairing_heap_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01pairing__heap__tag_01_4_1a033ca7854062aa80469c4f96750f7360">container_category</link>;
339 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">point_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01pairing__heap__tag_01_4_1a7910e5768077c78c686fba9f2fc7f973">invalidation_guarantee</link>;
340 
341 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
342 &#32;&#32;&#32;&#32;&#32;&#32;{
343 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
344 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
345 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
346 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
347 &#32;&#32;&#32;&#32;&#32;&#32;};
348 &#32;&#32;};
349 
351 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
352 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;thin_heap_tag&gt;
353 &#32;&#32;{
354 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1thin__heap__tag">thin_heap_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01thin__heap__tag_01_4_1a199ec71f687403296359e338f5815490">container_category</link>;
355 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">point_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01thin__heap__tag_01_4_1ae9b5255581233fd00036e7e6fbbbf74f">invalidation_guarantee</link>;
356 
357 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
358 &#32;&#32;&#32;&#32;&#32;&#32;{
359 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
360 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
361 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
362 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
363 &#32;&#32;&#32;&#32;&#32;&#32;};
364 &#32;&#32;};
365 
367 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
368 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;binomial_heap_tag&gt;
369 &#32;&#32;{
370 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1binomial__heap__tag">binomial_heap_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01binomial__heap__tag_01_4_1a3180910a46ef2b903aaa56e3f0305599">container_category</link>;
371 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">point_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01binomial__heap__tag_01_4_1a1980ce6b76ff1d0999076e17eae5cb27">invalidation_guarantee</link>;
372 
373 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
374 &#32;&#32;&#32;&#32;&#32;&#32;{
375 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
376 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
377 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
378 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
379 &#32;&#32;&#32;&#32;&#32;&#32;};
380 &#32;&#32;};
381 
383 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
384 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;rc_binomial_heap_tag&gt;
385 &#32;&#32;{
386 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1rc__binomial__heap__tag">rc_binomial_heap_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01rc__binomial__heap__tag_01_4_1a4961685a3fd315a423ab5f32da3d7d8d">container_category</link>;
387 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">point_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01rc__binomial__heap__tag_01_4_1a603372ae7ee3e3f2d7ac528c7542fcc4">invalidation_guarantee</link>;
388 
389 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
390 &#32;&#32;&#32;&#32;&#32;&#32;{
391 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
392 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
393 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
394 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
395 &#32;&#32;&#32;&#32;&#32;&#32;};
396 &#32;&#32;};
397 
399 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
400 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits_base&lt;binary_heap_tag&gt;
401 &#32;&#32;{
402 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1binary__heap__tag">binary_heap_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01binary__heap__tag_01_4_1a11c539a7b0d01609bfb28fc958f9cfce">container_category</link>;
403 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1basic__invalidation__guarantee">basic_invalidation_guarantee</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01binary__heap__tag_01_4_1a08a70dd7fc73dfe7f30c1919686e00b7">invalidation_guarantee</link>;
404 
405 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
406 &#32;&#32;&#32;&#32;&#32;&#32;{
407 &#32;&#32;&#32;&#32;order_preserving&#32;=&#32;<emphasis role="keyword">false</emphasis>,
408 &#32;&#32;&#32;&#32;erase_can_throw&#32;=&#32;<emphasis role="keyword">false</emphasis>,
409 &#32;&#32;&#32;&#32;split_join_can_throw&#32;=&#32;<emphasis role="keyword">true</emphasis>,
410 &#32;&#32;&#32;&#32;reverse_iteration&#32;=&#32;<emphasis role="keyword">false</emphasis>
411 &#32;&#32;&#32;&#32;&#32;&#32;};
412 &#32;&#32;};
413 
414 
416 &#32;&#32;<emphasis role="comment">//&#32;See&#32;Matt&#32;Austern&#32;for&#32;the&#32;name,&#32;S.&#32;Meyers&#32;MEFC++&#32;#2,&#32;others.</emphasis>
417 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Cntnr&gt;
418 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_traits
419 &#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;container_traits_base&lt;typename&#32;Cntnr::container_category&gt;
420 &#32;&#32;{
421 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Cntnr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1a93e266ce9c00a649ff27103e0b574407">container_type</link>;
422 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Cntnr::container_category&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1ad438013d14d182cc8d5a9a52da9f5b7d">container_category</link>;
423 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1container__traits__base">container_traits_base&lt;container_category&gt;</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1aee9d780e2d3b45ef388bdd666d478167">base_type</link>;
424 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::invalidation_guarantee&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1a321ea2e1113d76f31c5b7c18cba5b33a">invalidation_guarantee</link>;
425 
426 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
427 &#32;&#32;&#32;&#32;&#32;&#32;{
429 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1a77a1c293991162d61981238713b9faa8a8dfbcc6e6dd2a7089888943d8f4a2160">order_preserving</link>&#32;=&#32;base_type::order_preserving,
430 
432 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1a77a1c293991162d61981238713b9faa8a27b0ce6fc76b827b8140d9b22323af59">erase_can_throw</link>&#32;=&#32;base_type::erase_can_throw,
433 
435 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1a77a1c293991162d61981238713b9faa8ad280a07aaba7574f5790924fceef2f66">split_join_can_throw</link>&#32;=&#32;base_type::split_join_can_throw,
436 
438 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1container__traits_1a77a1c293991162d61981238713b9faa8a8ee7c58cf6d71ba1c708629606dccc05">reverse_iteration</link>&#32;=&#32;base_type::reverse_iteration
439 &#32;&#32;&#32;&#32;&#32;&#32;};
440 &#32;&#32;};
442 
443 
444 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
445 &#32;&#32;{
447 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keyword">typename</emphasis>&#32;Tag,
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Policy_Tl&#32;=&#32;null_type&gt;
449 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>container_base_dispatch;
450 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
452 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
453 
454 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
