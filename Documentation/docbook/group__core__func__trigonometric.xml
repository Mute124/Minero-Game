<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__core__func__trigonometric" xml:lang="en-US">
<title>Angle and Trigonometry Functions</title>
<indexterm><primary>Angle and Trigonometry Functions</primary></indexterm>
Collaboration diagram for Angle and Trigonometry Functions:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga61d7a85a28a34160012c115dc8685d71">glm::radians</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_namespaceglm_1a8a6fe45ac1da0ac1023bab706a675413">degrees</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1gabff4298ebb593b4f7d62daafa63a755e">glm::degrees</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_namespaceglm_1a00577ee752441c79d5bb11d7c29e1627">radians</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414">glm::sin</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga54745147add8b4fa05642f5c71f6833e">glm::cos</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1gae5727eacf7692c197af6298b6d4ad922">glm::tan</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1gad3628b879437a75d1941f965b2893db7">glm::asin</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1gaf621a212fa21c1009344895a52e9c82c">glm::acos</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga6387ec8ba78ca9a12f2a521b11d5d56c">glm::atan</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga5eaef79e09645e27a95f1e99b23516fe">glm::atan</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;y_over_x)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga6fa8d0d5565c424ca5149aeed90368e9">glm::sinh</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1gadc7baaf1f2e79f0883c7ead8abb3040e">glm::cosh</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga3397af92f069bf3a5bb9ff3f9205c6c5">glm::tanh</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1gac0829fbd0739069af59cfb96d269b7ee">glm::asinh</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga6cc737d23e600f02d4cdd37877ca8967">glm::acosh</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__core__func__trigonometric_1ga1979e784b65e71f2591a415581d39c59">glm::atanh</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Function parameters specified as angle are assumed to be in units of radians. In no case will any of these functions result in a divide by zero error. If the divisor of a ratio is 0, then results will be undefined.</para>

<para>These all operate component-wise. The description is per component.</para>

<para>Include &lt;glm/trigonometric.hpp&gt; to use these core features.</para>

<para><formalpara><title>See also</title>

<para>ext_vector_trigonometric </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__core__func__trigonometric_1gaf621a212fa21c1009344895a52e9c82c"/><section>
    <title>acos()</title>
<indexterm><primary>acos</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>acos</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::acos (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Arc cosine. Returns an angle whose sine is x. The range of values returned by this function is [0, PI]. Results are undefined if |x| &gt; 1.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/acos.xml">GLSL acos man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga6cc737d23e600f02d4cdd37877ca8967"/><section>
    <title>acosh()</title>
<indexterm><primary>acosh</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>acosh</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::acosh (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Arc hyperbolic cosine; returns the non-negative inverse of cosh. Results are undefined if x &lt; 1.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/acosh.xml">GLSL acosh man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1gad3628b879437a75d1941f965b2893db7"/><section>
    <title>asin()</title>
<indexterm><primary>asin</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>asin</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::asin (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Arc sine. Returns an angle whose sine is x. The range of values returned by this function is [-PI/2, PI/2]. Results are undefined if |x| &gt; 1.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/asin.xml">GLSL asin man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1gac0829fbd0739069af59cfb96d269b7ee"/><section>
    <title>asinh()</title>
<indexterm><primary>asinh</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>asinh</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::asinh (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Arc hyperbolic sine; returns the inverse of sinh.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/asinh.xml">GLSL asinh man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga6387ec8ba78ca9a12f2a521b11d5d56c"/><section>
    <title>atan()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>atan</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>atan</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::atan (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; y, <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Arc tangent. Returns an angle whose tangent is y/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/atan.xml">GLSL atan man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga5eaef79e09645e27a95f1e99b23516fe"/><section>
    <title>atan()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>atan</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>atan</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::atan (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; y_over_x)</computeroutput></para>
<para>Arc tangent. Returns an angle whose tangent is y_over_x. The range of values returned by this function is [-PI/2, PI/2].</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/atan.xml">GLSL atan man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga1979e784b65e71f2591a415581d39c59"/><section>
    <title>atanh()</title>
<indexterm><primary>atanh</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>atanh</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::atanh (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Arc hyperbolic tangent; returns the inverse of tanh. Results are undefined if abs(x) &gt;= 1.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/atanh.xml">GLSL atanh man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga54745147add8b4fa05642f5c71f6833e"/><section>
    <title>cos()</title>
<indexterm><primary>cos</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>cos</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::cos (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; angle)</computeroutput></para>
<para>The standard trigonometric cosine function. The values returned by this function will range from [-1, 1].</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/cos.xml">GLSL cos man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_ga54745147add8b4fa05642f5c71f6833e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1gadc7baaf1f2e79f0883c7ead8abb3040e"/><section>
    <title>cosh()</title>
<indexterm><primary>cosh</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>cosh</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::cosh (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; angle)</computeroutput></para>
<para>Returns the hyperbolic cosine function, (<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp(x)</link> + exp(-x)) / 2</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/cosh.xml">GLSL cosh man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_gadc7baaf1f2e79f0883c7ead8abb3040e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1gabff4298ebb593b4f7d62daafa63a755e"/><section>
    <title>degrees()</title>
<indexterm><primary>degrees</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>degrees</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::degrees (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; radians)</computeroutput></para>
<para>Converts radians to degrees and returns the result.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/degrees.xml">GLSL degrees man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_gabff4298ebb593b4f7d62daafa63a755e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga61d7a85a28a34160012c115dc8685d71"/><section>
    <title>radians()</title>
<indexterm><primary>radians</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>radians</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::radians (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; degrees)</computeroutput></para>
<para>Converts degrees to radians and returns the result.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/radians.xml">GLSL radians man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_ga61d7a85a28a34160012c115dc8685d71_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414"/><section>
    <title>sin()</title>
<indexterm><primary>sin</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>sin</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::sin (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; angle)</computeroutput></para>
<para>The standard trigonometric sine function. The values returned by this function will range from [-1, 1].</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/sin.xml">GLSL sin man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_ga3fcdcfa2d2ac38de9ba1885cd1c79414_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga6fa8d0d5565c424ca5149aeed90368e9"/><section>
    <title>sinh()</title>
<indexterm><primary>sinh</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>sinh</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::sinh (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; angle)</computeroutput></para>
<para>Returns the hyperbolic sine function, (<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp(x)</link> - exp(-x)) / 2</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/sinh.xml">GLSL sinh man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_ga6fa8d0d5565c424ca5149aeed90368e9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1gae5727eacf7692c197af6298b6d4ad922"/><section>
    <title>tan()</title>
<indexterm><primary>tan</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>tan</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::tan (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; angle)</computeroutput></para>
<para>The standard trigonometric tangent function.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/tan.xml">GLSL tan man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__core__func__trigonometric_gae5727eacf7692c197af6298b6d4ad922_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__core__func__trigonometric_1ga3397af92f069bf3a5bb9ff3f9205c6c5"/><section>
    <title>tanh()</title>
<indexterm><primary>tanh</primary><secondary>Angle and Trigonometry Functions</secondary></indexterm>
<indexterm><primary>Angle and Trigonometry Functions</primary><secondary>tanh</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::tanh (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; angle)</computeroutput></para>
<para>Returns the hyperbolic tangent function, <link linkend="__classes_2lib_2include_2tgmath_8h_1a2579de64a076b1183bbf48cbed658d12">sinh(angle)</link> / <link linkend="__classes_2lib_2include_2tgmath_8h_1ac2ac5e2dccf59bf3393c5e24b168f3c6">cosh(angle)</link></para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>L</entry><entry>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</entry>
                            </row>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://www.opengl.org/sdk/docs/manglsl/xhtml/tanh.xml">GLSL tanh man page</link> </para>

<para><link xlink:href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.1 Angle and Trigonometry Functions</link> </para>
</formalpara>
</para>
</section>
</section>
</section>
