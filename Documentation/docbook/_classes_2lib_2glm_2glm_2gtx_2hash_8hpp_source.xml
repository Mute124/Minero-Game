<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2gtx_2hash_8hpp_source" xml:lang="en-US">
<title>hash.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/gtx/hash.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
12 
13 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
14 
15 <emphasis role="preprocessor">#if&#32;GLM_MESSAGES&#32;==&#32;GLM_ENABLE&#32;&amp;&amp;&#32;!defined(GLM_EXT_INCLUDED)</emphasis>
16 <emphasis role="preprocessor">#&#32;&#32;&#32;ifndef&#32;GLM_ENABLE_EXPERIMENTAL</emphasis>
17 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;message(&quot;GLM:&#32;GLM_GTX_hash&#32;is&#32;an&#32;experimental&#32;extension&#32;and&#32;may&#32;change&#32;in&#32;the&#32;future.&#32;Use&#32;#define&#32;GLM_ENABLE_EXPERIMENTAL&#32;before&#32;including&#32;it,&#32;if&#32;you&#32;really&#32;want&#32;to&#32;use&#32;it.&quot;)</emphasis>
18 <emphasis role="preprocessor">#&#32;&#32;&#32;else</emphasis>
19 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;message(&quot;GLM:&#32;GLM_GTX_hash&#32;extension&#32;included&quot;)</emphasis>
20 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
21 <emphasis role="preprocessor">#endif</emphasis>
22 
23 <emphasis role="preprocessor">#include&#32;&lt;functional&gt;</emphasis>
24 
25 <emphasis role="preprocessor">#include&#32;&quot;../vec2.hpp&quot;</emphasis>
26 <emphasis role="preprocessor">#include&#32;&quot;../vec3.hpp&quot;</emphasis>
27 <emphasis role="preprocessor">#include&#32;&quot;../vec4.hpp&quot;</emphasis>
28 <emphasis role="preprocessor">#include&#32;&quot;../gtc/vec1.hpp&quot;</emphasis>
29 
30 <emphasis role="preprocessor">#include&#32;&quot;../gtc/quaternion.hpp&quot;</emphasis>
31 <emphasis role="preprocessor">#include&#32;&quot;../gtx/dual_quaternion.hpp&quot;</emphasis>
32 
33 <emphasis role="preprocessor">#include&#32;&quot;../mat2x2.hpp&quot;</emphasis>
34 <emphasis role="preprocessor">#include&#32;&quot;../mat2x3.hpp&quot;</emphasis>
35 <emphasis role="preprocessor">#include&#32;&quot;../mat2x4.hpp&quot;</emphasis>
36 
37 <emphasis role="preprocessor">#include&#32;&quot;../mat3x2.hpp&quot;</emphasis>
38 <emphasis role="preprocessor">#include&#32;&quot;../mat3x3.hpp&quot;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&quot;../mat3x4.hpp&quot;</emphasis>
40 
41 <emphasis role="preprocessor">#include&#32;&quot;../mat4x2.hpp&quot;</emphasis>
42 <emphasis role="preprocessor">#include&#32;&quot;../mat4x3.hpp&quot;</emphasis>
43 <emphasis role="preprocessor">#include&#32;&quot;../mat4x4.hpp&quot;</emphasis>
44 
45 <emphasis role="preprocessor">#if&#32;!GLM_HAS_CXX11_STL</emphasis>
46 <emphasis role="preprocessor">#&#32;&#32;&#32;error&#32;&quot;GLM_GTX_hash&#32;requires&#32;C++11&#32;standard&#32;library&#32;support&quot;</emphasis>
47 <emphasis role="preprocessor">#endif</emphasis>
48 
49 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>
50 {
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::vec&lt;1,&#32;T,Q&gt;&#32;&gt;
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;1, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>;
55 &#32;&#32;&#32;&#32;};
56 
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::vec&lt;2,&#32;T,Q&gt;&#32;&gt;
59 &#32;&#32;&#32;&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>;
61 &#32;&#32;&#32;&#32;};
62 
63 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
64 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::vec&lt;3,&#32;T,Q&gt;&#32;&gt;
65 &#32;&#32;&#32;&#32;{
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>;
67 &#32;&#32;&#32;&#32;};
68 
69 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::vec&lt;4,&#32;T,Q&gt;&#32;&gt;
71 &#32;&#32;&#32;&#32;{
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1vec">glm::vec&lt;4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;<emphasis role="keyword">const</emphasis>;
73 &#32;&#32;&#32;&#32;};
74 
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::qua&lt;T,Q&gt;&gt;
77 &#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1qua">glm::qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)&#32;<emphasis role="keyword">const</emphasis>;
79 &#32;&#32;&#32;&#32;};
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::tdualquat&lt;T,Q&gt;&#32;&gt;
83 &#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1tdualquat">glm::tdualquat&lt;T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)&#32;<emphasis role="keyword">const</emphasis>;
85 &#32;&#32;&#32;&#32;};
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;2,&#32;2,&#32;T,Q&gt;&#32;&gt;
89 &#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;2, 2, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
91 &#32;&#32;&#32;&#32;};
92 
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;2,&#32;3,&#32;T,Q&gt;&#32;&gt;
95 &#32;&#32;&#32;&#32;{
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;2, 3, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
97 &#32;&#32;&#32;&#32;};
98 
99 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
100 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;2,&#32;4,&#32;T,Q&gt;&#32;&gt;
101 &#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;2, 4, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
103 &#32;&#32;&#32;&#32;};
104 
105 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;3,&#32;2,&#32;T,Q&gt;&#32;&gt;
107 &#32;&#32;&#32;&#32;{
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;3, 2, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
109 &#32;&#32;&#32;&#32;};
110 
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
112 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;3,&#32;3,&#32;T,Q&gt;&#32;&gt;
113 &#32;&#32;&#32;&#32;{
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;3, 3, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
115 &#32;&#32;&#32;&#32;};
116 
117 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;3,&#32;4,&#32;T,Q&gt;&#32;&gt;
119 &#32;&#32;&#32;&#32;{
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;3, 4, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
121 &#32;&#32;&#32;&#32;};
122 
123 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
124 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;4,&#32;2,&#32;T,Q&gt;&#32;&gt;
125 &#32;&#32;&#32;&#32;{
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;4, 2, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
127 &#32;&#32;&#32;&#32;};
128 
129 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;4,&#32;3,&#32;T,Q&gt;&#32;&gt;
131 &#32;&#32;&#32;&#32;{
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;4, 3, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
133 &#32;&#32;&#32;&#32;};
134 
135 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;glm::qualifier&#32;Q&gt;
136 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespaceglm">glm</link>::mat&lt;4,&#32;4,&#32;T,Q&gt;&#32;&gt;
137 &#32;&#32;&#32;&#32;{
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;operator()(<link linkend="_structglm_1_1mat">glm::mat&lt;4, 4, T,Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)&#32;<emphasis role="keyword">const</emphasis>;
139 &#32;&#32;&#32;&#32;};
140 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
141 
142 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2glm_2glm_2gtx_2hash_8inl">hash.inl</link>&quot;</emphasis>
</programlisting></section>
