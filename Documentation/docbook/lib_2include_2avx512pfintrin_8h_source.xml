<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2avx512pfintrin_8h_source" xml:lang="en-US">
<title>avx512pfintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/avx512pfintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2013-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#ifndef&#32;_IMMINTRIN_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#error&#32;&quot;Never&#32;use&#32;&lt;avx512pfintrin.h&gt;&#32;directly;&#32;include&#32;&lt;immintrin.h&gt;&#32;instead.&quot;</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_AVX512PFINTRIN_H_INCLUDED</emphasis>
29 <emphasis role="preprocessor">#define&#32;_AVX512PFINTRIN_H_INCLUDED</emphasis>
30 
31 <emphasis role="preprocessor">#ifndef&#32;__AVX512PF__</emphasis>
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx512pf&quot;)</emphasis>
34 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX512PF__</emphasis>
35 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX512PF__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
36 
37 <emphasis role="comment">/*&#32;Internal&#32;data&#32;types&#32;for&#32;implementing&#32;the&#32;intrinsics.&#32;&#32;*/</emphasis>
38 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__v8di&#32;<link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__vector_size__&#32;(64)));
39 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__v16si&#32;<link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__vector_size__&#32;(64)));
40 
41 <emphasis role="comment">/*&#32;The&#32;Intel&#32;API&#32;is&#32;flexible&#32;enough&#32;that&#32;we&#32;must&#32;allow&#32;aliasing&#32;with&#32;other</emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;vector&#32;types,&#32;and&#32;their&#32;scalar&#32;components.&#32;&#32;*/</emphasis>
43 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__vector_size__&#32;(64),&#32;__may_alias__));
44 
45 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;<link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>;
46 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>;
47 
48 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
49 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
50 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
51 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1aaf8de038f814bd6636125dbbbc10f205">_mm512_prefetch_i32gather_pd</link>&#32;(__m256i&#32;__index,&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
53 {
54 &#32;&#32;__builtin_ia32_gatherpfdpd&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;0xFF,&#32;(__v8si)&#32;__index,&#32;__addr,
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
56 }
57 
58 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
59 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
60 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a5977008ebc585d97c1003eb50a3f3126">_mm512_prefetch_i32gather_ps</link>&#32;(__m512i&#32;__index,&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
62 {
63 &#32;&#32;__builtin_ia32_gatherpfdps&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;0xFFFF,&#32;(__v16si)&#32;__index,&#32;__addr,
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
65 }
66 
67 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
68 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
69 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1ae0a36cf991cef54a89c6469c15c66cd3">_mm512_mask_prefetch_i32gather_pd</link>&#32;(__m256i&#32;__index,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;__mask,
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
71 {
72 &#32;&#32;__builtin_ia32_gatherpfdpd&#32;(__mask,&#32;(__v8si)&#32;__index,&#32;__addr,&#32;__scale,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
74 }
75 
76 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
77 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
78 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a4cc3ef0491338a99900ed4da37399b1e">_mm512_mask_prefetch_i32gather_ps</link>&#32;(__m512i&#32;__index,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;__mask,
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
80 {
81 &#32;&#32;__builtin_ia32_gatherpfdps&#32;(__mask,&#32;(__v16si)&#32;__index,&#32;__addr,&#32;__scale,
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
83 }
84 
85 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
86 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
87 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1ab603b4f6a5876cb30ba521f32fec29d3">_mm512_prefetch_i64gather_pd</link>&#32;(__m512i&#32;__index,&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
89 {
90 &#32;&#32;__builtin_ia32_gatherpfqpd&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;0xFF,&#32;(__v8di)&#32;__index,&#32;__addr,
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
92 }
93 
94 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
95 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
96 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1aa9965cbfe47d3359cd3741d1245bcb30">_mm512_prefetch_i64gather_ps</link>&#32;(__m512i&#32;__index,&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
98 {
99 &#32;&#32;__builtin_ia32_gatherpfqps&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;0xFF,&#32;(__v8di)&#32;__index,&#32;__addr,
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
101 }
102 
103 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
104 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
105 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8c66fe03884b68c3833bdd7af35ab967">_mm512_mask_prefetch_i64gather_pd</link>&#32;(__m512i&#32;__index,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;__mask,
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
107 {
108 &#32;&#32;__builtin_ia32_gatherpfqpd&#32;(__mask,&#32;(__v8di)&#32;__index,&#32;__addr,&#32;__scale,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
110 }
111 
112 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
113 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
114 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a09e797342e055446628d43456c0ec9f3">_mm512_mask_prefetch_i64gather_ps</link>&#32;(__m512i&#32;__index,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;__mask,
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__addr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
116 {
117 &#32;&#32;__builtin_ia32_gatherpfqps&#32;(__mask,&#32;(__v8di)&#32;__index,&#32;__addr,&#32;__scale,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
119 }
120 
121 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
122 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
123 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a4294e5c1dd94ed34a3f766b77488d944">_mm512_prefetch_i32scatter_pd</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;__m256i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
125 {
126 &#32;&#32;__builtin_ia32_scatterpfdpd&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;0xFF,&#32;(__v8si)&#32;__index,&#32;__addr,
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
128 }
129 
130 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
131 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
132 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1ab339b08805351ef04e01ebd76032be69">_mm512_prefetch_i32scatter_ps</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;__m512i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
134 {
135 &#32;&#32;__builtin_ia32_scatterpfdps&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;0xFFFF,&#32;(__v16si)&#32;__index,&#32;__addr,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
137 }
138 
139 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
140 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
141 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a021ef84be19e937472ae52fbf94b94bb">_mm512_mask_prefetch_i32scatter_pd</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;__mask,
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
143 {
144 &#32;&#32;__builtin_ia32_scatterpfdpd&#32;(__mask,&#32;(__v8si)&#32;__index,&#32;__addr,&#32;__scale,
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
146 }
147 
148 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
149 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
150 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a6f8685b05afb94ebc6837e0e999cc664">_mm512_mask_prefetch_i32scatter_ps</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;__mask,
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
152 {
153 &#32;&#32;__builtin_ia32_scatterpfdps&#32;(__mask,&#32;(__v16si)&#32;__index,&#32;__addr,&#32;__scale,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
155 }
156 
157 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
158 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
159 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1afeda654d271a25e16724bc552a6d648f">_mm512_prefetch_i64scatter_pd</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;__m512i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
161 {
162 &#32;&#32;__builtin_ia32_scatterpfqpd&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;0xFF,&#32;(__v8di)&#32;__index,__addr,
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
164 }
165 
166 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
167 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
168 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1ae92b149a3bb0bcbcf6d4a9474411f75c">_mm512_prefetch_i64scatter_ps</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;__m512i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
170 {
171 &#32;&#32;__builtin_ia32_scatterpfqps&#32;((<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;0xFF,&#32;(__v8di)&#32;__index,&#32;__addr,
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale,&#32;__hint);
173 }
174 
175 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
176 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
177 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a35067248c7a7c9bcdeab4855c2119788">_mm512_mask_prefetch_i64scatter_pd</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;__mask,
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
179 {
180 &#32;&#32;__builtin_ia32_scatterpfqpd&#32;(__mask,&#32;(__v8di)&#32;__index,&#32;__addr,&#32;__scale,
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
182 }
183 
184 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
185 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a8e69bc98c92d67df0f4eb87404a3c99c">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
186 <link linkend="__classes_2lib_2include_2avx512pfintrin_8h_1a0f478a5aa4627727ab854883ba6e4e82">_mm512_mask_prefetch_i64scatter_ps</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*__addr,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;__mask,
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;__index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__hint)
188 {
189 &#32;&#32;__builtin_ia32_scatterpfqps&#32;(__mask,&#32;(__v8di)&#32;__index,&#32;__addr,&#32;__scale,
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__hint);
191 }
192 
193 <emphasis role="preprocessor">#else</emphasis>
194 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i32gather_pd(INDEX,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
195 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfdpd&#32;((__mmask8)0xFF,&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;&#32;&#32;&#32;\</emphasis>
196 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;const&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
197 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(HINT))</emphasis>
198 
199 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i32gather_ps(INDEX,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
200 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfdps&#32;((__mmask16)0xFFFF,&#32;(__v16si)(__m512i)&#32;(INDEX),&#32;\</emphasis>
201 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;const&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(HINT))</emphasis>
203 
204 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i32gather_pd(INDEX,&#32;MASK,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;\</emphasis>
205 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfdpd&#32;((__mmask8)&#32;(MASK),&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;\</emphasis>
206 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;const&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(HINT))</emphasis>
208 
209 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i32gather_ps(INDEX,&#32;MASK,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;\</emphasis>
210 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfdps&#32;((__mmask16)&#32;(MASK),&#32;(__v16si)(__m512i)&#32;(INDEX),\</emphasis>
211 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;const&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
212 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(HINT))</emphasis>
213 
214 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i64gather_pd(INDEX,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
215 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfqpd&#32;((__mmask8)0xFF,&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;&#32;&#32;&#32;&#32;\</emphasis>
216 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
217 
218 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i64gather_ps(INDEX,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
219 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfqps&#32;((__mmask8)0xFF,&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;&#32;&#32;&#32;&#32;\</emphasis>
220 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
221 
222 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i64gather_pd(INDEX,&#32;MASK,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;\</emphasis>
223 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfqpd&#32;((__mmask8)&#32;(MASK),&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;&#32;\</emphasis>
224 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
225 
226 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i64gather_ps(INDEX,&#32;MASK,&#32;ADDR,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;\</emphasis>
227 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_gatherpfqps&#32;((__mmask8)&#32;(MASK),&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;&#32;\</emphasis>
228 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
229 
230 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i32scatter_pd(ADDR,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
231 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfdpd&#32;((__mmask8)0xFF,&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;&#32;&#32;\</emphasis>
232 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
233 
234 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i32scatter_ps(ADDR,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
235 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfdps&#32;((__mmask16)0xFFFF,&#32;(__v16si)(__m512i)&#32;(INDEX),\</emphasis>
236 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
237 
238 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i32scatter_pd(ADDR,&#32;MASK,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;\</emphasis>
239 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfdpd&#32;((__mmask8)&#32;(MASK),&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;\</emphasis>
240 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
241 
242 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i32scatter_ps(ADDR,&#32;MASK,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;\</emphasis>
243 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfdps&#32;((__mmask16)&#32;(MASK),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16si)(__m512i)&#32;(INDEX),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
245 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
246 
247 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i64scatter_pd(ADDR,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
248 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfqpd&#32;((__mmask8)0xFF,&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;&#32;&#32;&#32;\</emphasis>
249 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
250 
251 <emphasis role="preprocessor">#define&#32;_mm512_prefetch_i64scatter_ps(ADDR,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
252 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfqps&#32;((__mmask8)0xFF,&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;&#32;&#32;&#32;\</emphasis>
253 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
254 
255 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i64scatter_pd(ADDR,&#32;MASK,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;\</emphasis>
256 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfqpd&#32;((__mmask8)&#32;(MASK),&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;\</emphasis>
257 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
258 
259 <emphasis role="preprocessor">#define&#32;_mm512_mask_prefetch_i64scatter_ps(ADDR,&#32;MASK,&#32;INDEX,&#32;SCALE,&#32;HINT)&#32;&#32;&#32;\</emphasis>
260 <emphasis role="preprocessor">&#32;&#32;__builtin_ia32_scatterpfqps&#32;((__mmask8)&#32;(MASK),&#32;(__v8di)(__m512i)&#32;(INDEX),&#32;\</emphasis>
261 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void&#32;*)&#32;(ADDR),&#32;(int)&#32;(SCALE),&#32;(int)&#32;(HINT))</emphasis>
262 <emphasis role="preprocessor">#endif</emphasis>
263 
264 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX512PF__</emphasis>
265 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX512PF__</emphasis>
266 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
267 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX512PF__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
268 
269 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_AVX512PFINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
