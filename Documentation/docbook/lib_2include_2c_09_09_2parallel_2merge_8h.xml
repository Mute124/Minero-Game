<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2parallel_2merge_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/merge.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/merge.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;parallel/basic_iterator.h&gt;<?linebreak?>#include &lt;bits/stl_algo.h&gt;<?linebreak?></programlisting>Include dependency graph for merge.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2include_2c_09_09_2parallel_2merge_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__parallel">__gnu_parallel</link></para>

<para>GNU parallel code for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _OutputIterator , typename _DifferenceTp , typename _Compare &gt; </para><para>_OutputIterator <link linkend="_namespace____gnu__parallel_1a9a83f26ee291502fd0ccf83a566817c7">__gnu_parallel::__merge_advance_usual</link> (_RAIter1 &amp;__begin1, _RAIter1 __end1, _RAIter2 &amp;__begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)</para>

<para>Merge routine being able to merge only the <computeroutput>__max_length</computeroutput> smallest elements. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _OutputIterator , typename _DifferenceTp , typename _Compare &gt; </para><para>_OutputIterator <link linkend="_namespace____gnu__parallel_1a8deacd343b40dc77deeb1a8e515e7358">__gnu_parallel::__merge_advance_movc</link> (_RAIter1 &amp;__begin1, _RAIter1 __end1, _RAIter2 &amp;__begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)</para>

<para>Merge routine being able to merge only the <computeroutput>__max_length</computeroutput> smallest elements. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _OutputIterator , typename _DifferenceTp , typename _Compare &gt; </para><para>_OutputIterator <link linkend="_namespace____gnu__parallel_1a0059cd13cc6ab70692f8309ad92cb548">__gnu_parallel::__merge_advance</link> (_RAIter1 &amp;__begin1, _RAIter1 __end1, _RAIter2 &amp;__begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)</para>

<para>Merge routine being able to merge only the <computeroutput>__max_length</computeroutput> smallest elements. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _RAIter3 , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1af1626ed7bbe2eb745a31f18728d73f4e">__gnu_parallel::__parallel_merge_advance</link> (_RAIter1 &amp;__begin1, _RAIter1 __end1, _RAIter2 &amp;__begin2, _RAIter2 __end2, _RAIter3 __target, typename std::iterator_traits&lt; _RAIter1 &gt;::difference_type __max_length, _Compare __comp)</para>

<para>Merge routine fallback to sequential in case the iterators of the two input sequences are of different type. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter3 , typename _Compare &gt; </para><para>_RAIter3 <link linkend="_namespace____gnu__parallel_1ac4196b48ff7ecf5ca0f8f2cdee8681c5">__gnu_parallel::__parallel_merge_advance</link> (_RAIter1 &amp;__begin1, _RAIter1 __end1, _RAIter1 &amp;__begin2, _RAIter1 __end2, _RAIter3 __target, typename std::iterator_traits&lt; _RAIter1 &gt;::difference_type __max_length, _Compare __comp)</para>

<para>Parallel merge routine being able to merge only the <computeroutput>__max_length</computeroutput> smallest elements. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
