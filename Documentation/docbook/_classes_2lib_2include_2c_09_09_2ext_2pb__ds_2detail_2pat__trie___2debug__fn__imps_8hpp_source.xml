<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2debug__fn__imps_8hpp_source" xml:lang="en-US">
<title>debug_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/debug_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
44 
45 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
46 <emphasis role="keywordtype">void</emphasis>
47 PB_DS_CLASS_C_DEC::
48 assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
49 <emphasis role="keyword"></emphasis>{
50 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p_head-&gt;m_p_parent&#32;!=&#32;0)
51 &#32;&#32;&#32;&#32;m_p_head-&gt;m_p_parent-&gt;assert_valid(<emphasis role="keyword">this</emphasis>,&#32;__file,&#32;__line);
52 &#32;&#32;assert_iterators(__file,&#32;__line);
53 &#32;&#32;assert_reverse_iterators(__file,&#32;__line);
54 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p_head-&gt;m_p_parent&#32;==&#32;0)
55 &#32;&#32;&#32;&#32;{
56 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_p_head-&gt;m_p_min&#32;==&#32;m_p_head);
57 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_p_head-&gt;m_p_max&#32;==&#32;m_p_head);
58 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(empty());
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
60 &#32;&#32;&#32;&#32;}
61 
62 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_p_head-&gt;m_p_min-&gt;m_type&#32;==&#32;leaf_node);
63 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_p_head-&gt;m_p_max-&gt;m_type&#32;==&#32;leaf_node);
64 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(!empty());
65 }
66 
67 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
68 <emphasis role="keywordtype">void</emphasis>
69 PB_DS_CLASS_C_DEC::
70 assert_iterators(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
71 <emphasis role="keyword"></emphasis>{
72 &#32;&#32;size_type&#32;calc_size&#32;=&#32;0;
73 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(const_iterator&#32;it&#32;=&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>();&#32;it&#32;!=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>();&#32;++it)
74 &#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;++calc_size;
76 &#32;&#32;&#32;&#32;&#32;&#32;debug_base::check_key_exists(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*it),&#32;__file,&#32;__line);
77 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(lower_bound(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*it))&#32;==&#32;it);
78 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(--upper_bound(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*it))&#32;==&#32;it);
79 &#32;&#32;&#32;&#32;}
80 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(calc_size&#32;==&#32;m_size);
81 }
82 
83 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
84 <emphasis role="keywordtype">void</emphasis>
85 PB_DS_CLASS_C_DEC::
86 assert_reverse_iterators(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
87 <emphasis role="keyword"></emphasis>{
88 &#32;&#32;size_type&#32;calc_size&#32;=&#32;0;
89 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(const_reverse_iterator&#32;it&#32;=&#32;rbegin();&#32;it&#32;!=&#32;rend();&#32;++it)
90 &#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;++calc_size;
92 &#32;&#32;&#32;&#32;&#32;&#32;node_const_pointer&#32;p_nd&#32;=
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>)-&gt;find_imp(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*it));
94 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(p_nd&#32;==&#32;it.m_p_nd);
95 &#32;&#32;&#32;&#32;}
96 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(calc_size&#32;==&#32;m_size);
97 }
98 
99 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
100 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::size_type
101 PB_DS_CLASS_C_DEC::
102 recursive_count_leafs(node_const_pointer&#32;p_nd,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)
103 {
104 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd&#32;==&#32;0)
105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(0);
106 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd-&gt;m_type&#32;==&#32;leaf_node)
107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(1);
108 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(p_nd-&gt;m_type&#32;==&#32;i_node);
109 &#32;&#32;size_type&#32;ret&#32;=&#32;0;
110 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">typename</emphasis>&#32;inode::const_iterator&#32;it&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>inode_const_pointer<emphasis role="keyword">&gt;</emphasis>(p_nd)-&gt;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>();
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;!=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>inode_const_pointer<emphasis role="keyword">&gt;</emphasis>(p_nd)-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>();
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;++it)
113 &#32;&#32;&#32;&#32;ret&#32;+=&#32;recursive_count_leafs(*it,&#32;__file,&#32;__line);
114 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
115 }
116 
117 <emphasis role="preprocessor">#endif</emphasis>
118 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
