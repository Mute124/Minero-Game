<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__ext__scalar__integer" xml:lang="en-US">
<title>GLM_EXT_scalar_integer</title>
<indexterm><primary>GLM_EXT_scalar_integer</primary></indexterm>
Collaboration diagram for GLM_EXT_scalar_integer:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__ext__scalar__integer_1gadf491730354aa7da67fbe23d4d688763">glm::isPowerOfTwo</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__ext__scalar__integer_1ga3a37c2f2fd347886c9af6a3ca3db04dc">glm::nextPowerOfTwo</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__ext__scalar__integer_1gab21902a0e7e5a8451a7ad80333618727">glm::prevPowerOfTwo</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__ext__scalar__integer_1gaec593d33956a8fe43f78fccc63ddde9a">glm::isMultiple</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, genIUType Multiple)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__ext__scalar__integer_1gab770a3835c44c8a6fd225be4f4e6b317">glm::nextMultiple</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, genIUType Multiple)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__ext__scalar__integer_1gada3bdd871ffe31f2d484aa668362f636">glm::prevMultiple</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, genIUType Multiple)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> int <link linkend="_group__ext__scalar__integer_1ga2777901e41ad6e1e9d0ad6cc855d1075">glm::findNSB</link> (genIUType <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int significantBitCount)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/ext/scalar_integer.hpp&gt; to use the features of this extension. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__ext__scalar__integer_1ga2777901e41ad6e1e9d0ad6cc855d1075"/><section>
    <title>findNSB()</title>
<indexterm><primary>findNSB</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>findNSB</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> int glm::findNSB (genIUType x, int significantBitCount)</computeroutput></para>
<para>Returns the bit number of the Nth significant bit set to 1 in the binary representation of value. If value bitcount is less than the Nth significant bit, -1 will be returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genIUType</entry><entry>
<para>Signed or unsigned integer scalar types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__ext__scalar__integer_1gaec593d33956a8fe43f78fccc63ddde9a"/><section>
    <title>isMultiple()</title>
<indexterm><primary>isMultiple</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>isMultiple</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isMultiple (genIUType v, genIUType Multiple)</computeroutput></para>
<para>Return true if the &apos;Value&apos; is a multiple of &apos;Multiple&apos;.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gaec593d33956a8fe43f78fccc63ddde9a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gaec593d33956a8fe43f78fccc63ddde9a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__integer_1gadf491730354aa7da67fbe23d4d688763"/><section>
    <title>isPowerOfTwo()</title>
<indexterm><primary>isPowerOfTwo</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>isPowerOfTwo</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isPowerOfTwo (genIUType v)</computeroutput></para>
<para>Return true if the value is a power of two number.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gadf491730354aa7da67fbe23d4d688763_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gadf491730354aa7da67fbe23d4d688763_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__integer_1gab770a3835c44c8a6fd225be4f4e6b317"/><section>
    <title>nextMultiple()</title>
<indexterm><primary>nextMultiple</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>nextMultiple</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::nextMultiple (genIUType v, genIUType Multiple)</computeroutput></para>
<para>Higher multiple number of Source.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genIUType</entry><entry>
<para>Integer scalar or vector types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>v</entry><entry>
<para>Source value to which is applied the function </para>
</entry>
                            </row>
                            <row>
<entry>Multiple</entry><entry>
<para>Must be a null or positive value</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gab770a3835c44c8a6fd225be4f4e6b317_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__integer_1ga3a37c2f2fd347886c9af6a3ca3db04dc"/><section>
    <title>nextPowerOfTwo()</title>
<indexterm><primary>nextPowerOfTwo</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>nextPowerOfTwo</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::nextPowerOfTwo (genIUType v)</computeroutput></para>
<para>Return the power of two number which value is just higher the input value, round up to a power of two.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_ga3a37c2f2fd347886c9af6a3ca3db04dc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__integer_1gada3bdd871ffe31f2d484aa668362f636"/><section>
    <title>prevMultiple()</title>
<indexterm><primary>prevMultiple</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>prevMultiple</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::prevMultiple (genIUType v, genIUType Multiple)</computeroutput></para>
<para>Lower multiple number of Source.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genIUType</entry><entry>
<para>Integer scalar or vector types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>v</entry><entry>
<para>Source value to which is applied the function </para>
</entry>
                            </row>
                            <row>
<entry>Multiple</entry><entry>
<para>Must be a null or positive value</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gada3bdd871ffe31f2d484aa668362f636_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__integer_1gab21902a0e7e5a8451a7ad80333618727"/><section>
    <title>prevPowerOfTwo()</title>
<indexterm><primary>prevPowerOfTwo</primary><secondary>GLM_EXT_scalar_integer</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_integer</primary><secondary>prevPowerOfTwo</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::prevPowerOfTwo (genIUType v)</computeroutput></para>
<para>Return the power of two number which value is just lower the input value, round down to a power of two.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__integer">GLM_EXT_scalar_integer</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__integer_gab21902a0e7e5a8451a7ad80333618727_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
