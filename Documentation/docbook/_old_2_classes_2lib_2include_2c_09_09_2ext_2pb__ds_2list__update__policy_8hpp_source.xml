<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp_source" xml:lang="en-US">
<title>list_update_policy.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/list_update_policy.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_LU_POLICY_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_LU_POLICY_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/types_traits.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp&gt;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
49 
50 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
51 {
57 &#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&#32;=&#32;std::allocator&lt;<emphasis role="keywordtype">char</emphasis>&gt;&#32;&gt;
58 &#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>lu_move_to_front_policy
59 &#32;&#32;&#32;{
60 &#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
61 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a31e46737ee583d07e30cb26b0d04faa5">allocator_type</link>;
62 
64 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1acfcd460068d88a84f3931c05942fd979">metadata_type</link>;
65 
66 &#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
68 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits&lt;_Alloc, metadata_type&gt;::reference</link>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link>;
70 
72 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1null__type">metadata_type</link>
73 &#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1afa1064441fc28b323b7b28176686ef65">operator()</link>()<emphasis role="keyword">&#32;const</emphasis>
74 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;s_metadata;&#32;}
75 
78 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
79 &#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a009f2dea97b29bdffa640258f86b6135">operator()</link>(<link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy_1a5b07b7a2830f74f78990ded81fcccc3b">metadata_reference</link>&#32;r_metadata)<emphasis role="keyword">&#32;const</emphasis>
80 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
81 
82 &#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
83 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_metadata;
84 &#32;&#32;&#32;};
85 
90 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;std::<emphasis role="keywordtype">size_t</emphasis>&#32;Max_Count&#32;=&#32;5,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&#32;=&#32;std::allocator&lt;<emphasis role="keywordtype">char</emphasis>&gt;&#32;&gt;
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>lu_counter_policy
92 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">private</emphasis>&#32;detail::lu_counter_policy_base&lt;typename&#32;_Alloc::size_type&gt;
93 &#32;&#32;&#32;&#32;{
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681">allocator_type</link>;
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;allocator_type::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link>;
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
99 &#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9">max_count</link>&#32;=&#32;Max_Count
103 &#32;&#32;&#32;&#32;};
104 
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link>;
107 
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__policy__base">detail::lu_counter_policy_base&lt;size_type&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__policy__base">base_type</link>;
110 
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
113 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits&lt;_Alloc, metadata_type&gt;::reference</link>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link>;
115 
117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">metadata_type</link>
118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a">operator()</link>()<emphasis role="keyword">&#32;const</emphasis>
119 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__policy__base_1a5a01fc1b2df391a1344efa440f701d52">base_type::operator()</link>(<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9">max_count</link>);&#32;}
120 
123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34">operator()</link>(<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link>&#32;r_data)<emphasis role="keyword">&#32;const</emphasis>
125 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__policy__base_1a5a01fc1b2df391a1344efa440f701d52">base_type::operator()</link>(r_data,&#32;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9">max_count</link>);&#32;}
126 &#32;&#32;&#32;&#32;};
127 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
128 
129 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
