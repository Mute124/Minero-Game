<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/type_utils.hpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/type_utils.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;cstddef&gt;<?linebreak?>#include &lt;utility&gt;<?linebreak?>#include &lt;tr1/type_traits&gt;<?linebreak?>#include &lt;ext/type_traits.h&gt;<?linebreak?>#include &lt;ext/numeric_traits.h&gt;<?linebreak?></programlisting>Include dependency graph for type_utils.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1is__const__pointer">__gnu_pbds::detail::is_const_pointer&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1is__const__reference">__gnu_pbds::detail::is_const_reference&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple">__gnu_pbds::detail::is_simple&lt; T &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1is__pair">__gnu_pbds::detail::is_pair&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert_3_01true_01_4">__gnu_pbds::detail::__static_assert&lt; true &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert__dumclass">__gnu_pbds::detail::__static_assert_dumclass&lt; int &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">__gnu_pbds::detail::type_to_type&lt; Type &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__pbds">__gnu_pbds</link></para>

<para>GNU extensions for policy-based data structures for public use. </para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____gnu__pbds_1_1detail">__gnu_pbds::detail</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp_1a0610a49e32a86da761a7bd14b8fddc33">PB_DS_STATIC_ASSERT</link>(UNIQUE,  E)&#160;&#160;&#160;    typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert__dumclass">__gnu_pbds::detail::__static_assert_dumclass</link>&lt;sizeof(<link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert">__gnu_pbds::detail::__static_assert</link>&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>(E)&gt;)&gt; UNIQUE##__static_assert_type</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp_1a0610a49e32a86da761a7bd14b8fddc33"/><section>
    <title>PB_DS_STATIC_ASSERT</title>
<indexterm><primary>PB_DS_STATIC_ASSERT</primary><secondary>type_utils.hpp</secondary></indexterm>
<indexterm><primary>type_utils.hpp</primary><secondary>PB_DS_STATIC_ASSERT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_STATIC_ASSERT( UNIQUE,  E)&#160;&#160;&#160;    typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert__dumclass">__gnu_pbds::detail::__static_assert_dumclass</link>&lt;sizeof(<link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert">__gnu_pbds::detail::__static_assert</link>&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>(E)&gt;)&gt; UNIQUE##__static_assert_type</computeroutput></para></section>
</section>
</section>
