<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/test/gtx/gtx_euler_angle.cpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/test/gtx/gtx_euler_angle.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;glm/gtc/matrix_transform.hpp&gt;<?linebreak?>#include &lt;glm/gtx/matrix_cross_product.hpp&gt;<?linebreak?>#include &lt;glm/gtx/matrix_operation.hpp&gt;<?linebreak?>#include &lt;glm/gtc/epsilon.hpp&gt;<?linebreak?>#include &lt;glm/gtx/string_cast.hpp&gt;<?linebreak?>#include &lt;glm/gtx/euler_angles.hpp&gt;<?linebreak?>#include &lt;cstdio&gt;<?linebreak?>#include &lt;vector&gt;<?linebreak?>#include &lt;utility&gt;<?linebreak?></programlisting>Include dependency graph for gtx_euler_angle.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_x">test_eulerAngleX</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_y">test_eulerAngleY</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_z">test_eulerAngleZ</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__derived_euler_angles">test_derivedEulerAngles</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_x_y">test_eulerAngleXY</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_y_x">test_eulerAngleYX</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_x_z">test_eulerAngleXZ</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_z_x">test_eulerAngleZX</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_y_z">test_eulerAngleYZ</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_z_y">test_eulerAngleZY</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angle_y_x_z">test_eulerAngleYXZ</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__euler_angles">test_eulerAngles</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetest__extracts_euler_angles">test_extractsEulerAngles</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp_1abd75661fe7969e19439052a5f69ba5d1">GLM_ENABLE_EXPERIMENTAL</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_x_1a29927bfd28a74b6e785bf69a62f0de43">test_eulerAngleX::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_y_1afc84f914ee7ca893ee2fdbfae5dd6850">test_eulerAngleY::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_z_1a41fde8e06e1eb868ec213242617c9b35">test_eulerAngleZ::test</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespacetest__derived_euler_angles_1acaf3bf1b20ad39ca8663c2e75334dda0">test_derivedEulerAngles::epsilonEqual</link> (<link linkend="_group__core__matrix_1gac54cbc572f1349a255fe476ca6a42a7b">glm::mat4</link> const &amp;mat1, <link linkend="_group__core__matrix_1gac54cbc572f1349a255fe476ca6a42a7b">glm::mat4</link> const &amp;mat2, glm::mat4::value_type const &amp;epsilon)</para>
</listitem>
            <listitem><para>template&lt;typename RotationFunc , typename TestDerivedFunc &gt; </para><para>int <link linkend="_namespacetest__derived_euler_angles_1ae9fc7b20071f4f758c566b057903090e">test_derivedEulerAngles::test</link> (RotationFunc rotationFunc, TestDerivedFunc testDerivedFunc, const <link linkend="_group__core__vector_1ga4320b87e41013b7e875f845f439fc498">glm::vec3</link> &amp;basis)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_x_y_1a563fbc39cab17aa9808a0ffdc561593d">test_eulerAngleXY::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_y_x_1a01bb0e97e135011eed8e172254cf2406">test_eulerAngleYX::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_x_z_1ac3fd49c5cc6e5724e97921c03d6a2af0">test_eulerAngleXZ::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_z_x_1a2aa9839c45e12082db84727de664a08d">test_eulerAngleZX::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_y_z_1a5aed7105e842838b700d5b8fd77594db">test_eulerAngleYZ::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_z_y_1aa01c439a3565e0b078f749e2ca275cac">test_eulerAngleZY::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetest__euler_angle_y_x_z_1af8fd87ad0b0cb30d100219581c254643">test_eulerAngleYXZ::test</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename TestRotationFunc &gt; </para><para>int <link linkend="_namespacetest__euler_angles_1a6ffd249b45016cdfcd84e64e71520670">test_eulerAngles::test</link> (TestRotationFunc testRotationFunc, <link linkend="_group__core__vector_1ga4320b87e41013b7e875f845f439fc498">glm::vec3</link> const &amp;I, <link linkend="_group__core__vector_1ga4320b87e41013b7e875f845f439fc498">glm::vec3</link> const &amp;J, <link linkend="_group__core__vector_1ga4320b87e41013b7e875f845f439fc498">glm::vec3</link> const &amp;K)</para>
</listitem>
            <listitem><para>template&lt;typename RotationFunc , typename TestExtractionFunc &gt; </para><para>int <link linkend="_namespacetest__extracts_euler_angles_1a874374838683e37d36d808893f779d98">test_extractsEulerAngles::test</link> (RotationFunc rotationFunc, TestExtractionFunc testExtractionFunc)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp_1abd75661fe7969e19439052a5f69ba5d1"/><section>
    <title>GLM_ENABLE_EXPERIMENTAL</title>
<indexterm><primary>GLM_ENABLE_EXPERIMENTAL</primary><secondary>gtx_euler_angle.cpp</secondary></indexterm>
<indexterm><primary>gtx_euler_angle.cpp</primary><secondary>GLM_ENABLE_EXPERIMENTAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLM_ENABLE_EXPERIMENTAL</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>gtx_euler_angle.cpp</secondary></indexterm>
<indexterm><primary>gtx_euler_angle.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__euler__angle_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
