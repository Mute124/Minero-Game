<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_catch_1_1_generators_1_1_single_value_generator" xml:lang="en-US">
<title>Catch::Generators::SingleValueGenerator&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Catch::Generators::SingleValueGenerator&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.hpp&gt;</computeroutput>
</para>
Inheritance diagram for Catch::Generators::SingleValueGenerator&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_generators_1_1_single_value_generator__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Catch::Generators::SingleValueGenerator&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_generators_1_1_single_value_generator__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_generators_1_1_single_value_generator_1a532140dd2d1a673692271bb76a661ebe">SingleValueGenerator</link> (<link linkend="_struct_catch_1_1_generators_1_1as">T</link> &amp;&amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_generators_1_1as">T</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp; <link linkend="_class_catch_1_1_generators_1_1_single_value_generator_1af1ed1913c9c73687fd74378fe5394382">get</link> () <link linkend="_struct_catch_1_1_generators_1_1as">const</link> <link linkend="_struct_catch_1_1_generators_1_1as">override</link></para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class_catch_1_1_generators_1_1_single_value_generator_1a10833b34e3ccbc484624185712eb8b6e">next</link> () <link linkend="_struct_catch_1_1_generators_1_1as">override</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_struct_catch_1_1_generators_1_1_i_generator">Catch::Generators::IGenerator&lt; T &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_generators_1_1as">virtual</link> <link linkend="_struct_catch_1_1_generators_1_1_i_generator_1afe5b6eecbbd735e69748d68574611747">~IGenerator</link> ()=<link linkend="_struct_catch_1_1_generators_1_1as">default</link></para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base">Catch::Generators::GeneratorUntypedBase</link>        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base_1a00ff0179d739c3016756b6cf56fabbad">GeneratorUntypedBase</link> ()=<link linkend="_struct_catch_1_1_generators_1_1as">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_generators_1_1as">virtual</link> <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base_1a6f05f8099fdc5744a7aff68aa8c09c7f">~GeneratorUntypedBase</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Public Types inherited from <link linkend="_struct_catch_1_1_generators_1_1_i_generator">Catch::Generators::IGenerator&lt; T &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_generators_1_1as">using</link> <link linkend="_struct_catch_1_1_generators_1_1_i_generator_1a1f8677875fe0ff31f39c60d45504b9a5">type</link> = <link linkend="_struct_catch_1_1_generators_1_1as">T</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_catch_1_1_generators_1_1_single_value_generator_1a532140dd2d1a673692271bb76a661ebe"/><section>
    <title>SingleValueGenerator()</title>
<indexterm><primary>SingleValueGenerator</primary><secondary>Catch::Generators::SingleValueGenerator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Catch::Generators::SingleValueGenerator&lt; T &gt;</primary><secondary>SingleValueGenerator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_single_value_generator">Catch::Generators::SingleValueGenerator</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;::SingleValueGenerator (<link linkend="_struct_catch_1_1_generators_1_1as">T</link> &amp;&amp; value)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_catch_1_1_generators_1_1_single_value_generator_1af1ed1913c9c73687fd74378fe5394382"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Catch::Generators::SingleValueGenerator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Catch::Generators::SingleValueGenerator&lt; T &gt;</primary><secondary>get</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">T</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link>  &amp; <link linkend="_class_catch_1_1_generators_1_1_single_value_generator">Catch::Generators::SingleValueGenerator</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1afc5e04fa58feb228bb06199ff10caa22">::get</link> ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_struct_catch_1_1_generators_1_1_i_generator_1a0fb6da789cda5b4e90f036737db82485">Catch::Generators::IGenerator&lt; T &gt;</link>.</para>
</section>
<anchor xml:id="_class_catch_1_1_generators_1_1_single_value_generator_1a10833b34e3ccbc484624185712eb8b6e"/><section>
    <title>next()</title>
<indexterm><primary>next</primary><secondary>Catch::Generators::SingleValueGenerator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Catch::Generators::SingleValueGenerator&lt; T &gt;</primary><secondary>next</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class_catch_1_1_generators_1_1_single_value_generator">Catch::Generators::SingleValueGenerator</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;::next ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base_1aeed3c0cd6233c5f553549e453b8d6638">Catch::Generators::GeneratorUntypedBase</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_catch_8hpp">catch.hpp</link></section>
</section>
