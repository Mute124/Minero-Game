<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structsource__region" xml:lang="en-US">
<title>source_region Struct Reference</title>
<indexterm><primary>source_region</primary></indexterm>
<para>

<para>A source document region. </para>
 
</para>
<para>
<computeroutput>#include &lt;source_region.h&gt;</computeroutput>
</para>
Collaboration diagram for source_region:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structsource__region__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> optional&lt; std::wstring &gt; <link linkend="_structsource__region_1a3d8e8e28645ba3d917605622e452047e">wide_path</link> () const</para>

<para>The path to the corresponding source document as a wide-string. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structsource__position">source_position</link> <link linkend="_structsource__region_1af660193700792e7b770f11af7182b440">begin</link></para>

<para>The beginning of the region (inclusive). </para>
</listitem>
            <listitem><para><link linkend="_structsource__position">source_position</link> <link linkend="_structsource__region_1a38f9736793a9849af4edd1326be7efdf">end</link></para>

<para>The end of the region (exclusive). </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> <link linkend="_structsource__region_1a0154e7dd187c9eb456c236d98a6a5451">path</link></para>

<para>The path to the corresponding source document. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>std::ostream &amp; <link linkend="_structsource__region_1a0c599ab0b1f64a1ba95a0a90b95888fa">operator&lt;&lt;</link> (std::ostream &amp;lhs, const <link linkend="_structsource__region">source_region</link> &amp;rhs)</para>

<para>Prints a <link linkend="_structsource__region">source_region</link> to a stream. </para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_structsource__region_1a0c599ab0b1f64a1ba95a0a90b95888fa">operator&lt;&lt;</link> (std::ostream &amp;lhs, const <link linkend="_structsource__region">source_region</link> &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A source document region. </para>



<para>\detail \cpp auto tbl = toml::parse_file(&quot;config.toml&quot;sv); if (auto server = tbl.get(&quot;server&quot;)) { std::cout &lt;&lt; &quot;begin: &quot;sv &lt;&lt; server-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.begin &lt;&lt; &quot;\n&quot;; std::cout &lt;&lt; &quot;end: &quot;sv &lt;&lt; server-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.end &lt;&lt; &quot;\n&quot;; std::cout &lt;&lt; &quot;path: &quot;sv &lt;&lt; *server-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.path &lt;&lt; &quot;\n&quot;; } \ecpp</para>

<para>\out begin: line 3, column 1 end: line 3, column 22 path: config.toml \eout</para>

<para><formalpara><title>Remarks</title>

<para>toml++&apos;s parser is unicode-aware insofar as it knows how to handle non-ASCII whitespace and newline characters, but it doesn&apos;t give much thought to combining marks, grapheme clusters vs. characters, et cetera. If a TOML document contains lots of codepoints outside of the ASCII range you may find that your source_positions don&apos;t match those given by a text editor (typically the line numbers will be accurate but column numbers will be too high). <emphasis role="bold">This is not an error.</emphasis> I&apos;ve chosen this behaviour as a deliberate trade-off between parser complexity and correctness. </para>
</formalpara>
</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structsource__region_1a3d8e8e28645ba3d917605622e452047e"/><section>
    <title>wide_path()</title>
<indexterm><primary>wide_path</primary><secondary>source_region</secondary></indexterm>
<indexterm><primary>source_region</primary><secondary>wide_path</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> optional&lt; std::wstring &gt; source_region::wide_path ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>The path to the corresponding source document as a wide-string. </para>
</para>

<para>\availability This function is only available when <link linkend="_group__configuration_1ga94867db67c98e0e9d4fbb70690951fbf">TOML_ENABLE_WINDOWS_COMPAT</link> is enabled.</para>

<para><formalpara><title>Remarks</title>

<para>This will return an empty optional if no path was provided to toml::parse(). </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structsource__region_a3d8e8e28645ba3d917605622e452047e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_structsource__region_1a0c599ab0b1f64a1ba95a0a90b95888fa"/><section>
    <title>operator&lt;&lt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>source_region</secondary></indexterm>
<indexterm><primary>source_region</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const <link linkend="_structsource__region">source_region</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Prints a <link linkend="_structsource__region">source_region</link> to a stream. </para>
</para>

<para>\detail \cpp auto tbl = toml::parse(&quot;bar = 42&quot;, &quot;config.toml&quot;);</para>

<para>std::cout &lt;&lt; &quot;The value for &apos;bar&apos; was found on &quot;sv &lt;&lt; tbl.get(&quot;bar&quot;)-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link> &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out The value for &apos;bar&apos; was found on line 1, column 7 of &apos;config.toml&apos; \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>lhs</entry><entry>
<para>The stream. </para>
</entry>
                            </row>
                            <row>
<entry>rhs</entry><entry>
<para>The <link linkend="_structsource__position">source_position</link>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The input stream. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_structsource__region_1a0c599ab0b1f64a1ba95a0a90b95888fa"/><section>
    <title>operator&lt;&lt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>source_region</secondary></indexterm>
<indexterm><primary>source_region</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const <link linkend="_structsource__region">source_region</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structsource__region_1af660193700792e7b770f11af7182b440"/><section>
    <title>begin</title>
<indexterm><primary>begin</primary><secondary>source_region</secondary></indexterm>
<indexterm><primary>source_region</primary><secondary>begin</secondary></indexterm>
<para><computeroutput><link linkend="_structsource__position">source_position</link> source_region::begin</computeroutput></para><para>

<para>The beginning of the region (inclusive). </para>
</para>
</section>
<anchor xml:id="_structsource__region_1a38f9736793a9849af4edd1326be7efdf"/><section>
    <title>end</title>
<indexterm><primary>end</primary><secondary>source_region</secondary></indexterm>
<indexterm><primary>source_region</primary><secondary>end</secondary></indexterm>
<para><computeroutput><link linkend="_structsource__position">source_position</link> source_region::end</computeroutput></para><para>

<para>The end of the region (exclusive). </para>
</para>
</section>
<anchor xml:id="_structsource__region_1a0154e7dd187c9eb456c236d98a6a5451"/><section>
    <title>path</title>
<indexterm><primary>path</primary><secondary>source_region</secondary></indexterm>
<indexterm><primary>source_region</primary><secondary>path</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> source_region::path</computeroutput></para><para>

<para>The path to the corresponding source document. </para>
</para>

<para><formalpara><title>Remarks</title>

<para>This will be <computeroutput>nullptr</computeroutput> if no path was provided to toml::parse(). </para>
</formalpara>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/<link linkend="_source__region_8h">source_region.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
