<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2rl__gputex_8h_source" xml:lang="en-US">
<title>rl_gputex.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/rl_gputex.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/**********************************************************************************************</emphasis>
2 <emphasis role="comment">*</emphasis>
3 <emphasis role="comment">*&#32;&#32;&#32;rl_gputex&#32;-&#32;GPU&#32;compressed&#32;textures&#32;loading&#32;and&#32;saving</emphasis>
4 <emphasis role="comment">*</emphasis>
5 <emphasis role="comment">*&#32;&#32;&#32;DESCRIPTION:</emphasis>
6 <emphasis role="comment">*</emphasis>
7 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;Load&#32;GPU&#32;compressed&#32;image&#32;data&#32;from&#32;image&#32;files&#32;provided&#32;as&#32;memory&#32;data&#32;arrays,</emphasis>
8 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;data&#32;is&#32;loaded&#32;compressed,&#32;ready&#32;to&#32;be&#32;loaded&#32;into&#32;GPU.</emphasis>
9 <emphasis role="comment">*</emphasis>
10 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;Note&#32;that&#32;some&#32;file&#32;formats&#32;(DDS,&#32;PVR,&#32;KTX)&#32;also&#32;support&#32;uncompressed&#32;data&#32;storage.</emphasis>
11 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;In&#32;those&#32;cases&#32;data&#32;is&#32;loaded&#32;uncompressed&#32;and&#32;format&#32;is&#32;returned.</emphasis>
12 <emphasis role="comment">*&#32;</emphasis>
13 <emphasis role="comment">*&#32;&#32;&#32;TODO:</emphasis>
14 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;-&#32;Implement&#32;raylib&#32;function:&#32;rlGetGlTextureFormats(),&#32;required&#32;by&#32;rl_save_ktx_to_memory()</emphasis>
15 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;-&#32;Review&#32;rl_load_ktx_from_memory()&#32;to&#32;support&#32;KTX&#32;v2.2&#32;specs</emphasis>
16 <emphasis role="comment">*</emphasis>
17 <emphasis role="comment">*&#32;&#32;&#32;CONFIGURATION:</emphasis>
18 <emphasis role="comment">*</emphasis>
19 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;RL_GPUTEX_SUPPORT_DDS</emphasis>
20 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;RL_GPUTEX_SUPPORT_PKM</emphasis>
21 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;RL_GPUTEX_SUPPORT_KTX</emphasis>
22 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;RL_GPUTEX_SUPPORT_PVR</emphasis>
23 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;RL_GPUTEX_SUPPORT_ASTC</emphasis>
24 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Define&#32;desired&#32;file&#32;formats&#32;to&#32;be&#32;supported</emphasis>
25 <emphasis role="comment">*</emphasis>
26 <emphasis role="comment">*</emphasis>
27 <emphasis role="comment">*&#32;&#32;&#32;LICENSE:&#32;zlib/libpng</emphasis>
28 <emphasis role="comment">*</emphasis>
29 <emphasis role="comment">*&#32;&#32;&#32;Copyright&#32;(c)&#32;2013-2022&#32;Ramon&#32;Santamaria&#32;(@raysan5)</emphasis>
30 <emphasis role="comment">*</emphasis>
31 <emphasis role="comment">*&#32;&#32;&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as-is&quot;,&#32;without&#32;any&#32;express&#32;or&#32;implied&#32;warranty.&#32;In&#32;no&#32;event</emphasis>
32 <emphasis role="comment">*&#32;&#32;&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
33 <emphasis role="comment">*</emphasis>
34 <emphasis role="comment">*&#32;&#32;&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,&#32;including&#32;commercial</emphasis>
35 <emphasis role="comment">*&#32;&#32;&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
36 <emphasis role="comment">*</emphasis>
37 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not&#32;claim&#32;that&#32;you</emphasis>
38 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment</emphasis>
39 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;product&#32;documentation&#32;would&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
40 <emphasis role="comment">*</emphasis>
41 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not&#32;be&#32;misrepresented</emphasis>
42 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
43 <emphasis role="comment">*</emphasis>
44 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source&#32;distribution.</emphasis>
45 <emphasis role="comment">*</emphasis>
46 <emphasis role="comment">**********************************************************************************************/</emphasis>
47 
48 <emphasis role="preprocessor">#ifndef&#32;RL_GPUTEX_H</emphasis>
49 <emphasis role="preprocessor">#define&#32;RL_GPUTEX_H</emphasis>
50 
51 <emphasis role="preprocessor">#ifndef&#32;RLAPI</emphasis>
52 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;RLAPI&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Functions&#32;defined&#32;as&#32;&apos;extern&apos;&#32;by&#32;default&#32;(implicit&#32;specifiers)</emphasis>
53 <emphasis role="preprocessor">#endif</emphasis>
54 
55 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
56 <emphasis role="comment">//&#32;Module&#32;Functions&#32;Declaration</emphasis>
57 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
58 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
59 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevents&#32;name&#32;mangling&#32;of&#32;functions</emphasis>
60 <emphasis role="preprocessor">#endif</emphasis>
61 
62 <emphasis role="comment">//&#32;Load&#32;image&#32;data&#32;from&#32;memory&#32;data&#32;files</emphasis>
63 <link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1aab421b1ba54da084a0fc697816702062">rl_load_dds_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips);
64 <link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1a09ec73a707d3fe20d7b02dc70a24cb34">rl_load_pkm_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips);
65 <link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1ad07e1b2a464d39d9a2c3d332a0ee422e">rl_load_ktx_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips);
66 <link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1ab11fb2977c0815a8c950c888114dfa87">rl_load_pvr_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips);
67 <link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1a5cf1e3d21c9655073d78eac2b8b7d842">rl_load_astc_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips);
68 
69 <link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2rl__gputex_8h_1adfbdde934809f2fafaea7cbaf86fde27">rl_save_ktx_to_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fileName,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mipmaps);&#32;&#32;<emphasis role="comment">//&#32;Save&#32;image&#32;data&#32;as&#32;KTX&#32;file</emphasis>
70 
71 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
72 }
73 <emphasis role="preprocessor">#endif</emphasis>
74 
75 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RL_GPUTEX_H</emphasis>
76 
77 
78 <emphasis role="comment">/***********************************************************************************</emphasis>
79 <emphasis role="comment">*</emphasis>
80 <emphasis role="comment">*&#32;&#32;&#32;RL_GPUTEX&#32;IMPLEMENTATION</emphasis>
81 <emphasis role="comment">*</emphasis>
82 <emphasis role="comment">************************************************************************************/</emphasis>
83 
84 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_IMPLEMENTATION)</emphasis>
85 
86 <emphasis role="comment">//&#32;Simple&#32;log&#32;system&#32;to&#32;avoid&#32;RPNG_LOG()&#32;calls&#32;if&#32;required</emphasis>
87 <emphasis role="comment">//&#32;NOTE:&#32;Avoiding&#32;those&#32;calls,&#32;also&#32;avoids&#32;const&#32;strings&#32;memory&#32;usage</emphasis>
88 <emphasis role="preprocessor">#define&#32;RL_GPUTEX_SHOW_LOG_INFO</emphasis>
89 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_SHOW_LOG_INFO)&#32;&amp;&amp;&#32;!defined(LOG)</emphasis>
90 <emphasis role="preprocessor">#define&#32;LOG(...)&#32;printf(__VA_ARGS__)</emphasis>
91 <emphasis role="preprocessor">#else</emphasis>
92 <emphasis role="preprocessor">#define&#32;LOG(...)</emphasis>
93 <emphasis role="preprocessor">#endif</emphasis>
94 
95 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
96 <emphasis role="comment">//&#32;Module&#32;Internal&#32;Functions&#32;Declaration</emphasis>
97 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
98 <emphasis role="comment">//&#32;Get&#32;pixel&#32;data&#32;size&#32;in&#32;bytes&#32;for&#32;certain&#32;pixel&#32;format</emphasis>
99 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;get_pixel_data_size(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>);
100 
101 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
102 <emphasis role="comment">//&#32;Module&#32;Functions&#32;Definition</emphasis>
103 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
104 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_SUPPORT_DDS)</emphasis>
105 <emphasis role="comment">//&#32;Loading&#32;DDS&#32;from&#32;memory&#32;image&#32;data&#32;(compressed&#32;or&#32;uncompressed)</emphasis>
106 <emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1aab421b1ba54da084a0fc697816702062">rl_load_dds_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips)
107 {
108 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*image_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Image&#32;data&#32;pointer</emphasis>
109 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;image_pixel_size&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Image&#32;pixel&#32;size</emphasis>
110 
111 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data_ptr&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)file_data;
112 
113 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;extension:</emphasis>
114 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_EXT_texture_compression_s3tc</emphasis>
115 
116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Supported&#32;tokens&#32;(defined&#32;by&#32;extensions)</emphasis>
117 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGB_S3TC_DXT1_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x83F0</emphasis>
118 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA_S3TC_DXT1_EXT&#32;&#32;&#32;&#32;&#32;0x83F1</emphasis>
119 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA_S3TC_DXT3_EXT&#32;&#32;&#32;&#32;&#32;0x83F2</emphasis>
120 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA_S3TC_DXT5_EXT&#32;&#32;&#32;&#32;&#32;0x83F3</emphasis>
121 
122 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;FOURCC_DXT1&#32;0x31545844&#32;&#32;</emphasis><emphasis role="comment">//&#32;Equivalent&#32;to&#32;&quot;DXT1&quot;&#32;in&#32;ASCII</emphasis>
123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;FOURCC_DXT3&#32;0x33545844&#32;&#32;</emphasis><emphasis role="comment">//&#32;Equivalent&#32;to&#32;&quot;DXT3&quot;&#32;in&#32;ASCII</emphasis>
124 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;FOURCC_DXT5&#32;0x35545844&#32;&#32;</emphasis><emphasis role="comment">//&#32;Equivalent&#32;to&#32;&quot;DXT5&quot;&#32;in&#32;ASCII</emphasis>
125 
126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DDS&#32;Pixel&#32;Format</emphasis>
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>;
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;fourcc;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;rgb_bit_count;
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;r_bit_mask;
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;g_bit_mask;
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;b_bit_mask;
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;a_bit_mask;
136 &#32;&#32;&#32;&#32;}&#32;dds_pixel_format;
137 
138 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DDS&#32;Header&#32;(124&#32;bytes)</emphasis>
139 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>;
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;pitch_or_linear_size;
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mipmap_count;
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;reserved1[11];
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dds_pixel_format&#32;ddspf;
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;caps;
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;caps2;
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;caps3;
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;caps4;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;reserved2;
154 &#32;&#32;&#32;&#32;}&#32;dds_header;
155 
156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file_data_ptr&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
157 &#32;&#32;&#32;&#32;{
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Verify&#32;the&#32;type&#32;of&#32;file</emphasis>
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dds_header_id&#32;=&#32;file_data_ptr;
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;4;
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((dds_header_id[0]&#32;!=&#32;<emphasis role="charliteral">&apos;D&apos;</emphasis>)&#32;||&#32;(dds_header_id[1]&#32;!=&#32;<emphasis role="charliteral">&apos;D&apos;</emphasis>)&#32;||&#32;(dds_header_id[2]&#32;!=&#32;<emphasis role="charliteral">&apos;S&apos;</emphasis>)&#32;||&#32;(dds_header_id[3]&#32;!=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>))
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;DDS&#32;file&#32;data&#32;not&#32;valid&quot;</emphasis>);
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dds_header&#32;*header&#32;=&#32;(dds_header&#32;*)file_data_ptr;
169 
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(dds_header);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;header</emphasis>
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;header-&gt;width;
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;header-&gt;height;
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_pixel_size&#32;=&#32;header-&gt;width*header-&gt;height;
175 
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;mipmap_count&#32;==&#32;0)&#32;*mips&#32;=&#32;1;&#32;&#32;&#32;<emphasis role="comment">//&#32;Parameter&#32;not&#32;used</emphasis>
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;*mips&#32;=&#32;header-&gt;mipmap_count;
178 
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.rgb_bit_count&#32;==&#32;16)&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16bit&#32;mode,&#32;no&#32;compressed</emphasis>
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.flags&#32;==&#32;0x40)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;alpha&#32;channel</emphasis>
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;image_pixel_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;short);
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size);
185 
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa910a723dce9a250bca696a58f3f4dca">PIXELFORMAT_UNCOMPRESSED_R5G6B5</link>;
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.flags&#32;==&#32;0x41)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;With&#32;alpha&#32;channel</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.a_bit_mask&#32;==&#32;0x8000)&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;1bit&#32;alpha</emphasis>
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;image_pixel_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;short);
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size);
196 
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
198 
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;=&#32;0;
200 
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Data&#32;comes&#32;as&#32;A1R5G5B5,&#32;it&#32;must&#32;be&#32;reordered&#32;to&#32;R5G5B5A1</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;image_pixel_size;&#32;i++)
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;=&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;&gt;&gt;&#32;15;
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;=&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;&lt;&lt;&#32;1;
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>;
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
208 
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac898083344dfc92ead7ffd0e8fba44ad">PIXELFORMAT_UNCOMPRESSED_R5G5B5A1</link>;
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.a_bit_mask&#32;==&#32;0xf000)&#32;&#32;&#32;<emphasis role="comment">//&#32;4bit&#32;alpha</emphasis>
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;image_pixel_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;short);
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size);
215 
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
217 
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;=&#32;0;
219 
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Data&#32;comes&#32;as&#32;A4R4G4B4,&#32;it&#32;must&#32;be&#32;reordered&#32;R4G4B4A4</emphasis>
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;image_pixel_size;&#32;i++)
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;=&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;&gt;&gt;&#32;12;
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;=&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;&lt;&lt;&#32;4;
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*)image_data)[i]&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>;
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aae56d1ffdb89875b45aca64366aed51c1">PIXELFORMAT_UNCOMPRESSED_R4G4B4A4</link>;
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.flags&#32;==&#32;0x40&#32;&amp;&amp;&#32;header-&gt;ddspf.rgb_bit_count&#32;==&#32;24)&#32;&#32;&#32;<emphasis role="comment">//&#32;DDS_RGB,&#32;no&#32;compressed</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;image_pixel_size*3*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;char);
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size);
236 
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
238 
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa47eebb90754eb3427891c9f1d8286b85">PIXELFORMAT_UNCOMPRESSED_R8G8B8</link>;
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.flags&#32;==&#32;0x41&#32;&amp;&amp;&#32;header-&gt;ddspf.rgb_bit_count&#32;==&#32;32)&#32;<emphasis role="comment">//&#32;DDS_RGBA,&#32;no&#32;compressed</emphasis>
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;image_pixel_size*4*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;char);
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size);
245 
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
247 
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ab4fcc6ff520ae4d9de259c8468a5cd93">blue</link>&#32;=&#32;0;
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Data&#32;comes&#32;as&#32;A8R8G8B8,&#32;it&#32;must&#32;be&#32;reordered&#32;R8G8B8A8&#32;(view&#32;next&#32;comment)</emphasis>
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DirecX&#32;understand&#32;ARGB&#32;as&#32;a&#32;32bit&#32;DWORD&#32;but&#32;the&#32;actual&#32;memory&#32;byte&#32;alignment&#32;is&#32;BGRA</emphasis>
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;So,&#32;we&#32;must&#32;realign&#32;B8G8R8A8&#32;to&#32;R8G8B8A8</emphasis>
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;image_pixel_size*4;&#32;i&#32;+=&#32;4)
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ab4fcc6ff520ae4d9de259c8468a5cd93">blue</link>&#32;=&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)image_data)[i];
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)image_data)[i]&#32;=&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)image_data)[i&#32;+&#32;2];
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)image_data)[i&#32;+&#32;2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ab4fcc6ff520ae4d9de259c8468a5cd93">blue</link>;
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
259 
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac4b38b1d326ca4e5137df5b8bca7ab16">PIXELFORMAT_UNCOMPRESSED_R8G8B8A8</link>;
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((header-&gt;ddspf.flags&#32;==&#32;0x04)&#32;||&#32;(header-&gt;ddspf.flags&#32;==&#32;0x05))&#32;&amp;&amp;&#32;(header-&gt;ddspf.fourcc&#32;&gt;&#32;0))&#32;<emphasis role="comment">//&#32;Compressed</emphasis>
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;0;
265 
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;data&#32;size,&#32;including&#32;all&#32;mipmaps</emphasis>
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;mipmap_count&#32;&gt;&#32;1)&#32;data_size&#32;=&#32;header-&gt;pitch_or_linear_size*2;
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;data_size&#32;=&#32;header-&gt;pitch_or_linear_size;
269 
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>));
271 
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
273 
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(header-&gt;ddspf.fourcc)
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1a468857dac4f79c2eb726895c76a86edb">FOURCC_DXT1</link>:
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;ddspf.flags&#32;==&#32;0x04)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa2d3d75d29bf303ced4a246bd5feedf2d">PIXELFORMAT_COMPRESSED_DXT1_RGB</link>;
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaac7fbeeddc217b465ee4e4309f26d436">PIXELFORMAT_COMPRESSED_DXT1_RGBA</link>;
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aff8dbd1cbf63d33501078e742401d01a">FOURCC_DXT3</link>:&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa65fc2b80964f40782d2f5e510673b000">PIXELFORMAT_COMPRESSED_DXT3_RGBA</link>;&#32;<emphasis role="keywordflow">break</emphasis>;
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1a2608b4713fde494b66329c624975a613">FOURCC_DXT5</link>:&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa8cc4c27376f8eefe0523a427ef71755d">PIXELFORMAT_COMPRESSED_DXT5_RGBA</link>;&#32;<emphasis role="keywordflow">break</emphasis>;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
287 &#32;&#32;&#32;&#32;}
288 
289 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image_data;
290 }
291 <emphasis role="preprocessor">#endif</emphasis>
292 
293 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_SUPPORT_PKM)</emphasis>
294 <emphasis role="comment">//&#32;Loading&#32;PKM&#32;image&#32;data&#32;(ETC1/ETC2&#32;compression)</emphasis>
295 <emphasis role="comment">//&#32;NOTE:&#32;KTX&#32;is&#32;the&#32;standard&#32;Khronos&#32;Group&#32;compression&#32;format&#32;(ETC1/ETC2,&#32;mipmaps)</emphasis>
296 <emphasis role="comment">//&#32;PKM&#32;is&#32;a&#32;much&#32;simpler&#32;file&#32;format&#32;used&#32;mainly&#32;to&#32;contain&#32;a&#32;single&#32;ETC1/ETC2&#32;compressed&#32;image&#32;(no&#32;mipmaps)</emphasis>
297 <emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1a09ec73a707d3fe20d7b02dc70a24cb34">rl_load_pkm_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips)
298 {
299 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*image_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Image&#32;data&#32;pointer</emphasis>
300 
301 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data_ptr&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)file_data;
302 
303 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;extensions:</emphasis>
304 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_OES_compressed_ETC1_RGB8_texture&#32;&#32;(ETC1)&#32;(OpenGL&#32;ES&#32;2.0)</emphasis>
305 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_ARB_ES3_compatibility&#32;&#32;(ETC2/EAC)&#32;(OpenGL&#32;ES&#32;3.0)</emphasis>
306 
307 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Supported&#32;tokens&#32;(defined&#32;by&#32;extensions)</emphasis>
308 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_ETC1_RGB8_OES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8D64</emphasis>
309 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGB8_ETC2&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x9274</emphasis>
310 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA8_ETC2_EAC&#32;&#32;&#32;&#32;&#32;0x9278</emphasis>
311 
312 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PKM&#32;file&#32;(ETC1)&#32;Header&#32;(16&#32;bytes)</emphasis>
313 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>[4];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;PKM&#32;&quot;</emphasis>
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_namespaceversion">version</link>[2];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;10&quot;&#32;or&#32;&quot;20&quot;</emphasis>
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Data&#32;format&#32;(big-endian)&#32;(Check&#32;list&#32;below)</emphasis>
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Texture&#32;width&#32;(big-endian)&#32;(orig_width&#32;rounded&#32;to&#32;multiple&#32;of&#32;4)</emphasis>
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Texture&#32;height&#32;(big-endian)&#32;(orig_height&#32;rounded&#32;to&#32;multiple&#32;of&#32;4)</emphasis>
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;orig_width;&#32;&#32;&#32;<emphasis role="comment">//&#32;Original&#32;width&#32;(big-endian)</emphasis>
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;orig_height;&#32;&#32;<emphasis role="comment">//&#32;Original&#32;height&#32;(big-endian)</emphasis>
321 &#32;&#32;&#32;&#32;}&#32;pkm_header;
322 
323 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Formats&#32;list</emphasis>
324 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;version&#32;10:&#32;format:&#32;0=ETC1_RGB,&#32;[1=ETC1_RGBA,&#32;2=ETC1_RGB_MIP,&#32;3=ETC1_RGBA_MIP]&#32;(not&#32;used)</emphasis>
325 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;version&#32;20:&#32;format:&#32;0=ETC1_RGB,&#32;1=ETC2_RGB,&#32;2=ETC2_RGBA_OLD,&#32;3=ETC2_RGBA,&#32;4=ETC2_RGBA1,&#32;5=ETC2_R,&#32;6=ETC2_RG,&#32;7=ETC2_SIGNED_R,&#32;8=ETC2_SIGNED_R</emphasis>
326 
327 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;The&#32;extended&#32;width&#32;and&#32;height&#32;are&#32;the&#32;widths&#32;rounded&#32;up&#32;to&#32;a&#32;multiple&#32;of&#32;4.</emphasis>
328 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;ETC&#32;is&#32;always&#32;4bit&#32;per&#32;pixel&#32;(64&#32;bit&#32;for&#32;each&#32;4x4&#32;block&#32;of&#32;pixels)</emphasis>
329 
330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file_data_ptr&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
331 &#32;&#32;&#32;&#32;{
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pkm_header&#32;*header&#32;=&#32;(pkm_header&#32;*)file_data_ptr;
333 
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;id[0]&#32;!=&#32;<emphasis role="charliteral">&apos;P&apos;</emphasis>)&#32;||&#32;(header-&gt;id[1]&#32;!=&#32;<emphasis role="charliteral">&apos;K&apos;</emphasis>)&#32;||&#32;(header-&gt;id[2]&#32;!=&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>)&#32;||&#32;(header-&gt;id[3]&#32;!=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>))
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;PKM&#32;file&#32;data&#32;not&#32;valid&quot;</emphasis>);
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(pkm_header);&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;header</emphasis>
341 
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;format,&#32;width&#32;and&#32;height&#32;come&#32;as&#32;big-endian,&#32;data&#32;must&#32;be&#32;swapped&#32;to&#32;little-endian</emphasis>
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;header-&gt;format&#32;=&#32;((header-&gt;format&#32;&amp;&#32;0x00FF)&#32;&lt;&lt;&#32;8)&#32;|&#32;((header-&gt;format&#32;&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;8);
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;header-&gt;width&#32;=&#32;((header-&gt;width&#32;&amp;&#32;0x00FF)&#32;&lt;&lt;&#32;8)&#32;|&#32;((header-&gt;width&#32;&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;8);
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;header-&gt;height&#32;=&#32;((header-&gt;height&#32;&amp;&#32;0x00FF)&#32;&lt;&lt;&#32;8)&#32;|&#32;((header-&gt;height&#32;&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;8);
346 
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;header-&gt;width;
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;header-&gt;height;
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mips&#32;=&#32;1;
350 
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp&#32;=&#32;4;
352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;format&#32;==&#32;3)&#32;bpp&#32;=&#32;8;
353 
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;(*width)*(*height)*bpp/8;&#32;&#32;<emphasis role="comment">//&#32;Total&#32;data&#32;size&#32;in&#32;bytes</emphasis>
355 
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>));
357 
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
359 
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;format&#32;==&#32;0)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa06d2d6c2a84a389cfa12bf3d415becbb">PIXELFORMAT_COMPRESSED_ETC1_RGB</link>;
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;format&#32;==&#32;1)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aab6d5fd22d2416f647bf6f4e14393579d">PIXELFORMAT_COMPRESSED_ETC2_RGB</link>;
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;format&#32;==&#32;3)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa90b23e99afb4ccd292a0f2eada42f1e4">PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA</link>;
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
364 &#32;&#32;&#32;&#32;}
365 
366 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image_data;
367 }
368 <emphasis role="preprocessor">#endif</emphasis>
369 
370 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_SUPPORT_KTX)</emphasis>
371 <emphasis role="comment">//&#32;Load&#32;KTX&#32;compressed&#32;image&#32;data&#32;(ETC1/ETC2&#32;compression)</emphasis>
372 <emphasis role="comment">//&#32;TODO:&#32;Review&#32;KTX&#32;loading,&#32;many&#32;things&#32;changed!</emphasis>
373 <emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1ad07e1b2a464d39d9a2c3d332a0ee422e">rl_load_ktx_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips)
374 {
375 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*image_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Image&#32;data&#32;pointer</emphasis>
376 
377 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data_ptr&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)file_data;
378 
379 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;extensions:</emphasis>
380 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_OES_compressed_ETC1_RGB8_texture&#32;&#32;(ETC1)</emphasis>
381 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_ARB_ES3_compatibility&#32;&#32;(ETC2/EAC)</emphasis>
382 
383 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Supported&#32;tokens&#32;(defined&#32;by&#32;extensions)</emphasis>
384 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_ETC1_RGB8_OES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8D64</emphasis>
385 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGB8_ETC2&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x9274</emphasis>
386 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA8_ETC2_EAC&#32;&#32;&#32;&#32;&#32;0x9278</emphasis>
387 
388 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;file&#32;Header&#32;(64&#32;bytes)</emphasis>
389 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;v1.1&#32;-&#32;https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/</emphasis>
390 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;v2.0&#32;-&#32;http://github.khronos.org/KTX-Specification/</emphasis>
391 
392 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;1.1&#32;Header</emphasis>
393 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Support&#32;KTX&#32;2.2&#32;specs!</emphasis>
394 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>[12];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Identifier:&#32;&quot;«KTX&#32;11»\r\n\x1A\n&quot;</emphasis>
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;endianness;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Little&#32;endian:&#32;0x01&#32;0x02&#32;0x03&#32;0x04</emphasis>
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_type;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;compressed&#32;textures,&#32;glType&#32;must&#32;equal&#32;0</emphasis>
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_type_size;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;compressed&#32;texture&#32;data,&#32;usually&#32;1</emphasis>
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_format;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;compressed&#32;textures&#32;is&#32;0</emphasis>
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_internal_format;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compressed&#32;internal&#32;format</emphasis>
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_base_internal_format;&#32;&#32;&#32;<emphasis role="comment">//&#32;Same&#32;as&#32;glFormat&#32;(RGB,&#32;RGBA,&#32;ALPHA...)</emphasis>
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Texture&#32;image&#32;width&#32;in&#32;pixels</emphasis>
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Texture&#32;image&#32;height&#32;in&#32;pixels</emphasis>
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;2D&#32;textures&#32;is&#32;0</emphasis>
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;elements;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;array&#32;elements,&#32;usually&#32;0</emphasis>
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;faces;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cubemap&#32;faces,&#32;for&#32;no-cubemap&#32;=&#32;1</emphasis>
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mipmap_levels;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Non-mipmapped&#32;textures&#32;=&#32;1</emphasis>
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;key_value_data_size;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Used&#32;to&#32;encode&#32;any&#32;arbitrary&#32;data...</emphasis>
409 &#32;&#32;&#32;&#32;}&#32;ktx_header;
410 
411 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Before&#32;start&#32;of&#32;every&#32;mipmap&#32;data&#32;block,&#32;we&#32;have:&#32;unsigned&#32;int&#32;data_size</emphasis>
412 
413 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file_data_ptr&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
414 &#32;&#32;&#32;&#32;{
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ktx_header&#32;*header&#32;=&#32;(ktx_header&#32;*)file_data_ptr;
416 
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;id[1]&#32;!=&#32;<emphasis role="charliteral">&apos;K&apos;</emphasis>)&#32;||&#32;(header-&gt;id[2]&#32;!=&#32;<emphasis role="charliteral">&apos;T&apos;</emphasis>)&#32;||&#32;(header-&gt;id[3]&#32;!=&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>)&#32;||
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(header-&gt;id[4]&#32;!=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>)&#32;||&#32;(header-&gt;id[5]&#32;!=&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>)&#32;||&#32;(header-&gt;id[6]&#32;!=&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>))
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;KTX&#32;file&#32;data&#32;not&#32;valid&quot;</emphasis>);
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(ktx_header);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;file&#32;data&#32;pointer</emphasis>
425 
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;header-&gt;width;
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;header-&gt;height;
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mips&#32;=&#32;header-&gt;mipmap_levels;
429 
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;header-&gt;key_value_data_size;&#32;<emphasis role="comment">//&#32;Skip&#32;value&#32;data&#32;size</emphasis>
431 
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;((<emphasis role="keywordtype">int</emphasis>&#32;*)file_data_ptr)[0];
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(int);
434 
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>));
436 
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
438 
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;gl_internal_format&#32;==&#32;0x8D64)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa06d2d6c2a84a389cfa12bf3d415becbb">PIXELFORMAT_COMPRESSED_ETC1_RGB</link>;
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;gl_internal_format&#32;==&#32;0x9274)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aab6d5fd22d2416f647bf6f4e14393579d">PIXELFORMAT_COMPRESSED_ETC2_RGB</link>;
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;gl_internal_format&#32;==&#32;0x9278)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa90b23e99afb4ccd292a0f2eada42f1e4">PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA</link>;
442 
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Support&#32;uncompressed&#32;data&#32;formats?&#32;Right&#32;now&#32;it&#32;returns&#32;format&#32;=&#32;0!</emphasis>
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
445 &#32;&#32;&#32;&#32;}
446 
447 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image_data;
448 }
449 
450 <emphasis role="comment">//&#32;Save&#32;image&#32;data&#32;as&#32;KTX&#32;file</emphasis>
451 <emphasis role="comment">//&#32;NOTE:&#32;By&#32;default&#32;KTX&#32;1.1&#32;spec&#32;is&#32;used,&#32;2.0&#32;is&#32;still&#32;on&#32;draft&#32;(01Oct2018)</emphasis>
452 <emphasis role="comment">//&#32;TODO:&#32;Review&#32;KTX&#32;saving,&#32;many&#32;things&#32;changed!</emphasis>
453 <emphasis role="keywordtype">int</emphasis>&#32;rl_save_ktx(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_name,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mipmaps)
454 {
455 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;file&#32;Header&#32;(64&#32;bytes)</emphasis>
456 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;v1.1&#32;-&#32;https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/</emphasis>
457 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;v2.0&#32;-&#32;http://github.khronos.org/KTX-Specification/&#32;-&#32;Final&#32;specs&#32;by&#32;2021-04-18</emphasis>
458 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>[12];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Identifier:&#32;&quot;«KTX&#32;11»\r\n\x1A\n&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;KTX&#32;2.0:&#32;&quot;«KTX&#32;22»\r\n\x1A\n&quot;</emphasis>
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;endianness;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Little&#32;endian:&#32;0x01&#32;0x02&#32;0x03&#32;0x04</emphasis>
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_type;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;compressed&#32;textures,&#32;glType&#32;must&#32;equal&#32;0</emphasis>
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_type_size;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;compressed&#32;texture&#32;data,&#32;usually&#32;1</emphasis>
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_format;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;compressed&#32;textures&#32;is&#32;0</emphasis>
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_internal_format;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compressed&#32;internal&#32;format</emphasis>
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl_base_internal_format;&#32;&#32;&#32;<emphasis role="comment">//&#32;Same&#32;as&#32;glFormat&#32;(RGB,&#32;RGBA,&#32;ALPHA...)&#32;&#32;&#32;//&#32;KTX&#32;2.0:&#32;UInt32&#32;vkFormat</emphasis>
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Texture&#32;image&#32;width&#32;in&#32;pixels</emphasis>
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Texture&#32;image&#32;height&#32;in&#32;pixels</emphasis>
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;2D&#32;textures&#32;is&#32;0</emphasis>
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;elements;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;array&#32;elements,&#32;usually&#32;0</emphasis>
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;faces;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cubemap&#32;faces,&#32;for&#32;no-cubemap&#32;=&#32;1</emphasis>
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mipmap_levels;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Non-mipmapped&#32;textures&#32;=&#32;1</emphasis>
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;key_value_data_size;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Used&#32;to&#32;encode&#32;any&#32;arbitrary&#32;data...&#32;&#32;&#32;&#32;&#32;//&#32;KTX&#32;2.0:&#32;UInt32&#32;levelOrder&#32;-&#32;ordering&#32;of&#32;the&#32;mipmap&#32;levels,&#32;usually&#32;0</emphasis>
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;2.0:&#32;UInt32&#32;supercompressionScheme&#32;-&#32;0&#32;(None),&#32;1&#32;(Crunch&#32;CRN),&#32;2&#32;(Zlib&#32;DEFLATE)...</emphasis>
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;2.0&#32;defines&#32;additional&#32;header&#32;elements...</emphasis>
475 &#32;&#32;&#32;&#32;}&#32;ktx_header;
476 
477 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;file&#32;data_size&#32;required</emphasis>
478 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(ktx_header);
479 
480 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;h&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;i&#32;&lt;&#32;mipmaps;&#32;i++)
481 &#32;&#32;&#32;&#32;{
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data_size&#32;+=&#32;get_pixel_data_size(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>);
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;/=&#32;2;&#32;h&#32;/=&#32;2;
484 &#32;&#32;&#32;&#32;}
485 
486 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1acd87ef6f5207a6f436d03347553b36fb">RL_CALLOC</link>(data_size,&#32;1);
487 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data_ptr&#32;=&#32;file_data;
488 
489 &#32;&#32;&#32;&#32;ktx_header&#32;header&#32;=&#32;{&#32;0&#32;};
490 
491 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;identifier&#32;(v1.1)</emphasis>
492 &#32;&#32;&#32;&#32;<emphasis role="comment">//unsigned&#32;char&#32;id[12]&#32;=&#32;{&#32;&apos;«&apos;,&#32;&apos;K&apos;,&#32;&apos;T&apos;,&#32;&apos;X&apos;,&#32;&apos;&#32;&apos;,&#32;&apos;1&apos;,&#32;&apos;1&apos;,&#32;&apos;»&apos;,&#32;&apos;\r&apos;,&#32;&apos;\n&apos;,&#32;&apos;\x1A&apos;,&#32;&apos;\n&apos;&#32;};</emphasis>
493 &#32;&#32;&#32;&#32;<emphasis role="comment">//unsigned&#32;char&#32;id[12]&#32;=&#32;{&#32;0xAB,&#32;0x4B,&#32;0x54,&#32;0x58,&#32;0x20,&#32;0x31,&#32;0x31,&#32;0xBB,&#32;0x0D,&#32;0x0A,&#32;0x1A,&#32;0x0A&#32;};</emphasis>
494 
495 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;ktx_identifier[12]&#32;=&#32;{&#32;0xAB,&#32;<emphasis role="charliteral">&apos;K&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;T&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,&#32;0xBB,&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>,&#32;0x1A,&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;};
496 
497 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;image&#32;header</emphasis>
498 &#32;&#32;&#32;&#32;memcpy(header.id,&#32;ktx_identifier,&#32;12);&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;1.1&#32;signature</emphasis>
499 &#32;&#32;&#32;&#32;header.endianness&#32;=&#32;0;
500 &#32;&#32;&#32;&#32;header.gl_type&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Obtained&#32;from&#32;format</emphasis>
501 &#32;&#32;&#32;&#32;header.gl_type_size&#32;=&#32;1;
502 &#32;&#32;&#32;&#32;header.gl_format&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Obtained&#32;from&#32;format</emphasis>
503 &#32;&#32;&#32;&#32;header.gl_internal_format&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Obtained&#32;from&#32;format</emphasis>
504 &#32;&#32;&#32;&#32;header.gl_base_internal_format&#32;=&#32;0;
505 &#32;&#32;&#32;&#32;header.width&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
506 &#32;&#32;&#32;&#32;header.height&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
507 &#32;&#32;&#32;&#32;header.depth&#32;=&#32;0;
508 &#32;&#32;&#32;&#32;header.elements&#32;=&#32;0;
509 &#32;&#32;&#32;&#32;header.faces&#32;=&#32;1;
510 &#32;&#32;&#32;&#32;header.mipmap_levels&#32;=&#32;mipmaps;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;was&#32;0,&#32;it&#32;means&#32;mipmaps&#32;should&#32;be&#32;generated&#32;on&#32;loading&#32;(not&#32;for&#32;compressed&#32;formats)</emphasis>
511 &#32;&#32;&#32;&#32;header.key_value_data_size&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;extra&#32;data&#32;after&#32;the&#32;header</emphasis>
512 
513 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2rlgl_8h_1ada225b8313802f9927d1327759ca0fb7">rlGetGlTextureFormats</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;&amp;header.gl_internal_format,&#32;&amp;header.gl_format,&#32;&amp;header.gl_type);&#32;&#32;&#32;<emphasis role="comment">//&#32;rlgl&#32;module&#32;function</emphasis>
514 &#32;&#32;&#32;&#32;header.gl_base_internal_format&#32;=&#32;header.gl_format;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KTX&#32;1.1&#32;only</emphasis>
515 
516 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;We&#32;can&#32;save&#32;into&#32;a&#32;.ktx&#32;all&#32;PixelFormats&#32;supported&#32;by&#32;raylib,&#32;including&#32;compressed&#32;formats&#32;like&#32;DXT,&#32;ETC&#32;or&#32;ASTC</emphasis>
517 
518 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header.gl_format&#32;==&#32;-1)&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;GL&#32;format&#32;not&#32;supported&#32;for&#32;KTX&#32;export&#32;(%i)&quot;</emphasis>,&#32;header.gl_format);
519 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
520 &#32;&#32;&#32;&#32;{
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(file_data_ptr,&#32;&amp;header,&#32;<emphasis role="keyword">sizeof</emphasis>(ktx_header));
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(ktx_header);
523 
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;temp_width&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;temp_height&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_offset&#32;=&#32;0;
527 
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Save&#32;all&#32;mipmaps&#32;data</emphasis>
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;mipmaps;&#32;i++)
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;get_pixel_data_size(temp_width,&#32;temp_height,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>);
532 
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(file_data_ptr,&#32;&amp;data_size,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>));
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(file_data_ptr&#32;+&#32;4,&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;data_offset,&#32;data_size);
535 
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp_width&#32;/=&#32;2;
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp_height&#32;/=&#32;2;
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data_offset&#32;+=&#32;data_size;
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;(4&#32;+&#32;data_size);
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
541 &#32;&#32;&#32;&#32;}
542 
543 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Save&#32;file&#32;data&#32;to&#32;file</emphasis>
544 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;success&#32;=&#32;<emphasis role="keyword">false</emphasis>;
545 &#32;&#32;&#32;&#32;FILE&#32;*<link linkend="_namespaceversion_1aee8dac8d4699e20bfc999959504928c0">file</link>&#32;=&#32;fopen(file_name,&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>);
546 
547 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
548 &#32;&#32;&#32;&#32;{
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;int)fwrite(file_data,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>),&#32;data_size,&#32;<link linkend="_namespaceversion_1aee8dac8d4699e20bfc999959504928c0">file</link>);
550 
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;==&#32;0)&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;FILEIO:&#32;[%s]&#32;Failed&#32;to&#32;write&#32;file&quot;</emphasis>,&#32;file_name);
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;!=&#32;data_size)&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;FILEIO:&#32;[%s]&#32;File&#32;partially&#32;written&quot;</emphasis>,&#32;file_name);
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;LOG(<emphasis role="stringliteral">&quot;INFO:&#32;FILEIO:&#32;[%s]&#32;File&#32;saved&#32;successfully&quot;</emphasis>,&#32;file_name);
554 
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;fclose(file);
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;0)&#32;success&#32;=&#32;<emphasis role="keyword">true</emphasis>;
557 &#32;&#32;&#32;&#32;}
558 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;FILEIO:&#32;[%s]&#32;Failed&#32;to&#32;open&#32;file&quot;</emphasis>,&#32;file_name);
559 
560 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a03a13a7f3f469e41bd011391e533e79c">RL_FREE</link>(file_data);&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Free&#32;file&#32;data&#32;buffer</emphasis>
561 
562 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;all&#32;data&#32;has&#32;been&#32;written&#32;correctly&#32;to&#32;file,&#32;success&#32;=&#32;1</emphasis>
563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success;
564 }
565 <emphasis role="preprocessor">#endif</emphasis>
566 
567 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_SUPPORT_PVR)</emphasis>
568 <emphasis role="comment">//&#32;Loading&#32;PVR&#32;image&#32;data&#32;(uncompressed&#32;or&#32;PVRT&#32;compression)</emphasis>
569 <emphasis role="comment">//&#32;NOTE:&#32;PVR&#32;v2&#32;not&#32;supported,&#32;use&#32;PVR&#32;v3&#32;instead</emphasis>
570 <emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1ab11fb2977c0815a8c950c888114dfa87">rl_load_pvr_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips)
571 {
572 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*image_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Image&#32;data&#32;pointer</emphasis>
573 
574 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data_ptr&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)file_data;
575 
576 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;extension:</emphasis>
577 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_IMG_texture_compression_pvrtc</emphasis>
578 
579 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Supported&#32;tokens&#32;(defined&#32;by&#32;extensions)</emphasis>
580 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8C00</emphasis>
581 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG&#32;&#32;&#32;&#32;&#32;&#32;0x8C02</emphasis>
582 
583 <emphasis role="preprocessor">#if&#32;0&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Not&#32;used...</emphasis>
584 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PVR&#32;file&#32;v2&#32;Header&#32;(52&#32;bytes)</emphasis>
585 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;headerLength;
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;numMipmaps;
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>;
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;dataLength;
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp;
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitmaskRed;
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitmaskGreen;
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitmaskBlue;
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitmaskAlpha;
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;pvrTag;
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;numSurfs;
599 &#32;&#32;&#32;&#32;}&#32;PVRHeaderV2;
600 <emphasis role="preprocessor">#endif</emphasis>
601 
602 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PVR&#32;file&#32;v3&#32;Header&#32;(52&#32;bytes)</emphasis>
603 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;After&#32;it&#32;could&#32;be&#32;metadata&#32;(15&#32;bytes?)</emphasis>
604 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>[4];
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>;
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;channels[4];&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pixelFormat&#32;high&#32;part</emphasis>
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;channel_depth[4];&#32;&#32;<emphasis role="comment">//&#32;pixelFormat&#32;low&#32;part</emphasis>
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;color_space;
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channel_type;
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_surfaces;
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_faces;
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_mipmaps;
617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;metadata_size;
618 &#32;&#32;&#32;&#32;}&#32;pvr_header;
619 
620 <emphasis role="preprocessor">#if&#32;0&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Not&#32;used...</emphasis>
621 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Metadata&#32;(usually&#32;15&#32;bytes)</emphasis>
622 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;devFOURCC;
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;key;
625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Not&#32;used?</emphasis>
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Not&#32;used?</emphasis>
627 &#32;&#32;&#32;&#32;}&#32;PVRMetadata;
628 <emphasis role="preprocessor">#endif</emphasis>
629 
630 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file_data_ptr&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
631 &#32;&#32;&#32;&#32;{
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;PVR&#32;image&#32;version</emphasis>
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;pvr_version&#32;=&#32;file_data_ptr[0];
634 
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Load&#32;different&#32;PVR&#32;data&#32;formats</emphasis>
636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pvr_version&#32;==&#32;0x50)
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pvr_header&#32;*header&#32;=&#32;(pvr_header&#32;*)file_data_ptr;
639 
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;id[0]&#32;!=&#32;<emphasis role="charliteral">&apos;P&apos;</emphasis>)&#32;||&#32;(header-&gt;id[1]&#32;!=&#32;<emphasis role="charliteral">&apos;V&apos;</emphasis>)&#32;||&#32;(header-&gt;id[2]&#32;!=&#32;<emphasis role="charliteral">&apos;R&apos;</emphasis>)&#32;||&#32;(header-&gt;id[3]&#32;!=&#32;3))
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;PVR&#32;file&#32;data&#32;not&#32;valid&quot;</emphasis>);
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(pvr_header);&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;header</emphasis>
647 
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;header-&gt;width;
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;header-&gt;height;
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mips&#32;=&#32;header-&gt;num_mipmaps;
651 
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;data&#32;format</emphasis>
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((header-&gt;channels[0]&#32;==&#32;<emphasis role="charliteral">&apos;l&apos;</emphasis>)&#32;&amp;&amp;&#32;(header-&gt;channels[1]&#32;==&#32;0))&#32;&amp;&amp;&#32;(header-&gt;channel_depth[0]&#32;==&#32;8))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa6f622e4d3bbf0b8cf7df3bda27132aec">PIXELFORMAT_UNCOMPRESSED_GRAYSCALE</link>;
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((header-&gt;channels[0]&#32;==&#32;<emphasis role="charliteral">&apos;l&apos;</emphasis>)&#32;&amp;&amp;&#32;(header-&gt;channels[1]&#32;==&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>))&#32;&amp;&amp;&#32;((header-&gt;channel_depth[0]&#32;==&#32;8)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[1]&#32;==&#32;8)))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aafcc06ba67c5dfe03d10a4ace208b1eca">PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA</link>;
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;channels[0]&#32;==&#32;<emphasis role="charliteral">&apos;r&apos;</emphasis>)&#32;&amp;&amp;&#32;(header-&gt;channels[1]&#32;==&#32;<emphasis role="charliteral">&apos;g&apos;</emphasis>)&#32;&amp;&amp;&#32;(header-&gt;channels[2]&#32;==&#32;<emphasis role="charliteral">&apos;b&apos;</emphasis>))
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;channels[3]&#32;==&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>)
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;channel_depth[0]&#32;==&#32;5)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[1]&#32;==&#32;5)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[2]&#32;==&#32;5)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[3]&#32;==&#32;1))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac898083344dfc92ead7ffd0e8fba44ad">PIXELFORMAT_UNCOMPRESSED_R5G5B5A1</link>;
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;channel_depth[0]&#32;==&#32;4)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[1]&#32;==&#32;4)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[2]&#32;==&#32;4)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[3]&#32;==&#32;4))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aae56d1ffdb89875b45aca64366aed51c1">PIXELFORMAT_UNCOMPRESSED_R4G4B4A4</link>;
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;channel_depth[0]&#32;==&#32;8)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[1]&#32;==&#32;8)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[2]&#32;==&#32;8)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[3]&#32;==&#32;8))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac4b38b1d326ca4e5137df5b8bca7ab16">PIXELFORMAT_UNCOMPRESSED_R8G8B8A8</link>;
662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;channels[3]&#32;==&#32;0)
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;channel_depth[0]&#32;==&#32;5)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[1]&#32;==&#32;6)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[2]&#32;==&#32;5))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa910a723dce9a250bca696a58f3f4dca">PIXELFORMAT_UNCOMPRESSED_R5G6B5</link>;
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;channel_depth[0]&#32;==&#32;8)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[1]&#32;==&#32;8)&#32;&amp;&amp;&#32;(header-&gt;channel_depth[2]&#32;==&#32;8))&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa47eebb90754eb3427891c9f1d8286b85">PIXELFORMAT_UNCOMPRESSED_R8G8B8</link>;
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;channels[0]&#32;==&#32;2)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aab2a727d62b4c663fae7e82510e4005ad">PIXELFORMAT_COMPRESSED_PVRT_RGB</link>;
670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(header-&gt;channels[0]&#32;==&#32;3)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaf515e5d18aa121d06da1dfea6c1fe035">PIXELFORMAT_COMPRESSED_PVRT_RGBA</link>;
671 
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;header-&gt;metadata_size;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;meta&#32;data&#32;header</emphasis>
673 
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;data&#32;size&#32;(depends&#32;on&#32;format)</emphasis>
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp&#32;=&#32;0;
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>)
677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa6f622e4d3bbf0b8cf7df3bda27132aec">PIXELFORMAT_UNCOMPRESSED_GRAYSCALE</link>:&#32;bpp&#32;=&#32;8;&#32;<emphasis role="keywordflow">break</emphasis>;
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aafcc06ba67c5dfe03d10a4ace208b1eca">PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA</link>:
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac898083344dfc92ead7ffd0e8fba44ad">PIXELFORMAT_UNCOMPRESSED_R5G5B5A1</link>:
681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa910a723dce9a250bca696a58f3f4dca">PIXELFORMAT_UNCOMPRESSED_R5G6B5</link>:
682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aae56d1ffdb89875b45aca64366aed51c1">PIXELFORMAT_UNCOMPRESSED_R4G4B4A4</link>:&#32;bpp&#32;=&#32;16;&#32;<emphasis role="keywordflow">break</emphasis>;
683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac4b38b1d326ca4e5137df5b8bca7ab16">PIXELFORMAT_UNCOMPRESSED_R8G8B8A8</link>:&#32;bpp&#32;=&#32;32;&#32;<emphasis role="keywordflow">break</emphasis>;
684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa47eebb90754eb3427891c9f1d8286b85">PIXELFORMAT_UNCOMPRESSED_R8G8B8</link>:&#32;bpp&#32;=&#32;24;&#32;<emphasis role="keywordflow">break</emphasis>;
685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aab2a727d62b4c663fae7e82510e4005ad">PIXELFORMAT_COMPRESSED_PVRT_RGB</link>:
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaf515e5d18aa121d06da1dfea6c1fe035">PIXELFORMAT_COMPRESSED_PVRT_RGBA</link>:&#32;bpp&#32;=&#32;4;&#32;<emphasis role="keywordflow">break</emphasis>;
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
689 
690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;(*width)*(*height)*bpp/8;&#32;&#32;<emphasis role="comment">//&#32;Total&#32;data&#32;size&#32;in&#32;bytes</emphasis>
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>));
692 
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pvr_version&#32;==&#32;52)&#32;LOG(<emphasis role="stringliteral">&quot;INFO:&#32;IMAGE:&#32;PVRv2&#32;format&#32;not&#32;supported,&#32;update&#32;your&#32;files&#32;to&#32;PVRv3&quot;</emphasis>);
697 &#32;&#32;&#32;&#32;}
698 
699 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image_data;
700 }
701 <emphasis role="preprocessor">#endif</emphasis>
702 
703 <emphasis role="preprocessor">#if&#32;defined(RL_GPUTEX_SUPPORT_ASTC)</emphasis>
704 <emphasis role="comment">//&#32;Load&#32;ASTC&#32;compressed&#32;image&#32;data&#32;(ASTC&#32;compression)</emphasis>
705 <emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2external_2rl__gputex_8h_1a5cf1e3d21c9655073d78eac2b8b7d842">rl_load_astc_from_memory</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mips)
706 {
707 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*image_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Image&#32;data&#32;pointer</emphasis>
708 
709 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_data_ptr&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)file_data;
710 
711 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;extensions:</emphasis>
712 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_KHR_texture_compression_astc_hdr</emphasis>
713 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_KHR_texture_compression_astc_ldr</emphasis>
714 
715 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Supported&#32;tokens&#32;(defined&#32;by&#32;extensions)</emphasis>
716 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA_ASTC_4x4_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x93b0</emphasis>
717 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GL_COMPRESSED_RGBA_ASTC_8x8_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x93b7</emphasis>
718 
719 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ASTC&#32;file&#32;Header&#32;(16&#32;bytes)</emphasis>
720 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>[4];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Signature:&#32;0x13&#32;0xAB&#32;0xA1&#32;0x5C</emphasis>
722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;blockX;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Block&#32;X&#32;dimensions</emphasis>
723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;blockY;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Block&#32;Y&#32;dimensions</emphasis>
724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;blockZ;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Block&#32;Z&#32;dimensions&#32;(1&#32;for&#32;2D&#32;images)</emphasis>
725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>[3];&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;void&#32;*width&#32;in&#32;pixels&#32;(24bit&#32;value)</emphasis>
726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>[3];&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;void&#32;*height&#32;in&#32;pixels&#32;(24bit&#32;value)</emphasis>
727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_namespacelength">length</link>[3];&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;void&#32;*Z-size&#32;(1&#32;for&#32;2D&#32;images)</emphasis>
728 &#32;&#32;&#32;&#32;}&#32;astc_header;
729 
730 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file_data_ptr&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
731 &#32;&#32;&#32;&#32;{
732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astc_header&#32;*header&#32;=&#32;(astc_header&#32;*)file_data_ptr;
733 
734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((header-&gt;id[3]&#32;!=&#32;0x5c)&#32;||&#32;(header-&gt;id[2]&#32;!=&#32;0xa1)&#32;||&#32;(header-&gt;id[1]&#32;!=&#32;0xab)&#32;||&#32;(header-&gt;id[0]&#32;!=&#32;0x13))
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;ASTC&#32;file&#32;data&#32;not&#32;valid&quot;</emphasis>);
737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_data_ptr&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(astc_header);&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;header</emphasis>
741 
742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Assuming&#32;Little&#32;Endian&#32;(could&#32;it&#32;be&#32;wrong?)</emphasis>
743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;0x00000000&#32;|&#32;((int)header-&gt;width[2]&#32;&lt;&lt;&#32;16)&#32;|&#32;((int)header-&gt;width[1]&#32;&lt;&lt;&#32;8)&#32;|&#32;((int)header-&gt;width[0]);
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;0x00000000&#32;|&#32;((int)header-&gt;height[2]&#32;&lt;&lt;&#32;16)&#32;|&#32;((int)header-&gt;height[1]&#32;&lt;&lt;&#32;8)&#32;|&#32;((int)header-&gt;height[0]);
745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mips&#32;=&#32;1;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;ASTC&#32;format&#32;only&#32;contains&#32;one&#32;mipmap&#32;level</emphasis>
746 
747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Each&#32;block&#32;is&#32;always&#32;stored&#32;in&#32;128bit&#32;so&#32;we&#32;can&#32;calculate&#32;the&#32;bpp</emphasis>
748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp&#32;=&#32;128/(header-&gt;blockX*header-&gt;blockY);
749 
750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Currently&#32;we&#32;only&#32;support&#32;2&#32;blocks&#32;configurations:&#32;4x4&#32;and&#32;8x8</emphasis>
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bpp&#32;==&#32;8)&#32;||&#32;(bpp&#32;==&#32;2))
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;(*width)*(*height)*bpp/8;&#32;&#32;<emphasis role="comment">//&#32;Data&#32;size&#32;in&#32;bytes</emphasis>
754 
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a8b0977bdc30a0c9f1f7412cbfa473ccf">RL_MALLOC</link>(data_size*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>));
756 
757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(image_data,&#32;file_data_ptr,&#32;data_size);
758 
759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bpp&#32;==&#32;8)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa1e223c5895642f38e03f14c23716fe69">PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA</link>;
760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bpp&#32;==&#32;2)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa01f874a5acd9abd29a26b1efbaf43ef">PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA</link>;
761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;LOG(<emphasis role="stringliteral">&quot;WARNING:&#32;IMAGE:&#32;ASTC&#32;block&#32;size&#32;configuration&#32;not&#32;supported&quot;</emphasis>);
763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
764 &#32;&#32;&#32;&#32;}
765 
766 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image_data;
767 }
768 <emphasis role="preprocessor">#endif</emphasis>
769 
770 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
771 <emphasis role="comment">//&#32;Module&#32;Internal&#32;Functions&#32;Definition</emphasis>
772 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
773 <emphasis role="comment">//&#32;Get&#32;pixel&#32;data&#32;size&#32;in&#32;bytes&#32;for&#32;certain&#32;pixel&#32;format</emphasis>
774 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;get_pixel_data_size(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>)
775 {
776 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_size&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Size&#32;in&#32;bytes</emphasis>
777 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Bits&#32;per&#32;pixel</emphasis>
778 
779 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>)
780 &#32;&#32;&#32;&#32;{
781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa6f622e4d3bbf0b8cf7df3bda27132aec">PIXELFORMAT_UNCOMPRESSED_GRAYSCALE</link>:&#32;bpp&#32;=&#32;8;&#32;<emphasis role="keywordflow">break</emphasis>;
782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aafcc06ba67c5dfe03d10a4ace208b1eca">PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA</link>:
783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa910a723dce9a250bca696a58f3f4dca">PIXELFORMAT_UNCOMPRESSED_R5G6B5</link>:
784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac898083344dfc92ead7ffd0e8fba44ad">PIXELFORMAT_UNCOMPRESSED_R5G5B5A1</link>:
785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aae56d1ffdb89875b45aca64366aed51c1">PIXELFORMAT_UNCOMPRESSED_R4G4B4A4</link>:&#32;bpp&#32;=&#32;16;&#32;<emphasis role="keywordflow">break</emphasis>;
786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aac4b38b1d326ca4e5137df5b8bca7ab16">PIXELFORMAT_UNCOMPRESSED_R8G8B8A8</link>:&#32;bpp&#32;=&#32;32;&#32;<emphasis role="keywordflow">break</emphasis>;
787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa47eebb90754eb3427891c9f1d8286b85">PIXELFORMAT_UNCOMPRESSED_R8G8B8</link>:&#32;bpp&#32;=&#32;24;&#32;<emphasis role="keywordflow">break</emphasis>;
788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa23e16c1c8855ade5a76abd9764a8e023">PIXELFORMAT_UNCOMPRESSED_R32</link>:&#32;bpp&#32;=&#32;32;&#32;<emphasis role="keywordflow">break</emphasis>;
789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa65107e6d1f2253be78b09304454165be">PIXELFORMAT_UNCOMPRESSED_R32G32B32</link>:&#32;bpp&#32;=&#32;32*3;&#32;<emphasis role="keywordflow">break</emphasis>;
790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa484c5fd78dbe584a8031982dcad7a45e">PIXELFORMAT_UNCOMPRESSED_R32G32B32A32</link>:&#32;bpp&#32;=&#32;32*4;&#32;<emphasis role="keywordflow">break</emphasis>;
791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa2d3d75d29bf303ced4a246bd5feedf2d">PIXELFORMAT_COMPRESSED_DXT1_RGB</link>:
792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaac7fbeeddc217b465ee4e4309f26d436">PIXELFORMAT_COMPRESSED_DXT1_RGBA</link>:
793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa06d2d6c2a84a389cfa12bf3d415becbb">PIXELFORMAT_COMPRESSED_ETC1_RGB</link>:
794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aab6d5fd22d2416f647bf6f4e14393579d">PIXELFORMAT_COMPRESSED_ETC2_RGB</link>:
795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aab2a727d62b4c663fae7e82510e4005ad">PIXELFORMAT_COMPRESSED_PVRT_RGB</link>:
796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaf515e5d18aa121d06da1dfea6c1fe035">PIXELFORMAT_COMPRESSED_PVRT_RGBA</link>:&#32;bpp&#32;=&#32;4;&#32;<emphasis role="keywordflow">break</emphasis>;
797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa65fc2b80964f40782d2f5e510673b000">PIXELFORMAT_COMPRESSED_DXT3_RGBA</link>:
798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa8cc4c27376f8eefe0523a427ef71755d">PIXELFORMAT_COMPRESSED_DXT5_RGBA</link>:
799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa90b23e99afb4ccd292a0f2eada42f1e4">PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA</link>:
800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa1e223c5895642f38e03f14c23716fe69">PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA</link>:&#32;bpp&#32;=&#32;8;&#32;<emphasis role="keywordflow">break</emphasis>;
801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa01f874a5acd9abd29a26b1efbaf43ef">PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA</link>:&#32;bpp&#32;=&#32;2;&#32;<emphasis role="keywordflow">break</emphasis>;
802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
803 &#32;&#32;&#32;&#32;}
804 
805 &#32;&#32;&#32;&#32;data_size&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>*bpp/8;&#32;&#32;<emphasis role="comment">//&#32;Total&#32;data&#32;size&#32;in&#32;bytes</emphasis>
806 
807 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Most&#32;compressed&#32;formats&#32;works&#32;on&#32;4x4&#32;blocks,</emphasis>
808 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;texture&#32;is&#32;smaller,&#32;minimum&#32;dataSize&#32;is&#32;8&#32;or&#32;16</emphasis>
809 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;&lt;&#32;4)&#32;&amp;&amp;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;&lt;&#32;4))
810 &#32;&#32;&#32;&#32;{
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa2d3d75d29bf303ced4a246bd5feedf2d">PIXELFORMAT_COMPRESSED_DXT1_RGB</link>)&#32;&amp;&amp;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa65fc2b80964f40782d2f5e510673b000">PIXELFORMAT_COMPRESSED_DXT3_RGBA</link>))&#32;data_size&#32;=&#32;8;
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aa65fc2b80964f40782d2f5e510673b000">PIXELFORMAT_COMPRESSED_DXT3_RGBA</link>)&#32;&amp;&amp;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_8h_1a60883d4958a60b91661e97027a85072aaa01f874a5acd9abd29a26b1efbaf43ef">PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA</link>))&#32;data_size&#32;=&#32;16;
813 &#32;&#32;&#32;&#32;}
814 
815 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data_size;
816 }
817 
818 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RL_GPUTEX_IMPLEMENTATION</emphasis>
</programlisting></section>
