<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___pseudo_sequence" xml:lang="en-US">
<title>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary></indexterm>
<para>

<para>Sequence that conceptually consists of multiple copies of the same element. The copies are not stored explicitly, of course. </para>
 
</para>
<para>
<computeroutput>#include &lt;base.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> &gt; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link></para>
</listitem>
            <listitem><para>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> &gt; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link></para>
</listitem>
            <listitem><para>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt; _Tp, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> &gt; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab0fca6cced869a995c28f541f7116f3f">_PseudoSequence</link> (const _Tp &amp;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link> <link linkend="__classes_2lib_2include_2mmintrin_8h_1a7cee916b88079d74fdaf7856046abea3">__count</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a51b9740eb71084e18aec7d254cab3e30">begin</link> () const</para>

<para>Begin iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a8a0b6be67bf27256c7701980673775b6">end</link> () const</para>

<para>End iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab0fca6cced869a995c28f541f7116f3f">_PseudoSequence</link> (const _Tp &amp;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link> <link linkend="__classes_2lib_2include_2mmintrin_8h_1a7cee916b88079d74fdaf7856046abea3">__count</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a51b9740eb71084e18aec7d254cab3e30">begin</link> () const</para>

<para>Begin iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a8a0b6be67bf27256c7701980673775b6">end</link> () const</para>

<para>End iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab0fca6cced869a995c28f541f7116f3f">_PseudoSequence</link> (const _Tp &amp;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link> <link linkend="__classes_2lib_2include_2mmintrin_8h_1a7cee916b88079d74fdaf7856046abea3">__count</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a51b9740eb71084e18aec7d254cab3e30">begin</link> () const</para>

<para>Begin iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a8a0b6be67bf27256c7701980673775b6">end</link> () const</para>

<para>End iterator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Tp, typename _DifferenceTp&gt;<?linebreak?>class __gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</title></simplesect>

<para>Sequence that conceptually consists of multiple copies of the same element. The copies are not stored explicitly, of course. </para>



<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>_Tp</entry><entry>
<para>Sequence _M_value type. </para>
</entry>
                            </row>
                            <row>
<entry>_DifferenceTp</entry><entry>
<para>Sequence difference type. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919"/><section>
    <title>_DifferenceType<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919"/><section>
    <title>_DifferenceType<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919"/><section>
    <title>_DifferenceType<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef _DifferenceTp <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679"/><section>
    <title>iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt;_Tp, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&gt; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679"/><section>
    <title>iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt;_Tp, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&gt; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679"/><section>
    <title>iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">_PseudoSequenceIterator</link>&lt;_Tp, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&gt; <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::iterator</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1ab0fca6cced869a995c28f541f7116f3f"/><section>
    <title>_PseudoSequence()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_PseudoSequence</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_PseudoSequence</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::_PseudoSequence (const _Tp &amp; __val, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link> __count)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__val</entry><entry>
<para>Element of the sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__count</entry><entry>
<para>Number of (virtual) copies. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1ab0fca6cced869a995c28f541f7116f3f"/><section>
    <title>_PseudoSequence()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_PseudoSequence</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_PseudoSequence</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::_PseudoSequence (const _Tp &amp; __val, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link> __count)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__val</entry><entry>
<para>Element of the sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__count</entry><entry>
<para>Number of (virtual) copies. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1ab0fca6cced869a995c28f541f7116f3f"/><section>
    <title>_PseudoSequence()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_PseudoSequence</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>_PseudoSequence</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::_PseudoSequence (const _Tp &amp; __val, <link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1ab30f04392d4a64baa98faf8c5ef7b919">_DifferenceType</link> __count)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__val</entry><entry>
<para>Element of the sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__count</entry><entry>
<para>Number of (virtual) copies. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a51b9740eb71084e18aec7d254cab3e30"/><section>
    <title>begin()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::begin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Begin iterator. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___pseudo_sequence_a51b9740eb71084e18aec7d254cab3e30_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a51b9740eb71084e18aec7d254cab3e30"/><section>
    <title>begin()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::begin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Begin iterator. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a51b9740eb71084e18aec7d254cab3e30"/><section>
    <title>begin()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;::begin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Begin iterator. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a8a0b6be67bf27256c7701980673775b6"/><section>
    <title>end()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>End iterator. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___pseudo_sequence_a8a0b6be67bf27256c7701980673775b6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a8a0b6be67bf27256c7701980673775b6"/><section>
    <title>end()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>End iterator. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___pseudo_sequence_1a8a0b6be67bf27256c7701980673775b6"/><section>
    <title>end()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _DifferenceTp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___pseudo_sequence_1a6ce7f98eeec9f890db4f8185e5e40679">iterator</link> <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>&lt; _Tp, _DifferenceTp &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>End iterator. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link></section>
</section>
