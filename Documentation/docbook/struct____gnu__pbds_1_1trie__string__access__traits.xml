<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__pbds_1_1trie__string__access__traits" xml:lang="en-US">
<title>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;trie_policy.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d">reverse</link> = Reverse
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d">min_e_val</link> = Min_E_Val
, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4">max_e_val</link> = Max_E_Val
, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> = max_e_val - min_e_val + 1
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d">reverse</link> = Reverse
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d">min_e_val</link> = Min_E_Val
, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4">max_e_val</link> = Max_E_Val
, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> = max_e_val - min_e_val + 1
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d">reverse</link> = Reverse
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d">min_e_val</link> = Min_E_Val
, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4">max_e_val</link> = Max_E_Val
, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> = max_e_val - min_e_val + 1
 }</para>
</listitem>
            <listitem><para>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link></para>
</listitem>
            <listitem><para>typedef String <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link> &gt;::const_reference <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef detail::__conditional_type&lt; Reverse, typenameString::const_reverse_iterator, typenameString::const_iterator &gt;::__type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link></para>

<para>Element const iterator type. </para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> &gt;::value_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link></para>

<para>Element type. </para>
</listitem>
            <listitem><para>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link></para>
</listitem>
            <listitem><para>typedef String <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link> &gt;::const_reference <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef detail::__conditional_type&lt; Reverse, typenameString::const_reverse_iterator, typenameString::const_iterator &gt;::__type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link></para>

<para>Element const iterator type. </para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> &gt;::value_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link></para>

<para>Element type. </para>
</listitem>
            <listitem><para>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link></para>
</listitem>
            <listitem><para>typedef String <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link> &gt;::const_reference <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef detail::__conditional_type&lt; Reverse, typenameString::const_reverse_iterator, typenameString::const_iterator &gt;::__type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link></para>

<para>Element const iterator type. </para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> &gt;::value_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link></para>

<para>Element type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0">PB_DS_STATIC_ASSERT</link> (min_max_size, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> &gt;=2)</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0">PB_DS_STATIC_ASSERT</link> (min_max_size, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> &gt;=2)</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0">PB_DS_STATIC_ASSERT</link> (min_max_size, <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> &gt;=2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520">begin</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7">end</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3">e_pos</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link> e)</para>

<para>Maps an element to a position. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520">begin</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7">end</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3">e_pos</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link> e)</para>

<para>Maps an element to a position. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520">begin</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7">end</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3">e_pos</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link> e)</para>

<para>Maps an element to a position. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename String = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc = std::allocator&lt;char&gt;&gt;<?linebreak?>struct __gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</title></simplesect>

<para>Element access traits for string types.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>String</entry><entry>
<para>String type. </para>
</entry>
                            </row>
                            <row>
<entry>Min_E_Val</entry><entry>
<para>Minimal element value. </para>
</entry>
                            </row>
                            <row>
<entry>Max_E_Val</entry><entry>
<para>Maximum element value. </para>
</entry>
                            </row>
                            <row>
<entry>Reverse</entry><entry>
<para>Reverse iteration should be used. Default: false. </para>
</entry>
                            </row>
                            <row>
<entry>_Alloc</entry><entry>
<para>Allocator type. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1"/><section>
    <title>const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef detail::__conditional_type&lt;Reverse,typenameString::const_reverse_iterator,typenameString::const_iterator&gt;::__type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::const_iterator</computeroutput></para><para>

<para>Element const iterator type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1"/><section>
    <title>const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef detail::__conditional_type&lt;Reverse,typenameString::const_reverse_iterator,typenameString::const_iterator&gt;::__type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::const_iterator</computeroutput></para><para>

<para>Element const iterator type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1"/><section>
    <title>const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef detail::__conditional_type&lt;Reverse,typenameString::const_reverse_iterator,typenameString::const_iterator&gt;::__type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::const_iterator</computeroutput></para><para>

<para>Element const iterator type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1"/><section>
    <title>e_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>e_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>e_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>&gt;::value_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::e_type</computeroutput></para><para>

<para>Element type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1"/><section>
    <title>e_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>e_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>e_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>&gt;::value_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::e_type</computeroutput></para><para>

<para>Element type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1"/><section>
    <title>e_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>e_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>e_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>&gt;::value_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::e_type</computeroutput></para><para>

<para>Element type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98"/><section>
    <title>key_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link>&gt;::const_reference <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98"/><section>
    <title>key_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link>&gt;::const_reference <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98"/><section>
    <title>key_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link>&gt;::const_reference <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5"/><section>
    <title>key_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef String <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5"/><section>
    <title>key_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef String <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5"/><section>
    <title>key_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef String <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::size_type</computeroutput></para></section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>reverse</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>reverse</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d"/>reverse</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>min_e_val</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>min_e_val</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d"/>min_e_val</entry><entry></entry></row><row><entry><indexterm><primary>max_e_val</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>max_e_val</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4"/>max_e_val</entry><entry></entry></row><row><entry><indexterm><primary>max_size</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>max_size</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9"/>max_size</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a2626e7346e7a4db8191d38a119ed70f7"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>reverse</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>reverse</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d"/>reverse</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a2f6e0f026f08bca3472cf8534dce508a"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>min_e_val</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>min_e_val</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d"/>min_e_val</entry><entry></entry></row><row><entry><indexterm><primary>max_e_val</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>max_e_val</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4"/>max_e_val</entry><entry></entry></row><row><entry><indexterm><primary>max_size</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>max_size</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9"/>max_size</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1af8c1da92be9ea8b4b45067daaca91516"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>reverse</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>reverse</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d"/>reverse</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a05127f4781652bf3bd270a41efd42b2e"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>min_e_val</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>min_e_val</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d"/>min_e_val</entry><entry></entry></row><row><entry><indexterm><primary>max_e_val</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>max_e_val</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4"/>max_e_val</entry><entry></entry></row><row><entry><indexterm><primary>max_size</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>max_size</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9"/>max_size</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520"/><section>
    <title>begin()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::begin (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a const_iterator to the first element of key_const_reference agumnet. </para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520"/><section>
    <title>begin()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::begin (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a const_iterator to the first element of key_const_reference agumnet. </para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520"/><section>
    <title>begin()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::begin (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a const_iterator to the first element of key_const_reference agumnet. </para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3"/><section>
    <title>e_pos()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>e_pos</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>e_pos</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::e_pos (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link> e)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maps an element to a position. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3"/><section>
    <title>e_pos()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>e_pos</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>e_pos</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::e_pos (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link> e)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maps an element to a position. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3"/><section>
    <title>e_pos()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>e_pos</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>e_pos</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::e_pos (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link> e)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maps an element to a position. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7"/><section>
    <title>end()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a const_iterator to the after-last element of key_const_reference argument. </para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7"/><section>
    <title>end()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a const_iterator to the after-last element of key_const_reference argument. </para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7"/><section>
    <title>end()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> (<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a const_iterator to the after-last element of key_const_reference argument. </para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0"/><section>
    <title>PB_DS_STATIC_ASSERT()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>PB_DS_STATIC_ASSERT</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>PB_DS_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::PB_DS_STATIC_ASSERT (min_max_size , <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> &gt;= 2)</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0"/><section>
    <title>PB_DS_STATIC_ASSERT()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>PB_DS_STATIC_ASSERT</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>PB_DS_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::PB_DS_STATIC_ASSERT (min_max_size , <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> &gt;= 2)</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0"/><section>
    <title>PB_DS_STATIC_ASSERT()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>PB_DS_STATIC_ASSERT</primary><secondary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</primary><secondary>PB_DS_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__min, typename String::value_type Max_E_Val = detail::__numeric_traits&lt;typename String::value_type&gt;::__max, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Reverse = false, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits</link>&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;::PB_DS_STATIC_ASSERT (min_max_size , <link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link> &gt;= 2)</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link></section>
</section>
