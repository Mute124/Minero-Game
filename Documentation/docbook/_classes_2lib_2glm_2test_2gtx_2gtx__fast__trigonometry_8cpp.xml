<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/test/gtx/gtx_fast_trigonometry.cpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/test/gtx/gtx_fast_trigonometry.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;glm/ext/scalar_ulp.hpp&gt;<?linebreak?>#include &lt;glm/gtc/type_precision.hpp&gt;<?linebreak?>#include &lt;glm/gtx/fast_trigonometry.hpp&gt;<?linebreak?>#include &lt;glm/gtx/integer.hpp&gt;<?linebreak?>#include &lt;glm/gtx/common.hpp&gt;<?linebreak?>#include &lt;glm/gtc/constants.hpp&gt;<?linebreak?>#include &lt;glm/gtc/vec1.hpp&gt;<?linebreak?>#include &lt;glm/trigonometric.hpp&gt;<?linebreak?>#include &lt;cmath&gt;<?linebreak?>#include &lt;ctime&gt;<?linebreak?>#include &lt;cstdio&gt;<?linebreak?>#include &lt;vector&gt;<?linebreak?></programlisting>Include dependency graph for gtx_fast_trigonometry.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacefast_cos">fastCos</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefast_sin">fastSin</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefast_tan">fastTan</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefast_acos">fastAcos</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefast_asin">fastAsin</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefast_atan">fastAtan</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetaylor_cos">taylorCos</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacetaylor2">taylor2</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp_1abd75661fe7969e19439052a5f69ba5d1">GLM_ENABLE_EXPERIMENTAL</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_namespacefast_cos_1a1b8f2656534204f78b9386ae70600db0">fastCos::perf</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> NextFloat)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefast_sin_1a0be873926a570e1860280df57dc4dca8">fastSin::perf</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> NextFloat)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefast_tan_1a2a8cca77bc0fe966a5acfca81efe9836">fastTan::perf</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> NextFloat)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefast_acos_1a908a2b8bbfca509845ad129ea09f72a4">fastAcos::perf</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> NextFloat)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefast_asin_1aba0772781bc2e23f1b17520fb1f9194e">fastAsin::perf</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> NextFloat)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefast_atan_1aea0c225c947e5b160ef61158c3c915c3">fastAtan::perf</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> NextFloat)</para>
</listitem>
            <listitem><para>template&lt;length_t L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1a96fe680df613afd482613b738240d616">taylorCos::taylorSeriesNewCos</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;length_t L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1abb8ab8422f3ecf66b470943af3518606">taylorCos::taylorSeriesNewCos6</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">glm::length_t</link> L, qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, float, Q &gt; <link linkend="_namespacetaylor_cos_1a6db7e70257ba3c3e917253f6094f550f">taylorCos::fastAbs</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, float, Q &gt; <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">glm::length_t</link> L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1a89cae290a30da458dc6519b54667090e">taylorCos::fastCosNew</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1ad53ccfba6926650a66c61b7fc5cd5337">taylorCos::perf_fastCosNew</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>template&lt;length_t L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1a5bd08d6501677ac36831bfed11b94f76">taylorCos::deterministic_fmod</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>template&lt;length_t L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1ae49fd4e38545052c2337ab61782d0496">taylorCos::fastCosDeterminisctic</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1af77b46d5ed70a13af7fbf14b65da13da">taylorCos::perf_fastCosDeterminisctic</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>template&lt;length_t L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1a1ffc27bc27c85966fbd4d8961ab41a11">taylorCos::taylorSeriesRefCos</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;length_t L, typename T , qualifier Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_namespacetaylor_cos_1aeead27278219034cc8968181784d8da8">taylorCos::fastRefCos</link> (<link linkend="_structglm_1_1vec">glm::vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1adfc0b43ede1438eaf27b4395a035634a">taylorCos::perf_fastCosRef</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1a7c4a42f593e1930e81813c57d7a2aa2e">taylorCos::perf_fastCosOld</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1abb05ca758e532e1916c62e7b37608f16">taylorCos::perf_cos</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1aa719b0f9bc9631823140e178c4eeb82b">taylorCos::perf</link> (std::size_t const Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor_cos_1a032a4864bc3c991d4ee0694d640976dd">taylorCos::test</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_namespacetaylor2_1ad90010e9166631e81a7c4d9e6d023ecb">taylor2::taylorCosA</link> (float <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_namespacetaylor2_1a4bc03d2720daa1907f5a194894334a3c">taylor2::taylorCosB</link> (float <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_namespacetaylor2_1a1cc84540271ec4e0b7c018a53dff8e56">taylor2::taylorCosC</link> (float <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor2_1a1746987736bc8791a5243b23d62090a4">taylor2::perf_taylorCosA</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor2_1a51f7e5f8baba5d7882d7fd1fa97e2c1f">taylor2::perf_taylorCosB</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor2_1a449d58afcda7783778105cfb88504d5e">taylor2::perf_taylorCosC</link> (float Begin, float End, std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacetaylor2_1a9b989b2fda56371a8e1d9dd49cff01ae">taylor2::perf</link> (std::size_t Samples)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group__core__vector_1ga233f0e8f1aecf686e67c5c39316c4da8">glm::vec4</link> const <link linkend="_namespacetaylor_cos_1a971967845162fdd274df739c5acf56b3">taylorCos::AngleShift</link> (0.0f, <link linkend="_group__gtc__constants_1ga0c36b41d462e45641faf7d7938948bac">glm::half_pi</link>&lt; float &gt;(), <link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">glm::pi</link>&lt; float &gt;(), <link linkend="_group__gtc__constants_1gae94950df74b0ce382b1fc1d978ef7394">glm::three_over_two_pi</link>&lt; float &gt;())</para>
</listitem>
            <listitem><para><link linkend="_group__core__vector_1ga233f0e8f1aecf686e67c5c39316c4da8">glm::vec4</link> const <link linkend="_namespacetaylor2_1a0e0cb74b0f9211022cb693712e9fa7ac">taylor2::AngleShift</link> (0.0f, <link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">glm::pi</link>&lt; float &gt;() *0.5<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>, <link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">glm::pi</link>&lt; float &gt;() *1.0f, <link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">glm::pi</link>&lt; float &gt;() *1.5<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp_1abd75661fe7969e19439052a5f69ba5d1"/><section>
    <title>GLM_ENABLE_EXPERIMENTAL</title>
<indexterm><primary>GLM_ENABLE_EXPERIMENTAL</primary><secondary>gtx_fast_trigonometry.cpp</secondary></indexterm>
<indexterm><primary>gtx_fast_trigonometry.cpp</primary><secondary>GLM_ENABLE_EXPERIMENTAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLM_ENABLE_EXPERIMENTAL</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>gtx_fast_trigonometry.cpp</secondary></indexterm>
<indexterm><primary>gtx_fast_trigonometry.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2glm_2test_2gtx_2gtx__fast__trigonometry_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
