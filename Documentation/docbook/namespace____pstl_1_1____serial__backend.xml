<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace____pstl_1_1____serial__backend" xml:lang="en-US">
<title>__pstl::__serial_backend Namespace Reference</title>
<indexterm><primary>__pstl::__serial_backend</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__buffer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____serial__backend_1ad26f66dc44e9e078ac541a8ad970e430">__cancel_execution</link> ()</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Fp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____serial__backend_1a7b29884f96aa341a9aef7a49c30b791c">__parallel_for</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, _Fp __f)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Value , class _Index , typename _RealBody , typename _Reduction &gt; </para><para>_Value <link linkend="_namespace____pstl_1_1____serial__backend_1aefef58c69ef58ea71ec138cee0b3c48f">__parallel_reduce</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, const _Value &amp;__identity, const _RealBody &amp;__real_body, const _Reduction &amp;)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _UnaryOp , class _Tp , class _BinaryOp , class _Reduce &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____serial__backend_1ae9bc699a1b5f95fc02f9c205f3825a6d">__parallel_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, _UnaryOp, _Tp __init, _BinaryOp, _Reduce __reduce)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _Index , typename _Tp , typename _Rp , typename _Cp , typename _Sp , typename _Ap &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____serial__backend_1a2c149651747da4086bcbff590144ce8e">__parallel_strict_scan</link> (_ExecutionPolicy &amp;&amp;, _Index __n, _Tp __initial, _Rp __reduce, _Cp __combine, _Sp __scan, _Ap __apex)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _UnaryOp , class _Tp , class _BinaryOp , class _Reduce , class _Scan &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____serial__backend_1afa10c5a90382b71edc23a934a828e7db">__parallel_transform_scan</link> (_ExecutionPolicy &amp;&amp;, _Index __n, _UnaryOp, _Tp __init, _BinaryOp, _Reduce, _Scan __scan)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator , typename _Compare , typename _LeafSort &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____serial__backend_1a1d19b13972acbafa2554b1fb8b812914">__parallel_stable_sort</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _LeafSort __leaf_sort, std::size_t=0)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____serial__backend_1adde34d3d43f7f72f8463f67d115f3e9d">__parallel_merge</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _RandomAccessIterator3 __outit, _Compare __comp, _LeafMerge __leaf_merge)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _F1 , typename _F2 &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____serial__backend_1a1aa84b929d0e1a58cd793a31fe44d3a8">__parallel_invoke</link> (_ExecutionPolicy &amp;&amp;, _F1 &amp;&amp;__f1, _F2 &amp;&amp;__f2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1ad26f66dc44e9e078ac541a8ad970e430"/><section>
    <title>__cancel_execution()</title>
<indexterm><primary>__cancel_execution</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__cancel_execution</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__serial_backend::__cancel_execution ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1a7b29884f96aa341a9aef7a49c30b791c"/><section>
    <title>__parallel_for()</title>
<indexterm><primary>__parallel_for</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_for</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Index , class _Fp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__serial_backend::__parallel_for (_ExecutionPolicy &amp;&amp; , _Index __first, _Index __last, _Fp __f)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1a1aa84b929d0e1a58cd793a31fe44d3a8"/><section>
    <title>__parallel_invoke()</title>
<indexterm><primary>__parallel_invoke</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_invoke</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _F1 , typename _F2 &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__serial_backend::__parallel_invoke (_ExecutionPolicy &amp;&amp; , _F1 &amp;&amp; __f1, _F2 &amp;&amp; __f2)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1adde34d3d43f7f72f8463f67d115f3e9d"/><section>
    <title>__parallel_merge()</title>
<indexterm><primary>__parallel_merge</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_merge</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__serial_backend::__parallel_merge (_ExecutionPolicy &amp;&amp; , _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _RandomAccessIterator3 __outit, _Compare __comp, _LeafMerge __leaf_merge)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1aefef58c69ef58ea71ec138cee0b3c48f"/><section>
    <title>__parallel_reduce()</title>
<indexterm><primary>__parallel_reduce</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_reduce</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Value , class _Index , typename _RealBody , typename _Reduction &gt; </computeroutput><para><computeroutput>_Value __pstl::__serial_backend::__parallel_reduce (_ExecutionPolicy &amp;&amp; , _Index __first, _Index __last, const _Value &amp; __identity, const _RealBody &amp; __real_body, const _Reduction &amp; )</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1a1d19b13972acbafa2554b1fb8b812914"/><section>
    <title>__parallel_stable_sort()</title>
<indexterm><primary>__parallel_stable_sort</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_stable_sort</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator , typename _Compare , typename _LeafSort &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__serial_backend::__parallel_stable_sort (_ExecutionPolicy &amp;&amp; , _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _LeafSort __leaf_sort, std::size_t  = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1a2c149651747da4086bcbff590144ce8e"/><section>
    <title>__parallel_strict_scan()</title>
<indexterm><primary>__parallel_strict_scan</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_strict_scan</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _Index , typename _Tp , typename _Rp , typename _Cp , typename _Sp , typename _Ap &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__serial_backend::__parallel_strict_scan (_ExecutionPolicy &amp;&amp; , _Index __n, _Tp __initial, _Rp __reduce, _Cp __combine, _Sp __scan, _Ap __apex)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1ae9bc699a1b5f95fc02f9c205f3825a6d"/><section>
    <title>__parallel_transform_reduce()</title>
<indexterm><primary>__parallel_transform_reduce</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_transform_reduce</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Index , class _UnaryOp , class _Tp , class _BinaryOp , class _Reduce &gt; </computeroutput><para><computeroutput>_Tp __pstl::__serial_backend::__parallel_transform_reduce (_ExecutionPolicy &amp;&amp; , _Index __first, _Index __last, _UnaryOp , _Tp __init, _BinaryOp , _Reduce __reduce)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____serial__backend_1afa10c5a90382b71edc23a934a828e7db"/><section>
    <title>__parallel_transform_scan()</title>
<indexterm><primary>__parallel_transform_scan</primary><secondary>__pstl::__serial_backend</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend</primary><secondary>__parallel_transform_scan</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Index , class _UnaryOp , class _Tp , class _BinaryOp , class _Reduce , class _Scan &gt; </computeroutput><para><computeroutput>_Tp __pstl::__serial_backend::__parallel_transform_scan (_ExecutionPolicy &amp;&amp; , _Index __n, _UnaryOp , _Tp __init, _BinaryOp , _Reduce , _Scan __scan)</computeroutput></para></section>
</section>
</section>
