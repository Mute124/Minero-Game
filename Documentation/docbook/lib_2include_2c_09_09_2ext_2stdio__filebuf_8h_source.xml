<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2stdio__filebuf_8h_source" xml:lang="en-US">
<title>stdio_filebuf.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/stdio_filebuf.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;File&#32;descriptor&#32;layer&#32;for&#32;filebuf&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2002-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
29 <emphasis role="preprocessor">#ifndef&#32;_STDIO_FILEBUF_H</emphasis>
30 <emphasis role="preprocessor">#define&#32;_STDIO_FILEBUF_H&#32;1</emphasis>
31 
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
33 
34 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
35 
36 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
37 {
38 _GLIBCXX_BEGIN_NAMESPACE_VERSION
39 
49 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&#32;=&#32;std::<emphasis role="keywordtype">char</emphasis>_traits&lt;_CharT&gt;&#32;&gt;
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>stdio_filebuf&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;std::basic_filebuf&lt;_CharT,&#32;_Traits&gt;
51 &#32;&#32;&#32;&#32;{
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
53 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Types:</emphasis>
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_CharT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;char_type;
55 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Traits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type;
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::int_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_type;
57 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::pos_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos_type;
58 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::off_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;off_type;
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::size_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>;
60 
61 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
65 &#32;&#32;&#32;&#32;&#32;&#32;stdio_filebuf()&#32;:&#32;std::basic_filebuf&lt;_CharT,&#32;_Traits&gt;()&#32;{}
66 
77 &#32;&#32;&#32;&#32;&#32;&#32;stdio_filebuf(<emphasis role="keywordtype">int</emphasis>&#32;__fd,&#32;std::ios_base::openmode&#32;__mode,
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__size&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2os__defines_8h_1a154122833d8ce8a608144a12d2fcedae">_GLIBCXX_BUFSIZ</link>));
79 
90 &#32;&#32;&#32;&#32;&#32;&#32;stdio_filebuf(std::__c_file*&#32;__f,&#32;std::ios_base::openmode&#32;__mode,
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__size&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2os__defines_8h_1a154122833d8ce8a608144a12d2fcedae">_GLIBCXX_BUFSIZ</link>));
92 
97 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;~stdio_filebuf();
99 
100 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;stdio_filebuf(stdio_filebuf&amp;&amp;)&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
102 &#32;&#32;&#32;&#32;&#32;&#32;stdio_filebuf&amp;&#32;operator=(stdio_filebuf&amp;&amp;)&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;swap(stdio_filebuf&amp;&#32;__fb)
106 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;std::basic_filebuf&lt;_CharT,&#32;_Traits&gt;::swap(__fb);&#32;}
107 <emphasis role="preprocessor">#endif</emphasis>
108 
117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;fd()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_file.fd();&#32;}
119 
127 &#32;&#32;&#32;&#32;&#32;&#32;std::__c_file*
128 &#32;&#32;&#32;&#32;&#32;&#32;file()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_file.file();&#32;}
129 &#32;&#32;&#32;&#32;};
130 
131 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
132 &#32;&#32;&#32;&#32;stdio_filebuf&lt;_CharT,&#32;_Traits&gt;::~stdio_filebuf()
133 &#32;&#32;&#32;&#32;{&#32;}
134 
135 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
136 &#32;&#32;&#32;&#32;stdio_filebuf&lt;_CharT,&#32;_Traits&gt;::
137 &#32;&#32;&#32;&#32;stdio_filebuf(<emphasis role="keywordtype">int</emphasis>&#32;__fd,&#32;std::ios_base::openmode&#32;__mode,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__size)
138 &#32;&#32;&#32;&#32;{
139 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_file.sys_open(__fd,&#32;__mode);
140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;is_open())
141 &#32;&#32;&#32;&#32;{
142 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_mode&#32;=&#32;__mode;
143 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_buf_size&#32;=&#32;__size;
144 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_allocate_internal_buffer();
145 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_reading&#32;=&#32;<emphasis role="keyword">false</emphasis>;
146 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_writing&#32;=&#32;<emphasis role="keyword">false</emphasis>;
147 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_set_buffer(-1);
148 &#32;&#32;&#32;&#32;}
149 &#32;&#32;&#32;&#32;}
150 
151 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
152 &#32;&#32;&#32;&#32;stdio_filebuf&lt;_CharT,&#32;_Traits&gt;::
153 &#32;&#32;&#32;&#32;stdio_filebuf(std::__c_file*&#32;__f,&#32;std::ios_base::openmode&#32;__mode,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__size)
155 &#32;&#32;&#32;&#32;{
156 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_file.sys_open(__f,&#32;__mode);
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;is_open())
158 &#32;&#32;&#32;&#32;{
159 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_mode&#32;=&#32;__mode;
160 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_buf_size&#32;=&#32;__size;
161 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_allocate_internal_buffer();
162 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_reading&#32;=&#32;<emphasis role="keyword">false</emphasis>;
163 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_writing&#32;=&#32;<emphasis role="keyword">false</emphasis>;
164 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_set_buffer(-1);
165 &#32;&#32;&#32;&#32;}
166 &#32;&#32;&#32;&#32;}
167 
168 _GLIBCXX_END_NAMESPACE_VERSION
169 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
170 
171 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
