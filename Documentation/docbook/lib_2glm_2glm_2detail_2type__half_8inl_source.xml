<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2detail_2type__half_8inl_source" xml:lang="en-US">
<title>type_half.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/detail/type_half.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
2 <emphasis role="keyword">namespace&#32;</emphasis>detail
3 {
4 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1a61efe122333bc00e81c57e0927bfdfb3">overflow</link>()
5 &#32;&#32;&#32;&#32;{
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;1e10;
7 
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;++i)
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;&#32;<emphasis role="comment">//&#32;this&#32;will&#32;overflow&#32;before&#32;the&#32;for&#32;loop&#32;terminates</emphasis>
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
11 &#32;&#32;&#32;&#32;}
12 
13 &#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>uif32
14 &#32;&#32;&#32;&#32;{
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1a185c257ac32e21727191ba7e52d97e3e">uif32</link>()&#32;:
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1aff30e33bee63b0b9d1e930f0814da872">i</link>(0)
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
18 
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1a0d6e08c93b3d52c01e45864ff689c426">uif32</link>(<emphasis role="keywordtype">float</emphasis>&#32;f_)&#32;:
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>(f_)
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
22 
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1ac81750c318a12c5211a6237e79286370">uif32</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_)&#32;:
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1aff30e33bee63b0b9d1e930f0814da872">i</link>(i_)
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
26 
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1a5f697f84c5a8ec72c2f3a4f705f5bde8">f</link>;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_unionglm_1_1detail_1_1uif32_1aff30e33bee63b0b9d1e930f0814da872">i</link>;
29 &#32;&#32;&#32;&#32;};
30 
31 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1a8e4719d94d99ee1e625496e04317272b">toFloat32</link>(<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>&#32;<link linkend="_classvalue">value</link>)
32 &#32;&#32;&#32;&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;(<link linkend="_classvalue">value</link>&#32;&gt;&gt;&#32;15)&#32;&amp;&#32;0x00000001;
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;(<link linkend="_classvalue">value</link>&#32;&gt;&gt;&#32;10)&#32;&amp;&#32;0x0000001f;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;&#32;<link linkend="_classvalue">value</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&#32;0x000003ff;
36 
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;==&#32;0)
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m&#32;==&#32;0)
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Plus&#32;or&#32;minus&#32;zero</emphasis>
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_unionglm_1_1detail_1_1uif32">detail::uif32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.<link linkend="_unionglm_1_1detail_1_1uif32_1aff30e33bee63b0b9d1e930f0814da872">i</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(s&#32;&lt;&lt;&#32;31);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.f;
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Denormalized&#32;number&#32;--&#32;renormalize&#32;it</emphasis>
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(!(m&#32;&amp;&#32;0x00000400))
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;&lt;&lt;=&#32;1;
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;-=&#32;&#32;1;
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;+=&#32;1;
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;&amp;=&#32;~0x00000400;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;==&#32;31)
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m&#32;==&#32;0)
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Positive&#32;or&#32;negative&#32;infinity</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
72 
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uif32&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>((s&#32;&lt;&lt;&#32;31)&#32;|&#32;0x7f800000);
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.f;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Nan&#32;--&#32;preserve&#32;sign&#32;and&#32;significand&#32;bits</emphasis>
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uif32&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>((s&#32;&lt;&lt;&#32;31)&#32;|&#32;0x7f800000&#32;|&#32;(m&#32;&lt;&lt;&#32;13));
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.f;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normalized&#32;number</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;+&#32;(127&#32;-&#32;15);
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;m&#32;&lt;&lt;&#32;13;
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assemble&#32;s,&#32;e&#32;and&#32;m.</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uif32&#32;Result;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result.i&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>((s&#32;&lt;&lt;&#32;31)&#32;|&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&lt;&lt;&#32;23)&#32;|&#32;m);
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result.f;
103 &#32;&#32;&#32;&#32;}
104 
105 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>&#32;<link linkend="_namespaceglm_1_1detail_1ac16321696a34b41c55f941b319d50652">toFloat16</link>(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)
106 &#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uif32&#32;Entry;
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Entry.f&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(Entry.i);
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Our&#32;floating&#32;point&#32;number,&#32;f,&#32;is&#32;represented&#32;by&#32;the&#32;bit</emphasis>
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pattern&#32;in&#32;integer&#32;i.&#32;&#32;Disassemble&#32;that&#32;bit&#32;pattern&#32;into</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;sign,&#32;s,&#32;the&#32;exponent,&#32;e,&#32;and&#32;the&#32;significand,&#32;m.</emphasis>
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Shift&#32;s&#32;into&#32;the&#32;position&#32;where&#32;it&#32;will&#32;go&#32;in&#32;the</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;resulting&#32;half&#32;number.</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adjust&#32;e,&#32;accounting&#32;for&#32;the&#32;different&#32;exponent&#32;bias</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;of&#32;float&#32;and&#32;half&#32;(127&#32;versus&#32;15).</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;&#32;(i&#32;&gt;&gt;&#32;16)&#32;&amp;&#32;0x00008000;
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;((i&#32;&gt;&gt;&#32;23)&#32;&amp;&#32;0x000000ff)&#32;-&#32;(127&#32;-&#32;15);
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;&#32;&#32;i&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&#32;0x007fffff;
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;reassemble&#32;s,&#32;e&#32;and&#32;m&#32;into&#32;a&#32;half:</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&lt;=&#32;0)
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&lt;&#32;-10)
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;E&#32;is&#32;less&#32;than&#32;-10.&#32;&#32;The&#32;absolute&#32;value&#32;of&#32;f&#32;is</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;less&#32;than&#32;half_MIN&#32;(f&#32;may&#32;be&#32;a&#32;small&#32;normalized</emphasis>
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;float,&#32;a&#32;denormalized&#32;float&#32;or&#32;a&#32;zero).</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;convert&#32;f&#32;to&#32;a&#32;half&#32;zero.</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
140 
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>(s);
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
143 
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;E&#32;is&#32;between&#32;-10&#32;and&#32;0.&#32;&#32;F&#32;is&#32;a&#32;normalized&#32;float,</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;whose&#32;magnitude&#32;is&#32;less&#32;than&#32;__half_NRM_MIN.</emphasis>
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;convert&#32;f&#32;to&#32;a&#32;denormalized&#32;half.</emphasis>
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
150 
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(m&#32;|&#32;0x00800000)&#32;&gt;&gt;&#32;(1&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>);
152 
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Round&#32;to&#32;nearest,&#32;round&#32;&quot;0.5&quot;&#32;up.</emphasis>
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rounding&#32;may&#32;cause&#32;the&#32;significand&#32;to&#32;overflow&#32;and&#32;make</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;our&#32;number&#32;normalized.&#32;&#32;Because&#32;of&#32;the&#32;way&#32;a&#32;half&apos;s&#32;bits</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;are&#32;laid&#32;out,&#32;we&#32;don&apos;t&#32;have&#32;to&#32;treat&#32;this&#32;case&#32;separately;</emphasis>
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;code&#32;below&#32;will&#32;handle&#32;it&#32;correctly.</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m&#32;&amp;&#32;0x00001000)
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;+=&#32;0x00002000;
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assemble&#32;the&#32;half&#32;from&#32;s,&#32;e&#32;(zero)&#32;and&#32;m.</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
168 
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>(s&#32;|&#32;(m&#32;&gt;&gt;&#32;13));
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;==&#32;0xff&#32;-&#32;(127&#32;-&#32;15))
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m&#32;==&#32;0)
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;F&#32;is&#32;an&#32;infinity;&#32;convert&#32;f&#32;to&#32;a&#32;half</emphasis>
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;infinity&#32;with&#32;the&#32;same&#32;sign&#32;as&#32;f.</emphasis>
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
179 
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>(s&#32;|&#32;0x7c00);
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;F&#32;is&#32;a&#32;NAN;&#32;we&#32;produce&#32;a&#32;half&#32;NAN&#32;that&#32;preserves</emphasis>
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;sign&#32;bit&#32;and&#32;the&#32;10&#32;leftmost&#32;bits&#32;of&#32;the</emphasis>
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;significand&#32;of&#32;f,&#32;with&#32;one&#32;exception:&#32;If&#32;the&#32;10</emphasis>
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;leftmost&#32;bits&#32;are&#32;all&#32;zero,&#32;the&#32;NAN&#32;would&#32;turn</emphasis>
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;into&#32;an&#32;infinity,&#32;so&#32;we&#32;have&#32;to&#32;set&#32;at&#32;least&#32;one</emphasis>
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bit&#32;in&#32;the&#32;significand.</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
192 
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;&gt;&gt;=&#32;13;
194 
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>(s&#32;|&#32;0x7c00&#32;|&#32;m&#32;|&#32;(m&#32;==&#32;0));
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;E&#32;is&#32;greater&#32;than&#32;zero.&#32;&#32;F&#32;is&#32;a&#32;normalized&#32;float.</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;try&#32;to&#32;convert&#32;f&#32;to&#32;a&#32;normalized&#32;half.</emphasis>
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
204 
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Round&#32;to&#32;nearest,&#32;round&#32;&quot;0.5&quot;&#32;up</emphasis>
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
208 
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m&#32;&amp;&#32;&#32;0x00001000)
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;+=&#32;0x00002000;
212 
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m&#32;&amp;&#32;0x00800000)
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;&#32;0;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;overflow&#32;in&#32;significand,</emphasis>
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;+=&#32;1;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;adjust&#32;exponent</emphasis>
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
219 
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;exponent&#32;overflow</emphasis>
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
223 
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&gt;&#32;30)
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a61efe122333bc00e81c57e0927bfdfb3">overflow</link>();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cause&#32;a&#32;hardware&#32;floating&#32;point&#32;overflow;</emphasis>
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>(s&#32;|&#32;0x7c00);
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;this&#32;returns,&#32;the&#32;half&#32;becomes&#32;an</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;<emphasis role="comment">//&#32;infinity&#32;with&#32;the&#32;same&#32;sign&#32;as&#32;f.</emphasis>
231 
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assemble&#32;the&#32;half&#32;from&#32;s,&#32;e&#32;and&#32;m.</emphasis>
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
235 
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1aa2115f7dd38e14fea7ba9e95104120f3">hdata</link>(s&#32;|&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&lt;&lt;&#32;10)&#32;|&#32;(m&#32;&gt;&gt;&#32;13));
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
238 &#32;&#32;&#32;&#32;}
239 
240 }<emphasis role="comment">//namespace&#32;detail</emphasis>
241 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
