<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2_metal___block_8h_source" xml:lang="en-US">
<title>Metal_Block.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/Metal_Block.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&quot;lib/raylib.h&quot;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2_gameobj_8h">Gameobj.h</link>&quot;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__logman_8h">Logman.h</link>&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__monobehavior_8h">Monobehavior.h</link>&quot;</emphasis>
6 
7 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_metal___block">Metal_Block</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_game_object">GameObject</link>
8 {
9 <emphasis role="keyword">private</emphasis>:
10 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;m_position;
11 
12 &#32;&#32;&#32;&#32;<link linkend="_struct_model">Model</link>&#32;m_model;
13 
14 &#32;&#32;&#32;&#32;<link linkend="_struct_shader">Shader</link>&#32;m_shader;
15 &#32;&#32;&#32;&#32;<link linkend="_struct_shader">Shader</link>&#32;m_env_Cubemap&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a7fb4c1ab85e440b988781e7277a1ce5c">LoadShader</link>(<emphasis role="stringliteral">&quot;c:/Git/Minero/raylib/projects/VSCode/resources/cubemap.vs&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;c:/Git/Minero/raylib/projects/VSCode/resources/cubemap.fs&quot;</emphasis>);
16 
17 &#32;&#32;&#32;&#32;<link linkend="_struct_texture2_d">Texture2D</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>;
18 
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;
20 
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ShaderValue&#32;=&#32;7;&#32;<emphasis role="comment">//&#32;for&#32;the&#32;cubemap&#32;shader</emphasis>
22 
23 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_areGraphicsInitialized;
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_isShadersInitialized;
25 
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;initShaders()
27 &#32;&#32;&#32;&#32;{
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_isShadersInitialized)
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
30 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_isShadersInitialized&#32;=&#32;<emphasis role="keyword">true</emphasis>;
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_logman_1a2d9051169431912e6f95d150172590c0">Logman::CustomLog</link>(<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285a8f6fe15bfe15104da6d1b360194a5400">LOG_WARNING</link>,&#32;<emphasis role="stringliteral">&quot;Shaders&#32;for&#32;Metal&#32;blocks&#32;are&#32;already&#32;initialized!&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
37 &#32;&#32;&#32;&#32;}
38 
39 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeGraphics()
40 &#32;&#32;&#32;&#32;{
41 
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_areGraphicsInitialized)
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_logman_1a2d9051169431912e6f95d150172590c0">Logman::CustomLog</link>(<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285a8f6fe15bfe15104da6d1b360194a5400">LOG_WARNING</link>,&#32;<emphasis role="stringliteral">&quot;Graphics&#32;for&#32;a&#32;Metal_block&#32;instance&#32;is&#32;already&#32;initialized!&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
49 &#32;&#32;&#32;&#32;}
50 
51 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetShaders()
52 &#32;&#32;&#32;&#32;{
53 &#32;&#32;&#32;&#32;}
54 
55 <emphasis role="keyword">public</emphasis>:
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_metal___block_1a1c86e32c9668417af9bbcc7c087c16a2">GetId</link>()<emphasis role="keyword">&#32;const&#32;override</emphasis>
57 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;id;
59 &#32;&#32;&#32;&#32;}
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_metal___block_1a185e11a497e32fa334dc78c202221e18">onUpdate</link>()<emphasis role="keyword">&#32;override</emphasis>{
61 
62 &#32;&#32;&#32;&#32;};
63 
64 &#32;&#32;&#32;&#32;<link linkend="_class_metal___block_1a0efd0d8b89c291a3bd530502e3c40fc2">Metal_Block</link>(<link linkend="_struct_vector3">Vector3</link>&#32;Position,&#32;<link linkend="_struct_model">Model</link>&#32;model,&#32;<link linkend="_struct_shader">Shader</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a57b2a96adb1d51204909a82d861e395e">shader</link>)&#32;:&#32;m_position(Position),&#32;m_model(model),&#32;m_shader(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a57b2a96adb1d51204909a82d861e395e">shader</link>),&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>(<link linkend="_class_game_object_1a4cc6227274e96445bfd5626a1a966e02">RegisterObj</link>(this))
65 &#32;&#32;&#32;&#32;{
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_logman_1a2d9051169431912e6f95d150172590c0">Logman::CustomLog</link>(<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285a6e98ff471e3ce6c4ef2d75c37ee51837">LOG_INFO</link>,&#32;<emphasis role="stringliteral">&quot;Static&#32;variables&#32;in&#32;Metal&#32;Block&#32;class,&#32;Performing&#32;first&#32;time&#32;operations&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1ae5f5951ef8996ca3457dd14280d992ce">LoadTextureFromImage</link>(<link linkend="__classes_2lib_2raylib_8h_1ad6503cb62ad62c293f2f35bd41d76792">GenImageColor</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>.width,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>.height,&#32;<link linkend="__classes_2lib_2raylib_8h_1ae5f70677050eecd8909e0248e07b9e73">GRAY</link>));
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a4da279f6b8956198fb2aff6e85b9a1c1">GenTextureMipmaps</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>);
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1ad6c9f38091934927453b2e785146f692">SetTextureFilter</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>,&#32;<link linkend="__classes_2lib_2raylib_8h_1ac4b92e6b8c820ded95490092f8bfff74aebd48a98427a273a8a0c7105b417c65e">TEXTURE_FILTER_TRILINEAR</link>);
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a21bbf95bf98c3314a6d21640465179a9">SetTextureWrap</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>,&#32;<link linkend="__classes_2lib_2raylib_8h_1ae99e0f833ccd2a830a871dba98d1c5bfa087013353728f294163e66c28091e609">TEXTURE_WRAP_CLAMP</link>);
71 
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_model.<link linkend="_struct_model_1ab79d1760e684bff4b731f3711b3c47fe">materials</link>[0].<link linkend="_struct_material_1a3d2c91a8d97bc80fad93f37936509bce">maps</link>[<link linkend="__classes_2lib_2raylib_8h_1a4161f7a12efce73263ae0c106454ceb4a78f523ed4d919d8a124461775a54f6f6">MATERIAL_MAP_CUBEMAP</link>].<link linkend="_struct_material_map_1ad89d26ae9df4ba66257f698935563560">texture</link>&#32;=&#32;<link linkend="_class_global_1_1_mesh_tools_1abd961f7c3e9be62f8c27ab77518498ae">Global::MeshTools::GenTextureCubemap</link>(m_env_Cubemap,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>.width&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>.height,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>.format);
73 
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_model.<link linkend="_struct_model_1ab79d1760e684bff4b731f3711b3c47fe">materials</link>[0].<link linkend="_struct_material_1a3d2c91a8d97bc80fad93f37936509bce">maps</link>[<link linkend="__classes_2lib_2raylib_8h_1a4161f7a12efce73263ae0c106454ceb4ac9637a3f8e418bb0c79f16e66dfe9eac">MATERIAL_MAP_METALNESS</link>].<link linkend="_struct_material_map_1ad89d26ae9df4ba66257f698935563560">texture</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8f486379aef534669f4f06f515e7ce6c">texture</link>;
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_model.<link linkend="_struct_model_1ab79d1760e684bff4b731f3711b3c47fe">materials</link>[0].<link linkend="_struct_material_1a3d2c91a8d97bc80fad93f37936509bce">maps</link>[<link linkend="__classes_2lib_2raylib_8h_1a4161f7a12efce73263ae0c106454ceb4ac9637a3f8e418bb0c79f16e66dfe9eac">MATERIAL_MAP_METALNESS</link>].<link linkend="_struct_material_map_1a7b8084743275ee9cf897a4b74d976925">value</link>&#32;=&#32;10.0f;
76 
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;applying&#32;shader&#32;to&#32;model,</emphasis>
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;m_model.<link linkend="_struct_model_1ab79d1760e684bff4b731f3711b3c47fe">materials</link>[0].<link linkend="_struct_material_1a1a1e50dfb46cf79db10c67841f87d9c2">shader</link>&#32;=&#32;m_shader;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;m_model.<link linkend="_struct_model_1ab79d1760e684bff4b731f3711b3c47fe">materials</link>[1].<link linkend="_struct_material_1a1a1e50dfb46cf79db10c67841f87d9c2">shader</link>&#32;=&#32;m_env_Cubemap;
80 &#32;&#32;&#32;&#32;}
81 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_class_metal___block_1a8cc61bc05969faa267a65f3484ffaef5">GetPosition</link>()<emphasis role="keyword">&#32;override</emphasis>
82 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;m_position;
84 &#32;&#32;&#32;&#32;}
85 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_metal___block_1a37b0663f549600083085987c9eca0212">Draw</link>()<emphasis role="keyword">&#32;override</emphasis>
86 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1aa5550a8579e522a3532b466fe08727aa">DrawModel</link>(this-&gt;m_model,&#32;m_position,&#32;1.0f,&#32;<link linkend="__classes_2lib_2raylib_8h_1a87b537f5fa5c109d3c05c13d6b18f382">WHITE</link>);
89 &#32;&#32;&#32;&#32;}
90 
91 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_metal___block_1a297bb87f2b0782c5b263e8a7a5d02c48">GetType</link>()<emphasis role="keyword">&#32;const&#32;override</emphasis>
92 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
94 &#32;&#32;&#32;&#32;}
95 };
</programlisting></section>
