<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2stdint-gcc_8h_source" xml:lang="en-US">
<title>stdint-gcc.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/stdint-gcc.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2008-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="comment">/*</emphasis>
25 <emphasis role="comment">&#32;*&#32;ISO&#32;C&#32;Standard:&#32;&#32;7.18&#32;&#32;Integer&#32;types&#32;&#32;&lt;stdint.h&gt;</emphasis>
26 <emphasis role="comment">&#32;*/</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_GCC_STDINT_H</emphasis>
29 <emphasis role="preprocessor">#define&#32;_GCC_STDINT_H</emphasis>
30 
31 <emphasis role="comment">/*&#32;7.8.1.1&#32;Exact-width&#32;integer&#32;types&#32;*/</emphasis>
32 
33 <emphasis role="preprocessor">#ifdef&#32;__INT8_TYPE__</emphasis>
34 <emphasis role="keyword">typedef</emphasis>&#32;__INT8_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aef44329758059c91c76d334e8fc09700">int8_t</link>;
35 <emphasis role="preprocessor">#endif</emphasis>
36 <emphasis role="preprocessor">#ifdef&#32;__INT16_TYPE__</emphasis>
37 <emphasis role="keyword">typedef</emphasis>&#32;__INT16_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a269259c924dce846340ddbb810db2e3c">int16_t</link>;
38 <emphasis role="preprocessor">#endif</emphasis>
39 <emphasis role="preprocessor">#ifdef&#32;__INT32_TYPE__</emphasis>
40 <emphasis role="keyword">typedef</emphasis>&#32;__INT32_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>;
41 <emphasis role="preprocessor">#endif</emphasis>
42 <emphasis role="preprocessor">#ifdef&#32;__INT64_TYPE__</emphasis>
43 <emphasis role="keyword">typedef</emphasis>&#32;__INT64_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>;
44 <emphasis role="preprocessor">#endif</emphasis>
45 <emphasis role="preprocessor">#ifdef&#32;__UINT8_TYPE__</emphasis>
46 <emphasis role="keyword">typedef</emphasis>&#32;__UINT8_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>;
47 <emphasis role="preprocessor">#endif</emphasis>
48 <emphasis role="preprocessor">#ifdef&#32;__UINT16_TYPE__</emphasis>
49 <emphasis role="keyword">typedef</emphasis>&#32;__UINT16_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link>;
50 <emphasis role="preprocessor">#endif</emphasis>
51 <emphasis role="preprocessor">#ifdef&#32;__UINT32_TYPE__</emphasis>
52 <emphasis role="keyword">typedef</emphasis>&#32;__UINT32_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>;
53 <emphasis role="preprocessor">#endif</emphasis>
54 <emphasis role="preprocessor">#ifdef&#32;__UINT64_TYPE__</emphasis>
55 <emphasis role="keyword">typedef</emphasis>&#32;__UINT64_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>;
56 <emphasis role="preprocessor">#endif</emphasis>
57 
58 <emphasis role="comment">/*&#32;7.8.1.2&#32;Minimum-width&#32;integer&#32;types&#32;*/</emphasis>
59 
60 <emphasis role="keyword">typedef</emphasis>&#32;__INT_LEAST8_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1adb5f4bf8afa3bee9e4da1bb9daf4908d">int_least8_t</link>;
61 <emphasis role="keyword">typedef</emphasis>&#32;__INT_LEAST16_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a3a4bc1e426626e17f6a6e0f64decec56">int_least16_t</link>;
62 <emphasis role="keyword">typedef</emphasis>&#32;__INT_LEAST32_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a4462f62ae74ff8172526401354d2fc9b">int_least32_t</link>;
63 <emphasis role="keyword">typedef</emphasis>&#32;__INT_LEAST64_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a8a5003442318117c64d16d6f32f64f37">int_least64_t</link>;
64 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_LEAST8_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a61d44370ed65907c324edad5e8d34632">uint_least8_t</link>;
65 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_LEAST16_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a1a01d6a4e68e435471be2ae8db7e8fdc">uint_least16_t</link>;
66 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_LEAST32_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a678494ae5435d8904e7972c94618e774">uint_least32_t</link>;
67 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_LEAST64_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1aba0cb5638c172422eb4a7555a143fbbc">uint_least64_t</link>;
68 
69 <emphasis role="comment">/*&#32;7.8.1.3&#32;Fastest&#32;minimum-width&#32;integer&#32;types&#32;*/</emphasis>
70 
71 <emphasis role="keyword">typedef</emphasis>&#32;__INT_FAST8_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a98f573ff8187ff09c9594a3f2af7be0d">int_fast8_t</link>;
72 <emphasis role="keyword">typedef</emphasis>&#32;__INT_FAST16_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a888269be199d49b7f40006aaafa5a350">int_fast16_t</link>;
73 <emphasis role="keyword">typedef</emphasis>&#32;__INT_FAST32_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a530ba8ffc89f6393d2d0e2fb2db38b54">int_fast32_t</link>;
74 <emphasis role="keyword">typedef</emphasis>&#32;__INT_FAST64_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1abcdb0a9f6e7d139ad4f521ab8f4efdc0">int_fast64_t</link>;
75 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_FAST8_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a2464ed69ccd3fd2b3b4c93cb78f6fa20">uint_fast8_t</link>;
76 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_FAST16_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1aaabed6e034edb01c259c003894d7f7c8">uint_fast16_t</link>;
77 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_FAST32_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1aa44ff507c3d9a49e27fac64e9fadf062">uint_fast32_t</link>;
78 <emphasis role="keyword">typedef</emphasis>&#32;__UINT_FAST64_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a62c711f66c6d29c81429aeafdc4bc592">uint_fast64_t</link>;
79 
80 <emphasis role="comment">/*&#32;7.8.1.4&#32;Integer&#32;types&#32;capable&#32;of&#32;holding&#32;object&#32;pointers&#32;*/</emphasis>
81 
82 <emphasis role="preprocessor">#ifdef&#32;__INTPTR_TYPE__</emphasis>
83 <emphasis role="keyword">typedef</emphasis>&#32;__INTPTR_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link>;
84 <emphasis role="preprocessor">#endif</emphasis>
85 <emphasis role="preprocessor">#ifdef&#32;__UINTPTR_TYPE__</emphasis>
86 <emphasis role="keyword">typedef</emphasis>&#32;__UINTPTR_TYPE__&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link>;
87 <emphasis role="preprocessor">#endif</emphasis>
88 
89 <emphasis role="comment">/*&#32;7.8.1.5&#32;Greatest-width&#32;integer&#32;types&#32;*/</emphasis>
90 
91 <emphasis role="keyword">typedef</emphasis>&#32;__INTMAX_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1ae26fa513a7dfed63221f72d93de2a021">intmax_t</link>;
92 <emphasis role="keyword">typedef</emphasis>&#32;__UINTMAX_TYPE__&#32;<link linkend="__classes_2lib_2include_2stdint-gcc_8h_1a4e5632221b295f0fcdcb2233f3f60515">uintmax_t</link>;
93 
94 <emphasis role="preprocessor">#if&#32;(!defined&#32;__cplusplus&#32;||&#32;__cplusplus&#32;&gt;=&#32;201103L&#32;\</emphasis>
95 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;defined&#32;__STDC_LIMIT_MACROS)</emphasis>
96 
97 <emphasis role="comment">/*&#32;7.18.2&#32;Limits&#32;of&#32;specified-width&#32;integer&#32;types&#32;*/</emphasis>
98 
99 <emphasis role="preprocessor">#ifdef&#32;__INT8_MAX__</emphasis>
100 <emphasis role="preprocessor">#&#32;undef&#32;INT8_MAX</emphasis>
101 <emphasis role="preprocessor">#&#32;define&#32;INT8_MAX&#32;__INT8_MAX__</emphasis>
102 <emphasis role="preprocessor">#&#32;undef&#32;INT8_MIN</emphasis>
103 <emphasis role="preprocessor">#&#32;define&#32;INT8_MIN&#32;(-INT8_MAX&#32;-&#32;1)</emphasis>
104 <emphasis role="preprocessor">#endif</emphasis>
105 <emphasis role="preprocessor">#ifdef&#32;__UINT8_MAX__</emphasis>
106 <emphasis role="preprocessor">#&#32;undef&#32;UINT8_MAX</emphasis>
107 <emphasis role="preprocessor">#&#32;define&#32;UINT8_MAX&#32;__UINT8_MAX__</emphasis>
108 <emphasis role="preprocessor">#endif</emphasis>
109 <emphasis role="preprocessor">#ifdef&#32;__INT16_MAX__</emphasis>
110 <emphasis role="preprocessor">#&#32;undef&#32;INT16_MAX</emphasis>
111 <emphasis role="preprocessor">#&#32;define&#32;INT16_MAX&#32;__INT16_MAX__</emphasis>
112 <emphasis role="preprocessor">#&#32;undef&#32;INT16_MIN</emphasis>
113 <emphasis role="preprocessor">#&#32;define&#32;INT16_MIN&#32;(-INT16_MAX&#32;-&#32;1)</emphasis>
114 <emphasis role="preprocessor">#endif</emphasis>
115 <emphasis role="preprocessor">#ifdef&#32;__UINT16_MAX__</emphasis>
116 <emphasis role="preprocessor">#&#32;undef&#32;UINT16_MAX</emphasis>
117 <emphasis role="preprocessor">#&#32;define&#32;UINT16_MAX&#32;__UINT16_MAX__</emphasis>
118 <emphasis role="preprocessor">#endif</emphasis>
119 <emphasis role="preprocessor">#ifdef&#32;__INT32_MAX__</emphasis>
120 <emphasis role="preprocessor">#&#32;undef&#32;INT32_MAX</emphasis>
121 <emphasis role="preprocessor">#&#32;define&#32;INT32_MAX&#32;__INT32_MAX__</emphasis>
122 <emphasis role="preprocessor">#&#32;undef&#32;INT32_MIN</emphasis>
123 <emphasis role="preprocessor">#&#32;define&#32;INT32_MIN&#32;(-INT32_MAX&#32;-&#32;1)</emphasis>
124 <emphasis role="preprocessor">#endif</emphasis>
125 <emphasis role="preprocessor">#ifdef&#32;__UINT32_MAX__</emphasis>
126 <emphasis role="preprocessor">#&#32;undef&#32;UINT32_MAX</emphasis>
127 <emphasis role="preprocessor">#&#32;define&#32;UINT32_MAX&#32;__UINT32_MAX__</emphasis>
128 <emphasis role="preprocessor">#endif</emphasis>
129 <emphasis role="preprocessor">#ifdef&#32;__INT64_MAX__</emphasis>
130 <emphasis role="preprocessor">#&#32;undef&#32;INT64_MAX</emphasis>
131 <emphasis role="preprocessor">#&#32;define&#32;INT64_MAX&#32;__INT64_MAX__</emphasis>
132 <emphasis role="preprocessor">#&#32;undef&#32;INT64_MIN</emphasis>
133 <emphasis role="preprocessor">#&#32;define&#32;INT64_MIN&#32;(-INT64_MAX&#32;-&#32;1)</emphasis>
134 <emphasis role="preprocessor">#endif</emphasis>
135 <emphasis role="preprocessor">#ifdef&#32;__UINT64_MAX__</emphasis>
136 <emphasis role="preprocessor">#&#32;undef&#32;UINT64_MAX</emphasis>
137 <emphasis role="preprocessor">#&#32;define&#32;UINT64_MAX&#32;__UINT64_MAX__</emphasis>
138 <emphasis role="preprocessor">#endif</emphasis>
139 
140 <emphasis role="preprocessor">#undef&#32;INT_LEAST8_MAX</emphasis>
141 <emphasis role="preprocessor">#define&#32;INT_LEAST8_MAX&#32;__INT_LEAST8_MAX__</emphasis>
142 <emphasis role="preprocessor">#undef&#32;INT_LEAST8_MIN</emphasis>
143 <emphasis role="preprocessor">#define&#32;INT_LEAST8_MIN&#32;(-INT_LEAST8_MAX&#32;-&#32;1)</emphasis>
144 <emphasis role="preprocessor">#undef&#32;UINT_LEAST8_MAX</emphasis>
145 <emphasis role="preprocessor">#define&#32;UINT_LEAST8_MAX&#32;__UINT_LEAST8_MAX__</emphasis>
146 <emphasis role="preprocessor">#undef&#32;INT_LEAST16_MAX</emphasis>
147 <emphasis role="preprocessor">#define&#32;INT_LEAST16_MAX&#32;__INT_LEAST16_MAX__</emphasis>
148 <emphasis role="preprocessor">#undef&#32;INT_LEAST16_MIN</emphasis>
149 <emphasis role="preprocessor">#define&#32;INT_LEAST16_MIN&#32;(-INT_LEAST16_MAX&#32;-&#32;1)</emphasis>
150 <emphasis role="preprocessor">#undef&#32;UINT_LEAST16_MAX</emphasis>
151 <emphasis role="preprocessor">#define&#32;UINT_LEAST16_MAX&#32;__UINT_LEAST16_MAX__</emphasis>
152 <emphasis role="preprocessor">#undef&#32;INT_LEAST32_MAX</emphasis>
153 <emphasis role="preprocessor">#define&#32;INT_LEAST32_MAX&#32;__INT_LEAST32_MAX__</emphasis>
154 <emphasis role="preprocessor">#undef&#32;INT_LEAST32_MIN</emphasis>
155 <emphasis role="preprocessor">#define&#32;INT_LEAST32_MIN&#32;(-INT_LEAST32_MAX&#32;-&#32;1)</emphasis>
156 <emphasis role="preprocessor">#undef&#32;UINT_LEAST32_MAX</emphasis>
157 <emphasis role="preprocessor">#define&#32;UINT_LEAST32_MAX&#32;__UINT_LEAST32_MAX__</emphasis>
158 <emphasis role="preprocessor">#undef&#32;INT_LEAST64_MAX</emphasis>
159 <emphasis role="preprocessor">#define&#32;INT_LEAST64_MAX&#32;__INT_LEAST64_MAX__</emphasis>
160 <emphasis role="preprocessor">#undef&#32;INT_LEAST64_MIN</emphasis>
161 <emphasis role="preprocessor">#define&#32;INT_LEAST64_MIN&#32;(-INT_LEAST64_MAX&#32;-&#32;1)</emphasis>
162 <emphasis role="preprocessor">#undef&#32;UINT_LEAST64_MAX</emphasis>
163 <emphasis role="preprocessor">#define&#32;UINT_LEAST64_MAX&#32;__UINT_LEAST64_MAX__</emphasis>
164 
165 <emphasis role="preprocessor">#undef&#32;INT_FAST8_MAX</emphasis>
166 <emphasis role="preprocessor">#define&#32;INT_FAST8_MAX&#32;__INT_FAST8_MAX__</emphasis>
167 <emphasis role="preprocessor">#undef&#32;INT_FAST8_MIN</emphasis>
168 <emphasis role="preprocessor">#define&#32;INT_FAST8_MIN&#32;(-INT_FAST8_MAX&#32;-&#32;1)</emphasis>
169 <emphasis role="preprocessor">#undef&#32;UINT_FAST8_MAX</emphasis>
170 <emphasis role="preprocessor">#define&#32;UINT_FAST8_MAX&#32;__UINT_FAST8_MAX__</emphasis>
171 <emphasis role="preprocessor">#undef&#32;INT_FAST16_MAX</emphasis>
172 <emphasis role="preprocessor">#define&#32;INT_FAST16_MAX&#32;__INT_FAST16_MAX__</emphasis>
173 <emphasis role="preprocessor">#undef&#32;INT_FAST16_MIN</emphasis>
174 <emphasis role="preprocessor">#define&#32;INT_FAST16_MIN&#32;(-INT_FAST16_MAX&#32;-&#32;1)</emphasis>
175 <emphasis role="preprocessor">#undef&#32;UINT_FAST16_MAX</emphasis>
176 <emphasis role="preprocessor">#define&#32;UINT_FAST16_MAX&#32;__UINT_FAST16_MAX__</emphasis>
177 <emphasis role="preprocessor">#undef&#32;INT_FAST32_MAX</emphasis>
178 <emphasis role="preprocessor">#define&#32;INT_FAST32_MAX&#32;__INT_FAST32_MAX__</emphasis>
179 <emphasis role="preprocessor">#undef&#32;INT_FAST32_MIN</emphasis>
180 <emphasis role="preprocessor">#define&#32;INT_FAST32_MIN&#32;(-INT_FAST32_MAX&#32;-&#32;1)</emphasis>
181 <emphasis role="preprocessor">#undef&#32;UINT_FAST32_MAX</emphasis>
182 <emphasis role="preprocessor">#define&#32;UINT_FAST32_MAX&#32;__UINT_FAST32_MAX__</emphasis>
183 <emphasis role="preprocessor">#undef&#32;INT_FAST64_MAX</emphasis>
184 <emphasis role="preprocessor">#define&#32;INT_FAST64_MAX&#32;__INT_FAST64_MAX__</emphasis>
185 <emphasis role="preprocessor">#undef&#32;INT_FAST64_MIN</emphasis>
186 <emphasis role="preprocessor">#define&#32;INT_FAST64_MIN&#32;(-INT_FAST64_MAX&#32;-&#32;1)</emphasis>
187 <emphasis role="preprocessor">#undef&#32;UINT_FAST64_MAX</emphasis>
188 <emphasis role="preprocessor">#define&#32;UINT_FAST64_MAX&#32;__UINT_FAST64_MAX__</emphasis>
189 
190 <emphasis role="preprocessor">#ifdef&#32;__INTPTR_MAX__</emphasis>
191 <emphasis role="preprocessor">#&#32;undef&#32;INTPTR_MAX</emphasis>
192 <emphasis role="preprocessor">#&#32;define&#32;INTPTR_MAX&#32;__INTPTR_MAX__</emphasis>
193 <emphasis role="preprocessor">#&#32;undef&#32;INTPTR_MIN</emphasis>
194 <emphasis role="preprocessor">#&#32;define&#32;INTPTR_MIN&#32;(-INTPTR_MAX&#32;-&#32;1)</emphasis>
195 <emphasis role="preprocessor">#endif</emphasis>
196 <emphasis role="preprocessor">#ifdef&#32;__UINTPTR_MAX__</emphasis>
197 <emphasis role="preprocessor">#&#32;undef&#32;UINTPTR_MAX</emphasis>
198 <emphasis role="preprocessor">#&#32;define&#32;UINTPTR_MAX&#32;__UINTPTR_MAX__</emphasis>
199 <emphasis role="preprocessor">#endif</emphasis>
200 
201 <emphasis role="preprocessor">#undef&#32;INTMAX_MAX</emphasis>
202 <emphasis role="preprocessor">#define&#32;INTMAX_MAX&#32;__INTMAX_MAX__</emphasis>
203 <emphasis role="preprocessor">#undef&#32;INTMAX_MIN</emphasis>
204 <emphasis role="preprocessor">#define&#32;INTMAX_MIN&#32;(-INTMAX_MAX&#32;-&#32;1)</emphasis>
205 <emphasis role="preprocessor">#undef&#32;UINTMAX_MAX</emphasis>
206 <emphasis role="preprocessor">#define&#32;UINTMAX_MAX&#32;__UINTMAX_MAX__</emphasis>
207 
208 <emphasis role="comment">/*&#32;7.18.3&#32;Limits&#32;of&#32;other&#32;integer&#32;types&#32;*/</emphasis>
209 
210 <emphasis role="preprocessor">#undef&#32;PTRDIFF_MAX</emphasis>
211 <emphasis role="preprocessor">#define&#32;PTRDIFF_MAX&#32;__PTRDIFF_MAX__</emphasis>
212 <emphasis role="preprocessor">#undef&#32;PTRDIFF_MIN</emphasis>
213 <emphasis role="preprocessor">#define&#32;PTRDIFF_MIN&#32;(-PTRDIFF_MAX&#32;-&#32;1)</emphasis>
214 
215 <emphasis role="preprocessor">#undef&#32;SIG_ATOMIC_MAX</emphasis>
216 <emphasis role="preprocessor">#define&#32;SIG_ATOMIC_MAX&#32;__SIG_ATOMIC_MAX__</emphasis>
217 <emphasis role="preprocessor">#undef&#32;SIG_ATOMIC_MIN</emphasis>
218 <emphasis role="preprocessor">#define&#32;SIG_ATOMIC_MIN&#32;__SIG_ATOMIC_MIN__</emphasis>
219 
220 <emphasis role="preprocessor">#undef&#32;SIZE_MAX</emphasis>
221 <emphasis role="preprocessor">#define&#32;SIZE_MAX&#32;__SIZE_MAX__</emphasis>
222 
223 <emphasis role="preprocessor">#undef&#32;WCHAR_MAX</emphasis>
224 <emphasis role="preprocessor">#define&#32;WCHAR_MAX&#32;__WCHAR_MAX__</emphasis>
225 <emphasis role="preprocessor">#undef&#32;WCHAR_MIN</emphasis>
226 <emphasis role="preprocessor">#define&#32;WCHAR_MIN&#32;__WCHAR_MIN__</emphasis>
227 
228 <emphasis role="preprocessor">#undef&#32;WINT_MAX</emphasis>
229 <emphasis role="preprocessor">#define&#32;WINT_MAX&#32;__WINT_MAX__</emphasis>
230 <emphasis role="preprocessor">#undef&#32;WINT_MIN</emphasis>
231 <emphasis role="preprocessor">#define&#32;WINT_MIN&#32;__WINT_MIN__</emphasis>
232 
233 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(!defined&#32;__cplusplus&#32;||&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
234 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;defined&#32;__STDC_LIMIT_MACROS)&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
235 
236 <emphasis role="preprocessor">#if&#32;(!defined&#32;__cplusplus&#32;||&#32;__cplusplus&#32;&gt;=&#32;201103L&#32;\</emphasis>
237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;defined&#32;__STDC_CONSTANT_MACROS)</emphasis>
238 
239 <emphasis role="preprocessor">#undef&#32;INT8_C</emphasis>
240 <emphasis role="preprocessor">#define&#32;INT8_C(c)&#32;__INT8_C(c)</emphasis>
241 <emphasis role="preprocessor">#undef&#32;INT16_C</emphasis>
242 <emphasis role="preprocessor">#define&#32;INT16_C(c)&#32;__INT16_C(c)</emphasis>
243 <emphasis role="preprocessor">#undef&#32;INT32_C</emphasis>
244 <emphasis role="preprocessor">#define&#32;INT32_C(c)&#32;__INT32_C(c)</emphasis>
245 <emphasis role="preprocessor">#undef&#32;INT64_C</emphasis>
246 <emphasis role="preprocessor">#define&#32;INT64_C(c)&#32;__INT64_C(c)</emphasis>
247 <emphasis role="preprocessor">#undef&#32;UINT8_C</emphasis>
248 <emphasis role="preprocessor">#define&#32;UINT8_C(c)&#32;__UINT8_C(c)</emphasis>
249 <emphasis role="preprocessor">#undef&#32;UINT16_C</emphasis>
250 <emphasis role="preprocessor">#define&#32;UINT16_C(c)&#32;__UINT16_C(c)</emphasis>
251 <emphasis role="preprocessor">#undef&#32;UINT32_C</emphasis>
252 <emphasis role="preprocessor">#define&#32;UINT32_C(c)&#32;__UINT32_C(c)</emphasis>
253 <emphasis role="preprocessor">#undef&#32;UINT64_C</emphasis>
254 <emphasis role="preprocessor">#define&#32;UINT64_C(c)&#32;__UINT64_C(c)</emphasis>
255 <emphasis role="preprocessor">#undef&#32;INTMAX_C</emphasis>
256 <emphasis role="preprocessor">#define&#32;INTMAX_C(c)&#32;__INTMAX_C(c)</emphasis>
257 <emphasis role="preprocessor">#undef&#32;UINTMAX_C</emphasis>
258 <emphasis role="preprocessor">#define&#32;UINTMAX_C(c)&#32;__UINTMAX_C(c)</emphasis>
259 
260 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(!defined&#32;__cplusplus&#32;||&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
261 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;defined&#32;__STDC_CONSTANT_MACROS)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
262 
263 <emphasis role="preprocessor">#if&#32;(defined&#32;__STDC_WANT_IEC_60559_BFP_EXT__&#32;\</emphasis>
264 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;||&#32;(defined&#32;(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;&#32;201710L))</emphasis>
265 <emphasis role="comment">/*&#32;TS&#32;18661-1&#32;/&#32;C2X&#32;widths&#32;of&#32;integer&#32;types.&#32;&#32;*/</emphasis>
266 
267 <emphasis role="preprocessor">#ifdef&#32;__INT8_TYPE__</emphasis>
268 <emphasis role="preprocessor">#&#32;undef&#32;INT8_WIDTH</emphasis>
269 <emphasis role="preprocessor">#&#32;define&#32;INT8_WIDTH&#32;8</emphasis>
270 <emphasis role="preprocessor">#endif</emphasis>
271 <emphasis role="preprocessor">#ifdef&#32;__UINT8_TYPE__</emphasis>
272 <emphasis role="preprocessor">#&#32;undef&#32;UINT8_WIDTH</emphasis>
273 <emphasis role="preprocessor">#&#32;define&#32;UINT8_WIDTH&#32;8</emphasis>
274 <emphasis role="preprocessor">#endif</emphasis>
275 <emphasis role="preprocessor">#ifdef&#32;__INT16_TYPE__</emphasis>
276 <emphasis role="preprocessor">#&#32;undef&#32;INT16_WIDTH</emphasis>
277 <emphasis role="preprocessor">#&#32;define&#32;INT16_WIDTH&#32;16</emphasis>
278 <emphasis role="preprocessor">#endif</emphasis>
279 <emphasis role="preprocessor">#ifdef&#32;__UINT16_TYPE__</emphasis>
280 <emphasis role="preprocessor">#&#32;undef&#32;UINT16_WIDTH</emphasis>
281 <emphasis role="preprocessor">#&#32;define&#32;UINT16_WIDTH&#32;16</emphasis>
282 <emphasis role="preprocessor">#endif</emphasis>
283 <emphasis role="preprocessor">#ifdef&#32;__INT32_TYPE__</emphasis>
284 <emphasis role="preprocessor">#&#32;undef&#32;INT32_WIDTH</emphasis>
285 <emphasis role="preprocessor">#&#32;define&#32;INT32_WIDTH&#32;32</emphasis>
286 <emphasis role="preprocessor">#endif</emphasis>
287 <emphasis role="preprocessor">#ifdef&#32;__UINT32_TYPE__</emphasis>
288 <emphasis role="preprocessor">#&#32;undef&#32;UINT32_WIDTH</emphasis>
289 <emphasis role="preprocessor">#&#32;define&#32;UINT32_WIDTH&#32;32</emphasis>
290 <emphasis role="preprocessor">#endif</emphasis>
291 <emphasis role="preprocessor">#ifdef&#32;__INT64_TYPE__</emphasis>
292 <emphasis role="preprocessor">#&#32;undef&#32;INT64_WIDTH</emphasis>
293 <emphasis role="preprocessor">#&#32;define&#32;INT64_WIDTH&#32;64</emphasis>
294 <emphasis role="preprocessor">#endif</emphasis>
295 <emphasis role="preprocessor">#ifdef&#32;__UINT64_TYPE__</emphasis>
296 <emphasis role="preprocessor">#&#32;undef&#32;UINT64_WIDTH</emphasis>
297 <emphasis role="preprocessor">#&#32;define&#32;UINT64_WIDTH&#32;64</emphasis>
298 <emphasis role="preprocessor">#endif</emphasis>
299 
300 <emphasis role="preprocessor">#undef&#32;INT_LEAST8_WIDTH</emphasis>
301 <emphasis role="preprocessor">#define&#32;INT_LEAST8_WIDTH&#32;__INT_LEAST8_WIDTH__</emphasis>
302 <emphasis role="preprocessor">#undef&#32;UINT_LEAST8_WIDTH</emphasis>
303 <emphasis role="preprocessor">#define&#32;UINT_LEAST8_WIDTH&#32;__INT_LEAST8_WIDTH__</emphasis>
304 <emphasis role="preprocessor">#undef&#32;INT_LEAST16_WIDTH</emphasis>
305 <emphasis role="preprocessor">#define&#32;INT_LEAST16_WIDTH&#32;__INT_LEAST16_WIDTH__</emphasis>
306 <emphasis role="preprocessor">#undef&#32;UINT_LEAST16_WIDTH</emphasis>
307 <emphasis role="preprocessor">#define&#32;UINT_LEAST16_WIDTH&#32;__INT_LEAST16_WIDTH__</emphasis>
308 <emphasis role="preprocessor">#undef&#32;INT_LEAST32_WIDTH</emphasis>
309 <emphasis role="preprocessor">#define&#32;INT_LEAST32_WIDTH&#32;__INT_LEAST32_WIDTH__</emphasis>
310 <emphasis role="preprocessor">#undef&#32;UINT_LEAST32_WIDTH</emphasis>
311 <emphasis role="preprocessor">#define&#32;UINT_LEAST32_WIDTH&#32;__INT_LEAST32_WIDTH__</emphasis>
312 <emphasis role="preprocessor">#undef&#32;INT_LEAST64_WIDTH</emphasis>
313 <emphasis role="preprocessor">#define&#32;INT_LEAST64_WIDTH&#32;__INT_LEAST64_WIDTH__</emphasis>
314 <emphasis role="preprocessor">#undef&#32;UINT_LEAST64_WIDTH</emphasis>
315 <emphasis role="preprocessor">#define&#32;UINT_LEAST64_WIDTH&#32;__INT_LEAST64_WIDTH__</emphasis>
316 
317 <emphasis role="preprocessor">#undef&#32;INT_FAST8_WIDTH</emphasis>
318 <emphasis role="preprocessor">#define&#32;INT_FAST8_WIDTH&#32;__INT_FAST8_WIDTH__</emphasis>
319 <emphasis role="preprocessor">#undef&#32;UINT_FAST8_WIDTH</emphasis>
320 <emphasis role="preprocessor">#define&#32;UINT_FAST8_WIDTH&#32;__INT_FAST8_WIDTH__</emphasis>
321 <emphasis role="preprocessor">#undef&#32;INT_FAST16_WIDTH</emphasis>
322 <emphasis role="preprocessor">#define&#32;INT_FAST16_WIDTH&#32;__INT_FAST16_WIDTH__</emphasis>
323 <emphasis role="preprocessor">#undef&#32;UINT_FAST16_WIDTH</emphasis>
324 <emphasis role="preprocessor">#define&#32;UINT_FAST16_WIDTH&#32;__INT_FAST16_WIDTH__</emphasis>
325 <emphasis role="preprocessor">#undef&#32;INT_FAST32_WIDTH</emphasis>
326 <emphasis role="preprocessor">#define&#32;INT_FAST32_WIDTH&#32;__INT_FAST32_WIDTH__</emphasis>
327 <emphasis role="preprocessor">#undef&#32;UINT_FAST32_WIDTH</emphasis>
328 <emphasis role="preprocessor">#define&#32;UINT_FAST32_WIDTH&#32;__INT_FAST32_WIDTH__</emphasis>
329 <emphasis role="preprocessor">#undef&#32;INT_FAST64_WIDTH</emphasis>
330 <emphasis role="preprocessor">#define&#32;INT_FAST64_WIDTH&#32;__INT_FAST64_WIDTH__</emphasis>
331 <emphasis role="preprocessor">#undef&#32;UINT_FAST64_WIDTH</emphasis>
332 <emphasis role="preprocessor">#define&#32;UINT_FAST64_WIDTH&#32;__INT_FAST64_WIDTH__</emphasis>
333 
334 <emphasis role="preprocessor">#ifdef&#32;__INTPTR_TYPE__</emphasis>
335 <emphasis role="preprocessor">#&#32;undef&#32;INTPTR_WIDTH</emphasis>
336 <emphasis role="preprocessor">#&#32;define&#32;INTPTR_WIDTH&#32;__INTPTR_WIDTH__</emphasis>
337 <emphasis role="preprocessor">#endif</emphasis>
338 <emphasis role="preprocessor">#ifdef&#32;__UINTPTR_TYPE__</emphasis>
339 <emphasis role="preprocessor">#&#32;undef&#32;UINTPTR_WIDTH</emphasis>
340 <emphasis role="preprocessor">#&#32;define&#32;UINTPTR_WIDTH&#32;__INTPTR_WIDTH__</emphasis>
341 <emphasis role="preprocessor">#endif</emphasis>
342 
343 <emphasis role="preprocessor">#undef&#32;INTMAX_WIDTH</emphasis>
344 <emphasis role="preprocessor">#define&#32;INTMAX_WIDTH&#32;__INTMAX_WIDTH__</emphasis>
345 <emphasis role="preprocessor">#undef&#32;UINTMAX_WIDTH</emphasis>
346 <emphasis role="preprocessor">#define&#32;UINTMAX_WIDTH&#32;__INTMAX_WIDTH__</emphasis>
347 
348 <emphasis role="preprocessor">#undef&#32;PTRDIFF_WIDTH</emphasis>
349 <emphasis role="preprocessor">#define&#32;PTRDIFF_WIDTH&#32;__PTRDIFF_WIDTH__</emphasis>
350 
351 <emphasis role="preprocessor">#undef&#32;SIG_ATOMIC_WIDTH</emphasis>
352 <emphasis role="preprocessor">#define&#32;SIG_ATOMIC_WIDTH&#32;__SIG_ATOMIC_WIDTH__</emphasis>
353 
354 <emphasis role="preprocessor">#undef&#32;SIZE_WIDTH</emphasis>
355 <emphasis role="preprocessor">#define&#32;SIZE_WIDTH&#32;__SIZE_WIDTH__</emphasis>
356 
357 <emphasis role="preprocessor">#undef&#32;WCHAR_WIDTH</emphasis>
358 <emphasis role="preprocessor">#define&#32;WCHAR_WIDTH&#32;__WCHAR_WIDTH__</emphasis>
359 
360 <emphasis role="preprocessor">#undef&#32;WINT_WIDTH</emphasis>
361 <emphasis role="preprocessor">#define&#32;WINT_WIDTH&#32;__WINT_WIDTH__</emphasis>
362 
363 <emphasis role="preprocessor">#endif</emphasis>
364 
365 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GCC_STDINT_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
