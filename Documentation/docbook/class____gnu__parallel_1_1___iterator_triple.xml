<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___iterator_triple" xml:lang="en-US">
<title>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary></indexterm>
<para>

<para>A triple of iterators. The usual iterator operations are applied to all three child iterators. </para>
 
</para>
<para>
<computeroutput>#include &lt;iterator.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d">iterator_category</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371">value_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _Iterator1 &gt;::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> * <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b">reference</link></para>
</listitem>
            <listitem><para>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d">iterator_category</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371">value_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _Iterator1 &gt;::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> * <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b">reference</link></para>
</listitem>
            <listitem><para>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d">iterator_category</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371">value_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _Iterator1 &gt;::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> * <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b">reference</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef">_IteratorTriple</link> (const _Iterator1 &amp;__first, const _Iterator2 &amp;__second, const _Iterator3 &amp;__third)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae1aecf4a2f122b5d376f51216577c3c9">operator _Iterator3</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34">operator=</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp;__other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3">operator+</link> (<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> __delta) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp;__other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef">_IteratorTriple</link> (const _Iterator1 &amp;__first, const _Iterator2 &amp;__second, const _Iterator3 &amp;__third)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae1aecf4a2f122b5d376f51216577c3c9">operator _Iterator3</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34">operator=</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp;__other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3">operator+</link> (<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> __delta) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp;__other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef">_IteratorTriple</link> (const _Iterator1 &amp;__first, const _Iterator2 &amp;__second, const _Iterator3 &amp;__third)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae1aecf4a2f122b5d376f51216577c3c9">operator _Iterator3</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34">operator=</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp;__other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3">operator+</link> (<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> __delta) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp;__other) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>_Iterator1 <link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link></para>
</listitem>
            <listitem><para>_Iterator2 <link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link></para>
</listitem>
            <listitem><para>_Iterator3 <link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Iterator1, typename _Iterator2, typename _Iterator3, typename _IteratorCategory&gt;<?linebreak?>class __gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</title></simplesect>

<para>A triple of iterators. The usual iterator operations are applied to all three child iterators. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_Iterator1&gt;::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_Iterator1&gt;::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_Iterator1&gt;::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>* <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>* <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>* <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::value_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5"/><section>
    <title>_IteratorTriple()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_IteratorTriple</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_IteratorTriple</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_IteratorTriple ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a908cf171e1c24b2fe78259cabee751a5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef"/><section>
    <title>_IteratorTriple()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_IteratorTriple</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_IteratorTriple</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_IteratorTriple (const _Iterator1 &amp; __first, const _Iterator2 &amp; __second, const _Iterator3 &amp; __third)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5"/><section>
    <title>_IteratorTriple()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_IteratorTriple</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_IteratorTriple</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_IteratorTriple ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef"/><section>
    <title>_IteratorTriple()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_IteratorTriple</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_IteratorTriple</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_IteratorTriple (const _Iterator1 &amp; __first, const _Iterator2 &amp; __second, const _Iterator3 &amp; __third)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5"/><section>
    <title>_IteratorTriple()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_IteratorTriple</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_IteratorTriple</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_IteratorTriple ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef"/><section>
    <title>_IteratorTriple()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_IteratorTriple</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_IteratorTriple</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_IteratorTriple (const _Iterator1 &amp; __first, const _Iterator2 &amp; __second, const _Iterator3 &amp; __third)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ae1aecf4a2f122b5d376f51216577c3c9"/><section>
    <title>operator _Iterator3()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator _Iterator3</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator _Iterator3</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator _Iterator3 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ae1aecf4a2f122b5d376f51216577c3c9"/><section>
    <title>operator _Iterator3()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator _Iterator3</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator _Iterator3</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator _Iterator3 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ae1aecf4a2f122b5d376f51216577c3c9"/><section>
    <title>operator _Iterator3()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator _Iterator3</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator _Iterator3</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator _Iterator3 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3"/><section>
    <title>operator+()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator+ (<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> __delta) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a46e88744a6187314624458fd98b03cb3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3"/><section>
    <title>operator+()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator+ (<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> __delta) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a46e88744a6187314624458fd98b03cb3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3"/><section>
    <title>operator+()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator+ (<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> __delta) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a46e88744a6187314624458fd98b03cb3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a1606fc8d794e5dd3f39d0eb67d62e680_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a1606fc8d794e5dd3f39d0eb67d62e680_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_a1606fc8d794e5dd3f39d0eb67d62e680_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206"/><section>
    <title>operator-()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; &amp; __other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206"/><section>
    <title>operator-()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; &amp; __other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206"/><section>
    <title>operator-()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; &amp; __other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715"/><section>
    <title>operator--()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715"/><section>
    <title>operator--()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715"/><section>
    <title>operator--()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab"/><section>
    <title>operator--()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_ae706a3c4500dc3747f14b749680054ab_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab"/><section>
    <title>operator--()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_ae706a3c4500dc3747f14b749680054ab_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab"/><section>
    <title>operator--()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_triple_ae706a3c4500dc3747f14b749680054ab_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34"/><section>
    <title>operator=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator= (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34"/><section>
    <title>operator=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator= (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34"/><section>
    <title>operator=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::operator= (const <link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt; &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d"/><section>
    <title>_M_first</title>
<indexterm><primary>_M_first</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_M_first</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>_Iterator1 <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_M_first</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550"/><section>
    <title>_M_second</title>
<indexterm><primary>_M_second</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_M_second</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>_Iterator2 <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_M_second</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c"/><section>
    <title>_M_third</title>
<indexterm><primary>_M_third</primary><secondary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</primary><secondary>_M_third</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _Iterator3 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>_Iterator3 <link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple</link>&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;::_M_third</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2iterator_8h">iterator.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2iterator_8h">iterator.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2iterator_8h">iterator.h</link></section>
</section>
