<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__" xml:lang="en-US">
<title>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary></indexterm>
<para>

<para>Const point-type iterator. </para>
 
</para>
<para>
<computeroutput>#include &lt;point_const_iterator.hpp&gt;</computeroutput>
</para>
Collaboration diagram for __gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator____coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef Value_Type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef Value_Type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef Value_Type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link> &gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7">binary_heap_point_const_iterator_</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> p_e)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9">binary_heap_point_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b">binary_heap_point_const_iterator_</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea">operator-&gt;</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06">operator*</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7">binary_heap_point_const_iterator_</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> p_e)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9">binary_heap_point_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b">binary_heap_point_const_iterator_</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea">operator-&gt;</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06">operator*</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7">binary_heap_point_const_iterator_</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> p_e)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9">binary_heap_point_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b">binary_heap_point_const_iterator_</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea">operator-&gt;</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06">operator*</link> () const</para>

<para>Access. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, Entry &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, Entry &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, Entry &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Value_Type, typename Entry, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</title></simplesect>

<para>Const point-type iterator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab"/><section>
    <title>entry_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>entry_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>entry_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,Entry&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::entry_pointer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab"/><section>
    <title>entry_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>entry_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>entry_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,Entry&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::entry_pointer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab"/><section>
    <title>entry_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>entry_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>entry_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,Entry&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::entry_pointer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Value_Type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Value_Type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Value_Type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ (<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> p_e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ (<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> p_e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ (<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> p_e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b"/><section>
    <title>binary_heap_point_const_iterator_()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>binary_heap_point_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_point_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_point_const_iterator_ (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9"/><section>
    <title>operator!=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9"/><section>
    <title>operator!=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9"/><section>
    <title>operator!=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea"/><section>
    <title>operator-&gt;()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea"/><section>
    <title>operator-&gt;()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea"/><section>
    <title>operator-&gt;()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Access. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110"/><section>
    <title>operator==()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110"/><section>
    <title>operator==()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110"/><section>
    <title>operator==()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0"/><section>
    <title>m_p_e</title>
<indexterm><primary>m_p_e</primary><secondary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>m_p_e</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::m_p_e</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/binary_heap_/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2point__const__iterator_8hpp">point_const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/binary_heap_/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2point__const__iterator_8hpp">point_const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/binary_heap_/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2point__const__iterator_8hpp">point_const_iterator.hpp</link></section>
</section>
