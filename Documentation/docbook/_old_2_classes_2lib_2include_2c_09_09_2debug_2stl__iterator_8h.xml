<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2debug_2stl__iterator_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/debug/stl_iterator.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/debug/stl_iterator.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;debug/helper_functions.h&gt;<?linebreak?></programlisting>Include dependency graph for stl_iterator.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2debug_2stl__iterator_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__debug_1_1___unsafe__type_3_01std_1_1reverse__iterator_3_01___iterator_01_4_01_4">__gnu_debug::_Unsafe_type&lt; std::reverse_iterator&lt; _Iterator &gt; &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__debug">__gnu_debug</link></para>

<para>GNU debug classes for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _Iterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a506ae0c7beb8d311cc80de965cf0e062">__gnu_debug::__valid_range</link> (const std::reverse_iterator&lt; _Iterator &gt; &amp;__first, const std::reverse_iterator&lt; _Iterator &gt; &amp;__last, typename <link linkend="_struct____gnu__debug_1_1___distance__traits">_Distance_traits</link>&lt; _Iterator &gt;::__type &amp;__dist)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="_struct____gnu__debug_1_1___distance__traits">_Distance_traits</link>&lt; _Iterator &gt;::__type <link linkend="_namespace____gnu__debug_1a47eab399b5394c1b2cba701e87ce7b9e">__gnu_debug::__get_distance</link> (const std::reverse_iterator&lt; _Iterator &gt; &amp;__first, const std::reverse_iterator&lt; _Iterator &gt; &amp;__last)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Size &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a566449f901222810ef1b4d139cc5d5e4">__gnu_debug::__can_advance</link> (const std::reverse_iterator&lt; _Iterator &gt; &amp;__it, _Size __n)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Diff &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a6b0cd66e03f540080677d2aacb65f90e">__gnu_debug::__can_advance</link> (const std::reverse_iterator&lt; _Iterator &gt; &amp;__it, const std::pair&lt; _Diff, <link linkend="_namespace____gnu__debug_1a3817879cb58c2db9f22712a634ef0b92">_Distance_precision</link> &gt; &amp;__dist, int __way)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence &gt; </para><para>_GLIBCXX20_CONSTEXPR std::reverse_iterator&lt; _Iterator &gt; <link linkend="_namespace____gnu__debug_1ab3832b7fa13cf1673d0ef53e4ded6622">__gnu_debug::__base</link> (const std::reverse_iterator&lt; <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, std::random_access_iterator_tag &gt; &gt; &amp;__it)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator &gt; </para><para>std::reverse_iterator&lt; typename <link linkend="_struct____gnu__debug_1_1___unsafe__type">_Unsafe_type</link>&lt; _Iterator &gt;::_Type &gt; <link linkend="_namespace____gnu__debug_1a9a1156ba8af9a2d6b158f7378aa3907f">__gnu_debug::__unsafe</link> (const std::reverse_iterator&lt; _Iterator &gt; &amp;__it)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
