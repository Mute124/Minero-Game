<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr" xml:lang="en-US">
<title>std::__exception_ptr::exception_ptr Class Reference</title>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary></indexterm>
<para>

<para>An opaque pointer to an arbitrary exception. </para>
 
</para>
<para>
<computeroutput>#include &lt;exception_ptr.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(exception_ptr::* <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link>) ()</para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(exception_ptr::* <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link>) ()</para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(exception_ptr::* <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link>) ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a41bb6fa688c9729dc9f0a7c528ad7d80">exception_ptr</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a4da8a94017ab976d5aa0cfee35d9c057">exception_ptr</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31f3ee45d18bb172fb20b5ff01558991">exception_ptr</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link>) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac244e056b65a71e8d8dd1d6da494f012">operator=</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac9f40dccc2da558929a5afcb6f331307">~exception_ptr</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab3ba9a2aba5540d4813086996d427820">swap</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para>const class std::type_info * <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a077f057568146bb094b5209833caf6e1">__cxa_exception_type</link> () const _GLIBCXX_USE_NOEXCEPT <link linkend="_group__exceptions_1gab4148f172d910c82bf981da4f900c4a4">__attribute__</link>((__pure__))</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a242afbc1bac12216f6e46acd6b1043a7">exception_ptr</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa37a94e41aa5e23eb8f0eb8b8ad521cc">exception_ptr</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31f3ee45d18bb172fb20b5ff01558991">exception_ptr</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link>) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa60a0984a640192d041db4acd04580c5">operator=</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a25fb0be76f45c939211db1ebe1339437">~exception_ptr</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a231a3644c3af8d646b7927956901849a">swap</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para>const class std::type_info * <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a077f057568146bb094b5209833caf6e1">__cxa_exception_type</link> () const _GLIBCXX_USE_NOEXCEPT <link linkend="_group__exceptions_1gab4148f172d910c82bf981da4f900c4a4">__attribute__</link>((__pure__))</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a242afbc1bac12216f6e46acd6b1043a7">exception_ptr</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa37a94e41aa5e23eb8f0eb8b8ad521cc">exception_ptr</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31f3ee45d18bb172fb20b5ff01558991">exception_ptr</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link>) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa60a0984a640192d041db4acd04580c5">operator=</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a25fb0be76f45c939211db1ebe1339437">~exception_ptr</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a231a3644c3af8d646b7927956901849a">swap</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para>const class std::type_info * <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a077f057568146bb094b5209833caf6e1">__cxa_exception_type</link> () const _GLIBCXX_USE_NOEXCEPT <link linkend="_group__exceptions_1gab4148f172d910c82bf981da4f900c4a4">__attribute__</link>((__pure__))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1ef934a04d0c01bc5f6004521a738a29">std::current_exception</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1cf5c13411faa966fc08c033cbc61c9c">std::rethrow_exception</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link>)</para>
</listitem>
            <listitem><para>template&lt;typename _Ex &gt; </para><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a3488fca5d93433c497850d468c64fcc2">std::make_exception_ptr</link> (_Ex) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a712c84bb4e7d5d67cde94235c0b61a95">operator==</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__y) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac0e955eb70246056d7a6eba9a3d5ce75">operator!=</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__y) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1ef934a04d0c01bc5f6004521a738a29">std::current_exception</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1cf5c13411faa966fc08c033cbc61c9c">std::rethrow_exception</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link>)</para>
</listitem>
            <listitem><para>template&lt;typename _Ex &gt; </para><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a3488fca5d93433c497850d468c64fcc2">std::make_exception_ptr</link> (_Ex) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a712c84bb4e7d5d67cde94235c0b61a95">operator==</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__y) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac0e955eb70246056d7a6eba9a3d5ce75">operator!=</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__y) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1ef934a04d0c01bc5f6004521a738a29">std::current_exception</link> () _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1cf5c13411faa966fc08c033cbc61c9c">std::rethrow_exception</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link>)</para>
</listitem>
            <listitem><para>template&lt;typename _Ex &gt; </para><para><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a3488fca5d93433c497850d468c64fcc2">std::make_exception_ptr</link> (_Ex) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a712c84bb4e7d5d67cde94235c0b61a95">operator==</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__y) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac0e955eb70246056d7a6eba9a3d5ce75">operator!=</link> (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__y) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Related Symbols    </title>

<para>(Note that these are not member symbols.) </para>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab2993affdeddd22000ed84de6dfb8f3a">swap</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__lhs, <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__rhs)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab2993affdeddd22000ed84de6dfb8f3a">swap</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__lhs, <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__rhs)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab2993affdeddd22000ed84de6dfb8f3a">swap</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__lhs, <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp;__rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>An opaque pointer to an arbitrary exception. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4"/><section>
    <title>__safe_bool<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__safe_bool</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>__safe_bool</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(exception_ptr::* std::__exception_ptr::exception_ptr::__safe_bool) ()</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4"/><section>
    <title>__safe_bool<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__safe_bool</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>__safe_bool</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(exception_ptr::* std::__exception_ptr::exception_ptr::__safe_bool) ()</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4"/><section>
    <title>__safe_bool<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__safe_bool</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>__safe_bool</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(exception_ptr::* std::__exception_ptr::exception_ptr::__safe_bool) ()</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a41bb6fa688c9729dc9f0a7c528ad7d80"/><section>
    <title>exception_ptr()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> std::__exception_ptr::exception_ptr::exception_ptr ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_a41bb6fa688c9729dc9f0a7c528ad7d80_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a4da8a94017ab976d5aa0cfee35d9c057"/><section>
    <title>exception_ptr()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> std::__exception_ptr::exception_ptr::exception_ptr (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31f3ee45d18bb172fb20b5ff01558991"/><section>
    <title>exception_ptr()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_a31f3ee45d18bb172fb20b5ff01558991_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac9f40dccc2da558929a5afcb6f331307"/><section>
    <title>~exception_ptr()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>~exception_ptr</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> std::__exception_ptr::exception_ptr::~exception_ptr ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a242afbc1bac12216f6e46acd6b1043a7"/><section>
    <title>exception_ptr()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr ( )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa37a94e41aa5e23eb8f0eb8b8ad521cc"/><section>
    <title>exception_ptr()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31f3ee45d18bb172fb20b5ff01558991"/><section>
    <title>exception_ptr()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link> )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a25fb0be76f45c939211db1ebe1339437"/><section>
    <title>~exception_ptr()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>~exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::~exception_ptr ( )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a242afbc1bac12216f6e46acd6b1043a7"/><section>
    <title>exception_ptr()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr ( )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa37a94e41aa5e23eb8f0eb8b8ad521cc"/><section>
    <title>exception_ptr()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31f3ee45d18bb172fb20b5ff01558991"/><section>
    <title>exception_ptr()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::exception_ptr (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr_1a31db05ed784a6ed226fefc685ebc13b4">__safe_bool</link> )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a25fb0be76f45c939211db1ebe1339437"/><section>
    <title>~exception_ptr()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>~exception_ptr</secondary></indexterm>
<para><computeroutput>std::__exception_ptr::exception_ptr::~exception_ptr ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a077f057568146bb094b5209833caf6e1"/><section>
    <title>__cxa_exception_type()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__cxa_exception_type</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>__cxa_exception_type</secondary></indexterm>
<para><computeroutput>const class std::type_info * std::__exception_ptr::exception_ptr::__cxa_exception_type ( ) const</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a077f057568146bb094b5209833caf6e1"/><section>
    <title>__cxa_exception_type()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__cxa_exception_type</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>__cxa_exception_type</secondary></indexterm>
<para><computeroutput>const class std::type_info * std::__exception_ptr::exception_ptr::__cxa_exception_type ( ) const</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a077f057568146bb094b5209833caf6e1"/><section>
    <title>__cxa_exception_type()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__cxa_exception_type</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>__cxa_exception_type</secondary></indexterm>
<para><computeroutput>const class std::type_info * std::__exception_ptr::exception_ptr::__cxa_exception_type ( ) const</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac244e056b65a71e8d8dd1d6da494f012"/><section>
    <title>operator=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; std::__exception_ptr::exception_ptr::operator= (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_ac244e056b65a71e8d8dd1d6da494f012_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa60a0984a640192d041db4acd04580c5"/><section>
    <title>operator=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; std::__exception_ptr::exception_ptr::operator= (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_aa60a0984a640192d041db4acd04580c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1aa60a0984a640192d041db4acd04580c5"/><section>
    <title>operator=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; std::__exception_ptr::exception_ptr::operator= (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_aa60a0984a640192d041db4acd04580c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab3ba9a2aba5540d4813086996d427820"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>swap</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> std::__exception_ptr::exception_ptr::swap (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_ab3ba9a2aba5540d4813086996d427820_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a231a3644c3af8d646b7927956901849a"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>swap</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> std::__exception_ptr::exception_ptr::swap (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a231a3644c3af8d646b7927956901849a"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>swap</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> std::__exception_ptr::exception_ptr::swap (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; )</computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac0e955eb70246056d7a6eba9a3d5ce75"/><section>
    <title>operator!=<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __y)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac0e955eb70246056d7a6eba9a3d5ce75"/><section>
    <title>operator!=<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __y)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ac0e955eb70246056d7a6eba9a3d5ce75"/><section>
    <title>operator!=<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __y)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a712c84bb4e7d5d67cde94235c0b61a95"/><section>
    <title>operator==<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __y)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a712c84bb4e7d5d67cde94235c0b61a95"/><section>
    <title>operator==<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __y)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a712c84bb4e7d5d67cde94235c0b61a95"/><section>
    <title>operator==<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h_1aa48e700d823672fe7012560a9a4d7544">_GLIBCXX_EH_PTR_USED</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __x, const <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __y)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1ef934a04d0c01bc5f6004521a738a29"/><section>
    <title>std::current_exception<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>std::current_exception</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::current_exception</secondary></indexterm>
<para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_group__exceptions_1gafcca609a0e064086e3d37ff25c85ab69">std::current_exception</link> ( )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1ef934a04d0c01bc5f6004521a738a29"/><section>
    <title>std::current_exception<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>std::current_exception</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::current_exception</secondary></indexterm>
<para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_group__exceptions_1gafcca609a0e064086e3d37ff25c85ab69">std::current_exception</link> ( )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1ef934a04d0c01bc5f6004521a738a29"/><section>
    <title>std::current_exception<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>std::current_exception</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::current_exception</secondary></indexterm>
<para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_group__exceptions_1gafcca609a0e064086e3d37ff25c85ab69">std::current_exception</link> ( )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a3488fca5d93433c497850d468c64fcc2"/><section>
    <title>std::make_exception_ptr<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>std::make_exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::make_exception_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Ex &gt; </computeroutput><para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_group__exceptions_1ga90822fbbd4a65b89480fb64d67fc69b6">std::make_exception_ptr</link> (_Ex )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a3488fca5d93433c497850d468c64fcc2"/><section>
    <title>std::make_exception_ptr<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>std::make_exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::make_exception_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Ex &gt; </computeroutput><para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_group__exceptions_1ga90822fbbd4a65b89480fb64d67fc69b6">std::make_exception_ptr</link> (_Ex )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a3488fca5d93433c497850d468c64fcc2"/><section>
    <title>std::make_exception_ptr<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>std::make_exception_ptr</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::make_exception_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Ex &gt; </computeroutput><para><computeroutput><link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> <link linkend="_group__exceptions_1ga90822fbbd4a65b89480fb64d67fc69b6">std::make_exception_ptr</link> (_Ex )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1cf5c13411faa966fc08c033cbc61c9c"/><section>
    <title>std::rethrow_exception<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>std::rethrow_exception</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::rethrow_exception</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__exceptions_1ga64d0b68338d7edbfd7d95f4177dbc442">std::rethrow_exception</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1cf5c13411faa966fc08c033cbc61c9c"/><section>
    <title>std::rethrow_exception<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>std::rethrow_exception</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::rethrow_exception</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__exceptions_1ga64d0b68338d7edbfd7d95f4177dbc442">std::rethrow_exception</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1a1cf5c13411faa966fc08c033cbc61c9c"/><section>
    <title>std::rethrow_exception<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>std::rethrow_exception</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>std::rethrow_exception</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__exceptions_1ga64d0b68338d7edbfd7d95f4177dbc442">std::rethrow_exception</link> (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> )<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab2993affdeddd22000ed84de6dfb8f3a"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>swap</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> swap (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __lhs, <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __rhs)<computeroutput>[related]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classstd_1_1____exception__ptr_1_1exception__ptr_ab2993affdeddd22000ed84de6dfb8f3a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab2993affdeddd22000ed84de6dfb8f3a"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>swap</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> swap (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __lhs, <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __rhs)<computeroutput>[related]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classstd_1_1____exception__ptr_1_1exception__ptr_1ab2993affdeddd22000ed84de6dfb8f3a"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>std::__exception_ptr::exception_ptr</secondary></indexterm>
<indexterm><primary>std::__exception_ptr::exception_ptr</primary><secondary>swap</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> swap (<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __lhs, <link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">exception_ptr</link> &amp; __rhs)<computeroutput>[related]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/bits/<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h">exception_ptr.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/bits/<link linkend="_lib_2include_2c_09_09_2bits_2exception__ptr_8h">exception_ptr.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/bits/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2bits_2exception__ptr_8h">exception_ptr.h</link></section>
</section>
