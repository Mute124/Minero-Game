<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__ext__quaternion__transform" xml:lang="en-US">
<title>GLM_EXT_quaternion_transform</title>
<indexterm><primary>GLM_EXT_quaternion_transform</primary></indexterm>
Collaboration diagram for GLM_EXT_quaternion_transform:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__transform.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__transform_1ga88a670319ed6c0daa1c2b212e62e9e20">glm::exp</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__transform_1gaff50b8a9c4937e7210dfb9b2e49c0cbc">glm::log</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__transform_1gafab75a9b1cf95c4a38df7aeac0becee7">glm::pow</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__transform_1gaf96163a149a7057cef212ecb2685b9b7">glm::sqrt</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__transform_1gab5a05957caba9f3436da34fe67675140">glm::rotate</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q, T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Provides transformation functions for quaternion types</para>

<para>Include &lt;glm/ext/quaternion_transform.hpp&gt; to use the features of this extension.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__quaternion__float">GLM_EXT_quaternion_float</link> </para>

<para><link linkend="_group__ext__quaternion__double">GLM_EXT_quaternion_double</link> </para>

<para><link linkend="_group__ext__quaternion__exponential">GLM_EXT_quaternion_exponential</link> </para>

<para><link linkend="_group__ext__quaternion__geometric">GLM_EXT_quaternion_geometric</link> </para>

<para><link linkend="_group__ext__quaternion__relational">GLM_EXT_quaternion_relational</link> </para>

<para><link linkend="_group__ext__quaternion__trigonometric">GLM_EXT_quaternion_trigonometric</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__ext__quaternion__transform_1ga88a670319ed6c0daa1c2b212e62e9e20"/><section>
    <title>exp()</title>
<indexterm><primary>exp</primary><secondary>GLM_EXT_quaternion_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_transform</primary><secondary>exp</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::exp (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Returns a exponential of a quaternion.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__transform_ga88a670319ed6c0daa1c2b212e62e9e20_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__transform_1gaff50b8a9c4937e7210dfb9b2e49c0cbc"/><section>
    <title>log()</title>
<indexterm><primary>log</primary><secondary>GLM_EXT_quaternion_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_transform</primary><secondary>log</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::log (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Returns a logarithm of a quaternion</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group__ext__quaternion__transform_1gafab75a9b1cf95c4a38df7aeac0becee7"/><section>
    <title>pow()</title>
<indexterm><primary>pow</primary><secondary>GLM_EXT_quaternion_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_transform</primary><secondary>pow</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::pow (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q, T y)</computeroutput></para>
<para>Returns a quaternion raised to a power.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__transform_gafab75a9b1cf95c4a38df7aeac0becee7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__transform_1gab5a05957caba9f3436da34fe67675140"/><section>
    <title>rotate()</title>
<indexterm><primary>rotate</primary><secondary>GLM_EXT_quaternion_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_transform</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::rotate (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q, T const &amp; angle, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; axis)</computeroutput></para>
<para>Rotates a quaternion from a vector of 3 components axis and an angle.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>q</entry><entry>
<para>Source orientation </para>
</entry>
                            </row>
                            <row>
<entry>angle</entry><entry>
<para>Angle expressed in radians. </para>
</entry>
                            </row>
                            <row>
<entry>axis</entry><entry>
<para>Axis of the rotation</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>Floating-point scalar types </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>Value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__transform_gab5a05957caba9f3436da34fe67675140_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__transform_1gaf96163a149a7057cef212ecb2685b9b7"/><section>
    <title>sqrt()</title>
<indexterm><primary>sqrt</primary><secondary>GLM_EXT_quaternion_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_transform</primary><secondary>sqrt</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::sqrt (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Returns the square root of a quaternion</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
