<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2rb__tree__map___2node_8hpp_source" xml:lang="en-US">
<title>node.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/rb_tree_map_/node.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_RB_TREE_NODE_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_RB_TREE_NODE_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/branch_policy/null_node_metadata.hpp&gt;</emphasis>
45 
46 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
47 {
48 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
49 &#32;&#32;{
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">class</emphasis>&#32;Metadata,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node__">rb_tree_node_</link>
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
55 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1aa4942752510e88991be28dd286c1bfef">value_type</link>;
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Metadata&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a53125deda1094c3f0ec0dc346e23b648">metadata_type</link>;
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, rb_tree_node_&gt;::pointer</link>
59 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a207ae4eb7712b3ff1db79a46c711f9ad">node_pointer</link>;
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, metadata_type&gt;::reference</link>
62 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1aedb2fb7147503798176af1c6814bc2e7">metadata_reference</link>;
63 
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, metadata_type&gt;::const_reference</link>
65 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a18129e83eaa91d81c9ce3aa0c7d06f76">metadata_const_reference</link>;
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1ac3c0fdcc3aa6eef0c58613446ad1f6f9">special</link>()<emphasis role="keyword">&#32;const</emphasis>
69 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a7972ab2ee951dd9111fcd7385a024f32">m_red</link>;&#32;}
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a18129e83eaa91d81c9ce3aa0c7d06f76">metadata_const_reference</link>
72 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1af36285c21b1f67eedff682cf14099703">get_metadata</link>()<emphasis role="keyword">&#32;const</emphasis>
73 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a0bb6325cfa96c7db5980299e06ad2620">m_metadata</link>;&#32;}
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1aedb2fb7147503798176af1c6814bc2e7">metadata_reference</link>
76 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1afd69ee65953678e6ed10fd24d9d9e120">get_metadata</link>()
77 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a0bb6325cfa96c7db5980299e06ad2620">m_metadata</link>;&#32;}
78 
79 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BIN_SEARCH_TREE_TRACE_</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
81 &#32;&#32;&#32;&#32;&#32;&#32;trace()<emphasis role="keyword">&#32;const</emphasis>
82 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
83 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a8146ec1a8c5fd41b95aa092bdc0e7a90">m_value</link>)&#32;&lt;&lt;(<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a7972ab2ee951dd9111fcd7385a024f32">m_red</link>?&#32;<emphasis role="stringliteral">&quot;&#32;&lt;r&gt;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;&lt;b&gt;&#32;&quot;</emphasis>)&#32;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;(&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a0bb6325cfa96c7db5980299e06ad2620">m_metadata</link>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>;
85 &#32;&#32;&#32;&#32;&#32;&#32;}
86 <emphasis role="preprocessor">#endif</emphasis>
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a207ae4eb7712b3ff1db79a46c711f9ad">node_pointer</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a5d696cd01bb8ecf2a91d5d14d25c014a">m_p_left</link>;
89 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a207ae4eb7712b3ff1db79a46c711f9ad">node_pointer</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1af9761bf20dd52c98151f5048d9bd951b">m_p_right</link>;
90 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a207ae4eb7712b3ff1db79a46c711f9ad">node_pointer</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a4dccdc050f698c7035dcc4bd2d3f1f4b">m_p_parent</link>;
91 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1aa4942752510e88991be28dd286c1bfef">value_type</link>&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a8146ec1a8c5fd41b95aa092bdc0e7a90">m_value</link>;
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a7972ab2ee951dd9111fcd7385a024f32">m_red</link>;
93 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a53125deda1094c3f0ec0dc346e23b648">metadata_type</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a0bb6325cfa96c7db5980299e06ad2620">m_metadata</link>;
94 &#32;&#32;&#32;&#32;};
95 
96 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node__">rb_tree_node_</link>&lt;Value_Type,&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>,&#32;_Alloc&gt;
98 &#32;&#32;&#32;&#32;{
99 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a776533279fbb39f62131525d571bbd55">value_type</link>;
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a99936424c13513c995ecec38af7c255d">metadata_type</link>;
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, rb_tree_node_&gt;::pointer</link>
104 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a1a97083047a19b6dd17eb17b71fb436f">node_pointer</link>;
105 
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a634e475afa0f1e4ded90048163c42fe0">special</link>()<emphasis role="keyword">&#32;const</emphasis>
108 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a7972ab2ee951dd9111fcd7385a024f32">m_red</link>;&#32;}
109 
110 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BIN_SEARCH_TREE_TRACE_</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;trace()<emphasis role="keyword">&#32;const</emphasis>
113 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a8146ec1a8c5fd41b95aa092bdc0e7a90">m_value</link>)&#32;&lt;&lt;(<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___1a7972ab2ee951dd9111fcd7385a024f32">m_red</link>?&#32;<emphasis role="stringliteral">&quot;&#32;&lt;r&gt;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;&lt;b&gt;&#32;&quot;</emphasis>);&#32;}
114 <emphasis role="preprocessor">#endif&#32;</emphasis>
115 
116 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a1a97083047a19b6dd17eb17b71fb436f">node_pointer</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a5f43c8062cb3da9e6fec64a5e03c6c0c">m_p_left</link>;
117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a1a97083047a19b6dd17eb17b71fb436f">node_pointer</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a0ff3ea599d3863c9b9b362d42775084c">m_p_right</link>;
118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a1a97083047a19b6dd17eb17b71fb436f">node_pointer</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1aad4d7270e78b6360f03bc122a288872f">m_p_parent</link>;
119 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a776533279fbb39f62131525d571bbd55">value_type</link>&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a406cc6577ff6586fcbd8d29b43a05f59">m_value</link>;
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a5118edf8be3152e130d948657c56c256">m_red</link>;
121 &#32;&#32;&#32;&#32;};
122 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
123 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
124 
125 <emphasis role="preprocessor">#endif&#32;</emphasis>
</programlisting></section>
