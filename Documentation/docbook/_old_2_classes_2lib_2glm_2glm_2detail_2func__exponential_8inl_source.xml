<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2detail_2func__exponential_8inl_source" xml:lang="en-US">
<title>func_exponential.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/detail/func_exponential.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
3 
4 <emphasis role="preprocessor">#include&#32;&quot;../vector_relational.hpp&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2glm_2glm_2detail_2__vectorize_8hpp">_vectorize.hpp</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;cassert&gt;</emphasis>
9 
10 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
11 <emphasis role="keyword">namespace&#32;</emphasis>detail
12 {
13 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_HAS_CXX11_STL</emphasis>
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::log2;
15 <emphasis role="preprocessor">#&#32;&#32;&#32;else</emphasis>
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a18af743c2cec4baeee9ffb27999ddaad">log2</link>(genType&#32;Value)
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::log(Value)&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1.4426950408889634073599246810019);
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
21 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
22 
23 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isFloat,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_log2
25 &#32;&#32;&#32;&#32;{
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__log2_1a6764283ce6db36e96a1342b8c4bf6808">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559,&#32;<emphasis role="stringliteral">&quot;&apos;log2&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs.&#32;Include&#32;&lt;glm/gtc/integer.hpp&gt;&#32;for&#32;integer&#32;inputs.&quot;</emphasis>);
29 
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a18af743c2cec4baeee9ffb27999ddaad">log2</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
32 &#32;&#32;&#32;&#32;};
33 
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
35 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_sqrt
36 &#32;&#32;&#32;&#32;{
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__sqrt_1a36931768ae96c81e722c199141fcf4cf">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(std::sqrt,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
41 &#32;&#32;&#32;&#32;};
42 
43 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
44 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_inversesqrt
45 &#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__inversesqrt_1a0dd0f32e60f454dc0b6e020e537b8030">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
50 &#32;&#32;&#32;&#32;};
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
53 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_inversesqrt&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;float,&#32;<link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a3b763a530cd95d31fb1ea64574700061">lowp</link>,&#32;Aligned&gt;
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__inversesqrt_3_01_l_00_01float_00_01lowp_00_01_aligned_01_4_1a9d073a882881ef40582d5f1b6151d39c">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>&#32;tmp(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>&#32;xhalf(tmp&#32;*&#32;0.5f);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint, lowp&gt;</link>*&#32;p&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_structglm_1_1vec">vec&lt;L, uint, lowp&gt;</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>*<emphasis role="keyword">&gt;</emphasis>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>));
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint, lowp&gt;</link>&#32;i&#32;=&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint, lowp&gt;</link>(0x5f375a86)&#32;-&#32;(*p&#32;&gt;&gt;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint, lowp&gt;</link>(1));
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>*&#32;ptmp&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_structglm_1_1vec">vec&lt;L, float, lowp&gt;</link>*<emphasis role="keyword">&gt;</emphasis>(&amp;i);
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;*ptmp;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;*&#32;(1.5f&#32;-&#32;xhalf&#32;*&#32;tmp&#32;*&#32;tmp);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tmp;
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
66 &#32;&#32;&#32;&#32;};
67 }<emphasis role="comment">//namespace&#32;detail</emphasis>
68 
69 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pow</emphasis>
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::pow;
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
72 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a490c36eca6590103f32eb0520a4c11f6">pow</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;base,&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;exponent)
73 &#32;&#32;&#32;&#32;{
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::functor2&lt;vec,&#32;L,&#32;T,&#32;Q&gt;::call(pow,&#32;base,&#32;exponent);
75 &#32;&#32;&#32;&#32;}
76 
77 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;exp</emphasis>
78 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::exp;
79 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
80 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
81 &#32;&#32;&#32;&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::functor1&lt;vec,&#32;L,&#32;T,&#32;T,&#32;Q&gt;::call(exp,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
83 &#32;&#32;&#32;&#32;}
84 
85 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;log</emphasis>
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::log;
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
88 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a25a8d722e743f3a219e5f0bf0bb867c7">log</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
89 &#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::functor1&lt;vec,&#32;L,&#32;T,&#32;T,&#32;Q&gt;::call(log,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
91 &#32;&#32;&#32;&#32;}
92 
93 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_HAS_CXX11_STL</emphasis>
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::exp2;
95 <emphasis role="preprocessor">#&#32;&#32;&#32;else</emphasis>
96 &#32;&#32;&#32;&#32;<emphasis role="comment">//exp2,&#32;ln2&#32;=&#32;0.69314718055994530941723212145818f</emphasis>
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
98 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a81df8f8ac36a83137eb6e6451c55f1ab">exp2</link>(genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
99 &#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;genType&gt;::is_iec559,&#32;<emphasis role="stringliteral">&quot;&apos;exp2&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::exp(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.69314718055994530941723212145818)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
103 &#32;&#32;&#32;&#32;}
104 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
105 
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
107 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a81df8f8ac36a83137eb6e6451c55f1ab">exp2</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
108 &#32;&#32;&#32;&#32;{
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::functor1&lt;vec,&#32;L,&#32;T,&#32;T,&#32;Q&gt;::call(<link linkend="__classes_2lib_2include_2tgmath_8h_1a81df8f8ac36a83137eb6e6451c55f1ab">exp2</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
110 &#32;&#32;&#32;&#32;}
111 
112 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;log2,&#32;ln2&#32;=&#32;0.69314718055994530941723212145818f</emphasis>
113 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
114 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a18af743c2cec4baeee9ffb27999ddaad">log2</link>(genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
115 &#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a18af743c2cec4baeee9ffb27999ddaad">log2</link>(vec&lt;1,&#32;genType&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)).x;
117 &#32;&#32;&#32;&#32;}
118 
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
120 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a18af743c2cec4baeee9ffb27999ddaad">log2</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
121 &#32;&#32;&#32;&#32;{
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_log2&lt;L,&#32;T,&#32;Q,&#32;std::numeric_limits&lt;T&gt;::is_iec559,&#32;<link linkend="_structglm_1_1detail_1_1is__aligned_1a50a4715cd385591476c2c7fe84d6c58c">detail::is_aligned&lt;Q&gt;::value</link>&gt;::call(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
123 &#32;&#32;&#32;&#32;}
124 
125 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sqrt</emphasis>
126 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::sqrt;
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
128 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
129 &#32;&#32;&#32;&#32;{
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559,&#32;<emphasis role="stringliteral">&quot;&apos;sqrt&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_sqrt&lt;L,&#32;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
132 &#32;&#32;&#32;&#32;}
133 
134 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;inversesqrt</emphasis>
135 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
136 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_namespaceglm_1a5e3dd2bba414db15477d43ca9d71acf5">inversesqrt</link>(genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
137 &#32;&#32;&#32;&#32;{
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
139 &#32;&#32;&#32;&#32;}
140 
141 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
142 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a5e3dd2bba414db15477d43ca9d71acf5">inversesqrt</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
143 &#32;&#32;&#32;&#32;{
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559,&#32;<emphasis role="stringliteral">&quot;&apos;inversesqrt&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_inversesqrt&lt;L,&#32;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
146 &#32;&#32;&#32;&#32;}
147 }<emphasis role="comment">//namespace&#32;glm</emphasis>
148 
149 <emphasis role="preprocessor">#if&#32;GLM_CONFIG_SIMD&#32;==&#32;GLM_ENABLE</emphasis>
150 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&quot;func_exponential_simd.inl&quot;</emphasis>
151 <emphasis role="preprocessor">#endif</emphasis>
152 
</programlisting></section>
