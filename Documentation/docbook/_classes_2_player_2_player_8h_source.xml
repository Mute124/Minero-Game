<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2_player_2_player_8h_source" xml:lang="en-US">
<title>Player.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/Player/Player.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">&#32;&#32;&#32;&#32;Todo&#32;:</emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Split&#32;this&#32;class&#32;into&#32;two.&#32;one&#32;for&#32;the&#32;controller,&#32;and&#32;the&#32;other&#32;for&#32;the&#32;actual&#32;playermodel</emphasis>
4 <emphasis role="comment">*/</emphasis>
5 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;../lib/raylib.h&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&quot;../lib/raymath.h&quot;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&quot;../lib/rcamera.h&quot;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&quot;../Monobehavior.h&quot;</emphasis>
10 
11 <emphasis role="preprocessor">#include&#32;&quot;../Gameobj.h&quot;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&quot;../Flashlight.h&quot;</emphasis>
13 <emphasis role="preprocessor">#include&#32;&quot;../Block.h&quot;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2_player_2_camera_comp_8h">CameraComp.h</link>&quot;</emphasis>
15 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__player_health_comp_8h">PlayerHealthComp.h</link>&quot;</emphasis>
16 
17 <emphasis role="preprocessor">#include&#32;&lt;thread&gt;</emphasis>
18 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
19 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
20 
21 <emphasis role="preprocessor">#define&#32;PLAYER_HP&#32;100&#32;</emphasis>
22 
23 
24 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
25 {
26 &#32;&#32;&#32;&#32;<link linkend="__classes_2_player_2_player_8h_1a22d76c1d3636d359b0d349e0649f906aaf035d51f67aeef4164d136b4f7fabe76">Action_Idle</link>&#32;=&#32;0,
27 &#32;&#32;&#32;&#32;<link linkend="__classes_2_player_2_player_8h_1a22d76c1d3636d359b0d349e0649f906aa36aa6a2428dc29debae97dad206f76b8">Action_Walk</link>,
28 &#32;&#32;&#32;&#32;<link linkend="__classes_2_player_2_player_8h_1a22d76c1d3636d359b0d349e0649f906aabc4af11d4da84ecc3f1351082a91708b">Action_Break</link>,
29 &#32;&#32;&#32;&#32;<link linkend="__classes_2_player_2_player_8h_1a22d76c1d3636d359b0d349e0649f906aa3bc6c2db6f9d4b27ad6cde9d541d1b50">Action_Fly</link>,
30 &#32;&#32;&#32;&#32;<link linkend="__classes_2_player_2_player_8h_1a22d76c1d3636d359b0d349e0649f906aa6af7f0c07472dc664376e26b0b511d6c">Action_Place</link>
31 }&#32;<link linkend="__classes_2_player_2_player_8h_1a22d76c1d3636d359b0d349e0649f906a">Player_Action</link>;
32 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_player">Player</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_game_object">GameObject</link>,&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_camera_comp">CameraComp</link>
33 {
34 
35 <emphasis role="keyword">public</emphasis>:
36 &#32;&#32;&#32;&#32;
37 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_class_player_1a30901f2e93fdbf94461998a54a2d98bd">getPosition</link>()
38 &#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;m_position;
40 &#32;&#32;&#32;&#32;}
41 
42 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;main&#32;constructor</emphasis>
43 &#32;&#32;&#32;&#32;<link linkend="_class_player_1a54b1c35a0f11dc9689c2491138866d7e">Player</link>(<link linkend="_struct_vector3">Vector3</link>&#32;StartingPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;MaxHP,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_model">Model</link>&#32;<link linkend="_class_player_1ad741a3f0f502629a799be7579fc4782f">model</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35">CameraMode</link>)
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;m_position(StartingPos),
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_max(MaxHP),
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ad741a3f0f502629a799be7579fc4782f">model</link>(<link linkend="_class_player_1ad741a3f0f502629a799be7579fc4782f">model</link>),
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a3cfc90ca4bd6f731b43c60788b8243e9">cameraMode</link>(<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35">CameraMode</link>),
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1af3ca2b2456d3c7ef8bd0c1fb30e04ee7">Footstep_Grass</link>(<link linkend="__classes_2lib_2raudio_8c_1a936dd7bf9791a0aa1de82d3619c5b512">LoadSound</link>(<emphasis role="stringliteral">&quot;resources/audio/footsteps_player_grass_01.ogg&quot;</emphasis>)),
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>(<link linkend="_class_game_object_1a4cc6227274e96445bfd5626a1a966e02">RegisterObj</link>(this)),
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_camera_comp">CameraComp</link>((<link linkend="_class_camera_data">CameraData</link>){
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartingPos,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0.0f,&#32;2.0f,&#32;0.0f},
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0.0f,&#32;1.0f,&#32;0.0f},
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;45.0f,
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a2d3e98136f7933519abb019705f0d2d8acbb2df9c79c81eae7447f379bac5aa7e">CAMERA_PERSPECTIVE</link>})
56 &#32;&#32;&#32;&#32;{
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_player_1aaf6758dbf9f51c257c859d0ac5dcda3a">playerLookPointer</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_ray">Ray</link>();
59 
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IdentifySelf();
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a4f3ca7d860967d3e5328ad7820ad44c0">playerlist</link>.push_back(<emphasis role="keyword">this</emphasis>);
62 &#32;&#32;&#32;&#32;};
63 
69 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a109c45848d8ff2cb1a876cba11c53461">CheckInput</link>()
70 &#32;&#32;&#32;&#32;{
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_8h_1a14dab2feeb947c7810c3b8830ffee233">WindowShouldClose</link>())
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
74 &#32;&#32;&#32;&#32;}
75 
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1ac28ab0304e47d45ca3f27d38b11eb88e">onDestroy</link>()<emphasis role="keyword">&#32;const&#32;override</emphasis>
77 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
79 &#32;&#32;&#32;&#32;};
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a97b467a6603d616f5c11aae2b3e42d80">onUpdate</link>()<emphasis role="keyword">&#32;override</emphasis>
82 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_camera_comp_1a55797babc077b9a5d53ca9cadb6abc44">setPosition</link>(this-&gt;<link linkend="_class_camera_comp_1a2671cc3cfd8b77fdd4af9e51a86c1257">getSelfCamera</link>().<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>);
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1aaf6758dbf9f51c257c859d0ac5dcda3a">playerLookPointer</link>&#32;=&#32;&amp;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>;
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>.<link linkend="_struct_ray_1a8dcf55a86abd8b716a0f4be6900ac51b">position</link>&#32;=&#32;this-&gt;<link linkend="_class_player_1a30d4c29b6fc3a8af2f9231d71d13bd1f">GetPosition</link>();
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>.<link linkend="_struct_ray_1ac502377212f9b63774baf8a3f984d639">direction</link>&#32;=&#32;this-&gt;<link linkend="_class_camera_comp_1a4a02ea38958a712e526ff1ef074160cf">getTarget</link>();
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CheckForBlockPlacement(<link linkend="__classes_2lib_2raylib_8h_1ac1ec3647c005eacad401b06e7e18f711a3c2e62b97b30d850c5539d0f3a6d0958">MouseButton::MOUSE_BUTTON_LEFT</link>,&#32;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>);
88 &#32;&#32;&#32;&#32;};
89 
90 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1ab4ac6aa46f8aa40a9cd1926eccae0e6c">onCollision</link>()<emphasis role="keyword">&#32;override</emphasis>{};
91 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1ad391ebbe22e4637a7415bb7664e9bcb7">GetId</link>()<emphasis role="keyword">&#32;const&#32;override</emphasis>
92 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;
94 &#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;&#32;&#32;<link linkend="_struct_bounding_box">BoundingBox</link>&#32;<link linkend="_class_player_1a56b315756e6132d3d10f1a127420d9a7">GetBoundingBox</link>()<emphasis role="keyword">&#32;override</emphasis>
97 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;Box;
99 &#32;&#32;&#32;&#32;};
100 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sends&#32;player&#32;data&#32;to&#32;the&#32;games&#32;render</emphasis>
101 
102 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a1aba30ecad0d924e5759cebb54951f34">PlayFootsteps</link>()
103 &#32;&#32;&#32;&#32;{
104 &#32;&#32;&#32;&#32;}
105 
106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a5b60ad157bb1e8debca89ed6903ca2a4">Draw</link>()<emphasis role="keyword">&#32;override</emphasis>
107 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a3cfc90ca4bd6f731b43c60788b8243e9">cameraMode</link>&#32;!=&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a7f979c63ce2ee9127eb5d69986bbb2f9">CAMERA_FIRST_PERSON</link>)
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_class_player_1a2fa19cf971aa9a70df64432e40fca808">doDraw</link>)
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1aa5550a8579e522a3532b466fe08727aa">DrawModel</link>(<link linkend="_class_player_1ad741a3f0f502629a799be7579fc4782f">model</link>,&#32;this-&gt;<link linkend="_class_player_1a30901f2e93fdbf94461998a54a2d98bd">getPosition</link>(),&#32;0.2f,&#32;<link linkend="__classes_2lib_2raylib_8h_1acfbc006ea433ad708fdee3e82996e721">GREEN</link>);
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;empty&#32;because&#32;it&#32;shouldnt&#32;draw&#32;anything</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO&#32;:&#32;Create&#32;Health&#32;Bar&#32;using&#32;the&#32;PlayerHealthComp</emphasis>
121 &#32;&#32;&#32;&#32;}
122 
123 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_ray">Ray</link>&#32;*<link linkend="_class_player_1ab73e96415fd14e95c06c43708ea8d42b">GetLook</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
124 &#32;&#32;&#32;&#32;{
125 &#32;&#32;&#32;&#32;}
126 
127 &#32;&#32;&#32;&#32;<link linkend="_struct_ray">Ray</link>&#32;*<link linkend="_class_player_1acd1025ecbae445395e2695a40515eba3">GetSelfLook</link>()
128 &#32;&#32;&#32;&#32;{
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_class_player_1aaf6758dbf9f51c257c859d0ac5dcda3a">playerLookPointer</link>;
130 &#32;&#32;&#32;&#32;}
131 
132 &#32;&#32;&#32;&#32;<link linkend="_struct_ray">Ray</link>&#32;<link linkend="_class_player_1a25a32369625bcea10c45553addca7b64">GetSelfLookPointerless</link>()
133 &#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>;
135 &#32;&#32;&#32;&#32;}
136 
137 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_class_player_1a30d4c29b6fc3a8af2f9231d71d13bd1f">GetPosition</link>()<emphasis role="keyword">&#32;override</emphasis>
138 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_class_player_1a30901f2e93fdbf94461998a54a2d98bd">getPosition</link>();
140 &#32;&#32;&#32;&#32;}
141 
142 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a001baf34454e0ff36c89335027c41810">SetPosition</link>(<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>)
143 &#32;&#32;&#32;&#32;{
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;m_position&#32;=&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>;
146 &#32;&#32;&#32;&#32;}
147 
148 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a3c63d520471cf7d568875eb665cc9259">SetCameraMode</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)
149 &#32;&#32;&#32;&#32;{
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_player_1a3cfc90ca4bd6f731b43c60788b8243e9">cameraMode</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>;
151 &#32;&#32;&#32;&#32;}
152 
153 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1ab7cec3fc25732dd95d37bba35b8adac7">setDrawCondition</link>(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)
154 &#32;&#32;&#32;&#32;{
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_player_1a2fa19cf971aa9a70df64432e40fca808">doDraw</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
156 &#32;&#32;&#32;&#32;}
157 
158 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;do&#32;not&#32;fucking&#32;touch&#32;this</emphasis>
159 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_player_1a749d2c00e1fe0f5c2746f7505a58c062">~Player</link>()
160 &#32;&#32;&#32;&#32;{
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
163 &#32;&#32;&#32;&#32;}
164 
165 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1ac2d8d33d40942c330b122c10438bcde0">GetType</link>()<emphasis role="keyword">&#32;const&#32;override</emphasis>
166 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3ade5dc3e0dbd007d995ed3e37bde5ce7e">PLAYER</link>;&#32;<emphasis role="comment">//&#32;returns&#32;the&#32;player&#32;obj&#32;type</emphasis>
168 &#32;&#32;&#32;&#32;}
169 
170 &#32;&#32;&#32;&#32;<link linkend="_struct_model">Model</link>&#32;<link linkend="_class_player_1ad741a3f0f502629a799be7579fc4782f">model</link>;&#32;<emphasis role="comment">//&#32;Player&#32;model</emphasis>
171 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1a3cfc90ca4bd6f731b43c60788b8243e9">cameraMode</link>;
172 
173 &#32;&#32;&#32;&#32;<link linkend="_struct_ray">Ray</link>&#32;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>;
174 &#32;&#32;&#32;&#32;<link linkend="_struct_ray">Ray</link>&#32;*<link linkend="_class_player_1aaf6758dbf9f51c257c859d0ac5dcda3a">playerLookPointer</link>&#32;=&#32;&amp;<link linkend="_class_player_1abba07e7df080aeceb044411a9f461e11">playerlook</link>;
175 
176 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sound&#32;Loading</emphasis>
177 &#32;&#32;&#32;&#32;<link linkend="_struct_sound">Sound</link>&#32;<link linkend="_class_player_1af3ca2b2456d3c7ef8bd0c1fb30e04ee7">Footstep_Grass</link>&#32;=&#32;<link linkend="__classes_2lib_2raudio_8c_1a936dd7bf9791a0aa1de82d3619c5b512">LoadSound</link>(<emphasis role="stringliteral">&quot;resources/audio/footsteps_player_grass_01.ogg&quot;</emphasis>);
178 
179 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_player_1a2fa19cf971aa9a70df64432e40fca808">doDraw</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
180 
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class_player">Player</link>&#32;*<link linkend="_class_player_1a30c9cd36bc62631600d5f29aa5378ab5">GetPlayer</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
182 &#32;&#32;&#32;&#32;{
183 
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_player_1a4f3ca7d860967d3e5328ad7820ad44c0">playerlist</link>[<emphasis role="keywordtype">id</emphasis>&#32;-&#32;1];
185 &#32;&#32;&#32;&#32;}
186 
187 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a7c400f4a7ec2b2a43f0dcbaac8afaa45">SetPositionFromId</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<link linkend="_struct_vector3">Vector3</link>&#32;newPosition)
188 &#32;&#32;&#32;&#32;{
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a4f3ca7d860967d3e5328ad7820ad44c0">playerlist</link>[<emphasis role="keywordtype">id</emphasis>&#32;-&#32;1]-&gt;SetPosition(newPosition);
190 &#32;&#32;&#32;&#32;}
191 
192 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1a9bb806b0f0bbc6accb84420fe41dc827">getInternalPlayerId</link>()
193 &#32;&#32;&#32;&#32;{
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;internalplayerid;
195 &#32;&#32;&#32;&#32;}
196 
197 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a01f993f0d5c54503c49f729d40c98d78">setXRotation</link>()
198 &#32;&#32;&#32;&#32;{
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;model.<link linkend="_struct_model_1aab39d4fe4b3b9399a24377168d6c0f0a">transform</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a5140b71e1a329341c96a89d2f49ecc64">MatrixRotateX</link>(0.0001f&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)<link linkend="_class_global_1_1_time_1ab150ebf0a368825fa18abc4bf98cb25b">Global::Time::GetGameTime</link>());
200 &#32;&#32;&#32;&#32;}
201 
202 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;std::vector&lt;Player&#32;*&gt;&#32;<link linkend="_class_player_1a4f3ca7d860967d3e5328ad7820ad44c0">playerlist</link>;
203 
204 &#32;&#32;&#32;&#32;<link linkend="_class_player_health_comp">PlayerHealthComp</link>&#32;<link linkend="_class_player_1a6a3bef0b0387c4d6a9e8540913b42257">healthComp</link>;
205 
206 <emphasis role="keyword">private</emphasis>:
207 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;IdentifySelf()
208 &#32;&#32;&#32;&#32;{
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;internalplayerid&#32;=&#32;<link linkend="_class_player_1a4f3ca7d860967d3e5328ad7820ad44c0">playerlist</link>.size()&#32;+&#32;1;
210 &#32;&#32;&#32;&#32;}
211 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CheckForBlockPlacement(<link linkend="__classes_2lib_2raylib_8h_1ac1ec3647c005eacad401b06e7e18f711">MouseButton</link>&#32;Trigger,&#32;<link linkend="_struct_ray">Ray</link>&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>)
213 &#32;&#32;&#32;&#32;{
214 
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1ad2cec5ca39659dd5242e69843ecb638a">IsMouseButtonPressed</link>(<link linkend="__classes_2lib_2raylib_8h_1afb42537b362f394ed4db90fd34c87330">MOUSE_LEFT_BUTTON</link>))
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
217 
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;GameObject&#32;*&gt;&#32;objects&#32;=&#32;<link linkend="_class_game_object_1a27c2968870d23732a75b36ccdc7a983f">RequestObjectList</link>();
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;through&#32;all&#32;the&#32;objects&#32;and&#32;check&#32;for&#32;a&#32;collision,&#32;then&#32;poof!</emphasis>
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;&amp;obj&#32;:&#32;objects)
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj-&gt;GetType()&#32;==&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3a02fc27068fe9a3c151ffcc08ec5bb65d">BLOCK</link>)
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_block">Block</link>&#32;*block&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_block">Block</link>&#32;*<emphasis role="keyword">&gt;</emphasis>(obj);
225 
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;a&#32;collision&#32;between&#32;the&#32;mouse&#32;ray&#32;and&#32;the&#32;block&apos;s</emphasis>
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bounding&#32;box</emphasis>
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_global_1_1_math_1ae977ca8f18ed37e3db166207a4143b9f">Global::Math::CheckCollisionRayBox</link>(<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>,&#32;block-&gt;<link linkend="_class_block_1af32073a6bc563183a9f4389ff350b24b">GetBounds</link>(),&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Remove&#32;the&#32;block&#32;from&#32;the&#32;vector&#32;and&#32;free&#32;its&#32;memory</emphasis>
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;GameObject&#32;*&gt;::iterator&#32;it&#32;=
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>(objects.begin(),&#32;objects.end(),&#32;obj);
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;objects.end())
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objects.erase(it);
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
242 &#32;&#32;&#32;&#32;}
243 
244 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CameraComp&#32;cameraComponent;</emphasis>
245 &#32;&#32;&#32;&#32;<link linkend="_struct_ray_collision">RayCollision</link>&#32;collision&#32;=&#32;{0};
246 
247 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;KeyboardKey&#32;*CurrentKeyDown;</emphasis>
248 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;m_position;
249 &#32;&#32;&#32;&#32;<link linkend="_struct_mesh">Mesh</link>&#32;m_mesh;
250 
251 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Global::Transform&#32;transform;</emphasis>
252 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;velocity;
253 &#32;&#32;&#32;&#32;<link linkend="_struct_bounding_box">BoundingBox</link>&#32;Box&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1a47c94fe6f388b578e93bd221ea6764fd">GetModelBoundingBox</link>(this-&gt;model);
254 
255 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_max&#32;=&#32;<link linkend="__old_2_classes_2_player_2_player_8h_1ab79bf1ced3b25083a255fb0748b0b31c">PLAYER_HP</link>;&#32;<emphasis role="comment">//&#32;Max&#32;HP&#32;player&#32;can&#32;have</emphasis>
256 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_current&#32;=&#32;m_max;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;current&#32;HP&#32;from&#32;max.</emphasis>
257 
258 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;internalplayerid;
259 };
</programlisting></section>
