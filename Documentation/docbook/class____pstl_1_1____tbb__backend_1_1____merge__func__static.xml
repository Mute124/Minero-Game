<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static" xml:lang="en-US">
<title>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt; Class Template Reference</title>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;parallel_backend_tbb.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a6d2ba39c5ad8660d5777de8bee1060d4">__merge_func_static</link> (_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a1dc95885cb49d40281fc153091c09e0f">operator()</link> (<link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> *__self)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a6d2ba39c5ad8660d5777de8bee1060d4">__merge_func_static</link> (_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a628b1474d5c9862ced88219cb403c1d7">operator()</link> (<link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> *__self)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a6d2ba39c5ad8660d5777de8bee1060d4">__merge_func_static</link> (_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a628b1474d5c9862ced88219cb403c1d7">operator()</link> (<link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> *__self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a6d2ba39c5ad8660d5777de8bee1060d4"/><section>
    <title>__merge_func_static()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__merge_func_static</primary><secondary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary><secondary>__merge_func_static</secondary></indexterm>
<computeroutput>template&lt;typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static</link>&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;::__merge_func_static (_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a6d2ba39c5ad8660d5777de8bee1060d4"/><section>
    <title>__merge_func_static()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__merge_func_static</primary><secondary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary><secondary>__merge_func_static</secondary></indexterm>
<computeroutput>template&lt;typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static</link>&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;::__merge_func_static (_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a6d2ba39c5ad8660d5777de8bee1060d4"/><section>
    <title>__merge_func_static()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__merge_func_static</primary><secondary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary><secondary>__merge_func_static</secondary></indexterm>
<computeroutput>template&lt;typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static</link>&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;::__merge_func_static (_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a1dc95885cb49d40281fc153091c09e0f"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename __M_Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static</link>&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, __M_Compare, _LeafMerge &gt;::operator() (<link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * __self)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____pstl_1_1____tbb__backend_1_1____merge__func__static_a1dc95885cb49d40281fc153091c09e0f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a628b1474d5c9862ced88219cb403c1d7"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static</link>&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;::operator() (<link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * __self)</computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____tbb__backend_1_1____merge__func__static_1a628b1474d5c9862ced88219cb403c1d7"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static</link>&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;::operator() (<link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link> * __self)</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/<link linkend="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h">parallel_backend_tbb.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/<link linkend="_lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h">parallel_backend_tbb.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h">parallel_backend_tbb.h</link></section>
</section>
