<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2pthread_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/pthread.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/pthread.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stddef.h&gt;<?linebreak?>#include &lt;errno.h&gt;<?linebreak?>#include &lt;sys/types.h&gt;<?linebreak?>#include &lt;process.h&gt;<?linebreak?>#include &lt;limits.h&gt;<?linebreak?>#include &lt;signal.h&gt;<?linebreak?>#include &lt;time.h&gt;<?linebreak?>#include &lt;sys/timeb.h&gt;<?linebreak?>#include &quot;pthread_compat.h&quot;<?linebreak?>#include &lt;pthread_unistd.h&gt;<?linebreak?></programlisting>Include dependency graph for pthread.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2pthread_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct__pthread__cleanup">_pthread_cleanup</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structsched__param">sched_param</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structpthread__attr__t">pthread_attr_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3d3efaabab82a5745e8b8284b9ffeb7e">__WINPTHREADS_VERSION_MAJOR</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad3f02de6ad19d67387190bd00d272b7e">__WINPTHREADS_VERSION_MINOR</link>&#160;&#160;&#160;5</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9d877de7be93f6d57307b33802d36f6a">__WINPTHREADS_VERSION_PATCHLEVEL</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aec531ff36289c8ca28231fd1fbae14af">__WINPTHREADS_VERSION</link>&#160;&#160;&#160;0x00050000</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a1fb15d2e0ac4220897f31214fa637fec">RWLS_PER_THREAD</link>&#160;&#160;&#160;8</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a597718e59a8fc9c4d4ab63f5a34e28b1">ETIMEDOUT</link>&#160;&#160;&#160;138</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link>&#160;&#160;&#160;129</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4a3a0b3605fd3b2336455062ee8e25f0">EWOULDBLOCK</link>&#160;&#160;&#160;140</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a6c661332f782dcebc87b878990424b4c">PTHREAD_CANCEL_DISABLE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aaf18882a8a6b82c7b7849a645f4445ef">PTHREAD_CANCEL_ENABLE</link>&#160;&#160;&#160;0x01</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7559901d88e4d3b8100b407e164cd75e">PTHREAD_CANCEL_DEFERRED</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aae774738da39ed214c9b01f342222686">PTHREAD_CANCEL_ASYNCHRONOUS</link>&#160;&#160;&#160;0x02</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1afb10d234d831c7b57768d62786748bc7">PTHREAD_CREATE_JOINABLE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a391c5eb0f6b5febc48710d0be3f62394">PTHREAD_CREATE_DETACHED</link>&#160;&#160;&#160;0x04</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad45abe03c8232518b6995e73172fe053">PTHREAD_EXPLICIT_SCHED</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a470fccc57c4d7c3846e446a17cd23573">PTHREAD_INHERIT_SCHED</link>&#160;&#160;&#160;0x08</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aeab18be4f4ee13db4b0b65c6768fb539">PTHREAD_SCOPE_PROCESS</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab754f4339f76c46b8f57413c03e8ec65">PTHREAD_SCOPE_SYSTEM</link>&#160;&#160;&#160;0x10</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a32f4c20846c0e1ad93527ddc7e648e99">PTHREAD_DEFAULT_ATTR</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1aaf18882a8a6b82c7b7849a645f4445ef">PTHREAD_CANCEL_ENABLE</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a17ddda04a6c1ee32116c49c85e2ac4ae">PTHREAD_CANCELED</link>&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *) (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link>) 0xDEADBEEF)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a239bbe61d173df33c75356eea7315191">_PTHREAD_NULL_THREAD</link>&#160;&#160;&#160;((<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link>) 0)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a59e22497b65fc305ddb5cea8b4990b51">PTHREAD_ONCE_INIT</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a1d96b13a4ba5975d724c5fe13788a957">PTHREAD_DESTRUCTOR_ITERATIONS</link>&#160;&#160;&#160;256</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0a23e66e087bcf5c253b9b2746f19a64">PTHREAD_KEYS_MAX</link>&#160;&#160;&#160;(1&lt;&lt;20)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf">PTHREAD_MUTEX_NORMAL</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aaf502496651f95b06be861af7902cb23">PTHREAD_MUTEX_ERRORCHECK</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645">PTHREAD_MUTEX_RECURSIVE</link>&#160;&#160;&#160;2</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0">PTHREAD_MUTEX_DEFAULT</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf">PTHREAD_MUTEX_NORMAL</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a371e047590372db7d6badabd4cc2f2ee">PTHREAD_MUTEX_SHARED</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9326616d9807e548a54f6fee2cb9fa39">PTHREAD_MUTEX_PRIVATE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a8c1426a72025b27d9726580ac0e8404f">PTHREAD_PRIO_NONE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0087e0ca82fd36e6c15f4c8ad443dbfc">PTHREAD_PRIO_INHERIT</link>&#160;&#160;&#160;8</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a65da4c842cd4287f43d2f69ad5a5470b">PTHREAD_PRIO_PROTECT</link>&#160;&#160;&#160;16</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a593d8e17102642595d40680bb5ec3d5c">PTHREAD_PRIO_MULT</link>&#160;&#160;&#160;32</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a07f3670a510cdb93233e84e1a0b50e89">PTHREAD_PROCESS_SHARED</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a443f2f512de9324bf77625041ecb04f4">PTHREAD_PROCESS_PRIVATE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a19223e28eb0b44c645adf508acf580d6">PTHREAD_MUTEX_FAST_NP</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf">PTHREAD_MUTEX_NORMAL</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7295851e8975e7c169bc6fefe14e31ef">PTHREAD_MUTEX_TIMED_NP</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a19223e28eb0b44c645adf508acf580d6">PTHREAD_MUTEX_FAST_NP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4dfc7dd2077926adcb921cb967d7619a">PTHREAD_MUTEX_ADAPTIVE_NP</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a19223e28eb0b44c645adf508acf580d6">PTHREAD_MUTEX_FAST_NP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a103cfe33413e92a1c25cb17b943e2edb">PTHREAD_MUTEX_ERRORCHECK_NP</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1aaf502496651f95b06be861af7902cb23">PTHREAD_MUTEX_ERRORCHECK</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a24a251d355bd6ed4c72963740a579cc5">PTHREAD_MUTEX_RECURSIVE_NP</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645">PTHREAD_MUTEX_RECURSIVE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a822c63bc662ad86cfb2dcec50edbb42b">PTHREAD_BARRIER_SERIAL_THREAD</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aa8da6dd77bf495343de66784c7d628a3">MAX_READ_LOCKS</link>&#160;&#160;&#160;(INT_MAX - 1)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a85e8ca664400153dfac56cdfacb13951">pthread_atfork</link>(F1,  <link linkend="__classes_2lib_2_smooth-_infinite-_voxel-_terrain-master_2_simplex_noise_b_p_library_8cpp_1a5368759862ac5fb38772b91eace1205c">F2</link>,  <link linkend="__classes_2lib_2_smooth-_infinite-_voxel-_terrain-master_2_simplex_noise_b_p_library_8cpp_1a79fc770a19406e6876ff9ffd6ce66f3d">F3</link>)&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0152315b6409902f16fc0fc30aace505">pthread_mutex_getprioceiling</link>(M,  P)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1af9b56d7f9712066e7aaac9ad60ac5090">pthread_mutex_setprioceiling</link>(M,  P)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2be0c75d00a5985670683a791b048474">pthread_getcpuclockid</link>(T,  <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a919e11b0f5429b3f2c06ddac309d5414">pthread_attr_getguardsize</link>(A,  S)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3fd547a28149ef93884257e97388459e">pthread_attr_setgaurdsize</link>(A,  S)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2d45a34c3f86bf2f8a1cfd41873ff37b">pthread_cleanup_push</link>(F,  A)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1afc1b1f5327168998f17d7d5767ae1572">pthread_cleanup_pop</link>(E)&#160;&#160;&#160;    (*<link linkend="__classes_2lib_2pthread_8h_1add685e25f063750fecead852c7299ce5">pthread_getclean</link>() = _pthread_cup.next, ((E) ? (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">_pthread_cup.func</link>((<link linkend="__classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4">pthread_once_t</link> *)_pthread_cup.arg)) : (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)0));}</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a44c9baaf6f3c286f76783265b4938881">SCHED_OTHER</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab998332c6538a029b4eed398b7a423da">SCHED_FIFO</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2a29482379f591144ace39cbd659a257">SCHED_RR</link>&#160;&#160;&#160;2</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aad6aa6c4f669f61f5d0b5b8df67b510e">SCHED_MIN</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a44c9baaf6f3c286f76783265b4938881">SCHED_OTHER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2e6e8c0d258a54bdfefde13a76311e59">SCHED_MAX</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a2a29482379f591144ace39cbd659a257">SCHED_RR</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf">PTHREAD_MUTEX_NORMAL</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aaf502496651f95b06be861af7902cb23">PTHREAD_MUTEX_ERRORCHECK</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645">PTHREAD_MUTEX_RECURSIVE</link>&#160;&#160;&#160;2</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link>&#160;&#160;&#160;-1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab36d4aabd467baa6c51b35d441997e75">GENERIC_ERRORCHECK_INITIALIZER</link>&#160;&#160;&#160;-2</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a98095573026942d56f1b095aab889a30">GENERIC_RECURSIVE_INITIALIZER</link>&#160;&#160;&#160;-3</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7a80447d8d58ea7b5c5ca8e7eb9366b3">GENERIC_NORMAL_INITIALIZER</link>&#160;&#160;&#160;-1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a84e55100366a6a8338a2af3b3f279686">PTHREAD_MUTEX_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a93186a549e7d7aace381171097da1823">PTHREAD_RECURSIVE_MUTEX_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1a98095573026942d56f1b095aab889a30">GENERIC_RECURSIVE_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ace0d1f1ec8dd8eadd769ff324153599d">PTHREAD_ERRORCHECK_MUTEX_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab36d4aabd467baa6c51b35d441997e75">GENERIC_ERRORCHECK_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4dacb2d0eda7276b5eb26aca5fb204f8">PTHREAD_NORMAL_MUTEX_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1a7a80447d8d58ea7b5c5ca8e7eb9366b3">GENERIC_NORMAL_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aa36e4990c3471bb56cc53c166086dfe7">PTHREAD_DEFAULT_MUTEX_INITIALIZER</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a4dacb2d0eda7276b5eb26aca5fb204f8">PTHREAD_NORMAL_MUTEX_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aa7b867fe46f3660283fcb356c4fcbbf0">PTHREAD_COND_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aa92fd7b492a8a5b31b2f8b3b6039c622">PTHREAD_RWLOCK_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad4620a03c26b4119bf642a7f53df4fb2">PTHREAD_SPINLOCK_INITIALIZER</link>&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1af7535c653a4628fc6b6f820c4099edf1">__clockid_t_defined</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a927f6ae16379576d638006c7498ac5d7">SIG_BLOCK</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5fcd73313a63dac2cc7eb3b654215250">SIG_UNBLOCK</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a37750b78b7ae75fe02ad26e70f6cc845">SIG_SETMASK</link>&#160;&#160;&#160;2</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab1dcb8bed4f0f3540e278a4932223ade">_POSIX_THREAD_DESTRUCTOR_ITERATIONS</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a1d96b13a4ba5975d724c5fe13788a957">PTHREAD_DESTRUCTOR_ITERATIONS</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1acfe1124183f47eb0a395e9115446ad51">_POSIX_THREAD_KEYS_MAX</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a0a23e66e087bcf5c253b9b2746f19a64">PTHREAD_KEYS_MAX</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab8f25dec585d6255fcf40b67db66c1c5">PTHREAD_THREADS_MAX</link>&#160;&#160;&#160;2019</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3463f30f1c9e21a1771c73ed61fa8526">_POSIX_SEM_NSEMS_MAX</link>&#160;&#160;&#160;256</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a829c888ff8820c37384a5531577cea33">SEM_NSEMS_MAX</link>&#160;&#160;&#160;1024</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a32aa97d0d555372012494039ecb549e0">_GTHREAD_USE_MUTEX_INIT_FUNC</link>&#160;&#160;&#160;1</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef long <link linkend="__old_2_classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4">pthread_once_t</link></para>
</listitem>
            <listitem><para>typedef unsigned <link linkend="__old_2_classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link></para>
</listitem>
            <listitem><para>typedef unsigned <link linkend="__old_2_classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="__old_2_classes_2lib_2pthread_8h_1a83657bf7064da5386d9df866335bae36">pthread_barrierattr_t</link></para>
</listitem>
            <listitem><para>typedef int <link linkend="__old_2_classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link></para>
</listitem>
            <listitem><para>typedef int <link linkend="__old_2_classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct__pthread__cleanup">_pthread_cleanup</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aeb5e61488fd871c5bf2280156330b844">_pthread_cleanup</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structpthread__attr__t">pthread_attr_t</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ac91b61e242024389af37f642e5b6ffa5">pthread_attr_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="__old_2_classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link></para>
</listitem>
            <listitem><para>typedef int <link linkend="__old_2_classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3d6dbf593876e112325fb0ffec4c1296">pthread_timechange_handler_np</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *dummy)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a6c5e5fd955d576e0e7bc430973623943">pthread_delay_np</link> (const struct timespec *interval)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4e6a0670be198551b6458ba3e3af3ebd">pthread_num_processors_np</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a02871566ac428be959ad377bcfa26a04">pthread_set_num_processors_np</link> (int n)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a6c8d40dba19ab44315a73fa45579e07c">sched_yield</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4c3046c4f2a21f421684222bb7b013fa">sched_get_priority_min</link> (int pol)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4adca5eec5f7d79a9a66c938a6481547">sched_get_priority_max</link> (int pol)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab610c8ffbea07146984789a8e647d0f5">sched_getscheduler</link> (pid_t pid)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3d8665afa3c679d799e6108ab146c637">sched_setscheduler</link> (pid_t pid, int pol, const struct <link linkend="_structsched__param">sched_param</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a630cfbd3157b61ef7097600d4b7885b7">param</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a1b0680550e1649866719e5c23232a620">pthread_attr_setschedparam</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, const struct <link linkend="_structsched__param">sched_param</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a630cfbd3157b61ef7097600d4b7885b7">param</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a62a2814e0abc775243b49e253f145ee6">pthread_attr_getschedparam</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, struct <link linkend="_structsched__param">sched_param</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a630cfbd3157b61ef7097600d4b7885b7">param</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5953c02e8601721f28f600e06ca0052e">pthread_getschedparam</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, int *pol, struct <link linkend="_structsched__param">sched_param</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a630cfbd3157b61ef7097600d4b7885b7">param</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab2c23d7c6f85bd86d76b464ab92bd169">pthread_setschedparam</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, int pol, const struct <link linkend="_structsched__param">sched_param</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a630cfbd3157b61ef7097600d4b7885b7">param</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab1808e229a275eff5dba5e69f2a8ac2e">pthread_attr_setschedpolicy</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, int pol)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a03daab49bb90274e7adf26dbe619e292">pthread_attr_getschedpolicy</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, int *pol)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1af2edd6107c5cf7dcff1a40bf878a9a7a">pthread_key_create</link> (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> *key, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(*dest)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *))</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9b51f8826d51d11e280d16d896ea2050">pthread_key_delete</link> (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> key)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a118837985ccd3a829c518928ec32c1ac">pthread_getspecific</link> (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> key)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a828266e605ec695f7a5b3096b486e70e">pthread_setspecific</link> (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> key, const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2fdeabafeb422282ee687c9361dde092">pthread_self</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad3e2169d99cca6716f63e7a6a815e1f9">pthread_once</link> (<link linkend="__classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4">pthread_once_t</link> *o, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>))</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0dfff655a4b5cc5d4b01c56e1c8ba08a">pthread_testcancel</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3bfce84d4d4fd73d4ae6793135412178">pthread_equal</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t1, <link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ae908993d5507a823938515589950b69c">pthread_tls_init</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a21935f15dcd1dd7afd62a7f7cbbe33e0">_pthread_cleanup_dest</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ac06f56ffc1deb5d3b8aa34a3bc7a08a5">pthread_get_concurrency</link> (int *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a68ab02ab7e3ae454c530323a0f8da22e">pthread_set_concurrency</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1afad0f29df9eb6f3e86301718bbb6316a">pthread_exit</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ac3dbcac124ed2e2b7609246a938b7fe1">_pthread_invoke_cancel</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad9b32625e1e5bfb65deae5b61b71ecc8">pthread_cancel</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a749ba3392059e98863a0b2b035617367">pthread_kill</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t, int sig)</para>
</listitem>
            <listitem><para>unsigned <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aa1770937fe67ca9acae751b2eb444c35">_pthread_get_state</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, unsigned flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7d623235cf8a15f8be1d6cea34a36320">_pthread_set_state</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, unsigned flag, unsigned <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a24ad4b1de7181072166ae53e81deb1dd">pthread_setcancelstate</link> (int state, int *oldstate)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a41f88b756d35a184d2bf1e071c40b462">pthread_setcanceltype</link> (int <link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>, int *oldtype)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a15c1feba54c6a4e13a5ca2b15fae9a46">pthread_create_wrapper</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *args)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab3431d2d45bf174acdcecde5dac5839c">pthread_create</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> *th, const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *(*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *), <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *arg)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a25b888453922185b872e6c87aee3e214">pthread_join</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1afd57474cd16075a818e924f5435dd1fe">pthread_detach</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1adfb31579ce822409c3bb9da64dcd0200">pthread_setname_np</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, const char *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a41cfaefbf9484183cb5c80c880c5f38c">pthread_getname_np</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, char *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a8b0236a54b1a552da75d9462a433cc9a">pthread_rwlock_init</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *rwlock_, const <link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> *attr)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aaa05ecbfd49263978ba98c33d3dcd3bd">pthread_rwlock_wrlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a6cd2f2210af793294019b4eac35557f7">pthread_rwlock_timedwrlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *rwlock, const struct timespec *ts)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a934badca344e311494bc98ce9ecc418f">pthread_rwlock_rdlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3ae5ac44425416f02e5e64cd55fd4f86">pthread_rwlock_timedrdlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l, const struct timespec *ts)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0546e1f061a93e3e48db8774c2d993df">pthread_rwlock_unlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad38420683b0f21ebbb3837be26657d64">pthread_rwlock_tryrdlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2fb5f696689de783c6d741f4a68a230e">pthread_rwlock_trywrlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a1d53ef6e2f7cec1cfee4dc1c09677bef">pthread_rwlock_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9ae7756a4d025b42386fc1835efa6975">pthread_cond_init</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv, const <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a8855d5ab1f81a02c4e4c7e708bfe3ae6">pthread_cond_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4ba961fe959f9d2c2770e822ae51184f">pthread_cond_signal</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1abfd2c6ee1cd83fe2e556c696bd140e2f">pthread_cond_broadcast</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9eb8d1c21f8f6da4114b33e12dfcd069">pthread_cond_wait</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv, <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *external_mutex)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1adce004fdb8b6813b22e5e1ee1b2bf923">pthread_cond_timedwait</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv, <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *external_mutex, const struct timespec *t)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a400339df0751a0d37fec4eae4e3581cd">pthread_cond_timedwait_relative_np</link> (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> *cv, <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *external_mutex, const struct timespec *t)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4ca880f3d1afbb33cea07c60934cc49a">pthread_mutex_lock</link> (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *m)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aca21274598f7fad8d0fd8bef4eab9608">pthread_mutex_timedlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *m, const struct timespec *ts)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7e057138b5fb17da713695ebb25732e1">pthread_mutex_unlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *m)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9c7d6c19b9d517190ecd1f4d6fd27d7f">pthread_mutex_trylock</link> (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *m)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a766f78ccf9846265c8f379ee92852a2c">pthread_mutex_init</link> (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *m, const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a058f31bed045ef535cb482d45ccaebec">pthread_mutex_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> *m)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aca74e3a5cca425ca86099a40202bd202">pthread_barrier_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ae924e8cd2e7c98939a889b5692ee6cab">pthread_barrier_init</link> (<link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *attr, unsigned int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2c037b0958a72d44210f039af37868a9">pthread_barrier_wait</link> (<link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7b2614b4434a16abf7d600b978c16593">pthread_spin_init</link> (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> *l, int pshared)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a079ca5962f3761b95cd933f41c8a6422">pthread_spin_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a3bf0cfe080e7125ec65309ef9b26bd77">pthread_spin_lock</link> (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a78aec2f8ee27093b74deb1a64f120c15">pthread_spin_trylock</link> (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0b3a41f95a2d99430490fb5aceeacc53">pthread_spin_unlock</link> (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> *l)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a0ef09cf581ad2a5eb9617503886be618">pthread_attr_init</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ae14ebd7965a1b57d97be6dc63c267ade">pthread_attr_destroy</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2d2bf5c16432171c8b78aa63a879efcf">pthread_attr_setdetachstate</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a98345320e03353adfe4d5df55eec1759">pthread_attr_getdetachstate</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a6ae39f3c6ef2eaf922e9f29230c120ec">pthread_attr_setinheritsched</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a43570f550aa10203f18dd54e84ea2646">pthread_attr_getinheritsched</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a56865a0e4b8807119e9ee01737ccb237">pthread_attr_setscope</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad579d16a8ca69ef1a895fc77a1c97c74">pthread_attr_getscope</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *flag)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1af63580e116bd1a2a6d233cdbdf57af9d">pthread_attr_getstack</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **stack, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a617505a212ce1920f11b2c1db6673d6b">pthread_attr_setstack</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *stack, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab5ceb1f3d3221e5a343b177d25b7c604">pthread_attr_getstackaddr</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **stack)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab9122afa80368a1661932090ff8281c2">pthread_attr_setstackaddr</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *stack)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1adba842f9211981ea42b91c885d5f4517">pthread_attr_getstacksize</link> (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5647e73d03fb44da6ddf55207d795d76">pthread_attr_setstacksize</link> (<link linkend="_structpthread__attr__t">pthread_attr_t</link> *attr, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ab890b953e5712cbc68601993097ba87c">pthread_mutexattr_init</link> (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1acad46d5d742884ab327f165012ad6d31">pthread_mutexattr_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a2601009fc70b6dc322260b369f475871">pthread_mutexattr_gettype</link> (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ad6de9a4bb74d0cd006d8b9dd4e22ba8b">pthread_mutexattr_settype</link> (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int <link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1af432217ccf445c654c9fe74340138984">pthread_mutexattr_getpshared</link> (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4f284016f1f5a2c5c231bbb19494b7f9">pthread_mutexattr_setpshared</link> (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int <link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a53970e28a03899f410cd94c45e294b27">pthread_mutexattr_getprotocol</link> (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5f76c64fae8aeddbe2c080b2b61baa69">pthread_mutexattr_setprotocol</link> (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int <link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1afebf429948c5d67366b2bb89e2c473ee">pthread_mutexattr_getprioceiling</link> (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *prio)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aa401e6cd8bb5714a17c6d7698a1f25fd">pthread_mutexattr_setprioceiling</link> (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int prio)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a83862b978f09eda3ae88aaa79bef8c91">pthread_getconcurrency</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aea6126c432271d7fbf42b70b9830850a">pthread_setconcurrency</link> (int new_level)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4baf19e242b0ea6dabf0823fe841e573">pthread_condattr_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1aec3deff5e45a451f3eb4f099ce1c03a2">pthread_condattr_init</link> (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a836ca4246a84c7399b9e9f7b6ae25549">pthread_condattr_getpshared</link> (const <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *s)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a5ae9b003b51bc9be3a8e0a9817102686">pthread_condattr_setpshared</link> (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int s)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1af32f25fab7d501debebd11cdb51f8205">pthread_condattr_getclock</link> (const <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *attr, <link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link> *clock_id)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a24ac9d6639f17af40ca1623ac571f4d7">pthread_condattr_setclock</link> (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> *attr, <link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link> clock_id)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a972b229090cad05d2be981d08fe6efdc">__pthread_clock_nanosleep</link> (<link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link> clock_id, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>, const struct timespec *rqtp, struct timespec *rmtp)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1acf60e538ef7e4ab5729e6156520148c5">pthread_barrierattr_init</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **attr)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a90b7b79950b7091c107eadf60437e82f">pthread_barrierattr_destroy</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **attr)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a9cb86cfb5f7a1c62a1f08037b024c6b6">pthread_barrierattr_setpshared</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **attr, int s)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a50d28249042398b8e00ece6176e099d1">pthread_barrierattr_getpshared</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **attr, int *s)</para>
</listitem>
            <listitem><para>struct <link linkend="_struct__pthread__cleanup">_pthread_cleanup</link> **<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1add685e25f063750fecead852c7299ce5">pthread_getclean</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a8c63e4e207904d994fff58f3f7c4a0d9">pthread_gethandle</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a243499eeafcf5d37b99d40b148d22cbd">pthread_getevent</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>unsigned long long <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a46abebb4a3dc683a5ce3b8280979fda6">_pthread_rel_time_in_ms</link> (const struct timespec *ts)</para>
</listitem>
            <listitem><para>unsigned long long <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a912d0d532916985dc8b38814a788bad2">_pthread_time_in_ms</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>unsigned long long <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a536325afc3bfe8e010fbc28a61b61fc6">_pthread_time_in_ms_from_timespec</link> (const struct timespec *ts)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a4befe3e1e4ff892e95a1a2e94779f88f">_pthread_tryjoin</link> (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> **<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a52661e9058b24130b299109c82e1e2b9">pthread_rwlockattr_destroy</link> (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a7ff08784db76993ca1e8d43d42c00ac0">pthread_rwlockattr_getpshared</link> (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int *s)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1ac766f2a3449960b3f7e1346f9157ec5e">pthread_rwlockattr_init</link> (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> <link linkend="__old_2_classes_2lib_2pthread_8h_1a73a87c0e21c431639dd7333d8198185f">pthread_rwlockattr_setpshared</link> (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, int s)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link>(** <link linkend="__old_2_classes_2lib_2pthread_8h_1a27dc5b525727e12c13fa3e8e7a3ce316">_pthread_key_dest</link> )(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1af7535c653a4628fc6b6f820c4099edf1"/><section>
    <title>__clockid_t_defined</title>
<indexterm><primary>__clockid_t_defined</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>__clockid_t_defined</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> __clockid_t_defined&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aec531ff36289c8ca28231fd1fbae14af"/><section>
    <title>__WINPTHREADS_VERSION</title>
<indexterm><primary>__WINPTHREADS_VERSION</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>__WINPTHREADS_VERSION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> __WINPTHREADS_VERSION&#160;&#160;&#160;0x00050000</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3d3efaabab82a5745e8b8284b9ffeb7e"/><section>
    <title>__WINPTHREADS_VERSION_MAJOR</title>
<indexterm><primary>__WINPTHREADS_VERSION_MAJOR</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>__WINPTHREADS_VERSION_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> __WINPTHREADS_VERSION_MAJOR&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad3f02de6ad19d67387190bd00d272b7e"/><section>
    <title>__WINPTHREADS_VERSION_MINOR</title>
<indexterm><primary>__WINPTHREADS_VERSION_MINOR</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>__WINPTHREADS_VERSION_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> __WINPTHREADS_VERSION_MINOR&#160;&#160;&#160;5</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9d877de7be93f6d57307b33802d36f6a"/><section>
    <title>__WINPTHREADS_VERSION_PATCHLEVEL</title>
<indexterm><primary>__WINPTHREADS_VERSION_PATCHLEVEL</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>__WINPTHREADS_VERSION_PATCHLEVEL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> __WINPTHREADS_VERSION_PATCHLEVEL&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a32aa97d0d555372012494039ecb549e0"/><section>
    <title>_GTHREAD_USE_MUTEX_INIT_FUNC</title>
<indexterm><primary>_GTHREAD_USE_MUTEX_INIT_FUNC</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_GTHREAD_USE_MUTEX_INIT_FUNC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GTHREAD_USE_MUTEX_INIT_FUNC&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3463f30f1c9e21a1771c73ed61fa8526"/><section>
    <title>_POSIX_SEM_NSEMS_MAX</title>
<indexterm><primary>_POSIX_SEM_NSEMS_MAX</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_POSIX_SEM_NSEMS_MAX</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _POSIX_SEM_NSEMS_MAX&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab1dcb8bed4f0f3540e278a4932223ade"/><section>
    <title>_POSIX_THREAD_DESTRUCTOR_ITERATIONS</title>
<indexterm><primary>_POSIX_THREAD_DESTRUCTOR_ITERATIONS</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_POSIX_THREAD_DESTRUCTOR_ITERATIONS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _POSIX_THREAD_DESTRUCTOR_ITERATIONS&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a1d96b13a4ba5975d724c5fe13788a957">PTHREAD_DESTRUCTOR_ITERATIONS</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1acfe1124183f47eb0a395e9115446ad51"/><section>
    <title>_POSIX_THREAD_KEYS_MAX</title>
<indexterm><primary>_POSIX_THREAD_KEYS_MAX</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_POSIX_THREAD_KEYS_MAX</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _POSIX_THREAD_KEYS_MAX&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a0a23e66e087bcf5c253b9b2746f19a64">PTHREAD_KEYS_MAX</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a239bbe61d173df33c75356eea7315191"/><section>
    <title>_PTHREAD_NULL_THREAD</title>
<indexterm><primary>_PTHREAD_NULL_THREAD</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_PTHREAD_NULL_THREAD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _PTHREAD_NULL_THREAD&#160;&#160;&#160;((<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link>) 0)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33"/><section>
    <title>ENOTSUP</title>
<indexterm><primary>ENOTSUP</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>ENOTSUP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> ENOTSUP&#160;&#160;&#160;129</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a597718e59a8fc9c4d4ab63f5a34e28b1"/><section>
    <title>ETIMEDOUT</title>
<indexterm><primary>ETIMEDOUT</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>ETIMEDOUT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> ETIMEDOUT&#160;&#160;&#160;138</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4a3a0b3605fd3b2336455062ee8e25f0"/><section>
    <title>EWOULDBLOCK</title>
<indexterm><primary>EWOULDBLOCK</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>EWOULDBLOCK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> EWOULDBLOCK&#160;&#160;&#160;140</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab36d4aabd467baa6c51b35d441997e75"/><section>
    <title>GENERIC_ERRORCHECK_INITIALIZER</title>
<indexterm><primary>GENERIC_ERRORCHECK_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>GENERIC_ERRORCHECK_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GENERIC_ERRORCHECK_INITIALIZER&#160;&#160;&#160;-2</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1"/><section>
    <title>GENERIC_INITIALIZER</title>
<indexterm><primary>GENERIC_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>GENERIC_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GENERIC_INITIALIZER&#160;&#160;&#160;-1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7a80447d8d58ea7b5c5ca8e7eb9366b3"/><section>
    <title>GENERIC_NORMAL_INITIALIZER</title>
<indexterm><primary>GENERIC_NORMAL_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>GENERIC_NORMAL_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GENERIC_NORMAL_INITIALIZER&#160;&#160;&#160;-1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a98095573026942d56f1b095aab889a30"/><section>
    <title>GENERIC_RECURSIVE_INITIALIZER</title>
<indexterm><primary>GENERIC_RECURSIVE_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>GENERIC_RECURSIVE_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GENERIC_RECURSIVE_INITIALIZER&#160;&#160;&#160;-3</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aa8da6dd77bf495343de66784c7d628a3"/><section>
    <title>MAX_READ_LOCKS</title>
<indexterm><primary>MAX_READ_LOCKS</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>MAX_READ_LOCKS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_READ_LOCKS&#160;&#160;&#160;(INT_MAX - 1)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a85e8ca664400153dfac56cdfacb13951"/><section>
    <title>pthread_atfork</title>
<indexterm><primary>pthread_atfork</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_atfork</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_atfork( F1,  <link linkend="__classes_2lib_2_smooth-_infinite-_voxel-_terrain-master_2_simplex_noise_b_p_library_8cpp_1a5368759862ac5fb38772b91eace1205c">F2</link>,  <link linkend="__classes_2lib_2_smooth-_infinite-_voxel-_terrain-master_2_simplex_noise_b_p_library_8cpp_1a79fc770a19406e6876ff9ffd6ce66f3d">F3</link>)&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a919e11b0f5429b3f2c06ddac309d5414"/><section>
    <title>pthread_attr_getguardsize</title>
<indexterm><primary>pthread_attr_getguardsize</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getguardsize</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_attr_getguardsize( A,  S)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3fd547a28149ef93884257e97388459e"/><section>
    <title>pthread_attr_setgaurdsize</title>
<indexterm><primary>pthread_attr_setgaurdsize</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setgaurdsize</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_attr_setgaurdsize( A,  S)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a822c63bc662ad86cfb2dcec50edbb42b"/><section>
    <title>PTHREAD_BARRIER_SERIAL_THREAD</title>
<indexterm><primary>PTHREAD_BARRIER_SERIAL_THREAD</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_BARRIER_SERIAL_THREAD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_BARRIER_SERIAL_THREAD&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aae774738da39ed214c9b01f342222686"/><section>
    <title>PTHREAD_CANCEL_ASYNCHRONOUS</title>
<indexterm><primary>PTHREAD_CANCEL_ASYNCHRONOUS</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CANCEL_ASYNCHRONOUS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CANCEL_ASYNCHRONOUS&#160;&#160;&#160;0x02</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7559901d88e4d3b8100b407e164cd75e"/><section>
    <title>PTHREAD_CANCEL_DEFERRED</title>
<indexterm><primary>PTHREAD_CANCEL_DEFERRED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CANCEL_DEFERRED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CANCEL_DEFERRED&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a6c661332f782dcebc87b878990424b4c"/><section>
    <title>PTHREAD_CANCEL_DISABLE</title>
<indexterm><primary>PTHREAD_CANCEL_DISABLE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CANCEL_DISABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CANCEL_DISABLE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aaf18882a8a6b82c7b7849a645f4445ef"/><section>
    <title>PTHREAD_CANCEL_ENABLE</title>
<indexterm><primary>PTHREAD_CANCEL_ENABLE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CANCEL_ENABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CANCEL_ENABLE&#160;&#160;&#160;0x01</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a17ddda04a6c1ee32116c49c85e2ac4ae"/><section>
    <title>PTHREAD_CANCELED</title>
<indexterm><primary>PTHREAD_CANCELED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CANCELED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CANCELED&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *) (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link>) 0xDEADBEEF)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1afc1b1f5327168998f17d7d5767ae1572"/><section>
    <title>pthread_cleanup_pop</title>
<indexterm><primary>pthread_cleanup_pop</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cleanup_pop</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_cleanup_pop( E)&#160;&#160;&#160;    (*<link linkend="__classes_2lib_2pthread_8h_1add685e25f063750fecead852c7299ce5">pthread_getclean</link>() = _pthread_cup.next, ((E) ? (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">_pthread_cup.func</link>((<link linkend="__classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4">pthread_once_t</link> *)_pthread_cup.arg)) : (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)0));}</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2d45a34c3f86bf2f8a1cfd41873ff37b"/><section>
    <title>pthread_cleanup_push</title>
<indexterm><primary>pthread_cleanup_push</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cleanup_push</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_cleanup_push( F,  A)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">{\
&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct__pthread__cleanup">_pthread_cleanup</link>&#32;_pthread_cup&#32;=&#32;{(F),&#32;(A),&#32;*<link linkend="__classes_2lib_2pthread_8h_1add685e25f063750fecead852c7299ce5">pthread_getclean</link>()};\
&#32;&#32;&#32;&#32;__sync_synchronize();\
&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2pthread_8h_1add685e25f063750fecead852c7299ce5">pthread_getclean</link>()&#32;=&#32;(<link linkend="_struct__pthread__cleanup">_pthread_cleanup</link>&#32;*)&#32;&amp;_pthread_cup;\
&#32;&#32;&#32;&#32;__sync_synchronize()
</programlisting></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aa7b867fe46f3660283fcb356c4fcbbf0"/><section>
    <title>PTHREAD_COND_INITIALIZER</title>
<indexterm><primary>PTHREAD_COND_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_COND_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_COND_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a391c5eb0f6b5febc48710d0be3f62394"/><section>
    <title>PTHREAD_CREATE_DETACHED</title>
<indexterm><primary>PTHREAD_CREATE_DETACHED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CREATE_DETACHED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CREATE_DETACHED&#160;&#160;&#160;0x04</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1afb10d234d831c7b57768d62786748bc7"/><section>
    <title>PTHREAD_CREATE_JOINABLE</title>
<indexterm><primary>PTHREAD_CREATE_JOINABLE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_CREATE_JOINABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_CREATE_JOINABLE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a32f4c20846c0e1ad93527ddc7e648e99"/><section>
    <title>PTHREAD_DEFAULT_ATTR</title>
<indexterm><primary>PTHREAD_DEFAULT_ATTR</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_DEFAULT_ATTR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_DEFAULT_ATTR&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1aaf18882a8a6b82c7b7849a645f4445ef">PTHREAD_CANCEL_ENABLE</link>)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aa36e4990c3471bb56cc53c166086dfe7"/><section>
    <title>PTHREAD_DEFAULT_MUTEX_INITIALIZER</title>
<indexterm><primary>PTHREAD_DEFAULT_MUTEX_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_DEFAULT_MUTEX_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_DEFAULT_MUTEX_INITIALIZER&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a4dacb2d0eda7276b5eb26aca5fb204f8">PTHREAD_NORMAL_MUTEX_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a1d96b13a4ba5975d724c5fe13788a957"/><section>
    <title>PTHREAD_DESTRUCTOR_ITERATIONS</title>
<indexterm><primary>PTHREAD_DESTRUCTOR_ITERATIONS</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_DESTRUCTOR_ITERATIONS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_DESTRUCTOR_ITERATIONS&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ace0d1f1ec8dd8eadd769ff324153599d"/><section>
    <title>PTHREAD_ERRORCHECK_MUTEX_INITIALIZER</title>
<indexterm><primary>PTHREAD_ERRORCHECK_MUTEX_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_ERRORCHECK_MUTEX_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_ERRORCHECK_MUTEX_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab36d4aabd467baa6c51b35d441997e75">GENERIC_ERRORCHECK_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad45abe03c8232518b6995e73172fe053"/><section>
    <title>PTHREAD_EXPLICIT_SCHED</title>
<indexterm><primary>PTHREAD_EXPLICIT_SCHED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_EXPLICIT_SCHED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_EXPLICIT_SCHED&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2be0c75d00a5985670683a791b048474"/><section>
    <title>pthread_getcpuclockid</title>
<indexterm><primary>pthread_getcpuclockid</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getcpuclockid</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_getcpuclockid( T,  <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a470fccc57c4d7c3846e446a17cd23573"/><section>
    <title>PTHREAD_INHERIT_SCHED</title>
<indexterm><primary>PTHREAD_INHERIT_SCHED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_INHERIT_SCHED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_INHERIT_SCHED&#160;&#160;&#160;0x08</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0a23e66e087bcf5c253b9b2746f19a64"/><section>
    <title>PTHREAD_KEYS_MAX</title>
<indexterm><primary>PTHREAD_KEYS_MAX</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_KEYS_MAX</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_KEYS_MAX&#160;&#160;&#160;(1&lt;&lt;20)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4dfc7dd2077926adcb921cb967d7619a"/><section>
    <title>PTHREAD_MUTEX_ADAPTIVE_NP</title>
<indexterm><primary>PTHREAD_MUTEX_ADAPTIVE_NP</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_ADAPTIVE_NP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_ADAPTIVE_NP&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a19223e28eb0b44c645adf508acf580d6">PTHREAD_MUTEX_FAST_NP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0"/><section>
    <title>PTHREAD_MUTEX_DEFAULT</title>
<indexterm><primary>PTHREAD_MUTEX_DEFAULT</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_DEFAULT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_DEFAULT&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf">PTHREAD_MUTEX_NORMAL</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aaf502496651f95b06be861af7902cb23"/><section>
    <title>PTHREAD_MUTEX_ERRORCHECK<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PTHREAD_MUTEX_ERRORCHECK</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_ERRORCHECK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_ERRORCHECK&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aaf502496651f95b06be861af7902cb23"/><section>
    <title>PTHREAD_MUTEX_ERRORCHECK<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PTHREAD_MUTEX_ERRORCHECK</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_ERRORCHECK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_ERRORCHECK&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a103cfe33413e92a1c25cb17b943e2edb"/><section>
    <title>PTHREAD_MUTEX_ERRORCHECK_NP</title>
<indexterm><primary>PTHREAD_MUTEX_ERRORCHECK_NP</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_ERRORCHECK_NP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_ERRORCHECK_NP&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1aaf502496651f95b06be861af7902cb23">PTHREAD_MUTEX_ERRORCHECK</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a19223e28eb0b44c645adf508acf580d6"/><section>
    <title>PTHREAD_MUTEX_FAST_NP</title>
<indexterm><primary>PTHREAD_MUTEX_FAST_NP</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_FAST_NP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_FAST_NP&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf">PTHREAD_MUTEX_NORMAL</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0152315b6409902f16fc0fc30aace505"/><section>
    <title>pthread_mutex_getprioceiling</title>
<indexterm><primary>pthread_mutex_getprioceiling</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_getprioceiling</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_mutex_getprioceiling( M,  P)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a84e55100366a6a8338a2af3b3f279686"/><section>
    <title>PTHREAD_MUTEX_INITIALIZER</title>
<indexterm><primary>PTHREAD_MUTEX_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf"/><section>
    <title>PTHREAD_MUTEX_NORMAL<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PTHREAD_MUTEX_NORMAL</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_NORMAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_NORMAL&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aae4b650085c2599674938f503d6253cf"/><section>
    <title>PTHREAD_MUTEX_NORMAL<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PTHREAD_MUTEX_NORMAL</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_NORMAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_NORMAL&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9326616d9807e548a54f6fee2cb9fa39"/><section>
    <title>PTHREAD_MUTEX_PRIVATE</title>
<indexterm><primary>PTHREAD_MUTEX_PRIVATE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_PRIVATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_PRIVATE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645"/><section>
    <title>PTHREAD_MUTEX_RECURSIVE<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PTHREAD_MUTEX_RECURSIVE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_RECURSIVE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_RECURSIVE&#160;&#160;&#160;2</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645"/><section>
    <title>PTHREAD_MUTEX_RECURSIVE<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PTHREAD_MUTEX_RECURSIVE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_RECURSIVE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_RECURSIVE&#160;&#160;&#160;2</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a24a251d355bd6ed4c72963740a579cc5"/><section>
    <title>PTHREAD_MUTEX_RECURSIVE_NP</title>
<indexterm><primary>PTHREAD_MUTEX_RECURSIVE_NP</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_RECURSIVE_NP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_RECURSIVE_NP&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645">PTHREAD_MUTEX_RECURSIVE</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1af9b56d7f9712066e7aaac9ad60ac5090"/><section>
    <title>pthread_mutex_setprioceiling</title>
<indexterm><primary>pthread_mutex_setprioceiling</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_setprioceiling</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> pthread_mutex_setprioceiling( M,  P)&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a91457bbf35f0f1085619a99423bb1f33">ENOTSUP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a371e047590372db7d6badabd4cc2f2ee"/><section>
    <title>PTHREAD_MUTEX_SHARED</title>
<indexterm><primary>PTHREAD_MUTEX_SHARED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_SHARED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_SHARED&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7295851e8975e7c169bc6fefe14e31ef"/><section>
    <title>PTHREAD_MUTEX_TIMED_NP</title>
<indexterm><primary>PTHREAD_MUTEX_TIMED_NP</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_MUTEX_TIMED_NP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_MUTEX_TIMED_NP&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a19223e28eb0b44c645adf508acf580d6">PTHREAD_MUTEX_FAST_NP</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4dacb2d0eda7276b5eb26aca5fb204f8"/><section>
    <title>PTHREAD_NORMAL_MUTEX_INITIALIZER</title>
<indexterm><primary>PTHREAD_NORMAL_MUTEX_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_NORMAL_MUTEX_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_NORMAL_MUTEX_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1a7a80447d8d58ea7b5c5ca8e7eb9366b3">GENERIC_NORMAL_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a59e22497b65fc305ddb5cea8b4990b51"/><section>
    <title>PTHREAD_ONCE_INIT</title>
<indexterm><primary>PTHREAD_ONCE_INIT</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_ONCE_INIT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_ONCE_INIT&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0087e0ca82fd36e6c15f4c8ad443dbfc"/><section>
    <title>PTHREAD_PRIO_INHERIT</title>
<indexterm><primary>PTHREAD_PRIO_INHERIT</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_PRIO_INHERIT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_PRIO_INHERIT&#160;&#160;&#160;8</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a593d8e17102642595d40680bb5ec3d5c"/><section>
    <title>PTHREAD_PRIO_MULT</title>
<indexterm><primary>PTHREAD_PRIO_MULT</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_PRIO_MULT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_PRIO_MULT&#160;&#160;&#160;32</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a8c1426a72025b27d9726580ac0e8404f"/><section>
    <title>PTHREAD_PRIO_NONE</title>
<indexterm><primary>PTHREAD_PRIO_NONE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_PRIO_NONE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_PRIO_NONE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a65da4c842cd4287f43d2f69ad5a5470b"/><section>
    <title>PTHREAD_PRIO_PROTECT</title>
<indexterm><primary>PTHREAD_PRIO_PROTECT</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_PRIO_PROTECT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_PRIO_PROTECT&#160;&#160;&#160;16</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a443f2f512de9324bf77625041ecb04f4"/><section>
    <title>PTHREAD_PROCESS_PRIVATE</title>
<indexterm><primary>PTHREAD_PROCESS_PRIVATE</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_PROCESS_PRIVATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_PROCESS_PRIVATE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a07f3670a510cdb93233e84e1a0b50e89"/><section>
    <title>PTHREAD_PROCESS_SHARED</title>
<indexterm><primary>PTHREAD_PROCESS_SHARED</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_PROCESS_SHARED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_PROCESS_SHARED&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a93186a549e7d7aace381171097da1823"/><section>
    <title>PTHREAD_RECURSIVE_MUTEX_INITIALIZER</title>
<indexterm><primary>PTHREAD_RECURSIVE_MUTEX_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_RECURSIVE_MUTEX_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_RECURSIVE_MUTEX_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link>)<link linkend="__classes_2lib_2pthread_8h_1a98095573026942d56f1b095aab889a30">GENERIC_RECURSIVE_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aa92fd7b492a8a5b31b2f8b3b6039c622"/><section>
    <title>PTHREAD_RWLOCK_INITIALIZER</title>
<indexterm><primary>PTHREAD_RWLOCK_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_RWLOCK_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_RWLOCK_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aeab18be4f4ee13db4b0b65c6768fb539"/><section>
    <title>PTHREAD_SCOPE_PROCESS</title>
<indexterm><primary>PTHREAD_SCOPE_PROCESS</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_SCOPE_PROCESS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_SCOPE_PROCESS&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab754f4339f76c46b8f57413c03e8ec65"/><section>
    <title>PTHREAD_SCOPE_SYSTEM</title>
<indexterm><primary>PTHREAD_SCOPE_SYSTEM</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_SCOPE_SYSTEM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_SCOPE_SYSTEM&#160;&#160;&#160;0x10</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad4620a03c26b4119bf642a7f53df4fb2"/><section>
    <title>PTHREAD_SPINLOCK_INITIALIZER</title>
<indexterm><primary>PTHREAD_SPINLOCK_INITIALIZER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_SPINLOCK_INITIALIZER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_SPINLOCK_INITIALIZER&#160;&#160;&#160;(<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link>)<link linkend="__classes_2lib_2pthread_8h_1ab7919ca0b886556ea194b20bd18a87d1">GENERIC_INITIALIZER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab8f25dec585d6255fcf40b67db66c1c5"/><section>
    <title>PTHREAD_THREADS_MAX</title>
<indexterm><primary>PTHREAD_THREADS_MAX</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>PTHREAD_THREADS_MAX</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PTHREAD_THREADS_MAX&#160;&#160;&#160;2019</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a1fb15d2e0ac4220897f31214fa637fec"/><section>
    <title>RWLS_PER_THREAD</title>
<indexterm><primary>RWLS_PER_THREAD</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>RWLS_PER_THREAD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> RWLS_PER_THREAD&#160;&#160;&#160;8</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab998332c6538a029b4eed398b7a423da"/><section>
    <title>SCHED_FIFO</title>
<indexterm><primary>SCHED_FIFO</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SCHED_FIFO</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SCHED_FIFO&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2e6e8c0d258a54bdfefde13a76311e59"/><section>
    <title>SCHED_MAX</title>
<indexterm><primary>SCHED_MAX</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SCHED_MAX</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SCHED_MAX&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a2a29482379f591144ace39cbd659a257">SCHED_RR</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aad6aa6c4f669f61f5d0b5b8df67b510e"/><section>
    <title>SCHED_MIN</title>
<indexterm><primary>SCHED_MIN</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SCHED_MIN</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SCHED_MIN&#160;&#160;&#160;<link linkend="__classes_2lib_2pthread_8h_1a44c9baaf6f3c286f76783265b4938881">SCHED_OTHER</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a44c9baaf6f3c286f76783265b4938881"/><section>
    <title>SCHED_OTHER</title>
<indexterm><primary>SCHED_OTHER</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SCHED_OTHER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SCHED_OTHER&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2a29482379f591144ace39cbd659a257"/><section>
    <title>SCHED_RR</title>
<indexterm><primary>SCHED_RR</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SCHED_RR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SCHED_RR&#160;&#160;&#160;2</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a829c888ff8820c37384a5531577cea33"/><section>
    <title>SEM_NSEMS_MAX</title>
<indexterm><primary>SEM_NSEMS_MAX</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SEM_NSEMS_MAX</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SEM_NSEMS_MAX&#160;&#160;&#160;1024</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a927f6ae16379576d638006c7498ac5d7"/><section>
    <title>SIG_BLOCK</title>
<indexterm><primary>SIG_BLOCK</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SIG_BLOCK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SIG_BLOCK&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a37750b78b7ae75fe02ad26e70f6cc845"/><section>
    <title>SIG_SETMASK</title>
<indexterm><primary>SIG_SETMASK</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SIG_SETMASK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SIG_SETMASK&#160;&#160;&#160;2</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5fcd73313a63dac2cc7eb3b654215250"/><section>
    <title>SIG_UNBLOCK</title>
<indexterm><primary>SIG_UNBLOCK</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>SIG_UNBLOCK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SIG_UNBLOCK&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92"/><section>
    <title>WINPTHREAD_API</title>
<indexterm><primary>WINPTHREAD_API</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>WINPTHREAD_API</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> WINPTHREAD_API</computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aeb5e61488fd871c5bf2280156330b844"/><section>
    <title>_pthread_cleanup</title>
<indexterm><primary>_pthread_cleanup</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_cleanup</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct__pthread__cleanup">_pthread_cleanup</link> <link linkend="_struct__pthread__cleanup">_pthread_cleanup</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22"/><section>
    <title>clockid_t</title>
<indexterm><primary>clockid_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>clockid_t</secondary></indexterm>
<para><computeroutput>typedef int <link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ac91b61e242024389af37f642e5b6ffa5"/><section>
    <title>pthread_attr_t</title>
<indexterm><primary>pthread_attr_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structpthread__attr__t">pthread_attr_t</link> <link linkend="_structpthread__attr__t">pthread_attr_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e"/><section>
    <title>pthread_barrier_t</title>
<indexterm><primary>pthread_barrier_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrier_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>* <link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a83657bf7064da5386d9df866335bae36"/><section>
    <title>pthread_barrierattr_t</title>
<indexterm><primary>pthread_barrierattr_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrierattr_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>* <link linkend="__classes_2lib_2pthread_8h_1a83657bf7064da5386d9df866335bae36">pthread_barrierattr_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1"/><section>
    <title>pthread_cond_t</title>
<indexterm><primary>pthread_cond_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7"/><section>
    <title>pthread_condattr_t</title>
<indexterm><primary>pthread_condattr_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_t</secondary></indexterm>
<para><computeroutput>typedef int <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c"/><section>
    <title>pthread_key_t</title>
<indexterm><primary>pthread_key_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_key_t</secondary></indexterm>
<para><computeroutput>typedef unsigned <link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193"/><section>
    <title>pthread_mutex_t</title>
<indexterm><primary>pthread_mutex_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e"/><section>
    <title>pthread_mutexattr_t</title>
<indexterm><primary>pthread_mutexattr_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_t</secondary></indexterm>
<para><computeroutput>typedef unsigned <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4"/><section>
    <title>pthread_once_t</title>
<indexterm><primary>pthread_once_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_once_t</secondary></indexterm>
<para><computeroutput>typedef long <link linkend="__classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4">pthread_once_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41"/><section>
    <title>pthread_rwlock_t</title>
<indexterm><primary>pthread_rwlock_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9"/><section>
    <title>pthread_rwlockattr_t</title>
<indexterm><primary>pthread_rwlockattr_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlockattr_t</secondary></indexterm>
<para><computeroutput>typedef int <link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796"/><section>
    <title>pthread_spinlock_t</title>
<indexterm><primary>pthread_spinlock_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_spinlock_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1abd3131a20f4053d808d4277db3e39a23">intptr_t</link> <link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link></computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc"/><section>
    <title>pthread_t</title>
<indexterm><primary>pthread_t</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link> <link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a972b229090cad05d2be981d08fe6efdc"/><section>
    <title>__pthread_clock_nanosleep()</title>
<indexterm><primary>__pthread_clock_nanosleep</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>__pthread_clock_nanosleep</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> __pthread_clock_nanosleep (<link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link> clock_id, int flags, const struct timespec * rqtp, struct timespec * rmtp)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a21935f15dcd1dd7afd62a7f7cbbe33e0"/><section>
    <title>_pthread_cleanup_dest()</title>
<indexterm><primary>_pthread_cleanup_dest</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_cleanup_dest</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_cleanup_dest (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aa1770937fe67ca9acae751b2eb444c35"/><section>
    <title>_pthread_get_state()</title>
<indexterm><primary>_pthread_get_state</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_get_state</secondary></indexterm>
<para><computeroutput>unsigned <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_get_state (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, unsigned flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ac3dbcac124ed2e2b7609246a938b7fe1"/><section>
    <title>_pthread_invoke_cancel()</title>
<indexterm><primary>_pthread_invoke_cancel</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_invoke_cancel</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_invoke_cancel (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a46abebb4a3dc683a5ce3b8280979fda6"/><section>
    <title>_pthread_rel_time_in_ms()</title>
<indexterm><primary>_pthread_rel_time_in_ms</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_rel_time_in_ms</secondary></indexterm>
<para><computeroutput>unsigned long long <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_rel_time_in_ms (const struct timespec * ts)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7d623235cf8a15f8be1d6cea34a36320"/><section>
    <title>_pthread_set_state()</title>
<indexterm><primary>_pthread_set_state</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_set_state</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_set_state (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, unsigned flag, unsigned val)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a912d0d532916985dc8b38814a788bad2"/><section>
    <title>_pthread_time_in_ms()</title>
<indexterm><primary>_pthread_time_in_ms</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_time_in_ms</secondary></indexterm>
<para><computeroutput>unsigned long long <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_time_in_ms (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a536325afc3bfe8e010fbc28a61b61fc6"/><section>
    <title>_pthread_time_in_ms_from_timespec()</title>
<indexterm><primary>_pthread_time_in_ms_from_timespec</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_time_in_ms_from_timespec</secondary></indexterm>
<para><computeroutput>unsigned long long <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_time_in_ms_from_timespec (const struct timespec * ts)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4befe3e1e4ff892e95a1a2e94779f88f"/><section>
    <title>_pthread_tryjoin()</title>
<indexterm><primary>_pthread_tryjoin</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_tryjoin</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> _pthread_tryjoin (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** res)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ae14ebd7965a1b57d97be6dc63c267ade"/><section>
    <title>pthread_attr_destroy()</title>
<indexterm><primary>pthread_attr_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_destroy (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a98345320e03353adfe4d5df55eec1759"/><section>
    <title>pthread_attr_getdetachstate()</title>
<indexterm><primary>pthread_attr_getdetachstate</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getdetachstate</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getdetachstate (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * a, int * flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a43570f550aa10203f18dd54e84ea2646"/><section>
    <title>pthread_attr_getinheritsched()</title>
<indexterm><primary>pthread_attr_getinheritsched</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getinheritsched</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getinheritsched (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * a, int * flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a62a2814e0abc775243b49e253f145ee6"/><section>
    <title>pthread_attr_getschedparam()</title>
<indexterm><primary>pthread_attr_getschedparam</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getschedparam</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getschedparam (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, struct <link linkend="_structsched__param">sched_param</link> * param)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a03daab49bb90274e7adf26dbe619e292"/><section>
    <title>pthread_attr_getschedpolicy()</title>
<indexterm><primary>pthread_attr_getschedpolicy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getschedpolicy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getschedpolicy (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, int * pol)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad579d16a8ca69ef1a895fc77a1c97c74"/><section>
    <title>pthread_attr_getscope()</title>
<indexterm><primary>pthread_attr_getscope</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getscope</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getscope (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * a, int * flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1af63580e116bd1a2a6d233cdbdf57af9d"/><section>
    <title>pthread_attr_getstack()</title>
<indexterm><primary>pthread_attr_getstack</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getstack</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getstack (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** stack, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> * size)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab5ceb1f3d3221e5a343b177d25b7c604"/><section>
    <title>pthread_attr_getstackaddr()</title>
<indexterm><primary>pthread_attr_getstackaddr</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getstackaddr</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getstackaddr (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** stack)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1adba842f9211981ea42b91c885d5f4517"/><section>
    <title>pthread_attr_getstacksize()</title>
<indexterm><primary>pthread_attr_getstacksize</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_getstacksize</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_getstacksize (const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> * size)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0ef09cf581ad2a5eb9617503886be618"/><section>
    <title>pthread_attr_init()</title>
<indexterm><primary>pthread_attr_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_init (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2d2bf5c16432171c8b78aa63a879efcf"/><section>
    <title>pthread_attr_setdetachstate()</title>
<indexterm><primary>pthread_attr_setdetachstate</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setdetachstate</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setdetachstate (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * a, int flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a6ae39f3c6ef2eaf922e9f29230c120ec"/><section>
    <title>pthread_attr_setinheritsched()</title>
<indexterm><primary>pthread_attr_setinheritsched</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setinheritsched</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setinheritsched (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * a, int flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a1b0680550e1649866719e5c23232a620"/><section>
    <title>pthread_attr_setschedparam()</title>
<indexterm><primary>pthread_attr_setschedparam</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setschedparam</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setschedparam (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, const struct <link linkend="_structsched__param">sched_param</link> * param)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab1808e229a275eff5dba5e69f2a8ac2e"/><section>
    <title>pthread_attr_setschedpolicy()</title>
<indexterm><primary>pthread_attr_setschedpolicy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setschedpolicy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setschedpolicy (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, int pol)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a56865a0e4b8807119e9ee01737ccb237"/><section>
    <title>pthread_attr_setscope()</title>
<indexterm><primary>pthread_attr_setscope</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setscope</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setscope (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * a, int flag)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a617505a212ce1920f11b2c1db6673d6b"/><section>
    <title>pthread_attr_setstack()</title>
<indexterm><primary>pthread_attr_setstack</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setstack</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setstack (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * stack, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> size)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab9122afa80368a1661932090ff8281c2"/><section>
    <title>pthread_attr_setstackaddr()</title>
<indexterm><primary>pthread_attr_setstackaddr</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setstackaddr</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setstackaddr (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * stack)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5647e73d03fb44da6ddf55207d795d76"/><section>
    <title>pthread_attr_setstacksize()</title>
<indexterm><primary>pthread_attr_setstacksize</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_attr_setstacksize</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_attr_setstacksize (<link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> size)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aca74e3a5cca425ca86099a40202bd202"/><section>
    <title>pthread_barrier_destroy()</title>
<indexterm><primary>pthread_barrier_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrier_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrier_destroy (<link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link> * b)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ae924e8cd2e7c98939a889b5692ee6cab"/><section>
    <title>pthread_barrier_init()</title>
<indexterm><primary>pthread_barrier_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrier_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrier_init (<link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link> * b, const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * attr, unsigned int count)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2c037b0958a72d44210f039af37868a9"/><section>
    <title>pthread_barrier_wait()</title>
<indexterm><primary>pthread_barrier_wait</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrier_wait</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrier_wait (<link linkend="__classes_2lib_2pthread_8h_1a97b11306d02a9507ed1d6c7cdc06384e">pthread_barrier_t</link> * b)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a90b7b79950b7091c107eadf60437e82f"/><section>
    <title>pthread_barrierattr_destroy()</title>
<indexterm><primary>pthread_barrierattr_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrierattr_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrierattr_destroy (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** attr)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a50d28249042398b8e00ece6176e099d1"/><section>
    <title>pthread_barrierattr_getpshared()</title>
<indexterm><primary>pthread_barrierattr_getpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrierattr_getpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrierattr_getpshared (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** attr, int * s)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1acf60e538ef7e4ab5729e6156520148c5"/><section>
    <title>pthread_barrierattr_init()</title>
<indexterm><primary>pthread_barrierattr_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrierattr_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrierattr_init (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** attr)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9cb86cfb5f7a1c62a1f08037b024c6b6"/><section>
    <title>pthread_barrierattr_setpshared()</title>
<indexterm><primary>pthread_barrierattr_setpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_barrierattr_setpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_barrierattr_setpshared (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** attr, int s)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad9b32625e1e5bfb65deae5b61b71ecc8"/><section>
    <title>pthread_cancel()</title>
<indexterm><primary>pthread_cancel</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cancel</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cancel (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1abfd2c6ee1cd83fe2e556c696bd140e2f"/><section>
    <title>pthread_cond_broadcast()</title>
<indexterm><primary>pthread_cond_broadcast</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_broadcast</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_broadcast (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a8855d5ab1f81a02c4e4c7e708bfe3ae6"/><section>
    <title>pthread_cond_destroy()</title>
<indexterm><primary>pthread_cond_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_destroy (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9ae7756a4d025b42386fc1835efa6975"/><section>
    <title>pthread_cond_init()</title>
<indexterm><primary>pthread_cond_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_init (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv, const <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4ba961fe959f9d2c2770e822ae51184f"/><section>
    <title>pthread_cond_signal()</title>
<indexterm><primary>pthread_cond_signal</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_signal</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_signal (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1adce004fdb8b6813b22e5e1ee1b2bf923"/><section>
    <title>pthread_cond_timedwait()</title>
<indexterm><primary>pthread_cond_timedwait</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_timedwait</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_timedwait (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv, <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * external_mutex, const struct timespec * t)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a400339df0751a0d37fec4eae4e3581cd"/><section>
    <title>pthread_cond_timedwait_relative_np()</title>
<indexterm><primary>pthread_cond_timedwait_relative_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_timedwait_relative_np</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_timedwait_relative_np (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv, <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * external_mutex, const struct timespec * t)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9eb8d1c21f8f6da4114b33e12dfcd069"/><section>
    <title>pthread_cond_wait()</title>
<indexterm><primary>pthread_cond_wait</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_cond_wait</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_cond_wait (<link linkend="__classes_2lib_2pthread_8h_1a889b578630430003a00009eb9bc682f1">pthread_cond_t</link> * cv, <link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * external_mutex)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4baf19e242b0ea6dabf0823fe841e573"/><section>
    <title>pthread_condattr_destroy()</title>
<indexterm><primary>pthread_condattr_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_condattr_destroy (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1af32f25fab7d501debebd11cdb51f8205"/><section>
    <title>pthread_condattr_getclock()</title>
<indexterm><primary>pthread_condattr_getclock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_getclock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_condattr_getclock (const <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * attr, <link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link> * clock_id)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a836ca4246a84c7399b9e9f7b6ae25549"/><section>
    <title>pthread_condattr_getpshared()</title>
<indexterm><primary>pthread_condattr_getpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_getpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_condattr_getpshared (const <link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * a, int * s)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aec3deff5e45a451f3eb4f099ce1c03a2"/><section>
    <title>pthread_condattr_init()</title>
<indexterm><primary>pthread_condattr_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_condattr_init (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a24ac9d6639f17af40ca1623ac571f4d7"/><section>
    <title>pthread_condattr_setclock()</title>
<indexterm><primary>pthread_condattr_setclock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_setclock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_condattr_setclock (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * attr, <link linkend="__classes_2lib_2pthread_8h_1a6dcac6a5cea7d9c842145e1444d91e22">clockid_t</link> clock_id)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5ae9b003b51bc9be3a8e0a9817102686"/><section>
    <title>pthread_condattr_setpshared()</title>
<indexterm><primary>pthread_condattr_setpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_condattr_setpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_condattr_setpshared (<link linkend="__classes_2lib_2pthread_8h_1a598223d4c21c5ed7d2391c33c8346cd7">pthread_condattr_t</link> * a, int s)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab3431d2d45bf174acdcecde5dac5839c"/><section>
    <title>pthread_create()</title>
<indexterm><primary>pthread_create</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_create</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_create (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> * th, const <link linkend="_structpthread__attr__t">pthread_attr_t</link> * attr, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *(*)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *) func, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * arg)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a15c1feba54c6a4e13a5ca2b15fae9a46"/><section>
    <title>pthread_create_wrapper()</title>
<indexterm><primary>pthread_create_wrapper</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_create_wrapper</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_create_wrapper (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * args)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a6c5e5fd955d576e0e7bc430973623943"/><section>
    <title>pthread_delay_np()</title>
<indexterm><primary>pthread_delay_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_delay_np</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_delay_np (const struct timespec * interval)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1afd57474cd16075a818e924f5435dd1fe"/><section>
    <title>pthread_detach()</title>
<indexterm><primary>pthread_detach</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_detach</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_detach (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3bfce84d4d4fd73d4ae6793135412178"/><section>
    <title>pthread_equal()</title>
<indexterm><primary>pthread_equal</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_equal</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_equal (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t1, <link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t2)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1afad0f29df9eb6f3e86301718bbb6316a"/><section>
    <title>pthread_exit()</title>
<indexterm><primary>pthread_exit</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_exit</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_exit (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * res)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ac06f56ffc1deb5d3b8aa34a3bc7a08a5"/><section>
    <title>pthread_get_concurrency()</title>
<indexterm><primary>pthread_get_concurrency</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_get_concurrency</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_get_concurrency (int * val)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1add685e25f063750fecead852c7299ce5"/><section>
    <title>pthread_getclean()</title>
<indexterm><primary>pthread_getclean</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getclean</secondary></indexterm>
<para><computeroutput>struct <link linkend="_struct__pthread__cleanup">_pthread_cleanup</link> **<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_getclean (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a83862b978f09eda3ae88aaa79bef8c91"/><section>
    <title>pthread_getconcurrency()</title>
<indexterm><primary>pthread_getconcurrency</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getconcurrency</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_getconcurrency (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a243499eeafcf5d37b99d40b148d22cbd"/><section>
    <title>pthread_getevent()</title>
<indexterm><primary>pthread_getevent</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getevent</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_getevent (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a8c63e4e207904d994fff58f3f7c4a0d9"/><section>
    <title>pthread_gethandle()</title>
<indexterm><primary>pthread_gethandle</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_gethandle</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_gethandle (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a41cfaefbf9484183cb5c80c880c5f38c"/><section>
    <title>pthread_getname_np()</title>
<indexterm><primary>pthread_getname_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getname_np</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_getname_np (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, char * name, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> len)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5953c02e8601721f28f600e06ca0052e"/><section>
    <title>pthread_getschedparam()</title>
<indexterm><primary>pthread_getschedparam</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getschedparam</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_getschedparam (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, int * pol, struct <link linkend="_structsched__param">sched_param</link> * param)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a118837985ccd3a829c518928ec32c1ac"/><section>
    <title>pthread_getspecific()</title>
<indexterm><primary>pthread_getspecific</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_getspecific</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_getspecific (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> key)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a25b888453922185b872e6c87aee3e214"/><section>
    <title>pthread_join()</title>
<indexterm><primary>pthread_join</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_join</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_join (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> ** res)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1af2edd6107c5cf7dcff1a40bf878a9a7a"/><section>
    <title>pthread_key_create()</title>
<indexterm><primary>pthread_key_create</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_key_create</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_key_create (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> * key, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(*)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *) dest)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9b51f8826d51d11e280d16d896ea2050"/><section>
    <title>pthread_key_delete()</title>
<indexterm><primary>pthread_key_delete</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_key_delete</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_key_delete (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> key)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a749ba3392059e98863a0b2b035617367"/><section>
    <title>pthread_kill()</title>
<indexterm><primary>pthread_kill</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_kill</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_kill (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> t, int sig)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a058f31bed045ef535cb482d45ccaebec"/><section>
    <title>pthread_mutex_destroy()</title>
<indexterm><primary>pthread_mutex_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutex_destroy (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * m)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a766f78ccf9846265c8f379ee92852a2c"/><section>
    <title>pthread_mutex_init()</title>
<indexterm><primary>pthread_mutex_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutex_init (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * m, const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4ca880f3d1afbb33cea07c60934cc49a"/><section>
    <title>pthread_mutex_lock()</title>
<indexterm><primary>pthread_mutex_lock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_lock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutex_lock (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * m)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aca21274598f7fad8d0fd8bef4eab9608"/><section>
    <title>pthread_mutex_timedlock()</title>
<indexterm><primary>pthread_mutex_timedlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_timedlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutex_timedlock (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * m, const struct timespec * ts)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a9c7d6c19b9d517190ecd1f4d6fd27d7f"/><section>
    <title>pthread_mutex_trylock()</title>
<indexterm><primary>pthread_mutex_trylock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_trylock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutex_trylock (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * m)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7e057138b5fb17da713695ebb25732e1"/><section>
    <title>pthread_mutex_unlock()</title>
<indexterm><primary>pthread_mutex_unlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutex_unlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutex_unlock (<link linkend="__classes_2lib_2pthread_8h_1a50d9d56f346ce3e4ce711d7d1acea193">pthread_mutex_t</link> * m)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1acad46d5d742884ab327f165012ad6d31"/><section>
    <title>pthread_mutexattr_destroy()</title>
<indexterm><primary>pthread_mutexattr_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_destroy (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1afebf429948c5d67366b2bb89e2c473ee"/><section>
    <title>pthread_mutexattr_getprioceiling()</title>
<indexterm><primary>pthread_mutexattr_getprioceiling</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_getprioceiling</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_getprioceiling (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int * prio)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a53970e28a03899f410cd94c45e294b27"/><section>
    <title>pthread_mutexattr_getprotocol()</title>
<indexterm><primary>pthread_mutexattr_getprotocol</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_getprotocol</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_getprotocol (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int * type)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1af432217ccf445c654c9fe74340138984"/><section>
    <title>pthread_mutexattr_getpshared()</title>
<indexterm><primary>pthread_mutexattr_getpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_getpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_getpshared (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int * type)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2601009fc70b6dc322260b369f475871"/><section>
    <title>pthread_mutexattr_gettype()</title>
<indexterm><primary>pthread_mutexattr_gettype</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_gettype</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_gettype (const <link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int * type)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab890b953e5712cbc68601993097ba87c"/><section>
    <title>pthread_mutexattr_init()</title>
<indexterm><primary>pthread_mutexattr_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_init (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aa401e6cd8bb5714a17c6d7698a1f25fd"/><section>
    <title>pthread_mutexattr_setprioceiling()</title>
<indexterm><primary>pthread_mutexattr_setprioceiling</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_setprioceiling</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_setprioceiling (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int prio)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a5f76c64fae8aeddbe2c080b2b61baa69"/><section>
    <title>pthread_mutexattr_setprotocol()</title>
<indexterm><primary>pthread_mutexattr_setprotocol</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_setprotocol</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_setprotocol (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int type)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4f284016f1f5a2c5c231bbb19494b7f9"/><section>
    <title>pthread_mutexattr_setpshared()</title>
<indexterm><primary>pthread_mutexattr_setpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_setpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_setpshared (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int type)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad6de9a4bb74d0cd006d8b9dd4e22ba8b"/><section>
    <title>pthread_mutexattr_settype()</title>
<indexterm><primary>pthread_mutexattr_settype</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_mutexattr_settype</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_mutexattr_settype (<link linkend="__classes_2lib_2pthread_8h_1ae27e7f66c70f4c171ba28f05d288070e">pthread_mutexattr_t</link> * a, int type)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4e6a0670be198551b6458ba3e3af3ebd"/><section>
    <title>pthread_num_processors_np()</title>
<indexterm><primary>pthread_num_processors_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_num_processors_np</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_num_processors_np (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad3e2169d99cca6716f63e7a6a815e1f9"/><section>
    <title>pthread_once()</title>
<indexterm><primary>pthread_once</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_once</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_once (<link linkend="__classes_2lib_2pthread_8h_1a4be465d5b536b183b4a9a6e56d67eab4">pthread_once_t</link> * o, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>(*)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>) func)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a1d53ef6e2f7cec1cfee4dc1c09677bef"/><section>
    <title>pthread_rwlock_destroy()</title>
<indexterm><primary>pthread_rwlock_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_destroy (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a8b0236a54b1a552da75d9462a433cc9a"/><section>
    <title>pthread_rwlock_init()</title>
<indexterm><primary>pthread_rwlock_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_init (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * rwlock_, const <link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> * attr)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a934badca344e311494bc98ce9ecc418f"/><section>
    <title>pthread_rwlock_rdlock()</title>
<indexterm><primary>pthread_rwlock_rdlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_rdlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_rdlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3ae5ac44425416f02e5e64cd55fd4f86"/><section>
    <title>pthread_rwlock_timedrdlock()</title>
<indexterm><primary>pthread_rwlock_timedrdlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_timedrdlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_timedrdlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l, const struct timespec * ts)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a6cd2f2210af793294019b4eac35557f7"/><section>
    <title>pthread_rwlock_timedwrlock()</title>
<indexterm><primary>pthread_rwlock_timedwrlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_timedwrlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_timedwrlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * rwlock, const struct timespec * ts)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ad38420683b0f21ebbb3837be26657d64"/><section>
    <title>pthread_rwlock_tryrdlock()</title>
<indexterm><primary>pthread_rwlock_tryrdlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_tryrdlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_tryrdlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2fb5f696689de783c6d741f4a68a230e"/><section>
    <title>pthread_rwlock_trywrlock()</title>
<indexterm><primary>pthread_rwlock_trywrlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_trywrlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_trywrlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0546e1f061a93e3e48db8774c2d993df"/><section>
    <title>pthread_rwlock_unlock()</title>
<indexterm><primary>pthread_rwlock_unlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_unlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_unlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aaa05ecbfd49263978ba98c33d3dcd3bd"/><section>
    <title>pthread_rwlock_wrlock()</title>
<indexterm><primary>pthread_rwlock_wrlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlock_wrlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlock_wrlock (<link linkend="__classes_2lib_2pthread_8h_1a5a5e5bc818ac67556b101a770e22ea41">pthread_rwlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a52661e9058b24130b299109c82e1e2b9"/><section>
    <title>pthread_rwlockattr_destroy()</title>
<indexterm><primary>pthread_rwlockattr_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlockattr_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlockattr_destroy (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7ff08784db76993ca1e8d43d42c00ac0"/><section>
    <title>pthread_rwlockattr_getpshared()</title>
<indexterm><primary>pthread_rwlockattr_getpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlockattr_getpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlockattr_getpshared (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> * a, int * s)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ac766f2a3449960b3f7e1346f9157ec5e"/><section>
    <title>pthread_rwlockattr_init()</title>
<indexterm><primary>pthread_rwlockattr_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlockattr_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlockattr_init (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> * a)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a73a87c0e21c431639dd7333d8198185f"/><section>
    <title>pthread_rwlockattr_setpshared()</title>
<indexterm><primary>pthread_rwlockattr_setpshared</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_rwlockattr_setpshared</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_rwlockattr_setpshared (<link linkend="__classes_2lib_2pthread_8h_1ab478b207d8ef5f2b3f4be9fcfbe6fbf9">pthread_rwlockattr_t</link> * a, int s)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a2fdeabafeb422282ee687c9361dde092"/><section>
    <title>pthread_self()</title>
<indexterm><primary>pthread_self</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_self</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_self (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a68ab02ab7e3ae454c530323a0f8da22e"/><section>
    <title>pthread_set_concurrency()</title>
<indexterm><primary>pthread_set_concurrency</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_set_concurrency</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_set_concurrency (int val)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a02871566ac428be959ad377bcfa26a04"/><section>
    <title>pthread_set_num_processors_np()</title>
<indexterm><primary>pthread_set_num_processors_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_set_num_processors_np</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_set_num_processors_np (int n)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a24ad4b1de7181072166ae53e81deb1dd"/><section>
    <title>pthread_setcancelstate()</title>
<indexterm><primary>pthread_setcancelstate</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_setcancelstate</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_setcancelstate (int state, int * oldstate)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a41f88b756d35a184d2bf1e071c40b462"/><section>
    <title>pthread_setcanceltype()</title>
<indexterm><primary>pthread_setcanceltype</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_setcanceltype</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_setcanceltype (int type, int * oldtype)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1aea6126c432271d7fbf42b70b9830850a"/><section>
    <title>pthread_setconcurrency()</title>
<indexterm><primary>pthread_setconcurrency</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_setconcurrency</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_setconcurrency (int new_level)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1adfb31579ce822409c3bb9da64dcd0200"/><section>
    <title>pthread_setname_np()</title>
<indexterm><primary>pthread_setname_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_setname_np</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_setname_np (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, const char * name)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab2c23d7c6f85bd86d76b464ab92bd169"/><section>
    <title>pthread_setschedparam()</title>
<indexterm><primary>pthread_setschedparam</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_setschedparam</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_setschedparam (<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link> thread, int pol, const struct <link linkend="_structsched__param">sched_param</link> * param)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a828266e605ec695f7a5b3096b486e70e"/><section>
    <title>pthread_setspecific()</title>
<indexterm><primary>pthread_setspecific</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_setspecific</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_setspecific (<link linkend="__classes_2lib_2pthread_8h_1ae3576124dcee020fef884de07a48290c">pthread_key_t</link> key, const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * value)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a079ca5962f3761b95cd933f41c8a6422"/><section>
    <title>pthread_spin_destroy()</title>
<indexterm><primary>pthread_spin_destroy</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_spin_destroy</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_spin_destroy (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a7b2614b4434a16abf7d600b978c16593"/><section>
    <title>pthread_spin_init()</title>
<indexterm><primary>pthread_spin_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_spin_init</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_spin_init (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> * l, int pshared)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3bf0cfe080e7125ec65309ef9b26bd77"/><section>
    <title>pthread_spin_lock()</title>
<indexterm><primary>pthread_spin_lock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_spin_lock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_spin_lock (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a78aec2f8ee27093b74deb1a64f120c15"/><section>
    <title>pthread_spin_trylock()</title>
<indexterm><primary>pthread_spin_trylock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_spin_trylock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_spin_trylock (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0b3a41f95a2d99430490fb5aceeacc53"/><section>
    <title>pthread_spin_unlock()</title>
<indexterm><primary>pthread_spin_unlock</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_spin_unlock</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_spin_unlock (<link linkend="__classes_2lib_2pthread_8h_1a8014fe324aecf71a1c44f2ae8be4c796">pthread_spinlock_t</link> * l)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a0dfff655a4b5cc5d4b01c56e1c8ba08a"/><section>
    <title>pthread_testcancel()</title>
<indexterm><primary>pthread_testcancel</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_testcancel</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_testcancel (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3d6dbf593876e112325fb0ffec4c1296"/><section>
    <title>pthread_timechange_handler_np()</title>
<indexterm><primary>pthread_timechange_handler_np</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_timechange_handler_np</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_timechange_handler_np (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * dummy)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ae908993d5507a823938515589950b69c"/><section>
    <title>pthread_tls_init()</title>
<indexterm><primary>pthread_tls_init</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>pthread_tls_init</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> pthread_tls_init (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4adca5eec5f7d79a9a66c938a6481547"/><section>
    <title>sched_get_priority_max()</title>
<indexterm><primary>sched_get_priority_max</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>sched_get_priority_max</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> sched_get_priority_max (int pol)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a4c3046c4f2a21f421684222bb7b013fa"/><section>
    <title>sched_get_priority_min()</title>
<indexterm><primary>sched_get_priority_min</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>sched_get_priority_min</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> sched_get_priority_min (int pol)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1ab610c8ffbea07146984789a8e647d0f5"/><section>
    <title>sched_getscheduler()</title>
<indexterm><primary>sched_getscheduler</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>sched_getscheduler</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> sched_getscheduler (pid_t pid)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a3d8665afa3c679d799e6108ab146c637"/><section>
    <title>sched_setscheduler()</title>
<indexterm><primary>sched_setscheduler</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>sched_setscheduler</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> sched_setscheduler (pid_t pid, int pol, const struct <link linkend="_structsched__param">sched_param</link> * param)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a6c8d40dba19ab44315a73fa45579e07c"/><section>
    <title>sched_yield()</title>
<indexterm><primary>sched_yield</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>sched_yield</secondary></indexterm>
<para><computeroutput>int <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link> sched_yield (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2pthread_8h_1a27dc5b525727e12c13fa3e8e7a3ce316"/><section>
    <title>_pthread_key_dest</title>
<indexterm><primary>_pthread_key_dest</primary><secondary>pthread.h</secondary></indexterm>
<indexterm><primary>pthread.h</primary><secondary>_pthread_key_dest</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2pthread_8h_1a322901d273e2a229ee61eb5dd3f69b92">WINPTHREAD_API</link>(** _pthread_key_dest) (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *) (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * )<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
