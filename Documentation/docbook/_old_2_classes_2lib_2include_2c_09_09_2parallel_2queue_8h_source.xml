<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2queue_8h_source" xml:lang="en-US">
<title>queue.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/queue.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler.</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_QUEUE_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_QUEUE_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;parallel/types.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;parallel/base.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;parallel/compatibility.h&gt;</emphasis>
38 
40 <emphasis role="preprocessor">#define&#32;_GLIBCXX_VOLATILE&#32;volatile</emphasis>
41 
42 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
43 {
51 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_RestrictedBoundedConcurrentQueue
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
56 &#32;&#32;&#32;&#32;&#32;&#32;_Tp*&#32;_M_base;
57 
59 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>&#32;_M_max_size;
60 
63 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2partition_8h_1a1c61e6ca8bdd220c11ec4b64f7539712">_GLIBCXX_VOLATILE</link>&#32;<link linkend="_namespace____gnu__parallel_1aa1171c39f9e5afad6392c7aeefb81115">_CASable</link>&#32;_M_borders;
64 
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
68 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c">_RestrictedBoundedConcurrentQueue</link>(<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>&#32;__max_size)
69 &#32;&#32;&#32;&#32;&#32;&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_max_size&#32;=&#32;__max_size;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_base&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;_Tp[__max_size];
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_borders&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a7fcc29eb3f2d9c83756a9d99b4105b3b">__encode2</link>(0,&#32;0);
73 <emphasis role="preprocessor">#pragma&#32;omp&#32;flush</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;}
75 
77 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16">~_RestrictedBoundedConcurrentQueue</link>()
78 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">delete</emphasis>[]&#32;_M_base;&#32;}
79 
82 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__t)
84 &#32;&#32;&#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa1171c39f9e5afad6392c7aeefb81115">_CASable</link>&#32;__former_borders&#32;=&#32;_M_borders;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__former_front,&#32;__former_back;
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aee3989c0ed2561801b8a6c0282008cca">__decode2</link>(__former_borders,&#32;__former_front,&#32;__former_back);
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(_M_base&#32;+&#32;__former_front&#32;%&#32;_M_max_size)&#32;=&#32;__t;
89 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Otherwise:&#32;front&#32;-&#32;back&#32;&gt;&#32;_M_max_size&#32;eventually.</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(((__former_front&#32;+&#32;1)&#32;-&#32;__former_back)
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;=&#32;_M_max_size);
93 <emphasis role="preprocessor">#endif</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;_M_borders,&#32;<link linkend="_namespace____gnu__parallel_1a7fcc29eb3f2d9c83756a9d99b4105b3b">__encode2</link>(1,&#32;0));
95 &#32;&#32;&#32;&#32;&#32;&#32;}
96 
99 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front</link>(_Tp&amp;&#32;__t)
101 &#32;&#32;&#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__former_front,&#32;__former_back;
103 <emphasis role="preprocessor">#pragma&#32;omp&#32;flush</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aee3989c0ed2561801b8a6c0282008cca">__decode2</link>(_M_borders,&#32;__former_front,&#32;__former_back);
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__former_front&#32;&gt;&#32;__former_back)
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Chance.</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa1171c39f9e5afad6392c7aeefb81115">_CASable</link>&#32;__former_borders&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a7fcc29eb3f2d9c83756a9d99b4105b3b">__encode2</link>(__former_front,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__former_back);
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa1171c39f9e5afad6392c7aeefb81115">_CASable</link>&#32;__new_borders&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a7fcc29eb3f2d9c83756a9d99b4105b3b">__encode2</link>(__former_front&#32;-&#32;1,
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__former_back);
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1accd4441e0f846fee44966195a91e9e68">__compare_and_swap</link>(&amp;_M_borders,&#32;__former_borders,
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__new_borders))
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__t&#32;=&#32;*(_M_base&#32;+&#32;(__former_front&#32;-&#32;1)&#32;%&#32;_M_max_size);
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
118 <emphasis role="preprocessor">#pragma&#32;omp&#32;flush</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aee3989c0ed2561801b8a6c0282008cca">__decode2</link>(_M_borders,&#32;__former_front,&#32;__former_back);
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
122 &#32;&#32;&#32;&#32;&#32;&#32;}
123 
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back</link>(_Tp&amp;&#32;__t)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//queue&#32;behavior</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;{
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__former_front,&#32;__former_back;
130 <emphasis role="preprocessor">#pragma&#32;omp&#32;flush</emphasis>
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aee3989c0ed2561801b8a6c0282008cca">__decode2</link>(_M_borders,&#32;__former_front,&#32;__former_back);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__former_front&#32;&gt;&#32;__former_back)
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Chance.</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa1171c39f9e5afad6392c7aeefb81115">_CASable</link>&#32;__former_borders&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a7fcc29eb3f2d9c83756a9d99b4105b3b">__encode2</link>(__former_front,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__former_back);
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa1171c39f9e5afad6392c7aeefb81115">_CASable</link>&#32;__new_borders&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a7fcc29eb3f2d9c83756a9d99b4105b3b">__encode2</link>(__former_front,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__former_back&#32;+&#32;1);
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1accd4441e0f846fee44966195a91e9e68">__compare_and_swap</link>(&amp;_M_borders,&#32;__former_borders,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__new_borders))
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__t&#32;=&#32;*(_M_base&#32;+&#32;__former_back&#32;%&#32;_M_max_size);
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
145 <emphasis role="preprocessor">#pragma&#32;omp&#32;flush</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aee3989c0ed2561801b8a6c0282008cca">__decode2</link>(_M_borders,&#32;__former_front,&#32;__former_back);
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
149 &#32;&#32;&#32;&#32;&#32;&#32;}
150 &#32;&#32;};
151 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//namespace&#32;__gnu_parallel</emphasis>
152 
153 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_VOLATILE</emphasis>
154 
155 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_QUEUE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
