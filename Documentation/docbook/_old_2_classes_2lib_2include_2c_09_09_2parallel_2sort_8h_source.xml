<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2sort_8h_source" xml:lang="en-US">
<title>sort.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/sort.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler.</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_SORT_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_SORT_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;parallel/basic_iterator.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;parallel/features.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;parallel/parallel.h&gt;</emphasis>
38 
39 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;parallel/checkers.h&gt;</emphasis>
41 <emphasis role="preprocessor">#endif</emphasis>
42 
43 <emphasis role="preprocessor">#if&#32;_GLIBCXX_MERGESORT</emphasis>
44 <emphasis role="preprocessor">#include&#32;&lt;parallel/multiway_mergesort.h&gt;</emphasis>
45 <emphasis role="preprocessor">#endif</emphasis>
46 
47 <emphasis role="preprocessor">#if&#32;_GLIBCXX_QUICKSORT</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;parallel/quicksort.h&gt;</emphasis>
49 <emphasis role="preprocessor">#endif</emphasis>
50 
51 <emphasis role="preprocessor">#if&#32;_GLIBCXX_BAL_QUICKSORT</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;parallel/balanced_quicksort.h&gt;</emphasis>
53 <emphasis role="preprocessor">#endif</emphasis>
54 
55 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
56 {
57 &#32;&#32;<emphasis role="comment">//prototype</emphasis>
58 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a76f6cbf29b1b8d57762cce1ed9bd01a8">_Parallelism</link>&gt;
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
61 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,&#32;<link linkend="_namespace____gnu__parallel_1a76f6cbf29b1b8d57762cce1ed9bd01a8">_Parallelism</link>&#32;__parallelism);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
73 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
74 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
75 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,&#32;multiway_mergesort_tag&#32;__parallelism)
77 &#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
79 
80 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>().sort_splitting&#32;==&#32;<link linkend="_namespace____gnu__parallel_1ace24b9f316fde5ea598815403cfd02bbaf5097b2b3d9b19b8a5fd8138eb741ad1">EXACT</link>)
81 &#32;&#32;&#32;&#32;parallel_sort_mwms&lt;__stable,&#32;true&gt;
82 &#32;&#32;&#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,&#32;__parallelism.__get_num_threads());
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
84 &#32;&#32;&#32;&#32;parallel_sort_mwms&lt;__stable,&#32;false&gt;
85 &#32;&#32;&#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,&#32;__parallelism.__get_num_threads());
86 &#32;&#32;&#32;&#32;}
87 
97 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
98 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
99 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multiway_mergesort_exact_tag&#32;__parallelism)
102 &#32;&#32;&#32;&#32;{
103 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
104 
105 &#32;&#32;&#32;&#32;&#32;&#32;parallel_sort_mwms&lt;__stable,&#32;true&gt;
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,&#32;__parallelism.__get_num_threads());
107 &#32;&#32;&#32;&#32;}
108 
118 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
120 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multiway_mergesort_sampling_tag&#32;__parallelism)
123 &#32;&#32;&#32;&#32;{
124 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;parallel_sort_mwms&lt;__stable,&#32;false&gt;
127 &#32;&#32;&#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,&#32;__parallelism.__get_num_threads());
128 &#32;&#32;&#32;&#32;}
129 
138 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
139 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
140 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,&#32;quicksort_tag&#32;__parallelism)
142 &#32;&#32;&#32;&#32;{
143 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__stable&#32;==&#32;<emphasis role="keyword">false</emphasis>);
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ac416a1c7e347b429bbf7a8fb17e847b2">__parallel_sort_qs</link>(__begin,&#32;__end,&#32;__comp,
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parallelism.__get_num_threads());
149 &#32;&#32;&#32;&#32;}
150 
159 &#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
160 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
161 &#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,&#32;balanced_quicksort_tag&#32;__parallelism)
163 &#32;&#32;&#32;&#32;&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
165 
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__stable&#32;==&#32;<emphasis role="keyword">false</emphasis>);
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4093dd098b32542e3d3f43ebd4c6f940">__parallel_sort_qsb</link>(__begin,&#32;__end,&#32;__comp,
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parallelism.__get_num_threads());
170 &#32;&#32;&#32;&#32;&#32;}
171 
181 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
182 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
183 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,&#32;default_parallel_tag&#32;__parallelism)
185 &#32;&#32;&#32;&#32;{
186 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;__parallel_sort&lt;__stable&gt;
189 &#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,
190 &#32;&#32;&#32;&#32;&#32;multiway_mergesort_exact_tag(__parallelism.__get_num_threads()));
191 &#32;&#32;&#32;&#32;}
192 
201 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
202 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
203 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05674fa7702fc8a86b415dc193dcfd9a">__parallel_sort</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,&#32;parallel_tag&#32;__parallelism)
205 &#32;&#32;&#32;&#32;{
206 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
207 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;&#32;_TraitsType;
208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::value_type&#32;_ValueType;
209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::difference_type&#32;_DifferenceType;
210 
211 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">false</emphasis>)&#32;;
212 <emphasis role="preprocessor">#if&#32;_GLIBCXX_MERGESORT</emphasis>
213 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__stable&#32;||&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>().sort_algorithm&#32;==&#32;<link linkend="_namespace____gnu__parallel_1a35bfabad218af713f172257aecd8414eaf192c908c3836dcf2d14f7e76425fb37">MWMS</link>)
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>().sort_splitting&#32;==&#32;<link linkend="_namespace____gnu__parallel_1ace24b9f316fde5ea598815403cfd02bbaf5097b2b3d9b19b8a5fd8138eb741ad1">EXACT</link>)
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallel_sort_mwms&lt;__stable,&#32;true&gt;
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,&#32;__parallelism.__get_num_threads());
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallel_sort_mwms&lt;false,&#32;false&gt;
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__begin,&#32;__end,&#32;__comp,&#32;__parallelism.__get_num_threads());
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
222 <emphasis role="preprocessor">#endif</emphasis>
223 <emphasis role="preprocessor">#if&#32;_GLIBCXX_QUICKSORT</emphasis>
224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>().sort_algorithm&#32;==&#32;<link linkend="_namespace____gnu__parallel_1a35bfabad218af713f172257aecd8414eabea807924896f602d8546c738a06c23f">QS</link>)
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ac416a1c7e347b429bbf7a8fb17e847b2">__parallel_sort_qs</link>(__begin,&#32;__end,&#32;__comp,
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parallelism.__get_num_threads());
227 <emphasis role="preprocessor">#endif</emphasis>
228 <emphasis role="preprocessor">#if&#32;_GLIBCXX_BAL_QUICKSORT</emphasis>
229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>().sort_algorithm&#32;==&#32;<link linkend="_namespace____gnu__parallel_1a35bfabad218af713f172257aecd8414ea20ad8909835e0bdc20049ff031782c22">QS_BALANCED</link>)
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4093dd098b32542e3d3f43ebd4c6f940">__parallel_sort_qsb</link>(__begin,&#32;__end,&#32;__comp,
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parallelism.__get_num_threads());
232 <emphasis role="preprocessor">#endif</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a73a397864aa701b5bd48fae555f4f935">__gnu_sequential::sort</link>(__begin,&#32;__end,&#32;__comp);
235 &#32;&#32;&#32;&#32;}
236 }&#32;<emphasis role="comment">//&#32;end&#32;namespace&#32;__gnu_parallel</emphasis>
237 
238 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_SORT_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
