<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2detail_2type__mat3x3_8inl_source" xml:lang="en-US">
<title>type_mat3x3.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/detail/type_mat3x3.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&quot;../matrix.hpp&quot;</emphasis>
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
4 {
5 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Constructors&#32;--</emphasis>
6 
7 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>()
10 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALIZER_LIST</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(1,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;1,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1)}
12 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
14 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALISATION</emphasis>
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(1,&#32;0,&#32;0);
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;1,&#32;0);
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1);
18 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
20 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
21 
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
23 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
24 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, P&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
25 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
27 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
28 &#32;&#32;&#32;&#32;{
29 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
33 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
34 &#32;&#32;&#32;&#32;}
35 
36 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
37 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(T&#32;s)
38 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(s,&#32;0,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;s,&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;s)}
40 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
41 &#32;&#32;&#32;&#32;{
42 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(s,&#32;0,&#32;0);
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;s,&#32;0);
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;s);
46 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
47 &#32;&#32;&#32;&#32;}
48 
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
50 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>
51 &#32;&#32;&#32;&#32;(
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x0,&#32;T&#32;y0,&#32;T&#32;z0,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x1,&#32;T&#32;y1,&#32;T&#32;z1,
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x2,&#32;T&#32;y2,&#32;T&#32;z2
55 &#32;&#32;&#32;&#32;)
56 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(x0,&#32;y0,&#32;z0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(x1,&#32;y1,&#32;z1),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(x2,&#32;y2,&#32;z2)}
58 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
59 &#32;&#32;&#32;&#32;{
60 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0,&#32;z0);
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2);
64 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
65 &#32;&#32;&#32;&#32;}
66 
67 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
68 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
69 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)}
71 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
72 &#32;&#32;&#32;&#32;{
73 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>);
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
77 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
78 &#32;&#32;&#32;&#32;}
79 
80 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;constructors&#32;--</emphasis>
81 
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
83 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z1,
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z2,
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X3,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y3,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z3&gt;
87 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>
88 &#32;&#32;&#32;&#32;(
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;x1,&#32;Y1&#32;y1,&#32;Z1&#32;z1,
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;x2,&#32;Y2&#32;y2,&#32;Z2&#32;z2,
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X3&#32;x3,&#32;Y3&#32;y3,&#32;Z3&#32;z3
92 &#32;&#32;&#32;&#32;)
93 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(x1,&#32;y1,&#32;z1),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(x2,&#32;y2,&#32;z2),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(x3,&#32;y3,&#32;z3)}
95 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
96 &#32;&#32;&#32;&#32;{
97 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1);
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2);
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x3,&#32;y3,&#32;z3);
101 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
102 &#32;&#32;&#32;&#32;}
103 
104 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
105 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;V1,&#32;<emphasis role="keyword">typename</emphasis>&#32;V2,&#32;<emphasis role="keyword">typename</emphasis>&#32;V3&gt;
106 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1vec">vec&lt;3, V1, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;3, V2, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;3, V3, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)
107 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)}
109 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
110 &#32;&#32;&#32;&#32;{
111 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>);
115 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
116 &#32;&#32;&#32;&#32;}
117 
118 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Matrix&#32;conversions&#32;--</emphasis>
119 
120 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
122 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, U, P&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
123 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
125 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
126 &#32;&#32;&#32;&#32;{
127 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
131 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
132 &#32;&#32;&#32;&#32;}
133 
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
135 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
136 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1)}
138 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
139 &#32;&#32;&#32;&#32;{
140 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1);
144 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
145 &#32;&#32;&#32;&#32;}
146 
147 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
148 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
149 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
151 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
152 &#32;&#32;&#32;&#32;{
153 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
157 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
158 &#32;&#32;&#32;&#32;}
159 
160 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
161 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
162 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1)}
164 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
165 &#32;&#32;&#32;&#32;{
166 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1);
170 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
171 &#32;&#32;&#32;&#32;}
172 
173 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
174 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
175 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;1)}
177 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
178 &#32;&#32;&#32;&#32;{
179 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;1);
183 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
184 &#32;&#32;&#32;&#32;}
185 
186 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
187 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
188 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(0,&#32;0,&#32;1)}
190 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
191 &#32;&#32;&#32;&#32;{
192 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0,&#32;1);
196 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
197 &#32;&#32;&#32;&#32;}
198 
199 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
200 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
201 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1],&#32;0),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2],&#32;1)}
203 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
204 &#32;&#32;&#32;&#32;{
205 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2],&#32;1);
209 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
210 &#32;&#32;&#32;&#32;}
211 
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
213 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
214 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
216 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
217 &#32;&#32;&#32;&#32;{
218 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
222 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
223 &#32;&#32;&#32;&#32;}
224 
225 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
226 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::mat</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
227 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[0]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[1]),&#32;<link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">col_type</link>(m[2])}
229 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
230 &#32;&#32;&#32;&#32;{
231 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
235 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
236 &#32;&#32;&#32;&#32;}
237 
238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Accesses&#32;--</emphasis>
239 
240 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
241 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;::col_type&#32;&amp;&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;::length_type&#32;i)
242 &#32;&#32;&#32;&#32;{
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
245 &#32;&#32;&#32;&#32;}
246 
247 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
248 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;::length_type&#32;i)<emphasis role="keyword">&#32;const</emphasis>
249 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
252 &#32;&#32;&#32;&#32;}
253 
254 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;updatable&#32;operators&#32;--</emphasis>
255 
256 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
257 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
258 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
259 &#32;&#32;&#32;&#32;{
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
264 &#32;&#32;&#32;&#32;}
265 
266 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
267 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
268 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator+=</link>(U&#32;s)
269 &#32;&#32;&#32;&#32;{
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;s;
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;s;
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;s;
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
274 &#32;&#32;&#32;&#32;}
275 
276 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
277 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
278 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator+=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
279 &#32;&#32;&#32;&#32;{
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;m[0];
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;m[1];
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;m[2];
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
284 &#32;&#32;&#32;&#32;}
285 
286 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
287 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
288 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator-=</link>(U&#32;s)
289 &#32;&#32;&#32;&#32;{
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;s;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;s;
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;s;
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
294 &#32;&#32;&#32;&#32;}
295 
296 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
297 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
298 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator-=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
299 &#32;&#32;&#32;&#32;{
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;m[0];
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;m[1];
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;m[2];
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
304 &#32;&#32;&#32;&#32;}
305 
306 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
307 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
308 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator*=</link>(U&#32;s)
309 &#32;&#32;&#32;&#32;{
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;*=&#32;s;
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;*=&#32;s;
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;*=&#32;s;
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
314 &#32;&#32;&#32;&#32;}
315 
316 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
317 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
318 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator*=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
319 &#32;&#32;&#32;&#32;{
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;=&#32;*<emphasis role="keyword">this</emphasis>&#32;*&#32;m);
321 &#32;&#32;&#32;&#32;}
322 
323 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
324 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
325 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator/=</link>(U&#32;s)
326 &#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;/=&#32;s;
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;/=&#32;s;
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;/=&#32;s;
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
331 &#32;&#32;&#32;&#32;}
332 
333 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
334 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
335 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator/=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
336 &#32;&#32;&#32;&#32;{
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;*=&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(m);
338 &#32;&#32;&#32;&#32;}
339 
340 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Increment&#32;and&#32;decrement&#32;operators&#32;--</emphasis>
341 
342 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
343 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator++</link>()
344 &#32;&#32;&#32;&#32;{
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[0];
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[1];
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[2];
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
349 &#32;&#32;&#32;&#32;}
350 
351 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
352 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;&amp;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator--</link>()
353 &#32;&#32;&#32;&#32;{
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[0];
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[1];
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[2];
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
358 &#32;&#32;&#32;&#32;}
359 
360 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
361 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator++</link>(<emphasis role="keywordtype">int</emphasis>)
362 &#32;&#32;&#32;&#32;{
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;Result(*<emphasis role="keyword">this</emphasis>);
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++*<emphasis role="keyword">this</emphasis>;
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
366 &#32;&#32;&#32;&#32;}
367 
368 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
369 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::operator--</link>(<emphasis role="keywordtype">int</emphasis>)
370 &#32;&#32;&#32;&#32;{
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;Result(*<emphasis role="keyword">this</emphasis>);
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--*<emphasis role="keyword">this</emphasis>;
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
374 &#32;&#32;&#32;&#32;}
375 
376 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
377 
378 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
379 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
380 &#32;&#32;&#32;&#32;{
381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
382 &#32;&#32;&#32;&#32;}
383 
384 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
385 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
386 &#32;&#32;&#32;&#32;{
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[0],
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[1],
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[2]);
391 &#32;&#32;&#32;&#32;}
392 
393 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;arithmetic&#32;operators&#32;--</emphasis>
394 
395 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
396 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
397 &#32;&#32;&#32;&#32;{
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;scalar,
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;scalar,
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;scalar);
402 &#32;&#32;&#32;&#32;}
403 
404 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
405 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(T&#32;scalar,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
406 &#32;&#32;&#32;&#32;{
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;scalar,
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;scalar,
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;scalar);
411 &#32;&#32;&#32;&#32;}
412 
413 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
414 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
415 &#32;&#32;&#32;&#32;{
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;+&#32;m2[0],
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;+&#32;m2[1],
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;+&#32;m2[2]);
420 &#32;&#32;&#32;&#32;}
421 
422 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
423 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
424 &#32;&#32;&#32;&#32;{
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;-&#32;scalar,
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;-&#32;scalar,
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;-&#32;scalar);
429 &#32;&#32;&#32;&#32;}
430 
431 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
432 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(T&#32;scalar,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
433 &#32;&#32;&#32;&#32;{
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;-&#32;m[0],
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;-&#32;m[1],
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;-&#32;m[2]);
438 &#32;&#32;&#32;&#32;}
439 
440 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
441 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
442 &#32;&#32;&#32;&#32;{
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;-&#32;m2[0],
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;-&#32;m2[1],
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;-&#32;m2[2]);
447 &#32;&#32;&#32;&#32;}
448 
449 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
450 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
451 &#32;&#32;&#32;&#32;{
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar);
456 &#32;&#32;&#32;&#32;}
457 
458 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
459 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;scalar,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
460 &#32;&#32;&#32;&#32;{
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar);
465 &#32;&#32;&#32;&#32;}
466 
467 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
468 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::col_type</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
469 &#32;&#32;&#32;&#32;{
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::col_type</link>(
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
474 &#32;&#32;&#32;&#32;}
475 
476 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
477 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::row_type</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
478 &#32;&#32;&#32;&#32;{
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::row_type</link>(
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[0][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[1][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[2][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
483 &#32;&#32;&#32;&#32;}
484 
485 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
486 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
487 &#32;&#32;&#32;&#32;{
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA00&#32;=&#32;m1[0][0];
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA01&#32;=&#32;m1[0][1];
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA02&#32;=&#32;m1[0][2];
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA10&#32;=&#32;m1[1][0];
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA11&#32;=&#32;m1[1][1];
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA12&#32;=&#32;m1[1][2];
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA20&#32;=&#32;m1[2][0];
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA21&#32;=&#32;m1[2][1];
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA22&#32;=&#32;m1[2][2];
497 
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB00&#32;=&#32;m2[0][0];
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB01&#32;=&#32;m2[0][1];
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB02&#32;=&#32;m2[0][2];
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB10&#32;=&#32;m2[1][0];
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB11&#32;=&#32;m2[1][1];
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB12&#32;=&#32;m2[1][2];
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB20&#32;=&#32;m2[2][0];
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB21&#32;=&#32;m2[2][1];
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB22&#32;=&#32;m2[2][2];
507 
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;Result;
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB00&#32;+&#32;SrcA10&#32;*&#32;SrcB01&#32;+&#32;SrcA20&#32;*&#32;SrcB02;
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB00&#32;+&#32;SrcA11&#32;*&#32;SrcB01&#32;+&#32;SrcA21&#32;*&#32;SrcB02;
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB00&#32;+&#32;SrcA12&#32;*&#32;SrcB01&#32;+&#32;SrcA22&#32;*&#32;SrcB02;
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB10&#32;+&#32;SrcA10&#32;*&#32;SrcB11&#32;+&#32;SrcA20&#32;*&#32;SrcB12;
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB10&#32;+&#32;SrcA11&#32;*&#32;SrcB11&#32;+&#32;SrcA21&#32;*&#32;SrcB12;
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB10&#32;+&#32;SrcA12&#32;*&#32;SrcB11&#32;+&#32;SrcA22&#32;*&#32;SrcB12;
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB20&#32;+&#32;SrcA10&#32;*&#32;SrcB21&#32;+&#32;SrcA20&#32;*&#32;SrcB22;
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB20&#32;+&#32;SrcA11&#32;*&#32;SrcB21&#32;+&#32;SrcA21&#32;*&#32;SrcB22;
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB20&#32;+&#32;SrcA12&#32;*&#32;SrcB21&#32;+&#32;SrcA22&#32;*&#32;SrcB22;
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
519 &#32;&#32;&#32;&#32;}
520 
521 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
522 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
523 &#32;&#32;&#32;&#32;{
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>(
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2],
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2],
527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[0][2],
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2],
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2],
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[1][2]);
531 &#32;&#32;&#32;&#32;}
532 
533 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
534 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
535 &#32;&#32;&#32;&#32;{
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>(
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2],
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2],
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[0][2],
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2],
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2],
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[1][2],
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2],
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2],
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[2][2],
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[3][2],
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[3][2],
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][2]&#32;*&#32;m2[3][2]);
549 &#32;&#32;&#32;&#32;}
550 
551 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
552 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;&#32;T&#32;scalar)
553 &#32;&#32;&#32;&#32;{
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;/&#32;scalar,
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;/&#32;scalar,
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;/&#32;scalar);
558 &#32;&#32;&#32;&#32;}
559 
560 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
561 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(T&#32;scalar,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
562 &#32;&#32;&#32;&#32;{
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>(
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[0],
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[1],
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[2]);
567 &#32;&#32;&#32;&#32;}
568 
569 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
570 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::col_type</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::row_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
571 &#32;&#32;&#32;&#32;{
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(m)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
573 &#32;&#32;&#32;&#32;}
574 
575 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
576 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::row_type</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;::col_type</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
577 &#32;&#32;&#32;&#32;{
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;*&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(m);
579 &#32;&#32;&#32;&#32;}
580 
581 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
582 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
583 &#32;&#32;&#32;&#32;{
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;m1_copy(m1);
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m1_copy&#32;/=&#32;m2;
586 &#32;&#32;&#32;&#32;}
587 
588 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
589 
590 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
591 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
592 &#32;&#32;&#32;&#32;{
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;==&#32;m2[0])&#32;&amp;&amp;&#32;(m1[1]&#32;==&#32;m2[1])&#32;&amp;&amp;&#32;(m1[2]&#32;==&#32;m2[2]);
594 &#32;&#32;&#32;&#32;}
595 
596 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
597 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
598 &#32;&#32;&#32;&#32;{
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;!=&#32;m2[0])&#32;||&#32;(m1[1]&#32;!=&#32;m2[1])&#32;||&#32;(m1[2]&#32;!=&#32;m2[2]);
600 &#32;&#32;&#32;&#32;}
601 }&#32;<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
