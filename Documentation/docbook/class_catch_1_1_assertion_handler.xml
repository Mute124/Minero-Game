<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_catch_1_1_assertion_handler" xml:lang="en-US">
<title>Catch::AssertionHandler Class Reference</title>
<indexterm><primary>Catch::AssertionHandler</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_assertion_handler_1a32efbb1b56b71d758d4c2094bac1f1a9">AssertionHandler</link> (<link linkend="_class_catch_1_1_string_ref">StringRef</link> const &amp;macroName, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> const &amp;lineInfo, <link linkend="_class_catch_1_1_string_ref">StringRef</link> capturedExpression, <link linkend="_struct_catch_1_1_result_disposition_1a3396cad6e2259af326b3aae93e23e9d8">ResultDisposition::Flags</link> resultDisposition)</para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_assertion_handler_1a1e839d810f6ac0fa6d127fe8350175ed">~AssertionHandler</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1a2ef387e567bad90ec6e4b5bf5c367388">handleExpr</link> (<link linkend="_class_catch_1_1_expr_lhs">ExprLhs</link>&lt; T &gt; const &amp;expr)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1afe14d9cf1b1c7f70dae439fbdb51d0c4">handleExpr</link> (<link linkend="_struct_catch_1_1_i_transient_expression">ITransientExpression</link> const &amp;expr)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1abdb4c180ed83ec2858b2fb87712c516d">handleMessage</link> (<link linkend="_struct_catch_1_1_result_was_1a624e1ee3661fcf6094ceef1f654601ef">ResultWas::OfType</link> resultType, <link linkend="_class_catch_1_1_string_ref">StringRef</link> const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a7b6161cffb9b8aee272b3b916183d28c">message</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1ab6caf765764a4064e90fce829eec201d">handleExceptionThrownAsExpected</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1a7764d0adb6ed5eeb10964f6abc02fab1">handleUnexpectedExceptionNotThrown</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1a51e4936e3af43b74690cedae6d2e297a">handleExceptionNotThrownAsExpected</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1a67a194d5518f307c4a16faa03a7f7442">handleThrowingCallSkipped</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1aa2504dad6a91f3645e5f52c932c11270">handleUnexpectedInflightException</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1a878a9eb828d8a1863c8dcb6575f6f40e">complete</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class_catch_1_1_assertion_handler_1a6756bd5395c0ddd28764a9fb4612d5e4">setCompleted</link> ()</para>
</listitem>
            <listitem><para>auto <link linkend="_class_catch_1_1_assertion_handler_1a193bb3999494c46457f3059184c6b251">allowThrows</link> () const -&gt; <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a32efbb1b56b71d758d4c2094bac1f1a9"/><section>
    <title>AssertionHandler()</title>
<indexterm><primary>AssertionHandler</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>AssertionHandler</secondary></indexterm>
<para><computeroutput>Catch::AssertionHandler::AssertionHandler (<link linkend="_class_catch_1_1_string_ref">StringRef</link> const &amp; macroName, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> const &amp; lineInfo, <link linkend="_class_catch_1_1_string_ref">StringRef</link> capturedExpression, <link linkend="_struct_catch_1_1_result_disposition_1a3396cad6e2259af326b3aae93e23e9d8">ResultDisposition::Flags</link> resultDisposition)</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a1e839d810f6ac0fa6d127fe8350175ed"/><section>
    <title>~AssertionHandler()</title>
<indexterm><primary>~AssertionHandler</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>~AssertionHandler</secondary></indexterm>
<para><computeroutput>Catch::AssertionHandler::~AssertionHandler ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_assertion_handler_a1e839d810f6ac0fa6d127fe8350175ed_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a193bb3999494c46457f3059184c6b251"/><section>
    <title>allowThrows()</title>
<indexterm><primary>allowThrows</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>allowThrows</secondary></indexterm>
<para><computeroutput>auto Catch::AssertionHandler::allowThrows ( ) const -&gt;  <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a878a9eb828d8a1863c8dcb6575f6f40e"/><section>
    <title>complete()</title>
<indexterm><primary>complete</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>complete</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::complete ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a51e4936e3af43b74690cedae6d2e297a"/><section>
    <title>handleExceptionNotThrownAsExpected()</title>
<indexterm><primary>handleExceptionNotThrownAsExpected</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleExceptionNotThrownAsExpected</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleExceptionNotThrownAsExpected ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1ab6caf765764a4064e90fce829eec201d"/><section>
    <title>handleExceptionThrownAsExpected()</title>
<indexterm><primary>handleExceptionThrownAsExpected</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleExceptionThrownAsExpected</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleExceptionThrownAsExpected ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a2ef387e567bad90ec6e4b5bf5c367388"/><section>
    <title>handleExpr()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>handleExpr</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleExpr</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleExpr (<link linkend="_class_catch_1_1_expr_lhs">ExprLhs</link>&lt; T &gt; const &amp; expr)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_assertion_handler_a2ef387e567bad90ec6e4b5bf5c367388_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_assertion_handler_a2ef387e567bad90ec6e4b5bf5c367388_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1afe14d9cf1b1c7f70dae439fbdb51d0c4"/><section>
    <title>handleExpr()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>handleExpr</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleExpr</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleExpr (<link linkend="_struct_catch_1_1_i_transient_expression">ITransientExpression</link> const &amp; expr)</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1abdb4c180ed83ec2858b2fb87712c516d"/><section>
    <title>handleMessage()</title>
<indexterm><primary>handleMessage</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleMessage</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleMessage (<link linkend="_struct_catch_1_1_result_was_1a624e1ee3661fcf6094ceef1f654601ef">ResultWas::OfType</link> resultType, <link linkend="_class_catch_1_1_string_ref">StringRef</link> const &amp; message)</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a67a194d5518f307c4a16faa03a7f7442"/><section>
    <title>handleThrowingCallSkipped()</title>
<indexterm><primary>handleThrowingCallSkipped</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleThrowingCallSkipped</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleThrowingCallSkipped ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a7764d0adb6ed5eeb10964f6abc02fab1"/><section>
    <title>handleUnexpectedExceptionNotThrown()</title>
<indexterm><primary>handleUnexpectedExceptionNotThrown</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleUnexpectedExceptionNotThrown</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleUnexpectedExceptionNotThrown ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1aa2504dad6a91f3645e5f52c932c11270"/><section>
    <title>handleUnexpectedInflightException()</title>
<indexterm><primary>handleUnexpectedInflightException</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>handleUnexpectedInflightException</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::handleUnexpectedInflightException ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_assertion_handler_1a6756bd5395c0ddd28764a9fb4612d5e4"/><section>
    <title>setCompleted()</title>
<indexterm><primary>setCompleted</primary><secondary>Catch::AssertionHandler</secondary></indexterm>
<indexterm><primary>Catch::AssertionHandler</primary><secondary>setCompleted</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> Catch::AssertionHandler::setCompleted ( )</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_catch_8hpp">catch.hpp</link></section>
</section>
