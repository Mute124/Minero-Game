<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2bits_2quoted__string_8h_source" xml:lang="en-US">
<title>quoted_string.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/bits/quoted_string.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Helpers&#32;for&#32;quoted&#32;stream&#32;manipulators&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2013-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_QUOTED_STRING_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_GLIBCXX_QUOTED_STRING_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
34 
35 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&lt;&#32;201103L</emphasis>
36 <emphasis role="preprocessor">#&#32;include&#32;&lt;bits/c++0x_warning.h&gt;</emphasis>
37 <emphasis role="preprocessor">#else</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
39 
40 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
41 {
42 _GLIBCXX_BEGIN_NAMESPACE_VERSION
43 
44 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>__detail&#32;{
48 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_String,&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT&gt;
49 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Quoted_string
50 &#32;&#32;&#32;&#32;&#32;&#32;{
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">static_assert</emphasis>(is_reference&lt;_String&gt;::value
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;is_pointer&lt;_String&gt;::value,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;String&#32;type&#32;must&#32;be&#32;pointer&#32;or&#32;reference&quot;</emphasis>);
54 
55 &#32;&#32;&#32;&#32;_Quoted_string(_String&#32;__str,&#32;_CharT&#32;__del,&#32;_CharT&#32;__esc)
56 &#32;&#32;&#32;&#32;:&#32;_M_string(__str),&#32;_M_delim{__del},&#32;_M_escape{__esc}
57 &#32;&#32;&#32;&#32;{&#32;}
58 
59 &#32;&#32;&#32;&#32;_Quoted_string&amp;
60 &#32;&#32;&#32;&#32;operator=(_Quoted_string&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
61 
62 &#32;&#32;&#32;&#32;_String&#32;_M_string;
63 &#32;&#32;&#32;&#32;_CharT&#32;_M_delim;
64 &#32;&#32;&#32;&#32;_CharT&#32;_M_escape;
65 &#32;&#32;&#32;&#32;&#32;&#32;};
66 
67 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201703L</emphasis>
68 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Quoted_string&lt;basic_string_view&lt;_CharT,&#32;_Traits&gt;,&#32;_CharT&gt;
70 &#32;&#32;&#32;&#32;&#32;&#32;{
71 &#32;&#32;&#32;&#32;_Quoted_string(basic_string_view&lt;_CharT,&#32;_Traits&gt;&#32;__str,
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&#32;__del,&#32;_CharT&#32;__esc)
73 &#32;&#32;&#32;&#32;:&#32;_M_string(__str),&#32;_M_delim{__del},&#32;_M_escape{__esc}
74 &#32;&#32;&#32;&#32;{&#32;}
75 
76 &#32;&#32;&#32;&#32;_Quoted_string&amp;
77 &#32;&#32;&#32;&#32;operator=(_Quoted_string&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
78 
79 &#32;&#32;&#32;&#32;basic_string_view&lt;_CharT,&#32;_Traits&gt;&#32;_M_string;
80 &#32;&#32;&#32;&#32;_CharT&#32;_M_delim;
81 &#32;&#32;&#32;&#32;_CharT&#32;_M_escape;
82 &#32;&#32;&#32;&#32;&#32;&#32;};
83 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++17</emphasis>
84 
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
92 &#32;&#32;&#32;&#32;&#32;&#32;std::basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;
93 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_forward__declarations_8h_1ade7e3bc03b39cb3b5684a4c302832e3c">operator&lt;&lt;</link>(std::basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__os,
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Quoted_string&lt;const&#32;_CharT*,&#32;_CharT&gt;&amp;&#32;__str)
95 &#32;&#32;&#32;&#32;&#32;&#32;{
96 &#32;&#32;&#32;&#32;std::basic_ostringstream&lt;_CharT,&#32;_Traits&gt;&#32;__ostr;
97 &#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__str._M_delim;
98 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__c&#32;=&#32;__str._M_string;&#32;*__c;&#32;++__c)
99 &#32;&#32;&#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*__c&#32;==&#32;__str._M_delim&#32;||&#32;*__c&#32;==&#32;__str._M_escape)
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__str._M_escape;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;*__c;
103 &#32;&#32;&#32;&#32;&#32;&#32;}
104 &#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__str._M_delim;
105 
106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__os&#32;&lt;&lt;&#32;__ostr.str();
107 &#32;&#32;&#32;&#32;&#32;&#32;}
108 
115 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_String&gt;
116 &#32;&#32;&#32;&#32;&#32;&#32;std::basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;
117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_forward__declarations_8h_1ade7e3bc03b39cb3b5684a4c302832e3c">operator&lt;&lt;</link>(std::basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__os,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Quoted_string&lt;_String,&#32;_CharT&gt;&amp;&#32;__str)
119 &#32;&#32;&#32;&#32;&#32;&#32;{
120 &#32;&#32;&#32;&#32;std::basic_ostringstream&lt;_CharT,&#32;_Traits&gt;&#32;__ostr;
121 &#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__str._M_delim;
122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;__c&#32;:&#32;__str._M_string)
123 &#32;&#32;&#32;&#32;&#32;&#32;{
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__c&#32;==&#32;__str._M_delim&#32;||&#32;__c&#32;==&#32;__str._M_escape)
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__str._M_escape;
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__c;
127 &#32;&#32;&#32;&#32;&#32;&#32;}
128 &#32;&#32;&#32;&#32;__ostr&#32;&lt;&lt;&#32;__str._M_delim;
129 
130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__os&#32;&lt;&lt;&#32;__ostr.str();
131 &#32;&#32;&#32;&#32;&#32;&#32;}
132 
137 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
138 &#32;&#32;&#32;&#32;&#32;&#32;std::basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;
139 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1a4560e59cc4f5ddaf0ec23d1a7050b611">operator&gt;&gt;</link>(std::basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__is,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Quoted_string&lt;<link linkend="_classbasic__string">basic_string&lt;_CharT, _Traits, _Alloc&gt;</link>&amp;,
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&gt;&amp;&#32;__str)
142 &#32;&#32;&#32;&#32;&#32;&#32;{
143 &#32;&#32;&#32;&#32;_CharT&#32;__c;
144 &#32;&#32;&#32;&#32;__is&#32;&gt;&gt;&#32;__c;
145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__is.good())
146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__is;
147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__c&#32;!=&#32;__str._M_delim)
148 &#32;&#32;&#32;&#32;&#32;&#32;{
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__is.unget();
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__is&#32;&gt;&gt;&#32;__str._M_string;
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__is;
152 &#32;&#32;&#32;&#32;&#32;&#32;}
153 &#32;&#32;&#32;&#32;__str._M_string.clear();
154 &#32;&#32;&#32;&#32;std::ios_base::fmtflags&#32;__flags
155 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;__is.flags(__is.flags()&#32;&amp;&#32;~std::ios_base::skipws);
156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;{
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__is&#32;&gt;&gt;&#32;__c;
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__is.good())
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__c&#32;==&#32;__str._M_escape)
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__is&#32;&gt;&gt;&#32;__c;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__is.good())
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__c&#32;==&#32;__str._M_delim)
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_string&#32;+=&#32;__c;
170 &#32;&#32;&#32;&#32;&#32;&#32;}
171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>);
172 &#32;&#32;&#32;&#32;__is.setf(__flags);
173 
174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__is;
175 &#32;&#32;&#32;&#32;&#32;&#32;}
176 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;__detail</emphasis>
177 
178 _GLIBCXX_END_NAMESPACE_VERSION
179 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
180 
181 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
182 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_QUOTED_STRING_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
