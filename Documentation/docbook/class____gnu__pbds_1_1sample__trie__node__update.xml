<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1sample__trie__node__update" xml:lang="en-US">
<title>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary></indexterm>
<para>

<para>A sample node updator. </para>
 
</para>
<para>
<computeroutput>#include &lt;sample_trie_node_update.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::size_t <link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1a87188a4616c3ea4295631ac1a3fb5e82">metadata_type</link></para>
</listitem>
            <listitem><para>typedef std::size_t <link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1a87188a4616c3ea4295631ac1a3fb5e82">metadata_type</link></para>
</listitem>
            <listitem><para>typedef std::size_t <link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1a87188a4616c3ea4295631ac1a3fb5e82">metadata_type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1a303d518c5c155beff935af9eb5c5d5f1">sample_trie_node_update</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1ae4db417d4455178d78933ae2fae0c0c1">operator()</link> (node_iterator, node_const_iterator) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1a303d518c5c155beff935af9eb5c5d5f1">sample_trie_node_update</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1ae4db417d4455178d78933ae2fae0c0c1">operator()</link> (node_iterator, node_const_iterator) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1a303d518c5c155beff935af9eb5c5d5f1">sample_trie_node_update</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1sample__trie__node__update_1ae4db417d4455178d78933ae2fae0c0c1">operator()</link> (node_iterator, node_const_iterator) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node_CItr, typename Node_Itr, typename _ATraits, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</title></simplesect>

<para>A sample node updator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1a87188a4616c3ea4295631ac1a3fb5e82"/><section>
    <title>metadata_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::size_t <link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1a87188a4616c3ea4295631ac1a3fb5e82"/><section>
    <title>metadata_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::size_t <link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1a87188a4616c3ea4295631ac1a3fb5e82"/><section>
    <title>metadata_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::size_t <link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1a303d518c5c155beff935af9eb5c5d5f1"/><section>
    <title>sample_trie_node_update()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>sample_trie_node_update</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>sample_trie_node_update</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::sample_trie_node_update ( )<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1a303d518c5c155beff935af9eb5c5d5f1"/><section>
    <title>sample_trie_node_update()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>sample_trie_node_update</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>sample_trie_node_update</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::sample_trie_node_update ( )<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1a303d518c5c155beff935af9eb5c5d5f1"/><section>
    <title>sample_trie_node_update()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>sample_trie_node_update</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>sample_trie_node_update</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::sample_trie_node_update ( )<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1ae4db417d4455178d78933ae2fae0c0c1"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (node_iterator , node_const_iterator ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Updates the rank of a node through a node_iterator node_it; end_nd_it is the end node iterator. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1ae4db417d4455178d78933ae2fae0c0c1"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (node_iterator , node_const_iterator ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Updates the rank of a node through a node_iterator node_it; end_nd_it is the end node iterator. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1sample__trie__node__update_1ae4db417d4455178d78933ae2fae0c0c1"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (node_iterator , node_const_iterator ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Updates the rank of a node through a node_iterator node_it; end_nd_it is the end node iterator. </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2sample__trie__node__update_8hpp">sample_trie_node_update.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2sample__trie__node__update_8hpp">sample_trie_node_update.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2sample__trie__node__update_8hpp">sample_trie_node_update.hpp</link></section>
</section>
