<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_parser_8h_source" xml:lang="en-US">
<title>parser.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/parser.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//#&#32;This&#32;file&#32;is&#32;a&#32;part&#32;of&#32;toml++&#32;and&#32;is&#32;subject&#32;to&#32;the&#32;the&#32;terms&#32;of&#32;the&#32;MIT&#32;license.</emphasis>
2 <emphasis role="comment">//#&#32;Copyright&#32;(c)&#32;Mark&#32;Gillard&#32;&lt;mark.gillard@outlook.com.au&gt;</emphasis>
3 <emphasis role="comment">//#&#32;See&#32;https://github.com/marzer/tomlplusplus/blob/master/LICENSE&#32;for&#32;the&#32;full&#32;license&#32;text.</emphasis>
4 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;MIT</emphasis>
5 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_preprocessor_8h">preprocessor.h</link>&quot;</emphasis>
8 <emphasis role="preprocessor">#if&#32;TOML_ENABLE_PARSER</emphasis>
9 
10 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_table_8h">table.h</link>&quot;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_parse__result_8h">parse_result.h</link>&quot;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_header__start_8h">header_start.h</link>&quot;</emphasis>
13 
14 <link linkend="_parser_8h_1a24e5c42f7e94b0b0f3212744874731e6">TOML_NAMESPACE_START</link>
15 {
16 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a1b2e27349c9e21d35138a1196acd6d58">TOML_ABI_NAMESPACE_BOOL</link>(<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>,&#32;ex,&#32;noex);
17 
38 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
39 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
40 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::string_view&#32;doc,&#32;std::string_view&#32;source_path&#32;=&#32;{});
41 
62 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
63 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
64 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::string_view&#32;doc,&#32;std::string&#32;&amp;&amp;&#32;source_path);
65 
81 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
82 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
83 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a46871a821db14b2bcd5b5b9cc4571317">parse_file</link>(std::string_view&#32;file_path);
84 
85 <emphasis role="preprocessor">#if&#32;TOML_HAS_CHAR8</emphasis>
86 
107 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
108 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
109 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::u8string_view&#32;doc,&#32;std::string_view&#32;source_path&#32;=&#32;{});
110 
131 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
132 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
133 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::u8string_view&#32;doc,&#32;std::string&#32;&amp;&amp;&#32;source_path);
134 
150 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
151 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
152 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a46871a821db14b2bcd5b5b9cc4571317">parse_file</link>(std::u8string_view&#32;file_path);
153 
154 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TOML_HAS_CHAR8</emphasis>
155 
156 <emphasis role="preprocessor">#if&#32;TOML_ENABLE_WINDOWS_COMPAT</emphasis>
157 
180 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
181 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
182 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::string_view&#32;doc,&#32;std::wstring_view&#32;source_path);
183 
209 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
210 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
211 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::istream&#32;&amp;&#32;doc,&#32;std::wstring_view&#32;source_path);
212 
230 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
231 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
232 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a46871a821db14b2bcd5b5b9cc4571317">parse_file</link>(std::wstring_view&#32;file_path);
233 
234 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TOML_ENABLE_WINDOWS_COMPAT</emphasis>
235 
236 <emphasis role="preprocessor">#if&#32;TOML_HAS_CHAR8&#32;&amp;&amp;&#32;TOML_ENABLE_WINDOWS_COMPAT</emphasis>
237 
260 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
261 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
262 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::u8string_view&#32;doc,&#32;std::wstring_view&#32;source_path);
263 
264 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TOML_HAS_CHAR8&#32;&amp;&amp;&#32;TOML_ENABLE_WINDOWS_COMPAT</emphasis>
265 
289 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
290 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
291 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::istream&#32;&amp;&#32;doc,&#32;std::string_view&#32;source_path&#32;=&#32;{});
292 
316 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
317 &#32;&#32;&#32;&#32;<link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link>
318 &#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::istream&#32;&amp;&#32;doc,&#32;std::string&#32;&amp;&amp;&#32;source_path);
319 
320 &#32;&#32;&#32;&#32;<link linkend="_parser_8h_1aa188664cce4904ae8832f7fa59f10211">TOML_ABI_NAMESPACE_END</link>;&#32;<emphasis role="comment">//&#32;TOML_EXCEPTIONS</emphasis>
321 
322 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceliterals">literals</link>
323 &#32;&#32;&#32;&#32;{
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a1b2e27349c9e21d35138a1196acd6d58">TOML_ABI_NAMESPACE_BOOL</link>(<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>,&#32;lit_ex,&#32;lit_noex);
325 
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link>
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<emphasis role="keyword">operator</emphasis><emphasis role="stringliteral">&quot;&quot;</emphasis>&#32;_toml(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::string_view{&#32;str,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;});
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
352 
353 <emphasis role="preprocessor">#if&#32;TOML_HAS_CHAR8</emphasis>
354 
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link>
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classparse__result">parse_result</link>&#32;<emphasis role="keyword">operator</emphasis><emphasis role="stringliteral">&quot;&quot;</emphasis>&#32;_toml(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char8_t</emphasis>*&#32;str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>(std::u8string_view{&#32;str,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;});
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
381 
382 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TOML_HAS_CHAR8</emphasis>
383 
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceliterals_1a179ab2ccfe25b96becb1decf42648ca9">TOML_ABI_NAMESPACE_END</link>;&#32;<emphasis role="comment">//&#32;TOML_EXCEPTIONS</emphasis>
385 &#32;&#32;&#32;&#32;}
386 }
387 <link linkend="_parser_8h_1afa65688cac47ce86021fef8d739f9fd8">TOML_NAMESPACE_END</link>;
388 
389 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_header__end_8h">header_end.h</link>&quot;</emphasis>
390 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TOML_ENABLE_PARSER</emphasis>
</programlisting></section>
