<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2_smooth-_infinite-_voxel-_terrain-master_2_noise_calculator_8h_source" xml:lang="en-US">
<title>NoiseCalculator.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/Smooth-Infinite-Voxel-Terrain-master/NoiseCalculator.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Fill&#32;out&#32;your&#32;copyright&#32;notice&#32;in&#32;the&#32;Description&#32;page&#32;of&#32;Project&#32;Settings.</emphasis>
2 
3 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;Engine.h&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lib_2_smooth-_infinite-_voxel-_terrain-master_2_terrain_gen_manager_8h">TerrainGenManager.h</link>&quot;</emphasis>
7 
11 <emphasis role="keyword">class&#32;</emphasis>POLYVOX_TEST_API&#32;<link linkend="_class_noise_calculator">NoiseCalculator</link>&#32;:&#32;FRunnable
12 {
13 <emphasis role="keyword">public</emphasis>:
14 &#32;&#32;&#32;&#32;
15 &#32;&#32;&#32;&#32;<link linkend="_class_noise_calculator">NoiseCalculator</link>*&#32;calc;
16 &#32;&#32;&#32;&#32;
17 &#32;&#32;&#32;&#32;FRunnableThread*&#32;Thread;
18 &#32;&#32;&#32;&#32;
19 &#32;&#32;&#32;&#32;<link linkend="_class_a_terrain_gen_manager">ATerrainGenManager</link>*&#32;genchunk;
20 &#32;&#32;&#32;&#32;
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;noiseVal&#32;=&#32;0.0f;
22 &#32;&#32;&#32;&#32;
23 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;de_frequency&#32;=&#32;0.005;
24 &#32;&#32;&#32;&#32;
25 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;amplitude&#32;=&#32;15.0f;
26 &#32;&#32;&#32;&#32;
27 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;0.0f;
28 &#32;&#32;&#32;&#32;
29 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isThreadFinished&#32;=&#32;<emphasis role="keyword">false</emphasis>;
30 &#32;&#32;&#32;&#32;
31 &#32;&#32;&#32;&#32;FVector&#32;chunkloc;
32 &#32;&#32;&#32;&#32;
33 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;0.0f;
34 &#32;&#32;&#32;&#32;
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;0.0f;
36 &#32;&#32;&#32;&#32;
37 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_noise_calculator_1a835b51c5f40132c41fabc65c12d60c2a">isFinished</link>()<emphasis role="keyword">&#32;const</emphasis>
38 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;noiseVal&#32;==&#32;0.0f;
40 &#32;&#32;&#32;&#32;}
41 &#32;&#32;&#32;&#32;
42 &#32;&#32;&#32;&#32;<link linkend="_class_noise_calculator_1af0cf1a5bdcf79863d4ab0c118edb7353">NoiseCalculator</link>(<link linkend="_class_a_terrain_gen_manager">ATerrainGenManager</link>*&#32;chunk,&#32;FVector&#32;loc);
43 &#32;&#32;&#32;&#32;<link linkend="_class_noise_calculator_1a8eba302db074654b471853ae257f557e">NoiseCalculator</link>();
44 &#32;&#32;&#32;&#32;<link linkend="_class_noise_calculator_1afbfe31c07bdcad5e92f5f31be1e44ceb">~NoiseCalculator</link>();
45 &#32;&#32;&#32;&#32;
46 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_noise_calculator_1a3260c301e77ec34a6dc5c8c5accbc6ee">Init</link>();
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_noise_calculator_1a3b7f69998147a17bd49af05b91fdc215">Stop</link>();
48 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="_class_noise_calculator_1ad828a2dcd95adc17bf514b94c7508dce">Run</link>();
49 &#32;&#32;&#32;&#32;<emphasis role="comment">//virtual&#32;void&#32;Stop();</emphasis>
50 &#32;&#32;&#32;&#32;
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_noise_calculator_1af48c643f1cf47ef9dbd5f0738517ef31">ShutDown</link>();
52 &#32;&#32;&#32;&#32;
53 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_noise_calculator_1a9ab1f4dc75a858ddb123fc82cef11bb8">EnsureCompletion</link>();
54 
55 };
</programlisting></section>
