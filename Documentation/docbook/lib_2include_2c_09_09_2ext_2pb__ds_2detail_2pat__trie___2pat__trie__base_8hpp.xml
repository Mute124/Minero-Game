<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;debug/debug.h&gt;<?linebreak?></programlisting>Include dependency graph for pat_trie_base.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base">__gnu_pbds::detail::pat_trie_base</link></para>

<para>Base type for PATRICIA trees. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___metadata">__gnu_pbds::detail::pat_trie_base::_Metadata&lt; Metadata, _Alloc &gt;</link></para>

<para>Metadata base primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___metadata_3_01null__type_00_01___alloc_01_4">__gnu_pbds::detail::pat_trie_base::_Metadata&lt; null_type, _Alloc &gt;</link></para>

<para>Specialization for null metadata. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___node__base">__gnu_pbds::detail::pat_trie_base::_Node_base&lt; _ATraits, Metadata &gt;</link></para>

<para>Node base. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___head">__gnu_pbds::detail::pat_trie_base::_Head&lt; _ATraits, Metadata &gt;</link></para>

<para>Head node for PATRICIA tree. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___leaf">__gnu_pbds::detail::pat_trie_base::_Leaf&lt; _ATraits, Metadata &gt;</link></para>

<para>Leaf node for PATRICIA tree. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;</link></para>

<para>Internal node type, PATRICIA tree. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</link></para>

<para>Constant child iterator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1iterator">__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::iterator</link></para>

<para>Child iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</link></para>

<para>Const iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___iter">__gnu_pbds::detail::pat_trie_base::_Iter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</link></para>

<para>Iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___node__citer">__gnu_pbds::detail::pat_trie_base::_Node_citer&lt; Node, Leaf, Head, Inode, _CIterator, Iterator, _Alloc &gt;</link></para>

<para>Node const iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___node__iter">__gnu_pbds::detail::pat_trie_base::_Node_iter&lt; Node, Leaf, Head, Inode, _CIterator, Iterator, _Alloc &gt;</link></para>

<para>Node iterator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__pbds">__gnu_pbds</link></para>

<para>GNU extensions for policy-based data structures for public use. </para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____gnu__pbds_1_1detail">__gnu_pbds::detail</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1a9f1c7f241710da62e8f0a61c65910573">PB_DS_CONST_IT_C_DEC</link>&#160;&#160;&#160;    _CIter&lt;Node, Leaf, Head, Inode, Is_Forward_Iterator&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link>&#160;&#160;&#160;    _CIter&lt;Node, Leaf, Head, Inode, !Is_Forward_Iterator&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ac4cdb487d3f0f5acf35c0bfe7b1bfec4">PB_DS_IT_C_DEC</link>&#160;&#160;&#160;    _Iter&lt;Node, Leaf, Head, Inode, Is_Forward_Iterator&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ab895bcd56d5abacc59c2785bf242079b">PB_DS_ODIR_IT_C_DEC</link>&#160;&#160;&#160;    _Iter&lt;Node, Leaf, Head, Inode, !Is_Forward_Iterator&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ad7d2a9f9d8f2a50cbee6878c4f105bb5">PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC</link>&#160;&#160;&#160;    _Node_citer&lt;Node, Leaf, Head, Inode, _CIterator, Iterator, _ATraits, _Alloc&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ae534ac98e5add6e9f7e1f7f94276fc3f">PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC</link>&#160;&#160;&#160;    _Node_iter&lt;Node, Leaf, Head, Inode, _CIterator, Iterator, _ATraits, _Alloc&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>&#160;&#160;&#160;    template&lt;typename _ATraits, typename Metadata&gt;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&#160;&#160;&#160;    pat_trie_base::_Inode&lt;_ATraits, Metadata&gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1a304b8b73a11afe64bfca54576b91263b"/><section>
    <title>PB_DS_CLASS_C_DEC</title>
<indexterm><primary>PB_DS_CLASS_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_CLASS_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_CLASS_C_DEC&#160;&#160;&#160;    pat_trie_base::_Inode&lt;_ATraits, Metadata&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff"/><section>
    <title>PB_DS_CLASS_T_DEC</title>
<indexterm><primary>PB_DS_CLASS_T_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_CLASS_T_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_CLASS_T_DEC&#160;&#160;&#160;    template&lt;typename _ATraits, typename Metadata&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1a9f1c7f241710da62e8f0a61c65910573"/><section>
    <title>PB_DS_CONST_IT_C_DEC</title>
<indexterm><primary>PB_DS_CONST_IT_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_CONST_IT_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_CONST_IT_C_DEC&#160;&#160;&#160;    _CIter&lt;Node, Leaf, Head, Inode, Is_Forward_Iterator&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982"/><section>
    <title>PB_DS_CONST_ODIR_IT_C_DEC</title>
<indexterm><primary>PB_DS_CONST_ODIR_IT_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_CONST_ODIR_IT_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_CONST_ODIR_IT_C_DEC&#160;&#160;&#160;    _CIter&lt;Node, Leaf, Head, Inode, !Is_Forward_Iterator&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ac4cdb487d3f0f5acf35c0bfe7b1bfec4"/><section>
    <title>PB_DS_IT_C_DEC</title>
<indexterm><primary>PB_DS_IT_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_IT_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_IT_C_DEC&#160;&#160;&#160;    _Iter&lt;Node, Leaf, Head, Inode, Is_Forward_Iterator&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ab895bcd56d5abacc59c2785bf242079b"/><section>
    <title>PB_DS_ODIR_IT_C_DEC</title>
<indexterm><primary>PB_DS_ODIR_IT_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_ODIR_IT_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_ODIR_IT_C_DEC&#160;&#160;&#160;    _Iter&lt;Node, Leaf, Head, Inode, !Is_Forward_Iterator&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ad7d2a9f9d8f2a50cbee6878c4f105bb5"/><section>
    <title>PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC</title>
<indexterm><primary>PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC&#160;&#160;&#160;    _Node_citer&lt;Node, Leaf, Head, Inode, _CIterator, Iterator, _ATraits, _Alloc&gt;</computeroutput></para></section>
<anchor xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1ae534ac98e5add6e9f7e1f7f94276fc3f"/><section>
    <title>PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC</title>
<indexterm><primary>PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC</primary><secondary>pat_trie_base.hpp</secondary></indexterm>
<indexterm><primary>pat_trie_base.hpp</primary><secondary>PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC&#160;&#160;&#160;    _Node_iter&lt;Node, Leaf, Head, Inode, _CIterator, Iterator, _ATraits, _Alloc&gt;</computeroutput></para></section>
</section>
</section>
