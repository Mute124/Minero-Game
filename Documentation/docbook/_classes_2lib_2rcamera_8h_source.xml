<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2rcamera_8h_source" xml:lang="en-US">
<title>rcamera.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/rcamera.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*******************************************************************************************</emphasis>
2 <emphasis role="comment">*</emphasis>
3 <emphasis role="comment">*&#32;&#32;&#32;rcamera&#32;-&#32;Basic&#32;camera&#32;system&#32;with&#32;support&#32;for&#32;multiple&#32;camera&#32;modes</emphasis>
4 <emphasis role="comment">*</emphasis>
5 <emphasis role="comment">*&#32;&#32;&#32;CONFIGURATION:</emphasis>
6 <emphasis role="comment">*</emphasis>
7 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;CAMERA_IMPLEMENTATION</emphasis>
8 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;the&#32;implementation&#32;of&#32;the&#32;library&#32;into&#32;the&#32;included&#32;file.</emphasis>
9 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;defined,&#32;the&#32;library&#32;is&#32;in&#32;header&#32;only&#32;mode&#32;and&#32;can&#32;be&#32;included&#32;in&#32;other&#32;headers</emphasis>
10 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;source&#32;files&#32;without&#32;problems.&#32;But&#32;only&#32;ONE&#32;file&#32;should&#32;hold&#32;the&#32;implementation.</emphasis>
11 <emphasis role="comment">*</emphasis>
12 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;CAMERA_STANDALONE</emphasis>
13 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;defined,&#32;the&#32;library&#32;can&#32;be&#32;used&#32;as&#32;standalone&#32;as&#32;a&#32;camera&#32;system&#32;but&#32;some</emphasis>
14 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;functions&#32;must&#32;be&#32;redefined&#32;to&#32;manage&#32;inputs&#32;accordingly.</emphasis>
15 <emphasis role="comment">*</emphasis>
16 <emphasis role="comment">*&#32;&#32;&#32;CONTRIBUTORS:</emphasis>
17 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ramon&#32;Santamaria:&#32;&#32;&#32;Supervision,&#32;review,&#32;update&#32;and&#32;maintenance</emphasis>
18 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Christoph&#32;Wagner:&#32;&#32;&#32;Complete&#32;redesign,&#32;using&#32;raymath&#32;(2022)</emphasis>
19 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Marc&#32;Palau:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initial&#32;implementation&#32;(2014)</emphasis>
20 <emphasis role="comment">*</emphasis>
21 <emphasis role="comment">*</emphasis>
22 <emphasis role="comment">*&#32;&#32;&#32;LICENSE:&#32;zlib/libpng</emphasis>
23 <emphasis role="comment">*</emphasis>
24 <emphasis role="comment">*&#32;&#32;&#32;Copyright&#32;(c)&#32;2022-2023&#32;Christoph&#32;Wagner&#32;(@Crydsch)&#32;&amp;&#32;Ramon&#32;Santamaria&#32;(@raysan5)</emphasis>
25 <emphasis role="comment">*</emphasis>
26 <emphasis role="comment">*&#32;&#32;&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as-is&quot;,&#32;without&#32;any&#32;express&#32;or&#32;implied&#32;warranty.&#32;In&#32;no&#32;event</emphasis>
27 <emphasis role="comment">*&#32;&#32;&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
28 <emphasis role="comment">*</emphasis>
29 <emphasis role="comment">*&#32;&#32;&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,&#32;including&#32;commercial</emphasis>
30 <emphasis role="comment">*&#32;&#32;&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
31 <emphasis role="comment">*</emphasis>
32 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not&#32;claim&#32;that&#32;you</emphasis>
33 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment</emphasis>
34 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;product&#32;documentation&#32;would&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
35 <emphasis role="comment">*</emphasis>
36 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not&#32;be&#32;misrepresented</emphasis>
37 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
38 <emphasis role="comment">*</emphasis>
39 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source&#32;distribution.</emphasis>
40 <emphasis role="comment">*</emphasis>
41 <emphasis role="comment">**********************************************************************************************/</emphasis>
42 
43 <emphasis role="preprocessor">#ifndef&#32;RCAMERA_H</emphasis>
44 <emphasis role="preprocessor">#define&#32;RCAMERA_H</emphasis>
45 
46 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
47 <emphasis role="comment">//&#32;Defines&#32;and&#32;Macros</emphasis>
48 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
49 <emphasis role="comment">//&#32;Function&#32;specifiers&#32;definition</emphasis>
50 <emphasis role="preprocessor">#ifndef&#32;RLAPI</emphasis>
51 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;RLAPI&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Functions&#32;defined&#32;as&#32;&apos;extern&apos;&#32;by&#32;default&#32;(implicit&#32;specifiers)</emphasis>
52 <emphasis role="preprocessor">#endif</emphasis>
53 
54 <emphasis role="preprocessor">#if&#32;defined(CAMERA_STANDALONE)</emphasis>
55 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;CAMERA_CULL_DISTANCE_NEAR&#32;&#32;&#32;&#32;&#32;&#32;0.01</emphasis>
56 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;CAMERA_CULL_DISTANCE_FAR&#32;&#32;&#32;&#32;1000.0</emphasis>
57 <emphasis role="preprocessor">#else</emphasis>
58 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;CAMERA_CULL_DISTANCE_NEAR&#32;&#32;&#32;RL_CULL_DISTANCE_NEAR</emphasis>
59 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;CAMERA_CULL_DISTANCE_FAR&#32;&#32;&#32;&#32;RL_CULL_DISTANCE_FAR</emphasis>
60 <emphasis role="preprocessor">#endif</emphasis>
61 
62 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
63 <emphasis role="comment">//&#32;Types&#32;and&#32;Structures&#32;Definition</emphasis>
64 <emphasis role="comment">//&#32;NOTE:&#32;Below&#32;types&#32;are&#32;required&#32;for&#32;CAMERA_STANDALONE&#32;usage</emphasis>
65 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
66 <emphasis role="preprocessor">#if&#32;defined(CAMERA_STANDALONE)</emphasis>
67 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector2,&#32;2&#32;components</emphasis>
68 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vector2">Vector2</link>&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&#32;x&#32;component</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&#32;y&#32;component</emphasis>
71 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct_vector2">Vector2</link>;
72 
73 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3,&#32;3&#32;components</emphasis>
74 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vector3">Vector3</link>&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2">x</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&#32;x&#32;component</emphasis>
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13">y</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&#32;y&#32;component</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector3_1aa8c9461eb24bd2c364258078811a3e9d">z</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&#32;z&#32;component</emphasis>
78 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct_vector3">Vector3</link>;
79 
80 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;type,&#32;defines&#32;a&#32;camera&#32;position/orientation&#32;in&#32;3d&#32;space</emphasis>
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_camera3_d">Camera3D</link>&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_struct_camera3_d_1a78c3d3310cebdfe1054e10f62c8d15ce">position</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;position</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_struct_camera3_d_1ae87720bc94914ae37215b5057dba2c07">target</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;target&#32;it&#32;looks-at</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="_struct_camera3_d_1a63352199d3af7056c993d8b5c1bcfbe4">up</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;up&#32;vector&#32;(rotation&#32;over&#32;its&#32;axis)</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_camera3_d_1ae4fcff0ce33690cbe7b4d0259c448e8e">fovy</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;field-of-view&#32;apperture&#32;in&#32;Y&#32;(degrees)&#32;in&#32;perspective,&#32;used&#32;as&#32;near&#32;plane&#32;width&#32;in&#32;orthographic</emphasis>
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_camera3_d_1a6bdd1f11cd4e3d72ac9321b15979f3f0">projection</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;projection&#32;type:&#32;CAMERA_PERSPECTIVE&#32;or&#32;CAMERA_ORTHOGRAPHIC</emphasis>
87 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct_camera3_d">Camera3D</link>;
88 
89 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_camera3_d">Camera3D</link>&#32;<link linkend="__classes_2lib_2raylib_8h_1a3c09d25578723b8a82da7808fc461c11">Camera</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;type&#32;fallback,&#32;defaults&#32;to&#32;Camera3D</emphasis>
90 
91 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;projection</emphasis>
92 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;{
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a2d3e98136f7933519abb019705f0d2d8acbb2df9c79c81eae7447f379bac5aa7e">CAMERA_PERSPECTIVE</link>&#32;=&#32;0,&#32;<emphasis role="comment">//&#32;Perspective&#32;projection</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a2d3e98136f7933519abb019705f0d2d8af88d1708d9ea09bcd902cdebb4e31ead">CAMERA_ORTHOGRAPHIC</link>&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Orthographic&#32;projection</emphasis>
95 &#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2raylib_8h_1a2d3e98136f7933519abb019705f0d2d8">CameraProjection</link>;
96 
97 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;system&#32;modes</emphasis>
98 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;{
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35ad92b667c7667e6ae20ee60c6dbe35f08">CAMERA_CUSTOM</link>&#32;=&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;custom,&#32;controlled&#32;by&#32;user&#32;(UpdateCamera()&#32;does&#32;nothing)</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35aa2047d9bda997c7b3ff7000feff88c90">CAMERA_FREE</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;free&#32;mode</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a5993778026f9058046510b602220f635">CAMERA_ORBITAL</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;orbital,&#32;around&#32;target,&#32;zoom&#32;supported</emphasis>
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a7f979c63ce2ee9127eb5d69986bbb2f9">CAMERA_FIRST_PERSON</link>,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;first&#32;person</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a6c23689e2f42530a480950f7875bc82a">CAMERA_THIRD_PERSON</link>&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;third&#32;person</emphasis>
104 &#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35">CameraMode</link>;
105 <emphasis role="preprocessor">#endif</emphasis>
106 
107 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
108 <emphasis role="comment">//&#32;Global&#32;Variables&#32;Definition</emphasis>
109 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
110 <emphasis role="comment">//...</emphasis>
111 
112 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
113 <emphasis role="comment">//&#32;Module&#32;Functions&#32;Declaration</emphasis>
114 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
115 
116 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
117 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevents&#32;name&#32;mangling&#32;of&#32;functions</emphasis>
118 <emphasis role="preprocessor">#endif</emphasis>
119 
120 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1ab361ec882c9925ca6664bc833af9177b">GetCameraForward</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
121 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
122 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a058448f2e0accd114c8f87d7a3f39822">GetCameraDown</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
123 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a0a257c4d7b60f784f4fc61402bb6c02e">GetCameraRight</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
124 
125 <emphasis role="comment">//&#32;Camera&#32;movement</emphasis>
126 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a779bedc6f8b92dbde5f93f7f82a30d3b">CameraMoveForward</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveInWorldPlane);
127 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a2c6da04f9ca4bb209c5d1e6049eb68d5">CameraMoveUp</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>);
128 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a7e67c6bbc5f78fe818fb82d8690c584d">CameraMoveDown</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>);
129 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a5de9a5ba31581b2d925b478a5cafcda4">CameraMoveRight</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveInWorldPlane);
130 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1aff536a74a0caad04a9a084b25e385d85">CameraMoveToTarget</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;delta);
131 
132 <emphasis role="comment">//&#32;Camera&#32;rotation</emphasis>
133 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a63077e520f53c7649b6ae26954229877">CameraYaw</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateAroundTarget);
134 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1ac96d5a112eaad6876cba0972cfd51122">CameraPitch</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lockView,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateAroundTarget,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateUp);
135 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1aee45dddbbf936304a49a5c1655b96cbd">CameraRoll</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle);
136 
137 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<link linkend="_struct_matrix">Matrix</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a657e5188e88cb3f6833d5c8bfdba6da3">GetCameraViewMatrix</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
138 <link linkend="__classes_2lib_2rcamera_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link>&#32;<link linkend="_struct_matrix">Matrix</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a07917ea44e73592773057ac69dfd35ff">GetCameraProjectionMatrix</link>(<link linkend="_struct_camera3_d">Camera</link>*&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;aspect);
139 
140 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
141 }
142 <emphasis role="preprocessor">#endif</emphasis>
143 
144 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;CAMERA_H</emphasis>
145 
146 
147 <emphasis role="comment">/***********************************************************************************</emphasis>
148 <emphasis role="comment">*</emphasis>
149 <emphasis role="comment">*&#32;&#32;&#32;CAMERA&#32;IMPLEMENTATION</emphasis>
150 <emphasis role="comment">*</emphasis>
151 <emphasis role="comment">************************************************************************************/</emphasis>
152 
153 <emphasis role="preprocessor">#if&#32;defined(CAMERA_IMPLEMENTATION)</emphasis>
154 
155 <emphasis role="preprocessor">#include&#32;&quot;raymath.h&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for&#32;vector&#32;maths:</emphasis>
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Add()</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Subtract()</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Scale()</emphasis>
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Normalize()</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Distance()</emphasis>
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3CrossProduct()</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3RotateByAxisAngle()</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Angle()</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector3Negate()</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MatrixLookAt()</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MatrixPerspective()</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MatrixOrtho()</emphasis>
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MatrixIdentity()</emphasis>
169 
170 <emphasis role="comment">//&#32;raylib&#32;required&#32;functionality:</emphasis>
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GetMouseDelta()</emphasis>
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GetMouseWheelMove()</emphasis>
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IsKeyDown()</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IsKeyPressed()</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GetFrameTime()</emphasis>
176 
177 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
178 <emphasis role="comment">//&#32;Defines&#32;and&#32;Macros</emphasis>
179 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
180 <emphasis role="preprocessor">#define&#32;CAMERA_MOVE_SPEED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.09f</emphasis>
181 <emphasis role="preprocessor">#define&#32;CAMERA_ROTATION_SPEED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.03f</emphasis>
182 
183 <emphasis role="comment">//&#32;Camera&#32;mouse&#32;movement&#32;sensitivity</emphasis>
184 <emphasis role="preprocessor">#define&#32;CAMERA_MOUSE_MOVE_SENSITIVITY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.003f&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;TODO:&#32;it&#32;should&#32;be&#32;independant&#32;of&#32;framerate</emphasis>
185 <emphasis role="preprocessor">#define&#32;CAMERA_MOUSE_SCROLL_SENSITIVITY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.5f</emphasis>
186 
187 <emphasis role="preprocessor">#define&#32;CAMERA_ORBITAL_SPEED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.5f&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Radians&#32;per&#32;second</emphasis>
188 
189 
190 <emphasis role="preprocessor">#define&#32;CAMERA_FIRST_PERSON_STEP_TRIGONOMETRIC_DIVIDER&#32;&#32;8.0f</emphasis>
191 <emphasis role="preprocessor">#define&#32;CAMERA_FIRST_PERSON_STEP_DIVIDER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;30.0f</emphasis>
192 <emphasis role="preprocessor">#define&#32;CAMERA_FIRST_PERSON_WAVING_DIVIDER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;200.0f</emphasis>
193 
194 <emphasis role="comment">//&#32;PLAYER&#32;(used&#32;by&#32;camera)</emphasis>
195 <emphasis role="preprocessor">#define&#32;PLAYER_MOVEMENT_SENSITIVITY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;20.0f</emphasis>
196 
197 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
198 <emphasis role="comment">//&#32;Types&#32;and&#32;Structures&#32;Definition</emphasis>
199 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
200 <emphasis role="comment">//...</emphasis>
201 
202 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
203 <emphasis role="comment">//&#32;Global&#32;Variables&#32;Definition</emphasis>
204 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
205 <emphasis role="comment">//...</emphasis>
206 
207 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
208 <emphasis role="comment">//&#32;Module&#32;specific&#32;Functions&#32;Declaration</emphasis>
209 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
210 <emphasis role="comment">//...</emphasis>
211 
212 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
213 <emphasis role="comment">//&#32;Module&#32;Functions&#32;Definition</emphasis>
214 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
215 <emphasis role="comment">//&#32;Returns&#32;the&#32;cameras&#32;forward&#32;vector&#32;(normalized)</emphasis>
216 <link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1ab361ec882c9925ca6664bc833af9177b">GetCameraForward</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>)
217 {
218 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ac5fa29124068e3254305bea68ec5da49">Vector3Normalize</link>(<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a62a5234e94fb75062e98c4733806fa0f">Vector3Subtract</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position));
219 }
220 
221 <emphasis role="comment">//&#32;Returns&#32;the&#32;cameras&#32;up&#32;vector&#32;(normalized)</emphasis>
222 <emphasis role="comment">//&#32;Note:&#32;The&#32;up&#32;vector&#32;might&#32;not&#32;be&#32;perpendicular&#32;to&#32;the&#32;forward&#32;vector</emphasis>
223 <link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>)
224 {
225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ac5fa29124068e3254305bea68ec5da49">Vector3Normalize</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;up);
226 }
227 
228 <link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a058448f2e0accd114c8f87d7a3f39822">GetCameraDown</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>)
229 {
230 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ac5fa29124068e3254305bea68ec5da49">Vector3Normalize</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;down);
231 }
232 <emphasis role="comment">//&#32;Returns&#32;the&#32;cameras&#32;right&#32;vector&#32;(normalized)</emphasis>
233 <link linkend="_struct_vector3">Vector3</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a0a257c4d7b60f784f4fc61402bb6c02e">GetCameraRight</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>)
234 {
235 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;forward&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1ab361ec882c9925ca6664bc833af9177b">GetCameraForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
236 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;up&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
237 
238 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a3bf0ab88b92ca0b1a80c570106e19ddb">Vector3CrossProduct</link>(forward,&#32;up);
239 }
240 
241 <emphasis role="comment">//&#32;Moves&#32;the&#32;camera&#32;in&#32;its&#32;forward&#32;direction</emphasis>
242 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a779bedc6f8b92dbde5f93f7f82a30d3b">CameraMoveForward</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveInWorldPlane)
243 {
244 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;forward&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1ab361ec882c9925ca6664bc833af9177b">GetCameraForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
245 
246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(moveInWorldPlane)
247 &#32;&#32;&#32;&#32;{
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Project&#32;vector&#32;onto&#32;world&#32;plane</emphasis>
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forward.<link linkend="_struct_vector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13">y</link>&#32;=&#32;0;
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forward&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ac5fa29124068e3254305bea68ec5da49">Vector3Normalize</link>(forward);
251 &#32;&#32;&#32;&#32;}
252 
253 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scale&#32;by&#32;distance</emphasis>
254 &#32;&#32;&#32;&#32;forward&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a53cac3c57f3348e00ee8f02ecfd4e16b">Vector3Scale</link>(forward,&#32;<link linkend="_namespacedistance">distance</link>);
255 
256 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;position&#32;and&#32;target</emphasis>
257 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;forward);
258 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;forward);
259 }
260 
261 <emphasis role="comment">//&#32;Moves&#32;the&#32;camera&#32;in&#32;its&#32;up&#32;direction</emphasis>
262 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a2c6da04f9ca4bb209c5d1e6049eb68d5">CameraMoveUp</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>)
263 {
264 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;up&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
265 
266 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scale&#32;by&#32;distance</emphasis>
267 &#32;&#32;&#32;&#32;up&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a53cac3c57f3348e00ee8f02ecfd4e16b">Vector3Scale</link>(up,&#32;<link linkend="_namespacedistance">distance</link>);
268 
269 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;position&#32;and&#32;target</emphasis>
270 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;up);
271 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;up);
272 }
273 
274 
275 
276 <emphasis role="comment">//&#32;Moves&#32;the&#32;camera&#32;target&#32;in&#32;its&#32;current&#32;right&#32;direction</emphasis>
277 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a5de9a5ba31581b2d925b478a5cafcda4">CameraMoveRight</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveInWorldPlane)
278 {
279 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;right&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1a0a257c4d7b60f784f4fc61402bb6c02e">GetCameraRight</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
280 
281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(moveInWorldPlane)
282 &#32;&#32;&#32;&#32;{
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Project&#32;vector&#32;onto&#32;world&#32;plane</emphasis>
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right.<link linkend="_struct_vector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13">y</link>&#32;=&#32;0;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ac5fa29124068e3254305bea68ec5da49">Vector3Normalize</link>(right);
286 &#32;&#32;&#32;&#32;}
287 
288 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scale&#32;by&#32;distance</emphasis>
289 &#32;&#32;&#32;&#32;right&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a53cac3c57f3348e00ee8f02ecfd4e16b">Vector3Scale</link>(right,&#32;<link linkend="_namespacedistance">distance</link>);
290 
291 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;position&#32;and&#32;target</emphasis>
292 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;right);
293 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;right);
294 }
295 
296 <emphasis role="comment">//&#32;Moves&#32;the&#32;camera&#32;position&#32;closer/farther&#32;to/from&#32;the&#32;camera&#32;target</emphasis>
297 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1aff536a74a0caad04a9a084b25e385d85">CameraMoveToTarget</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;delta)
298 {
299 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ab5fbb435b60648784f806c7d8ea58530">Vector3Distance</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target);
300 
301 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;delta</emphasis>
302 &#32;&#32;&#32;&#32;<link linkend="_namespacedistance">distance</link>&#32;+=&#32;delta;
303 
304 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Distance&#32;must&#32;be&#32;greater&#32;than&#32;0</emphasis>
305 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacedistance">distance</link>&#32;&lt;&#32;0)&#32;<link linkend="_namespacedistance">distance</link>&#32;=&#32;0.001f;
306 
307 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;new&#32;distance&#32;by&#32;moving&#32;the&#32;position&#32;along&#32;the&#32;forward&#32;vector</emphasis>
308 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;forward&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1ab361ec882c9925ca6664bc833af9177b">GetCameraForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
309 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a53cac3c57f3348e00ee8f02ecfd4e16b">Vector3Scale</link>(forward,&#32;-<link linkend="_namespacedistance">distance</link>));
310 }
311 
312 <emphasis role="comment">//&#32;Rotates&#32;the&#32;camera&#32;around&#32;its&#32;up&#32;vector</emphasis>
313 <emphasis role="comment">//&#32;Yaw&#32;is&#32;&quot;looking&#32;left&#32;and&#32;right&quot;</emphasis>
314 <emphasis role="comment">//&#32;If&#32;rotateAroundTarget&#32;is&#32;false,&#32;the&#32;camera&#32;rotates&#32;around&#32;its&#32;position</emphasis>
315 <emphasis role="comment">//&#32;Note:&#32;angle&#32;must&#32;be&#32;provided&#32;in&#32;radians</emphasis>
316 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a63077e520f53c7649b6ae26954229877">CameraYaw</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateAroundTarget)
317 {
318 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotation&#32;axis</emphasis>
319 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;up&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
320 
321 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;View&#32;vector</emphasis>
322 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;targetPosition&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a62a5234e94fb75062e98c4733806fa0f">Vector3Subtract</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position);
323 
324 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotate&#32;view&#32;vector&#32;around&#32;up&#32;axis</emphasis>
325 &#32;&#32;&#32;&#32;targetPosition&#32;=&#32;<link linkend="__classes_2lib_2raymath_8h_1a4f5012987d7666737237b12312e5d8b3">Vector3RotateByAxisAngle</link>(targetPosition,&#32;up,&#32;angle);
326 
327 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rotateAroundTarget)
328 &#32;&#32;&#32;&#32;{
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;position&#32;relative&#32;to&#32;target</emphasis>
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a62a5234e94fb75062e98c4733806fa0f">Vector3Subtract</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;targetPosition);
331 &#32;&#32;&#32;&#32;}
332 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">//&#32;rotate&#32;around&#32;camera.position</emphasis>
333 &#32;&#32;&#32;&#32;{
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;target&#32;relative&#32;to&#32;position</emphasis>
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;targetPosition);
336 &#32;&#32;&#32;&#32;}
337 }
338 
339 <emphasis role="comment">//&#32;Rotates&#32;the&#32;camera&#32;around&#32;its&#32;right&#32;vector,&#32;pitch&#32;is&#32;&quot;looking&#32;up&#32;and&#32;down&quot;</emphasis>
340 <emphasis role="comment">//&#32;&#32;-&#32;lockView&#32;prevents&#32;camera&#32;overrotation&#32;(aka&#32;&quot;somersaults&quot;)</emphasis>
341 <emphasis role="comment">//&#32;&#32;-&#32;rotateAroundTarget&#32;defines&#32;if&#32;rotation&#32;is&#32;around&#32;target&#32;or&#32;around&#32;its&#32;position</emphasis>
342 <emphasis role="comment">//&#32;&#32;-&#32;rotateUp&#32;rotates&#32;the&#32;up&#32;direction&#32;as&#32;well&#32;(typically&#32;only&#32;usefull&#32;in&#32;CAMERA_FREE)</emphasis>
343 <emphasis role="comment">//&#32;NOTE:&#32;angle&#32;must&#32;be&#32;provided&#32;in&#32;radians</emphasis>
344 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1ac96d5a112eaad6876cba0972cfd51122">CameraPitch</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lockView,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateAroundTarget,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateUp)
345 {
346 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Up&#32;direction</emphasis>
347 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;up&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
348 
349 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;View&#32;vector</emphasis>
350 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;targetPosition&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a62a5234e94fb75062e98c4733806fa0f">Vector3Subtract</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position);
351 
352 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lockView)
353 &#32;&#32;&#32;&#32;{
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In&#32;these&#32;camera&#32;modes&#32;we&#32;clamp&#32;the&#32;Pitch&#32;angle</emphasis>
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;allow&#32;only&#32;viewing&#32;straight&#32;up&#32;or&#32;down.</emphasis>
356 
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clamp&#32;view&#32;up</emphasis>
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxAngleUp&#32;=&#32;<link linkend="__classes_2lib_2raymath_8h_1a37f2f5cab795b979f648f384aec5d4dc">Vector3Angle</link>(up,&#32;targetPosition);
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxAngleUp&#32;-=&#32;0.001f;&#32;<emphasis role="comment">//&#32;avoid&#32;numerical&#32;errors</emphasis>
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(angle&#32;&gt;&#32;maxAngleUp)&#32;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>&#32;=&#32;maxAngleUp;
361 
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clamp&#32;view&#32;down</emphasis>
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxAngleDown&#32;=&#32;<link linkend="__classes_2lib_2raymath_8h_1a37f2f5cab795b979f648f384aec5d4dc">Vector3Angle</link>(<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1aa8f5496b6e5136dc18ed91e7aca76d54">Vector3Negate</link>(up),&#32;targetPosition);
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxAngleDown&#32;*=&#32;-1.0f;&#32;<emphasis role="comment">//&#32;downwards&#32;angle&#32;is&#32;negative</emphasis>
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxAngleDown&#32;+=&#32;0.001f;&#32;<emphasis role="comment">//&#32;avoid&#32;numerical&#32;errors</emphasis>
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(angle&#32;&lt;&#32;maxAngleDown)&#32;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>&#32;=&#32;maxAngleDown;
367 &#32;&#32;&#32;&#32;}
368 
369 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotation&#32;axis</emphasis>
370 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;right&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1a0a257c4d7b60f784f4fc61402bb6c02e">GetCameraRight</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
371 
372 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotate&#32;view&#32;vector&#32;around&#32;right&#32;axis</emphasis>
373 &#32;&#32;&#32;&#32;targetPosition&#32;=&#32;<link linkend="__classes_2lib_2raymath_8h_1a4f5012987d7666737237b12312e5d8b3">Vector3RotateByAxisAngle</link>(targetPosition,&#32;right,&#32;angle);
374 
375 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rotateAroundTarget)
376 &#32;&#32;&#32;&#32;{
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;position&#32;relative&#32;to&#32;target</emphasis>
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a62a5234e94fb75062e98c4733806fa0f">Vector3Subtract</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;targetPosition);
379 &#32;&#32;&#32;&#32;}
380 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">//&#32;rotate&#32;around&#32;camera.position</emphasis>
381 &#32;&#32;&#32;&#32;{
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;target&#32;relative&#32;to&#32;position</emphasis>
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;targetPosition);
384 &#32;&#32;&#32;&#32;}
385 
386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rotateUp)
387 &#32;&#32;&#32;&#32;{
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotate&#32;up&#32;direction&#32;around&#32;right&#32;axis</emphasis>
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;up&#32;=&#32;<link linkend="__classes_2lib_2raymath_8h_1a4f5012987d7666737237b12312e5d8b3">Vector3RotateByAxisAngle</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;up,&#32;right,&#32;angle);
390 &#32;&#32;&#32;&#32;}
391 }
392 
393 <emphasis role="comment">//&#32;Rotates&#32;the&#32;camera&#32;around&#32;its&#32;forward&#32;vector</emphasis>
394 <emphasis role="comment">//&#32;Roll&#32;is&#32;&quot;turning&#32;your&#32;head&#32;sideways&#32;to&#32;the&#32;left&#32;or&#32;right&quot;</emphasis>
395 <emphasis role="comment">//&#32;Note:&#32;angle&#32;must&#32;be&#32;provided&#32;in&#32;radians</emphasis>
396 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2rcamera_8h_1aee45dddbbf936304a49a5c1655b96cbd">CameraRoll</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle)
397 {
398 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotation&#32;axis</emphasis>
399 &#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;forward&#32;=&#32;<link linkend="__classes_2lib_2rcamera_8h_1ab361ec882c9925ca6664bc833af9177b">GetCameraForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>);
400 
401 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotate&#32;up&#32;direction&#32;around&#32;forward&#32;axis</emphasis>
402 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;up&#32;=&#32;<link linkend="__classes_2lib_2raymath_8h_1a4f5012987d7666737237b12312e5d8b3">Vector3RotateByAxisAngle</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;up,&#32;forward,&#32;angle);
403 }
404 
405 <emphasis role="comment">//&#32;Returns&#32;the&#32;camera&#32;view&#32;matrix</emphasis>
406 <link linkend="_struct_matrix">Matrix</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a657e5188e88cb3f6833d5c8bfdba6da3">GetCameraViewMatrix</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>)
407 {
408 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1aa5e02c87229c2497da3932b0e7340cd9">MatrixLookAt</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;up);
409 }
410 
411 <emphasis role="comment">//&#32;Returns&#32;the&#32;camera&#32;projection&#32;matrix</emphasis>
412 <link linkend="_struct_matrix">Matrix</link>&#32;<link linkend="__classes_2lib_2rcamera_8h_1a07917ea44e73592773057ac69dfd35ff">GetCameraProjectionMatrix</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;aspect)
413 {
414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;projection&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1a2d3e98136f7933519abb019705f0d2d8acbb2df9c79c81eae7447f379bac5aa7e">CAMERA_PERSPECTIVE</link>)
415 &#32;&#32;&#32;&#32;{
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1ac331e8387b9fa2cc3af821aa03385c81">MatrixPerspective</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;fovy*<link linkend="__classes_2lib_2raylib_8h_1af7e8592d0a634bd3642e9fd508ea8022">DEG2RAD</link>,&#32;aspect,&#32;<link linkend="__classes_2lib_2rcamera_8h_1a55bc6863db1384575a3d7e9ffc17bdd9">CAMERA_CULL_DISTANCE_NEAR</link>,&#32;<link linkend="__classes_2lib_2rcamera_8h_1a3a47ed11aee99bb837913d83fb50d266">CAMERA_CULL_DISTANCE_FAR</link>);
417 &#32;&#32;&#32;&#32;}
418 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;projection&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1a2d3e98136f7933519abb019705f0d2d8af88d1708d9ea09bcd902cdebb4e31ead">CAMERA_ORTHOGRAPHIC</link>)
419 &#32;&#32;&#32;&#32;{
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;top&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;fovy/2.0;
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;right&#32;=&#32;top*aspect;
422 
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a48f345cc144bf4f33651b5e2b7c39a9d">MatrixOrtho</link>(-right,&#32;right,&#32;-top,&#32;top,&#32;<link linkend="__classes_2lib_2rcamera_8h_1a55bc6863db1384575a3d7e9ffc17bdd9">CAMERA_CULL_DISTANCE_NEAR</link>,&#32;<link linkend="__classes_2lib_2rcamera_8h_1a3a47ed11aee99bb837913d83fb50d266">CAMERA_CULL_DISTANCE_FAR</link>);
424 &#32;&#32;&#32;&#32;}
425 
426 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a6b00858883c5c765bc1380850df30537">MatrixIdentity</link>();
427 }
428 
429 <emphasis role="preprocessor">#ifndef&#32;CAMERA_STANDALONE</emphasis>
430 <emphasis role="comment">//&#32;Update&#32;camera&#32;position&#32;for&#32;selected&#32;mode</emphasis>
431 <emphasis role="comment">//&#32;Camera&#32;mode:&#32;CAMERA_FREE,&#32;CAMERA_FIRST_PERSON,&#32;CAMERA_THIRD_PERSON,&#32;CAMERA_ORBITAL&#32;or&#32;CUSTOM</emphasis>
432 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1adc7bb09d8b200ff74240ee1375552020">UpdateCamera</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)
433 {
434 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;mousePositionDelta&#32;=&#32;<link linkend="__classes_2lib_2raylib_8h_1ae3463dc8c8c683ad36989ee49ad53735">GetMouseDelta</link>();
435 
436 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveInWorldPlane&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a7f979c63ce2ee9127eb5d69986bbb2f9">CAMERA_FIRST_PERSON</link>)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a6c23689e2f42530a480950f7875bc82a">CAMERA_THIRD_PERSON</link>));
437 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateAroundTarget&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a6c23689e2f42530a480950f7875bc82a">CAMERA_THIRD_PERSON</link>)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a5993778026f9058046510b602220f635">CAMERA_ORBITAL</link>));
438 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lockView&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a7f979c63ce2ee9127eb5d69986bbb2f9">CAMERA_FIRST_PERSON</link>)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a6c23689e2f42530a480950f7875bc82a">CAMERA_THIRD_PERSON</link>)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a5993778026f9058046510b602220f635">CAMERA_ORBITAL</link>));
439 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateUp&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35aa2047d9bda997c7b3ff7000feff88c90">CAMERA_FREE</link>);
440 
441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a5993778026f9058046510b602220f635">CAMERA_ORBITAL</link>)
442 &#32;&#32;&#32;&#32;{
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Orbital&#32;can&#32;just&#32;orbit</emphasis>
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_matrix">Matrix</link>&#32;<link linkend="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17">rotation</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1aef7d333a67ce5c074e61d27b6e80be89">MatrixRotate</link>(<link linkend="__classes_2lib_2rcamera_8h_1aa2183c4775661fc0f0dd931a0f8cea91">GetCameraUp</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>),&#32;CAMERA_ORBITAL_SPEED*<link linkend="__classes_2lib_2raylib_8h_1a5e8918fbad9c5d1baf78cf96d971ce58">GetFrameTime</link>());
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector3">Vector3</link>&#32;view&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a62a5234e94fb75062e98c4733806fa0f">Vector3Subtract</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position,&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target);
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a16b9541c73babb08637ee1dd53102dd7">Vector3Transform</link>(view,&#32;rotation);
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;position&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a37c5fd6c1eceec5444b159d928383fed">Vector3Add</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>-&gt;target,&#32;view);
448 &#32;&#32;&#32;&#32;}
449 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
450 &#32;&#32;&#32;&#32;{
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;rotation</emphasis>
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2baa9cdac7967bf7d88fdb761138a2a3416">KEY_DOWN</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1ac96d5a112eaad6876cba0972cfd51122">CameraPitch</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-CAMERA_ROTATION_SPEED,&#32;lockView,&#32;rotateAroundTarget,&#32;rotateUp);
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2ba0848a442d907968b211b97bc2bd88acd">KEY_UP</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1ac96d5a112eaad6876cba0972cfd51122">CameraPitch</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;CAMERA_ROTATION_SPEED,&#32;lockView,&#32;rotateAroundTarget,&#32;rotateUp);
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2ba6504370d9c6391e1a9da6a1a529b089d">KEY_RIGHT</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1a63077e520f53c7649b6ae26954229877">CameraYaw</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-CAMERA_ROTATION_SPEED,&#32;rotateAroundTarget);
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2ba612120b69c7dfd46086db7aaebdbcf65">KEY_LEFT</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1a63077e520f53c7649b6ae26954229877">CameraYaw</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;CAMERA_ROTATION_SPEED,&#32;rotateAroundTarget);
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2bac8234231b36474d3666ad56752fe6f5e">KEY_Q</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1aee45dddbbf936304a49a5c1655b96cbd">CameraRoll</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-CAMERA_ROTATION_SPEED);
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2ba2af9840d90c49239339bfd42f9f32868">KEY_E</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1aee45dddbbf936304a49a5c1655b96cbd">CameraRoll</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;CAMERA_ROTATION_SPEED);
458 
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1a63077e520f53c7649b6ae26954229877">CameraYaw</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-mousePositionDelta.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*CAMERA_MOUSE_MOVE_SENSITIVITY,&#32;rotateAroundTarget);
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1ac96d5a112eaad6876cba0972cfd51122">CameraPitch</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-mousePositionDelta.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*CAMERA_MOUSE_MOVE_SENSITIVITY,&#32;lockView,&#32;rotateAroundTarget,&#32;rotateUp);
461 
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;movement</emphasis>
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2ba2e6a652ccd7afc5ce75ac4d902b6a60a">KEY_W</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1a779bedc6f8b92dbde5f93f7f82a30d3b">CameraMoveForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;CAMERA_MOVE_SPEED,&#32;moveInWorldPlane);
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2baa7b3a3d0503a46bec51c6e3da95747cc">KEY_A</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1a5de9a5ba31581b2d925b478a5cafcda4">CameraMoveRight</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-CAMERA_MOVE_SPEED,&#32;moveInWorldPlane);
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2babb2f0ce8efc3067757dbf091437f89f5">KEY_S</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1a779bedc6f8b92dbde5f93f7f82a30d3b">CameraMoveForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-CAMERA_MOVE_SPEED,&#32;moveInWorldPlane);
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1aa452c026db4f0f42d59d6af8a612979e">IsKeyDown</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2ba2fd73a4d527efe137e8f259db2092766">KEY_D</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1a5de9a5ba31581b2d925b478a5cafcda4">CameraMoveRight</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;CAMERA_MOVE_SPEED,&#32;moveInWorldPlane);
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(IsKeyDown(KEY_SPACE))&#32;CameraMoveUp(camera,&#32;CAMERA_MOVE_SPEED);</emphasis>
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(IsKeyDown(KEY_LEFT_CONTROL))&#32;CameraMoveUp(camera,&#32;-CAMERA_MOVE_SPEED);</emphasis>
469 &#32;&#32;&#32;&#32;}
470 
471 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a6c23689e2f42530a480950f7875bc82a">CAMERA_THIRD_PERSON</link>)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="__classes_2lib_2raylib_8h_1ac6e73fe6ce68e10b0acd6d2312bdbb35a5993778026f9058046510b602220f635">CAMERA_ORBITAL</link>))
472 &#32;&#32;&#32;&#32;{
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Zoom&#32;target&#32;distance</emphasis>
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1aff536a74a0caad04a9a084b25e385d85">CameraMoveToTarget</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-<link linkend="__classes_2lib_2raylib_8h_1a72d8a2693a830e061d0928468df9b562">GetMouseWheelMove</link>());
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1a0e0fe3d0f97dcbd87a163dd33e97d425">IsKeyPressed</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2bad6685e41b853460dce379a7bbce3fb82">KEY_KP_SUBTRACT</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1aff536a74a0caad04a9a084b25e385d85">CameraMoveToTarget</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;2.0f);
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_8h_1a0e0fe3d0f97dcbd87a163dd33e97d425">IsKeyPressed</link>(<link linkend="__classes_2lib_2raylib_8h_1a94b4a5e76ed30c0af90a1bbbdc214b2bad33598a57ea6543a541da76c540e0550">KEY_KP_ADD</link>))&#32;<link linkend="__classes_2lib_2rcamera_8h_1aff536a74a0caad04a9a084b25e385d85">CameraMoveToTarget</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-2.0f);
477 &#32;&#32;&#32;&#32;}
478 }
479 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!CAMERA_STANDALONE</emphasis>
480 
481 <emphasis role="comment">//&#32;Update&#32;camera&#32;movement,&#32;movement/rotation&#32;values&#32;should&#32;be&#32;provided&#32;by&#32;user</emphasis>
482 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a53b986c83c1d53ddf37f035e55196989">UpdateCameraPro</link>(<link linkend="_struct_camera3_d">Camera</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<link linkend="_struct_vector3">Vector3</link>&#32;movement,&#32;<link linkend="_struct_vector3">Vector3</link>&#32;rotation,&#32;<emphasis role="keywordtype">float</emphasis>&#32;zoom)
483 {
484 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;values</emphasis>
485 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;movement.x&#32;-&#32;Move&#32;forward/backward</emphasis>
486 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;movement.y&#32;-&#32;Move&#32;right/left</emphasis>
487 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;movement.z&#32;-&#32;Move&#32;up/down</emphasis>
488 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rotation.x&#32;-&#32;yaw</emphasis>
489 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rotation.y&#32;-&#32;pitch</emphasis>
490 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rotation.z&#32;-&#32;roll</emphasis>
491 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;zoom&#32;-&#32;Move&#32;towards&#32;target</emphasis>
492 
493 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lockView&#32;=&#32;<emphasis role="keyword">true</emphasis>;
494 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateAroundTarget&#32;=&#32;<emphasis role="keyword">false</emphasis>;
495 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rotateUp&#32;=&#32;<emphasis role="keyword">false</emphasis>;
496 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveInWorldPlane&#32;=&#32;<emphasis role="keyword">true</emphasis>;
497 
498 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;rotation</emphasis>
499 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1ac96d5a112eaad6876cba0972cfd51122">CameraPitch</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-<link linkend="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17">rotation</link>.y*<link linkend="__classes_2lib_2raylib_8h_1af7e8592d0a634bd3642e9fd508ea8022">DEG2RAD</link>,&#32;lockView,&#32;rotateAroundTarget,&#32;rotateUp);
500 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1a63077e520f53c7649b6ae26954229877">CameraYaw</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;-<link linkend="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17">rotation</link>.x*<link linkend="__classes_2lib_2raylib_8h_1af7e8592d0a634bd3642e9fd508ea8022">DEG2RAD</link>,&#32;rotateAroundTarget);
501 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1aee45dddbbf936304a49a5c1655b96cbd">CameraRoll</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;<link linkend="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17">rotation</link>.z*<link linkend="__classes_2lib_2raylib_8h_1af7e8592d0a634bd3642e9fd508ea8022">DEG2RAD</link>);
502 
503 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;movement</emphasis>
504 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1a779bedc6f8b92dbde5f93f7f82a30d3b">CameraMoveForward</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;movement.<link linkend="_struct_vector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2">x</link>,&#32;moveInWorldPlane);
505 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1a5de9a5ba31581b2d925b478a5cafcda4">CameraMoveRight</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;movement.<link linkend="_struct_vector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13">y</link>,&#32;moveInWorldPlane);
506 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1a2c6da04f9ca4bb209c5d1e6049eb68d5">CameraMoveUp</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;movement.<link linkend="_struct_vector3_1aa8c9461eb24bd2c364258078811a3e9d">z</link>);
507 
508 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Zoom&#32;target&#32;distance</emphasis>
509 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2rcamera_8h_1aff536a74a0caad04a9a084b25e385d85">CameraMoveToTarget</link>(<link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>,&#32;zoom);
510 }
511 
512 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;CAMERA_IMPLEMENTATION</emphasis>
</programlisting></section>
