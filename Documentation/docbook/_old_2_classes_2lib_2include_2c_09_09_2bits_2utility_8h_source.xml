<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2bits_2utility_8h_source" xml:lang="en-US">
<title>utility.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/bits/utility.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Utilities&#32;used&#32;throughout&#32;the&#32;library&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
33 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_UTILITY_H</emphasis>
34 <emphasis role="preprocessor">#define&#32;_GLIBCXX_UTILITY_H&#32;1</emphasis>
35 
36 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
37 
38 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
39 
40 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;bits/move.h&gt;</emphasis>
42 
43 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
44 {
45 _GLIBCXX_BEGIN_NAMESPACE_VERSION
46 
48 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_size;
50 
51 &#32;&#32;<emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
52 &#32;&#32;<emphasis role="comment">//&#32;2313.&#32;tuple_size&#32;should&#32;always&#32;derive&#32;from&#32;integral_constant&lt;size_t,&#32;N&gt;</emphasis>
53 &#32;&#32;<emphasis role="comment">//&#32;2770.&#32;tuple_size&lt;const&#32;T&gt;&#32;specialization&#32;is&#32;not&#32;SFINAE&#32;compatible</emphasis>
54 
55 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Up&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;remove_cv&lt;_Tp&gt;::type,
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;enable_if&lt;is_same&lt;_Tp,&#32;_Up&gt;::value&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>,
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;=&#32;tuple_size&lt;_Tp&gt;::value&gt;
59 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>__enable_if_has_tuple_size&#32;=&#32;_Tp;
60 
61 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
62 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_size&lt;const&#32;__enable_if_has_tuple_size&lt;_Tp&gt;&gt;
63 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;tuple_size&lt;_Tp&gt;&#32;{&#32;};
64 
65 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
66 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_size&lt;volatile&#32;__enable_if_has_tuple_size&lt;_Tp&gt;&gt;
67 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;tuple_size&lt;_Tp&gt;&#32;{&#32;};
68 
69 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_size&lt;const&#32;volatile&#32;__enable_if_has_tuple_size&lt;_Tp&gt;&gt;
71 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;tuple_size&lt;_Tp&gt;&#32;{&#32;};
72 
73 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201703L</emphasis>
74 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;tuple_size_v&#32;=&#32;tuple_size&lt;_Tp&gt;::value;
76 <emphasis role="preprocessor">#endif</emphasis>
77 
79 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__i,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_element;
81 
82 &#32;&#32;<emphasis role="comment">//&#32;Duplicate&#32;of&#32;C++14&apos;s&#32;tuple_element_t&#32;for&#32;internal&#32;use&#32;in&#32;C++11&#32;mode</emphasis>
83 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__i,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>__tuple_element_t&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;tuple_element&lt;__i,&#32;_Tp&gt;::type;
85 
86 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__i,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_element&lt;__i,&#32;const&#32;_Tp&gt;
88 &#32;&#32;&#32;&#32;{
89 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;add_const&lt;__tuple_element_t&lt;__i,&#32;_Tp&gt;&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
90 &#32;&#32;&#32;&#32;};
91 
92 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__i,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_element&lt;__i,&#32;volatile&#32;_Tp&gt;
94 &#32;&#32;&#32;&#32;{
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;add_volatile&lt;__tuple_element_t&lt;__i,&#32;_Tp&gt;&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
96 &#32;&#32;&#32;&#32;};
97 
98 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__i,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
99 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tuple_element&lt;__i,&#32;const&#32;volatile&#32;_Tp&gt;
100 &#32;&#32;&#32;&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;add_cv&lt;__tuple_element_t&lt;__i,&#32;_Tp&gt;&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
102 &#32;&#32;&#32;&#32;};
103 
104 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201402L</emphasis>
105 
106 &#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;index&#32;of&#32;_Tp&#32;in&#32;_Types,&#32;if&#32;it&#32;occurs&#32;exactly&#32;once.</emphasis>
107 &#32;&#32;<emphasis role="comment">//&#32;Otherwise,&#32;return&#32;sizeof...(_Types).</emphasis>
108 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Types&gt;
109 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>
110 &#32;&#32;&#32;&#32;__find_uniq_type_in_pack()
111 &#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sz&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>...(_Types);
113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__found[__sz]&#32;=&#32;{&#32;__is_same(_Tp,&#32;_Types)&#32;...&#32;};
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__n&#32;=&#32;__sz;
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;__sz;&#32;++__i)
116 &#32;&#32;&#32;&#32;{
117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__found[__i])
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;&lt;&#32;__sz)&#32;<emphasis role="comment">//&#32;more&#32;than&#32;one&#32;_Tp&#32;found</emphasis>
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__sz;
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__n&#32;=&#32;__i;
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
123 &#32;&#32;&#32;&#32;}
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__n;
125 &#32;&#32;&#32;&#32;}
126 
127 <emphasis role="comment">//&#32;The&#32;standard&#32;says&#32;this&#32;macro&#32;and&#32;alias&#32;template&#32;should&#32;be&#32;in&#32;&lt;tuple&gt;&#32;but&#32;we</emphasis>
128 <emphasis role="comment">//&#32;define&#32;them&#32;here,&#32;to&#32;be&#32;available&#32;in&#32;&lt;array&gt;,&#32;&lt;utility&gt;&#32;and&#32;&lt;ranges&gt;&#32;too.</emphasis>
129 <emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
130 <emphasis role="comment">//&#32;3378.&#32;tuple_size_v/tuple_element_t&#32;should&#32;be&#32;available&#32;when</emphasis>
131 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;tuple_size/tuple_element&#32;are</emphasis>
132 <emphasis role="preprocessor">#define&#32;__cpp_lib_tuple_element_t&#32;201402L</emphasis>
133 
134 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__i,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
135 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>tuple_element_t&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;tuple_element&lt;__i,&#32;_Tp&gt;::type;
136 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++14</emphasis>
137 
138 &#32;&#32;<emphasis role="comment">//&#32;Stores&#32;a&#32;tuple&#32;of&#32;indices.&#32;&#32;Used&#32;by&#32;tuple&#32;and&#32;pair,&#32;and&#32;by&#32;bind()&#32;to</emphasis>
139 &#32;&#32;<emphasis role="comment">//&#32;extract&#32;the&#32;elements&#32;in&#32;a&#32;tuple.</emphasis>
140 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>...&#32;_Indexes&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Index_tuple&#32;{&#32;};
141 
142 &#32;&#32;<emphasis role="comment">//&#32;Builds&#32;an&#32;_Index_tuple&lt;0,&#32;1,&#32;2,&#32;...,&#32;_Num-1&gt;.</emphasis>
143 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;_Num&gt;
144 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Build_index_tuple
145 &#32;&#32;&#32;&#32;{
146 <emphasis role="preprocessor">#if&#32;__has_builtin(__make_integer_seq)</emphasis>
147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keywordtype">size_t</emphasis>...&#32;_Indices&gt;
148 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>_IdxTuple&#32;=&#32;_Index_tuple&lt;_Indices...&gt;;
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clang&#32;defines&#32;__make_integer_seq&#32;for&#32;this&#32;purpose.</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>__type&#32;=&#32;__make_integer_seq&lt;_IdxTuple,&#32;size_t,&#32;_Num&gt;;
152 <emphasis role="preprocessor">#else</emphasis>
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;GCC&#32;and&#32;other&#32;compilers,&#32;use&#32;__integer_pack&#32;instead.</emphasis>
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>__type&#32;=&#32;_Index_tuple&lt;__integer_pack(_Num)...&gt;;
155 <emphasis role="preprocessor">#endif</emphasis>
156 &#32;&#32;&#32;&#32;};
157 
158 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201402L</emphasis>
159 
160 <emphasis role="preprocessor">#define&#32;__cpp_lib_integer_sequence&#32;201304L</emphasis>
161 
163 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;_Tp...&#32;_Idx&gt;
164 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>integer_sequence
165 &#32;&#32;&#32;&#32;{
166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Tp&#32;value_type;
167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">sizeof</emphasis>...(_Idx);&#32;}
168 &#32;&#32;&#32;&#32;};
169 
171 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;_Tp&#32;_Num&gt;
172 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacenlohmann_1_1detail_1a745268b2c803a873cdbe1fdecb4e88b2">make_integer_sequence</link>
173 <emphasis role="preprocessor">#if&#32;__has_builtin(__make_integer_seq)</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;__make_integer_seq&lt;integer_sequence,&#32;_Tp,&#32;_Num&gt;;
175 <emphasis role="preprocessor">#else</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;integer_sequence&lt;_Tp,&#32;__integer_pack(_Num)...&gt;;
177 <emphasis role="preprocessor">#endif</emphasis>
178 
180 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>...&#32;_Idx&gt;
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacenlohmann_1_1detail_1a422430dab7adbe4dfcf125dfcfbeffd0">index_sequence</link>&#32;=&#32;integer_sequence&lt;<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>,&#32;_Idx...&gt;;
182 
184 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;_Num&gt;
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacenlohmann_1_1detail_1a9b47f1c18e3c9739b20633aeee0d0f62">make_index_sequence</link>&#32;=&#32;make_integer_sequence&lt;size_t,&#32;_Num&gt;;
186 
188 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>...&#32;_Types&gt;
189 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacenlohmann_1_1detail_1a24800493c6ec02ce033dcbb47b7fd28e">index_sequence_for</link>&#32;=&#32;<link linkend="_namespacenlohmann_1_1detail_1a9b47f1c18e3c9739b20633aeee0d0f62">make_index_sequence</link>&lt;<emphasis role="keyword">sizeof</emphasis>...(_Types)&gt;;
190 
191 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201703L</emphasis>
192 
193 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>in_place_t&#32;{
194 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;in_place_t()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
195 &#32;&#32;};
196 
197 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;in_place_t&#32;in_place{};
198 
199 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>in_place_type_t
200 &#32;&#32;{
201 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;in_place_type_t()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
202 &#32;&#32;};
203 
204 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
205 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;in_place_type_t&lt;_Tp&gt;&#32;in_place_type{};
206 
207 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;_Idx&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>in_place_index_t
208 &#32;&#32;{
209 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;in_place_index_t()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
210 &#32;&#32;};
211 
212 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;_Idx&gt;
213 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;in_place_index_t&lt;_Idx&gt;&#32;in_place_index{};
214 
215 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&gt;
216 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__is_in_place_type_v&#32;=&#32;<emphasis role="keyword">false</emphasis>;
217 
218 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
219 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__is_in_place_type_v&lt;in_place_type_t&lt;_Tp&gt;&gt;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
220 
221 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
222 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>__is_in_place_type&#32;=&#32;bool_constant&lt;__is_in_place_type_v&lt;_Tp&gt;&gt;;
223 
224 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++17</emphasis>
225 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++14</emphasis>
226 
227 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;_Np,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Types&gt;
228 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type
229 &#32;&#32;&#32;&#32;{&#32;};
230 
231 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
232 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type&lt;0,&#32;_Tp0,&#32;_Rest...&gt;
233 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;_Tp0;&#32;};
234 
235 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
236 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type&lt;1,&#32;_Tp0,&#32;_Tp1,&#32;_Rest...&gt;
237 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;_Tp1;&#32;};
238 
239 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp2,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
240 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type&lt;2,&#32;_Tp0,&#32;_Tp1,&#32;_Tp2,&#32;_Rest...&gt;
241 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;_Tp2;&#32;};
242 
243 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;_Np,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp2,
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
245 <emphasis role="preprocessor">#if&#32;__cpp_concepts</emphasis>
246 &#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(_Np&#32;&gt;=&#32;3)
247 #endif
248 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;_Nth_type&lt;_Np,&#32;_Tp0,&#32;_Tp1,&#32;_Tp2,&#32;_Rest...&gt;
249 &#32;&#32;&#32;&#32;:&#32;_Nth_type&lt;_Np&#32;-&#32;3,&#32;_Rest...&gt;
250 &#32;&#32;&#32;&#32;{&#32;};
251 
252 <emphasis role="preprocessor">#if&#32;!&#32;__cpp_concepts&#32;</emphasis><emphasis role="comment">//&#32;Need&#32;additional&#32;specializations&#32;to&#32;avoid&#32;ambiguities.</emphasis>
253 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
254 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type&lt;0,&#32;_Tp0,&#32;_Tp1,&#32;_Rest...&gt;
255 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;_Tp0;&#32;};
256 
257 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp2,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
258 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type&lt;0,&#32;_Tp0,&#32;_Tp1,&#32;_Tp2,&#32;_Rest...&gt;
259 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;_Tp0;&#32;};
260 
261 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp0,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp2,&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Rest&gt;
262 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Nth_type&lt;1,&#32;_Tp0,&#32;_Tp1,&#32;_Tp2,&#32;_Rest...&gt;
263 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;_Tp1;&#32;};
264 <emphasis role="preprocessor">#endif</emphasis>
265 
266 _GLIBCXX_END_NAMESPACE_VERSION
267 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
268 
269 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
270 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_UTILITY_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
