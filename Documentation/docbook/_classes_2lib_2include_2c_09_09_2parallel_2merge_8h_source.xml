<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2parallel_2merge_8h_source" xml:lang="en-US">
<title>merge.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/merge.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler.</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_MERGE_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_MERGE_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;parallel/basic_iterator.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algo.h&gt;</emphasis>
37 
38 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
39 {
53 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter2,
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
56 &#32;&#32;&#32;&#32;_OutputIterator
57 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a9a83f26ee291502fd0ccf83a566817c7">__merge_advance_usual</link>(_RAIter1&amp;&#32;__begin1,&#32;_RAIter1&#32;__end1,
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter2&amp;&#32;__begin2,&#32;_RAIter2&#32;__end2,
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator&#32;__target,
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__max_length,&#32;_Compare&#32;__comp)
61 &#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
63 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__begin1&#32;!=&#32;__end1&#32;&amp;&amp;&#32;__begin2&#32;!=&#32;__end2&#32;&amp;&amp;&#32;__max_length&#32;&gt;&#32;0)
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;array1[__i1]&#32;&lt;&#32;array0[i0]</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__comp(*__begin2,&#32;*__begin1))
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*__target++&#32;=&#32;*__begin2++;
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*__target++&#32;=&#32;*__begin1++;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--__max_length;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
72 
73 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__begin1&#32;!=&#32;__end1)
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target&#32;=&#32;<link linkend="_namespacestd_1a4e3366cc5ea1e47fac759952b877ed0d">std::copy</link>(__begin1,&#32;__begin1&#32;+&#32;__max_length,&#32;__target);
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin1&#32;+=&#32;__max_length;
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target&#32;=&#32;<link linkend="_namespacestd_1a4e3366cc5ea1e47fac759952b877ed0d">std::copy</link>(__begin2,&#32;__begin2&#32;+&#32;__max_length,&#32;__target);
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin2&#32;+=&#32;__max_length;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
84 &#32;&#32;&#32;&#32;}
85 
101 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter2,
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
104 &#32;&#32;&#32;&#32;_OutputIterator
105 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a8deacd343b40dc77deeb1a8e515e7358">__merge_advance_movc</link>(_RAIter1&amp;&#32;__begin1,&#32;_RAIter1&#32;__end1,
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter2&amp;&#32;__begin2,&#32;_RAIter2&#32;__end2,
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator&#32;__target,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__max_length,&#32;_Compare&#32;__comp)
109 &#32;&#32;&#32;&#32;{
110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType1;
113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter2&gt;::value_type
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType2;
115 
116 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__max_length&#32;&gt;=&#32;0);
118 <emphasis role="preprocessor">#endif</emphasis>
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__begin1&#32;!=&#32;__end1&#32;&amp;&amp;&#32;__begin2&#32;!=&#32;__end2&#32;&amp;&amp;&#32;__max_length&#32;&gt;&#32;0)
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter1&#32;__next1&#32;=&#32;__begin1&#32;+&#32;1;
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter2&#32;__next2&#32;=&#32;__begin2&#32;+&#32;1;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType1&#32;__element1&#32;=&#32;*__begin1;
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType2&#32;__element2&#32;=&#32;*__begin2;
126 
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__comp(__element2,&#32;__element1))
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__element1&#32;=&#32;__element2;
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin2&#32;=&#32;__next2;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin1&#32;=&#32;__next1;
134 
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*__target&#32;=&#32;__element1;
136 
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__target;
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--__max_length;
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__begin1&#32;!=&#32;__end1)
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target&#32;=&#32;<link linkend="_namespacestd_1a4e3366cc5ea1e47fac759952b877ed0d">std::copy</link>(__begin1,&#32;__begin1&#32;+&#32;__max_length,&#32;__target);
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin1&#32;+=&#32;__max_length;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target&#32;=&#32;<link linkend="_namespacestd_1a4e3366cc5ea1e47fac759952b877ed0d">std::copy</link>(__begin2,&#32;__begin2&#32;+&#32;__max_length,&#32;__target);
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin2&#32;+=&#32;__max_length;
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
151 &#32;&#32;&#32;&#32;}
152 
167 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter2,
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
170 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_OutputIterator
171 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a0059cd13cc6ab70692f8309ad92cb548">__merge_advance</link>(_RAIter1&amp;&#32;__begin1,&#32;_RAIter1&#32;__end1,
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter2&amp;&#32;__begin2,&#32;_RAIter2&#32;__end2,
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator&#32;__target,&#32;_DifferenceTp&#32;__max_length,
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp)
175 &#32;&#32;&#32;&#32;{
176 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__max_length)
177 
178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a8deacd343b40dc77deeb1a8e515e7358">__merge_advance_movc</link>(__begin1,&#32;__end1,&#32;__begin2,&#32;__end2,
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target,&#32;__max_length,&#32;__comp);
180 &#32;&#32;&#32;&#32;}
181 
192 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter2,
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
194 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_RAIter3
195 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1af1626ed7bbe2eb745a31f18728d73f4e">__parallel_merge_advance</link>(_RAIter1&amp;&#32;__begin1,&#32;_RAIter1&#32;__end1,
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter2&amp;&#32;__begin2,
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;different&#32;iterators,&#32;parallel&#32;implementation</emphasis>
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;available</emphasis>
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter2&#32;__end2,&#32;_RAIter3&#32;__target,&#32;<emphasis role="keyword">typename</emphasis>
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iterator_traits&lt;_RAIter1&gt;::
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;difference_type&#32;__max_length,&#32;_Compare&#32;__comp)
202 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a0059cd13cc6ab70692f8309ad92cb548">__merge_advance</link>(__begin1,&#32;__end1,&#32;__begin2,&#32;__end2,&#32;__target,
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__max_length,&#32;__comp);&#32;}
204 
220 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
222 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_RAIter3
223 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1af1626ed7bbe2eb745a31f18728d73f4e">__parallel_merge_advance</link>(_RAIter1&amp;&#32;__begin1,&#32;_RAIter1&#32;__end1,
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter1&amp;&#32;__begin2,&#32;_RAIter1&#32;__end2,
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,&#32;<emphasis role="keyword">typename</emphasis>
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iterator_traits&lt;_RAIter1&gt;::
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;difference_type&#32;__max_length,&#32;_Compare&#32;__comp)
228 &#32;&#32;&#32;&#32;{
229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type&#32;_ValueType;
231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;difference_type&#32;_DifferenceType1&#32;<emphasis role="comment">/*&#32;==&#32;difference_type2&#32;*/</emphasis>;
233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter3&gt;::
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;difference_type&#32;_DifferenceType3;
235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::pair&lt;_RAIter1,&#32;_RAIter1&gt;
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>;
237 
238 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&#32;__seqs[2]&#32;=&#32;{&#32;std::make_pair(__begin1,&#32;__end1),
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::make_pair(__begin2,&#32;__end2)&#32;};
240 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target_end&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
241 &#32;&#32;&#32;&#32;&lt;&#32;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
242 &#32;&#32;&#32;&#32;(__seqs,&#32;__seqs&#32;+&#32;2,&#32;__target,&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>
243 &#32;&#32;&#32;&#32;&#32;&lt;&#32;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>*,
244 &#32;&#32;&#32;&#32;&#32;_Compare,&#32;_DifferenceType1&gt;,&#32;__max_length,&#32;__comp,
245 &#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2omp_8h_1a54430ed3c727a27db57290ec784b0b09">omp_get_max_threads</link>());
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target_end;
248 &#32;&#32;&#32;&#32;}
249 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//namespace&#32;__gnu_parallel</emphasis>
250 
251 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_MERGE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
