<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/features.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/features.h</primary></indexterm>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a5a1bbd3fbfff354d33cb7e8f936b5b69">_GLIBCXX_MERGESORT</link>&#160;&#160;&#160;1</para>

<para>Include parallel multi-way mergesort. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a7e8edbf30b1dd460c124a51f19326c54">_GLIBCXX_QUICKSORT</link>&#160;&#160;&#160;1</para>

<para>Include parallel unbalanced quicksort. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a4ac4aa3381d184b69356349a4156c9a1">_GLIBCXX_BAL_QUICKSORT</link>&#160;&#160;&#160;1</para>

<para>Include parallel dynamically load-balanced quicksort. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1aacdbb33fc99834c968be42e5c95f2b2a">_GLIBCXX_FIND_GROWING_BLOCKS</link>&#160;&#160;&#160;1</para>

<para>Include the growing blocks variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a877a31358045791c3ae6e6af28e5620b">_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS</link>&#160;&#160;&#160;1</para>

<para>Include the equal-sized blocks variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1ae75a033707c0c6b314226230008cda14">_GLIBCXX_FIND_EQUAL_SPLIT</link>&#160;&#160;&#160;1</para>

<para>Include the equal splitting variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>. </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a0fed891f7960bcaefb44e5b250200103">_GLIBCXX_TREE_INITIAL_SPLITTING</link>&#160;&#160;&#160;1</para>

<para>Include the initial splitting variant for _Rb_tree::insert_unique(_IIter beg, _IIter __end). </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1ac2af42746e6dc89868203d94e5b5d9b6">_GLIBCXX_TREE_DYNAMIC_BALANCING</link>&#160;&#160;&#160;1</para>

<para>Include the dynamic balancing variant for _Rb_tree::insert_unique(_IIter beg, _IIter __end). </para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a0f36c3f495024eff415809e6ec827c6d">_GLIBCXX_TREE_FULL_COPY</link>&#160;&#160;&#160;1</para>

<para>In order to sort the input sequence of _Rb_tree::insert_unique(_IIter beg, _IIter __end) a full copy of the input elements is done. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a4ac4aa3381d184b69356349a4156c9a1"/><section>
    <title>_GLIBCXX_BAL_QUICKSORT</title>
<indexterm><primary>_GLIBCXX_BAL_QUICKSORT</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_BAL_QUICKSORT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_BAL_QUICKSORT&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include parallel dynamically load-balanced quicksort. </para>
</para>

<para><formalpara><title>See also</title>

<para><link linkend="_struct____gnu__parallel_1_1___settings_1a5354c1f6bfaed55e745fd4934076ca3e">__gnu_parallel::_Settings::sort_algorithm</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a877a31358045791c3ae6e6af28e5620b"/><section>
    <title>_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS</title>
<indexterm><primary>_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include the equal-sized blocks variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>. </para>
</para>

<para><formalpara><title>See also</title>

<para><link linkend="_struct____gnu__parallel_1_1___settings_1a5704f00bfdeef3ffc04ff14b3f0ff59a">__gnu_parallel::_Settings::find_algorithm</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1ae75a033707c0c6b314226230008cda14"/><section>
    <title>_GLIBCXX_FIND_EQUAL_SPLIT</title>
<indexterm><primary>_GLIBCXX_FIND_EQUAL_SPLIT</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_FIND_EQUAL_SPLIT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_FIND_EQUAL_SPLIT&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include the equal splitting variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>. </para>
</para>

<para><formalpara><title>See also</title>

<para><link linkend="_struct____gnu__parallel_1_1___settings_1a5704f00bfdeef3ffc04ff14b3f0ff59a">__gnu_parallel::_Settings::find_algorithm</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1aacdbb33fc99834c968be42e5c95f2b2a"/><section>
    <title>_GLIBCXX_FIND_GROWING_BLOCKS</title>
<indexterm><primary>_GLIBCXX_FIND_GROWING_BLOCKS</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_FIND_GROWING_BLOCKS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_FIND_GROWING_BLOCKS&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include the growing blocks variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find</link>. </para>
</para>

<para><formalpara><title>See also</title>

<para><link linkend="_struct____gnu__parallel_1_1___settings_1a5704f00bfdeef3ffc04ff14b3f0ff59a">__gnu_parallel::_Settings::find_algorithm</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a5a1bbd3fbfff354d33cb7e8f936b5b69"/><section>
    <title>_GLIBCXX_MERGESORT</title>
<indexterm><primary>_GLIBCXX_MERGESORT</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_MERGESORT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_MERGESORT&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include parallel multi-way mergesort. </para>
</para>

<para><formalpara><title>See also</title>

<para><link linkend="_struct____gnu__parallel_1_1___settings_1a5354c1f6bfaed55e745fd4934076ca3e">__gnu_parallel::_Settings::sort_algorithm</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a7e8edbf30b1dd460c124a51f19326c54"/><section>
    <title>_GLIBCXX_QUICKSORT</title>
<indexterm><primary>_GLIBCXX_QUICKSORT</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_QUICKSORT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_QUICKSORT&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include parallel unbalanced quicksort. </para>
</para>

<para><formalpara><title>See also</title>

<para><link linkend="_struct____gnu__parallel_1_1___settings_1a5354c1f6bfaed55e745fd4934076ca3e">__gnu_parallel::_Settings::sort_algorithm</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1ac2af42746e6dc89868203d94e5b5d9b6"/><section>
    <title>_GLIBCXX_TREE_DYNAMIC_BALANCING</title>
<indexterm><primary>_GLIBCXX_TREE_DYNAMIC_BALANCING</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_TREE_DYNAMIC_BALANCING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_TREE_DYNAMIC_BALANCING&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include the dynamic balancing variant for _Rb_tree::insert_unique(_IIter beg, _IIter __end). </para>
</para>

<para><formalpara><title>See also</title>

<para>__gnu_parallel::_Rb_tree </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a0f36c3f495024eff415809e6ec827c6d"/><section>
    <title>_GLIBCXX_TREE_FULL_COPY</title>
<indexterm><primary>_GLIBCXX_TREE_FULL_COPY</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_TREE_FULL_COPY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_TREE_FULL_COPY&#160;&#160;&#160;1</computeroutput></para><para>

<para>In order to sort the input sequence of _Rb_tree::insert_unique(_IIter beg, _IIter __end) a full copy of the input elements is done. </para>
</para>

<para><formalpara><title>See also</title>

<para>__gnu_parallel::_Rb_tree </para>
</formalpara>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2features_8h_1a0fed891f7960bcaefb44e5b250200103"/><section>
    <title>_GLIBCXX_TREE_INITIAL_SPLITTING</title>
<indexterm><primary>_GLIBCXX_TREE_INITIAL_SPLITTING</primary><secondary>features.h</secondary></indexterm>
<indexterm><primary>features.h</primary><secondary>_GLIBCXX_TREE_INITIAL_SPLITTING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_TREE_INITIAL_SPLITTING&#160;&#160;&#160;1</computeroutput></para><para>

<para>Include the initial splitting variant for _Rb_tree::insert_unique(_IIter beg, _IIter __end). </para>
</para>

<para><formalpara><title>See also</title>

<para>__gnu_parallel::_Rb_tree </para>
</formalpara>
</para>
</section>
</section>
</section>
