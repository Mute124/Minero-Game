<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__logman_8h_source" xml:lang="en-US">
<title>Logman.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/Logman.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__old_2_classes_2_time_8h">time.h</link>&gt;</emphasis>
5 
6 <emphasis role="preprocessor">#include&#32;&quot;lib/raylib.h&quot;</emphasis>
7 
8 <emphasis role="comment">//&#32;handles&#32;logging</emphasis>
9 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_logman">Logman</link>&#32;{
10 &#32;&#32;<emphasis role="keyword">public</emphasis>:
11 &#32;&#32;&#32;&#32;<link linkend="_class_logman_1a506d9deabe97db8e81edfb5cb43f9788">Logman</link>()&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_8h_1a9154b69ff31327959c2999d92631ac11">SetTraceLogCallback</link>(this-&gt;<link linkend="_class_logman_1a2d9051169431912e6f95d150172590c0">CustomLog</link>);
13 &#32;&#32;&#32;&#32;
14 &#32;&#32;&#32;&#32;}
15 &#32;&#32;&#32;&#32;
16 &#32;&#32;&#32;&#32;<link linkend="_class_logman_1a8ffacf75562879674383f5a056c8a78e">~Logman</link>()&#32;{
17 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
18 &#32;&#32;&#32;&#32;&#32;&#32;
19 &#32;&#32;&#32;&#32;}
20 &#32;&#32;&#32;&#32;
21 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Custom&#32;logging&#32;function</emphasis>
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_logman_1a2d9051169431912e6f95d150172590c0">CustomLog</link>(<emphasis role="keywordtype">int</emphasis>&#32;msgType,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text,&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>&#32;args)
23 &#32;&#32;&#32;&#32;{
24 
25 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;timeStr[64]&#32;=&#32;{0};
26 &#32;&#32;&#32;&#32;&#32;&#32;time_t&#32;now&#32;=&#32;<link linkend="_structtime">time</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
27 
28 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tm&#32;*tm_info&#32;=&#32;localtime(&amp;now);
29 
30 &#32;&#32;&#32;&#32;&#32;&#32;strftime(timeStr,&#32;<emphasis role="keyword">sizeof</emphasis>(timeStr),&#32;<emphasis role="stringliteral">&quot;%Y-%m-%d&#32;%H:%M:%S&quot;</emphasis>,&#32;tm_info);
31 &#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;[%s]&#32;&quot;</emphasis>,&#32;timeStr);
32 
33 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(msgType)
34 &#32;&#32;&#32;&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285a6e98ff471e3ce6c4ef2d75c37ee51837">LOG_INFO</link>:
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;[INFO]&#32;:&#32;&quot;</emphasis>);
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
38 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285a230506cce5c68c3bac5a821c42ed3473">LOG_ERROR</link>:
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;[ERROR]:&#32;&quot;</emphasis>);
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
41 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285a8f6fe15bfe15104da6d1b360194a5400">LOG_WARNING</link>:
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;[WARN]&#32;:&#32;&quot;</emphasis>);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
44 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_8h_1a53d4e0542e6c07e7792510e986785285ab9f002c6ffbfd511da8090213227454e">LOG_DEBUG</link>:
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;[DEBUG]:&#32;&quot;</emphasis>);
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
47 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
49 &#32;&#32;&#32;&#32;&#32;&#32;}
50 
51 &#32;&#32;&#32;&#32;&#32;&#32;vprintf(text,&#32;args);
52 &#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
53 &#32;&#32;&#32;&#32;}
54 &#32;&#32;&#32;&#32;
55 &#32;&#32;&#32;&#32;
56 };
</programlisting></section>
