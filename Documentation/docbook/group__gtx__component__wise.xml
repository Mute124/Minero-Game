<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__component__wise" xml:lang="en-US">
<title>GLM_GTX_component_wise</title>
<indexterm><primary>GLM_GTX_component_wise</primary></indexterm>
Collaboration diagram for GLM_GTX_component_wise:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__component__wise.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename floatType , <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, floatType, Q &gt; <link linkend="_group__gtx__component__wise_1ga3f5d893b2805999d155de26f7a9593d2">glm::compNormalize</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , typename floatType , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__gtx__component__wise_1gab0e4a1a73c60f93d8bfbe97f331476a9">glm::compScale</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, floatType, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type <link linkend="_group__gtx__component__wise_1gaf71833350e15e74d31cbf8a3e7f27051">glm::compAdd</link> (genType const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type <link linkend="_group__gtx__component__wise_1gae8ab88024197202c9479d33bdc5a8a5d">glm::compMul</link> (genType const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type <link linkend="_group__gtx__component__wise_1gab5d0832b5c7bb01b8d7395973bfb1425">glm::compMin</link> (genType const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type <link linkend="_group__gtx__component__wise_1gabfa4bb19298c8c73d4217ba759c496b6">glm::compMax</link> (genType const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/component_wise.hpp&gt; to use the features of this extension.</para>

<para>Operations between components of a type </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__component__wise_1gaf71833350e15e74d31cbf8a3e7f27051"/><section>
    <title>compAdd()</title>
<indexterm><primary>compAdd</primary><secondary>GLM_GTX_component_wise</secondary></indexterm>
<indexterm><primary>GLM_GTX_component_wise</primary><secondary>compAdd</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type glm::compAdd (genType const &amp; v)</computeroutput></para>
<para>Add all vector components together. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__component__wise">GLM_GTX_component_wise</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__component__wise_1gabfa4bb19298c8c73d4217ba759c496b6"/><section>
    <title>compMax()</title>
<indexterm><primary>compMax</primary><secondary>GLM_GTX_component_wise</secondary></indexterm>
<indexterm><primary>GLM_GTX_component_wise</primary><secondary>compMax</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type glm::compMax (genType const &amp; v)</computeroutput></para>
<para>Find the maximum value between single vector components. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__component__wise">GLM_GTX_component_wise</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__component__wise_gabfa4bb19298c8c73d4217ba759c496b6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__component__wise_1gab5d0832b5c7bb01b8d7395973bfb1425"/><section>
    <title>compMin()</title>
<indexterm><primary>compMin</primary><secondary>GLM_GTX_component_wise</secondary></indexterm>
<indexterm><primary>GLM_GTX_component_wise</primary><secondary>compMin</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type glm::compMin (genType const &amp; v)</computeroutput></para>
<para>Find the minimum value between single vector components. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__component__wise">GLM_GTX_component_wise</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__component__wise_1gae8ab88024197202c9479d33bdc5a8a5d"/><section>
    <title>compMul()</title>
<indexterm><primary>compMul</primary><secondary>GLM_GTX_component_wise</secondary></indexterm>
<indexterm><primary>GLM_GTX_component_wise</primary><secondary>compMul</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType::value_type glm::compMul (genType const &amp; v)</computeroutput></para>
<para>Multiply all vector components together. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__component__wise">GLM_GTX_component_wise</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__component__wise_1ga3f5d893b2805999d155de26f7a9593d2"/><section>
    <title>compNormalize()</title>
<indexterm><primary>compNormalize</primary><secondary>GLM_GTX_component_wise</secondary></indexterm>
<indexterm><primary>GLM_GTX_component_wise</primary><secondary>compNormalize</secondary></indexterm>
<computeroutput>template&lt;typename floatType , <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, floatType, Q &gt; glm::compNormalize (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Convert an integer vector to a normalized float vector. If the parameter value type is already a floating qualifier type, the value is passed through. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__component__wise">GLM_GTX_component_wise</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__component__wise_1gab0e4a1a73c60f93d8bfbe97f331476a9"/><section>
    <title>compScale()</title>
<indexterm><primary>compScale</primary><secondary>GLM_GTX_component_wise</secondary></indexterm>
<indexterm><primary>GLM_GTX_component_wise</primary><secondary>compScale</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , typename floatType , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::compScale (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, floatType, Q &gt; const &amp; v)</computeroutput></para>
<para>Convert a normalized float vector to an integer vector. If the parameter value type is already a floating qualifier type, the value is passed through. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__component__wise">GLM_GTX_component_wise</link> </para>
</formalpara>
</para>
</section>
</section>
</section>
