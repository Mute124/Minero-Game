<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue" xml:lang="en-US">
<title>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary></indexterm>
<para>

<para>Double-ended queue of bounded size, allowing lock-free atomic access. <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front()</link> and <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link> must not be called concurrently to each other, while <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back()</link> can be called concurrently at all times. <computeroutput>empty()</computeroutput>, <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size()</link></computeroutput>, and <computeroutput>top()</computeroutput> are intentionally not provided. Calling them would not make sense in a concurrent setting. </para>
 
</para>
<para>
<computeroutput>#include &lt;queue.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c">_RestrictedBoundedConcurrentQueue</link> (<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link> __max_size)</para>

<para>Constructor. Not to be called concurrent, of course. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16">~_RestrictedBoundedConcurrentQueue</link> ()</para>

<para>Destructor. Not to be called concurrent, of course. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front</link> (const _Tp &amp;__t)</para>

<para>Pushes one element into the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front</link> (_Tp &amp;__t)</para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back</link> (_Tp &amp;__t)</para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c">_RestrictedBoundedConcurrentQueue</link> (<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link> __max_size)</para>

<para>Constructor. Not to be called concurrent, of course. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16">~_RestrictedBoundedConcurrentQueue</link> ()</para>

<para>Destructor. Not to be called concurrent, of course. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front</link> (const _Tp &amp;__t)</para>

<para>Pushes one element into the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front</link> (_Tp &amp;__t)</para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back</link> (_Tp &amp;__t)</para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c">_RestrictedBoundedConcurrentQueue</link> (<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link> __max_size)</para>

<para>Constructor. Not to be called concurrent, of course. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16">~_RestrictedBoundedConcurrentQueue</link> ()</para>

<para>Destructor. Not to be called concurrent, of course. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front</link> (const _Tp &amp;__t)</para>

<para>Pushes one element into the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front</link> (_Tp &amp;__t)</para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back</link> (_Tp &amp;__t)</para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Tp&gt;<?linebreak?>class __gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</title></simplesect>

<para>Double-ended queue of bounded size, allowing lock-free atomic access. <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front()</link> and <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link> must not be called concurrently to each other, while <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back()</link> can be called concurrently at all times. <computeroutput>empty()</computeroutput>, <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size()</link></computeroutput>, and <computeroutput>top()</computeroutput> are intentionally not provided. Calling them would not make sense in a concurrent setting. </para>



<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>_Tp</entry><entry>
<para>Contained element type. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c"/><section>
    <title>_RestrictedBoundedConcurrentQueue()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_RestrictedBoundedConcurrentQueue</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>_RestrictedBoundedConcurrentQueue</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::_RestrictedBoundedConcurrentQueue (<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link> __max_size)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. Not to be called concurrent, of course. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__max_size</entry><entry>
<para>Maximal number of elements to be contained. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a7070da9f66983a3fa24ae4dc92614c0c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16"/><section>
    <title>~_RestrictedBoundedConcurrentQueue()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~_RestrictedBoundedConcurrentQueue</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>~_RestrictedBoundedConcurrentQueue</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::~<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">_RestrictedBoundedConcurrentQueue</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Destructor. Not to be called concurrent, of course. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c"/><section>
    <title>_RestrictedBoundedConcurrentQueue()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_RestrictedBoundedConcurrentQueue</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>_RestrictedBoundedConcurrentQueue</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::_RestrictedBoundedConcurrentQueue (<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link> __max_size)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. Not to be called concurrent, of course. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__max_size</entry><entry>
<para>Maximal number of elements to be contained. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a7070da9f66983a3fa24ae4dc92614c0c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16"/><section>
    <title>~_RestrictedBoundedConcurrentQueue()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~_RestrictedBoundedConcurrentQueue</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>~_RestrictedBoundedConcurrentQueue</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::~<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">_RestrictedBoundedConcurrentQueue</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Destructor. Not to be called concurrent, of course. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a7070da9f66983a3fa24ae4dc92614c0c"/><section>
    <title>_RestrictedBoundedConcurrentQueue()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_RestrictedBoundedConcurrentQueue</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>_RestrictedBoundedConcurrentQueue</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::_RestrictedBoundedConcurrentQueue (<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link> __max_size)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. Not to be called concurrent, of course. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__max_size</entry><entry>
<para>Maximal number of elements to be contained. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a7070da9f66983a3fa24ae4dc92614c0c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a0e201d45c998cc913577af578f0b9a16"/><section>
    <title>~_RestrictedBoundedConcurrentQueue()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~_RestrictedBoundedConcurrentQueue</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>~_RestrictedBoundedConcurrentQueue</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::~<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">_RestrictedBoundedConcurrentQueue</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Destructor. Not to be called concurrent, of course. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7"/><section>
    <title>pop_back()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pop_back</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>pop_back</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::pop_back (_Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_aff5854a49d63fcd08aae08eb282361e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7"/><section>
    <title>pop_back()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pop_back</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>pop_back</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::pop_back (_Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_aff5854a49d63fcd08aae08eb282361e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7"/><section>
    <title>pop_back()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pop_back</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>pop_back</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::pop_back (_Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_aff5854a49d63fcd08aae08eb282361e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3"/><section>
    <title>pop_front()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pop_front</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>pop_front</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::pop_front (_Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a4b760899cefaccb86586c447b12c4cc3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a4b760899cefaccb86586c447b12c4cc3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3"/><section>
    <title>pop_front()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pop_front</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>pop_front</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::pop_front (_Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a4b760899cefaccb86586c447b12c4cc3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3"/><section>
    <title>pop_front()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pop_front</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>pop_front</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::pop_front (_Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pops one element from the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a4b760899cefaccb86586c447b12c4cc3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777"/><section>
    <title>push_front()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>push_front</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>push_front</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::push_front (const _Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pushes one element into the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a2ac4fcc26b5a8e8d3db9993ca3b6f777_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a2ac4fcc26b5a8e8d3db9993ca3b6f777_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777"/><section>
    <title>push_front()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>push_front</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>push_front</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::push_front (const _Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pushes one element into the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a2ac4fcc26b5a8e8d3db9993ca3b6f777_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777"/><section>
    <title>push_front()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>push_front</primary><secondary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</primary><secondary>push_front</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue</link>&lt; _Tp &gt;::push_front (const _Tp &amp; __t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pushes one element into the queue at the front end. Must not be called concurrently with <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link>. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_a2ac4fcc26b5a8e8d3db9993ca3b6f777_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2queue_8h">queue.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2queue_8h">queue.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2queue_8h">queue.h</link></section>
</section>
