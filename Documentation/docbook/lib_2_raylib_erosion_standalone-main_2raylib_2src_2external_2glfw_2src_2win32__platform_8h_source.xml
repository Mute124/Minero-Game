<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2_raylib_erosion_standalone-main_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_source" xml:lang="en-US">
<title>win32_platform.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/RaylibErosionStandalone-main/raylib/src/external/glfw/src/win32_platform.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//========================================================================</emphasis>
2 <emphasis role="comment">//&#32;GLFW&#32;3.4&#32;Win32&#32;-&#32;www.glfw.org</emphasis>
3 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
4 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2002-2006&#32;Marcus&#32;Geelnard</emphasis>
5 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2006-2019&#32;Camilla&#32;LÃ¶wy&#32;&lt;elmindreda@glfw.org&gt;</emphasis>
6 <emphasis role="comment">//</emphasis>
7 <emphasis role="comment">//&#32;This&#32;software&#32;is&#32;provided&#32;&apos;as-is&apos;,&#32;without&#32;any&#32;express&#32;or&#32;implied</emphasis>
8 <emphasis role="comment">//&#32;warranty.&#32;In&#32;no&#32;event&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages</emphasis>
9 <emphasis role="comment">//&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
10 <emphasis role="comment">//</emphasis>
11 <emphasis role="comment">//&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,</emphasis>
12 <emphasis role="comment">//&#32;including&#32;commercial&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it</emphasis>
13 <emphasis role="comment">//&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
14 <emphasis role="comment">//</emphasis>
15 <emphasis role="comment">//&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not</emphasis>
16 <emphasis role="comment">//&#32;&#32;&#32;&#32;claim&#32;that&#32;you&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software</emphasis>
17 <emphasis role="comment">//&#32;&#32;&#32;&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment&#32;in&#32;the&#32;product&#32;documentation&#32;would</emphasis>
18 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
19 <emphasis role="comment">//</emphasis>
20 <emphasis role="comment">//&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not</emphasis>
21 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;misrepresented&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
22 <emphasis role="comment">//</emphasis>
23 <emphasis role="comment">//&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source</emphasis>
24 <emphasis role="comment">//&#32;&#32;&#32;&#32;distribution.</emphasis>
25 <emphasis role="comment">//</emphasis>
26 <emphasis role="comment">//========================================================================</emphasis>
27 
28 <emphasis role="comment">//&#32;We&#32;don&apos;t&#32;need&#32;all&#32;the&#32;fancy&#32;stuff</emphasis>
29 <emphasis role="preprocessor">#ifndef&#32;NOMINMAX</emphasis>
30 <emphasis role="preprocessor">&#32;#define&#32;NOMINMAX</emphasis>
31 <emphasis role="preprocessor">#endif</emphasis>
32 
33 <emphasis role="preprocessor">#ifndef&#32;VC_EXTRALEAN</emphasis>
34 <emphasis role="preprocessor">&#32;#define&#32;VC_EXTRALEAN</emphasis>
35 <emphasis role="preprocessor">#endif</emphasis>
36 
37 <emphasis role="preprocessor">#ifndef&#32;WIN32_LEAN_AND_MEAN</emphasis>
38 <emphasis role="preprocessor">&#32;#define&#32;WIN32_LEAN_AND_MEAN</emphasis>
39 <emphasis role="preprocessor">#endif</emphasis>
40 
41 <emphasis role="comment">//&#32;This&#32;is&#32;a&#32;workaround&#32;for&#32;the&#32;fact&#32;that&#32;glfw3.h&#32;needs&#32;to&#32;export&#32;APIENTRY&#32;(for</emphasis>
42 <emphasis role="comment">//&#32;example&#32;to&#32;allow&#32;applications&#32;to&#32;correctly&#32;declare&#32;a&#32;GL_ARB_debug_output</emphasis>
43 <emphasis role="comment">//&#32;callback)&#32;but&#32;windows.h&#32;assumes&#32;no&#32;one&#32;will&#32;define&#32;APIENTRY&#32;before&#32;it&#32;does</emphasis>
44 <emphasis role="preprocessor">#undef&#32;APIENTRY</emphasis>
45 
46 <emphasis role="comment">//&#32;GLFW&#32;on&#32;Windows&#32;is&#32;Unicode&#32;only&#32;and&#32;does&#32;not&#32;work&#32;in&#32;MBCS&#32;mode</emphasis>
47 <emphasis role="preprocessor">#ifndef&#32;UNICODE</emphasis>
48 <emphasis role="preprocessor">&#32;#define&#32;UNICODE</emphasis>
49 <emphasis role="preprocessor">#endif</emphasis>
50 
51 <emphasis role="comment">//&#32;GLFW&#32;requires&#32;Windows&#32;XP&#32;or&#32;later</emphasis>
52 <emphasis role="preprocessor">#if&#32;WINVER&#32;&lt;&#32;0x0501</emphasis>
53 <emphasis role="preprocessor">&#32;#undef&#32;WINVER</emphasis>
54 <emphasis role="preprocessor">&#32;#define&#32;WINVER&#32;0x0501</emphasis>
55 <emphasis role="preprocessor">#endif</emphasis>
56 <emphasis role="preprocessor">#if&#32;_WIN32_WINNT&#32;&lt;&#32;0x0501</emphasis>
57 <emphasis role="preprocessor">&#32;#undef&#32;_WIN32_WINNT</emphasis>
58 <emphasis role="preprocessor">&#32;#define&#32;_WIN32_WINNT&#32;0x0501</emphasis>
59 <emphasis role="preprocessor">#endif</emphasis>
60 
61 <emphasis role="comment">//&#32;GLFW&#32;uses&#32;DirectInput8&#32;interfaces</emphasis>
62 <emphasis role="preprocessor">#define&#32;DIRECTINPUT_VERSION&#32;0x0800</emphasis>
63 
64 <emphasis role="comment">//&#32;GLFW&#32;uses&#32;OEM&#32;cursor&#32;resources</emphasis>
65 <emphasis role="preprocessor">#define&#32;OEMRESOURCE</emphasis>
66 
67 <emphasis role="preprocessor">#include&#32;&lt;wctype.h&gt;</emphasis>
68 <emphasis role="preprocessor">#include&#32;&lt;windows.h&gt;</emphasis>
69 <emphasis role="preprocessor">#include&#32;&lt;dinput.h&gt;</emphasis>
70 <emphasis role="preprocessor">#include&#32;&lt;xinput.h&gt;</emphasis>
71 <emphasis role="preprocessor">#include&#32;&lt;dbt.h&gt;</emphasis>
72 
73 <emphasis role="comment">//&#32;HACK:&#32;Define&#32;macros&#32;that&#32;some&#32;windows.h&#32;variants&#32;don&apos;t</emphasis>
74 <emphasis role="preprocessor">#ifndef&#32;WM_MOUSEHWHEEL</emphasis>
75 <emphasis role="preprocessor">&#32;#define&#32;WM_MOUSEHWHEEL&#32;0x020E</emphasis>
76 <emphasis role="preprocessor">#endif</emphasis>
77 <emphasis role="preprocessor">#ifndef&#32;WM_DWMCOMPOSITIONCHANGED</emphasis>
78 <emphasis role="preprocessor">&#32;#define&#32;WM_DWMCOMPOSITIONCHANGED&#32;0x031E</emphasis>
79 <emphasis role="preprocessor">#endif</emphasis>
80 <emphasis role="preprocessor">#ifndef&#32;WM_COPYGLOBALDATA</emphasis>
81 <emphasis role="preprocessor">&#32;#define&#32;WM_COPYGLOBALDATA&#32;0x0049</emphasis>
82 <emphasis role="preprocessor">#endif</emphasis>
83 <emphasis role="preprocessor">#ifndef&#32;WM_UNICHAR</emphasis>
84 <emphasis role="preprocessor">&#32;#define&#32;WM_UNICHAR&#32;0x0109</emphasis>
85 <emphasis role="preprocessor">#endif</emphasis>
86 <emphasis role="preprocessor">#ifndef&#32;UNICODE_NOCHAR</emphasis>
87 <emphasis role="preprocessor">&#32;#define&#32;UNICODE_NOCHAR&#32;0xFFFF</emphasis>
88 <emphasis role="preprocessor">#endif</emphasis>
89 <emphasis role="preprocessor">#ifndef&#32;WM_DPICHANGED</emphasis>
90 <emphasis role="preprocessor">&#32;#define&#32;WM_DPICHANGED&#32;0x02E0</emphasis>
91 <emphasis role="preprocessor">#endif</emphasis>
92 <emphasis role="preprocessor">#ifndef&#32;GET_XBUTTON_WPARAM</emphasis>
93 <emphasis role="preprocessor">&#32;#define&#32;GET_XBUTTON_WPARAM(w)&#32;(HIWORD(w))</emphasis>
94 <emphasis role="preprocessor">#endif</emphasis>
95 <emphasis role="preprocessor">#ifndef&#32;EDS_ROTATEDMODE</emphasis>
96 <emphasis role="preprocessor">&#32;#define&#32;EDS_ROTATEDMODE&#32;0x00000004</emphasis>
97 <emphasis role="preprocessor">#endif</emphasis>
98 <emphasis role="preprocessor">#ifndef&#32;DISPLAY_DEVICE_ACTIVE</emphasis>
99 <emphasis role="preprocessor">&#32;#define&#32;DISPLAY_DEVICE_ACTIVE&#32;0x00000001</emphasis>
100 <emphasis role="preprocessor">#endif</emphasis>
101 <emphasis role="preprocessor">#ifndef&#32;_WIN32_WINNT_WINBLUE</emphasis>
102 <emphasis role="preprocessor">&#32;#define&#32;_WIN32_WINNT_WINBLUE&#32;0x0602</emphasis>
103 <emphasis role="preprocessor">#endif</emphasis>
104 <emphasis role="preprocessor">#ifndef&#32;_WIN32_WINNT_WIN8</emphasis>
105 <emphasis role="preprocessor">&#32;#define&#32;_WIN32_WINNT_WIN8&#32;0x0602</emphasis>
106 <emphasis role="preprocessor">#endif</emphasis>
107 <emphasis role="preprocessor">#ifndef&#32;WM_GETDPISCALEDSIZE</emphasis>
108 <emphasis role="preprocessor">&#32;#define&#32;WM_GETDPISCALEDSIZE&#32;0x02e4</emphasis>
109 <emphasis role="preprocessor">#endif</emphasis>
110 <emphasis role="preprocessor">#ifndef&#32;USER_DEFAULT_SCREEN_DPI</emphasis>
111 <emphasis role="preprocessor">&#32;#define&#32;USER_DEFAULT_SCREEN_DPI&#32;96</emphasis>
112 <emphasis role="preprocessor">#endif</emphasis>
113 <emphasis role="preprocessor">#ifndef&#32;OCR_HAND</emphasis>
114 <emphasis role="preprocessor">&#32;#define&#32;OCR_HAND&#32;32649</emphasis>
115 <emphasis role="preprocessor">#endif</emphasis>
116 
117 <emphasis role="preprocessor">#if&#32;WINVER&#32;&lt;&#32;0x0601</emphasis>
118 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
119 {
120 &#32;&#32;&#32;&#32;DWORD&#32;cbSize;
121 &#32;&#32;&#32;&#32;DWORD&#32;ExtStatus;
122 }&#32;<link linkend="_struct_c_h_a_n_g_e_f_i_l_t_e_r_s_t_r_u_c_t">CHANGEFILTERSTRUCT</link>;
123 <emphasis role="preprocessor">#ifndef&#32;MSGFLT_ALLOW</emphasis>
124 <emphasis role="preprocessor">&#32;#define&#32;MSGFLT_ALLOW&#32;1</emphasis>
125 <emphasis role="preprocessor">#endif</emphasis>
126 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*Windows&#32;7*/</emphasis><emphasis role="preprocessor"></emphasis>
127 
128 <emphasis role="preprocessor">#if&#32;WINVER&#32;&lt;&#32;0x0600</emphasis>
129 <emphasis role="preprocessor">#define&#32;DWM_BB_ENABLE&#32;0x00000001</emphasis>
130 <emphasis role="preprocessor">#define&#32;DWM_BB_BLURREGION&#32;0x00000002</emphasis>
131 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
132 {
133 &#32;&#32;&#32;&#32;DWORD&#32;dwFlags;
134 &#32;&#32;&#32;&#32;BOOL&#32;fEnable;
135 &#32;&#32;&#32;&#32;HRGN&#32;hRgnBlur;
136 &#32;&#32;&#32;&#32;BOOL&#32;fTransitionOnMaximized;
137 }&#32;<link linkend="_struct_d_w_m___b_l_u_r_b_e_h_i_n_d">DWM_BLURBEHIND</link>;
138 <emphasis role="preprocessor">#else</emphasis>
139 <emphasis role="preprocessor">&#32;#include&#32;&lt;dwmapi.h&gt;</emphasis>
140 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*Windows&#32;Vista*/</emphasis><emphasis role="preprocessor"></emphasis>
141 
142 <emphasis role="preprocessor">#ifndef&#32;DPI_ENUMS_DECLARED</emphasis>
143 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
144 {
145 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019">PROCESS_DPI_UNAWARE</link>&#32;=&#32;0,
146 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b">PROCESS_SYSTEM_DPI_AWARE</link>&#32;=&#32;1,
147 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097">PROCESS_PER_MONITOR_DPI_AWARE</link>&#32;=&#32;2
148 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link>;
149 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
150 {
151 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162">MDT_EFFECTIVE_DPI</link>&#32;=&#32;0,
152 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3">MDT_ANGULAR_DPI</link>&#32;=&#32;1,
153 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851">MDT_RAW_DPI</link>&#32;=&#32;2,
154 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f">MDT_DEFAULT</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162">MDT_EFFECTIVE_DPI</link>
155 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link>;
156 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*DPI_ENUMS_DECLARED*/</emphasis><emphasis role="preprocessor"></emphasis>
157 
158 <emphasis role="preprocessor">#ifndef&#32;DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</emphasis>
159 <emphasis role="preprocessor">#define&#32;DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2&#32;((HANDLE)&#32;-4)</emphasis>
160 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2*/</emphasis><emphasis role="preprocessor"></emphasis>
161 
162 <emphasis role="comment">//&#32;HACK:&#32;Define&#32;versionhelpers.h&#32;functions&#32;manually&#32;as&#32;MinGW&#32;lacks&#32;the&#32;header</emphasis>
163 <emphasis role="preprocessor">#define&#32;IsWindowsXPOrGreater()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
164 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindowsVersionOrGreaterWin32(HIBYTE(_WIN32_WINNT_WINXP),&#32;&#32;&#32;\</emphasis>
165 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_WINXP),&#32;0)</emphasis>
166 <emphasis role="preprocessor">#define&#32;IsWindowsVistaOrGreater()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
167 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindowsVersionOrGreaterWin32(HIBYTE(_WIN32_WINNT_VISTA),&#32;&#32;&#32;\</emphasis>
168 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_VISTA),&#32;0)</emphasis>
169 <emphasis role="preprocessor">#define&#32;IsWindows7OrGreater()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
170 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindowsVersionOrGreaterWin32(HIBYTE(_WIN32_WINNT_WIN7),&#32;&#32;&#32;&#32;\</emphasis>
171 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_WIN7),&#32;0)</emphasis>
172 <emphasis role="preprocessor">#define&#32;IsWindows8OrGreater()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
173 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindowsVersionOrGreaterWin32(HIBYTE(_WIN32_WINNT_WIN8),&#32;&#32;&#32;&#32;\</emphasis>
174 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_WIN8),&#32;0)</emphasis>
175 <emphasis role="preprocessor">#define&#32;IsWindows8Point1OrGreater()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
176 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindowsVersionOrGreaterWin32(HIBYTE(_WIN32_WINNT_WINBLUE),&#32;\</emphasis>
177 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_WINBLUE),&#32;0)</emphasis>
178 
179 <emphasis role="preprocessor">#define&#32;_glfwIsWindows10AnniversaryUpdateOrGreaterWin32()&#32;\</emphasis>
180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindows10BuildOrGreaterWin32(14393)</emphasis>
181 <emphasis role="preprocessor">#define&#32;_glfwIsWindows10CreatorsUpdateOrGreaterWin32()&#32;\</emphasis>
182 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_glfwIsWindows10BuildOrGreaterWin32(15063)</emphasis>
183 
184 <emphasis role="comment">//&#32;HACK:&#32;Define&#32;macros&#32;that&#32;some&#32;xinput.h&#32;variants&#32;don&apos;t</emphasis>
185 <emphasis role="preprocessor">#ifndef&#32;XINPUT_CAPS_WIRELESS</emphasis>
186 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_CAPS_WIRELESS&#32;0x0002</emphasis>
187 <emphasis role="preprocessor">#endif</emphasis>
188 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_WHEEL</emphasis>
189 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_WHEEL&#32;0x02</emphasis>
190 <emphasis role="preprocessor">#endif</emphasis>
191 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_ARCADE_STICK</emphasis>
192 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_ARCADE_STICK&#32;0x03</emphasis>
193 <emphasis role="preprocessor">#endif</emphasis>
194 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_FLIGHT_STICK</emphasis>
195 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_FLIGHT_STICK&#32;0x04</emphasis>
196 <emphasis role="preprocessor">#endif</emphasis>
197 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_DANCE_PAD</emphasis>
198 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_DANCE_PAD&#32;0x05</emphasis>
199 <emphasis role="preprocessor">#endif</emphasis>
200 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_GUITAR</emphasis>
201 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_GUITAR&#32;0x06</emphasis>
202 <emphasis role="preprocessor">#endif</emphasis>
203 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_DRUM_KIT</emphasis>
204 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_DRUM_KIT&#32;0x08</emphasis>
205 <emphasis role="preprocessor">#endif</emphasis>
206 <emphasis role="preprocessor">#ifndef&#32;XINPUT_DEVSUBTYPE_ARCADE_PAD</emphasis>
207 <emphasis role="preprocessor">&#32;#define&#32;XINPUT_DEVSUBTYPE_ARCADE_PAD&#32;0x13</emphasis>
208 <emphasis role="preprocessor">#endif</emphasis>
209 <emphasis role="preprocessor">#ifndef&#32;XUSER_MAX_COUNT</emphasis>
210 <emphasis role="preprocessor">&#32;#define&#32;XUSER_MAX_COUNT&#32;4</emphasis>
211 <emphasis role="preprocessor">#endif</emphasis>
212 
213 <emphasis role="comment">//&#32;HACK:&#32;Define&#32;macros&#32;that&#32;some&#32;dinput.h&#32;variants&#32;don&apos;t</emphasis>
214 <emphasis role="preprocessor">#ifndef&#32;DIDFT_OPTIONAL</emphasis>
215 <emphasis role="preprocessor">&#32;#define&#32;DIDFT_OPTIONAL&#32;0x80000000</emphasis>
216 <emphasis role="preprocessor">#endif</emphasis>
217 
218 <emphasis role="comment">//&#32;winmm.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
219 <emphasis role="keyword">typedef</emphasis>&#32;DWORD&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a57edbe44c010ed8a479a552b4e57dcf6">PFN_timeGetTime</link>)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>);
220 <emphasis role="preprocessor">#define&#32;timeGetTime&#32;_glfw.win32.winmm.GetTime</emphasis>
221 
222 <emphasis role="comment">//&#32;xinput.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
223 <emphasis role="keyword">typedef</emphasis>&#32;DWORD&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1ab894020cfaceec8e0a7e24a2b8cf003a">PFN_XInputGetCapabilities</link>)(DWORD,DWORD,<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s">XINPUT_CAPABILITIES</link>*);
224 <emphasis role="keyword">typedef</emphasis>&#32;DWORD&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a0554b333dae0845c369b9d7234c695e9">PFN_XInputGetState</link>)(DWORD,<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e">XINPUT_STATE</link>*);
225 <emphasis role="preprocessor">#define&#32;XInputGetCapabilities&#32;_glfw.win32.xinput.GetCapabilities</emphasis>
226 <emphasis role="preprocessor">#define&#32;XInputGetState&#32;_glfw.win32.xinput.GetState</emphasis>
227 
228 <emphasis role="comment">//&#32;dinput8.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
229 <emphasis role="keyword">typedef</emphasis>&#32;HRESULT&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a21e6e94714ccc6d706bfc1697bd9f71b">PFN_DirectInput8Create</link>)(HINSTANCE,DWORD,REFIID,LPVOID*,LPUNKNOWN);
230 <emphasis role="preprocessor">#define&#32;DirectInput8Create&#32;_glfw.win32.dinput8.Create</emphasis>
231 
232 <emphasis role="comment">//&#32;user32.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
233 <emphasis role="keyword">typedef</emphasis>&#32;BOOL&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a3b0088e74a9d3c97e116d080cbf93176">PFN_SetProcessDPIAware</link>)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>);
234 <emphasis role="keyword">typedef</emphasis>&#32;BOOL&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1ac5444b0c65734773cf49c70a4e69abc4">PFN_ChangeWindowMessageFilterEx</link>)(HWND,UINT,DWORD,<link linkend="_struct_c_h_a_n_g_e_f_i_l_t_e_r_s_t_r_u_c_t">CHANGEFILTERSTRUCT</link>*);
235 <emphasis role="keyword">typedef</emphasis>&#32;BOOL&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a8a5c41e21d30070c8cd14a1621c3e5fb">PFN_EnableNonClientDpiScaling</link>)(HWND);
236 <emphasis role="keyword">typedef</emphasis>&#32;BOOL&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a23bae644f21a2c242a3e3589d5279350">PFN_SetProcessDpiAwarenessContext</link>)(HANDLE);
237 <emphasis role="keyword">typedef</emphasis>&#32;UINT&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1aeffd71949cc91f9620f80af4c8c9aec6">PFN_GetDpiForWindow</link>)(HWND);
238 <emphasis role="keyword">typedef</emphasis>&#32;BOOL&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a193a4995605a686091c2ad135f2ebbd4">PFN_AdjustWindowRectExForDpi</link>)(LPRECT,DWORD,BOOL,DWORD,UINT);
239 <emphasis role="preprocessor">#define&#32;SetProcessDPIAware&#32;_glfw.win32.user32.SetProcessDPIAware_</emphasis>
240 <emphasis role="preprocessor">#define&#32;ChangeWindowMessageFilterEx&#32;_glfw.win32.user32.ChangeWindowMessageFilterEx_</emphasis>
241 <emphasis role="preprocessor">#define&#32;EnableNonClientDpiScaling&#32;_glfw.win32.user32.EnableNonClientDpiScaling_</emphasis>
242 <emphasis role="preprocessor">#define&#32;SetProcessDpiAwarenessContext&#32;_glfw.win32.user32.SetProcessDpiAwarenessContext_</emphasis>
243 <emphasis role="preprocessor">#define&#32;GetDpiForWindow&#32;_glfw.win32.user32.GetDpiForWindow_</emphasis>
244 <emphasis role="preprocessor">#define&#32;AdjustWindowRectExForDpi&#32;_glfw.win32.user32.AdjustWindowRectExForDpi_</emphasis>
245 
246 <emphasis role="comment">//&#32;dwmapi.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
247 <emphasis role="keyword">typedef</emphasis>&#32;HRESULT&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a531129c30409599eee72da5fcf2b38f6">PFN_DwmIsCompositionEnabled</link>)(BOOL*);
248 <emphasis role="keyword">typedef</emphasis>&#32;HRESULT&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a376123548a7bd8202932f6e95ff4d785">PFN_DwmFlush</link>)(VOID);
249 <emphasis role="keyword">typedef</emphasis>&#32;HRESULT(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a2670fd07424d67591b26e0a36857c727">PFN_DwmEnableBlurBehindWindow</link>)(HWND,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_d_w_m___b_l_u_r_b_e_h_i_n_d">DWM_BLURBEHIND</link>*);
250 <emphasis role="preprocessor">#define&#32;DwmIsCompositionEnabled&#32;_glfw.win32.dwmapi.IsCompositionEnabled</emphasis>
251 <emphasis role="preprocessor">#define&#32;DwmFlush&#32;_glfw.win32.dwmapi.Flush</emphasis>
252 <emphasis role="preprocessor">#define&#32;DwmEnableBlurBehindWindow&#32;_glfw.win32.dwmapi.EnableBlurBehindWindow</emphasis>
253 
254 <emphasis role="comment">//&#32;shcore.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
255 <emphasis role="keyword">typedef</emphasis>&#32;HRESULT&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a36d30a5f5f7942a50b272fa13058cf96">PFN_SetProcessDpiAwareness</link>)(<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link>);
256 <emphasis role="keyword">typedef</emphasis>&#32;HRESULT&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a411247e61a6621babce2d06bb8a434db">PFN_GetDpiForMonitor</link>)(HMONITOR,<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link>,UINT*,UINT*);
257 <emphasis role="preprocessor">#define&#32;SetProcessDpiAwareness&#32;_glfw.win32.shcore.SetProcessDpiAwareness_</emphasis>
258 <emphasis role="preprocessor">#define&#32;GetDpiForMonitor&#32;_glfw.win32.shcore.GetDpiForMonitor_</emphasis>
259 
260 <emphasis role="comment">//&#32;ntdll.dll&#32;function&#32;pointer&#32;typedefs</emphasis>
261 <emphasis role="keyword">typedef</emphasis>&#32;LONG&#32;(WINAPI&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1ae84ddc48e418de3da946b1ca744f44af">PFN_RtlVerifyVersionInfo</link>)(OSVERSIONINFOEXW*,ULONG,ULONGLONG);
262 <emphasis role="preprocessor">#define&#32;RtlVerifyVersionInfo&#32;_glfw.win32.ntdll.RtlVerifyVersionInfo_</emphasis>
263 
264 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abb605a7700670dd8420cc3841b939444">VkFlags</link>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1ab89ca237e210dcda06c93ef3acc5caaa">VkWin32SurfaceCreateFlagsKHR</link>;
265 
266 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link>
267 {
268 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1aff9f2b99398eb80a2b5a146bc5534ce8">VkStructureType</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a84412cd00fdce3a59f9fef14d32e2419">sType</link>;
269 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a4cb7a7dc2d0dcd5273d97d6f4ae4f6cd">pNext</link>;
270 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1ab89ca237e210dcda06c93ef3acc5caaa">VkWin32SurfaceCreateFlagsKHR</link>&#32;&#32;&#32;&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1aac29ce4120fbf7635bb7deed9369e499">flags</link>;
271 &#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a4931b55db25c4ab97f3efc60d5cb764c">hinstance</link>;
272 &#32;&#32;&#32;&#32;HWND&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a5633124f624ab7bbb2bb42ceb65d45dc">hwnd</link>;
273 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a020658817e5a625228e410cc2e1b57a0">VkWin32SurfaceCreateInfoKHR</link>;
274 
275 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;(<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link>&#32;*<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1aae09ac436e491e590770b5585cd57874">PFN_vkCreateWin32SurfaceKHR</link>)(<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link>,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link>*,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link>*,<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link>*);
276 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1ae5d9faf75f583010e32ee49087a15326">VkBool32</link>&#32;(<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link>&#32;*<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a91754c61c45a61e9b0858bca669ccf63">PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</link>)(<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link>,<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>);
277 
278 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__joystick_8h">win32_joystick.h</link>&quot;</emphasis>
279 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2wgl__context_8h">wgl_context.h</link>&quot;</emphasis>
280 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2egl__context_8h">egl_context.h</link>&quot;</emphasis>
281 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2osmesa__context_8h">osmesa_context.h</link>&quot;</emphasis>
282 
283 <emphasis role="preprocessor">#if&#32;!defined(_GLFW_WNDCLASSNAME)</emphasis>
284 <emphasis role="preprocessor">&#32;#define&#32;_GLFW_WNDCLASSNAME&#32;L&quot;GLFW30&quot;</emphasis>
285 <emphasis role="preprocessor">#endif</emphasis>
286 
287 <emphasis role="preprocessor">#define&#32;_glfw_dlopen(name)&#32;LoadLibraryA(name)</emphasis>
288 <emphasis role="preprocessor">#define&#32;_glfw_dlclose(handle)&#32;FreeLibrary((HMODULE)&#32;handle)</emphasis>
289 <emphasis role="preprocessor">#define&#32;_glfw_dlsym(handle,&#32;name)&#32;GetProcAddress((HMODULE)&#32;handle,&#32;name)</emphasis>
290 
291 <emphasis role="preprocessor">#define&#32;_GLFW_EGL_NATIVE_WINDOW&#32;&#32;((EGLNativeWindowType)&#32;window-&gt;win32.handle)</emphasis>
292 <emphasis role="preprocessor">#define&#32;_GLFW_EGL_NATIVE_DISPLAY&#32;EGL_DEFAULT_DISPLAY</emphasis>
293 
294 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_WINDOW_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWwindowWin32&#32;&#32;win32</emphasis>
295 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_LIBRARY_WINDOW_STATE&#32;_GLFWlibraryWin32&#32;win32</emphasis>
296 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_LIBRARY_TIMER_STATE&#32;&#32;_GLFWtimerWin32&#32;&#32;&#32;win32</emphasis>
297 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_MONITOR_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWmonitorWin32&#32;win32</emphasis>
298 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_CURSOR_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWcursorWin32&#32;&#32;win32</emphasis>
299 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_TLS_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWtlsWin32&#32;&#32;&#32;&#32;&#32;win32</emphasis>
300 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_MUTEX_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWmutexWin32&#32;&#32;&#32;win32</emphasis>
301 
302 
303 <emphasis role="comment">//&#32;Win32-specific&#32;per-window&#32;data</emphasis>
304 <emphasis role="comment">//</emphasis>
305 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link>
306 {
307 &#32;&#32;&#32;&#32;HWND&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a3dcd617958be4eeb76edee0e0e955921">handle</link>;
308 &#32;&#32;&#32;&#32;HICON&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a6e887dc30f8bbd5932d7d2431476b633">bigIcon</link>;
309 &#32;&#32;&#32;&#32;HICON&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a84ce3b137ecf4d6076849e129717b81d">smallIcon</link>;
310 
311 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a3c9b11452ca67a201d5ab956d6d2a6b5">cursorTracked</link>;
312 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a8a81f276c71cf8d12e5dd63939cd5b1d">frameAction</link>;
313 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a278ddca267bc53b5d40e56d9de34d772">iconified</link>;
314 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1acc20377591f51dace8660ada9dea178d">maximized</link>;
315 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Whether&#32;to&#32;enable&#32;framebuffer&#32;transparency&#32;on&#32;DWM</emphasis>
316 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a16c104d35459b4b2de4a122162115114">transparent</link>;
317 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a40e5106887d246cf7938d98ad601f506">scaleToMonitor</link>;
318 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a2857aa0b949b8a1a08d2c2041b447c7d">keymenu</link>;
319 
320 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;last&#32;received&#32;cursor&#32;position,&#32;regardless&#32;of&#32;source</emphasis>
321 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a3a00fd9963648f4433791e6ebafe0c77">lastCursorPosX</link>,&#32;<link linkend="_struct___g_l_f_wwindow_win32_1a9aa0487cf77c2d9166908653438d96f4">lastCursorPosY</link>;
322 
323 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1ab5efcddf006814cfe6ae2adc0657607f">_GLFWwindowWin32</link>;
324 
325 <emphasis role="comment">//&#32;Win32-specific&#32;global&#32;data</emphasis>
326 <emphasis role="comment">//</emphasis>
327 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link>
328 {
329 &#32;&#32;&#32;&#32;HWND&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a7e717a64c0602a812dcfe2951143f70f">helperWindowHandle</link>;
330 &#32;&#32;&#32;&#32;HDEVNOTIFY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1ad3e98a8c4f9cd7003322e78d9b237da5">deviceNotificationHandle</link>;
331 &#32;&#32;&#32;&#32;DWORD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a348783bede840a99987a498af6c6cee7">foregroundLockTimeout</link>;
332 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1ac9e9762a5f0aef3991e3097f8665a5e6">acquiredMonitorCount</link>;
333 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a99d3fbe677c0f0fa46d88105c7ac3bca">clipboardString</link>;
334 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a0f84054ba379a1ae8e0a476f835bbaf1">keycodes</link>[512];
335 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a93ece1cdc6260de73eda5be5ebf1b1f5">scancodes</link>[<link linkend="_group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789">GLFW_KEY_LAST</link>&#32;+&#32;1];
336 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1ae596a5bbaaca83e10e245d8a99f92aa3">keynames</link>[<link linkend="_group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789">GLFW_KEY_LAST</link>&#32;+&#32;1][5];
337 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Where&#32;to&#32;place&#32;the&#32;cursor&#32;when&#32;re-enabled</emphasis>
338 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1ad4057dba1b37255eee5f61d4b81cd501">restoreCursorPosX</link>,&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1ac60024c8c809d9374c31def4845cfce7">restoreCursorPosY</link>;
339 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;window&#32;whose&#32;disabled&#32;cursor&#32;mode&#32;is&#32;active</emphasis>
340 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a388194115e918f64210e92bc6985f260">disabledCursorWindow</link>;
341 &#32;&#32;&#32;&#32;RAWINPUT*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1aaae9c976891792a529909e6e9d93367d">rawInput</link>;
342 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1aa9dd8e6f56396cc9434e2be32e96d0ec">rawInputSize</link>;
343 &#32;&#32;&#32;&#32;UINT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a7ce4bcfd5eed9bd2e0c931cd5da2b157">mouseTrailSize</link>;
344 
345 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a57edbe44c010ed8a479a552b4e57dcf6">PFN_timeGetTime</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a7ead0cf6adc60b029c03989320a13f30">GetTime</link>;
348 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a4dc59e44ece974d67ba7abddbaba6f8f">winmm</link>;
349 
350 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a21e6e94714ccc6d706bfc1697bd9f71b">PFN_DirectInput8Create</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1af67fa1ae2ad546b1992a2a5afd299407">Create</link>;
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IDirectInput8W*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29cdc547fadbff07c5d656adfba45261">api</link>;
354 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a75b7a4fc73042b813539d5c9523c822b">dinput8</link>;
355 
356 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1ab894020cfaceec8e0a7e24a2b8cf003a">PFN_XInputGetCapabilities</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a584b13e79dabcf834ef73f795eebc6c7">GetCapabilities</link>;
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a0554b333dae0845c369b9d7234c695e9">PFN_XInputGetState</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a552db763f7158e1851d3f51f46b86278">GetState</link>;
360 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a83b9d4f86c0216a17d63ba0e1593071b">xinput</link>;
361 
362 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a3b0088e74a9d3c97e116d080cbf93176">PFN_SetProcessDPIAware</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a6d859f3934b5e7c9cb80b1749cfbbbd9">SetProcessDPIAware_</link>;
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1ac5444b0c65734773cf49c70a4e69abc4">PFN_ChangeWindowMessageFilterEx</link>&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a44b5c1211d46508eda2f8a3a7e86a5e2">ChangeWindowMessageFilterEx_</link>;
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a8a5c41e21d30070c8cd14a1621c3e5fb">PFN_EnableNonClientDpiScaling</link>&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a3ebae1b666e66ed971195b31adeb80a7">EnableNonClientDpiScaling_</link>;
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a23bae644f21a2c242a3e3589d5279350">PFN_SetProcessDpiAwarenessContext</link>&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a85972291f5272ae9d01ff9853176f70e">SetProcessDpiAwarenessContext_</link>;
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1aeffd71949cc91f9620f80af4c8c9aec6">PFN_GetDpiForWindow</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a6b50c7a6af5e6063f02ac134d30edce2">GetDpiForWindow_</link>;
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a193a4995605a686091c2ad135f2ebbd4">PFN_AdjustWindowRectExForDpi</link>&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1adf72152f7d128f609326679f9b599ecb">AdjustWindowRectExForDpi_</link>;
370 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1ad2efdb8e4d9113f308a4a3bd69e2851b">user32</link>;
371 
372 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a531129c30409599eee72da5fcf2b38f6">PFN_DwmIsCompositionEnabled</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a752d73067bd7483552019757a6092a4a">IsCompositionEnabled</link>;
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a376123548a7bd8202932f6e95ff4d785">PFN_DwmFlush</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a7854a8b838c23ac3e96c3855616b33aa">Flush</link>;
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a2670fd07424d67591b26e0a36857c727">PFN_DwmEnableBlurBehindWindow</link>&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a35e3f2b4f9f2848096bfa17db92817e9">EnableBlurBehindWindow</link>;
377 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a141e512b763ef544551f08e626410c52">dwmapi</link>;
378 
379 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a36d30a5f5f7942a50b272fa13058cf96">PFN_SetProcessDpiAwareness</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a4fa016a4cba83a7fae2db0109711283a">SetProcessDpiAwareness_</link>;
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a411247e61a6621babce2d06bb8a434db">PFN_GetDpiForMonitor</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a59a45192e69695be04f830952159a56f">GetDpiForMonitor_</link>;
383 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a5072de2c9defab2b8dcf417f8e7d8fd3">shcore</link>;
384 
385 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a29ba62716a10d518e9853ab9d2472e13">instance</link>;
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1ae84ddc48e418de3da946b1ca744f44af">PFN_RtlVerifyVersionInfo</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a857bc2eb7f09c486f765a480320225b9">RtlVerifyVersionInfo_</link>;
388 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_win32_1a1303e71cb2e0cf8e3a720372fa476024">ntdll</link>;
389 
390 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a407d34356f6555d6cfc3cbdeb5b1bb7a">_GLFWlibraryWin32</link>;
391 
392 <emphasis role="comment">//&#32;Win32-specific&#32;per-monitor&#32;data</emphasis>
393 <emphasis role="comment">//</emphasis>
394 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link>
395 {
396 &#32;&#32;&#32;&#32;HMONITOR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1af03f0045583535ca3c1ef7afedd10124">handle</link>;
397 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;size&#32;matches&#32;the&#32;static&#32;size&#32;of&#32;DISPLAY_DEVICE.DeviceName</emphasis>
398 &#32;&#32;&#32;&#32;WCHAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1a814bec1697760585e671c6470c145cbb">adapterName</link>[32];
399 &#32;&#32;&#32;&#32;WCHAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1a2fbc04bf174238d78e18097b72a9f8b0">displayName</link>[32];
400 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1a16ee8183dc98f80bb5e69adb7ad2b1ff">publicAdapterName</link>[32];
401 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1a4b8db907630e977ba9a65560ed88aefb">publicDisplayName</link>[32];
402 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1aba5c32b2967b3be243c60347ae0d4eda">modesPruned</link>;
403 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_win32_1abaa3e3c1ffea9c1ea001cc65c50006e3">modeChanged</link>;
404 
405 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a2bc910cef485c288b92c1ebae1c33092">_GLFWmonitorWin32</link>;
406 
407 <emphasis role="comment">//&#32;Win32-specific&#32;per-cursor&#32;data</emphasis>
408 <emphasis role="comment">//</emphasis>
409 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link>
410 {
411 &#32;&#32;&#32;&#32;HCURSOR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_win32_1a05b1322d7792b717f9fd46a89c49aa14">handle</link>;
412 
413 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a9fd275bb321a21611f3d07cf610a0bee">_GLFWcursorWin32</link>;
414 
415 <emphasis role="comment">//&#32;Win32-specific&#32;global&#32;timer&#32;data</emphasis>
416 <emphasis role="comment">//</emphasis>
417 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wtimer_win32">_GLFWtimerWin32</link>
418 {
419 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wtimer_win32_1a1b9ded09784789e9028edad23fb96c28">hasPC</link>;
420 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wtimer_win32_1a144e6611866e5aa6121ca28ae751fc2a">frequency</link>;
421 
422 }&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a33f44f0bc6e92ab1af358901a427c61c">_GLFWtimerWin32</link>;
423 
424 <emphasis role="comment">//&#32;Win32-specific&#32;thread&#32;local&#32;storage&#32;data</emphasis>
425 <emphasis role="comment">//</emphasis>
426 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wtls_win32">_GLFWtlsWin32</link>
427 {
428 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wtls_win32_1a402b98065603c2b3325f095363e93464">allocated</link>;
429 &#32;&#32;&#32;&#32;DWORD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wtls_win32_1aa62608add5ed7b4ad7a729cbb2d0295d">index</link>;
430 
431 }&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1adcef9febd574494a6f836b21120ad4be">_GLFWtlsWin32</link>;
432 
433 <emphasis role="comment">//&#32;Win32-specific&#32;mutex&#32;data</emphasis>
434 <emphasis role="comment">//</emphasis>
435 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wmutex_win32">_GLFWmutexWin32</link>
436 {
437 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmutex_win32_1af24d09e156af4a285f5e1b6d82acf3d7">allocated</link>;
438 &#32;&#32;&#32;&#32;CRITICAL_SECTION&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmutex_win32_1a15ec1014241e99ee311d6898c66ab39b">section</link>;
439 
440 }&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1ab5034fc86305639d11cb87844ba33b01">_GLFWmutexWin32</link>;
441 
442 
443 <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a51e8da6667fce5464f07bc810fc780dc">_glfwRegisterWindowClassWin32</link>(<emphasis role="keywordtype">void</emphasis>);
444 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1a85fb6be0a27d7f17a5d90eaec5320627">_glfwUnregisterWindowClassWin32</link>(<emphasis role="keywordtype">void</emphasis>);
445 
446 WCHAR*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1aa60d79ff24866c1e97e06864b6329fb1">_glfwCreateWideStringFromUTF8Win32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source</link>);
447 <emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1abdfc61ba1735c2e63099fa10a2cf53b3">_glfwCreateUTF8FromWideStringWin32</link>(<emphasis role="keyword">const</emphasis>&#32;WCHAR*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source</link>);
448 BOOL&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link>(WORD&#32;major,&#32;WORD&#32;minor,&#32;WORD&#32;sp);
449 BOOL&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link>(WORD&#32;build);
450 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<emphasis role="keywordtype">int</emphasis>&#32;error,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;description);
451 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1afc4eeee5a7d5b62252466d3f6740c48b">_glfwUpdateKeyNamesWin32</link>(<emphasis role="keywordtype">void</emphasis>);
452 
453 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2win32__platform_8h_1abd2b8a425bf5a21a5a1064b1788469fc">_glfwInitTimerWin32</link>(<emphasis role="keywordtype">void</emphasis>);
454 
455 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a345b11644c658a9a94b0eeb4ed4a0618">_glfwPollMonitorsWin32</link>(<emphasis role="keywordtype">void</emphasis>);
456 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a52d8e36bf649dcb15198832d92206ce2">_glfwSetVideoModeWin32</link>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;desired);
457 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1af4b02765bc562c8265503bb97c0cd8e9">_glfwRestoreVideoModeWin32</link>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor);
458 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a3fe7a2258a3ce26e3a8257c3d0ea1ca0">_glfwGetMonitorContentScaleWin32</link>(HMONITOR&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;yscale);
459 
</programlisting></section>
