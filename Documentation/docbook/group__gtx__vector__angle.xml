<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__vector__angle" xml:lang="en-US">
<title>GLM_GTX_vector_angle</title>
<indexterm><primary>GLM_GTX_vector_angle</primary></indexterm>
Collaboration diagram for GLM_GTX_vector_angle:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__vector__angle.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__gtx__vector__angle_1ga2e2917b4cb75ca3d043ac15ff88f14e1">glm::angle</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__gtx__vector__angle_1ga9556a803dce87fe0f42fdabe4ebba1d5">glm::orientedAngle</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__gtx__vector__angle_1ga706fce3d111f485839756a64f5a48553">glm::orientedAngle</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a083de4c8e32ad3d9059245f26be721de">ref</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/vector_angle.hpp&gt; to use the features of this extension.</para>

<para>Compute angle between vectors </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__vector__angle_1ga2e2917b4cb75ca3d043ac15ff88f14e1"/><section>
    <title>angle()</title>
<indexterm><primary>angle</primary><secondary>GLM_GTX_vector_angle</secondary></indexterm>
<indexterm><primary>GLM_GTX_vector_angle</primary><secondary>angle</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::angle (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; x, <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; y)</computeroutput></para>
<para>Returns the absolute angle between two vectors. Parameters need to be normalized. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__vector__angle">GLM_GTX_vector_angle</link> extension. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__vector__angle_1ga9556a803dce87fe0f42fdabe4ebba1d5"/><section>
    <title>orientedAngle()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>orientedAngle</primary><secondary>GLM_GTX_vector_angle</secondary></indexterm>
<indexterm><primary>GLM_GTX_vector_angle</primary><secondary>orientedAngle</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::orientedAngle (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; x, <link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; y)</computeroutput></para>
<para>Returns the oriented angle between two 2d vectors. Parameters need to be normalized. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__vector__angle">GLM_GTX_vector_angle</link> extension.</para>
</formalpara>
<para><link linkend="_todo_1_todo000001">Todo</link> 
<para>epsilon is hard coded to 0.01 </para>
</para></para>

<para><para><link linkend="_todo_1_todo000005">Todo</link> 
<para>epsilon is hard coded to 0.01 </para>
</para></para>

<para><para><link linkend="_todo_1_todo000009">Todo</link> 
<para>epsilon is hard coded to 0.01 </para>
</para></para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__vector__angle_ga9556a803dce87fe0f42fdabe4ebba1d5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__vector__angle_ga9556a803dce87fe0f42fdabe4ebba1d5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__vector__angle_1ga706fce3d111f485839756a64f5a48553"/><section>
    <title>orientedAngle()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>orientedAngle</primary><secondary>GLM_GTX_vector_angle</secondary></indexterm>
<indexterm><primary>GLM_GTX_vector_angle</primary><secondary>orientedAngle</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::orientedAngle (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; x, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; y, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; ref)</computeroutput></para>
<para>Returns the oriented angle between two 3d vectors based from a reference axis. Parameters need to be normalized. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__vector__angle">GLM_GTX_vector_angle</link> extension. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__vector__angle_ga706fce3d111f485839756a64f5a48553_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
