<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____pstl_1_1____serial__backend_1_1____buffer" xml:lang="en-US">
<title>__pstl::__serial_backend::__buffer&lt; _Tp &gt; Class Template Reference</title>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;parallel_backend_serial.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a624d8e39d966d72e5d714f4101b57684">__buffer</link> (std::size_t __n)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a51bbfaa185bff06f34abc115015762bb">operator bool</link> () const</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a0e26542c604597135736e64ef644396e">get</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1ae9459e03588f143fb8c1811bd7391dcf">~__buffer</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a624d8e39d966d72e5d714f4101b57684">__buffer</link> (std::size_t __n)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a51bbfaa185bff06f34abc115015762bb">operator bool</link> () const</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a0e26542c604597135736e64ef644396e">get</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1ae9459e03588f143fb8c1811bd7391dcf">~__buffer</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a624d8e39d966d72e5d714f4101b57684">__buffer</link> (std::size_t __n)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a51bbfaa185bff06f34abc115015762bb">operator bool</link> () const</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1a0e26542c604597135736e64ef644396e">get</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer_1ae9459e03588f143fb8c1811bd7391dcf">~__buffer</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a624d8e39d966d72e5d714f4101b57684"/><section>
    <title>__buffer()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__buffer</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>__buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::__buffer (std::size_t __n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1ae9459e03588f143fb8c1811bd7391dcf"/><section>
    <title>~__buffer()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~__buffer</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>~__buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::~<link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__buffer</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a624d8e39d966d72e5d714f4101b57684"/><section>
    <title>__buffer()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__buffer</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>__buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::__buffer (std::size_t __n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1ae9459e03588f143fb8c1811bd7391dcf"/><section>
    <title>~__buffer()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~__buffer</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>~__buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::~<link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__buffer</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a624d8e39d966d72e5d714f4101b57684"/><section>
    <title>__buffer()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__buffer</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>__buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::__buffer (std::size_t __n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1ae9459e03588f143fb8c1811bd7391dcf"/><section>
    <title>~__buffer()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~__buffer</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>~__buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::~<link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__buffer</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a0e26542c604597135736e64ef644396e"/><section>
    <title>get()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>get</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1afc5e04fa58feb228bb06199ff10caa22">::get</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a0e26542c604597135736e64ef644396e"/><section>
    <title>get()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>get</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1afc5e04fa58feb228bb06199ff10caa22">::get</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a0e26542c604597135736e64ef644396e"/><section>
    <title>get()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>get</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1afc5e04fa58feb228bb06199ff10caa22">::get</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a51bbfaa185bff06f34abc115015762bb"/><section>
    <title>operator bool()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator bool</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>operator bool</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::operator <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a51bbfaa185bff06f34abc115015762bb"/><section>
    <title>operator bool()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator bool</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>operator bool</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::operator <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____serial__backend_1_1____buffer_1a51bbfaa185bff06f34abc115015762bb"/><section>
    <title>operator bool()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator bool</primary><secondary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__serial_backend::__buffer&lt; _Tp &gt;</primary><secondary>operator bool</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer</link>&lt; _Tp &gt;::operator <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/<link linkend="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__serial_8h">parallel_backend_serial.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/<link linkend="_lib_2include_2c_09_09_2pstl_2parallel__backend__serial_8h">parallel_backend_serial.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__serial_8h">parallel_backend_serial.h</link></section>
</section>
