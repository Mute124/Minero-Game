<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2glfw_2src_2win32__window_8c" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/glfw/src/win32_window.c File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/glfw/src/win32_window.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;internal.h&quot;<?linebreak?>#include &lt;limits.h&gt;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &lt;windowsx.h&gt;<?linebreak?>#include &lt;shellapi.h&gt;<?linebreak?></programlisting>Include dependency graph for win32_window.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a011ff055f93aa3972386e813421035a2">_glfwCreateWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> *wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> *ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> *fbconfig)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1aa152206c5c520bd0dece9b837b143fa0">_glfwDestroyWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a86d6e8b4e6609cfeba7691e466b21184">_glfwSetWindowTitleWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, const char *title)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a36bc130cc992e12d40e25a6a48e5a53b">_glfwSetWindowIconWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a11dbd52d555826a65ab903f5967a6c0d">_glfwGetWindowPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a497c96018316ca28c83a6ef2f1461a19">_glfwSetWindowPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int xpos, int ypos)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a658f42d345f10d3ab52613b030d801c6">_glfwSetWindowSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1ada7a6afa85a12d7a6ff3efe78e6abe0c">_glfwSetWindowSizeLimitsWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int minwidth, int minheight, int maxwidth, int maxheight)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1ab5e4af472645ebb89e26d1e9c6366aa4">_glfwSetWindowAspectRatioWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int numer, int denom)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a5f58eba94e456b57b09b2cc1841ce4c8">_glfwGetFramebufferSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a4d10fcc47127623f35696d95b5a14f05">_glfwGetWindowFrameSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int *left, int *top, int *right, int *bottom)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a5c8171151c6daa5a7b1f22f45e1c4827">_glfwGetWindowContentScaleWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a4608d975b87d98c03adbf753b4ff6976">_glfwIconifyWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a7c516bd818882391fdaeabe7a13eba52">_glfwRestoreWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a1cf6741c3f061de6500770ce5116d14d">_glfwMaximizeWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a02bfef52e9e9352b7cf691434d01ec70">_glfwShowWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a41ff01be90f8280a68455451b1d5cd64">_glfwHideWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a072d8e8fc92daf82e56bf4d615d2cda5">_glfwRequestWindowAttentionWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a5e136a8b748e12c555e0c044c337358f">_glfwFocusWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a20e0a994ae4879caedde480b1dddf948">_glfwSetWindowMonitorWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int xpos, int ypos, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>, int refreshRate)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a30f0776629d3e26c0b52d8d5fdbaad42">_glfwWindowFocusedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a9601d27a762503ecfd107701976ec9b3">_glfwWindowIconifiedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1aebd8ef33c223850f1e9b35131acc94eb">_glfwWindowVisibleWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1ac4c06e487a2581f891c6cc26a5fa3fb0">_glfwWindowMaximizedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a92eeede18c35c457dbed437ab7ac106b">_glfwWindowHoveredWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1abb042e44e8f421439e9a4062ce8113e4">_glfwFramebufferTransparentWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1aa9ba9944e5152d29f1aa551f14d75b2d">_glfwSetWindowResizableWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a6274613d79de73fa67d1b6c4aa70c9d3">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a0d35deb7d39352e99fba8fa96013d969">_glfwSetWindowDecoratedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a6274613d79de73fa67d1b6c4aa70c9d3">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a9da5d6290cad503b221e73482b67218e">_glfwSetWindowFloatingWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a6274613d79de73fa67d1b6c4aa70c9d3">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a08fda6580fcceccb5465cdb1fe770d7f">_glfwSetWindowMousePassthroughWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a6274613d79de73fa67d1b6c4aa70c9d3">enabled</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1abfdc4284feacb8b35eb527b81b630731">_glfwGetWindowOpacityWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a9428adda957ce508e3041119d670de0f">_glfwSetWindowOpacityWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, float opacity)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1ad52b5863f16d0498407bbb612ea6f378">_glfwSetRawMouseMotionWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a6274613d79de73fa67d1b6c4aa70c9d3">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a87187d130a267838b8565c44603151e5">_glfwRawMouseMotionSupportedWin32</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a8de69356bacf2073a7d4903d2d6ec741">_glfwPollEventsWin32</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a482c57b8e130d21ad68ddf965f74e1a0">_glfwWaitEventsWin32</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a62c585e2432977fa2b9fa4757a0d4cf9">_glfwWaitEventsTimeoutWin32</link> (double <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1aaef33130746d9bb932ba1d7d7b51dabd">_glfwPostEmptyEventWin32</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a731aa16e1109aa6963a7902af9b1e290">_glfwGetCursorPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, double *xpos, double *ypos)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a7adc955bc72784fdf854cfd6e32ba287">_glfwSetCursorPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, double xpos, double ypos)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a0e6560aa1f1fc5f556543bd1dbc954f3">_glfwSetCursorModeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a2a937fd0664182b809741ab2924fc4fa">_glfwGetScancodeNameWin32</link> (int scancode)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a2083a2b904b8909ef96ebe7e34f373c3">_glfwGetKeyScancodeWin32</link> (int key)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a5adfcba9f6e79cbfa80d919c74f58e28">_glfwCreateCursorWin32</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>, int xhot, int yhot)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a9ed95aac8c2f6809f5400c8af402ffb7">_glfwCreateStandardCursorWin32</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, int shape)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a17e1a4d5ad34e0e6c9bfd31e78460618">_glfwDestroyCursorWin32</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1ab5d21e2433ee1d512ae83b39549e49fc">_glfwSetCursorWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1abf1a0ba92102516bdbc00c164edf5017">_glfwSetClipboardStringWin32</link> (const char *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">string</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a8b7a931c667c0aadc7d20f4a7fe3bda3">_glfwGetClipboardStringWin32</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1afdce1538a8e79a96033a8899db6e09c2">_glfwGetEGLPlatformWin32</link> (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a10fd4d1135ad372aa6f1a964713933ee">EGLint</link> **attribs)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a142f59c1c4c9897efbecad74e02698f1">_glfwGetEGLNativeDisplayWin32</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a6c9791d77eda997cb697a353fc77d065">_glfwGetEGLNativeWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a42b3c1869e809150cfd5c661cf291108">_glfwGetRequiredInstanceExtensionsWin32</link> (char **extensions)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a1494c89bcd62a3c808939a4896d67cd9">_glfwGetPhysicalDevicePresentationSupportWin32</link> (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1ae332c39d7d375053b5c56d340fb8acd9">_glfwCreateWindowSurfaceWin32</link> (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *allocator, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0720952aa1caded45b5bcdce589663a9">surface</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> HWND <link linkend="_lib_2external_2glfw_2src_2win32__window_8c_1a76a9a33652472f1952aeeac740b90113">glfwGetWin32Window</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a5adfcba9f6e79cbfa80d919c74f58e28"/><section>
    <title>_glfwCreateCursorWin32()</title>
<indexterm><primary>_glfwCreateCursorWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwCreateCursorWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwCreateCursorWin32 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * image, int xhot, int yhot)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a5adfcba9f6e79cbfa80d919c74f58e28_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a9ed95aac8c2f6809f5400c8af402ffb7"/><section>
    <title>_glfwCreateStandardCursorWin32()</title>
<indexterm><primary>_glfwCreateStandardCursorWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwCreateStandardCursorWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwCreateStandardCursorWin32 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, int shape)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a9ed95aac8c2f6809f5400c8af402ffb7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a9ed95aac8c2f6809f5400c8af402ffb7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1ae332c39d7d375053b5c56d340fb8acd9"/><section>
    <title>_glfwCreateWindowSurfaceWin32()</title>
<indexterm><primary>_glfwCreateWindowSurfaceWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwCreateWindowSurfaceWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> _glfwCreateWindowSurfaceWin32 (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> * allocator, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> * surface)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ae332c39d7d375053b5c56d340fb8acd9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ae332c39d7d375053b5c56d340fb8acd9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a011ff055f93aa3972386e813421035a2"/><section>
    <title>_glfwCreateWindowWin32()</title>
<indexterm><primary>_glfwCreateWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwCreateWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwCreateWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> * wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> * ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> * fbconfig)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a011ff055f93aa3972386e813421035a2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a011ff055f93aa3972386e813421035a2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a17e1a4d5ad34e0e6c9bfd31e78460618"/><section>
    <title>_glfwDestroyCursorWin32()</title>
<indexterm><primary>_glfwDestroyCursorWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwDestroyCursorWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwDestroyCursorWin32 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a17e1a4d5ad34e0e6c9bfd31e78460618_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1aa152206c5c520bd0dece9b837b143fa0"/><section>
    <title>_glfwDestroyWindowWin32()</title>
<indexterm><primary>_glfwDestroyWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwDestroyWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwDestroyWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_aa152206c5c520bd0dece9b837b143fa0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a5e136a8b748e12c555e0c044c337358f"/><section>
    <title>_glfwFocusWindowWin32()</title>
<indexterm><primary>_glfwFocusWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwFocusWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwFocusWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a5e136a8b748e12c555e0c044c337358f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1abb042e44e8f421439e9a4062ce8113e4"/><section>
    <title>_glfwFramebufferTransparentWin32()</title>
<indexterm><primary>_glfwFramebufferTransparentWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwFramebufferTransparentWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwFramebufferTransparentWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_abb042e44e8f421439e9a4062ce8113e4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a8b7a931c667c0aadc7d20f4a7fe3bda3"/><section>
    <title>_glfwGetClipboardStringWin32()</title>
<indexterm><primary>_glfwGetClipboardStringWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetClipboardStringWin32</secondary></indexterm>
<para><computeroutput>const char * _glfwGetClipboardStringWin32 (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a8b7a931c667c0aadc7d20f4a7fe3bda3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a8b7a931c667c0aadc7d20f4a7fe3bda3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a731aa16e1109aa6963a7902af9b1e290"/><section>
    <title>_glfwGetCursorPosWin32()</title>
<indexterm><primary>_glfwGetCursorPosWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetCursorPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetCursorPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double * xpos, double * ypos)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a731aa16e1109aa6963a7902af9b1e290_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a142f59c1c4c9897efbecad74e02698f1"/><section>
    <title>_glfwGetEGLNativeDisplayWin32()</title>
<indexterm><primary>_glfwGetEGLNativeDisplayWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetEGLNativeDisplayWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> _glfwGetEGLNativeDisplayWin32 (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a142f59c1c4c9897efbecad74e02698f1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a6c9791d77eda997cb697a353fc77d065"/><section>
    <title>_glfwGetEGLNativeWindowWin32()</title>
<indexterm><primary>_glfwGetEGLNativeWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetEGLNativeWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> _glfwGetEGLNativeWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a6c9791d77eda997cb697a353fc77d065_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1afdce1538a8e79a96033a8899db6e09c2"/><section>
    <title>_glfwGetEGLPlatformWin32()</title>
<indexterm><primary>_glfwGetEGLPlatformWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetEGLPlatformWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> _glfwGetEGLPlatformWin32 (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a10fd4d1135ad372aa6f1a964713933ee">EGLint</link> ** attribs)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_afdce1538a8e79a96033a8899db6e09c2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_afdce1538a8e79a96033a8899db6e09c2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a5f58eba94e456b57b09b2cc1841ce4c8"/><section>
    <title>_glfwGetFramebufferSizeWin32()</title>
<indexterm><primary>_glfwGetFramebufferSizeWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetFramebufferSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetFramebufferSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a5f58eba94e456b57b09b2cc1841ce4c8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a5f58eba94e456b57b09b2cc1841ce4c8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a2083a2b904b8909ef96ebe7e34f373c3"/><section>
    <title>_glfwGetKeyScancodeWin32()</title>
<indexterm><primary>_glfwGetKeyScancodeWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetKeyScancodeWin32</secondary></indexterm>
<para><computeroutput>int _glfwGetKeyScancodeWin32 (int key)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a2083a2b904b8909ef96ebe7e34f373c3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a1494c89bcd62a3c808939a4896d67cd9"/><section>
    <title>_glfwGetPhysicalDevicePresentationSupportWin32()</title>
<indexterm><primary>_glfwGetPhysicalDevicePresentationSupportWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetPhysicalDevicePresentationSupportWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwGetPhysicalDevicePresentationSupportWin32 (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a1494c89bcd62a3c808939a4896d67cd9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a1494c89bcd62a3c808939a4896d67cd9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a42b3c1869e809150cfd5c661cf291108"/><section>
    <title>_glfwGetRequiredInstanceExtensionsWin32()</title>
<indexterm><primary>_glfwGetRequiredInstanceExtensionsWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetRequiredInstanceExtensionsWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetRequiredInstanceExtensionsWin32 (char ** extensions)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a42b3c1869e809150cfd5c661cf291108_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a2a937fd0664182b809741ab2924fc4fa"/><section>
    <title>_glfwGetScancodeNameWin32()</title>
<indexterm><primary>_glfwGetScancodeNameWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetScancodeNameWin32</secondary></indexterm>
<para><computeroutput>const char * _glfwGetScancodeNameWin32 (int scancode)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a2a937fd0664182b809741ab2924fc4fa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a2a937fd0664182b809741ab2924fc4fa_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a5c8171151c6daa5a7b1f22f45e1c4827"/><section>
    <title>_glfwGetWindowContentScaleWin32()</title>
<indexterm><primary>_glfwGetWindowContentScaleWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetWindowContentScaleWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetWindowContentScaleWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float * xscale, float * yscale)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a5c8171151c6daa5a7b1f22f45e1c4827_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a5c8171151c6daa5a7b1f22f45e1c4827_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a4d10fcc47127623f35696d95b5a14f05"/><section>
    <title>_glfwGetWindowFrameSizeWin32()</title>
<indexterm><primary>_glfwGetWindowFrameSizeWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetWindowFrameSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetWindowFrameSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * left, int * top, int * right, int * bottom)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a4d10fcc47127623f35696d95b5a14f05_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a4d10fcc47127623f35696d95b5a14f05_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1abfdc4284feacb8b35eb527b81b630731"/><section>
    <title>_glfwGetWindowOpacityWin32()</title>
<indexterm><primary>_glfwGetWindowOpacityWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetWindowOpacityWin32</secondary></indexterm>
<para><computeroutput>float _glfwGetWindowOpacityWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_abfdc4284feacb8b35eb527b81b630731_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a11dbd52d555826a65ab903f5967a6c0d"/><section>
    <title>_glfwGetWindowPosWin32()</title>
<indexterm><primary>_glfwGetWindowPosWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetWindowPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetWindowPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * xpos, int * ypos)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a11dbd52d555826a65ab903f5967a6c0d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1aa7047fda835205edd1f16fe265829654"/><section>
    <title>_glfwGetWindowSizeWin32()</title>
<indexterm><primary>_glfwGetWindowSizeWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwGetWindowSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwGetWindowSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_aa7047fda835205edd1f16fe265829654_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a41ff01be90f8280a68455451b1d5cd64"/><section>
    <title>_glfwHideWindowWin32()</title>
<indexterm><primary>_glfwHideWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwHideWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwHideWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a41ff01be90f8280a68455451b1d5cd64_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a4608d975b87d98c03adbf753b4ff6976"/><section>
    <title>_glfwIconifyWindowWin32()</title>
<indexterm><primary>_glfwIconifyWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwIconifyWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwIconifyWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a4608d975b87d98c03adbf753b4ff6976_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a1cf6741c3f061de6500770ce5116d14d"/><section>
    <title>_glfwMaximizeWindowWin32()</title>
<indexterm><primary>_glfwMaximizeWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwMaximizeWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwMaximizeWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a1cf6741c3f061de6500770ce5116d14d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a8de69356bacf2073a7d4903d2d6ec741"/><section>
    <title>_glfwPollEventsWin32()</title>
<indexterm><primary>_glfwPollEventsWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwPollEventsWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwPollEventsWin32 (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a8de69356bacf2073a7d4903d2d6ec741_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a8de69356bacf2073a7d4903d2d6ec741_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1aaef33130746d9bb932ba1d7d7b51dabd"/><section>
    <title>_glfwPostEmptyEventWin32()</title>
<indexterm><primary>_glfwPostEmptyEventWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwPostEmptyEventWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwPostEmptyEventWin32 (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_aaef33130746d9bb932ba1d7d7b51dabd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a87187d130a267838b8565c44603151e5"/><section>
    <title>_glfwRawMouseMotionSupportedWin32()</title>
<indexterm><primary>_glfwRawMouseMotionSupportedWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwRawMouseMotionSupportedWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwRawMouseMotionSupportedWin32 (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a87187d130a267838b8565c44603151e5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a072d8e8fc92daf82e56bf4d615d2cda5"/><section>
    <title>_glfwRequestWindowAttentionWin32()</title>
<indexterm><primary>_glfwRequestWindowAttentionWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwRequestWindowAttentionWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwRequestWindowAttentionWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a072d8e8fc92daf82e56bf4d615d2cda5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a7c516bd818882391fdaeabe7a13eba52"/><section>
    <title>_glfwRestoreWindowWin32()</title>
<indexterm><primary>_glfwRestoreWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwRestoreWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwRestoreWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a7c516bd818882391fdaeabe7a13eba52_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1abf1a0ba92102516bdbc00c164edf5017"/><section>
    <title>_glfwSetClipboardStringWin32()</title>
<indexterm><primary>_glfwSetClipboardStringWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetClipboardStringWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetClipboardStringWin32 (const char * string)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_abf1a0ba92102516bdbc00c164edf5017_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_abf1a0ba92102516bdbc00c164edf5017_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a0e6560aa1f1fc5f556543bd1dbc954f3"/><section>
    <title>_glfwSetCursorModeWin32()</title>
<indexterm><primary>_glfwSetCursorModeWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetCursorModeWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetCursorModeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int mode)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a0e6560aa1f1fc5f556543bd1dbc954f3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a0e6560aa1f1fc5f556543bd1dbc954f3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a7adc955bc72784fdf854cfd6e32ba287"/><section>
    <title>_glfwSetCursorPosWin32()</title>
<indexterm><primary>_glfwSetCursorPosWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetCursorPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetCursorPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double xpos, double ypos)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a7adc955bc72784fdf854cfd6e32ba287_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1ab5d21e2433ee1d512ae83b39549e49fc"/><section>
    <title>_glfwSetCursorWin32()</title>
<indexterm><primary>_glfwSetCursorWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetCursorWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetCursorWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ab5d21e2433ee1d512ae83b39549e49fc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1ad52b5863f16d0498407bbb612ea6f378"/><section>
    <title>_glfwSetRawMouseMotionWin32()</title>
<indexterm><primary>_glfwSetRawMouseMotionWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetRawMouseMotionWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetRawMouseMotionWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ad52b5863f16d0498407bbb612ea6f378_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1ab5e4af472645ebb89e26d1e9c6366aa4"/><section>
    <title>_glfwSetWindowAspectRatioWin32()</title>
<indexterm><primary>_glfwSetWindowAspectRatioWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowAspectRatioWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowAspectRatioWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int numer, int denom)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ab5e4af472645ebb89e26d1e9c6366aa4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a0d35deb7d39352e99fba8fa96013d969"/><section>
    <title>_glfwSetWindowDecoratedWin32()</title>
<indexterm><primary>_glfwSetWindowDecoratedWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowDecoratedWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowDecoratedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a0d35deb7d39352e99fba8fa96013d969_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a9da5d6290cad503b221e73482b67218e"/><section>
    <title>_glfwSetWindowFloatingWin32()</title>
<indexterm><primary>_glfwSetWindowFloatingWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowFloatingWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowFloatingWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a9da5d6290cad503b221e73482b67218e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a36bc130cc992e12d40e25a6a48e5a53b"/><section>
    <title>_glfwSetWindowIconWin32()</title>
<indexterm><primary>_glfwSetWindowIconWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowIconWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowIconWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int count, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * images)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a36bc130cc992e12d40e25a6a48e5a53b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a20e0a994ae4879caedde480b1dddf948"/><section>
    <title>_glfwSetWindowMonitorWin32()</title>
<indexterm><primary>_glfwSetWindowMonitorWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowMonitorWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowMonitorWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int xpos, int ypos, int width, int height, int refreshRate)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a20e0a994ae4879caedde480b1dddf948_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a20e0a994ae4879caedde480b1dddf948_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a08fda6580fcceccb5465cdb1fe770d7f"/><section>
    <title>_glfwSetWindowMousePassthroughWin32()</title>
<indexterm><primary>_glfwSetWindowMousePassthroughWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowMousePassthroughWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowMousePassthroughWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a08fda6580fcceccb5465cdb1fe770d7f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a9428adda957ce508e3041119d670de0f"/><section>
    <title>_glfwSetWindowOpacityWin32()</title>
<indexterm><primary>_glfwSetWindowOpacityWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowOpacityWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowOpacityWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float opacity)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a9428adda957ce508e3041119d670de0f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a497c96018316ca28c83a6ef2f1461a19"/><section>
    <title>_glfwSetWindowPosWin32()</title>
<indexterm><primary>_glfwSetWindowPosWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int xpos, int ypos)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a497c96018316ca28c83a6ef2f1461a19_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1aa9ba9944e5152d29f1aa551f14d75b2d"/><section>
    <title>_glfwSetWindowResizableWin32()</title>
<indexterm><primary>_glfwSetWindowResizableWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowResizableWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowResizableWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_aa9ba9944e5152d29f1aa551f14d75b2d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1ada7a6afa85a12d7a6ff3efe78e6abe0c"/><section>
    <title>_glfwSetWindowSizeLimitsWin32()</title>
<indexterm><primary>_glfwSetWindowSizeLimitsWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowSizeLimitsWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowSizeLimitsWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int minwidth, int minheight, int maxwidth, int maxheight)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ada7a6afa85a12d7a6ff3efe78e6abe0c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a658f42d345f10d3ab52613b030d801c6"/><section>
    <title>_glfwSetWindowSizeWin32()</title>
<indexterm><primary>_glfwSetWindowSizeWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a658f42d345f10d3ab52613b030d801c6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a86d6e8b4e6609cfeba7691e466b21184"/><section>
    <title>_glfwSetWindowTitleWin32()</title>
<indexterm><primary>_glfwSetWindowTitleWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwSetWindowTitleWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSetWindowTitleWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const char * title)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a86d6e8b4e6609cfeba7691e466b21184_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a86d6e8b4e6609cfeba7691e466b21184_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a02bfef52e9e9352b7cf691434d01ec70"/><section>
    <title>_glfwShowWindowWin32()</title>
<indexterm><primary>_glfwShowWindowWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwShowWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwShowWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a02bfef52e9e9352b7cf691434d01ec70_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a62c585e2432977fa2b9fa4757a0d4cf9"/><section>
    <title>_glfwWaitEventsTimeoutWin32()</title>
<indexterm><primary>_glfwWaitEventsTimeoutWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWaitEventsTimeoutWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwWaitEventsTimeoutWin32 (double timeout)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a62c585e2432977fa2b9fa4757a0d4cf9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a62c585e2432977fa2b9fa4757a0d4cf9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a482c57b8e130d21ad68ddf965f74e1a0"/><section>
    <title>_glfwWaitEventsWin32()</title>
<indexterm><primary>_glfwWaitEventsWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWaitEventsWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwWaitEventsWin32 (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a482c57b8e130d21ad68ddf965f74e1a0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a482c57b8e130d21ad68ddf965f74e1a0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a30f0776629d3e26c0b52d8d5fdbaad42"/><section>
    <title>_glfwWindowFocusedWin32()</title>
<indexterm><primary>_glfwWindowFocusedWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWindowFocusedWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwWindowFocusedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a30f0776629d3e26c0b52d8d5fdbaad42_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a92eeede18c35c457dbed437ab7ac106b"/><section>
    <title>_glfwWindowHoveredWin32()</title>
<indexterm><primary>_glfwWindowHoveredWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWindowHoveredWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwWindowHoveredWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a92eeede18c35c457dbed437ab7ac106b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a9601d27a762503ecfd107701976ec9b3"/><section>
    <title>_glfwWindowIconifiedWin32()</title>
<indexterm><primary>_glfwWindowIconifiedWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWindowIconifiedWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwWindowIconifiedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a9601d27a762503ecfd107701976ec9b3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1ac4c06e487a2581f891c6cc26a5fa3fb0"/><section>
    <title>_glfwWindowMaximizedWin32()</title>
<indexterm><primary>_glfwWindowMaximizedWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWindowMaximizedWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwWindowMaximizedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_ac4c06e487a2581f891c6cc26a5fa3fb0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1aebd8ef33c223850f1e9b35131acc94eb"/><section>
    <title>_glfwWindowVisibleWin32()</title>
<indexterm><primary>_glfwWindowVisibleWin32</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>_glfwWindowVisibleWin32</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwWindowVisibleWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_aebd8ef33c223850f1e9b35131acc94eb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2win32__window_8c_1a76a9a33652472f1952aeeac740b90113"/><section>
    <title>glfwGetWin32Window()</title>
<indexterm><primary>glfwGetWin32Window</primary><secondary>win32_window.c</secondary></indexterm>
<indexterm><primary>win32_window.c</primary><secondary>glfwGetWin32Window</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> HWND glfwGetWin32Window (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * handle)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2win32__window_8c_a76a9a33652472f1952aeeac740b90113_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
