<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2ssp_2stdio_8h_source" xml:lang="en-US">
<title>stdio.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/ssp/stdio.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Checking&#32;macros&#32;for&#32;stdio&#32;functions.</emphasis>
2 <emphasis role="comment">&#32;&#32;&#32;Copyright&#32;(C)&#32;2004-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
3 <emphasis role="comment"></emphasis>
4 <emphasis role="comment">This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
5 <emphasis role="comment"></emphasis>
6 <emphasis role="comment">GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under</emphasis>
7 <emphasis role="comment">the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free</emphasis>
8 <emphasis role="comment">Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">version.</emphasis>
10 <emphasis role="comment"></emphasis>
11 <emphasis role="comment">In&#32;addition&#32;to&#32;the&#32;permissions&#32;in&#32;the&#32;GNU&#32;General&#32;Public&#32;License,&#32;the</emphasis>
12 <emphasis role="comment">Free&#32;Software&#32;Foundation&#32;gives&#32;you&#32;unlimited&#32;permission&#32;to&#32;link&#32;the</emphasis>
13 <emphasis role="comment">compiled&#32;version&#32;of&#32;this&#32;file&#32;into&#32;combinations&#32;with&#32;other&#32;programs,</emphasis>
14 <emphasis role="comment">and&#32;to&#32;distribute&#32;those&#32;combinations&#32;without&#32;any&#32;restriction&#32;coming</emphasis>
15 <emphasis role="comment">from&#32;the&#32;use&#32;of&#32;this&#32;file.&#32;&#32;(The&#32;General&#32;Public&#32;License&#32;restrictions</emphasis>
16 <emphasis role="comment">do&#32;apply&#32;in&#32;other&#32;respects;&#32;for&#32;example,&#32;they&#32;cover&#32;modification&#32;of</emphasis>
17 <emphasis role="comment">the&#32;file,&#32;and&#32;distribution&#32;when&#32;not&#32;linked&#32;into&#32;a&#32;combine</emphasis>
18 <emphasis role="comment">executable.)</emphasis>
19 <emphasis role="comment"></emphasis>
20 <emphasis role="comment">GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but&#32;WITHOUT&#32;ANY</emphasis>
21 <emphasis role="comment">WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of&#32;MERCHANTABILITY&#32;or</emphasis>
22 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU&#32;General&#32;Public&#32;License</emphasis>
23 <emphasis role="comment">for&#32;more&#32;details.</emphasis>
24 <emphasis role="comment"></emphasis>
25 <emphasis role="comment">Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
26 <emphasis role="comment">permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
27 <emphasis role="comment">3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
28 <emphasis role="comment"></emphasis>
29 <emphasis role="comment">You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
30 <emphasis role="comment">a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
31 <emphasis role="comment">see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
32 <emphasis role="comment">&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
33 
34 
35 <emphasis role="preprocessor">#ifndef&#32;_SSP_STDIO_H</emphasis>
36 <emphasis role="preprocessor">#define&#32;_SSP_STDIO_H&#32;1</emphasis>
37 
38 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__old_2_classes_2lib_2include_2ssp_2ssp_8h">ssp.h</link>&gt;</emphasis>
39 <emphasis role="preprocessor">#include_next&#32;&lt;stdio.h&gt;</emphasis>
40 
41 <emphasis role="preprocessor">#if&#32;__SSP_FORTIFY_LEVEL&#32;&gt;&#32;0</emphasis>
42 
43 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
44 
45 <emphasis role="preprocessor">#undef&#32;sprintf</emphasis>
46 <emphasis role="preprocessor">#undef&#32;vsprintf</emphasis>
47 <emphasis role="preprocessor">#undef&#32;snprintf</emphasis>
48 <emphasis role="preprocessor">#undef&#32;vsnprintf</emphasis>
49 <emphasis role="preprocessor">#undef&#32;gets</emphasis>
50 <emphasis role="preprocessor">#undef&#32;fgets</emphasis>
51 
52 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__sprintf_chk&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__flag,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__slen,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__const&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__format,&#32;...);
54 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__vsprintf_chk&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__flag,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__slen,
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__const&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__format,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>&#32;__ap);
57 
58 <emphasis role="preprocessor">#define&#32;sprintf(str,&#32;...)&#32;\</emphasis>
59 <emphasis role="preprocessor">&#32;&#32;__builtin___sprintf_chk&#32;(str,&#32;0,&#32;__ssp_bos&#32;(str),&#32;\</emphasis>
60 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__VA_ARGS__)</emphasis>
61 <emphasis role="preprocessor">#define&#32;vsprintf(str,&#32;fmt,&#32;ap)&#32;\</emphasis>
62 <emphasis role="preprocessor">&#32;&#32;__builtin___vsprintf_chk&#32;(str,&#32;0,&#32;__ssp_bos&#32;(str),&#32;fmt,&#32;ap)</emphasis>
63 
64 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__snprintf_chk&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__s,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__flag,
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__slen,&#32;__const&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__format,
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;...);
67 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__vsnprintf_chk&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__s,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__flag,
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__slen,&#32;__const&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__format,
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>&#32;__ap);
70 
71 <emphasis role="preprocessor">#define&#32;snprintf(str,&#32;len,&#32;...)&#32;\</emphasis>
72 <emphasis role="preprocessor">&#32;&#32;__builtin___snprintf_chk&#32;(str,&#32;len,&#32;0,&#32;__ssp_bos&#32;(str),&#32;__VA_ARGS__)</emphasis>
73 <emphasis role="preprocessor">#define&#32;vsnprintf(str,&#32;len,&#32;fmt,&#32;ap)&#32;\</emphasis>
74 <emphasis role="preprocessor">&#32;&#32;__builtin___vsnprintf_chk&#32;(str,&#32;len,&#32;0,&#32;__ssp_bos&#32;(str),&#32;fmt,&#32;ap)</emphasis>
75 
76 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__gets_chk&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__str,&#32;<emphasis role="keywordtype">size_t</emphasis>);
77 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__SSP_REDIRECT&#32;(__gets_alias,&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__str),&#32;gets);
78 
79 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__always_inline__))&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
80 gets&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__str)
81 {
82 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__ssp_bos&#32;(__str)&#32;!=&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;-1)
83 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gets_chk&#32;(__str,&#32;__ssp_bos&#32;(__str));
84 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gets_alias&#32;(__str);
85 }
86 
87 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*__SSP_REDIRECT&#32;(__fgets_alias,
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FILE&#32;*__restrict__&#32;__stream),&#32;fgets);
90 
91 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__always_inline__))&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
92 fgets&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*__restrict__&#32;__s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n,&#32;FILE&#32;*__restrict__&#32;__stream)
93 {
94 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__ssp_bos&#32;(__s)&#32;!=&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;-1&#32;&amp;&amp;&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;__n&#32;&gt;&#32;__ssp_bos&#32;(__s))
95 &#32;&#32;&#32;&#32;__chk_fail&#32;();
96 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__fgets_alias&#32;(__s,&#32;__n,&#32;__stream);
97 }
98 
99 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__SSP_FORTIFY_LEVEL&#32;&gt;&#32;0&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
100 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_SSP_STDIO_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
