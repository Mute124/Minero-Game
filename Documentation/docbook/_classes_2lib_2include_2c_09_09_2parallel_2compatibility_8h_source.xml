<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2parallel_2compatibility_8h_source" xml:lang="en-US">
<title>compatibility.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/compatibility.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
32 <emphasis role="comment">//&#32;Written&#32;by&#32;Felix&#32;Putze.</emphasis>
33 
34 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_COMPATIBILITY_H</emphasis>
35 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_COMPATIBILITY_H&#32;1</emphasis>
36 
37 <emphasis role="preprocessor">#include&#32;&lt;parallel/types.h&gt;</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;parallel/base.h&gt;</emphasis>
39 
40 <emphasis role="preprocessor">#if&#32;!defined(_WIN32)&#32;||&#32;defined&#32;(__CYGWIN__)</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;sched.h&gt;</emphasis>
42 <emphasis role="preprocessor">#endif</emphasis>
43 
44 <emphasis role="preprocessor">#ifdef&#32;__MINGW32__</emphasis>
45 <emphasis role="comment">//&#32;Including&#32;&lt;windows.h&gt;&#32;will&#32;drag&#32;in&#32;all&#32;the&#32;windows32&#32;names.&#32;&#32;Since</emphasis>
46 <emphasis role="comment">//&#32;that&#32;can&#32;cause&#32;user&#32;code&#32;portability&#32;problems,&#32;we&#32;just&#32;declare&#32;the</emphasis>
47 <emphasis role="comment">//&#32;one&#32;needed&#32;function&#32;here.</emphasis>
48 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>
49 __attribute((dllimport))&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((stdcall))&#32;Sleep&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>);
50 <emphasis role="preprocessor">#endif</emphasis>
51 
52 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
53 {
54 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
55 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
56 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4096ee6025f5c32e1524971c2eae0407">__add_omp</link>(<emphasis role="keyword">volatile</emphasis>&#32;_Tp*&#32;__ptr,&#32;_Tp&#32;__addend)
57 &#32;&#32;&#32;&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;__res;
59 <emphasis role="preprocessor">#pragma&#32;omp&#32;critical</emphasis>
60 &#32;&#32;&#32;&#32;&#32;&#32;{
61 &#32;&#32;&#32;&#32;__res&#32;=&#32;*__ptr;
62 &#32;&#32;&#32;&#32;*(__ptr)&#32;+=&#32;__addend;
63 &#32;&#32;&#32;&#32;&#32;&#32;}
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__res;
65 &#32;&#32;&#32;&#32;}
66 
72 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
74 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(<emphasis role="keyword">volatile</emphasis>&#32;_Tp*&#32;__ptr,&#32;_Tp&#32;__addend)
75 &#32;&#32;&#32;&#32;{
76 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__atomic_always_lock_free(<emphasis role="keyword">sizeof</emphasis>(_Tp),&#32;__ptr))
77 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__atomic_fetch_add(__ptr,&#32;__addend,&#32;__ATOMIC_ACQ_REL);
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a4096ee6025f5c32e1524971c2eae0407">__add_omp</link>(__ptr,&#32;__addend);
79 &#32;&#32;&#32;&#32;}
80 
81 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
83 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a9209142c30164030551903748dd4206a">__cas_omp</link>(<emphasis role="keyword">volatile</emphasis>&#32;_Tp*&#32;__ptr,&#32;_Tp&#32;__comparand,&#32;_Tp&#32;__replacement)
84 &#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__res&#32;=&#32;<emphasis role="keyword">false</emphasis>;
86 <emphasis role="preprocessor">#pragma&#32;omp&#32;critical</emphasis>
87 &#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*__ptr&#32;==&#32;__comparand)
89 &#32;&#32;&#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*__ptr&#32;=&#32;__replacement;
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__res&#32;=&#32;<emphasis role="keyword">true</emphasis>;
92 &#32;&#32;&#32;&#32;&#32;&#32;}
93 &#32;&#32;&#32;&#32;&#32;&#32;}
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__res;
95 &#32;&#32;&#32;&#32;}
96 
106 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
107 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
108 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1accd4441e0f846fee44966195a91e9e68">__compare_and_swap</link>(<emphasis role="keyword">volatile</emphasis>&#32;_Tp*&#32;__ptr,&#32;_Tp&#32;__comparand,&#32;_Tp&#32;__replacement)
109 &#32;&#32;&#32;&#32;{
110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__atomic_always_lock_free(<emphasis role="keyword">sizeof</emphasis>(_Tp),&#32;__ptr))
111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__atomic_compare_exchange_n(__ptr,&#32;&amp;__comparand,&#32;__replacement,
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,&#32;__ATOMIC_ACQ_REL,
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ATOMIC_RELAXED);
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a9209142c30164030551903748dd4206a">__cas_omp</link>(__ptr,&#32;__comparand,&#32;__replacement);
115 &#32;&#32;&#32;&#32;}
116 
120 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
121 &#32;&#32;<link linkend="_namespace____gnu__parallel_1aaa76236af73146ae89f726921bc3f2cb">__yield</link>()
122 &#32;&#32;{
123 <emphasis role="preprocessor">#if&#32;defined&#32;(_WIN32)&#32;&amp;&amp;&#32;!defined&#32;(__CYGWIN__)</emphasis>
124 &#32;&#32;&#32;&#32;Sleep(0);
125 <emphasis role="preprocessor">#else</emphasis>
126 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2pthread_8h_1a6c8d40dba19ab44315a73fa45579e07c">sched_yield</link>();
127 <emphasis role="preprocessor">#endif</emphasis>
128 &#32;&#32;}
129 }&#32;<emphasis role="comment">//&#32;end&#32;namespace</emphasis>
130 
131 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_COMPATIBILITY_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
