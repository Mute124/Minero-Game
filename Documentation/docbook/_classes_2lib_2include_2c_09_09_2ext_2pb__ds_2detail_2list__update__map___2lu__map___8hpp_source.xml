<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2list__update__map___2lu__map___8hpp_source" xml:lang="en-US">
<title>lu_map_.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/list_update_map_/lu_map_.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
42 <emphasis role="preprocessor">#include&#32;&lt;iterator&gt;</emphasis>
43 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/cond_dealtor.hpp&gt;</emphasis>
44 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/types_traits.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/exception.hpp&gt;</emphasis>
48 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
49 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/debug_map_base.hpp&gt;</emphasis>
50 <emphasis role="preprocessor">#endif</emphasis>
51 <emphasis role="preprocessor">#ifdef&#32;PB_DS_LU_MAP_TRACE_</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
53 <emphasis role="preprocessor">#endif</emphasis>
54 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
55 
56 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
57 {
58 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
59 &#32;&#32;{
60 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
61 <emphasis role="preprocessor">#define&#32;PB_DS_LU_NAME&#32;lu_map</emphasis>
62 <emphasis role="preprocessor">#endif</emphasis>
63 
64 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
65 <emphasis role="preprocessor">#define&#32;PB_DS_LU_NAME&#32;lu_set</emphasis>
66 <emphasis role="preprocessor">#endif</emphasis>
67 
68 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
69 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Key,&#32;typename&#32;Mapped,&#32;typename&#32;Eq_Fn,&#32;\</emphasis>
70 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc,&#32;typename&#32;Update_Policy&gt;</emphasis>
71 
72 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
73 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;PB_DS_LU_NAME&lt;Key,&#32;Mapped,&#32;Eq_Fn,&#32;_Alloc,&#32;Update_Policy&gt;</emphasis>
74 
75 <emphasis role="preprocessor">#define&#32;PB_DS_LU_TRAITS_BASE&#32;\</emphasis>
76 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;types_traits&lt;Key,&#32;Mapped,&#32;_Alloc,&#32;false&gt;</emphasis>
77 
78 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
79 <emphasis role="preprocessor">#define&#32;PB_DS_DEBUG_MAP_BASE_C_DEC&#32;\</emphasis>
80 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;debug_map_base&lt;Key,&#32;Eq_Fn,&#32;\</emphasis>
81 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;rebind_traits&lt;_Alloc,&#32;Key&gt;::const_reference&gt;</emphasis>
82 <emphasis role="preprocessor">#endif</emphasis>
83 
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped,
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Eq_Fn,
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Update_Policy&gt;
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e">PB_DS_LU_NAME</link>&#32;:
92 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;PB_DS_DEBUG_MAP_BASE_C_DEC,
94 <emphasis role="preprocessor">#endif</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2list__update__map___2lu__map___8hpp_1ad246e9b0cedf5a042f17ec7f2d205187">PB_DS_LU_TRAITS_BASE</link>
96 &#32;&#32;&#32;&#32;{
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2list__update__map___2lu__map___8hpp_1ad246e9b0cedf5a042f17ec7f2d205187">PB_DS_LU_TRAITS_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base;
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>entry
101 &#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1lu__map__entry__metadata__base">lu_map_entry_metadata_base</link>&lt;typename&#32;Update_Policy::metadata_type&gt;
102 &#32;&#32;&#32;&#32;&#32;&#32;{
103 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::value_type&#32;m_value;
104 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, entry&gt;::pointer</link>&#32;m_p_next;
105 &#32;&#32;&#32;&#32;&#32;&#32;};
106 
107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, entry&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">entry_alloc_traits</link>;
108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">entry_alloc_traits::allocator_type</link>&#32;entry_allocator;
109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_alloc_traits::pointer&#32;&#32;&#32;&#32;entry_pointer;
110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_alloc_traits::const_pointer&#32;&#32;const_entry_pointer;
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_alloc_traits::reference&#32;&#32;&#32;&#32;&#32;&#32;entry_reference;
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_alloc_traits::const_reference&#32;const_entry_reference;
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, entry_pointer&gt;</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">entry_pointer_alloc_traits</link>;
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">entry_pointer_alloc_traits::allocator_type</link>&#32;entry_pointer_allocator;
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_pointer_alloc_traits::pointer&#32;entry_pointer_array;
117 
118 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::value_type&#32;value_type_;
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::pointer&#32;pointer_;
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_pointer&#32;const_pointer_;
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::reference&#32;reference_;
122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_reference&#32;const_reference_;
123 
124 <emphasis role="preprocessor">#define&#32;PB_DS_GEN_POS&#32;entry_pointer</emphasis>
125 
126 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp&gt;</emphasis>
127 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/point_iterator.hpp&gt;</emphasis>
128 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/const_iterator.hpp&gt;</emphasis>
129 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/iterator.hpp&gt;</emphasis>
130 
131 <emphasis role="preprocessor">#undef&#32;PB_DS_GEN_POS</emphasis>
132 
133 
134 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;PB_DS_DEBUG_MAP_BASE_C_DEC&#32;debug_base;
136 <emphasis role="preprocessor">#endif</emphasis>
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;cond_dealtor&lt;entry,&#32;_Alloc&gt;&#32;cond_dealtor_t;
139 
140 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ae6265b2cd8027068d166e9264c45f086">allocator_type</link>;
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aca5756e3009182a270edc76b0851bcf1">size_type</link>;
143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a8770ff73088833723c87d767d7ae53f9">difference_type</link>;
144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eq_Fn&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ab44bfa1f2e576c6a5b311f5e9bdda6e9">eq_fn</link>;
145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Update_Policy&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a89a36d129f1400ea9a3598c5b6e47eb9">update_policy</link>;
146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Update_Policy::metadata_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1afe3bc2bea224056c321c1682b74ac3cb">update_metadata</link>;
147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a68301e7f05eddc4f7bc23811abdce61c">key_type</link>;
148 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a0450257057059152cafe3a643646a1c7">key_pointer</link>;
149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ad21bac8847c4c41cd3960de886abeb54">key_const_pointer</link>;
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a72c0ea2e12ec98e6fbb7600b5f1b7187">key_reference</link>;
151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a46a10654e758f820b59a017d6a391adf">key_const_reference</link>;
152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a0a244c94718a9cf8a239b582d69b0250">mapped_type</link>;
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a2e81e52052a3b3dd72543d2e45e6b0a6">mapped_pointer</link>;
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a004b737e2d39b02b13501b9b75dbb1d2">mapped_const_pointer</link>;
155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a8c04f3081f250f27168c972ddab15ed2">mapped_reference</link>;
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ac9ab328f5d72749796944f422d72fe08">mapped_const_reference</link>;
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::value_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1acbac7ecf2622340c1428eab09ce68eb2">value_type</link>;
158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ae6c4243c552698eb22da690e5758c0f0">pointer</link>;
159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1afc79bf3073f99da23e2a28893917549e">const_pointer</link>;
160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1af8fbef5516ac106e2ff2d0bcb60baafb">reference</link>;
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aea070a9fc22c0fe60ed8787dbf362c6f">const_reference</link>;
162 
163 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;point_iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point_iterator;
165 <emphasis role="preprocessor">#endif</emphasis>
166 
167 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;point_const_iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point_iterator;
169 <emphasis role="preprocessor">#endif</emphasis>
170 
171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;point_const_iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ade7bb9de97ccbcfedf0a0b9042ce0e82">point_const_iterator</link>;
172 
173 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator;
175 <emphasis role="preprocessor">#endif</emphasis>
176 
177 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a676a3b628ba09d9a22fd2d068df2fd03">const_iterator_</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator;
179 <emphasis role="preprocessor">#endif</emphasis>
180 
181 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a676a3b628ba09d9a22fd2d068df2fd03">const_iterator_</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a71e8a173c757e1d01d674f001d21e337">const_iterator</link>;
182 
183 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
184 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1adb6cbf03351bdbbf41dad4bd28983a4f">PB_DS_LU_NAME</link>();
185 
186 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a6fdf3e7a3f0f92b41aedf0b0c2fb2fb1">PB_DS_LU_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>
189 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aed6f945b6daa189589891358192ce876">~PB_DS_LU_NAME</link>();
190 
191 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
192 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aff3513db492def9c862d6806d7a221b3">PB_DS_LU_NAME</link>(It,&#32;It);
193 
194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a43f6c3aea41af9224efd640f3e6e468f">swap</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
196 
197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aca5756e3009182a270edc76b0851bcf1">size_type</link>
198 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1acab0c131679c2f849b174e86d49d32ef">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aca5756e3009182a270edc76b0851bcf1">size_type</link>
201 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ad77c6b14e8071e8fac5ea1b9b1dc1385">max_size</link>()&#32;<emphasis role="keyword">const</emphasis>;
202 
203 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
204 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a081c340fbcf860c6f265115b2f587b4f">empty</link>()&#32;<emphasis role="keyword">const</emphasis>;
205 
206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a8c04f3081f250f27168c972ddab15ed2">mapped_reference</link>
207 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a0106665e041b87aa94b987d7f64703c0">operator[]</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a46a10654e758f820b59a017d6a391adf">key_const_reference</link>&#32;r_key)
208 &#32;&#32;&#32;&#32;&#32;&#32;{
209 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
210 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
211 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a1ec9546b4c6345dc85e00e8a052d9713">insert</link>(std::make_pair(r_key,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a0a244c94718a9cf8a239b582d69b0250">mapped_type</link>())).first-&gt;second;
212 <emphasis role="preprocessor">#else</emphasis>
213 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a1ec9546b4c6345dc85e00e8a052d9713">insert</link>(r_key);
214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;traits_base::s_null_type;
215 <emphasis role="preprocessor">#endif</emphasis>
216 &#32;&#32;&#32;&#32;&#32;&#32;}
217 
218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;std::pair&lt;point_iterator,&#32;bool&gt;
219 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a1ec9546b4c6345dc85e00e8a052d9713">insert</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aea070a9fc22c0fe60ed8787dbf362c6f">const_reference</link>);
220 
221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;point_iterator
222 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1af234778996e9e3fcb95b5569f8a56663">find</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a46a10654e758f820b59a017d6a391adf">key_const_reference</link>&#32;r_key)
223 &#32;&#32;&#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
225 &#32;&#32;&#32;&#32;entry_pointer&#32;p_e&#32;=&#32;find_imp(r_key);
226 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point_iterator(p_e&#32;==&#32;0&#32;?&#32;0:&#32;&amp;p_e-&gt;m_value);
227 &#32;&#32;&#32;&#32;&#32;&#32;}
228 
229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ade7bb9de97ccbcfedf0a0b9042ce0e82">point_const_iterator</link>
230 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aeef75f672af1b5ae078e60622bd0ecec">find</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a46a10654e758f820b59a017d6a391adf">key_const_reference</link>&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
231 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
232 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
233 &#32;&#32;&#32;&#32;entry_pointer&#32;p_e&#32;=&#32;find_imp(r_key);
234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ade7bb9de97ccbcfedf0a0b9042ce0e82">point_const_iterator</link>(p_e&#32;==&#32;0&#32;?&#32;0:&#32;&amp;p_e-&gt;m_value);
235 &#32;&#32;&#32;&#32;&#32;&#32;}
236 
237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
238 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ac768fefd22dd40752c0419478a0f50b3">erase</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a46a10654e758f820b59a017d6a391adf">key_const_reference</link>);
239 
240 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aca5756e3009182a270edc76b0851bcf1">size_type</link>
242 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a6ac9d2eb259872c61c1b1953d082f07c">erase_if</link>(Pred);
243 
244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
245 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a08f64640c0b93aeee011b57ae32291f6">clear</link>();
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;iterator
248 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ab630f378aed12b18993086705d733f81">begin</link>();
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a71e8a173c757e1d01d674f001d21e337">const_iterator</link>
251 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1ae9ba3126602d025314261588821ee710">begin</link>()&#32;<emphasis role="keyword">const</emphasis>;
252 
253 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;iterator
254 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a8235e1dc6b82bbc6fbf85f27755eff02">end</link>();
255 
256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a71e8a173c757e1d01d674f001d21e337">const_iterator</link>
257 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1af90ed262f48c5462752ce211e1a65529">end</link>()&#32;<emphasis role="keyword">const</emphasis>;
258 
259 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
260 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
261 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;line)&#32;<emphasis role="keyword">const</emphasis>;
262 <emphasis role="preprocessor">#endif</emphasis>
263 
264 <emphasis role="preprocessor">#ifdef&#32;PB_DS_LU_MAP_TRACE_</emphasis>
265 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
266 &#32;&#32;&#32;&#32;&#32;&#32;trace()&#32;<emphasis role="keyword">const</emphasis>;
267 <emphasis role="preprocessor">#endif</emphasis>
268 
269 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
270 
271 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
272 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
273 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a832a8f5f1f43a2115042c6e8368b2913">copy_from_range</link>(It,&#32;It);
274 
275 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
276 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
277 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>iterator_;
278 <emphasis role="preprocessor">#endif</emphasis>
279 
280 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a676a3b628ba09d9a22fd2d068df2fd03">const_iterator_</link>;
281 
282 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;entry_pointer
283 &#32;&#32;&#32;&#32;&#32;&#32;allocate_new_entry(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aea070a9fc22c0fe60ed8787dbf362c6f">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
284 
285 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;entry_pointer
286 &#32;&#32;&#32;&#32;&#32;&#32;allocate_new_entry(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1aea070a9fc22c0fe60ed8787dbf362c6f">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
287 
288 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Metadata&gt;
289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
290 &#32;&#32;&#32;&#32;&#32;&#32;init_entry_metadata(entry_pointer,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;Metadata&gt;</link>);
291 
292 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
293 &#32;&#32;&#32;&#32;&#32;&#32;init_entry_metadata(entry_pointer,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;null_type&gt;</link>);
294 
295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
296 &#32;&#32;&#32;&#32;&#32;&#32;deallocate_all();
297 
298 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
299 &#32;&#32;&#32;&#32;&#32;&#32;erase_next(entry_pointer);
300 
301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
302 &#32;&#32;&#32;&#32;&#32;&#32;actual_erase_entry(entry_pointer);
303 
304 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
305 &#32;&#32;&#32;&#32;&#32;&#32;inc_it_state(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1afc79bf3073f99da23e2a28893917549e">const_pointer</link>&amp;&#32;r_p_value,&#32;entry_pointer&amp;&#32;r_pos)<emphasis role="keyword">&#32;const</emphasis>
306 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
307 &#32;&#32;&#32;&#32;r_pos&#32;=&#32;r_pos-&gt;m_p_next;
308 &#32;&#32;&#32;&#32;r_p_value&#32;=&#32;(r_pos&#32;==&#32;0)&#32;?&#32;0&#32;:&#32;&amp;r_pos-&gt;m_value;
309 &#32;&#32;&#32;&#32;&#32;&#32;}
310 
311 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Metadata&gt;
312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
313 &#32;&#32;&#32;&#32;&#32;&#32;apply_update(entry_pointer,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;Metadata&gt;</link>);
314 
315 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
316 &#32;&#32;&#32;&#32;&#32;&#32;apply_update(entry_pointer,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;null_type&gt;</link>);
317 
318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;entry_pointer
319 &#32;&#32;&#32;&#32;&#32;&#32;find_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e_1a46a10654e758f820b59a017d6a391adf">key_const_reference</link>)&#32;<emphasis role="keyword">const</emphasis>;
320 
321 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;entry_allocator&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_entry_allocator;
322 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Eq_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_eq_fn;
323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Update_Policy&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_update_policy;
324 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;update_metadata&gt;</link>&#32;&#32;s_metadata_type_indicator;
325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_null_type;
326 
327 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">mutable</emphasis>&#32;entry_pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_p_l;
328 &#32;&#32;&#32;&#32;};
329 
330 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp&gt;</emphasis>
331 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/info_fn_imps.hpp&gt;</emphasis>
332 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/debug_fn_imps.hpp&gt;</emphasis>
333 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp&gt;</emphasis>
334 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp&gt;</emphasis>
335 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/find_fn_imps.hpp&gt;</emphasis>
336 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp&gt;</emphasis>
337 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/list_update_map_/trace_fn_imps.hpp&gt;</emphasis>
338 
339 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
340 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
341 <emphasis role="preprocessor">#undef&#32;PB_DS_LU_TRAITS_BASE</emphasis>
342 <emphasis role="preprocessor">#undef&#32;PB_DS_DEBUG_MAP_BASE_C_DEC</emphasis>
343 <emphasis role="preprocessor">#undef&#32;PB_DS_LU_NAME</emphasis>
344 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
345 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
</programlisting></section>
