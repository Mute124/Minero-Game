<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1____unary__negate" xml:lang="en-US">
<title>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary></indexterm>
<para>

<para>Similar to std::unary_negate, but giving the argument types explicitly. </para>
 
</para>
<para>
<computeroutput>#include &lt;base.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1____unary__negate__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1____unary__negate__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1____unary__negate_1a7004f3252eaf69368e56170e4be100b3">__unary_negate</link> (const _Predicate &amp;__x)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1____unary__negate_1ae458bbf03dad2e38cc85b12f984f1c51">operator()</link> (const argument_type &amp;__x)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1____unary__negate_1a7004f3252eaf69368e56170e4be100b3">__unary_negate</link> (const _Predicate &amp;__x)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1____unary__negate_1ae458bbf03dad2e38cc85b12f984f1c51">operator()</link> (const argument_type &amp;__x)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1____unary__negate_1a7004f3252eaf69368e56170e4be100b3">__unary_negate</link> (const _Predicate &amp;__x)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1____unary__negate_1ae458bbf03dad2e38cc85b12f984f1c51">operator()</link> (const argument_type &amp;__x)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>_Predicate <link linkend="_class____gnu__parallel_1_1____unary__negate_1aad5247af2ecf6e5e27011ddb316013c7">_M_pred</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Predicate, typename argument_type&gt;<?linebreak?>class __gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</title></simplesect>

<para>Similar to std::unary_negate, but giving the argument types explicitly. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1a7004f3252eaf69368e56170e4be100b3"/><section>
    <title>__unary_negate()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__unary_negate</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>__unary_negate</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::__unary_negate (const _Predicate &amp; __x)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1a7004f3252eaf69368e56170e4be100b3"/><section>
    <title>__unary_negate()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__unary_negate</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>__unary_negate</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::__unary_negate (const _Predicate &amp; __x)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1a7004f3252eaf69368e56170e4be100b3"/><section>
    <title>__unary_negate()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__unary_negate</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>__unary_negate</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::__unary_negate (const _Predicate &amp; __x)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1ae458bbf03dad2e38cc85b12f984f1c51"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::operator() (const argument_type &amp; __x)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1ae458bbf03dad2e38cc85b12f984f1c51"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::operator() (const argument_type &amp; __x)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1ae458bbf03dad2e38cc85b12f984f1c51"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::operator() (const argument_type &amp; __x)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1____unary__negate_1aad5247af2ecf6e5e27011ddb316013c7"/><section>
    <title>_M_pred</title>
<indexterm><primary>_M_pred</primary><secondary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</primary><secondary>_M_pred</secondary></indexterm>
<computeroutput>template&lt;typename _Predicate , typename argument_type &gt; </computeroutput><para><computeroutput>_Predicate <link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt; _Predicate, argument_type &gt;::_M_pred<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link></section>
</section>
