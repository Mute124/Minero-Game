<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2_raylib_erosion_standalone-main_2raylib_2src_2external_2glfw_2src_2wl__platform_8h_source" xml:lang="en-US">
<title>wl_platform.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/RaylibErosionStandalone-main/raylib/src/external/glfw/src/wl_platform.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//========================================================================</emphasis>
2 <emphasis role="comment">//&#32;GLFW&#32;3.4&#32;Wayland&#32;-&#32;www.glfw.org</emphasis>
3 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
4 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2014&#32;Jonas&#32;Ã…dahl&#32;&lt;jadahl@gmail.com&gt;</emphasis>
5 <emphasis role="comment">//</emphasis>
6 <emphasis role="comment">//&#32;This&#32;software&#32;is&#32;provided&#32;&apos;as-is&apos;,&#32;without&#32;any&#32;express&#32;or&#32;implied</emphasis>
7 <emphasis role="comment">//&#32;warranty.&#32;In&#32;no&#32;event&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages</emphasis>
8 <emphasis role="comment">//&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
9 <emphasis role="comment">//</emphasis>
10 <emphasis role="comment">//&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,</emphasis>
11 <emphasis role="comment">//&#32;including&#32;commercial&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it</emphasis>
12 <emphasis role="comment">//&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
13 <emphasis role="comment">//</emphasis>
14 <emphasis role="comment">//&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not</emphasis>
15 <emphasis role="comment">//&#32;&#32;&#32;&#32;claim&#32;that&#32;you&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software</emphasis>
16 <emphasis role="comment">//&#32;&#32;&#32;&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment&#32;in&#32;the&#32;product&#32;documentation&#32;would</emphasis>
17 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
18 <emphasis role="comment">//</emphasis>
19 <emphasis role="comment">//&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not</emphasis>
20 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;misrepresented&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
21 <emphasis role="comment">//</emphasis>
22 <emphasis role="comment">//&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source</emphasis>
23 <emphasis role="comment">//&#32;&#32;&#32;&#32;distribution.</emphasis>
24 <emphasis role="comment">//</emphasis>
25 <emphasis role="comment">//========================================================================</emphasis>
26 
27 <emphasis role="preprocessor">#include&#32;&lt;wayland-client.h&gt;</emphasis>
28 <emphasis role="preprocessor">#include&#32;&lt;xkbcommon/xkbcommon.h&gt;</emphasis>
29 <emphasis role="preprocessor">#ifdef&#32;HAVE_XKBCOMMON_COMPOSE_H</emphasis>
30 <emphasis role="preprocessor">#include&#32;&lt;xkbcommon/xkbcommon-compose.h&gt;</emphasis>
31 <emphasis role="preprocessor">#endif</emphasis>
32 <emphasis role="preprocessor">#include&#32;&lt;dlfcn.h&gt;</emphasis>
33 
34 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abb605a7700670dd8420cc3841b939444">VkFlags</link>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a36e579e4f2092ce7a427191251c5cc33">VkWaylandSurfaceCreateFlagsKHR</link>;
35 
36 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link>
37 {
38 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1aff9f2b99398eb80a2b5a146bc5534ce8">VkStructureType</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1adcee5594c6de411fcf6c612c40ddf995">sType</link>;
39 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1a7663997f86e1ac4616b91ad75a6e2892">pNext</link>;
40 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a36e579e4f2092ce7a427191251c5cc33">VkWaylandSurfaceCreateFlagsKHR</link>&#32;&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1a2e424bf1f0e533f78c82061a2d4c2176">flags</link>;
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_display*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1ae9a70e796c2d66840bf20fca63ccec0a">display</link>;
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_surface*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1a5805e99c0cbeb7fc9cca7c38f65284d2">surface</link>;
43 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a1806f7a43bfa7c3b5dccc83f9a110f9f">VkWaylandSurfaceCreateInfoKHR</link>;
44 
45 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;(<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link>&#32;*<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a76222e93358f10e2b01bd5115dc01038">PFN_vkCreateWaylandSurfaceKHR</link>)(<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link>,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link>*,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link>*,<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link>*);
46 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1ae5d9faf75f583010e32ee49087a15326">VkBool32</link>&#32;(<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link>&#32;*<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ab2aa7548ffded3123627790f8bce8c95">PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</link>)(<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link>,<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,<emphasis role="keyword">struct&#32;</emphasis>wl_display*);
47 
48 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2posix__thread_8h">posix_thread.h</link>&quot;</emphasis>
49 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2posix__time_8h">posix_time.h</link>&quot;</emphasis>
50 <emphasis role="preprocessor">#ifdef&#32;__linux__</emphasis>
51 <emphasis role="preprocessor">#include&#32;&quot;linux_joystick.h&quot;</emphasis>
52 <emphasis role="preprocessor">#else</emphasis>
53 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2null__joystick_8h">null_joystick.h</link>&quot;</emphasis>
54 <emphasis role="preprocessor">#endif</emphasis>
55 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2xkb__unicode_8h">xkb_unicode.h</link>&quot;</emphasis>
56 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2egl__context_8h">egl_context.h</link>&quot;</emphasis>
57 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2osmesa__context_8h">osmesa_context.h</link>&quot;</emphasis>
58 
59 <emphasis role="preprocessor">#include&#32;&quot;wayland-xdg-shell-client-protocol.h&quot;</emphasis>
60 <emphasis role="preprocessor">#include&#32;&quot;wayland-xdg-decoration-client-protocol.h&quot;</emphasis>
61 <emphasis role="preprocessor">#include&#32;&quot;wayland-viewporter-client-protocol.h&quot;</emphasis>
62 <emphasis role="preprocessor">#include&#32;&quot;wayland-relative-pointer-unstable-v1-client-protocol.h&quot;</emphasis>
63 <emphasis role="preprocessor">#include&#32;&quot;wayland-pointer-constraints-unstable-v1-client-protocol.h&quot;</emphasis>
64 <emphasis role="preprocessor">#include&#32;&quot;wayland-idle-inhibit-unstable-v1-client-protocol.h&quot;</emphasis>
65 
66 <emphasis role="preprocessor">#define&#32;_glfw_dlopen(name)&#32;dlopen(name,&#32;RTLD_LAZY&#32;|&#32;RTLD_LOCAL)</emphasis>
67 <emphasis role="preprocessor">#define&#32;_glfw_dlclose(handle)&#32;dlclose(handle)</emphasis>
68 <emphasis role="preprocessor">#define&#32;_glfw_dlsym(handle,&#32;name)&#32;dlsym(handle,&#32;name)</emphasis>
69 
70 <emphasis role="preprocessor">#define&#32;_GLFW_EGL_NATIVE_WINDOW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((EGLNativeWindowType)&#32;window-&gt;wl.native)</emphasis>
71 <emphasis role="preprocessor">#define&#32;_GLFW_EGL_NATIVE_DISPLAY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((EGLNativeDisplayType)&#32;_glfw.wl.display)</emphasis>
72 
73 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_WINDOW_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWwindowWayland&#32;&#32;wl</emphasis>
74 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_LIBRARY_WINDOW_STATE&#32;_GLFWlibraryWayland&#32;wl</emphasis>
75 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_MONITOR_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWmonitorWayland&#32;wl</emphasis>
76 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_CURSOR_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_GLFWcursorWayland&#32;&#32;wl</emphasis>
77 
78 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_CONTEXT_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;struct&#32;{&#32;int&#32;dummyContext;&#32;}</emphasis>
79 <emphasis role="preprocessor">#define&#32;_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE&#32;struct&#32;{&#32;int&#32;dummyLibraryContext;&#32;}</emphasis>
80 
81 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor__image">wl_cursor_image</link>&#32;{
82 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_structwl__cursor__image_1ae3ad787b093ed17c7b80c1f68b8bc236">width</link>;
83 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_structwl__cursor__image_1a3beb05169f4a5c2e5f3b60bc6c235faf">height</link>;
84 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_structwl__cursor__image_1a34a471c3a3cd1e26fdeda0ee6c32d8d7">hotspot_x</link>;
85 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_structwl__cursor__image_1a07718c95b5251d661ed6277d9b8a15c6">hotspot_y</link>;
86 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_structwl__cursor__image_1af4f4f82446d4b2eadd92b00ec78bc0ec">delay</link>;
87 };
88 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor">wl_cursor</link>&#32;{
89 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structwl__cursor_1a5e23e930ca254b9e131e498de57d660f">image_count</link>;
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor__image">wl_cursor_image</link>**&#32;<link linkend="_structwl__cursor_1a6b64b2ed8333300c33035bfe6363b040">images</link>;
91 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_structwl__cursor_1af577816e2b5f6b7ffd163cbaaccedd29">name</link>;
92 };
93 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_cursor_theme*&#32;(*&#32;PFN_wl_cursor_theme_load)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;int,&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_shm*);
94 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a028b3d9313486c63f918b370f4290b46">PFN_wl_cursor_theme_destroy</link>)(<emphasis role="keyword">struct&#32;</emphasis>wl_cursor_theme*);
95 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor">wl_cursor</link>*&#32;(*&#32;PFN_wl_cursor_theme_get_cursor)(<emphasis role="keyword">struct&#32;</emphasis>wl_cursor_theme*,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*);
96 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_buffer*&#32;(*&#32;PFN_wl_cursor_image_get_buffer)(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor__image">wl_cursor_image</link>*);
97 <emphasis role="preprocessor">#define&#32;wl_cursor_theme_load&#32;_glfw.wl.cursor.theme_load</emphasis>
98 <emphasis role="preprocessor">#define&#32;wl_cursor_theme_destroy&#32;_glfw.wl.cursor.theme_destroy</emphasis>
99 <emphasis role="preprocessor">#define&#32;wl_cursor_theme_get_cursor&#32;_glfw.wl.cursor.theme_get_cursor</emphasis>
100 <emphasis role="preprocessor">#define&#32;wl_cursor_image_get_buffer&#32;_glfw.wl.cursor.image_get_buffer</emphasis>
101 
102 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_egl_window*&#32;(*&#32;PFN_wl_egl_window_create)(<emphasis role="keyword">struct&#32;</emphasis>wl_surface*,&#32;int,&#32;int);
103 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a2727d08bef446572e6f9e26801506ae1">PFN_wl_egl_window_destroy</link>)(<emphasis role="keyword">struct&#32;</emphasis>wl_egl_window*);
104 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1adcf78e57b989ea0e561208099dada945">PFN_wl_egl_window_resize</link>)(<emphasis role="keyword">struct&#32;</emphasis>wl_egl_window*,&#32;int,&#32;int,&#32;int,&#32;int);
105 <emphasis role="preprocessor">#define&#32;wl_egl_window_create&#32;_glfw.wl.egl.window_create</emphasis>
106 <emphasis role="preprocessor">#define&#32;wl_egl_window_destroy&#32;_glfw.wl.egl.window_destroy</emphasis>
107 <emphasis role="preprocessor">#define&#32;wl_egl_window_resize&#32;_glfw.wl.egl.window_resize</emphasis>
108 
109 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_context*&#32;(*&#32;PFN_xkb_context_new)(<emphasis role="keyword">enum</emphasis>&#32;xkb_context_flags);
110 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aeb826e6dece848b0e71cf98fcf3b6a34">PFN_xkb_context_unref</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_context*);
111 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_keymap*&#32;(*&#32;PFN_xkb_keymap_new_from_string)(<emphasis role="keyword">struct&#32;</emphasis>xkb_context*,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_keymap_format,&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_keymap_compile_flags);
112 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aa0778d7d934b96bf500f046368de1f45">PFN_xkb_keymap_unref</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_keymap*);
113 <emphasis role="keyword">typedef</emphasis>&#32;xkb_mod_index_t&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a41d7cec916693645a46216cec1c0c6d7">PFN_xkb_keymap_mod_get_index</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_keymap*,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*);
114 <emphasis role="keyword">typedef</emphasis>&#32;int&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a10dd25305b8984d748e0c35db025106e">PFN_xkb_keymap_key_repeats</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_keymap*,&#32;xkb_keycode_t);
115 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_state*&#32;(*&#32;PFN_xkb_state_new)(<emphasis role="keyword">struct&#32;</emphasis>xkb_keymap*);
116 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a04a57f9f8326bd39a1525e4e0edd4951">PFN_xkb_state_unref</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_state*);
117 <emphasis role="keyword">typedef</emphasis>&#32;int&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ac93bb3679df2634f72bb35e1587b0459">PFN_xkb_state_key_get_syms</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_state*,&#32;xkb_keycode_t,&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_keysym_t**);
118 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_state_component&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a872e4657e3e1127caeb678c0b253b4f0">PFN_xkb_state_update_mask</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_state*,&#32;xkb_mod_mask_t,&#32;xkb_mod_mask_t,&#32;xkb_mod_mask_t,&#32;xkb_layout_index_t,&#32;xkb_layout_index_t,&#32;xkb_layout_index_t);
119 <emphasis role="keyword">typedef</emphasis>&#32;xkb_mod_mask_t&#32;(*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2wl__platform_8h_1a963602febce41dbde7c037aaba7b7c0d">PFN_xkb_state_serialize_mods</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_state*,&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_state_component);
120 <emphasis role="preprocessor">#define&#32;xkb_context_new&#32;_glfw.wl.xkb.context_new</emphasis>
121 <emphasis role="preprocessor">#define&#32;xkb_context_unref&#32;_glfw.wl.xkb.context_unref</emphasis>
122 <emphasis role="preprocessor">#define&#32;xkb_keymap_new_from_string&#32;_glfw.wl.xkb.keymap_new_from_string</emphasis>
123 <emphasis role="preprocessor">#define&#32;xkb_keymap_unref&#32;_glfw.wl.xkb.keymap_unref</emphasis>
124 <emphasis role="preprocessor">#define&#32;xkb_keymap_mod_get_index&#32;_glfw.wl.xkb.keymap_mod_get_index</emphasis>
125 <emphasis role="preprocessor">#define&#32;xkb_keymap_key_repeats&#32;_glfw.wl.xkb.keymap_key_repeats</emphasis>
126 <emphasis role="preprocessor">#define&#32;xkb_state_new&#32;_glfw.wl.xkb.state_new</emphasis>
127 <emphasis role="preprocessor">#define&#32;xkb_state_unref&#32;_glfw.wl.xkb.state_unref</emphasis>
128 <emphasis role="preprocessor">#define&#32;xkb_state_key_get_syms&#32;_glfw.wl.xkb.state_key_get_syms</emphasis>
129 <emphasis role="preprocessor">#define&#32;xkb_state_update_mask&#32;_glfw.wl.xkb.state_update_mask</emphasis>
130 <emphasis role="preprocessor">#define&#32;xkb_state_serialize_mods&#32;_glfw.wl.xkb.state_serialize_mods</emphasis>
131 
132 <emphasis role="preprocessor">#ifdef&#32;HAVE_XKBCOMMON_COMPOSE_H</emphasis>
133 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_table*&#32;(*&#32;PFN_xkb_compose_table_new_from_locale)(<emphasis role="keyword">struct&#32;</emphasis>xkb_context*,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_compose_compile_flags);
134 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a94826943d69f9fce48bb246457692c2e">PFN_xkb_compose_table_unref</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_table*);
135 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_state*&#32;(*&#32;PFN_xkb_compose_state_new)(<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_table*,&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_compose_state_flags);
136 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a5b405c88d81a608a1a447ac889f6485b">PFN_xkb_compose_state_unref</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_state*);
137 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_compose_feed_result&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a58829e3e18572f5e5e8d7d0349b3f092">PFN_xkb_compose_state_feed</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_state*,&#32;xkb_keysym_t);
138 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;xkb_compose_status&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aad8c18022b37e3cd5d8e38a621fa42ed">PFN_xkb_compose_state_get_status</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_state*);
139 <emphasis role="keyword">typedef</emphasis>&#32;xkb_keysym_t&#32;(*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a88d4343fefb99b57a83cb2609eebdf87">PFN_xkb_compose_state_get_one_sym</link>)(<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_state*);
140 <emphasis role="preprocessor">#define&#32;xkb_compose_table_new_from_locale&#32;_glfw.wl.xkb.compose_table_new_from_locale</emphasis>
141 <emphasis role="preprocessor">#define&#32;xkb_compose_table_unref&#32;_glfw.wl.xkb.compose_table_unref</emphasis>
142 <emphasis role="preprocessor">#define&#32;xkb_compose_state_new&#32;_glfw.wl.xkb.compose_state_new</emphasis>
143 <emphasis role="preprocessor">#define&#32;xkb_compose_state_unref&#32;_glfw.wl.xkb.compose_state_unref</emphasis>
144 <emphasis role="preprocessor">#define&#32;xkb_compose_state_feed&#32;_glfw.wl.xkb.compose_state_feed</emphasis>
145 <emphasis role="preprocessor">#define&#32;xkb_compose_state_get_status&#32;_glfw.wl.xkb.compose_state_get_status</emphasis>
146 <emphasis role="preprocessor">#define&#32;xkb_compose_state_get_one_sym&#32;_glfw.wl.xkb.compose_state_get_one_sym</emphasis>
147 <emphasis role="preprocessor">#endif</emphasis>
148 
149 <emphasis role="preprocessor">#define&#32;_GLFW_DECORATION_WIDTH&#32;4</emphasis>
150 <emphasis role="preprocessor">#define&#32;_GLFW_DECORATION_TOP&#32;24</emphasis>
151 <emphasis role="preprocessor">#define&#32;_GLFW_DECORATION_VERTICAL&#32;(_GLFW_DECORATION_TOP&#32;+&#32;_GLFW_DECORATION_WIDTH)</emphasis>
152 <emphasis role="preprocessor">#define&#32;_GLFW_DECORATION_HORIZONTAL&#32;(2&#32;*&#32;_GLFW_DECORATION_WIDTH)</emphasis>
153 
154 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link>
155 {
156 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acab46a673d9ca7e2f82c3cdd4cc7118e6b">mainWindow</link>,
157 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca7d386fd3327b79f545efc42b71938684">topDecoration</link>,
158 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca9a7153928697fcf33642ce73e6d4c3e4">leftDecoration</link>,
159 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acaa31414385e2e07a6c5b5e1bc3ae93dfc">rightDecoration</link>,
160 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca3393de96e9dcdda8d91fcfbbc616b550">bottomDecoration</link>,
161 
162 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link>;
163 
164 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link>
165 {
166 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_surface*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wdecoration_wayland_1ac3d89a2fa4c8a00fa43d132a0d88048a">surface</link>;
167 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_subsurface*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wdecoration_wayland_1a35ce6e61ffc0b084591f2a2d02f91492">subsurface</link>;
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wp_viewport*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wdecoration_wayland_1a5030746af557ea238f24364d9353aadd">viewport</link>;
169 
170 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a55173b590d4140e345ceeb03f906d101">_GLFWdecorationWayland</link>;
171 
172 <emphasis role="comment">//&#32;Wayland-specific&#32;per-window&#32;data</emphasis>
173 <emphasis role="comment">//</emphasis>
174 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link>
175 {
176 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ae7a74e82083246545e7caf62bb839cf3">width</link>,&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a4db9e7087b799ac1d45ba74214347e9d">height</link>;
177 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1add22e05f7cce932e4e90a35c0b1fb430">visible</link>;
178 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ac93fc033f79480e6401a1cb66340c16f">maximized</link>;
179 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a791c3840dc234bfb7feb8935ce23a75f">hovered</link>;
180 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ad5491743c29adf82ac47ed4d9de60a49">transparent</link>;
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_surface*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ac005f76c9cf08d181db230f9463451d7">surface</link>;
182 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_egl_window*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a3fd7af81251fa4ffbb273ff4b31d7a5a">native</link>;
183 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_callback*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a8a6e4cbc1cb62b326182f3767b4c8d5e">callback</link>;
184 
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xdg_surface*&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0720952aa1caded45b5bcdce589663a9">surface</link>;
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xdg_toplevel*&#32;&#32;&#32;&#32;toplevel;
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zxdg_toplevel_decoration_v1*&#32;decoration;
189 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ae5115cbeed1665e1f26634b8fc203d65">xdg</link>;
190 
191 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1aa137303f1f4696014c9f13092d48053d">currentCursor</link>;
192 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a4fa337c9768c3bd451db24603d548069">cursorPosX</link>,&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ac8a5b3ad373c2fd3c6ec4b171dab5af4">cursorPosY</link>;
193 
194 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1ab7c5f1490e9f6c1d5804f06808767da0">title</link>;
195 
196 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;need&#32;to&#32;track&#32;the&#32;monitors&#32;the&#32;window&#32;spans&#32;on&#32;to&#32;calculate&#32;the</emphasis>
197 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;optimal&#32;scaling&#32;factor.</emphasis>
198 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1aa38d0343058e1ad1e24c619ab4d6ed70">scale</link>;
199 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>**&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a1a070a248d981378c42bf085d3ac0c3c">monitors</link>;
200 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1afb1e06d097ad0ce19eab5eaeacca6467">monitorsCount</link>;
201 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a130a3f4605089714cd799d8439047b60">monitorsSize</link>;
202 
203 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zwp_relative_pointer_v1*&#32;&#32;&#32;&#32;relativePointer;
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zwp_locked_pointer_v1*&#32;&#32;&#32;&#32;&#32;&#32;lockedPointer;
206 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a4a6e83fe611b81bb5fa9770318743674">pointerLock</link>;
207 
208 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zwp_idle_inhibitor_v1*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1aaa4e08047a645293a6150f493380d891">idleInhibitor</link>;
209 
210 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a4f731e843a7af52770dbfa9c38beae03">wasFullscreen</link>;
211 
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serverSide;
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_buffer*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>;
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;top,&#32;left,&#32;right,&#32;bottom;
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;focus;
217 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wwindow_wayland_1a2e096339bd1e365d159a210ef7539f93">decorations</link>;
218 
219 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a5deeeabe0fcb994f43b6c2364e02edc4">_GLFWwindowWayland</link>;
220 
221 <emphasis role="comment">//&#32;Wayland-specific&#32;global&#32;data</emphasis>
222 <emphasis role="comment">//</emphasis>
223 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link>
224 {
225 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_display*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a7a2be6d77307eb6ad4555471206f7da9">display</link>;
226 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_registry*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1aa7b8d527601efaf5b39961132ebf4467">registry</link>;
227 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_compositor*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a13154398fd0bff3790f76c3b5ac83f93">compositor</link>;
228 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_subcompositor*&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a555c3a0f541d3c43059a052039bb0d82">subcompositor</link>;
229 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_shm*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ad791bfd56807d188e00589e1fb44dc6b">shm</link>;
230 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_seat*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ab96995ba81a0c046d42ea592b6b01581">seat</link>;
231 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_pointer*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a79afef8644833d30dbefb56fe4bee4f4">pointer</link>;
232 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_keyboard*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a7813a3ff9bf9fd6eb6673014ca3f950e">keyboard</link>;
233 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_data_device_manager*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a980430989e4241decec61813762bb9b1">dataDeviceManager</link>;
234 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_data_device*&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a0e97dc3ddf35007074cfe6ddcffbfc05">dataDevice</link>;
235 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_data_offer*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a206bfe01e89869d693fac8543e23d5a6">dataOffer</link>;
236 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_data_source*&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a010f19a158150a53ac1c41c8482a683a">dataSource</link>;
237 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xdg_wm_base*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1aa8adeffcab16f14441106a6e3f963e02">wmBase</link>;
238 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zxdg_decoration_manager_v1*&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a44ca65877f27b272a45ceb01a678f8aa">decorationManager</link>;
239 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wp_viewporter*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a805a987303b0b0600559b6c129e60669">viewporter</link>;
240 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zwp_relative_pointer_manager_v1*&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1abc4058017e8480111d1cdf8566a10ead">relativePointerManager</link>;
241 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zwp_pointer_constraints_v1*&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a448d82ffabd5d549ee0fc52cb71f59fd">pointerConstraints</link>;
242 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>zwp_idle_inhibit_manager_v1*&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a7c62e7a7ebb8cb193cd1003542769ee1">idleInhibitManager</link>;
243 
244 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a247dba132e42812c28bcce2d03e7d97c">compositorVersion</link>;
245 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a1077fca5a8097b03bc9007950d95054a">seatVersion</link>;
246 
247 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_cursor_theme*&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ad830bd193a3bc6832f1165f32818f4d8">cursorTheme</link>;
248 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_cursor_theme*&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1aa455139396f0a9f6e5cbb4671e860650">cursorThemeHiDPI</link>;
249 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_surface*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1aabd5c92b4d5e94a95e93d6163a475687">cursorSurface</link>;
250 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a7e3b49d46f03583f90aa5d32bfa634fc">cursorPreviousName</link>;
251 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a544f0402b6950220cb7003917f1197b3">cursorTimerfd</link>;
252 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a06d6c0697b351ccc2767b67855d3edc4">serial</link>;
253 
254 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ac7eab892b0dfec240a86a783ec26f74d">keyboardRepeatRate</link>;
255 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a5783a85c3062f00adf12d3925e474bcf">keyboardRepeatDelay</link>;
256 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a7e0abacb2792cbcc7f93aa184c7e7f0f">keyboardLastKey</link>;
257 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ab6e024e0ea286ebbd77740ddb10ecb5e">keyboardLastScancode</link>;
258 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a06c32257f5ca1d4810f3cc5c8e1982fc">clipboardString</link>;
259 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1aea217e1855f05c209f1214333bc7cac6">clipboardSize</link>;
260 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ae8cba5192753d014cd8440ac323d4bd6">clipboardSendString</link>;
261 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a9d70ba663912cbfab64cd38ea7b6a228">clipboardSendSize</link>;
262 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a1dd1fdbcbfb1b23ccb5567931ec72a03">timerfd</link>;
263 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1abe1e563e65b265f0a00bd025ba659766">keycodes</link>[256];
264 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a59ac5bb0cd7ffe9859e1a517e002b2dd">scancodes</link>[<link linkend="_group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789">GLFW_KEY_LAST</link>&#32;+&#32;1];
265 
266 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_context*&#32;&#32;&#32;&#32;&#32;context;
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_keymap*&#32;&#32;&#32;&#32;&#32;&#32;keymap;
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_state*&#32;&#32;&#32;&#32;&#32;&#32;&#32;state;
271 
272 <emphasis role="preprocessor">#ifdef&#32;HAVE_XKBCOMMON_COMPOSE_H</emphasis>
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>xkb_compose_state*&#32;composeState;
274 <emphasis role="preprocessor">#endif</emphasis>
275 
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xkb_mod_mask_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controlMask;
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xkb_mod_mask_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;altMask;
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xkb_mod_mask_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shiftMask;
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xkb_mod_mask_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;superMask;
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xkb_mod_mask_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capsLockMask;
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xkb_mod_mask_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numLockMask;
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifiers;
283 
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aab405d705b491d12d417d43653efb8b9">PFN_xkb_context_new</link>&#32;context_new;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aeb826e6dece848b0e71cf98fcf3b6a34">PFN_xkb_context_unref</link>&#32;context_unref;
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a1f100e9e4aa5cfcc5562924155012055">PFN_xkb_keymap_new_from_string</link>&#32;keymap_new_from_string;
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aa0778d7d934b96bf500f046368de1f45">PFN_xkb_keymap_unref</link>&#32;keymap_unref;
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a41d7cec916693645a46216cec1c0c6d7">PFN_xkb_keymap_mod_get_index</link>&#32;keymap_mod_get_index;
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a10dd25305b8984d748e0c35db025106e">PFN_xkb_keymap_key_repeats</link>&#32;keymap_key_repeats;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a20d60af617a47b1dbebcacc4cffb369a">PFN_xkb_state_new</link>&#32;state_new;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a04a57f9f8326bd39a1525e4e0edd4951">PFN_xkb_state_unref</link>&#32;state_unref;
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ac93bb3679df2634f72bb35e1587b0459">PFN_xkb_state_key_get_syms</link>&#32;state_key_get_syms;
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a872e4657e3e1127caeb678c0b253b4f0">PFN_xkb_state_update_mask</link>&#32;state_update_mask;
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2wl__platform_8h_1a963602febce41dbde7c037aaba7b7c0d">PFN_xkb_state_serialize_mods</link>&#32;state_serialize_mods;
295 
296 <emphasis role="preprocessor">#ifdef&#32;HAVE_XKBCOMMON_COMPOSE_H</emphasis>
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a220342367196970f53b774b9e2517d42">PFN_xkb_compose_table_new_from_locale</link>&#32;compose_table_new_from_locale;
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a94826943d69f9fce48bb246457692c2e">PFN_xkb_compose_table_unref</link>&#32;compose_table_unref;
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a36a51971876d7465f817c4588e082d92">PFN_xkb_compose_state_new</link>&#32;compose_state_new;
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a5b405c88d81a608a1a447ac889f6485b">PFN_xkb_compose_state_unref</link>&#32;compose_state_unref;
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a58829e3e18572f5e5e8d7d0349b3f092">PFN_xkb_compose_state_feed</link>&#32;compose_state_feed;
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aad8c18022b37e3cd5d8e38a621fa42ed">PFN_xkb_compose_state_get_status</link>&#32;compose_state_get_status;
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a88d4343fefb99b57a83cb2609eebdf87">PFN_xkb_compose_state_get_one_sym</link>&#32;compose_state_get_one_sym;
304 <emphasis role="preprocessor">#endif</emphasis>
305 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1ac0e5830de529d692277f84304532f20e">xkb</link>;
306 
307 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a852a7f04519e1fe6503882c00250b01b">pointerFocus</link>;
308 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a1ccf957357550ff5f5ecefe1105ae469">keyboardFocus</link>;
309 
310 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
312 
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a97c17b89b36185eaf2c492ddc20644de">PFN_wl_cursor_theme_load</link>&#32;theme_load;
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a028b3d9313486c63f918b370f4290b46">PFN_wl_cursor_theme_destroy</link>&#32;theme_destroy;
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1acb234d6f651a7980af64e4ff4367eaf9">PFN_wl_cursor_theme_get_cursor</link>&#32;theme_get_cursor;
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a3e1d2df516e6a041fa3edf6d13a2c2d9">PFN_wl_cursor_image_get_buffer</link>&#32;image_get_buffer;
317 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a06e9109651d8889fca03355a841d30a8">cursor</link>;
318 
319 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>{
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a6fba32c719730bbaaeb8b757518ca0d1">handle</link>;
321 
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2wl__platform_8h_1adacdd6e2d2a0660619ede36efd042c99">PFN_wl_egl_window_create</link>&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a375d4c42d385db14e42dfaee1d9725cb">window_create</link>;
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2wl__platform_8h_1a2727d08bef446572e6f9e26801506ae1">PFN_wl_egl_window_destroy</link>&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a59f724961cfe6637dd3dd6d904d5b4fa">window_destroy</link>;
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2wl__platform_8h_1adcf78e57b989ea0e561208099dada945">PFN_wl_egl_window_resize</link>&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a98dd8ae02e93fd6dbc3ac7942cae93b9">window_resize</link>;
325 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct___g_l_f_wlibrary_wayland_1a9d988274df932b9c2e902c36c5ba00cf">egl</link>;
326 
327 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1aea3fbae5be24849acafc096b9f5eb755">_GLFWlibraryWayland</link>;
328 
329 <emphasis role="comment">//&#32;Wayland-specific&#32;per-monitor&#32;data</emphasis>
330 <emphasis role="comment">//</emphasis>
331 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link>
332 {
333 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_output*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_wayland_1aed900aa87592b3abd0de0f1afeab3975">output</link>;
334 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_wayland_1acaa3487833fc0608d1d9ed173f0d9847">name</link>;
335 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_wayland_1a700e0ff483fcbe4376f9e25ece6a0f85">currentMode</link>;
336 
337 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_wayland_1a5f0f991409f35f64ba5ba68f80f2aa45">x</link>;
338 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_wayland_1a3e64b76803000be41abacc0045486cda">y</link>;
339 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor_wayland_1a7f39dce4375566da803f3441350a8c8a">scale</link>;
340 
341 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ab91578847da8ca2e148753a63f84d9a0">_GLFWmonitorWayland</link>;
342 
343 <emphasis role="comment">//&#32;Wayland-specific&#32;per-cursor&#32;data</emphasis>
344 <emphasis role="comment">//</emphasis>
345 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link>
346 {
347 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor">wl_cursor</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1a2170f8a8f2ea1ad6be308e14fb3f9621">cursor</link>;
348 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor">wl_cursor</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1ac6ff2fccfe5f098c0e8998f06003d737">cursorHiDPI</link>;
349 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_buffer*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1a6c42fe6c32960010c23156e73fa96bd0">buffer</link>;
350 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1ab8d34850bc04dad0d900a4fdf1b503dc">width</link>,&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1a82da430425752b10026d8d9a119efb99">height</link>;
351 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1a21136cecf3cbb7ecdba1ab5bf29d9050">xhot</link>,&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1a4aa9d790b2e10cb97120ede960f7f9ef">yhot</link>;
352 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland_1a18e43887e4ce789eaa0f0ca811fb9b35">currentImage</link>;
353 }&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1ab9e42e1bf8aaa05d5b515907e683af86">_GLFWcursorWayland</link>;
354 
355 
356 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__platform_8h_1a4061b6ec759c796455591e25a0de8c4b">_glfwAddOutputWayland</link>(<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_namespaceversion">version</link>);
357 
</programlisting></section>
