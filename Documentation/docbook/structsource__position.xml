<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structsource__position" xml:lang="en-US">
<title>source_position Struct Reference</title>
<indexterm><primary>source_position</primary></indexterm>
<para>

<para>A source document line-and-column pair. </para>
 
</para>
<para>
<computeroutput>#include &lt;source_region.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> constexpr <link linkend="_structsource__position_1ad57d7636a7795a792999ae202ed34ea9">operator bool</link> () const noexcept</para>

<para>Returns true if both line and column numbers are non-zero. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> constexpr <link linkend="_structsource__position_1ad57d7636a7795a792999ae202ed34ea9">operator bool</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>source_index <link linkend="_structsource__position_1a4b07caf7db950b97a6f09be1572ba15d">line</link></para>

<para>The line number. </para>
</listitem>
            <listitem><para>source_index <link linkend="_structsource__position_1a5e87746bbf1a06bcf8b6ba7f566730b9">column</link></para>

<para>The column number. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a5f01f89fd02f2cd6b1e8fb7760c3a5d7">operator==</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>

<para>Equality operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a2112294fcdbb8df8b14ded867b99ef24">operator!=</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>

<para>Inequality operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a844dfdf3b73149879070142eeb69712b">operator&lt;</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>

<para>Less-than operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1ac0c0e656e17c7fd26cef0170cdd41bc9">operator&lt;=</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>

<para>Less-than-or-equal-to operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a68a1326c76ec10ce456a66bd64b7cf93">operator&gt;</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>

<para>Greater-than operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a1b19b7e0e6f3d5d7e8f7682b7dcf2b31">operator&gt;=</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>

<para>Greater-than-or-equal-to operator. </para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_structsource__position_1adff6ba2a042bbaa4be4eaf88c4b58062">operator&lt;&lt;</link> (std::ostream &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs)</para>

<para>Prints a <link linkend="_structsource__position">source_position</link> to a stream. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a5f01f89fd02f2cd6b1e8fb7760c3a5d7">operator==</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a2112294fcdbb8df8b14ded867b99ef24">operator!=</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a844dfdf3b73149879070142eeb69712b">operator&lt;</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1ac0c0e656e17c7fd26cef0170cdd41bc9">operator&lt;=</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a68a1326c76ec10ce456a66bd64b7cf93">operator&gt;</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structsource__position_1a1b19b7e0e6f3d5d7e8f7682b7dcf2b31">operator&gt;=</link> (const <link linkend="_structsource__position">source_position</link> &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_structsource__position_1adff6ba2a042bbaa4be4eaf88c4b58062">operator&lt;&lt;</link> (std::ostream &amp;lhs, const <link linkend="_structsource__position">source_position</link> &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A source document line-and-column pair. </para>



<para>\detail \cpp auto table = toml::parse_file(&quot;config.toml&quot;sv); std::cout &lt;&lt; &quot;The node &apos;description&apos; was defined at &quot;sv &lt;&lt; <link linkend="_classtable_1a3a338dc69074b9f155ca52f044ef0b07">table.get</link>(&quot;description&quot;)-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.begin() &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out The value &apos;description&apos; was defined at line 7, column 15 \eout</para>

<para><formalpara><title>Remarks</title>

<para>toml++&apos;s parser is unicode-aware insofar as it knows how to handle non-ASCII whitespace and newline characters, but it doesn&apos;t give much thought to combining marks, grapheme clusters vs. characters, et cetera. If a TOML document contains lots of codepoints outside of the ASCII range you may find that your source_positions don&apos;t match those given by a text editor (typically the line numbers will be accurate but column numbers will be too high). <emphasis role="bold">This is not an error.</emphasis> I&apos;ve chosen this behaviour as a deliberate trade-off between parser complexity and correctness. </para>
</formalpara>
</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structsource__position_1ad57d7636a7795a792999ae202ed34ea9"/><section>
    <title>operator bool()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator bool</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> constexpr source_position::operator <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns true if both line and column numbers are non-zero. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1ad57d7636a7795a792999ae202ed34ea9"/><section>
    <title>operator bool()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator bool</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> constexpr source_position::operator <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_structsource__position_1a2112294fcdbb8df8b14ded867b99ef24"/><section>
    <title>operator!=<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Inequality operator. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1a2112294fcdbb8df8b14ded867b99ef24"/><section>
    <title>operator!=<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structsource__position_1a844dfdf3b73149879070142eeb69712b"/><section>
    <title>operator&lt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Less-than operator. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1a844dfdf3b73149879070142eeb69712b"/><section>
    <title>operator&lt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structsource__position_1adff6ba2a042bbaa4be4eaf88c4b58062"/><section>
    <title>operator&lt;&lt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Prints a <link linkend="_structsource__position">source_position</link> to a stream. </para>
</para>

<para>\detail \cpp auto tbl = toml::parse(&quot;bar = 42&quot;sv);</para>

<para>std::cout &lt;&lt; &quot;The value for &apos;bar&apos; was found on &quot;sv &lt;&lt; tbl.get(&quot;bar&quot;)-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.begin() &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out The value for &apos;bar&apos; was found on line 1, column 7 \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>lhs</entry><entry>
<para>The stream. </para>
</entry>
                            </row>
                            <row>
<entry>rhs</entry><entry>
<para>The <link linkend="_structsource__position">source_position</link>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The input stream. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_structsource__position_1adff6ba2a042bbaa4be4eaf88c4b58062"/><section>
    <title>operator&lt;&lt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structsource__position_1ac0c0e656e17c7fd26cef0170cdd41bc9"/><section>
    <title>operator&lt;=<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Less-than-or-equal-to operator. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1ac0c0e656e17c7fd26cef0170cdd41bc9"/><section>
    <title>operator&lt;=<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structsource__position_1a5f01f89fd02f2cd6b1e8fb7760c3a5d7"/><section>
    <title>operator==<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Equality operator. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1a5f01f89fd02f2cd6b1e8fb7760c3a5d7"/><section>
    <title>operator==<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structsource__position_1a68a1326c76ec10ce456a66bd64b7cf93"/><section>
    <title>operator&gt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&gt;</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt; (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Greater-than operator. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1a68a1326c76ec10ce456a66bd64b7cf93"/><section>
    <title>operator&gt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&gt;</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt; (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structsource__position_1a1b19b7e0e6f3d5d7e8f7682b7dcf2b31"/><section>
    <title>operator&gt;=<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&gt;=</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt;= (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Greater-than-or-equal-to operator. </para>
</para>
</section>
<anchor xml:id="_structsource__position_1a1b19b7e0e6f3d5d7e8f7682b7dcf2b31"/><section>
    <title>operator&gt;=<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&gt;=</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt;= (const <link linkend="_structsource__position">source_position</link> &amp; lhs, const <link linkend="_structsource__position">source_position</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structsource__position_1a5e87746bbf1a06bcf8b6ba7f566730b9"/><section>
    <title>column</title>
<indexterm><primary>column</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>column</secondary></indexterm>
<para><computeroutput>source_index source_position::column</computeroutput></para><para>

<para>The column number. </para>
</para>

<para><formalpara><title>Remarks</title>

<para>Valid column numbers start at 1. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_structsource__position_1a4b07caf7db950b97a6f09be1572ba15d"/><section>
    <title>line</title>
<indexterm><primary>line</primary><secondary>source_position</secondary></indexterm>
<indexterm><primary>source_position</primary><secondary>line</secondary></indexterm>
<para><computeroutput>source_index source_position::line</computeroutput></para><para>

<para>The line number. </para>
</para>

<para><formalpara><title>Remarks</title>

<para>Valid line numbers start at 1. </para>
</formalpara>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/<link linkend="_source__region_8h">source_region.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
