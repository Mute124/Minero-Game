<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2glfw_2src_2monitor_8c" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/glfw/src/monitor.c File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/glfw/src/monitor.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;internal.h&quot;<?linebreak?>#include &lt;assert.h&gt;<?linebreak?>#include &lt;math.h&gt;<?linebreak?>#include &lt;float.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;limits.h&gt;<?linebreak?></programlisting>Include dependency graph for monitor.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1a2a45c0c0677b73011b7364e2cdd9760d">_glfwInputMonitor</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int action, int placement)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1a079c865515272434dc96d0f384beda9e">_glfwInputMonitorWindow</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1ab4ba217654cabec88984af9ffea64850">_glfwAllocMonitor</link> (const char *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>, int widthMM, int heightMM)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1a5555e8488ac56b446d0a28d3330666f6">_glfwFreeMonitor</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1acb6a8b432b06fd0accdfc0e046785109">_glfwAllocGammaArrays</link> (<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp, unsigned int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1a9ec7f45d75c8b6435f49b22b86672806">_glfwFreeGammaArrays</link> (<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
            <listitem><para>const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1a4976e6b5e27cd6dfefcd5bd89944dc3e">_glfwChooseVideoMode</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *desired)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1aa4fbaa8f018b65095626fc495a53ba9f">_glfwCompareVideoModes</link> (const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *fm, const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *sm)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2external_2glfw_2src_2monitor_8c_1a3f83dfd3a9beffeba9bac74ec15071a0">_glfwSplitBPP</link> (int bpp, int *red, int *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aef30e4e3dccbffce99b7509d5366faef">green</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ab4fcc6ff520ae4d9de259c8468a5cd93">blue</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> ** <link linkend="_group__monitor_1ga8c78e5db186ee10d00c053faf81998af">glfwGetMonitors</link> (int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>

<para>Returns the currently connected monitors. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> * <link linkend="_group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e">glfwGetPrimaryMonitor</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>

<para>Returns the primary monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1ga45b5481a614ad7beb2aade9746d07563">glfwGetMonitorPos</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, int *xpos, int *ypos)</para>

<para>Returns the position of the monitor&apos;s viewport on the virtual screen. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1ga5a3ac0f6e3786df47aabccfb5760b31d">glfwGetMonitorWorkarea</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, int *xpos, int *ypos, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>

<para>Retrieves the work area of the monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1gad0e93a9e42b32394369cabbbdc1ab702">glfwGetMonitorPhysicalSize</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, int *widthMM, int *heightMM)</para>

<para>Returns the physical size of the monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff">glfwGetMonitorContentScale</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, float *xscale, float *yscale)</para>

<para>Retrieves the content scale for the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> const char * <link linkend="_group__monitor_1ga6d0ee079c807cd123b56dc3fc01e8fd9">glfwGetMonitorName</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>

<para>Returns the name of the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1ga6d89c74c1c293f0ab78a00c3c6d1ae44">glfwSetMonitorUserPointer</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>)</para>

<para>Sets the user pointer of the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_group__monitor_1ga13cb11e8f507dbc477e10a040f0fad7f">glfwGetMonitorUserPointer</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>

<para>Returns the user pointer of the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__monitor_1gaabe16caca8dea952504dfdebdf4cd249">GLFWmonitorfun</link> <link linkend="_group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1">glfwSetMonitorCallback</link> (<link linkend="_group__monitor_1gaabe16caca8dea952504dfdebdf4cd249">GLFWmonitorfun</link> cbfun)</para>

<para>Sets the monitor configuration callback. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * <link linkend="_group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79">glfwGetVideoModes</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>

<para>Returns the available video modes for the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * <link linkend="_group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e">glfwGetVideoMode</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>

<para>Returns the current mode of the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1ga3e4ab484476c935b4cd0bf49a5c429d6">glfwSetGamma</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, float gamma)</para>

<para>Generates a gamma ramp and sets it for the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * <link linkend="_group__monitor_1gafe7b41852c1a14fe978f0e5381969885">glfwGetGammaRamp</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>

<para>Returns the current gamma ramp for the specified monitor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558">glfwSetGammaRamp</link> (<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>

<para>Sets the current gamma ramp for the specified monitor. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1acb6a8b432b06fd0accdfc0e046785109"/><section>
    <title>_glfwAllocGammaArrays()</title>
<indexterm><primary>_glfwAllocGammaArrays</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwAllocGammaArrays</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwAllocGammaArrays (<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp, unsigned int size)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c_acb6a8b432b06fd0accdfc0e046785109_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1ab4ba217654cabec88984af9ffea64850"/><section>
    <title>_glfwAllocMonitor()</title>
<indexterm><primary>_glfwAllocMonitor</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwAllocMonitor</secondary></indexterm>
<para><computeroutput><link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * _glfwAllocMonitor (const char * name, int widthMM, int heightMM)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c_ab4ba217654cabec88984af9ffea64850_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1a4976e6b5e27cd6dfefcd5bd89944dc3e"/><section>
    <title>_glfwChooseVideoMode()</title>
<indexterm><primary>_glfwChooseVideoMode</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwChooseVideoMode</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * _glfwChooseVideoMode (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * desired)</computeroutput></para></section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1aa4fbaa8f018b65095626fc495a53ba9f"/><section>
    <title>_glfwCompareVideoModes()</title>
<indexterm><primary>_glfwCompareVideoModes</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwCompareVideoModes</secondary></indexterm>
<para><computeroutput>int _glfwCompareVideoModes (const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * fm, const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * sm)</computeroutput></para></section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1a9ec7f45d75c8b6435f49b22b86672806"/><section>
    <title>_glfwFreeGammaArrays()</title>
<indexterm><primary>_glfwFreeGammaArrays</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwFreeGammaArrays</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwFreeGammaArrays (<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c_a9ec7f45d75c8b6435f49b22b86672806_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1a5555e8488ac56b446d0a28d3330666f6"/><section>
    <title>_glfwFreeMonitor()</title>
<indexterm><primary>_glfwFreeMonitor</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwFreeMonitor</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwFreeMonitor (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c_a5555e8488ac56b446d0a28d3330666f6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1a2a45c0c0677b73011b7364e2cdd9760d"/><section>
    <title>_glfwInputMonitor()</title>
<indexterm><primary>_glfwInputMonitor</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwInputMonitor</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwInputMonitor (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int action, int placement)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2external_2glfw_2src_2monitor_8c_a2a45c0c0677b73011b7364e2cdd9760d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1a079c865515272434dc96d0f384beda9e"/><section>
    <title>_glfwInputMonitorWindow()</title>
<indexterm><primary>_glfwInputMonitorWindow</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwInputMonitorWindow</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwInputMonitorWindow (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_lib_2external_2glfw_2src_2monitor_8c_1a3f83dfd3a9beffeba9bac74ec15071a0"/><section>
    <title>_glfwSplitBPP()</title>
<indexterm><primary>_glfwSplitBPP</primary><secondary>monitor.c</secondary></indexterm>
<indexterm><primary>monitor.c</primary><secondary>_glfwSplitBPP</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwSplitBPP (int bpp, int * red, int * green, int * blue)</computeroutput></para></section>
</section>
</section>
