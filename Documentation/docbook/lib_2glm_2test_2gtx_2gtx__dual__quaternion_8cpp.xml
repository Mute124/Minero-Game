<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/test/gtx/gtx_dual_quaternion.cpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/test/gtx/gtx_dual_quaternion.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;glm/gtx/dual_quaternion.hpp&gt;<?linebreak?>#include &lt;glm/gtc/matrix_transform.hpp&gt;<?linebreak?>#include &lt;glm/gtc/epsilon.hpp&gt;<?linebreak?>#include &lt;glm/gtx/euler_angles.hpp&gt;<?linebreak?>#include &lt;glm/vector_relational.hpp&gt;<?linebreak?></programlisting>Include dependency graph for gtx_dual_quaternion.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1abd75661fe7969e19439052a5f69ba5d1">GLM_ENABLE_EXPERIMENTAL</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1ac627c73454e4c96daef4a3fa6b2408fc">GLM_FORCE_CTOR_INIT</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a15d4ab45c8c63b5f4f6bd1b7638af216">myrand</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a80df63507f4c77709540ce21447e5bf9">myfrand</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a5e6757078c89129c7fadf69980e24e99">test_dquat_type</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1ac2c863448808fd84b6364d7c07db5b97">test_scalars</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a7c7c3ef3d24c7264a6d5994f37387983">test_inverse</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1af4730e4e4b7e971bca50687066afd703">test_mul</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a6dce74ed5e7708a455b58607b14d49d7">test_dual_quat_ctr</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a25e95108e72010cf7c520c07c17d97db">test_size</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1abd75661fe7969e19439052a5f69ba5d1"/><section>
    <title>GLM_ENABLE_EXPERIMENTAL</title>
<indexterm><primary>GLM_ENABLE_EXPERIMENTAL</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>GLM_ENABLE_EXPERIMENTAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLM_ENABLE_EXPERIMENTAL</computeroutput></para></section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1ac627c73454e4c96daef4a3fa6b2408fc"/><section>
    <title>GLM_FORCE_CTOR_INIT</title>
<indexterm><primary>GLM_FORCE_CTOR_INIT</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>GLM_FORCE_CTOR_INIT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLM_FORCE_CTOR_INIT</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a80df63507f4c77709540ce21447e5bf9"/><section>
    <title>myfrand()</title>
<indexterm><primary>myfrand</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>myfrand</secondary></indexterm>
<para><computeroutput>float myfrand ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_a80df63507f4c77709540ce21447e5bf9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a15d4ab45c8c63b5f4f6bd1b7638af216"/><section>
    <title>myrand()</title>
<indexterm><primary>myrand</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>myrand</secondary></indexterm>
<para><computeroutput>int myrand ( )</computeroutput></para></section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a5e6757078c89129c7fadf69980e24e99"/><section>
    <title>test_dquat_type()</title>
<indexterm><primary>test_dquat_type</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>test_dquat_type</secondary></indexterm>
<para><computeroutput>int test_dquat_type ( )</computeroutput></para></section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a6dce74ed5e7708a455b58607b14d49d7"/><section>
    <title>test_dual_quat_ctr()</title>
<indexterm><primary>test_dual_quat_ctr</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>test_dual_quat_ctr</secondary></indexterm>
<para><computeroutput>int test_dual_quat_ctr ( )</computeroutput></para></section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a7c7c3ef3d24c7264a6d5994f37387983"/><section>
    <title>test_inverse()</title>
<indexterm><primary>test_inverse</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>test_inverse</secondary></indexterm>
<para><computeroutput>int test_inverse ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_a7c7c3ef3d24c7264a6d5994f37387983_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1af4730e4e4b7e971bca50687066afd703"/><section>
    <title>test_mul()</title>
<indexterm><primary>test_mul</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>test_mul</secondary></indexterm>
<para><computeroutput>int test_mul ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_af4730e4e4b7e971bca50687066afd703_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1ac2c863448808fd84b6364d7c07db5b97"/><section>
    <title>test_scalars()</title>
<indexterm><primary>test_scalars</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>test_scalars</secondary></indexterm>
<para><computeroutput>int test_scalars ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_ac2c863448808fd84b6364d7c07db5b97_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_1a25e95108e72010cf7c520c07c17d97db"/><section>
    <title>test_size()</title>
<indexterm><primary>test_size</primary><secondary>gtx_dual_quaternion.cpp</secondary></indexterm>
<indexterm><primary>gtx_dual_quaternion.cpp</primary><secondary>test_size</secondary></indexterm>
<para><computeroutput>int test_size ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2glm_2test_2gtx_2gtx__dual__quaternion_8cpp_a25e95108e72010cf7c520c07c17d97db_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
