<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2ext_2quaternion__transform_8inl_source" xml:lang="en-US">
<title>quaternion_transform.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/ext/quaternion_transform.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
2 {
3 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
4 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__ext__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950">rotate</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
5 &#32;&#32;&#32;&#32;{
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;Tmp&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
7 
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Axis&#32;of&#32;rotation&#32;must&#32;be&#32;normalised</emphasis>
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;<link linkend="_namespaceglm_1abcd8538aa95a8963803ec42c2fd654cd">glm::length</link>(Tmp);
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1))&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.001))
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;oneOverLen&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tmp.x&#32;*=&#32;oneOverLen;
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tmp.y&#32;*=&#32;oneOverLen;
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tmp.z&#32;*=&#32;oneOverLen;
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
17 
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;AngleRad(<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>);
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;Sin&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>(AngleRad&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5));
20 
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q&#32;*&#32;qua&lt;T,&#32;Q&gt;(<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>(AngleRad&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)),&#32;Tmp.x&#32;*&#32;Sin,&#32;Tmp.y&#32;*&#32;Sin,&#32;Tmp.z&#32;*&#32;Sin);
22 &#32;&#32;&#32;&#32;}
23 }<emphasis role="comment">//namespace&#32;glm</emphasis>
24 
</programlisting></section>
