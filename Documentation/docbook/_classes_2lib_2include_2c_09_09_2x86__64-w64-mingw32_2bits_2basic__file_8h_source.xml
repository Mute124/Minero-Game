<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2basic__file_8h_source" xml:lang="en-US">
<title>basic_file.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/x86_64-w64-mingw32/bits/basic_file.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Wrapper&#32;of&#32;C-language&#32;FILE&#32;struct&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2000-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//</emphasis>
26 <emphasis role="comment">//&#32;ISO&#32;C++&#32;14882:&#32;27.8&#32;&#32;File-based&#32;streams</emphasis>
27 <emphasis role="comment">//</emphasis>
28 
34 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_BASIC_FILE_STDIO_H</emphasis>
35 <emphasis role="preprocessor">#define&#32;_GLIBCXX_BASIC_FILE_STDIO_H&#32;1</emphasis>
36 
37 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
38 
39 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;bits/c++io.h&gt;</emphasis>&#32;&#32;<emphasis role="comment">//&#32;for&#32;__c_lock&#32;and&#32;__c_file</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;bits/move.h&gt;</emphasis>&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;swap</emphasis>
42 <emphasis role="preprocessor">#include&#32;&lt;ios&gt;</emphasis>
43 
44 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
45 {
46 _GLIBCXX_BEGIN_NAMESPACE_VERSION
47 
48 &#32;&#32;<emphasis role="comment">//&#32;Generic&#32;declaration.</emphasis>
49 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT&gt;
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>__basic_file;
51 
52 &#32;&#32;<emphasis role="comment">//&#32;Specialization.</emphasis>
53 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>__basic_file&lt;char&gt;
55 &#32;&#32;&#32;&#32;{
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Underlying&#32;data&#32;source/sink.</emphasis>
57 &#32;&#32;&#32;&#32;&#32;&#32;__c_file*&#32;&#32;&#32;&#32;&#32;_M_cfile;
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;True&#32;iff&#32;we&#32;opened&#32;_M_cfile,&#32;and&#32;thus&#32;must&#32;close&#32;it&#32;ourselves.</emphasis>
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;_M_cfile_created;
61 
62 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
63 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file(__c_lock*&#32;__lock&#32;=&#32;0)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
64 
65 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file(__basic_file&amp;&amp;&#32;__rv,&#32;__c_lock*&#32;=&#32;0)&#32;noexcept
67 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_cfile(__rv._M_cfile),&#32;_M_cfile_created(__rv._M_cfile_created)
68 &#32;&#32;&#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;__rv._M_cfile&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
70 &#32;&#32;&#32;&#32;__rv._M_cfile_created&#32;=&#32;<emphasis role="keyword">false</emphasis>;
71 &#32;&#32;&#32;&#32;&#32;&#32;}
72 
73 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;__basic_file&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
74 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file&amp;&#32;operator=(__basic_file&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
75 
76 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;swap(__basic_file&amp;&#32;__f)&#32;<emphasis role="keyword">noexcept</emphasis>
78 &#32;&#32;&#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_cfile,&#32;__f._M_cfile);
80 &#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_cfile_created,&#32;__f._M_cfile_created);
81 &#32;&#32;&#32;&#32;&#32;&#32;}
82 <emphasis role="preprocessor">#endif</emphasis>
83 
84 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file*
85 &#32;&#32;&#32;&#32;&#32;&#32;open(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;ios_base::openmode&#32;__mode,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__prot&#32;=&#32;0664);
86 
87 <emphasis role="preprocessor">#if&#32;_GLIBCXX_HAVE__WFOPEN&#32;&amp;&amp;&#32;_GLIBCXX_USE_WCHAR_T</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file*
89 &#32;&#32;&#32;&#32;&#32;&#32;open(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;__name,&#32;ios_base::openmode&#32;__mode);
90 <emphasis role="preprocessor">#endif</emphasis>
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file*
93 &#32;&#32;&#32;&#32;&#32;&#32;sys_open(__c_file*&#32;__file,&#32;ios_base::openmode);
94 
95 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file*
96 &#32;&#32;&#32;&#32;&#32;&#32;sys_open(<emphasis role="keywordtype">int</emphasis>&#32;__fd,&#32;ios_base::openmode&#32;__mode)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;__basic_file*
99 &#32;&#32;&#32;&#32;&#32;&#32;close();
100 
101 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a1cfdc101e86feb8a053ddc71bbef339b">_GLIBCXX_PURE</link>&#32;<emphasis role="keywordtype">bool</emphasis>
102 &#32;&#32;&#32;&#32;&#32;&#32;is_open()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a1cfdc101e86feb8a053ddc71bbef339b">_GLIBCXX_PURE</link>&#32;<emphasis role="keywordtype">int</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;fd()&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
106 
107 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a1cfdc101e86feb8a053ddc71bbef339b">_GLIBCXX_PURE</link>&#32;__c_file*
108 &#32;&#32;&#32;&#32;&#32;&#32;file()&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
109 
110 &#32;&#32;&#32;&#32;&#32;&#32;~__basic_file();
111 
112 &#32;&#32;&#32;&#32;&#32;&#32;streamsize
113 &#32;&#32;&#32;&#32;&#32;&#32;xsputn(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__s,&#32;streamsize&#32;__n);
114 
115 &#32;&#32;&#32;&#32;&#32;&#32;streamsize
116 &#32;&#32;&#32;&#32;&#32;&#32;xsputn_2(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__s1,&#32;streamsize&#32;__n1,
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__s2,&#32;streamsize&#32;__n2);
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;streamsize
120 &#32;&#32;&#32;&#32;&#32;&#32;xsgetn(<emphasis role="keywordtype">char</emphasis>*&#32;__s,&#32;streamsize&#32;__n);
121 
122 &#32;&#32;&#32;&#32;&#32;&#32;streamoff
123 &#32;&#32;&#32;&#32;&#32;&#32;seekoff(streamoff&#32;__off,&#32;ios_base::seekdir&#32;__way)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1addb29f0a98e73f8d23d83bb9de5bc53d">sync</link>();
127 
128 &#32;&#32;&#32;&#32;&#32;&#32;streamsize
129 &#32;&#32;&#32;&#32;&#32;&#32;showmanyc();
130 &#32;&#32;&#32;&#32;};
131 
132 _GLIBCXX_END_NAMESPACE_VERSION
133 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
134 
135 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
