<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2gtx_2intersect_8inl_source" xml:lang="en-US">
<title>intersect.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/gtx/intersect.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
4 {
5 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
6 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__intersect_1gad3697a9700ea379739a667ea02573488">intersectRayPlane</link>
7 &#32;&#32;&#32;&#32;(
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;orig,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;dir,
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;planeOrig,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;planeNormal,
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;&amp;&#32;intersectionDistance
11 &#32;&#32;&#32;&#32;)
12 &#32;&#32;&#32;&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;d&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(dir,&#32;planeNormal);
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;=&#32;std::numeric_limits&lt;typename&#32;genType::value_type&gt;::epsilon();
15 
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">glm::abs</link>(d)&#32;&gt;&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>)&#32;&#32;<emphasis role="comment">//&#32;if&#32;dir&#32;and&#32;planeNormal&#32;are&#32;not&#32;perpendicular</emphasis>
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;<emphasis role="keyword">const</emphasis>&#32;tmp_intersectionDistance&#32;=&#32;&#32;&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(planeOrig&#32;-&#32;orig,&#32;planeNormal)&#32;/&#32;d;
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp_intersectionDistance&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>typename&#32;genType::value_type<emphasis role="keyword">&gt;</emphasis>(0))&#32;{&#32;<emphasis role="comment">//&#32;allow&#32;only&#32;intersections</emphasis>
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionDistance&#32;=&#32;tmp_intersectionDistance;
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
24 
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
26 &#32;&#32;&#32;&#32;}
27 
28 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
29 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__intersect_1ga65bf2c594482f04881c36bc761f9e946">intersectRayTriangle</link>
30 &#32;&#32;&#32;&#32;(
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;orig,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;dir,
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;vert0,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;vert1,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;vert2,
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;2,&#32;T,&#32;Q&gt;&amp;&#32;baryPosition,&#32;T&amp;&#32;<link linkend="_namespacedistance">distance</link>
34 &#32;&#32;&#32;&#32;)
35 &#32;&#32;&#32;&#32;{
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;vectors&#32;for&#32;two&#32;edges&#32;sharing&#32;vert0</emphasis>
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;edge1&#32;=&#32;vert1&#32;-&#32;vert0;
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;edge2&#32;=&#32;vert2&#32;-&#32;vert0;
39 
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;begin&#32;calculating&#32;determinant&#32;-&#32;also&#32;used&#32;to&#32;calculate&#32;U&#32;parameter</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;p&#32;=&#32;<link linkend="_group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa">glm::cross</link>(dir,&#32;edge2);
42 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;determinant&#32;is&#32;near&#32;zero,&#32;ray&#32;lies&#32;in&#32;plane&#32;of&#32;triangle</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;det&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(edge1,&#32;p);
45 
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;Perpendicular(0);
47 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(det&#32;&gt;&#32;std::numeric_limits&lt;T&gt;::epsilon())
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;distance&#32;from&#32;vert0&#32;to&#32;ray&#32;origin</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;dist&#32;=&#32;orig&#32;-&#32;vert0;
52 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;U&#32;parameter&#32;and&#32;test&#32;bounds</emphasis>
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;baryPosition.x&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(dist,&#32;p);
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(baryPosition.x&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)&#32;||&#32;baryPosition.x&#32;&gt;&#32;det)
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;prepare&#32;to&#32;test&#32;V&#32;parameter</emphasis>
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Perpendicular&#32;=&#32;<link linkend="_group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa">glm::cross</link>(dist,&#32;edge1);
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;V&#32;parameter&#32;and&#32;test&#32;bounds</emphasis>
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;baryPosition.y&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(dir,&#32;Perpendicular);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((baryPosition.y&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))&#32;||&#32;((baryPosition.x&#32;+&#32;baryPosition.y)&#32;&gt;&#32;det))
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(det&#32;&lt;&#32;-std::numeric_limits&lt;T&gt;::epsilon())
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;distance&#32;from&#32;vert0&#32;to&#32;ray&#32;origin</emphasis>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;dist&#32;=&#32;orig&#32;-&#32;vert0;
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;U&#32;parameter&#32;and&#32;test&#32;bounds</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;baryPosition.x&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(dist,&#32;p);
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((baryPosition.x&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))&#32;||&#32;(baryPosition.x&#32;&lt;&#32;det))
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
75 
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;prepare&#32;to&#32;test&#32;V&#32;parameter</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Perpendicular&#32;=&#32;<link linkend="_group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa">glm::cross</link>(dist,&#32;edge1);
78 
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;V&#32;parameter&#32;and&#32;test&#32;bounds</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;baryPosition.y&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(dir,&#32;Perpendicular);
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((baryPosition.y&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))&#32;||&#32;(baryPosition.x&#32;+&#32;baryPosition.y&#32;&lt;&#32;det))
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;ray&#32;is&#32;parallel&#32;to&#32;the&#32;plane&#32;of&#32;the&#32;triangle</emphasis>
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;inv_det&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;det;
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;distance,&#32;ray&#32;intersects&#32;triangle</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedistance">distance</link>&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(edge2,&#32;Perpendicular)&#32;*&#32;inv_det;
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;baryPosition&#32;*=&#32;inv_det;
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
94 &#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
97 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__intersect_1ga9d29b9b3acb504d43986502f42740df4">intersectLineTriangle</link>
98 &#32;&#32;&#32;&#32;(
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;orig,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;dir,
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;vert0,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;vert1,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;vert2,
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;&amp;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>
102 &#32;&#32;&#32;&#32;)
103 &#32;&#32;&#32;&#32;{
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;=&#32;std::numeric_limits&lt;typename&#32;genType::value_type&gt;::epsilon();
105 
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;edge1&#32;=&#32;vert1&#32;-&#32;vert0;
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;edge2&#32;=&#32;vert2&#32;-&#32;vert0;
108 
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;Perpendicular&#32;=&#32;<link linkend="_namespacecross">cross</link>(dir,&#32;edge2);
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;det&#32;=&#32;<link linkend="_namespacedot">dot</link>(edge1,&#32;Perpendicular);
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(det&#32;&gt;&#32;-<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;&amp;&amp;&#32;det&#32;&lt;&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>)
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;inv_det&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type(1)&#32;/&#32;det;
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;Tengant&#32;=&#32;orig&#32;-&#32;vert0;
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;=&#32;<link linkend="_namespacedot">dot</link>(Tengant,&#32;Perpendicular)&#32;*&#32;inv_det;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;&lt;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type(0)&#32;||&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;&gt;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type(1))
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
122 
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;Cotengant&#32;=&#32;<link linkend="_namespacecross">cross</link>(Tengant,&#32;edge1);
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.z&#32;=&#32;<link linkend="_namespacedot">dot</link>(dir,&#32;Cotengant)&#32;*&#32;inv_det;
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.z&#32;&lt;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type(0)&#32;||&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;+&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.z&#32;&gt;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type(1))
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.x&#32;=&#32;<link linkend="_namespacedot">dot</link>(edge2,&#32;Cotengant)&#32;*&#32;inv_det;
130 
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
132 &#32;&#32;&#32;&#32;}
133 
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
135 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__intersect_1gac88f8cd84c4bcb5b947d56acbbcfa56e">intersectRaySphere</link>
136 &#32;&#32;&#32;&#32;(
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rayStarting,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rayNormalizedDirection,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;sphereCenter,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;sphereRadiusSquered,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;&amp;&#32;intersectionDistance
140 &#32;&#32;&#32;&#32;)
141 &#32;&#32;&#32;&#32;{
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;=&#32;std::numeric_limits&lt;typename&#32;genType::value_type&gt;::epsilon();
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;diff&#32;=&#32;sphereCenter&#32;-&#32;rayStarting;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;t0&#32;=&#32;<link linkend="_namespacedot">dot</link>(diff,&#32;rayNormalizedDirection);
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;dSquared&#32;=&#32;<link linkend="_namespacedot">dot</link>(diff,&#32;diff)&#32;-&#32;t0&#32;*&#32;t0;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;dSquared&#32;&gt;&#32;sphereRadiusSquered&#32;)
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;t1&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(&#32;sphereRadiusSquered&#32;-&#32;dSquared&#32;);
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionDistance&#32;=&#32;t0&#32;&gt;&#32;t1&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;?&#32;t0&#32;-&#32;t1&#32;:&#32;t0&#32;+&#32;t1;
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;intersectionDistance&#32;&gt;&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>;
153 &#32;&#32;&#32;&#32;}
154 
155 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
156 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__intersect_1gac88f8cd84c4bcb5b947d56acbbcfa56e">intersectRaySphere</link>
157 &#32;&#32;&#32;&#32;(
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rayStarting,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rayNormalizedDirection,
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;sphereCenter,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;sphereRadius,
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;&amp;&#32;intersectionPosition,&#32;genType&#32;&amp;&#32;intersectionNormal
161 &#32;&#32;&#32;&#32;)
162 &#32;&#32;&#32;&#32;{
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;<link linkend="_namespacedistance">distance</link>;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_group__gtx__intersect_1gac88f8cd84c4bcb5b947d56acbbcfa56e">intersectRaySphere</link>(&#32;rayStarting,&#32;rayNormalizedDirection,&#32;sphereCenter,&#32;sphereRadius&#32;*&#32;sphereRadius,&#32;<link linkend="_namespacedistance">distance</link>&#32;)&#32;)
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionPosition&#32;=&#32;rayStarting&#32;+&#32;rayNormalizedDirection&#32;*&#32;<link linkend="_namespacedistance">distance</link>;
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionNormal&#32;=&#32;(intersectionPosition&#32;-&#32;sphereCenter)&#32;/&#32;sphereRadius;
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
171 &#32;&#32;&#32;&#32;}
172 
173 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
174 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__intersect_1ga9c68139f3d8a4f3d7fe45f9dbc0de5b7">intersectLineSphere</link>
175 &#32;&#32;&#32;&#32;(
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;point0,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;point1,
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;sphereCenter,&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;sphereRadius,
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;&amp;&#32;intersectionPoint1,&#32;genType&#32;&amp;&#32;intersectionNormal1,
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;&amp;&#32;intersectionPoint2,&#32;genType&#32;&amp;&#32;intersectionNormal2
180 &#32;&#32;&#32;&#32;)
181 &#32;&#32;&#32;&#32;{
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;=&#32;std::numeric_limits&lt;typename&#32;genType::value_type&gt;::epsilon();
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;dir&#32;=&#32;<link linkend="_namespacenormalize">normalize</link>(point1&#32;-&#32;point0);
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;diff&#32;=&#32;sphereCenter&#32;-&#32;point0;
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;t0&#32;=&#32;<link linkend="_namespacedot">dot</link>(diff,&#32;dir);
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;dSquared&#32;=&#32;<link linkend="_namespacedot">dot</link>(diff,&#32;diff)&#32;-&#32;t0&#32;*&#32;t0;
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;dSquared&#32;&gt;&#32;sphereRadius&#32;*&#32;sphereRadius&#32;)
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;genType::value_type&#32;t1&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(&#32;sphereRadius&#32;*&#32;sphereRadius&#32;-&#32;dSquared&#32;);
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;t0&#32;&lt;&#32;t1&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2ext_2ext__quaternion__geometric_8cpp_1af427a1d48b1ac770377fc5bd3a380035">Epsilon</link>&#32;)
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;-t1;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionPoint1&#32;=&#32;point0&#32;+&#32;dir&#32;*&#32;(t0&#32;-&#32;t1);
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionNormal1&#32;=&#32;(intersectionPoint1&#32;-&#32;sphereCenter)&#32;/&#32;sphereRadius;
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionPoint2&#32;=&#32;point0&#32;+&#32;dir&#32;*&#32;(t0&#32;+&#32;t1);
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionNormal2&#32;=&#32;(intersectionPoint2&#32;-&#32;sphereCenter)&#32;/&#32;sphereRadius;
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
199 &#32;&#32;&#32;&#32;}
200 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
