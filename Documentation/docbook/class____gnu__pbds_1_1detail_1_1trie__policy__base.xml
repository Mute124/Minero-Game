<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base" xml:lang="en-US">
<title>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary></indexterm>
<para>

<para>Base class for trie policies. </para>
 
</para>
<para>
<computeroutput>#include &lt;trie_policy_base.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1trie__policy__base__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1trie__policy__base__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6b91a1a6cd0c7e8eb44d8df6678ef79c">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1af9ff0c8a456d4bc2b21f9b8c05b91a08">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">base_type::key_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a49b8957277ab37202cc98759ac42c197">key_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">base_type::key_const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a921d8de461c50386550503d70cd7a016">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6b91a1a6cd0c7e8eb44d8df6678ef79c">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1af9ff0c8a456d4bc2b21f9b8c05b91a08">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">base_type::key_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a49b8957277ab37202cc98759ac42c197">key_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">base_type::key_const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a921d8de461c50386550503d70cd7a016">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6b91a1a6cd0c7e8eb44d8df6678ef79c">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1af9ff0c8a456d4bc2b21f9b8c05b91a08">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">base_type::key_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a49b8957277ab37202cc98759ac42c197">key_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">base_type::key_const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a921d8de461c50386550503d70cd7a016">key_const_reference</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ade558c4d4c744deb280ad84c5b2bbc8f">end</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa007ad2ac0cf8acf696191d94b93dfa">end</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a57168578f9e18bc571d4d6332d60f267">node_begin</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a29ecc03ffc58511128a74646ca732adc">node_begin</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1afee2ca4511aed27f24de08c11f3b05a2">node_end</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5d945b28211c4bb07814cb5294e3e75a">node_end</link> ()=0</para>
</listitem>
            <listitem><para>virtual const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6bdf7b5ef11fe3955c005273e8efdd9d">get_access_traits</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ade558c4d4c744deb280ad84c5b2bbc8f">end</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa007ad2ac0cf8acf696191d94b93dfa">end</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a57168578f9e18bc571d4d6332d60f267">node_begin</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a29ecc03ffc58511128a74646ca732adc">node_begin</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1afee2ca4511aed27f24de08c11f3b05a2">node_end</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5d945b28211c4bb07814cb5294e3e75a">node_end</link> ()=0</para>
</listitem>
            <listitem><para>virtual const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6bdf7b5ef11fe3955c005273e8efdd9d">get_access_traits</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ade558c4d4c744deb280ad84c5b2bbc8f">end</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa007ad2ac0cf8acf696191d94b93dfa">end</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a57168578f9e18bc571d4d6332d60f267">node_begin</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a29ecc03ffc58511128a74646ca732adc">node_begin</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1afee2ca4511aed27f24de08c11f3b05a2">node_end</link> () const =0</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5d945b28211c4bb07814cb5294e3e75a">node_end</link> ()=0</para>
</listitem>
            <listitem><para>virtual const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6bdf7b5ef11fe3955c005273e8efdd9d">get_access_traits</link> () const =0</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Member Functions inherited from <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a30f8955efaad86ebc0b2c1d8f28b27d3">end_iterator</link> () const</para>
</listitem>
            <listitem><para>virtual <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ae8b2d47c2a28ab1071942824d4d7d612">~branch_policy</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a30f8955efaad86ebc0b2c1d8f28b27d3">end_iterator</link> () const</para>
</listitem>
            <listitem><para>virtual <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ae8b2d47c2a28ab1071942824d4d7d612">~branch_policy</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a30f8955efaad86ebc0b2c1d8f28b27d3">end_iterator</link> () const</para>
</listitem>
            <listitem><para>virtual <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ae8b2d47c2a28ab1071942824d4d7d612">~branch_policy</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Static Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a40a998bbf8f8aa226364fb6b9427ed4b">common_prefix_len</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>, e_const_iterator, e_const_iterator, const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp;)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa7a34287b762c82579c94f1eb19cb50">leftmost_it</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a9a5da97da4f9d68533d379b8ee271a47">rightmost_it</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1abaf0c659ef41b32cb084b3c6a45293f8">less</link> (e_const_iterator, e_const_iterator, e_const_iterator, e_const_iterator, const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp;)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a40a998bbf8f8aa226364fb6b9427ed4b">common_prefix_len</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>, e_const_iterator, e_const_iterator, const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp;)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa7a34287b762c82579c94f1eb19cb50">leftmost_it</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a9a5da97da4f9d68533d379b8ee271a47">rightmost_it</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1abaf0c659ef41b32cb084b3c6a45293f8">less</link> (e_const_iterator, e_const_iterator, e_const_iterator, e_const_iterator, const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp;)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a40a998bbf8f8aa226364fb6b9427ed4b">common_prefix_len</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>, e_const_iterator, e_const_iterator, const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp;)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa7a34287b762c82579c94f1eb19cb50">leftmost_it</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a9a5da97da4f9d68533d379b8ee271a47">rightmost_it</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1abaf0c659ef41b32cb084b3c6a45293f8">less</link> (e_const_iterator, e_const_iterator, e_const_iterator, e_const_iterator, const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
Static Protected Member Functions inherited from <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>        <itemizedlist>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">key_const_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6669725c8d1489a0103df1b35aa12a3a">extract_key</link> (<link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a1770d5367d1cdb7532cf91cd648fafc6">const_reference</link> r_val)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">key_const_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6669725c8d1489a0103df1b35aa12a3a">extract_key</link> (<link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a1770d5367d1cdb7532cf91cd648fafc6">const_reference</link> r_val)</para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">key_const_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6669725c8d1489a0103df1b35aa12a3a">extract_key</link> (<link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a1770d5367d1cdb7532cf91cd648fafc6">const_reference</link> r_val)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Types inherited from <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>        <itemizedlist>
            <listitem><para>typedef Node_Itr::value_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link> &gt;::value_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6c3df687f5e2c4a8b926a81d7a7b4470">value_type</link></para>
</listitem>
            <listitem><para>typedef value_type::first_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">key_type</link></para>
</listitem>
            <listitem><para>typedef remove_const&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6c3df687f5e2c4a8b926a81d7a7b4470">value_type</link> &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ab17e56ff301d956f03798f6bd0382f7c">rcvalue_type</link></para>
</listitem>
            <listitem><para>typedef remove_const&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">key_type</link> &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aabab32b136587e77398d55fde8ad735a">rckey_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ab17e56ff301d956f03798f6bd0382f7c">rcvalue_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ac934ce098287324daa2c158fea8387f0">rebind_v</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aabab32b136587e77398d55fde8ad735a">rckey_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a5e4e784f541330f8063f0b52c06d067e">rebind_k</link></para>
</listitem>
            <listitem><para>typedef rebind_v::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a4de077258c55feca6595cfedf463ccc1">reference</link></para>
</listitem>
            <listitem><para>typedef rebind_v::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a1770d5367d1cdb7532cf91cd648fafc6">const_reference</link></para>
</listitem>
            <listitem><para>typedef rebind_v::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a41a2fba3d4f956d4205169c31a311d58">const_pointer</link></para>
</listitem>
            <listitem><para>typedef rebind_k::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef Node_Itr::value_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link> &gt;::value_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6c3df687f5e2c4a8b926a81d7a7b4470">value_type</link></para>
</listitem>
            <listitem><para>typedef value_type::first_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">key_type</link></para>
</listitem>
            <listitem><para>typedef remove_const&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6c3df687f5e2c4a8b926a81d7a7b4470">value_type</link> &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ab17e56ff301d956f03798f6bd0382f7c">rcvalue_type</link></para>
</listitem>
            <listitem><para>typedef remove_const&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">key_type</link> &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aabab32b136587e77398d55fde8ad735a">rckey_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ab17e56ff301d956f03798f6bd0382f7c">rcvalue_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ac934ce098287324daa2c158fea8387f0">rebind_v</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aabab32b136587e77398d55fde8ad735a">rckey_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a5e4e784f541330f8063f0b52c06d067e">rebind_k</link></para>
</listitem>
            <listitem><para>typedef rebind_v::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a4de077258c55feca6595cfedf463ccc1">reference</link></para>
</listitem>
            <listitem><para>typedef rebind_v::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a1770d5367d1cdb7532cf91cd648fafc6">const_reference</link></para>
</listitem>
            <listitem><para>typedef rebind_v::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a41a2fba3d4f956d4205169c31a311d58">const_pointer</link></para>
</listitem>
            <listitem><para>typedef rebind_k::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef Node_Itr::value_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a90eed5e0bf7af8f3cba24652e60d5228">it_type</link> &gt;::value_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6c3df687f5e2c4a8b926a81d7a7b4470">value_type</link></para>
</listitem>
            <listitem><para>typedef value_type::first_type <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">key_type</link></para>
</listitem>
            <listitem><para>typedef remove_const&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a6c3df687f5e2c4a8b926a81d7a7b4470">value_type</link> &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ab17e56ff301d956f03798f6bd0382f7c">rcvalue_type</link></para>
</listitem>
            <listitem><para>typedef remove_const&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">key_type</link> &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aabab32b136587e77398d55fde8ad735a">rckey_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ab17e56ff301d956f03798f6bd0382f7c">rcvalue_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1ac934ce098287324daa2c158fea8387f0">rebind_v</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aabab32b136587e77398d55fde8ad735a">rckey_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a5e4e784f541330f8063f0b52c06d067e">rebind_k</link></para>
</listitem>
            <listitem><para>typedef rebind_v::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a4de077258c55feca6595cfedf463ccc1">reference</link></para>
</listitem>
            <listitem><para>typedef rebind_v::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a1770d5367d1cdb7532cf91cd648fafc6">const_reference</link></para>
</listitem>
            <listitem><para>typedef rebind_v::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a41a2fba3d4f956d4205169c31a311d58">const_pointer</link></para>
</listitem>
            <listitem><para>typedef rebind_k::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">key_const_reference</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node_CItr, typename Node_Itr, typename _ATraits, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</title></simplesect>

<para>Base class for trie policies. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b"/><section>
    <title>access_traits<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b"/><section>
    <title>access_traits<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b"/><section>
    <title>access_traits<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6b91a1a6cd0c7e8eb44d8df6678ef79c"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6b91a1a6cd0c7e8eb44d8df6678ef79c"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6b91a1a6cd0c7e8eb44d8df6678ef79c"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368"/><section>
    <title>const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368"/><section>
    <title>const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368"/><section>
    <title>const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392"/><section>
    <title>iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392"/><section>
    <title>iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392"/><section>
    <title>iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a921d8de461c50386550503d70cd7a016"/><section>
    <title>key_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">base_type::key_const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a921d8de461c50386550503d70cd7a016"/><section>
    <title>key_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">base_type::key_const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a921d8de461c50386550503d70cd7a016"/><section>
    <title>key_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a2b4f6fe644056dcbd3aaac0f4cc57770">base_type::key_const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a49b8957277ab37202cc98759ac42c197"/><section>
    <title>key_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">base_type::key_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a49b8957277ab37202cc98759ac42c197"/><section>
    <title>key_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">base_type::key_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a49b8957277ab37202cc98759ac42c197"/><section>
    <title>key_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1a072873894d28bd8c0dcdf45d2cc4a716">base_type::key_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1af9ff0c8a456d4bc2b21f9b8c05b91a08"/><section>
    <title>metadata_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1af9ff0c8a456d4bc2b21f9b8c05b91a08"/><section>
    <title>metadata_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1af9ff0c8a456d4bc2b21f9b8c05b91a08"/><section>
    <title>metadata_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914"/><section>
    <title>node_const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914"/><section>
    <title>node_const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914"/><section>
    <title>node_const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5"/><section>
    <title>node_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5"/><section>
    <title>node_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5"/><section>
    <title>node_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a40a998bbf8f8aa226364fb6b9427ed4b"/><section>
    <title>common_prefix_len()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>common_prefix_len</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>common_prefix_len</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::common_prefix_len (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> , e_const_iterator , e_const_iterator , const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a40a998bbf8f8aa226364fb6b9427ed4b"/><section>
    <title>common_prefix_len()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>common_prefix_len</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>common_prefix_len</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::common_prefix_len (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> , e_const_iterator , e_const_iterator , const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a40a998bbf8f8aa226364fb6b9427ed4b"/><section>
    <title>common_prefix_len()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>common_prefix_len</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>common_prefix_len</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a4368bee7f62ad6f9af9e838b89fb1bef">size_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::common_prefix_len (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> , e_const_iterator , e_const_iterator , const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ade558c4d4c744deb280ad84c5b2bbc8f"/><section>
    <title>end()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ade558c4d4c744deb280ad84c5b2bbc8f"/><section>
    <title>end()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ade558c4d4c744deb280ad84c5b2bbc8f"/><section>
    <title>end()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5a0f811e8dfb1021135df84ea975e368">const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa007ad2ac0cf8acf696191d94b93dfa"/><section>
    <title>end()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aaeed3de36605cfe52f1cb1669ab34c7a">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>.</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa007ad2ac0cf8acf696191d94b93dfa"/><section>
    <title>end()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aaeed3de36605cfe52f1cb1669ab34c7a">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>.</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa007ad2ac0cf8acf696191d94b93dfa"/><section>
    <title>end()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">::end</link> ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_1aaeed3de36605cfe52f1cb1669ab34c7a">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>.</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6bdf7b5ef11fe3955c005273e8efdd9d"/><section>
    <title>get_access_traits()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_access_traits</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>get_access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::get_access_traits ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6bdf7b5ef11fe3955c005273e8efdd9d"/><section>
    <title>get_access_traits()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_access_traits</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>get_access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::get_access_traits ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a6bdf7b5ef11fe3955c005273e8efdd9d"/><section>
    <title>get_access_traits()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_access_traits</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>get_access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::get_access_traits ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa7a34287b762c82579c94f1eb19cb50"/><section>
    <title>leftmost_it()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>leftmost_it</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>leftmost_it</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::leftmost_it (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa7a34287b762c82579c94f1eb19cb50"/><section>
    <title>leftmost_it()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>leftmost_it</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>leftmost_it</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::leftmost_it (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1aaa7a34287b762c82579c94f1eb19cb50"/><section>
    <title>leftmost_it()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>leftmost_it</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>leftmost_it</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::leftmost_it (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1abaf0c659ef41b32cb084b3c6a45293f8"/><section>
    <title>less()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>less</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>less</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::less (e_const_iterator , e_const_iterator , e_const_iterator , e_const_iterator , const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1abaf0c659ef41b32cb084b3c6a45293f8"/><section>
    <title>less()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>less</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>less</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::less (e_const_iterator , e_const_iterator , e_const_iterator , e_const_iterator , const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1abaf0c659ef41b32cb084b3c6a45293f8"/><section>
    <title>less()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>less</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>less</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::less (e_const_iterator , e_const_iterator , e_const_iterator , e_const_iterator , const <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3bdc6e2badbc8b67dc8d8c64e8eb510b">access_traits</link> &amp; )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a57168578f9e18bc571d4d6332d60f267"/><section>
    <title>node_begin()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>node_begin</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_begin</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_begin ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a57168578f9e18bc571d4d6332d60f267"/><section>
    <title>node_begin()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>node_begin</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_begin</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_begin ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a57168578f9e18bc571d4d6332d60f267"/><section>
    <title>node_begin()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>node_begin</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_begin</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_begin ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a29ecc03ffc58511128a74646ca732adc"/><section>
    <title>node_begin()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>node_begin</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_begin</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_begin ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a29ecc03ffc58511128a74646ca732adc"/><section>
    <title>node_begin()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>node_begin</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_begin</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_begin ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a29ecc03ffc58511128a74646ca732adc"/><section>
    <title>node_begin()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>node_begin</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_begin</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_begin ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1afee2ca4511aed27f24de08c11f3b05a2"/><section>
    <title>node_end()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>node_end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_end ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1afee2ca4511aed27f24de08c11f3b05a2"/><section>
    <title>node_end()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>node_end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_end ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1afee2ca4511aed27f24de08c11f3b05a2"/><section>
    <title>node_end()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>node_end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ab0b57cea30b20463f2c5416437aef914">node_const_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_end ( ) const<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5d945b28211c4bb07814cb5294e3e75a"/><section>
    <title>node_end()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>node_end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_end ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5d945b28211c4bb07814cb5294e3e75a"/><section>
    <title>node_end()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>node_end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_end ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a5d945b28211c4bb07814cb5294e3e75a"/><section>
    <title>node_end()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>node_end</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_end</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_end ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a9a5da97da4f9d68533d379b8ee271a47"/><section>
    <title>rightmost_it()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>rightmost_it</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>rightmost_it</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::rightmost_it (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a9a5da97da4f9d68533d379b8ee271a47"/><section>
    <title>rightmost_it()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>rightmost_it</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>rightmost_it</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::rightmost_it (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a9a5da97da4f9d68533d379b8ee271a47"/><section>
    <title>rightmost_it()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>rightmost_it</primary><secondary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>rightmost_it</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1a3f2206dc446a7df99df2e62019514392">iterator</link> <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::rightmost_it (<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base_1ae59bdc27bbddf1b87739130fd9d936e5">node_iterator</link> )<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2trie__policy__base_8hpp">trie_policy_base.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2trie__policy__base_8hpp">trie_policy_base.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2trie__policy__base_8hpp">trie_policy_base.hpp</link></section>
</section>
