<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2external_2msf__gif_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/external/msf_gif.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/external/msf_gif.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;<?linebreak?>#include &lt;stddef.h&gt;<?linebreak?></programlisting>Include dependency graph for msf_gif.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2msf__gif_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2msf__gif_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_msf_gif_result">MsfGifResult</link></para>

<para>HEADER ///. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct_msf_cooked_frame">MsfCookedFrame</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_msf_gif_buffer">MsfGifBuffer</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_msf_gif_state">MsfGifState</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_msf_gif_buffer">MsfGifBuffer</link> <link linkend="__classes_2lib_2external_2msf__gif_8h_1a3bbd73210dd4591aa641640d811affd9">MsfGifBuffer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>(* <link linkend="__classes_2lib_2external_2msf__gif_8h_1a35e9617d95a72185423fbeed5799ddee">MsfGifFileWriteFunc</link>) (const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a020a78e9ab6f08067423e5d76c0277d0">stream</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1aa0170c8cb35cb68eb2863c5f960c8eb9">msf_gif_begin</link> (<link linkend="_struct_msf_gif_state">MsfGifState</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1a2ae6cae42e2b5064f29759df597795c9">msf_gif_frame</link> (<link linkend="_struct_msf_gif_state">MsfGifState</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link> *pixelData, int centiSecondsPerFame, int maxBitDepth, int pitchInBytes)</para>
</listitem>
            <listitem><para><link linkend="_struct_msf_gif_result">MsfGifResult</link> <link linkend="__classes_2lib_2external_2msf__gif_8h_1a866da5b406360865244db94376ff69c5">msf_gif_end</link> (<link linkend="_struct_msf_gif_state">MsfGifState</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2external_2msf__gif_8h_1a1a1d6a8b4cfcdada4ba367d39b4d14c9">msf_gif_free</link> (<link linkend="_struct_msf_gif_result">MsfGifResult</link> <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1a0cb671aa94acffde7ffcd19a2fd0fb57">msf_gif_begin_to_file</link> (<link linkend="_struct_msf_gif_state">MsfGifState</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>, <link linkend="__classes_2lib_2external_2msf__gif_8h_1a35e9617d95a72185423fbeed5799ddee">MsfGifFileWriteFunc</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *filePointer)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1a7fabde6ef824ba37c8f44e70611b61a8">msf_gif_frame_to_file</link> (<link linkend="_struct_msf_gif_state">MsfGifState</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link> *pixelData, int centiSecondsPerFame, int maxBitDepth, int pitchInBytes)</para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1a8426490072c80f98487ce7a18520af17">msf_gif_end_to_file</link> (<link linkend="_struct_msf_gif_state">MsfGifState</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1a722d964bced81a1581f58ebe9013e496">msf_gif_alpha_threshold</link></para>
</listitem>
            <listitem><para>int <link linkend="__classes_2lib_2external_2msf__gif_8h_1afc4b864d43f07427e87783bef2c33507">msf_gif_bgra_flag</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a3bbd73210dd4591aa641640d811affd9"/><section>
    <title>MsfGifBuffer</title>
<indexterm><primary>MsfGifBuffer</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>MsfGifBuffer</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_msf_gif_buffer">MsfGifBuffer</link> <link linkend="_struct_msf_gif_buffer">MsfGifBuffer</link></computeroutput></para></section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a35e9617d95a72185423fbeed5799ddee"/><section>
    <title>MsfGifFileWriteFunc</title>
<indexterm><primary>MsfGifFileWriteFunc</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>MsfGifFileWriteFunc</secondary></indexterm>
<para><computeroutput>typedef <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>(* MsfGifFileWriteFunc) (const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a020a78e9ab6f08067423e5d76c0277d0">stream</link>)</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1aa0170c8cb35cb68eb2863c5f960c8eb9"/><section>
    <title>msf_gif_begin()</title>
<indexterm><primary>msf_gif_begin</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_begin</secondary></indexterm>
<para><computeroutput>int msf_gif_begin (<link linkend="_struct_msf_gif_state">MsfGifState</link> * handle, int width, int height)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>width</entry><entry>
<para><link linkend="_struct_image">Image</link> width in pixels. </para>
</entry>
                            </row>
                            <row>
<entry>height</entry><entry>
<para><link linkend="_struct_image">Image</link> height in pixels. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Non-zero on success, 0 on error. </para>
</formalpara>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a0cb671aa94acffde7ffcd19a2fd0fb57"/><section>
    <title>msf_gif_begin_to_file()</title>
<indexterm><primary>msf_gif_begin_to_file</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_begin_to_file</secondary></indexterm>
<para><computeroutput>int msf_gif_begin_to_file (<link linkend="_struct_msf_gif_state">MsfGifState</link> * handle, int width, int height, <link linkend="__classes_2lib_2external_2msf__gif_8h_1a35e9617d95a72185423fbeed5799ddee">MsfGifFileWriteFunc</link> func, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * filePointer)</computeroutput></para></section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a866da5b406360865244db94376ff69c5"/><section>
    <title>msf_gif_end()</title>
<indexterm><primary>msf_gif_end</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_end</secondary></indexterm>
<para><computeroutput><link linkend="_struct_msf_gif_result">MsfGifResult</link> msf_gif_end (<link linkend="_struct_msf_gif_state">MsfGifState</link> * handle)</computeroutput></para>
<para><formalpara><title>Returns</title>

<para>A block of memory containing the gif file data, or NULL on error. You are responsible for freeing this via <computeroutput><link linkend="__classes_2lib_2external_2msf__gif_8h_1a1a1d6a8b4cfcdada4ba367d39b4d14c9">msf_gif_free()</link></computeroutput>. </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2msf__gif_8h_a866da5b406360865244db94376ff69c5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a8426490072c80f98487ce7a18520af17"/><section>
    <title>msf_gif_end_to_file()</title>
<indexterm><primary>msf_gif_end_to_file</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_end_to_file</secondary></indexterm>
<para><computeroutput>int msf_gif_end_to_file (<link linkend="_struct_msf_gif_state">MsfGifState</link> * handle)</computeroutput></para></section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a2ae6cae42e2b5064f29759df597795c9"/><section>
    <title>msf_gif_frame()</title>
<indexterm><primary>msf_gif_frame</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_frame</secondary></indexterm>
<para><computeroutput>int msf_gif_frame (<link linkend="_struct_msf_gif_state">MsfGifState</link> * handle, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link> * pixelData, int centiSecondsPerFame, int maxBitDepth, int pitchInBytes)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pixelData</entry><entry>
<para>Pointer to raw framebuffer data. Rows must be contiguous in memory, in RGBA8 format (or BGRA8 if you have set <computeroutput>msf_gif_bgra_flag = true</computeroutput>). Note: This function does NOT free <computeroutput>pixelData</computeroutput>. You must free it yourself afterwards. </para>
</entry>
                            </row>
                            <row>
<entry>centiSecondsPerFrame</entry><entry>
<para>How many hundredths of a second this frame should be displayed for. Note: This being specified in centiseconds is a limitation of the GIF format. </para>
</entry>
                            </row>
                            <row>
<entry>maxBitDepth</entry><entry>
<para>Limits how many bits per pixel can be used when quantizing the gif. The actual bit depth chosen for a given frame will be less than or equal to the supplied maximum, depending on the variety of colors used in the frame. <computeroutput>maxBitDepth</computeroutput> will be clamped between 1 and 16. The recommended default is 16. Lowering this value can result in faster exports and smaller gifs, but the quality may suffer. Please experiment with this value to find what works best for your application. </para>
</entry>
                            </row>
                            <row>
<entry>pitchInBytes</entry><entry>
<para>The number of bytes from the beginning of one row of pixels to the beginning of the next. If you want to flip the image, just pass in a negative pitch. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Non-zero on success, 0 on error. </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2msf__gif_8h_a2ae6cae42e2b5064f29759df597795c9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a7fabde6ef824ba37c8f44e70611b61a8"/><section>
    <title>msf_gif_frame_to_file()</title>
<indexterm><primary>msf_gif_frame_to_file</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_frame_to_file</secondary></indexterm>
<para><computeroutput>int msf_gif_frame_to_file (<link linkend="_struct_msf_gif_state">MsfGifState</link> * handle, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link> * pixelData, int centiSecondsPerFame, int maxBitDepth, int pitchInBytes)</computeroutput></para></section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a1a1d6a8b4cfcdada4ba367d39b4d14c9"/><section>
    <title>msf_gif_free()</title>
<indexterm><primary>msf_gif_free</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_free</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> msf_gif_free (<link linkend="_struct_msf_gif_result">MsfGifResult</link> result)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>result</entry><entry>
<para>The <link linkend="_struct_msf_gif_result">MsfGifResult</link> struct, verbatim as it was returned from <computeroutput><link linkend="__classes_2lib_2external_2msf__gif_8h_1a866da5b406360865244db94376ff69c5">msf_gif_end()</link></computeroutput>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2msf__gif_8h_a1a1d6a8b4cfcdada4ba367d39b4d14c9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1a722d964bced81a1581f58ebe9013e496"/><section>
    <title>msf_gif_alpha_threshold</title>
<indexterm><primary>msf_gif_alpha_threshold</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_alpha_threshold</secondary></indexterm>
<para><computeroutput>int msf_gif_alpha_threshold<computeroutput>[extern]</computeroutput></computeroutput></para></section>
<anchor xml:id="__classes_2lib_2external_2msf__gif_8h_1afc4b864d43f07427e87783bef2c33507"/><section>
    <title>msf_gif_bgra_flag</title>
<indexterm><primary>msf_gif_bgra_flag</primary><secondary>msf_gif.h</secondary></indexterm>
<indexterm><primary>msf_gif.h</primary><secondary>msf_gif_bgra_flag</secondary></indexterm>
<para><computeroutput>int msf_gif_bgra_flag<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
