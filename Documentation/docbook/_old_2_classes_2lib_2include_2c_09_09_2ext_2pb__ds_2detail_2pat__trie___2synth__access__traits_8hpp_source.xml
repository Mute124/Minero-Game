<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_source" xml:lang="en-US">
<title>synth_access_traits.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
45 
46 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
47 {
48 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
49 &#32;&#32;{
50 
51 <emphasis role="preprocessor">#define&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC&#32;\</emphasis>
52 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Type_Traits,&#32;bool&#32;Set,&#32;typename&#32;_ATraits&gt;</emphasis>
53 
54 <emphasis role="preprocessor">#define&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC&#32;\</emphasis>
55 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;synth_access_traits&lt;Type_Traits,&#32;Set,&#32;_ATraits&gt;</emphasis>
56 
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Type_Traits,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Set,&#32;<emphasis role="keyword">typename</emphasis>&#32;_ATraits&gt;
59 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>synth_access_traits&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_ATraits
60 &#32;&#32;&#32;&#32;{
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_ATraits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1ab00e4002f89c64e7f9b0aecd6af631cf">base_type</link>;
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_iterator&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>;
63 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Type_Traits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a0f87e749c99cc381005d75f5adf18f22">type_traits</link>;
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;type_traits::const_reference&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1afdc2c9e06554f128a76445fc2c855f65">const_reference</link>;
65 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;type_traits::key_const_reference&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>;
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a80c1315934eef86ede5bc3e5901df4ba">synth_access_traits</link>();
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a915467baad7284328f4b151a6016f512">synth_access_traits</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1ab00e4002f89c64e7f9b0aecd6af631cf">base_type</link>&amp;);
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a02efef2718bd8e466e9833303286038b">equal_prefixes</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;compare_after&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
76 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a661a0cf909ec48863dc4542e31133034">equal_keys</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>)&#32;<emphasis role="keyword">const</emphasis>;
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1ae1c469a68f014dff6a8bd4ebb3bdf86d">cmp_prefixes</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a06e3d46d2b3a4dd09cd110090a415158">const_iterator</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;compare_after&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
81 
82 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1afb934964da89c675cc996cccaa3b42ab">cmp_keys</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>)&#32;<emphasis role="keyword">const</emphasis>;
84 
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>
86 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a22722808b477a9d49f63de05948b811a">extract_key</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1afdc2c9e06554f128a76445fc2c855f65">const_reference</link>);
87 
88 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
89 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>);
91 <emphasis role="preprocessor">#endif</emphasis>
92 
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>
95 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a22722808b477a9d49f63de05948b811a">extract_key</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1afdc2c9e06554f128a76445fc2c855f65">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
96 
97 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a36f504074c8a52090812ffe72aca1671">key_const_reference</link>
98 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1a22722808b477a9d49f63de05948b811a">extract_key</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits_1afdc2c9e06554f128a76445fc2c855f65">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;integral_constant&lt;int,&#32;Set&gt;&#32;s_set_ind;
101 &#32;&#32;&#32;&#32;};
102 
103 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
104 &#32;&#32;&#32;&#32;integral_constant&lt;int,Set&gt;
105 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::s_set_ind;
106 
107 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
108 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
109 &#32;&#32;&#32;&#32;synth_access_traits()
110 &#32;&#32;&#32;&#32;{&#32;}
111 
112 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
113 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
114 &#32;&#32;&#32;&#32;synth_access_traits(<emphasis role="keyword">const</emphasis>&#32;_ATraits&amp;&#32;r_traits)&#32;
115 &#32;&#32;&#32;&#32;:&#32;_ATraits(r_traits)
116 &#32;&#32;&#32;&#32;{&#32;}
117 
118 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
120 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
121 &#32;&#32;&#32;&#32;equal_prefixes(const_iterator&#32;b_l,&#32;const_iterator&#32;e_l,&#32;const_iterator&#32;b_r,
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_iterator&#32;e_r,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;compare_after&#32;<emphasis role="comment">/*=&#32;false&#32;*/</emphasis>)<emphasis role="keyword">&#32;const</emphasis>
123 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(b_l&#32;!=&#32;e_l)
125 &#32;&#32;&#32;&#32;{
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b_r&#32;==&#32;e_r)
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::e_pos(*b_l)&#32;!=&#32;base_type::e_pos(*b_r))
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
130 &#32;&#32;&#32;&#32;&#32;&#32;++b_l;
131 &#32;&#32;&#32;&#32;&#32;&#32;++b_r;
132 &#32;&#32;&#32;&#32;}
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(!compare_after&#32;||&#32;b_r&#32;==&#32;e_r);
134 &#32;&#32;&#32;&#32;}
135 
136 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
137 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
138 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
139 &#32;&#32;&#32;&#32;equal_keys(key_const_reference&#32;r_lhs_key,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;key_const_reference&#32;r_rhs_key)<emphasis role="keyword">&#32;const</emphasis>
141 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;equal_prefixes(base_type::begin(r_lhs_key),
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::end(r_lhs_key),
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::begin(r_rhs_key),
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::end(r_rhs_key),
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
147 &#32;&#32;&#32;&#32;}
148 
149 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
150 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
151 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
152 &#32;&#32;&#32;&#32;cmp_prefixes(const_iterator&#32;b_l,&#32;const_iterator&#32;e_l,&#32;const_iterator&#32;b_r,
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_iterator&#32;e_r,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;compare_after&#32;<emphasis role="comment">/*&#32;=&#32;false*/</emphasis>)<emphasis role="keyword">&#32;const</emphasis>
154 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(b_l&#32;!=&#32;e_l)
156 &#32;&#32;&#32;&#32;{
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b_r&#32;==&#32;e_r)
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
159 
160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::size_type&#32;l_pos&#32;=&#32;base_type::e_pos(*b_l);
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::size_type&#32;r_pos&#32;=&#32;base_type::e_pos(*b_r);
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l_pos&#32;!=&#32;r_pos)
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;l_pos&#32;&lt;&#32;r_pos;
164 &#32;&#32;&#32;&#32;&#32;&#32;++b_l;
165 &#32;&#32;&#32;&#32;&#32;&#32;++b_r;
166 &#32;&#32;&#32;&#32;}
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!compare_after)
169 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;b_r&#32;!=&#32;e_r;
171 &#32;&#32;&#32;&#32;}
172 
173 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
174 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
175 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
176 &#32;&#32;&#32;&#32;cmp_keys(key_const_reference&#32;r_lhs_key,
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;key_const_reference&#32;r_rhs_key)<emphasis role="keyword">&#32;const</emphasis>
178 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cmp_prefixes(base_type::begin(r_lhs_key),
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::end(r_lhs_key),
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::begin(r_rhs_key),
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::end(r_rhs_key),
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
184 &#32;&#32;&#32;&#32;}
185 
186 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
187 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::key_const_reference
188 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
189 &#32;&#32;&#32;&#32;extract_key(const_reference&#32;r_val)
190 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;extract_key(r_val,&#32;s_set_ind);&#32;}
191 
192 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
193 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::key_const_reference
194 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
195 &#32;&#32;&#32;&#32;extract_key(const_reference&#32;r_val,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)
196 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;r_val;&#32;}
197 
198 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
199 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::key_const_reference
200 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
201 &#32;&#32;&#32;&#32;extract_key(const_reference&#32;r_val,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)
202 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;r_val.first;&#32;}
203 
204 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
205 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2synth__access__traits_8hpp_1a51a661ed6c056ac1cd03960701c9cf93">PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</link>
206 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
207 &#32;&#32;&#32;&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::
208 &#32;&#32;&#32;&#32;operator()(key_const_reference&#32;r_lhs,&#32;key_const_reference&#32;r_rhs)
209 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;cmp_keys(r_lhs,&#32;r_rhs);&#32;}
210 <emphasis role="preprocessor">#endif</emphasis>
211 
212 <emphasis role="preprocessor">#undef&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC</emphasis>
213 <emphasis role="preprocessor">#undef&#32;PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC</emphasis>
214 
215 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
216 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
217 
218 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
