<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2gtx_2easing_8inl_source" xml:lang="en-US">
<title>easing.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/gtx/easing.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
4 
5 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
6 
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
8 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga290c3e47cb0a49f2e8abe90b1872b649">linearInterpolation</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
9 &#32;&#32;&#32;&#32;{
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
13 
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
15 &#32;&#32;&#32;&#32;}
16 
17 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
18 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gaf42089d35855695132d217cd902304a0">quadraticEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
19 &#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
23 
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
25 &#32;&#32;&#32;&#32;}
26 
27 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
28 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga283717bc2d937547ad34ec0472234ee3">quadraticEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
29 &#32;&#32;&#32;&#32;{
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
33 
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)));
35 &#32;&#32;&#32;&#32;}
36 
37 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
38 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga03e8fc2d7945a4e63ee33b2159c14cea">quadraticEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
39 &#32;&#32;&#32;&#32;{
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;(4&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;one&lt;genType&gt;();
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
52 &#32;&#32;&#32;&#32;}
53 
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
55 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gaff52f746102b94864d105563ba8895ae">cubicEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
56 &#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
62 &#32;&#32;&#32;&#32;}
63 
64 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
65 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga40d746385d8bcc5973f5bc6a2340ca91">cubicEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
66 &#32;&#32;&#32;&#32;{
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;();
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;+&#32;one&lt;genType&gt;();
73 &#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
76 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga55134072b42d75452189321d4a2ad91c">cubicEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
77 &#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
81 
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(4)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2));
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;+&#32;one&lt;genType&gt;();
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
91 &#32;&#32;&#32;&#32;}
92 
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
94 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga808b41f14514f47dad5dcc69eb924afd">quarticEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
95 &#32;&#32;&#32;&#32;{
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
101 &#32;&#32;&#32;&#32;}
102 
103 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
104 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga4dfb33fa7664aa888eb647999d329b98">quarticEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
105 &#32;&#32;&#32;&#32;{
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
109 
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;());
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;(one&lt;genType&gt;()&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;one&lt;genType&gt;();
112 &#32;&#32;&#32;&#32;}
113 
114 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
115 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga6d000f852de12b197e154f234b20c505">quarticEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
116 &#32;&#32;&#32;&#32;{
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(8)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;());
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(8)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;+&#32;one&lt;genType&gt;();
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
130 &#32;&#32;&#32;&#32;}
131 
132 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
133 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga097579d8e087dcf48037588140a21640">quinticEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
134 &#32;&#32;&#32;&#32;{
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
138 
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
140 &#32;&#32;&#32;&#32;}
141 
142 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
143 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga7dbd4d5c8da3f5353121f615e7b591d7">quinticEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
144 &#32;&#32;&#32;&#32;{
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
148 
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;());
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;+&#32;one&lt;genType&gt;();
151 &#32;&#32;&#32;&#32;}
152 
153 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
154 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga2a82d5c46df7e2d21cc0108eb7b83934">quinticEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
155 &#32;&#32;&#32;&#32;{
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
159 
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(16)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2));
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;+&#32;one&lt;genType&gt;();
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
169 &#32;&#32;&#32;&#32;}
170 
171 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
172 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gafb338ac6f6b2bcafee50e3dca5201dbf">sineEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
173 &#32;&#32;&#32;&#32;{
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
177 
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;())&#32;*&#32;half_pi&lt;genType&gt;())&#32;+&#32;one&lt;genType&gt;();
179 &#32;&#32;&#32;&#32;}
180 
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
182 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gab3e454f883afc1606ef91363881bf5a3">sineEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
183 &#32;&#32;&#32;&#32;{
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;half_pi&lt;genType&gt;());
189 &#32;&#32;&#32;&#32;}
190 
191 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
192 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gaa46e3d5fbf7a15caa28eff9ef192d7c7">sineEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
193 &#32;&#32;&#32;&#32;{
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
197 
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;(one&lt;genType&gt;()&#32;-&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;pi&lt;genType&gt;()));
199 &#32;&#32;&#32;&#32;}
200 
201 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
202 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga34508d4b204a321ec26d6086aa047997">circularEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
203 &#32;&#32;&#32;&#32;{
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
207 
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;one&lt;genType&gt;()&#32;-&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(one&lt;genType&gt;()&#32;-&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>));
209 &#32;&#32;&#32;&#32;}
210 
211 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
212 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga26fefde9ced9b72745fe21f1a3fe8da7">circularEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
213 &#32;&#32;&#32;&#32;{
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
217 
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
219 &#32;&#32;&#32;&#32;}
220 
221 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
222 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga0c1027637a5b02d4bb3612aa12599d69">circularEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
223 &#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;(one&lt;genType&gt;()&#32;-&#32;std::sqrt(one&lt;genType&gt;()&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(4)&#32;*&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)));
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;(std::sqrt(-((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(3))&#32;*&#32;((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;one&lt;genType&gt;()))&#32;+&#32;one&lt;genType&gt;());
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
236 &#32;&#32;&#32;&#32;}
237 
238 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
239 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga7f24ee9219ab4c84dc8de24be84c1e3c">exponentialEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
240 &#32;&#32;&#32;&#32;{
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
244 
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;zero&lt;genType&gt;())
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;Complementary&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;();
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;Two&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2);
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace">glm::pow</link>(Two,&#32;Complementary&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10));
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
254 &#32;&#32;&#32;&#32;}
255 
256 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
257 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga517f2bcfd15bc2c25c466ae50808efc3">exponentialEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
258 &#32;&#32;&#32;&#32;{
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
262 
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;one&lt;genType&gt;())
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;one&lt;genType&gt;()&#32;-&#32;<link linkend="_group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace">glm::pow</link>(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
269 &#32;&#32;&#32;&#32;}
270 
271 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
272 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga232fb6dc093c5ce94bee105ff2947501">exponentialEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
273 &#32;&#32;&#32;&#32;{
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
277 
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;glm::pow(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(20)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10));
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;glm::pow(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;(-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(20)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10))&#32;+&#32;one&lt;genType&gt;();
282 &#32;&#32;&#32;&#32;}
283 
284 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
285 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga230918eccee4e113d10ec5b8cdc58695">elasticEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
286 &#32;&#32;&#32;&#32;{
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
290 
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::sin(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(13)&#32;*&#32;half_pi&lt;genType&gt;()&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;*&#32;<link linkend="_group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace">glm::pow</link>(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10)&#32;*&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;()));
292 &#32;&#32;&#32;&#32;}
293 
294 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
295 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gace9c9d1bdf88bf2ab1e7cdefa54c7365">elasticEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
296 &#32;&#32;&#32;&#32;{
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
300 
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::sin(-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(13)&#32;*&#32;half_pi&lt;genType&gt;()&#32;*&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;one&lt;genType&gt;()))&#32;*&#32;<link linkend="_group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace">glm::pow</link>(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;one&lt;genType&gt;();
302 &#32;&#32;&#32;&#32;}
303 
304 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
305 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga2db4ac8959559b11b4029e54812908d6">elasticEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
306 &#32;&#32;&#32;&#32;{
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
310 
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;std::sin(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(13)&#32;*&#32;half_pi&lt;genType&gt;()&#32;*&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;*&#32;glm::pow(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10)&#32;*&#32;((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;one&lt;genType&gt;()));
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;(std::sin(-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(13)&#32;*&#32;half_pi&lt;genType&gt;()&#32;*&#32;((<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;())&#32;+&#32;one&lt;genType&gt;()))&#32;*&#32;<link linkend="_group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace">glm::pow</link>(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2),&#32;-<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(10)&#32;*&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;()))&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2));
315 &#32;&#32;&#32;&#32;}
316 
317 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
318 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga93cddcdb6347a44d5927cc2bf2570816">backEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;o)
319 &#32;&#32;&#32;&#32;{
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
323 
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;((o&#32;+&#32;one&lt;genType&gt;())&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;o;
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
326 &#32;&#32;&#32;&#32;}
327 
328 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
329 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gabf25069fa906413c858fd46903d520b9">backEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;o)
330 &#32;&#32;&#32;&#32;{
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
334 
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;one&lt;genType&gt;();
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;((o&#32;+&#32;one&lt;genType&gt;())&#32;*&#32;n)&#32;+&#32;o;
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(n&#32;*&#32;n&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;+&#32;one&lt;genType&gt;();
338 &#32;&#32;&#32;&#32;}
339 
340 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
341 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gace6d24722a2f6722b56398206eb810bb">backEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;o)
342 &#32;&#32;&#32;&#32;{
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
346 
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;s&#32;=&#32;o&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1.525);
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5);
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5);
350 
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1))
352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;((s&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1))&#32;*&#32;n)&#32;-&#32;s;
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;m&#32;=&#32;n&#32;*&#32;n&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;m;
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;-=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2);
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;((s&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1))&#32;*&#32;n)&#32;+&#32;s;
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;m&#32;=&#32;(n*n*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2);
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;m;
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
364 &#32;&#32;&#32;&#32;}
365 
366 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
367 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga93cddcdb6347a44d5927cc2bf2570816">backEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
368 &#32;&#32;&#32;&#32;{
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__gtx__easing_1ga93cddcdb6347a44d5927cc2bf2570816">backEaseIn</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1.70158));
370 &#32;&#32;&#32;&#32;}
371 
372 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
373 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gabf25069fa906413c858fd46903d520b9">backEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
374 &#32;&#32;&#32;&#32;{
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__gtx__easing_1gabf25069fa906413c858fd46903d520b9">backEaseOut</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1.70158));
376 &#32;&#32;&#32;&#32;}
377 
378 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
379 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gace6d24722a2f6722b56398206eb810bb">backEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
380 &#32;&#32;&#32;&#32;{
381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__gtx__easing_1gace6d24722a2f6722b56398206eb810bb">backEaseInOut</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(1.70158));
382 &#32;&#32;&#32;&#32;}
383 
384 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
385 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1ga94007005ff0dcfa0749ebfa2aec540b2">bounceEaseOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
386 &#32;&#32;&#32;&#32;{
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
390 
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(4.0&#32;/&#32;11.0))
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(121)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(16);
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(8.0&#32;/&#32;11.0))
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(363.0&#32;/&#32;40.0)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(99.0&#32;/&#32;10.0)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(17.0&#32;/&#32;5.0);
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(9.0&#32;/&#32;10.0))
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(4356.0&#32;/&#32;361.0)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(35442.0&#32;/&#32;1805.0)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(16061.0&#32;/&#32;1805.0);
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(54.0&#32;/&#32;5.0)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;-&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(513.0&#32;/&#32;25.0)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(268.0&#32;/&#32;25.0);
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
407 &#32;&#32;&#32;&#32;}
408 
409 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
410 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gaac30767f2e430b0c3fc859a4d59c7b5b">bounceEaseIn</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
411 &#32;&#32;&#32;&#32;{
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
415 
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;one&lt;genType&gt;()&#32;-&#32;<link linkend="_group__gtx__easing_1ga94007005ff0dcfa0749ebfa2aec540b2">bounceEaseOut</link>(one&lt;genType&gt;()&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
417 &#32;&#32;&#32;&#32;}
418 
419 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
420 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__easing_1gadf9f38eff1e5f4c2fa5b629a25ae413e">bounceEaseInOut</link>(genType&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
421 &#32;&#32;&#32;&#32;{
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;defined&#32;in&#32;[0,&#32;1]</emphasis>
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;zero&lt;genType&gt;());
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;one&lt;genType&gt;());
425 
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5))
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;(one&lt;genType&gt;()&#32;-&#32;<link linkend="_group__gtx__easing_1ga94007005ff0dcfa0749ebfa2aec540b2">bounceEaseOut</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)));
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;<link linkend="_group__gtx__easing_1ga94007005ff0dcfa0749ebfa2aec540b2">bounceEaseOut</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(2)&#32;-&#32;one&lt;genType&gt;())&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(0.5);
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
434 &#32;&#32;&#32;&#32;}
435 
436 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
