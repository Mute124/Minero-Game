<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update" xml:lang="en-US">
<title>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;trie_policy.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1trie__prefix__search__node__update__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1trie__prefix__search__node__update__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd">key_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f">access_traits</link></para>

<para>Element access traits. </para>
</listitem>
            <listitem><para>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link></para>

<para>Const element iterator. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9">allocator_type</link></para>

<para>_Alloc type. </para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7">size_type</link></para>

<para><link linkend="_struct_size">Size</link> type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd">key_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f">access_traits</link></para>

<para>Element access traits. </para>
</listitem>
            <listitem><para>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link></para>

<para>Const element iterator. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9">allocator_type</link></para>

<para>_Alloc type. </para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7">size_type</link></para>

<para><link linkend="_struct_size">Size</link> type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd">key_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f">access_traits</link></para>

<para>Element access traits. </para>
</listitem>
            <listitem><para>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link></para>

<para>Const element iterator. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9">allocator_type</link></para>

<para>_Alloc type. </para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7">size_type</link></para>

<para><link linkend="_struct_size">Size</link> type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>) const</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>)</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>) const</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>)</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>) const</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>)</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>) const</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>)</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>) const</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>)</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>) const</para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5">prefix_range</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b">operator()</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link> node_it, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link> end_nd_it) const</para>

<para>Called to update a node&apos;s metadata. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b">operator()</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link> node_it, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link> end_nd_it) const</para>

<para>Called to update a node&apos;s metadata. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b">operator()</link> (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link> node_it, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link> end_nd_it) const</para>

<para>Called to update a node&apos;s metadata. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node_CItr, typename Node_Itr, typename _ATraits, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</title></simplesect>

<para>A node updator that allows tries to be searched for the range of values that match a certain prefix. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776"/><section>
    <title>a_const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>a_const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>a_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::a_const_iterator</computeroutput></para><para>

<para>Const element iterator. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776"/><section>
    <title>a_const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>a_const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>a_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::a_const_iterator</computeroutput></para><para>

<para>Const element iterator. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776"/><section>
    <title>a_const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>a_const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>a_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::a_const_iterator</computeroutput></para><para>

<para>Const element iterator. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f"/><section>
    <title>access_traits<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para><para>

<para>Element access traits. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f"/><section>
    <title>access_traits<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para><para>

<para>Element access traits. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f"/><section>
    <title>access_traits<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para><para>

<para>Element access traits. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para><para>

<para>_Alloc type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para><para>

<para>_Alloc type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para><para>

<para>_Alloc type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6"/><section>
    <title>const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6"/><section>
    <title>const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6"/><section>
    <title>const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936"/><section>
    <title>iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936"/><section>
    <title>iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936"/><section>
    <title>iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f"/><section>
    <title>key_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f"/><section>
    <title>key_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f"/><section>
    <title>key_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd"/><section>
    <title>key_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd"/><section>
    <title>key_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd"/><section>
    <title>key_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f"/><section>
    <title>metadata_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f"/><section>
    <title>metadata_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f"/><section>
    <title>metadata_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114"/><section>
    <title>node_const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114"/><section>
    <title>node_const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114"/><section>
    <title>node_const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc"/><section>
    <title>node_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc"/><section>
    <title>node_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc"/><section>
    <title>node_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para><para>

<para><link linkend="_struct_size">Size</link> type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para><para>

<para><link linkend="_struct_size">Size</link> type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para><para>

<para><link linkend="_struct_size">Size</link> type. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link> node_it, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link> end_nd_it) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Called to update a node&apos;s metadata. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link> node_it, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link> end_nd_it) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Called to update a node&apos;s metadata. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link> node_it, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link> end_nd_it) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Called to update a node&apos;s metadata. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5"/><section>
    <title>prefix_range()<computeroutput>[1/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> )</computeroutput></para>
<para>Finds the iterator range corresponding to all values whose prefixes match [b, e). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5"/><section>
    <title>prefix_range()<computeroutput>[2/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> )</computeroutput></para>
<para>Finds the iterator range corresponding to all values whose prefixes match [b, e). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5"/><section>
    <title>prefix_range()<computeroutput>[3/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> )</computeroutput></para>
<para>Finds the iterator range corresponding to all values whose prefixes match [b, e). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6"/><section>
    <title>prefix_range()<computeroutput>[4/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> ) const</computeroutput></para>
<para>Finds the const iterator range corresponding to all values whose prefixes match [b, e). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6"/><section>
    <title>prefix_range()<computeroutput>[5/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> ) const</computeroutput></para>
<para>Finds the const iterator range corresponding to all values whose prefixes match [b, e). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6"/><section>
    <title>prefix_range()<computeroutput>[6/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link> ) const</computeroutput></para>
<para>Finds the const iterator range corresponding to all values whose prefixes match [b, e). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082"/><section>
    <title>prefix_range()<computeroutput>[7/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link> )</computeroutput></para>
<para>Finds the iterator range corresponding to all values whose prefixes match r_key. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082"/><section>
    <title>prefix_range()<computeroutput>[8/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link> )</computeroutput></para>
<para>Finds the iterator range corresponding to all values whose prefixes match r_key. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082"/><section>
    <title>prefix_range()<computeroutput>[9/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link> )</computeroutput></para>
<para>Finds the iterator range corresponding to all values whose prefixes match r_key. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c"/><section>
    <title>prefix_range()<computeroutput>[10/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link> ) const</computeroutput></para>
<para>Finds the const iterator range corresponding to all values whose prefixes match r_key. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c"/><section>
    <title>prefix_range()<computeroutput>[11/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link> ) const</computeroutput></para>
<para>Finds the const iterator range corresponding to all values whose prefixes match r_key. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c"/><section>
    <title>prefix_range()<computeroutput>[12/12]</computeroutput></title>
<indexterm><primary>prefix_range</primary><secondary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>prefix_range</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>std::pair&lt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link> &gt; <link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::prefix_range (<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link> ) const</computeroutput></para>
<para>Finds the const iterator range corresponding to all values whose prefixes match r_key. </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link></section>
</section>
