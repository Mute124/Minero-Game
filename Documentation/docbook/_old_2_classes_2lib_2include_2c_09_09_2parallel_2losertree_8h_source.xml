<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2losertree_8h_source" xml:lang="en-US">
<title>losertree.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/losertree.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler.</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_LOSERTREE_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_LOSERTREE_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algobase.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_function.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;parallel/features.h&gt;</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;parallel/base.h&gt;</emphasis>
39 
40 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
41 {
54 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
55 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreeBase
56 &#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Loser
60 &#32;&#32;&#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a704e30d74cc22713c993d8a22c145fef">_M_sup</link>;
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>;
66 &#32;&#32;&#32;&#32;_Tp&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a8450fa226312185aa27a526f23677a75">_M_key</link>;
67 &#32;&#32;&#32;&#32;&#32;&#32;};
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1ad7f21779f27e16fc27a04ec4438c28b3">_M_ik</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a6057ed904b22e44b9e63cece4bbb5d2f">_M_offset</link>;
70 
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a75bba27325ffeb227186440dfc836fb9">_M_log_k</link>;
73 
75 &#32;&#32;&#32;&#32;&#32;&#32;_Loser*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>;
76 
78 &#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a7bbc4162a7a7aad013038e076f516512">_M_comp</link>;
79 
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1afd84c329905b58ec69ade3066f138124">_M_first_insert</link>;
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
94 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1acae75ac10b89e74fcabfd598399280e8">_LoserTreeBase</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;_Compare&#32;__comp)
95 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a7bbc4162a7a7aad013038e076f516512">_M_comp</link>(__comp)
96 &#32;&#32;&#32;&#32;&#32;&#32;{
97 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1ad7f21779f27e16fc27a04ec4438c28b3">_M_ik</link>&#32;=&#32;__k;
98 
99 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;log_2{_M_k}&#32;for&#32;the&#32;_Loser&#32;Tree</emphasis>
100 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a75bba27325ffeb227186440dfc836fb9">_M_log_k</link>&#32;=&#32;<link linkend="_namespace____gnu__parallel_1ae8e1f6dc07de01f28bf591339cf8aa9c">__rd_log2</link>(<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1ad7f21779f27e16fc27a04ec4438c28b3">_M_ik</link>&#32;-&#32;1)&#32;+&#32;1;
101 
102 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;greater&#32;power&#32;of&#32;2.</emphasis>
103 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>&#32;=&#32;1&#32;&lt;&lt;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a75bba27325ffeb227186440dfc836fb9">_M_log_k</link>;
104 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a6057ed904b22e44b9e63cece4bbb5d2f">_M_offset</link>&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>;
105 
106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Avoid&#32;default-constructing&#32;_M_losers[]._M_key</emphasis>
107 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser">_Loser</link>*<emphasis role="keyword">&gt;</emphasis>(::operator&#32;<emphasis role="keyword">new</emphasis>(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser">_Loser</link>)));
109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1ad7f21779f27e16fc27a04ec4438c28b3">_M_ik</link>&#32;-&#32;1;&#32;__i&#32;&lt;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>;&#32;++__i)
110 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[__i&#32;+&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>]._M_sup&#32;=&#32;<emphasis role="keyword">true</emphasis>;
111 
112 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1afd84c329905b58ec69ade3066f138124">_M_first_insert</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
113 &#32;&#32;&#32;&#32;&#32;&#32;}
114 
118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aab2d1be8f756025bc63f64218c88a559">~_LoserTreeBase</link>()
119 &#32;&#32;&#32;&#32;&#32;&#32;{
120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>);&#32;++__i)
121 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[__i].~<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser">_Loser</link>();
122 &#32;&#32;&#32;&#32;::operator&#32;<emphasis role="keyword">delete</emphasis>(<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>);
123 &#32;&#32;&#32;&#32;&#32;&#32;}
124 
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
134 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1ae40e9ed966e6afbbdcfca290b3992130">__insert_start</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
135 &#32;&#32;&#32;&#32;&#32;&#32;{
136 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>&#32;+&#32;__source;
137 
138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1afd84c329905b58ec69ade3066f138124">_M_first_insert</link>)
139 &#32;&#32;&#32;&#32;&#32;&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Construct&#32;all&#32;keys,&#32;so&#32;we&#32;can&#32;easily&#32;destruct&#32;them.</emphasis>
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_M_k</link>);&#32;++__i)
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::new(&amp;(<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[__i]._M_key))&#32;_Tp(__key);
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1afd84c329905b58ec69ade3066f138124">_M_first_insert</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
144 &#32;&#32;&#32;&#32;&#32;&#32;}
145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a8450fa226312185aa27a526f23677a75">_M_key</link>&#32;=&#32;__key;
147 
148 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a704e30d74cc22713c993d8a22c145fef">_M_sup</link>&#32;=&#32;__sup;
149 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>&#32;=&#32;__source;
150 &#32;&#32;&#32;&#32;&#32;&#32;}
151 
155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1ae03e177c456afb3093d6aed490de7b70">__get_min_source</link>()
156 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_M_losers</link>[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>;&#32;}
157 &#32;&#32;&#32;&#32;};
158 
167 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable<emphasis role="comment">/*&#32;default&#32;==&#32;true&#32;*/</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
169 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTree
170 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreeBase&lt;_Tp,&#32;_Compare&gt;
171 &#32;&#32;&#32;&#32;{
172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreeBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_Base::_M_k</link>;
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a7bbc4162a7a7aad013038e076f516512">_Base::_M_comp</link>;
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_Base::_M_losers</link>;
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1afd84c329905b58ec69ade3066f138124">_Base::_M_first_insert</link>;
177 
178 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
179 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a632a7faa1e68da31da135882e4de733b">_LoserTree</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;_Compare&#32;__comp)
180 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_base">_LoserTreeBase</link>(__k,&#32;__comp)
181 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
182 
183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
184 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
185 &#32;&#32;&#32;&#32;&#32;&#32;{
186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
189 &#32;&#32;&#32;&#32;&#32;&#32;{
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(2&#32;*&#32;__root);
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_losers[__right]._M_sup
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_losers[__left]._M_sup
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!_M_comp(_M_losers[__right]._M_key,
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__left]._M_key)))
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
207 &#32;&#32;&#32;&#32;&#32;&#32;}
208 &#32;&#32;&#32;&#32;&#32;&#32;}
209 
210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a312994067c3cf199a625242533d4d27f">__init</link>()
211 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(1)];&#32;}
212 
219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;pass&#32;a&#32;const&#32;reference&#32;since&#32;__key&#32;will&#32;be&#32;used&#32;as</emphasis>
220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;local&#32;variable.</emphasis>
221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
222 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a35d4c47719d2f41603ba9c650f3f1e5a">__delete_min_insert</link>(_Tp&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
223 &#32;&#32;&#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>;
225 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
226 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
227 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
228 <emphasis role="preprocessor">#endif</emphasis>
229 
230 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>;
231 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
233 &#32;&#32;&#32;&#32;&#32;&#32;{
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted,&#32;ties&#32;are&#32;broken&#32;by&#32;_M_source.</emphasis>
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__sup&#32;&amp;&amp;&#32;(!_M_losers[__pos]._M_sup
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;_M_losers[__pos]._M_source&#32;&lt;&#32;__source))
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!__sup&#32;&amp;&amp;&#32;!_M_losers[__pos]._M_sup
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((_M_comp(_M_losers[__pos]._M_key,&#32;__key))
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_comp(__key,&#32;_M_losers[__pos]._M_key)
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_M_losers[__pos]._M_source&#32;&lt;&#32;__source))))
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_sup,&#32;__sup);
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(_M_losers[__pos]._M_key,&#32;__key);
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
247 &#32;&#32;&#32;&#32;&#32;&#32;}
248 
249 &#32;&#32;&#32;&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a704e30d74cc22713c993d8a22c145fef">_M_sup</link>&#32;=&#32;__sup;
250 &#32;&#32;&#32;&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>&#32;=&#32;__source;
251 &#32;&#32;&#32;&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a8450fa226312185aa27a526f23677a75">_M_key</link>&#32;=&#32;__key;
252 &#32;&#32;&#32;&#32;&#32;&#32;}
253 &#32;&#32;&#32;&#32;};
254 
260 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
261 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTree&lt;<emphasis role="comment">/*&#32;__stable&#32;==&#32;*/</emphasis><link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>,&#32;_Tp,&#32;_Compare&gt;
262 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreeBase&lt;_Tp,&#32;_Compare&gt;
263 &#32;&#32;&#32;&#32;{
264 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreeBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
265 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a75bba27325ffeb227186440dfc836fb9">_Base::_M_log_k</link>;
266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa085749fcf072a742535d6d6d5f222e5">_Base::_M_k</link>;
267 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1a7bbc4162a7a7aad013038e076f516512">_Base::_M_comp</link>;
268 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1aa7b05de4bbb21efe1addd23cb34ce5d8">_Base::_M_losers</link>;
269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_base_1afd84c329905b58ec69ade3066f138124">_Base::_M_first_insert</link>;
270 
271 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
272 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_3_01false_00_01___tp_00_01___compare_01_4_1afdcdb50efe715026ee8ddc5388698bef">_LoserTree</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;_Compare&#32;__comp)
273 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_base">_LoserTreeBase</link>(__k,&#32;__comp)
274 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
275 
283 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
284 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_3_01false_00_01___tp_00_01___compare_01_4_1a72f173966387d5b8bd2fe3f9cedd32c8">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
285 &#32;&#32;&#32;&#32;&#32;&#32;{
286 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
287 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
288 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
289 &#32;&#32;&#32;&#32;&#32;&#32;{
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(2&#32;*&#32;__root);
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_losers[__right]._M_sup
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_losers[__left]._M_sup
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!_M_comp(_M_losers[__right]._M_key,
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__left]._M_key)))
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
307 &#32;&#32;&#32;&#32;&#32;&#32;}
308 &#32;&#32;&#32;&#32;&#32;&#32;}
309 
310 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
311 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_3_01false_00_01___tp_00_01___compare_01_4_1a503234cc71a9ebcaec57fdd558a9b2cc">__init</link>()
312 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_1a80419ac9ea0ee11114e1f28cf26a11ab">__init_winner</link>(1)];&#32;}
313 
321 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;pass&#32;a&#32;const&#32;reference&#32;since&#32;__key&#32;will&#32;be&#32;used&#32;as&#32;local</emphasis>
322 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;variable.</emphasis>
323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
324 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_3_01false_00_01___tp_00_01___compare_01_4_1aadac29421984aa702191fc81c3942afb">__delete_min_insert</link>(_Tp&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
325 &#32;&#32;&#32;&#32;&#32;&#32;{
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>;
327 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
328 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
329 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
330 <emphasis role="preprocessor">#endif</emphasis>
331 
332 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>;
333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
335 &#32;&#32;&#32;&#32;&#32;&#32;{
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted.</emphasis>
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__sup&#32;||&#32;(!_M_losers[__pos]._M_sup
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_M_comp(_M_losers[__pos]._M_key,&#32;__key)))
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_sup,&#32;__sup);
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(_M_losers[__pos]._M_key,&#32;__key);
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
345 &#32;&#32;&#32;&#32;&#32;&#32;}
346 
347 &#32;&#32;&#32;&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a704e30d74cc22713c993d8a22c145fef">_M_sup</link>&#32;=&#32;__sup;
348 &#32;&#32;&#32;&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a6887fcf9b3448e958f46c5a822befc5b">_M_source</link>&#32;=&#32;__source;
349 &#32;&#32;&#32;&#32;_M_losers[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser_1a8450fa226312185aa27a526f23677a75">_M_key</link>&#32;=&#32;__key;
350 &#32;&#32;&#32;&#32;&#32;&#32;}
351 &#32;&#32;&#32;&#32;};
352 
356 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
357 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreePointerBase
358 &#32;&#32;&#32;&#32;{
359 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
361 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Loser
362 &#32;&#32;&#32;&#32;&#32;&#32;{
363 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1a29d3e0975b0ae02f5866d2586ce7bd96">_M_sup</link>;
364 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1ae77cee84354354645fb7410a3b469fc4">_M_source</link>;
365 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1aff340bde45b79c6267138a286afcf0f1">_M_keyp</link>;
366 &#32;&#32;&#32;&#32;&#32;&#32;};
367 
368 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1abe5d47865742b75e2f83ea2eb66b5dde">_M_ik</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a734a6e3e7c6dded62e70c80f0bafca95">_M_offset</link>;
369 &#32;&#32;&#32;&#32;&#32;&#32;_Loser*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>;
370 &#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a9b097060e875536a4730af1de780434c">_M_comp</link>;
371 
372 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
373 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1adda3967a27c125af50e14f1604ca9b85">_LoserTreePointerBase</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,
374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
375 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a9b097060e875536a4730af1de780434c">_M_comp</link>(__comp)
376 &#32;&#32;&#32;&#32;&#32;&#32;{
377 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1abe5d47865742b75e2f83ea2eb66b5dde">_M_ik</link>&#32;=&#32;__k;
378 
379 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;greater&#32;power&#32;of&#32;2.</emphasis>
380 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>&#32;=&#32;1&#32;&lt;&lt;&#32;(<link linkend="_namespace____gnu__parallel_1ae8e1f6dc07de01f28bf591339cf8aa9c">__rd_log2</link>(<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1abe5d47865742b75e2f83ea2eb66b5dde">_M_ik</link>&#32;-&#32;1)&#32;+&#32;1);
381 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a734a6e3e7c6dded62e70c80f0bafca95">_M_offset</link>&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>;
382 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser">_Loser</link>[<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>&#32;*&#32;2];
383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1abe5d47865742b75e2f83ea2eb66b5dde">_M_ik</link>&#32;-&#32;1;&#32;__i&#32;&lt;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>;&#32;__i++)
384 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>[__i&#32;+&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>]._M_sup&#32;=&#32;<emphasis role="keyword">true</emphasis>;
385 &#32;&#32;&#32;&#32;&#32;&#32;}
386 
387 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a0c652b96b8f41d4fa5202466795e05e4">~_LoserTreePointerBase</link>()
388 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">delete</emphasis>[]&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>;&#32;}
389 
390 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a56e7fe0f477229d5feb9505af0b85bac">__get_min_source</link>()
391 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1ae77cee84354354645fb7410a3b469fc4">_M_source</link>;&#32;}
392 
393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a88d4c710f1305804c234dab9cff560c7">__insert_start</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
394 &#32;&#32;&#32;&#32;&#32;&#32;{
395 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_M_k</link>&#32;+&#32;__source;
396 
397 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1a29d3e0975b0ae02f5866d2586ce7bd96">_M_sup</link>&#32;=&#32;__sup;
398 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1ae77cee84354354645fb7410a3b469fc4">_M_source</link>&#32;=&#32;__source;
399 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser_1aff340bde45b79c6267138a286afcf0f1">_M_keyp</link>&#32;=&#32;&amp;__key;
400 &#32;&#32;&#32;&#32;&#32;&#32;}
401 &#32;&#32;&#32;&#32;};
402 
408 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable<emphasis role="comment">/*&#32;default&#32;==&#32;true&#32;*/</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
409 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreePointer
410 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreePointerBase&lt;_Tp,&#32;_Compare&gt;
411 &#32;&#32;&#32;&#32;{
412 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreePointerBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
413 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_Base::_M_k</link>;
414 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a9b097060e875536a4730af1de780434c">_Base::_M_comp</link>;
415 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_Base::_M_losers</link>;
416 
417 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
418 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a675555106fb0f446b505743d62a9c2bd">_LoserTreePointer</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
419 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base">_LoserTreePointerBase</link>(__k,&#32;__comp)
420 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
421 
422 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
423 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
424 &#32;&#32;&#32;&#32;&#32;&#32;{
425 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
426 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
427 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
428 &#32;&#32;&#32;&#32;&#32;&#32;{
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(2&#32;*&#32;__root);
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_losers[__right]._M_sup
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_losers[__left]._M_sup
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!_M_comp(*_M_losers[__right]._M_keyp,
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*_M_losers[__left]._M_keyp)))
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
446 &#32;&#32;&#32;&#32;&#32;&#32;}
447 &#32;&#32;&#32;&#32;&#32;&#32;}
448 
449 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a14745553ee7d256266412a4241c7bd38">__init</link>()
450 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(1)];&#32;}
451 
452 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1abb62d89c879f5871836f32509f992745">__delete_min_insert</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
453 &#32;&#32;&#32;&#32;&#32;&#32;{
454 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
455 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
456 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
457 <emphasis role="preprocessor">#endif</emphasis>
458 
459 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;__keyp&#32;=&#32;&amp;__key;
460 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0]._M_source;
461 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
463 &#32;&#32;&#32;&#32;&#32;&#32;{
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted,&#32;ties&#32;are&#32;broken&#32;by&#32;__source.</emphasis>
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__sup&#32;&amp;&amp;&#32;(!_M_losers[__pos]._M_sup
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;_M_losers[__pos]._M_source&#32;&lt;&#32;__source))
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!__sup&#32;&amp;&amp;&#32;!_M_losers[__pos]._M_sup&#32;&amp;&amp;
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((_M_comp(*_M_losers[__pos]._M_keyp,&#32;*__keyp))
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_comp(*__keyp,&#32;*_M_losers[__pos]._M_keyp)
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_M_losers[__pos]._M_source&#32;&lt;&#32;__source))))
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_sup,&#32;__sup);
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_keyp,&#32;__keyp);
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
477 &#32;&#32;&#32;&#32;&#32;&#32;}
478 
479 &#32;&#32;&#32;&#32;_M_losers[0]._M_sup&#32;=&#32;__sup;
480 &#32;&#32;&#32;&#32;_M_losers[0]._M_source&#32;=&#32;__source;
481 &#32;&#32;&#32;&#32;_M_losers[0]._M_keyp&#32;=&#32;__keyp;
482 &#32;&#32;&#32;&#32;&#32;&#32;}
483 &#32;&#32;&#32;&#32;};
484 
490 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
491 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreePointer&lt;<emphasis role="comment">/*&#32;__stable&#32;==&#32;*/</emphasis><link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>,&#32;_Tp,&#32;_Compare&gt;
492 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreePointerBase&lt;_Tp,&#32;_Compare&gt;
493 &#32;&#32;&#32;&#32;{
494 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreePointerBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
495 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1affe39b44312278297d51b19d79f1c074">_Base::_M_k</link>;
496 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a9b097060e875536a4730af1de780434c">_Base::_M_comp</link>;
497 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base_1a6a87e7e5c37561cc597e8802c7b91270">_Base::_M_losers</link>;
498 
499 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
500 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_3_01false_00_01___tp_00_01___compare_01_4_1a4159f5888842f1a5d849577e608c20bb">_LoserTreePointer</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
501 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base">_LoserTreePointerBase</link>(__k,&#32;__comp)
502 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
503 
504 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
505 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_3_01false_00_01___tp_00_01___compare_01_4_1ac8306641eb3ed6968aabb0e865fbad08">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
506 &#32;&#32;&#32;&#32;&#32;&#32;{
507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
508 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
510 &#32;&#32;&#32;&#32;&#32;&#32;{
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(2&#32;*&#32;__root);
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_losers[__right]._M_sup
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_losers[__left]._M_sup
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!_M_comp(*_M_losers[__right]._M_keyp,
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*_M_losers[__left]._M_keyp)))
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
528 &#32;&#32;&#32;&#32;&#32;&#32;}
529 &#32;&#32;&#32;&#32;&#32;&#32;}
530 
531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_3_01false_00_01___tp_00_01___compare_01_4_1a9761d71b8fae76e89f69501ea341fa5e">__init</link>()
532 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_1a0bba4193b0f5cd27da594af934a6adc8">__init_winner</link>(1)];&#32;}
533 
534 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_3_01false_00_01___tp_00_01___compare_01_4_1a4dc89cceac9c14f88c5fd62f2096b274">__delete_min_insert</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
535 &#32;&#32;&#32;&#32;&#32;&#32;{
536 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
537 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
538 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
539 <emphasis role="preprocessor">#endif</emphasis>
540 
541 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;__keyp&#32;=&#32;&amp;__key;
542 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0]._M_source;
543 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
545 &#32;&#32;&#32;&#32;&#32;&#32;{
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted.</emphasis>
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__sup&#32;||&#32;(!_M_losers[__pos]._M_sup
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_M_comp(*_M_losers[__pos]._M_keyp,&#32;*__keyp)))
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_sup,&#32;__sup);
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_keyp,&#32;__keyp);
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
555 &#32;&#32;&#32;&#32;&#32;&#32;}
556 
557 &#32;&#32;&#32;&#32;_M_losers[0]._M_sup&#32;=&#32;__sup;
558 &#32;&#32;&#32;&#32;_M_losers[0]._M_source&#32;=&#32;__source;
559 &#32;&#32;&#32;&#32;_M_losers[0]._M_keyp&#32;=&#32;__keyp;
560 &#32;&#32;&#32;&#32;&#32;&#32;}
561 &#32;&#32;&#32;&#32;};
562 
573 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
574 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreeUnguardedBase
575 &#32;&#32;&#32;&#32;{
576 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
577 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Loser
578 &#32;&#32;&#32;&#32;&#32;&#32;{
579 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser_1a69f5c34d366f65c1e484996ea6acc4fc">_M_source</link>;
580 &#32;&#32;&#32;&#32;_Tp&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser_1a0fa6c106d2640dac2fb8a721f944a787">_M_key</link>;
581 &#32;&#32;&#32;&#32;&#32;&#32;};
582 
583 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1af0f70e416dcd4fd6fe4a9c8cbb7ed6a7">_M_ik</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a8abccaf61e8ae7de3dd79cb61a8ec804">_M_offset</link>;
584 &#32;&#32;&#32;&#32;&#32;&#32;_Loser*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>;
585 &#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1afab0f1e4a7e9ffa77d0c97796e82ff71">_M_comp</link>;
586 
587 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
588 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9185293a6984edadb224190bfcbcc8dc">_LoserTreeUnguardedBase</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__sentinel,
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
590 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1afab0f1e4a7e9ffa77d0c97796e82ff71">_M_comp</link>(__comp)
591 &#32;&#32;&#32;&#32;&#32;&#32;{
592 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1af0f70e416dcd4fd6fe4a9c8cbb7ed6a7">_M_ik</link>&#32;=&#32;__k;
593 
594 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;greater&#32;power&#32;of&#32;2.</emphasis>
595 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>&#32;=&#32;1&#32;&lt;&lt;&#32;(<link linkend="_namespace____gnu__parallel_1ae8e1f6dc07de01f28bf591339cf8aa9c">__rd_log2</link>(<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1af0f70e416dcd4fd6fe4a9c8cbb7ed6a7">_M_ik</link>&#32;-&#32;1)&#32;+&#32;1);
596 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a8abccaf61e8ae7de3dd79cb61a8ec804">_M_offset</link>&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>;
597 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Avoid&#32;default-constructing&#32;_M_losers[]._M_key</emphasis>
598 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser">_Loser</link>*<emphasis role="keyword">&gt;</emphasis>(::operator&#32;<emphasis role="keyword">new</emphasis>(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser">_Loser</link>)));
600 
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>;&#32;++__i)
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::new(&amp;(<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__i]._M_key))&#32;_Tp(__sentinel);
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__i].<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser_1a69f5c34d366f65c1e484996ea6acc4fc">_M_source</link>&#32;=&#32;-1;
605 &#32;&#32;&#32;&#32;&#32;&#32;}
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>&#32;+&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1af0f70e416dcd4fd6fe4a9c8cbb7ed6a7">_M_ik</link>&#32;-&#32;1;&#32;__i&#32;&lt;&#32;(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>);&#32;++__i)
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::new(&amp;(<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__i]._M_key))&#32;_Tp(__sentinel);
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__i].<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser_1a69f5c34d366f65c1e484996ea6acc4fc">_M_source</link>&#32;=&#32;-1;
610 &#32;&#32;&#32;&#32;&#32;&#32;}
611 &#32;&#32;&#32;&#32;&#32;&#32;}
612 
613 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a0024696ad1f809e6a0f8a92d2cd4e8cf">~_LoserTreeUnguardedBase</link>()
614 &#32;&#32;&#32;&#32;&#32;&#32;{
615 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>);&#32;++__i)
616 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__i].~<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser">_Loser</link>();
617 &#32;&#32;&#32;&#32;::operator&#32;<emphasis role="keyword">delete</emphasis>(<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>);
618 &#32;&#32;&#32;&#32;&#32;&#32;}
619 
620 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
621 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a43fcb8bb978e3ed45d9621698a5687d3">__get_min_source</link>()
622 &#32;&#32;&#32;&#32;&#32;&#32;{
623 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
624 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
625 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[0]._M_source&#32;!=&#32;-1);
626 <emphasis role="preprocessor">#endif</emphasis>
627 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser_1a69f5c34d366f65c1e484996ea6acc4fc">_M_source</link>;
628 &#32;&#32;&#32;&#32;&#32;&#32;}
629 
630 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
631 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1aedbfbe08bfd4ad7f0be0f5314206be2f">__insert_start</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source,&#32;<emphasis role="keywordtype">bool</emphasis>)
632 &#32;&#32;&#32;&#32;&#32;&#32;{
633 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_M_k</link>&#32;+&#32;__source;
634 
635 &#32;&#32;&#32;&#32;::new(&amp;(<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__pos]._M_key))&#32;_Tp(__key);
636 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser_1a69f5c34d366f65c1e484996ea6acc4fc">_M_source</link>&#32;=&#32;__source;
637 &#32;&#32;&#32;&#32;&#32;&#32;}
638 &#32;&#32;&#32;&#32;};
639 
645 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable<emphasis role="comment">/*&#32;default&#32;==&#32;true&#32;*/</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
646 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreeUnguarded
647 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreeUnguardedBase&lt;_Tp,&#32;_Compare&gt;
648 &#32;&#32;&#32;&#32;{
649 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreeUnguardedBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
650 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_Base::_M_k</link>;
651 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1afab0f1e4a7e9ffa77d0c97796e82ff71">_Base::_M_comp</link>;
652 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_Base::_M_losers</link>;
653 
654 &#32;&#32;<emphasis role="keyword">public</emphasis>:
655 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1adab26d6bdfe5acd3e67393435cbbbaa9">_LoserTreeUnguarded</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__sentinel,
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
657 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base">_LoserTreeUnguardedBase</link>(__k,&#32;__sentinel,&#32;__comp)
658 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
659 
660 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
661 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
662 &#32;&#32;&#32;&#32;&#32;&#32;{
663 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
664 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
665 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
666 &#32;&#32;&#32;&#32;&#32;&#32;{
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(2&#32;*&#32;__root);
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_M_comp(_M_losers[__right]._M_key,
670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__left]._M_key))
671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
682 &#32;&#32;&#32;&#32;&#32;&#32;}
683 &#32;&#32;&#32;&#32;&#32;&#32;}
684 
685 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
686 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1aaa434ca898abd7d3aa8f100b203a0cc7">__init</link>()
687 &#32;&#32;&#32;&#32;&#32;&#32;{
688 &#32;&#32;&#32;&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(1)];
689 
690 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
691 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top&#32;at&#32;the&#32;beginning</emphasis>
692 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(0&#32;sequences!)</emphasis>
693 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
694 <emphasis role="preprocessor">#endif</emphasis>
695 &#32;&#32;&#32;&#32;&#32;&#32;}
696 
697 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;pass&#32;a&#32;const&#32;reference&#32;since&#32;__key&#32;will&#32;be&#32;used&#32;as</emphasis>
698 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;local&#32;variable.</emphasis>
699 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
700 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1ad07dbc5954183f7e6ccf4c5981ee452e">__delete_min_insert</link>(_Tp&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>)
701 &#32;&#32;&#32;&#32;&#32;&#32;{
702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>;
703 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
704 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
705 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
706 <emphasis role="preprocessor">#endif</emphasis>
707 
708 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0]._M_source;
709 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
711 &#32;&#32;&#32;&#32;&#32;&#32;{
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted,&#32;ties&#32;are&#32;broken&#32;by&#32;_M_source.</emphasis>
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_comp(_M_losers[__pos]._M_key,&#32;__key)
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_comp(__key,&#32;_M_losers[__pos]._M_key)
715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_M_losers[__pos]._M_source&#32;&lt;&#32;__source))
716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(_M_losers[__pos]._M_key,&#32;__key);
720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
721 &#32;&#32;&#32;&#32;&#32;&#32;}
722 
723 &#32;&#32;&#32;&#32;_M_losers[0]._M_source&#32;=&#32;__source;
724 &#32;&#32;&#32;&#32;_M_losers[0]._M_key&#32;=&#32;__key;
725 &#32;&#32;&#32;&#32;&#32;&#32;}
726 &#32;&#32;&#32;&#32;};
727 
733 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
734 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreeUnguarded&lt;<emphasis role="comment">/*&#32;__stable&#32;==&#32;*/</emphasis><link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>,&#32;_Tp,&#32;_Compare&gt;
735 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreeUnguardedBase&lt;_Tp,&#32;_Compare&gt;
736 &#32;&#32;&#32;&#32;{
737 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreeUnguardedBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
738 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a9e71373c28d35cf7b7c6b0d75154c34a">_Base::_M_k</link>;
739 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1afab0f1e4a7e9ffa77d0c97796e82ff71">_Base::_M_comp</link>;
740 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base_1a08f8f89b47b41142a46311068848cec4">_Base::_M_losers</link>;
741 
742 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
743 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1a9750c97b57ddaa155ece401058c37912">_LoserTreeUnguarded</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__sentinel,
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
745 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base">_LoserTreeUnguardedBase</link>(__k,&#32;__sentinel,&#32;__comp)
746 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
747 
748 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
749 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1ad317cf4e56008921cfd1bbd978cbf11d">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
750 &#32;&#32;&#32;&#32;&#32;&#32;{
751 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
752 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
753 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
754 &#32;&#32;&#32;&#32;&#32;&#32;{
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(2&#32;*&#32;__root);
756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
757 
758 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;__left&#32;one&#32;is&#32;sentinel&#32;then&#32;__right&#32;one&#32;must&#32;be,&#32;too.</emphasis>
760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_losers[__left]._M_source&#32;==&#32;-1)
761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[__right]._M_source&#32;==&#32;-1);
762 <emphasis role="preprocessor">#endif</emphasis>
763 
764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_M_comp(_M_losers[__right]._M_key,
765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__left]._M_key))
766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
777 &#32;&#32;&#32;&#32;&#32;&#32;}
778 &#32;&#32;&#32;&#32;&#32;&#32;}
779 
780 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
781 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1a2c9d22256f28e91942ebe161235be9e3">__init</link>()
782 &#32;&#32;&#32;&#32;&#32;&#32;{
783 &#32;&#32;&#32;&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_1a9138f307e9ac117e8862da768587a84d">__init_winner</link>(1)];
784 
785 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
786 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top&#32;at&#32;the&#32;beginning</emphasis>
787 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(0&#32;sequences!)</emphasis>
788 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
789 <emphasis role="preprocessor">#endif</emphasis>
790 &#32;&#32;&#32;&#32;&#32;&#32;}
791 
792 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;pass&#32;a&#32;const&#32;reference&#32;since&#32;__key&#32;will&#32;be&#32;used&#32;as</emphasis>
793 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;local&#32;variable.</emphasis>
794 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
795 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1a93368bc884959f8a9dab8a9f20a77e38">__delete_min_insert</link>(_Tp&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>)
796 &#32;&#32;&#32;&#32;&#32;&#32;{
797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>;
798 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
799 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
800 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
801 <emphasis role="preprocessor">#endif</emphasis>
802 
803 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0]._M_source;
804 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
806 &#32;&#32;&#32;&#32;&#32;&#32;{
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted.</emphasis>
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_comp(_M_losers[__pos]._M_key,&#32;__key))
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(_M_losers[__pos]._M_key,&#32;__key);
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
814 &#32;&#32;&#32;&#32;&#32;&#32;}
815 
816 &#32;&#32;&#32;&#32;_M_losers[0]._M_source&#32;=&#32;__source;
817 &#32;&#32;&#32;&#32;_M_losers[0]._M_key&#32;=&#32;__key;
818 &#32;&#32;&#32;&#32;&#32;&#32;}
819 &#32;&#32;&#32;&#32;};
820 
827 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
828 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreePointerUnguardedBase
829 &#32;&#32;&#32;&#32;{
830 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
831 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Loser
832 &#32;&#32;&#32;&#32;&#32;&#32;{
833 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1ab7fe690f2f934ae60be7b4d0cebdadc1">_M_source</link>;
834 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1aafc3041e9f7106a7b8ac65de2fe53ce2">_M_keyp</link>;
835 &#32;&#32;&#32;&#32;&#32;&#32;};
836 
837 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a4864b9073ca034a385e2cb4355e91698">_M_ik</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>,&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1aae5a05ae78bab39ad6f5b1c9987d3bd6">_M_offset</link>;
838 &#32;&#32;&#32;&#32;&#32;&#32;_Loser*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>;
839 &#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1af750ef5e00aac06284ee4b3064fc9eb3">_M_comp</link>;
840 
841 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
842 
843 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ac1dcbcf7cdb2ea4fb754f12ba1296230">_LoserTreePointerUnguardedBase</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__sentinel,
844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
845 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1af750ef5e00aac06284ee4b3064fc9eb3">_M_comp</link>(__comp)
846 &#32;&#32;&#32;&#32;&#32;&#32;{
847 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a4864b9073ca034a385e2cb4355e91698">_M_ik</link>&#32;=&#32;__k;
848 
849 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;greater&#32;power&#32;of&#32;2.</emphasis>
850 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>&#32;=&#32;1&#32;&lt;&lt;&#32;(<link linkend="_namespace____gnu__parallel_1ae8e1f6dc07de01f28bf591339cf8aa9c">__rd_log2</link>(<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a4864b9073ca034a385e2cb4355e91698">_M_ik</link>&#32;-&#32;1)&#32;+&#32;1);
851 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1aae5a05ae78bab39ad6f5b1c9987d3bd6">_M_offset</link>&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>;
852 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Avoid&#32;default-constructing&#32;_M_losers[]._M_key</emphasis>
853 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser">_Loser</link>[2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>];
854 
855 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__i&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>&#32;+&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a4864b9073ca034a385e2cb4355e91698">_M_ik</link>&#32;-&#32;1;&#32;__i&#32;&lt;&#32;(2&#32;*&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>);&#32;++__i)
856 &#32;&#32;&#32;&#32;&#32;&#32;{
857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>[__i].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1aafc3041e9f7106a7b8ac65de2fe53ce2">_M_keyp</link>&#32;=&#32;&amp;__sentinel;
858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>[__i].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1ab7fe690f2f934ae60be7b4d0cebdadc1">_M_source</link>&#32;=&#32;-1;
859 &#32;&#32;&#32;&#32;&#32;&#32;}
860 &#32;&#32;&#32;&#32;&#32;&#32;}
861 
862 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1af70bf019d7367565005f617196d54cda">~_LoserTreePointerUnguardedBase</link>()
863 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">delete</emphasis>[]&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>;&#32;}
864 
865 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
866 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1aa3187ebb322512beaad2e7f1278d4dcb">__get_min_source</link>()
867 &#32;&#32;&#32;&#32;&#32;&#32;{
868 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
869 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
870 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>[0]._M_source&#32;!=&#32;-1);
871 <emphasis role="preprocessor">#endif</emphasis>
872 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>[0].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1ab7fe690f2f934ae60be7b4d0cebdadc1">_M_source</link>;
873 &#32;&#32;&#32;&#32;&#32;&#32;}
874 
875 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
876 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a9d05d4fc893658fa22044db566ac2e96">__insert_start</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source,&#32;<emphasis role="keywordtype">bool</emphasis>)
877 &#32;&#32;&#32;&#32;&#32;&#32;{
878 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_M_k</link>&#32;+&#32;__source;
879 
880 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1aafc3041e9f7106a7b8ac65de2fe53ce2">_M_keyp</link>&#32;=&#32;&amp;__key;
881 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_M_losers</link>[__pos].<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser_1ab7fe690f2f934ae60be7b4d0cebdadc1">_M_source</link>&#32;=&#32;__source;
882 &#32;&#32;&#32;&#32;&#32;&#32;}
883 &#32;&#32;&#32;&#32;};
884 
890 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable<emphasis role="comment">/*&#32;default&#32;==&#32;true&#32;*/</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
891 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreePointerUnguarded
892 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreePointerUnguardedBase&lt;_Tp,&#32;_Compare&gt;
893 &#32;&#32;&#32;&#32;{
894 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreePointerUnguardedBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
895 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_Base::_M_k</link>;
896 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1af750ef5e00aac06284ee4b3064fc9eb3">_Base::_M_comp</link>;
897 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_Base::_M_losers</link>;
898 
899 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
900 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1af170367718a18941fe8b6fc7d11a0d6d">_LoserTreePointerUnguarded</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__sentinel,
901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
902 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base">_LoserTreePointerUnguardedBase</link>(__k,&#32;__sentinel,&#32;__comp)
903 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
904 
905 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
906 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
907 &#32;&#32;&#32;&#32;&#32;&#32;{
908 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
909 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
910 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
911 &#32;&#32;&#32;&#32;&#32;&#32;{
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(2&#32;*&#32;__root);
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_M_comp(*_M_losers[__right]._M_keyp,
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*_M_losers[__left]._M_keyp))
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
927 &#32;&#32;&#32;&#32;&#32;&#32;}
928 &#32;&#32;&#32;&#32;&#32;&#32;}
929 
930 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
931 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1acc21951aaf8d145c3e4a843a90de32e5">__init</link>()
932 &#32;&#32;&#32;&#32;&#32;&#32;{
933 &#32;&#32;&#32;&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(1)];
934 
935 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
936 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top&#32;at&#32;the&#32;beginning</emphasis>
937 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(0&#32;sequences!)</emphasis>
938 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
939 <emphasis role="preprocessor">#endif</emphasis>
940 &#32;&#32;&#32;&#32;&#32;&#32;}
941 
942 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
943 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a5fac61da7384c873ba99c7b9af756e0e">__delete_min_insert</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
944 &#32;&#32;&#32;&#32;&#32;&#32;{
945 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
946 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
947 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
948 <emphasis role="preprocessor">#endif</emphasis>
949 
950 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;__keyp&#32;=&#32;&amp;__key;
951 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0]._M_source;
952 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
954 &#32;&#32;&#32;&#32;&#32;&#32;{
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted,&#32;ties&#32;are&#32;broken&#32;by&#32;_M_source.</emphasis>
956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_comp(*_M_losers[__pos]._M_keyp,&#32;*__keyp)
957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(!_M_comp(*__keyp,&#32;*_M_losers[__pos]._M_keyp)
958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_M_losers[__pos]._M_source&#32;&lt;&#32;__source))
959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_keyp,&#32;__keyp);
963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
964 &#32;&#32;&#32;&#32;&#32;&#32;}
965 
966 &#32;&#32;&#32;&#32;_M_losers[0]._M_source&#32;=&#32;__source;
967 &#32;&#32;&#32;&#32;_M_losers[0]._M_keyp&#32;=&#32;__keyp;
968 &#32;&#32;&#32;&#32;&#32;&#32;}
969 &#32;&#32;&#32;&#32;};
970 
976 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
977 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_LoserTreePointerUnguarded&lt;<emphasis role="comment">/*&#32;__stable&#32;==&#32;*/</emphasis><link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>,&#32;_Tp,&#32;_Compare&gt;
978 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_LoserTreePointerUnguardedBase&lt;_Tp,&#32;_Compare&gt;
979 &#32;&#32;&#32;&#32;{
980 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_LoserTreePointerUnguardedBase&lt;_Tp,&#32;_Compare&gt;&#32;_Base;
981 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1a6c6954a08a77db25a19beaa7eaf4f04a">_Base::_M_k</link>;
982 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1af750ef5e00aac06284ee4b3064fc9eb3">_Base::_M_comp</link>;
983 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1ad7dfc457e6868455a40ce04cd527c51e">_Base::_M_losers</link>;
984 
985 &#32;&#32;<emphasis role="keyword">public</emphasis>:
986 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1ab48b9b1d271be1eeb18b60f5cd810338">_LoserTreePointerUnguarded</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__k,&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__sentinel,
987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp&#32;=&#32;std::less&lt;_Tp&gt;())
988 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base">_Base</link>::<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base">_LoserTreePointerUnguardedBase</link>(__k,&#32;__sentinel,&#32;__comp)
989 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
990 
991 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
992 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1aef4cbfc8b9ec083c0925f4ed8c82ac6e">__init_winner</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__root)
993 &#32;&#32;&#32;&#32;&#32;&#32;{
994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__root&#32;&gt;=&#32;_M_k)
995 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__root;
996 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
997 &#32;&#32;&#32;&#32;&#32;&#32;{
998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__left&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(2&#32;*&#32;__root);
999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__right&#32;=&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(2&#32;*&#32;__root&#32;+&#32;1);
1000 
1001 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
1002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;__left&#32;one&#32;is&#32;sentinel&#32;then&#32;__right&#32;one&#32;must&#32;be,&#32;too.</emphasis>
1003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_losers[__left]._M_source&#32;==&#32;-1)
1004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[__right]._M_source&#32;==&#32;-1);
1005 <emphasis role="preprocessor">#endif</emphasis>
1006 
1007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_M_comp(*_M_losers[__right]._M_keyp,
1008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*_M_losers[__left]._M_keyp))
1009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;one&#32;is&#32;less&#32;or&#32;equal.</emphasis>
1011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__right];
1012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__left;
1013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Right&#32;one&#32;is&#32;less.</emphasis>
1017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_losers[__root]&#32;=&#32;_M_losers[__left];
1018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__right;
1019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1020 &#32;&#32;&#32;&#32;&#32;&#32;}
1021 &#32;&#32;&#32;&#32;&#32;&#32;}
1022 
1023 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1024 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1a29b1a23dd57c8e79165b7a01c3420890">__init</link>()
1025 &#32;&#32;&#32;&#32;&#32;&#32;{
1026 &#32;&#32;&#32;&#32;_M_losers[0]&#32;=&#32;_M_losers[<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_1a21eccd25e41a6236907c79dfb73f985c">__init_winner</link>(1)];
1027 
1028 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
1029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top&#32;at&#32;the&#32;beginning</emphasis>
1030 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(0&#32;sequences!)</emphasis>
1031 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
1032 <emphasis role="preprocessor">#endif</emphasis>
1033 &#32;&#32;&#32;&#32;&#32;&#32;}
1034 
1035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1036 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_3_01false_00_01___tp_00_01___compare_01_4_1a39b42815ce71654cc65b867c6a16b69b">__delete_min_insert</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;&#32;__key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sup)
1037 &#32;&#32;&#32;&#32;&#32;&#32;{
1038 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
1039 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;dummy&#32;sequence&#32;can&#32;ever&#32;be&#32;at&#32;the&#32;top!</emphasis>
1040 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(_M_losers[0]._M_source&#32;!=&#32;-1);
1041 <emphasis role="preprocessor">#endif</emphasis>
1042 
1043 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;__keyp&#32;=&#32;&amp;__key;
1044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__source&#32;=&#32;_M_losers[0]._M_source;
1045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__pos&#32;=&#32;(_M_k&#32;+&#32;__source)&#32;/&#32;2;&#32;__pos&#32;&gt;&#32;0;
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos&#32;/=&#32;2)
1047 &#32;&#32;&#32;&#32;&#32;&#32;{
1048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;smaller&#32;one&#32;gets&#32;promoted.</emphasis>
1049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_comp(*(_M_losers[__pos]._M_keyp),&#32;*__keyp))
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;other&#32;one&#32;is&#32;smaller.</emphasis>
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_source,&#32;__source);
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>(_M_losers[__pos]._M_keyp,&#32;__keyp);
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1055 &#32;&#32;&#32;&#32;&#32;&#32;}
1056 
1057 &#32;&#32;&#32;&#32;_M_losers[0]._M_source&#32;=&#32;__source;
1058 &#32;&#32;&#32;&#32;_M_losers[0]._M_keyp&#32;=&#32;__keyp;
1059 &#32;&#32;&#32;&#32;&#32;&#32;}
1060 &#32;&#32;&#32;&#32;};
1061 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_parallel</emphasis>
1062 
1063 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_LOSERTREE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
