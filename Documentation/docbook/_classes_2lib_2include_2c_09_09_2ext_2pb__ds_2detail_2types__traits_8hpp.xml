<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2types__traits_8hpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/types_traits.hpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/types_traits.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;algorithm&gt;<?linebreak?>#include &lt;utility&gt;<?linebreak?>#include &lt;ext/pb_ds/tag_and_trait.hpp&gt;<?linebreak?>#include &lt;ext/pb_ds/detail/type_utils.hpp&gt;<?linebreak?>#include &lt;memory&gt;<?linebreak?></programlisting>Include dependency graph for types_traits.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2types__traits_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies">__gnu_pbds::detail::no_throw_copies&lt; Key, Mapped &gt;</link></para>

<para>Primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_3_01_key_00_01null__type_01_4">__gnu_pbds::detail::no_throw_copies&lt; Key, null_type &gt;</link></para>

<para>Specialization. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value">__gnu_pbds::detail::stored_value&lt; _Tv &gt;</link></para>

<para>Stored value. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash">__gnu_pbds::detail::stored_hash&lt; _Th &gt;</link></para>

<para>Stored hash. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">__gnu_pbds::detail::stored_data&lt; _Tv, _Th, Store_Hash &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data_3_01___tv_00_01___th_00_01false_01_4">__gnu_pbds::detail::stored_data&lt; _Tv, _Th, false &gt;</link></para>

<para>Specialization for representation of stored data of just value type. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">__gnu_pbds::detail::select_value_type&lt; Key, Mapped &gt;</link></para>

<para>Choose value_type to be a key/value pair or just a key. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type_3_01_key_00_01null__type_01_4">__gnu_pbds::detail::select_value_type&lt; Key, null_type &gt;</link></para>

<para>Specialization for sets where the key is the value_type. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type">__gnu_pbds::detail::maybe_null_type&lt; Key, Mapped, _Alloc, Store_Hash &gt;</link></para>

<para>Base class for conditionally defining a static data member. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type_3_01_key_00_01null__type_00_01___alloc_00_01_store___hash_01_4">__gnu_pbds::detail::maybe_null_type&lt; Key, null_type, _Alloc, Store_Hash &gt;</link></para>

<para>Specialization that defines a static data member of type <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">__gnu_pbds::detail::rebind_traits&lt; _Alloc, T &gt;</link></para>

<para>Consistent API for accessing allocator-related types. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</link></para>

<para>Traits for abstract types. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__pbds">__gnu_pbds</link></para>

<para>GNU extensions for policy-based data structures for public use. </para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____gnu__pbds_1_1detail">__gnu_pbds::detail</link></para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
