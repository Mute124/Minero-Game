<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2rc__string__base_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/rc_string_base.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/rc_string_base.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;ext/atomicity.h&gt;<?linebreak?>#include &lt;ext/alloc_traits.h&gt;<?linebreak?>#include &lt;bits/stl_iterator_base_funcs.h&gt;<?linebreak?></programlisting>Include dependency graph for rc_string_base.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2ext_2rc__string__base_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>namespace __gnu_cxx <link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2rc__string__base_8h_1a56fd5a6be7c55e53e3eb59de5aa1ab9b">_GLIBCXX_VISIBILITY</link> (default)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2rc__string__base_8h_1a56fd5a6be7c55e53e3eb59de5aa1ab9b"/><section>
    <title>_GLIBCXX_VISIBILITY()</title>
<indexterm><primary>_GLIBCXX_VISIBILITY</primary><secondary>rc_string_base.h</secondary></indexterm>
<indexterm><primary>rc_string_base.h</primary><secondary>_GLIBCXX_VISIBILITY</secondary></indexterm>
<para><computeroutput>namespace __gnu_cxx _GLIBCXX_VISIBILITY (default )</computeroutput></para>
<para>Documentation? What&apos;s that? Nathan Myers <link xlink:href="mailto:ncm@cantrip.org">ncm@cantrip.org</link>.</para>

<para>A string looks like this:</para>

<para><literallayout><computeroutput>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[_Rep]
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_length
[__rc_string_base&lt;char_type&gt;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_capacity
_M_dataplus&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_refcount
_M_p&#32;----------------&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unnamed&#32;<link linkend="_classarray">array</link>&#32;of&#32;char_type
</computeroutput></literallayout></para>

<para>Where the _M_p points to the first character in the string, and you cast it to a pointer-to-_Rep and subtract 1 to get a pointer to the header.</para>

<para>This approach has the enormous advantage that a string object requires only one allocation. All the ugliness is confined within a single pair of inline functions, which each compile to a single <emphasis>add</emphasis> instruction: _Rep::_M_refdata(), and __rc_string_base::_M_rep(); and the allocation function which gets a block of raw bytes and with room enough and constructs a _Rep object at the front.</para>

<para>The reason you want _M_data pointing to the character array and not the _Rep is so that the debugger can see the string contents. (Probably we should add a non-inline member to get the _Rep for the debugger to use, so users can check the actual string length.)</para>

<para>Note that the _Rep object is a POD so that you can have a static <emphasis>empty string</emphasis> _Rep object already <emphasis>constructed</emphasis> before static constructors have run. The reference-count encoding is chosen so that a 0 indicates one reference, so you never try to destroy the empty-string _Rep object.</para>

<para>All but the last paragraph is considered pretty conventional for a C++ string implementation.</para>
</section>
</section>
</section>
