<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2ia32intrin_8h_source" xml:lang="en-US">
<title>ia32intrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/ia32intrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2009-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#ifndef&#32;_X86GPRINTRIN_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#&#32;error&#32;&quot;Never&#32;use&#32;&lt;ia32intrin.h&gt;&#32;directly;&#32;include&#32;&lt;x86gprintrin.h&gt;&#32;instead.&quot;</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 
28 <emphasis role="comment">/*&#32;32bit&#32;bsf&#32;*/</emphasis>
29 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
30 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
31 __bsfd&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
32 {
33 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ctz&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
34 }
35 
36 <emphasis role="comment">/*&#32;32bit&#32;bsr&#32;*/</emphasis>
37 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
38 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
39 __bsrd&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
40 {
41 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_bsrsi&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
42 }
43 
44 <emphasis role="comment">/*&#32;32bit&#32;bswap&#32;*/</emphasis>
45 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
46 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
47 __bswapd&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
48 {
49 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_bswap32&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
50 }
51 
52 <emphasis role="preprocessor">#ifndef&#32;__iamcu__</emphasis>
53 
54 <emphasis role="preprocessor">#ifndef&#32;__CRC32__</emphasis>
55 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
56 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;crc32&quot;)</emphasis>
57 <emphasis role="preprocessor">#define&#32;__DISABLE_CRC32__</emphasis>
58 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__CRC32__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
59 
60 <emphasis role="comment">/*&#32;32bit&#32;accumulate&#32;CRC32&#32;(polynomial&#32;0x11EDC6F41)&#32;value.&#32;&#32;*/</emphasis>
61 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
62 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
63 __crc32b&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
64 {
65 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32qi&#32;(<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
66 }
67 
68 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
69 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
70 __crc32w&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
71 {
72 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32hi&#32;(<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
73 }
74 
75 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
76 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
77 __crc32d&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
78 {
79 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32si&#32;(<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
80 }
81 
82 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_CRC32__</emphasis>
83 <emphasis role="preprocessor">#undef&#32;__DISABLE_CRC32__</emphasis>
84 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
85 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_CRC32__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
86 
87 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__iamcu__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
88 
89 <emphasis role="comment">/*&#32;32bit&#32;popcnt&#32;*/</emphasis>
90 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
91 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
92 __popcntd&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
93 {
94 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_popcount&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
95 }
96 
97 <emphasis role="preprocessor">#ifndef&#32;__iamcu__</emphasis>
98 
99 <emphasis role="comment">/*&#32;rdpmc&#32;*/</emphasis>
100 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
101 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
102 __rdpmc&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>)
103 {
104 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rdpmc&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiseq__selection_8h_1a3b62a50de6f447fc735249345ae3a3da">__S</link>);
105 }
106 
107 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__iamcu__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
108 
109 <emphasis role="comment">/*&#32;rdtsc&#32;*/</emphasis>
110 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
111 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
112 __rdtsc&#32;(<emphasis role="keywordtype">void</emphasis>)
113 {
114 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rdtsc&#32;();
115 }
116 
117 <emphasis role="preprocessor">#ifndef&#32;__iamcu__</emphasis>
118 
119 <emphasis role="comment">/*&#32;rdtscp&#32;*/</emphasis>
120 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
121 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
122 __rdtscp&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>)
123 {
124 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rdtscp&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
125 }
126 
127 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__iamcu__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
128 
129 <emphasis role="comment">/*&#32;8bit&#32;rol&#32;*/</emphasis>
130 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>
131 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
132 __rolb&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
133 {
134 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rolqi&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>);
135 }
136 
137 <emphasis role="comment">/*&#32;16bit&#32;rol&#32;*/</emphasis>
138 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>
139 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
140 __rolw&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
141 {
142 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rolhi&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>);
143 }
144 
145 <emphasis role="comment">/*&#32;32bit&#32;rol&#32;*/</emphasis>
146 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
147 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
148 __rold&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
149 {
150 &#32;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;=&#32;31;
151 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&gt;&gt;&#32;(-<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;&#32;31));
152 }
153 
154 <emphasis role="comment">/*&#32;8bit&#32;ror&#32;*/</emphasis>
155 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>
156 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
157 __rorb&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
158 {
159 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rorqi&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>);
160 }
161 
162 <emphasis role="comment">/*&#32;16bit&#32;ror&#32;*/</emphasis>
163 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>
164 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
165 __rorw&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
166 {
167 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_rorhi&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>);
168 }
169 
170 <emphasis role="comment">/*&#32;32bit&#32;ror&#32;*/</emphasis>
171 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
172 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
173 __rord&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
174 {
175 &#32;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;=&#32;31;
176 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&gt;&gt;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&lt;&lt;&#32;(-<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;&#32;31));
177 }
178 
179 <emphasis role="comment">/*&#32;Pause&#32;*/</emphasis>
180 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
181 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
182 __pause&#32;(<emphasis role="keywordtype">void</emphasis>)
183 {
184 &#32;&#32;__builtin_ia32_pause&#32;();
185 }
186 
187 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
188 <emphasis role="comment">/*&#32;64bit&#32;bsf&#32;*/</emphasis>
189 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
190 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
191 __bsfq&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
192 {
193 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ctzll&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
194 }
195 
196 <emphasis role="comment">/*&#32;64bit&#32;bsr&#32;*/</emphasis>
197 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
198 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
199 __bsrq&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
200 {
201 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_bsrdi&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
202 }
203 
204 <emphasis role="comment">/*&#32;64bit&#32;bswap&#32;*/</emphasis>
205 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
206 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
207 __bswapq&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
208 {
209 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_bswap64&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
210 }
211 
212 <emphasis role="preprocessor">#ifndef&#32;__CRC32__</emphasis>
213 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
214 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;crc32&quot;)</emphasis>
215 <emphasis role="preprocessor">#define&#32;__DISABLE_CRC32__</emphasis>
216 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__CRC32__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
217 
218 <emphasis role="comment">/*&#32;64bit&#32;accumulate&#32;CRC32&#32;(polynomial&#32;0x11EDC6F41)&#32;value.&#32;&#32;*/</emphasis>
219 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
220 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
221 __crc32q&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>)
222 {
223 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_crc32di&#32;(<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>,&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a61128338a8d88697158a2e815eda1670">__V</link>);
224 }
225 
226 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_CRC32__</emphasis>
227 <emphasis role="preprocessor">#undef&#32;__DISABLE_CRC32__</emphasis>
228 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
229 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_CRC32__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
230 
231 <emphasis role="comment">/*&#32;64bit&#32;popcnt&#32;*/</emphasis>
232 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
233 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
234 __popcntq&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
235 {
236 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_popcountll&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
237 }
238 
239 <emphasis role="comment">/*&#32;64bit&#32;rol&#32;*/</emphasis>
240 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
241 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
242 __rolq&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
243 {
244 &#32;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;=&#32;63;
245 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&gt;&gt;&#32;(-<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;&#32;63));
246 }
247 
248 <emphasis role="comment">/*&#32;64bit&#32;ror&#32;*/</emphasis>
249 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
250 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
251 __rorq&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)
252 {
253 &#32;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;=&#32;63;
254 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&gt;&gt;&#32;<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>)&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&lt;&lt;&#32;(-<link linkend="__classes_2lib_2include_2ia32intrin_8h_1a6600418040803accf6597831bb186ef9">__C</link>&#32;&amp;&#32;63));
255 }
256 
257 <emphasis role="comment">/*&#32;Read&#32;flags&#32;register&#32;*/</emphasis>
258 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
259 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
260 __readeflags&#32;(<emphasis role="keywordtype">void</emphasis>)
261 {
262 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_readeflags_u64&#32;();
263 }
264 
265 <emphasis role="comment">/*&#32;Write&#32;flags&#32;register&#32;*/</emphasis>
266 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
267 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
268 __writeeflags&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
269 {
270 &#32;&#32;__builtin_ia32_writeeflags_u64&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
271 }
272 
273 <emphasis role="preprocessor">#define&#32;_bswap64(a)&#32;&#32;&#32;&#32;&#32;__bswapq(a)</emphasis>
274 <emphasis role="preprocessor">#define&#32;_popcnt64(a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__popcntq(a)</emphasis>
275 <emphasis role="preprocessor">#else</emphasis>
276 
277 <emphasis role="comment">/*&#32;Read&#32;flags&#32;register&#32;*/</emphasis>
278 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
279 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
280 __readeflags&#32;(<emphasis role="keywordtype">void</emphasis>)
281 {
282 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_readeflags_u32&#32;();
283 }
284 
285 <emphasis role="comment">/*&#32;Write&#32;flags&#32;register&#32;*/</emphasis>
286 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
287 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
288 __writeeflags&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
289 {
290 &#32;&#32;__builtin_ia32_writeeflags_u32&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
291 }
292 
293 <emphasis role="preprocessor">#endif</emphasis>
294 
295 <emphasis role="comment">/*&#32;On&#32;LP64&#32;systems,&#32;longs&#32;are&#32;64-bit.&#32;&#32;Use&#32;the&#32;appropriate&#32;rotate</emphasis>
296 <emphasis role="comment">&#32;*&#32;function.&#32;&#32;*/</emphasis>
297 <emphasis role="preprocessor">#ifdef&#32;__LP64__</emphasis>
298 <emphasis role="preprocessor">#define&#32;_lrotl(a,b)&#32;&#32;&#32;&#32;&#32;__rolq((a),&#32;(b))</emphasis>
299 <emphasis role="preprocessor">#define&#32;_lrotr(a,b)&#32;&#32;&#32;&#32;&#32;__rorq((a),&#32;(b))</emphasis>
300 <emphasis role="preprocessor">#else</emphasis>
301 <emphasis role="preprocessor">#define&#32;_lrotl(a,b)&#32;&#32;&#32;&#32;&#32;__rold((a),&#32;(b))</emphasis>
302 <emphasis role="preprocessor">#define&#32;_lrotr(a,b)&#32;&#32;&#32;&#32;&#32;__rord((a),&#32;(b))</emphasis>
303 <emphasis role="preprocessor">#endif</emphasis>
304 
305 <emphasis role="preprocessor">#define&#32;_bit_scan_forward(a)&#32;&#32;&#32;&#32;__bsfd(a)</emphasis>
306 <emphasis role="preprocessor">#define&#32;_bit_scan_reverse(a)&#32;&#32;&#32;&#32;__bsrd(a)</emphasis>
307 <emphasis role="preprocessor">#define&#32;_bswap(a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;__bswapd(a)</emphasis>
308 <emphasis role="preprocessor">#define&#32;_popcnt32(a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__popcntd(a)</emphasis>
309 <emphasis role="preprocessor">#ifndef&#32;__iamcu__</emphasis>
310 <emphasis role="preprocessor">#define&#32;_rdpmc(a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rdpmc(a)</emphasis>
311 <emphasis role="preprocessor">#define&#32;_rdtscp(a)&#32;&#32;&#32;&#32;&#32;&#32;__rdtscp(a)</emphasis>
312 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__iamcu__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
313 <emphasis role="preprocessor">#define&#32;_rdtsc()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rdtsc()</emphasis>
314 <emphasis role="preprocessor">#define&#32;_rotwl(a,b)&#32;&#32;&#32;&#32;&#32;__rolw((a),&#32;(b))</emphasis>
315 <emphasis role="preprocessor">#define&#32;_rotwr(a,b)&#32;&#32;&#32;&#32;&#32;__rorw((a),&#32;(b))</emphasis>
316 <emphasis role="preprocessor">#define&#32;_rotl(a,b)&#32;&#32;&#32;&#32;&#32;&#32;__rold((a),&#32;(b))</emphasis>
317 <emphasis role="preprocessor">#define&#32;_rotr(a,b)&#32;&#32;&#32;&#32;&#32;&#32;__rord((a),&#32;(b))</emphasis>
</programlisting></section>
