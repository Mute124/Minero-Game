<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2stdarg_8h_source" xml:lang="en-US">
<title>stdarg.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/stdarg.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include_next&#32;&lt;stdarg.h&gt;</emphasis>
2 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;1989-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
3 <emphasis role="comment"></emphasis>
4 <emphasis role="comment">This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
5 <emphasis role="comment"></emphasis>
6 <emphasis role="comment">GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
7 <emphasis role="comment">it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
8 <emphasis role="comment">the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">any&#32;later&#32;version.</emphasis>
10 <emphasis role="comment"></emphasis>
11 <emphasis role="comment">GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 <emphasis role="comment"></emphasis>
16 <emphasis role="comment">Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 <emphasis role="comment"></emphasis>
20 <emphasis role="comment">You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
24 
25 <emphasis role="comment">/*</emphasis>
26 <emphasis role="comment">&#32;*&#32;ISO&#32;C&#32;Standard:&#32;&#32;7.15&#32;&#32;Variable&#32;arguments&#32;&#32;&lt;stdarg.h&gt;</emphasis>
27 <emphasis role="comment">&#32;*/</emphasis>
28 
29 <emphasis role="preprocessor">#ifndef&#32;_STDARG_H</emphasis>
30 <emphasis role="preprocessor">#ifndef&#32;_ANSI_STDARG_H_</emphasis>
31 <emphasis role="preprocessor">#ifndef&#32;__need___va_list</emphasis>
32 <emphasis role="preprocessor">#define&#32;_STDARG_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_ANSI_STDARG_H_</emphasis>
34 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;__need___va_list&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
35 <emphasis role="preprocessor">#undef&#32;__need___va_list</emphasis>
36 
37 <emphasis role="comment">/*&#32;Define&#32;__gnuc_va_list.&#32;&#32;*/</emphasis>
38 
39 <emphasis role="preprocessor">#ifndef&#32;__GNUC_VA_LIST</emphasis>
40 <emphasis role="preprocessor">#define&#32;__GNUC_VA_LIST</emphasis>
41 <emphasis role="keyword">typedef</emphasis>&#32;__builtin_va_list&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1ab2a2078340888ab219073daba0853b5a">__gnuc_va_list</link>;
42 <emphasis role="preprocessor">#endif</emphasis>
43 
44 <emphasis role="comment">/*&#32;Define&#32;the&#32;standard&#32;macros&#32;for&#32;the&#32;user,</emphasis>
45 <emphasis role="comment">&#32;&#32;&#32;if&#32;this&#32;invocation&#32;was&#32;from&#32;the&#32;user&#32;program.&#32;&#32;*/</emphasis>
46 <emphasis role="preprocessor">#ifdef&#32;_STDARG_H</emphasis>
47 
48 <emphasis role="preprocessor">#define&#32;va_start(v,l)&#32;&#32;&#32;__builtin_va_start(v,l)</emphasis>
49 <emphasis role="preprocessor">#define&#32;va_end(v)&#32;&#32;&#32;__builtin_va_end(v)</emphasis>
50 <emphasis role="preprocessor">#define&#32;va_arg(v,l)&#32;__builtin_va_arg(v,l)</emphasis>
51 <emphasis role="preprocessor">#if&#32;!defined(__STRICT_ANSI__)&#32;||&#32;__STDC_VERSION__&#32;+&#32;0&#32;&gt;=&#32;199900L&#32;\</emphasis>
52 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;||&#32;__cplusplus&#32;+&#32;0&#32;&gt;=&#32;201103L</emphasis>
53 <emphasis role="preprocessor">#define&#32;va_copy(d,s)&#32;&#32;&#32;&#32;__builtin_va_copy(d,s)</emphasis>
54 <emphasis role="preprocessor">#endif</emphasis>
55 <emphasis role="preprocessor">#define&#32;__va_copy(d,s)&#32;&#32;__builtin_va_copy(d,s)</emphasis>
56 
57 <emphasis role="comment">/*&#32;Define&#32;va_list,&#32;if&#32;desired,&#32;from&#32;__gnuc_va_list.&#32;*/</emphasis>
58 <emphasis role="comment">/*&#32;We&#32;deliberately&#32;do&#32;not&#32;define&#32;va_list&#32;when&#32;called&#32;from</emphasis>
59 <emphasis role="comment">&#32;&#32;&#32;stdio.h,&#32;because&#32;ANSI&#32;C&#32;says&#32;that&#32;stdio.h&#32;is&#32;not&#32;supposed&#32;to&#32;define</emphasis>
60 <emphasis role="comment">&#32;&#32;&#32;va_list.&#32;&#32;stdio.h&#32;needs&#32;to&#32;have&#32;access&#32;to&#32;that&#32;data&#32;type,&#32;</emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;but&#32;must&#32;not&#32;use&#32;that&#32;name.&#32;&#32;It&#32;should&#32;use&#32;the&#32;name&#32;__gnuc_va_list,</emphasis>
62 <emphasis role="comment">&#32;&#32;&#32;which&#32;is&#32;safe&#32;because&#32;it&#32;is&#32;reserved&#32;for&#32;the&#32;implementation.&#32;&#32;*/</emphasis>
63 
64 <emphasis role="preprocessor">#ifdef&#32;_BSD_VA_LIST</emphasis>
65 <emphasis role="preprocessor">#undef&#32;_BSD_VA_LIST</emphasis>
66 <emphasis role="preprocessor">#endif</emphasis>
67 
68 <emphasis role="preprocessor">#if&#32;defined(__svr4__)&#32;||&#32;(defined(_SCO_DS)&#32;&amp;&amp;&#32;!defined(__VA_LIST))</emphasis>
69 <emphasis role="comment">/*&#32;SVR4.2&#32;uses&#32;_VA_LIST&#32;for&#32;an&#32;internal&#32;alias&#32;for&#32;va_list,</emphasis>
70 <emphasis role="comment">&#32;&#32;&#32;so&#32;we&#32;must&#32;avoid&#32;testing&#32;it&#32;and&#32;setting&#32;it&#32;here.</emphasis>
71 <emphasis role="comment">&#32;&#32;&#32;SVR4&#32;uses&#32;_VA_LIST&#32;as&#32;a&#32;flag&#32;in&#32;stdarg.h,&#32;but&#32;we&#32;should</emphasis>
72 <emphasis role="comment">&#32;&#32;&#32;have&#32;no&#32;conflict&#32;with&#32;that.&#32;&#32;*/</emphasis>
73 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST_</emphasis>
74 <emphasis role="preprocessor">#define&#32;_VA_LIST_</emphasis>
75 <emphasis role="preprocessor">#ifdef&#32;__i860__</emphasis>
76 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST</emphasis>
77 <emphasis role="preprocessor">#define&#32;_VA_LIST&#32;va_list</emphasis>
78 <emphasis role="preprocessor">#endif</emphasis>
79 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__i860__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
80 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1ab2a2078340888ab219073daba0853b5a">__gnuc_va_list</link>&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>;
81 <emphasis role="preprocessor">#ifdef&#32;_SCO_DS</emphasis>
82 <emphasis role="preprocessor">#define&#32;__VA_LIST</emphasis>
83 <emphasis role="preprocessor">#endif</emphasis>
84 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_VA_LIST_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
85 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;__svr4__&#32;||&#32;_SCO_DS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
86 
87 <emphasis role="comment">/*&#32;The&#32;macro&#32;_VA_LIST_&#32;is&#32;the&#32;same&#32;thing&#32;used&#32;by&#32;this&#32;file&#32;in&#32;Ultrix.</emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;But&#32;on&#32;BSD&#32;NET2&#32;we&#32;must&#32;not&#32;test&#32;or&#32;define&#32;or&#32;undef&#32;it.</emphasis>
89 <emphasis role="comment">&#32;&#32;&#32;(Note&#32;that&#32;the&#32;comments&#32;in&#32;NET&#32;2&apos;s&#32;ansi.h</emphasis>
90 <emphasis role="comment">&#32;&#32;&#32;are&#32;incorrect&#32;for&#32;_VA_LIST_--see&#32;stdio.h!)&#32;&#32;*/</emphasis>
91 <emphasis role="preprocessor">#if&#32;!defined&#32;(_VA_LIST_)&#32;||&#32;defined&#32;(__BSD_NET2__)&#32;||&#32;defined&#32;(____386BSD____)&#32;||&#32;defined&#32;(__bsdi__)&#32;||&#32;defined&#32;(__sequent__)&#32;||&#32;defined&#32;(__FreeBSD__)&#32;||&#32;defined(WINNT)</emphasis>
92 <emphasis role="comment">/*&#32;The&#32;macro&#32;_VA_LIST_DEFINED&#32;is&#32;used&#32;in&#32;Windows&#32;NT&#32;3.5&#32;&#32;*/</emphasis>
93 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST_DEFINED</emphasis>
94 <emphasis role="comment">/*&#32;The&#32;macro&#32;_VA_LIST&#32;is&#32;used&#32;in&#32;SCO&#32;Unix&#32;3.2.&#32;&#32;*/</emphasis>
95 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST</emphasis>
96 <emphasis role="comment">/*&#32;The&#32;macro&#32;_VA_LIST_T_H&#32;is&#32;used&#32;in&#32;the&#32;Bull&#32;dpx2&#32;&#32;*/</emphasis>
97 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST_T_H</emphasis>
98 <emphasis role="comment">/*&#32;The&#32;macro&#32;__va_list__&#32;is&#32;used&#32;by&#32;BeOS.&#32;&#32;*/</emphasis>
99 <emphasis role="preprocessor">#ifndef&#32;__va_list__</emphasis>
100 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1ab2a2078340888ab219073daba0853b5a">__gnuc_va_list</link>&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>;
101 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;__va_list__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
102 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;_VA_LIST_T_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
103 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;_VA_LIST&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
104 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;_VA_LIST_DEFINED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
105 <emphasis role="preprocessor">#if&#32;!(defined&#32;(__BSD_NET2__)&#32;||&#32;defined&#32;(____386BSD____)&#32;||&#32;defined&#32;(__bsdi__)&#32;||&#32;defined&#32;(__sequent__)&#32;||&#32;defined&#32;(__FreeBSD__))</emphasis>
106 <emphasis role="preprocessor">#define&#32;_VA_LIST_</emphasis>
107 <emphasis role="preprocessor">#endif</emphasis>
108 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST</emphasis>
109 <emphasis role="preprocessor">#define&#32;_VA_LIST</emphasis>
110 <emphasis role="preprocessor">#endif</emphasis>
111 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST_DEFINED</emphasis>
112 <emphasis role="preprocessor">#define&#32;_VA_LIST_DEFINED</emphasis>
113 <emphasis role="preprocessor">#endif</emphasis>
114 <emphasis role="preprocessor">#ifndef&#32;_VA_LIST_T_H</emphasis>
115 <emphasis role="preprocessor">#define&#32;_VA_LIST_T_H</emphasis>
116 <emphasis role="preprocessor">#endif</emphasis>
117 <emphasis role="preprocessor">#ifndef&#32;__va_list__</emphasis>
118 <emphasis role="preprocessor">#define&#32;__va_list__</emphasis>
119 <emphasis role="preprocessor">#endif</emphasis>
120 
121 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;_VA_LIST_,&#32;except&#32;on&#32;certain&#32;systems&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
122 
123 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;__svr4__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
124 
125 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_STDARG_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
126 
127 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;_ANSI_STDARG_H_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
128 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;_STDARG_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
