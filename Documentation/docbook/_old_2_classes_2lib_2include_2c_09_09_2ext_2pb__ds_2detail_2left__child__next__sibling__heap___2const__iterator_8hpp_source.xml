<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2const__iterator_8hpp_source" xml:lang="en-US">
<title>const_iterator.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
42 <emphasis role="preprocessor">#ifndef&#32;PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_CONST_ITERATOR_HPP</emphasis>
43 <emphasis role="preprocessor">#define&#32;PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_CONST_ITERATOR_HPP</emphasis>
44 
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
47 
48 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
49 {
50 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
51 &#32;&#32;{
52 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;&#32;\</emphasis>
53 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;left_child_next_sibling_heap_const_iterator_&lt;Node,&#32;_Alloc&gt;</emphasis>
54 
55 <emphasis role="preprocessor">#define&#32;PB_DS_BASIC_HEAP_CIT_BASE&#32;\</emphasis>
56 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;left_child_next_sibling_heap_node_point_const_iterator_&lt;Node,&#32;_Alloc&gt;</emphasis>
57 
59 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
60 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>left_child_next_sibling_heap_const_iterator_
61 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2const__iterator_8hpp_1ae4d0d8fa09f13801a8d6b3082e3d3bd4">PB_DS_BASIC_HEAP_CIT_BASE</link>
62 &#32;&#32;&#32;&#32;{
63 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2const__iterator_8hpp_1ae4d0d8fa09f13801a8d6b3082e3d3bd4">PB_DS_BASIC_HEAP_CIT_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type;
65 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::node_pointer&#32;&#32;&#32;&#32;&#32;&#32;node_pointer;
66 
67 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::forward_iterator_tag&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a">iterator_category</link>;
70 
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294">difference_type</link>;
73 
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::value_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656">value_type</link>;
76 
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460">pointer</link>;
79 
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_pointer&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e">const_pointer</link>;
82 
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::reference&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce">reference</link>;
85 
87 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_reference&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df">const_reference</link>;
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74">left_child_next_sibling_heap_const_iterator_</link>(node_pointer&#32;p_nd)
91 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;base_type(p_nd)
92 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
93 
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
96 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d">left_child_next_sibling_heap_const_iterator_</link>()
97 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
98 
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077">left_child_next_sibling_heap_const_iterator_</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)&#32;:&#32;base_type(other)
102 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
103 
105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
107 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(base_type::m_p_nd&#32;==&#32;other.m_p_nd);&#32;}
108 
110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
112 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(base_type::m_p_nd&#32;!=&#32;other.m_p_nd);&#32;}
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;
115 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504">operator++</link>()
116 &#32;&#32;&#32;&#32;&#32;&#32;{
117 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(base_type::m_p_nd&#32;!=&#32;0);
118 &#32;&#32;&#32;&#32;inc();
119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
120 &#32;&#32;&#32;&#32;&#32;&#32;}
121 
122 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>
123 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634">operator++</link>(<emphasis role="keywordtype">int</emphasis>)
124 &#32;&#32;&#32;&#32;&#32;&#32;{
125 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&#32;ret_it(base_type::m_p_nd);
126 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504">operator++</link>();
127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ret_it);
128 &#32;&#32;&#32;&#32;&#32;&#32;}
129 
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;inc()
133 &#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::m_p_nd-&gt;m_p_next_sibling&#32;!=&#32;0)
135 &#32;&#32;&#32;&#32;&#32;&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_nd&#32;=&#32;base_type::m_p_nd-&gt;m_p_next_sibling;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(base_type::m_p_nd-&gt;m_p_l_child&#32;!=&#32;0)
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_nd&#32;=&#32;base_type::m_p_nd-&gt;m_p_l_child;
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
140 &#32;&#32;&#32;&#32;&#32;&#32;}
141 
142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
143 &#32;&#32;&#32;&#32;&#32;&#32;{
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;node_pointer&#32;p_next&#32;=&#32;base_type::m_p_nd;
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type::m_p_nd&#32;=&#32;base_type::m_p_nd-&gt;m_p_prev_or_parent;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::m_p_nd&#32;==&#32;0
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;base_type::m_p_nd-&gt;m_p_l_child&#32;==&#32;p_next)
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
149 &#32;&#32;&#32;&#32;&#32;&#32;}
150 &#32;&#32;&#32;&#32;&#32;&#32;}
151 &#32;&#32;&#32;&#32;};
152 
153 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
154 <emphasis role="preprocessor">#undef&#32;PB_DS_BASIC_HEAP_CIT_BASE</emphasis>
155 
156 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
157 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
158 
159 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
