<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_catch_1_1_reusable_string_stream" xml:lang="en-US">
<title>Catch::ReusableStringStream Class Reference</title>
<indexterm><primary>Catch::ReusableStringStream</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.hpp&gt;</computeroutput>
</para>
Inheritance diagram for Catch::ReusableStringStream:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_reusable_string_stream__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Catch::ReusableStringStream:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_reusable_string_stream__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_reusable_string_stream_1a9b3f8c52b0d2d63ffd825297a9c09781">ReusableStringStream</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_reusable_string_stream_1aba9384e258a4db3178447b6a58414712">~ReusableStringStream</link> ()</para>
</listitem>
            <listitem><para>auto <link linkend="_class_catch_1_1_reusable_string_stream_1a0e9ecf260b2a5d35f4886ef0d51f6270">str</link> () const -&gt; std::string</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>auto <link linkend="_class_catch_1_1_reusable_string_stream_1aa1ecae698d8366c4e4ed99f8695bd2c7">operator&lt;&lt;</link> (T const &amp;<link linkend="_classvalue">value</link>) -&gt; <link linkend="_class_catch_1_1_reusable_string_stream">ReusableStringStream</link> &amp;</para>
</listitem>
            <listitem><para>auto <link linkend="_class_catch_1_1_reusable_string_stream_1a6881808c60a080d4e24a0b81c94cbf67">get</link> () -&gt; std::ostream &amp;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a9b3f8c52b0d2d63ffd825297a9c09781"/><section>
    <title>ReusableStringStream()</title>
<indexterm><primary>ReusableStringStream</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>ReusableStringStream</secondary></indexterm>
<para><computeroutput>Catch::ReusableStringStream::ReusableStringStream ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1aba9384e258a4db3178447b6a58414712"/><section>
    <title>~ReusableStringStream()</title>
<indexterm><primary>~ReusableStringStream</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>~ReusableStringStream</secondary></indexterm>
<para><computeroutput>Catch::ReusableStringStream::~ReusableStringStream ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a6881808c60a080d4e24a0b81c94cbf67"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>get</secondary></indexterm>
<para><computeroutput>auto Catch::ReusableStringStream::get ( ) -&gt; std::ostream&amp; <computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1aa1ecae698d8366c4e4ed99f8695bd2c7"/><section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>template <link linkend="_class_catch_1_1_reusable_string_stream">ReusableStringStream</link> &amp; Catch::ReusableStringStream::operator&lt;&lt; (T const &amp; value) -&gt;  <link linkend="_class_catch_1_1_reusable_string_stream">ReusableStringStream</link> &amp;<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a0e9ecf260b2a5d35f4886ef0d51f6270"/><section>
    <title>str()</title>
<indexterm><primary>str</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>str</secondary></indexterm>
<para><computeroutput>auto Catch::ReusableStringStream::str ( ) const -&gt;  std::string</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_reusable_string_stream_a0e9ecf260b2a5d35f4886ef0d51f6270_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_catch_8hpp">catch.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/tests/<link linkend="_tests_8cpp">tests.cpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/tests/<link linkend="_tests_8h">tests.h</link></section>
</section>
