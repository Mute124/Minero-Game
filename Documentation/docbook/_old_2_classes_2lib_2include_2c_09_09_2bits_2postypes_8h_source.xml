<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2bits_2postypes_8h_source" xml:lang="en-US">
<title>postypes.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/bits/postypes.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Position&#32;types&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;1997-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//</emphasis>
31 <emphasis role="comment">//&#32;ISO&#32;C++&#32;14882:&#32;27.4.1&#32;-&#32;Types</emphasis>
32 <emphasis role="comment">//&#32;ISO&#32;C++&#32;14882:&#32;27.4.3&#32;-&#32;Template&#32;class&#32;fpos</emphasis>
33 <emphasis role="comment">//</emphasis>
34 
35 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_POSTYPES_H</emphasis>
36 <emphasis role="preprocessor">#define&#32;_GLIBCXX_POSTYPES_H&#32;1</emphasis>
37 
38 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
39 
40 <emphasis role="preprocessor">#include&#32;&lt;cwchar&gt;</emphasis>&#32;<emphasis role="comment">//&#32;For&#32;mbstate_t</emphasis>
41 
42 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
43 {
44 _GLIBCXX_BEGIN_NAMESPACE_VERSION
45 
46 &#32;&#32;<emphasis role="comment">//&#32;The&#32;types&#32;streamoff,&#32;streampos&#32;and&#32;wstreampos&#32;and&#32;the&#32;class</emphasis>
47 &#32;&#32;<emphasis role="comment">//&#32;template&#32;fpos&lt;&gt;&#32;are&#32;described&#32;in&#32;clauses&#32;21.1.2,&#32;21.1.3,&#32;27.1.2,</emphasis>
48 &#32;&#32;<emphasis role="comment">//&#32;27.2,&#32;27.4.1,&#32;27.4.3&#32;and&#32;D.6.&#32;Despite&#32;all&#32;this&#32;verbiage,&#32;the</emphasis>
49 &#32;&#32;<emphasis role="comment">//&#32;behaviour&#32;of&#32;these&#32;types&#32;is&#32;mostly&#32;implementation&#32;defined&#32;or</emphasis>
50 &#32;&#32;<emphasis role="comment">//&#32;unspecified.&#32;The&#32;behaviour&#32;in&#32;this&#32;implementation&#32;is&#32;as&#32;noted</emphasis>
51 &#32;&#32;<emphasis role="comment">//&#32;below.</emphasis>
52 
61 <emphasis role="preprocessor">#ifdef&#32;__INT64_TYPE__</emphasis>
62 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__INT64_TYPE__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;streamoff;
63 <emphasis role="preprocessor">#else</emphasis>
64 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;streamoff;
65 <emphasis role="preprocessor">#endif</emphasis>
66 
68 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1a6d26a0475a6d6c897e655cdc5d8019d2">ptrdiff_t</link>&#32;streamsize;&#32;<emphasis role="comment">//&#32;Signed&#32;integral&#32;type</emphasis>
69 
81 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_StateT&gt;
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>fpos
83 &#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
85 &#32;&#32;&#32;&#32;&#32;&#32;streamoff&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_off;
86 &#32;&#32;&#32;&#32;&#32;&#32;_StateT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_state;
87 
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
89 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;doesn&apos;t&#32;require&#32;that&#32;fpos&#32;objects&#32;can&#32;be&#32;default</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constructed.&#32;This&#32;implementation&#32;provides&#32;a&#32;default</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constructor&#32;that&#32;initializes&#32;the&#32;offset&#32;to&#32;0&#32;and&#32;default</emphasis>
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constructs&#32;the&#32;state.</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;fpos()
94 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_off(0),&#32;_M_state()&#32;{&#32;}
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;requires&#32;that&#32;fpos&#32;objects&#32;can&#32;be&#32;constructed</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;from&#32;streamoff&#32;objects&#32;using&#32;the&#32;constructor&#32;syntax,&#32;and</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fails&#32;to&#32;give&#32;any&#32;meaningful&#32;semantics.&#32;In&#32;this</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;implementation&#32;implicit&#32;conversion&#32;is&#32;also&#32;allowed,&#32;and&#32;this</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constructor&#32;stores&#32;the&#32;streamoff&#32;as&#32;the&#32;offset&#32;and&#32;default</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constructs&#32;the&#32;state.</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;fpos(streamoff&#32;__off)
104 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_off(__off),&#32;_M_state()&#32;{&#32;}
105 
106 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;fpos(<emphasis role="keyword">const</emphasis>&#32;fpos&amp;)&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
108 &#32;&#32;&#32;&#32;&#32;&#32;fpos&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;fpos&amp;)&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
109 &#32;&#32;&#32;&#32;&#32;&#32;~fpos()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
110 <emphasis role="preprocessor">#endif</emphasis>
111 
113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;streamoff()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_off;&#32;}
114 
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;state(_StateT&#32;__st)
118 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_M_state&#32;=&#32;__st;&#32;}
119 
121 &#32;&#32;&#32;&#32;&#32;&#32;_StateT
122 &#32;&#32;&#32;&#32;&#32;&#32;state()<emphasis role="keyword">&#32;const</emphasis>
123 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_state;&#32;}
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;requires&#32;that&#32;this&#32;operator&#32;must&#32;be&#32;defined,&#32;but</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;gives&#32;no&#32;semantics.&#32;In&#32;this&#32;implementation&#32;it&#32;just&#32;adds&#32;its</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;argument&#32;to&#32;the&#32;stored&#32;offset&#32;and&#32;returns&#32;*this.</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;fpos&amp;
130 &#32;&#32;&#32;&#32;&#32;&#32;operator+=(streamoff&#32;__off)
131 &#32;&#32;&#32;&#32;&#32;&#32;{
132 &#32;&#32;&#32;&#32;_M_off&#32;+=&#32;__off;
133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
134 &#32;&#32;&#32;&#32;&#32;&#32;}
135 
136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;requires&#32;that&#32;this&#32;operator&#32;must&#32;be&#32;defined,&#32;but</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;gives&#32;no&#32;semantics.&#32;In&#32;this&#32;implementation&#32;it&#32;just&#32;subtracts</emphasis>
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;its&#32;argument&#32;from&#32;the&#32;stored&#32;offset&#32;and&#32;returns&#32;*this.</emphasis>
140 &#32;&#32;&#32;&#32;&#32;&#32;fpos&amp;
141 &#32;&#32;&#32;&#32;&#32;&#32;operator-=(streamoff&#32;__off)
142 &#32;&#32;&#32;&#32;&#32;&#32;{
143 &#32;&#32;&#32;&#32;_M_off&#32;-=&#32;__off;
144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
145 &#32;&#32;&#32;&#32;&#32;&#32;}
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;requires&#32;that&#32;this&#32;operator&#32;must&#32;be&#32;defined,&#32;but</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;its&#32;semantics&#32;only&#32;in&#32;terms&#32;of&#32;operator-.&#32;In&#32;this</emphasis>
149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;implementation&#32;it&#32;constructs&#32;a&#32;copy&#32;of&#32;*this,&#32;adds&#32;the</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;argument&#32;to&#32;that&#32;copy&#32;using&#32;operator+=&#32;and&#32;then&#32;returns&#32;the</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;copy.</emphasis>
153 &#32;&#32;&#32;&#32;&#32;&#32;fpos
154 &#32;&#32;&#32;&#32;&#32;&#32;operator+(streamoff&#32;__off)<emphasis role="keyword">&#32;const</emphasis>
155 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
156 &#32;&#32;&#32;&#32;fpos&#32;__pos(*<emphasis role="keyword">this</emphasis>);
157 &#32;&#32;&#32;&#32;__pos&#32;+=&#32;__off;
158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__pos;
159 &#32;&#32;&#32;&#32;&#32;&#32;}
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;requires&#32;that&#32;this&#32;operator&#32;must&#32;be&#32;defined,&#32;but</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;its&#32;semantics&#32;only&#32;in&#32;terms&#32;of&#32;operator+.&#32;In&#32;this</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;implementation&#32;it&#32;constructs&#32;a&#32;copy&#32;of&#32;*this,&#32;subtracts&#32;the</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;argument&#32;from&#32;that&#32;copy&#32;using&#32;operator-=&#32;and&#32;then&#32;returns&#32;the</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;copy.</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;fpos
168 &#32;&#32;&#32;&#32;&#32;&#32;operator-(streamoff&#32;__off)<emphasis role="keyword">&#32;const</emphasis>
169 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
170 &#32;&#32;&#32;&#32;fpos&#32;__pos(*<emphasis role="keyword">this</emphasis>);
171 &#32;&#32;&#32;&#32;__pos&#32;-=&#32;__off;
172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__pos;
173 &#32;&#32;&#32;&#32;&#32;&#32;}
174 
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;requires&#32;that&#32;this&#32;operator&#32;must&#32;be&#32;defined,&#32;but</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;its&#32;semantics&#32;only&#32;in&#32;terms&#32;of&#32;operator+.&#32;In&#32;this</emphasis>
177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;implementation&#32;it&#32;returns&#32;the&#32;difference&#32;between&#32;the&#32;offset</emphasis>
178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stored&#32;in&#32;*this&#32;and&#32;in&#32;the&#32;argument.</emphasis>
180 &#32;&#32;&#32;&#32;&#32;&#32;streamoff
181 &#32;&#32;&#32;&#32;&#32;&#32;operator-(<emphasis role="keyword">const</emphasis>&#32;fpos&amp;&#32;__other)<emphasis role="keyword">&#32;const</emphasis>
182 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_off&#32;-&#32;__other._M_off;&#32;}
183 &#32;&#32;&#32;&#32;};
184 
185 &#32;&#32;<emphasis role="comment">//&#32;The&#32;standard&#32;only&#32;requires&#32;that&#32;operator==&#32;must&#32;be&#32;an</emphasis>
186 &#32;&#32;<emphasis role="comment">//&#32;equivalence&#32;relation.&#32;In&#32;this&#32;implementation&#32;two&#32;fpos&lt;StateT&gt;</emphasis>
187 &#32;&#32;<emphasis role="comment">//&#32;objects&#32;belong&#32;to&#32;the&#32;same&#32;equivalence&#32;class&#32;if&#32;the&#32;contained</emphasis>
188 &#32;&#32;<emphasis role="comment">//&#32;offsets&#32;compare&#32;equal.</emphasis>
190 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_StateT&gt;
191 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
192 &#32;&#32;&#32;&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;fpos&lt;_StateT&gt;&amp;&#32;__lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;fpos&lt;_StateT&gt;&amp;&#32;__rhs)
193 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;streamoff(__lhs)&#32;==&#32;streamoff(__rhs);&#32;}
194 
195 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_StateT&gt;
196 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
197 &#32;&#32;&#32;&#32;operator!=(<emphasis role="keyword">const</emphasis>&#32;fpos&lt;_StateT&gt;&amp;&#32;__lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;fpos&lt;_StateT&gt;&amp;&#32;__rhs)
198 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;streamoff(__lhs)&#32;!=&#32;streamoff(__rhs);&#32;}
199 
200 &#32;&#32;<emphasis role="comment">//&#32;Clauses&#32;21.1.3.1&#32;and&#32;21.1.3.2&#32;describe&#32;streampos&#32;and&#32;wstreampos</emphasis>
201 &#32;&#32;<emphasis role="comment">//&#32;as&#32;implementation&#32;defined&#32;types,&#32;but&#32;clause&#32;27.2&#32;requires&#32;that</emphasis>
202 &#32;&#32;<emphasis role="comment">//&#32;they&#32;must&#32;both&#32;be&#32;typedefs&#32;for&#32;fpos&lt;mbstate_t&gt;</emphasis>
204 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;fpos&lt;mbstate_t&gt;&#32;streampos;
206 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;fpos&lt;mbstate_t&gt;&#32;wstreampos;
207 
208 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_USE_CHAR8_T</emphasis>
210 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;fpos&lt;mbstate_t&gt;&#32;u8streampos;
211 <emphasis role="preprocessor">#endif</emphasis>
212 
213 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
215 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;fpos&lt;mbstate_t&gt;&#32;u16streampos;
217 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;fpos&lt;mbstate_t&gt;&#32;u32streampos;
218 <emphasis role="preprocessor">#endif</emphasis>
219 
220 _GLIBCXX_END_NAMESPACE_VERSION
221 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
222 
223 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
