<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__window_8h_source" xml:lang="en-US">
<title>Window.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/Window.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&quot;lib/raylib.h&quot;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
4 
5 
6 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;thread&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__monitor_8h">Monitor.h</link>&quot;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__monobehavior_8h">MonoBehavior.h</link>&quot;</emphasis>
10 
11 
12 
13 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacestd">std</link>;
14 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_window">Window</link>&#32;{
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
16 
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_window_1ab91908ad10c1cfa51007e1baf34e469c">Window</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Height,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*Title)&#32;:&#32;WIDTH(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>),&#32;HEIGHT(Height),&#32;Title(Title)&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">sizeof</emphasis>(Title)&#32;&gt;&#32;<link linkend="__monobehavior_8h_1a6c13f7557757d1d10ffa8a40c359499f">MAX_WINDOW_TITLE_LENGTH</link>)&#32;{
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Title&#32;is&#32;too&#32;long&quot;</emphasis>);
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_window_1a8e264608539b02d790ca1a11f4534705">Run</link>(WIDTH,&#32;HEIGHT,&#32;Title);
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
25 
26 &#32;&#32;&#32;&#32;
27 
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_window_1a245d821e6016fa1f6970ccbbedd635f6">~Window</link>()&#32;{
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;DrawingMonitor;
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
32 
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_window_1a8e264608539b02d790ca1a11f4534705">Run</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;WIDTH,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;HEIGHT,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*Title)&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
36 
37 
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="_class_window_1ac2cad6a819583d67cbca65516f767178">GetMiddlePoint</link>()&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_vector2">Vector2</link>){this-&gt;WIDTH/2,&#32;this-&gt;HEIGHT/2};
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
41 
42 
43 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_monitor">Monitor</link>&#32;*DrawingMonitor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_monitor">Monitor</link>();
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_global_1_1_tag">Global::Tag</link>&#32;tag;
48 
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;WIDTH&#32;=&#32;800;
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;HEIGHT&#32;=&#32;600;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*Title&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[<link linkend="__monobehavior_8h_1a6c13f7557757d1d10ffa8a40c359499f">MAX_WINDOW_TITLE_LENGTH</link>];&#32;<emphasis role="comment">//TODO&#32;:&#32;VERY&#32;unsafe,&#32;there&#32;needs&#32;to&#32;be&#32;safeguards&#32;put&#32;in&#32;place</emphasis>
52 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
54 
55 };
</programlisting></section>
