<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2detail_2type__mat3x2_8inl_source" xml:lang="en-US">
<title>type_mat3x2.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/detail/type_mat3x2.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
2 {
3 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Constructors&#32;--</emphasis>
4 
5 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat()
8 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALIZER_LIST</emphasis>
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(1,&#32;0),&#32;col_type(0,&#32;1),&#32;col_type(0,&#32;0)}
10 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
12 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALISATION</emphasis>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(1,&#32;0);
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;1);
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0);
16 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
18 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
22 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;2,&#32;T,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
23 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
25 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
26 &#32;&#32;&#32;&#32;{
27 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
31 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
32 &#32;&#32;&#32;&#32;}
33 
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
35 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(T&#32;s)
36 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(s,&#32;0),&#32;col_type(0,&#32;s),&#32;col_type(0,&#32;0)}
38 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
39 &#32;&#32;&#32;&#32;{
40 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(s,&#32;0);
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;s);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0);
44 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
45 &#32;&#32;&#32;&#32;}
46 
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
48 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat
49 &#32;&#32;&#32;&#32;(
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x0,&#32;T&#32;y0,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x1,&#32;T&#32;y1,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x2,&#32;T&#32;y2
53 &#32;&#32;&#32;&#32;)
54 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(x0,&#32;y0),&#32;col_type(x1,&#32;y1),&#32;col_type(x2,&#32;y2)}
56 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
57 &#32;&#32;&#32;&#32;{
58 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1);
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2);
62 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
63 &#32;&#32;&#32;&#32;}
64 
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
66 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
67 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)}
69 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
70 &#32;&#32;&#32;&#32;{
71 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>;
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>;
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>;
75 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
76 &#32;&#32;&#32;&#32;}
77 
78 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;constructors&#32;--</emphasis>
79 
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X0,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y0,
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y1,
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y2&gt;
85 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat
86 &#32;&#32;&#32;&#32;(
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X0&#32;x0,&#32;Y0&#32;y0,
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;x1,&#32;Y1&#32;y1,
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;x2,&#32;Y2&#32;y2
90 &#32;&#32;&#32;&#32;)
91 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(x0,&#32;y0),&#32;col_type(x1,&#32;y1),&#32;col_type(x2,&#32;y2)}
93 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
94 &#32;&#32;&#32;&#32;{
95 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0);
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1);
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2);
99 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
100 &#32;&#32;&#32;&#32;}
101 
102 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
103 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;V0,&#32;<emphasis role="keyword">typename</emphasis>&#32;V1,&#32;<emphasis role="keyword">typename</emphasis>&#32;V2&gt;
104 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(vec&lt;2,&#32;V0,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;vec&lt;2,&#32;V1,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;vec&lt;2,&#32;V2,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
105 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)}
107 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
108 &#32;&#32;&#32;&#32;{
109 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>);
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
113 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
114 &#32;&#32;&#32;&#32;}
115 
116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Matrix&#32;conversions&#32;--</emphasis>
117 
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
120 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;2,&#32;U,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
121 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
123 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
124 &#32;&#32;&#32;&#32;{
125 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
129 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
130 &#32;&#32;&#32;&#32;}
131 
132 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
133 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
134 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(0)}
136 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
137 &#32;&#32;&#32;&#32;{
138 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0);
142 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
143 &#32;&#32;&#32;&#32;}
144 
145 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
146 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
147 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
149 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
150 &#32;&#32;&#32;&#32;{
151 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
155 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
156 &#32;&#32;&#32;&#32;}
157 
158 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
159 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
160 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
162 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
163 &#32;&#32;&#32;&#32;{
164 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
168 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
169 &#32;&#32;&#32;&#32;}
170 
171 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
172 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
173 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(0)}
175 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
176 &#32;&#32;&#32;&#32;{
177 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0);
181 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
182 &#32;&#32;&#32;&#32;}
183 
184 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
185 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
186 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(0)}
188 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
189 &#32;&#32;&#32;&#32;{
190 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0);
194 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
195 &#32;&#32;&#32;&#32;}
196 
197 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
198 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
199 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
201 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
202 &#32;&#32;&#32;&#32;{
203 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
207 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
208 &#32;&#32;&#32;&#32;}
209 
210 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
211 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
212 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
214 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
215 &#32;&#32;&#32;&#32;{
216 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
220 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
221 &#32;&#32;&#32;&#32;}
222 
223 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
224 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
225 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2])}
227 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
228 &#32;&#32;&#32;&#32;{
229 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
233 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
234 &#32;&#32;&#32;&#32;}
235 
236 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Accesses&#32;--</emphasis>
237 
238 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
239 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::length_type&#32;i)
240 &#32;&#32;&#32;&#32;{
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
243 &#32;&#32;&#32;&#32;}
244 
245 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
246 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::length_type&#32;i)<emphasis role="keyword">&#32;const</emphasis>
247 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
250 &#32;&#32;&#32;&#32;}
251 
252 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;updatable&#32;operators&#32;--</emphasis>
253 
254 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
255 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
256 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator=(mat&lt;3,&#32;2,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
257 &#32;&#32;&#32;&#32;{
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
262 &#32;&#32;&#32;&#32;}
263 
264 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
265 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
266 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator+=(U&#32;s)
267 &#32;&#32;&#32;&#32;{
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;s;
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;s;
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;s;
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
272 &#32;&#32;&#32;&#32;}
273 
274 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
275 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
276 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator+=(mat&lt;3,&#32;2,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
277 &#32;&#32;&#32;&#32;{
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;m[0];
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;m[1];
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;m[2];
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
282 &#32;&#32;&#32;&#32;}
283 
284 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
285 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
286 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator-=(U&#32;s)
287 &#32;&#32;&#32;&#32;{
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;s;
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;s;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;s;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
292 &#32;&#32;&#32;&#32;}
293 
294 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
295 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
296 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator-=(mat&lt;3,&#32;2,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
297 &#32;&#32;&#32;&#32;{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;m[0];
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;m[1];
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;m[2];
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
302 &#32;&#32;&#32;&#32;}
303 
304 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
305 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
306 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator*=(U&#32;s)
307 &#32;&#32;&#32;&#32;{
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;*=&#32;s;
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;*=&#32;s;
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;*=&#32;s;
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
312 &#32;&#32;&#32;&#32;}
313 
314 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
315 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
316 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator/=(U&#32;s)
317 &#32;&#32;&#32;&#32;{
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;/=&#32;s;
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;/=&#32;s;
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;/=&#32;s;
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
322 &#32;&#32;&#32;&#32;}
323 
324 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Increment&#32;and&#32;decrement&#32;operators&#32;--</emphasis>
325 
326 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
327 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator++()
328 &#32;&#32;&#32;&#32;{
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[0];
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[1];
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[2];
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
333 &#32;&#32;&#32;&#32;}
334 
335 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
336 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator--()
337 &#32;&#32;&#32;&#32;{
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[0];
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[1];
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[2];
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
342 &#32;&#32;&#32;&#32;}
343 
344 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
345 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator++(<emphasis role="keywordtype">int</emphasis>)
346 &#32;&#32;&#32;&#32;{
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;Result(*<emphasis role="keyword">this</emphasis>);
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++*<emphasis role="keyword">this</emphasis>;
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
350 &#32;&#32;&#32;&#32;}
351 
352 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
353 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::operator--(<emphasis role="keywordtype">int</emphasis>)
354 &#32;&#32;&#32;&#32;{
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;Result(*<emphasis role="keyword">this</emphasis>);
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--*<emphasis role="keyword">this</emphasis>;
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
358 &#32;&#32;&#32;&#32;}
359 
360 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
361 
362 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
363 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
364 &#32;&#32;&#32;&#32;{
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
366 &#32;&#32;&#32;&#32;}
367 
368 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
369 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
370 &#32;&#32;&#32;&#32;{
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[0],
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[1],
374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[2]);
375 &#32;&#32;&#32;&#32;}
376 
377 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;arithmetic&#32;operators&#32;--</emphasis>
378 
379 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
380 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
381 &#32;&#32;&#32;&#32;{
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;scalar,
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;scalar,
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;scalar);
386 &#32;&#32;&#32;&#32;}
387 
388 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
389 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
390 &#32;&#32;&#32;&#32;{
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;+&#32;m2[0],
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;+&#32;m2[1],
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;+&#32;m2[2]);
395 &#32;&#32;&#32;&#32;}
396 
397 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
398 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
399 &#32;&#32;&#32;&#32;{
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;-&#32;scalar,
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;-&#32;scalar,
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;-&#32;scalar);
404 &#32;&#32;&#32;&#32;}
405 
406 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
407 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
408 &#32;&#32;&#32;&#32;{
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;-&#32;m2[0],
411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;-&#32;m2[1],
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;-&#32;m2[2]);
413 &#32;&#32;&#32;&#32;}
414 
415 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
416 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
417 &#32;&#32;&#32;&#32;{
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar);
422 &#32;&#32;&#32;&#32;}
423 
424 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
425 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;scalar,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
426 &#32;&#32;&#32;&#32;{
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar);
431 &#32;&#32;&#32;&#32;}
432 
433 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
434 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::row_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
435 &#32;&#32;&#32;&#32;{
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::col_type(
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
439 &#32;&#32;&#32;&#32;}
440 
441 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
442 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::row_type&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
443 &#32;&#32;&#32;&#32;{
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;::row_type(
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[0][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[0][1],
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[1][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[1][1],
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[2][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[2][1]);
448 &#32;&#32;&#32;&#32;}
449 
450 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
451 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
452 &#32;&#32;&#32;&#32;{
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA00&#32;=&#32;m1[0][0];
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA01&#32;=&#32;m1[0][1];
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA10&#32;=&#32;m1[1][0];
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA11&#32;=&#32;m1[1][1];
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA20&#32;=&#32;m1[2][0];
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcA21&#32;=&#32;m1[2][1];
459 
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB00&#32;=&#32;m2[0][0];
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB01&#32;=&#32;m2[0][1];
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB02&#32;=&#32;m2[0][2];
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB10&#32;=&#32;m2[1][0];
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB11&#32;=&#32;m2[1][1];
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;SrcB12&#32;=&#32;m2[1][2];
466 
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;Result;
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB00&#32;+&#32;SrcA10&#32;*&#32;SrcB01&#32;+&#32;SrcA20&#32;*&#32;SrcB02;
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB00&#32;+&#32;SrcA11&#32;*&#32;SrcB01&#32;+&#32;SrcA21&#32;*&#32;SrcB02;
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB10&#32;+&#32;SrcA10&#32;*&#32;SrcB11&#32;+&#32;SrcA20&#32;*&#32;SrcB12;
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB10&#32;+&#32;SrcA11&#32;*&#32;SrcB11&#32;+&#32;SrcA21&#32;*&#32;SrcB12;
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
473 &#32;&#32;&#32;&#32;}
474 
475 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
476 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
477 &#32;&#32;&#32;&#32;{
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2],
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2],
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2],
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2],
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2],
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2]);
485 &#32;&#32;&#32;&#32;}
486 
487 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
488 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
489 &#32;&#32;&#32;&#32;{
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2],
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2],
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2],
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2],
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2],
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2],
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[3][2],
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[3][2]);
499 &#32;&#32;&#32;&#32;}
500 
501 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
502 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
503 &#32;&#32;&#32;&#32;{
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;/&#32;scalar,
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;/&#32;scalar,
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;/&#32;scalar);
508 &#32;&#32;&#32;&#32;}
509 
510 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
511 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(T&#32;scalar,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
512 &#32;&#32;&#32;&#32;{
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[0],
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[1],
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[2]);
517 &#32;&#32;&#32;&#32;}
518 
519 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
520 
521 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
522 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
523 &#32;&#32;&#32;&#32;{
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;==&#32;m2[0])&#32;&amp;&amp;&#32;(m1[1]&#32;==&#32;m2[1])&#32;&amp;&amp;&#32;(m1[2]&#32;==&#32;m2[2]);
525 &#32;&#32;&#32;&#32;}
526 
527 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
528 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
529 &#32;&#32;&#32;&#32;{
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;!=&#32;m2[0])&#32;||&#32;(m1[1]&#32;!=&#32;m2[1])&#32;||&#32;(m1[2]&#32;!=&#32;m2[2]);
531 &#32;&#32;&#32;&#32;}
532 }&#32;<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
