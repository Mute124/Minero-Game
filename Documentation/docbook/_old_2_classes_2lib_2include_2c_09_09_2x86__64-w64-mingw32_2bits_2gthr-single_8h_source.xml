<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_source" xml:lang="en-US">
<title>gthr-single.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/x86_64-w64-mingw32/bits/gthr-single.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Threads&#32;compatibility&#32;routines&#32;for&#32;libgcc2&#32;and&#32;libobjc.&#32;&#32;*/</emphasis>
2 <emphasis role="comment">/*&#32;Compile&#32;this&#32;one&#32;with&#32;gcc.&#32;&#32;*/</emphasis>
3 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;1997-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
6 <emphasis role="comment"></emphasis>
7 <emphasis role="comment">GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under</emphasis>
8 <emphasis role="comment">the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free</emphasis>
9 <emphasis role="comment">Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
10 <emphasis role="comment">version.</emphasis>
11 <emphasis role="comment"></emphasis>
12 <emphasis role="comment">GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but&#32;WITHOUT&#32;ANY</emphasis>
13 <emphasis role="comment">WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of&#32;MERCHANTABILITY&#32;or</emphasis>
14 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU&#32;General&#32;Public&#32;License</emphasis>
15 <emphasis role="comment">for&#32;more&#32;details.</emphasis>
16 <emphasis role="comment"></emphasis>
17 <emphasis role="comment">Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
18 <emphasis role="comment">permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
19 <emphasis role="comment">3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
20 <emphasis role="comment"></emphasis>
21 <emphasis role="comment">You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
22 <emphasis role="comment">a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
23 <emphasis role="comment">see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
24 <emphasis role="comment">&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
25 
26 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_GCC_GTHR_SINGLE_H</emphasis>
27 <emphasis role="preprocessor">#define&#32;_GLIBCXX_GCC_GTHR_SINGLE_H</emphasis>
28 
29 <emphasis role="comment">/*&#32;Just&#32;provide&#32;compatibility&#32;for&#32;mutex&#32;handling.&#32;&#32;*/</emphasis>
30 
31 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1a6f430851b705a67ee8727461101b1980">__gthread_key_t</link>;
32 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1a54fac47baf0d642efbe00aa9c684371c">__gthread_once_t</link>;
33 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1a90235b57d574b9e096125be56e0b0839">__gthread_mutex_t</link>;
34 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1a240c6304b6c3ccdfe53b03996a247129">__gthread_recursive_mutex_t</link>;
35 
36 <emphasis role="preprocessor">#define&#32;__GTHREAD_ONCE_INIT&#32;0</emphasis>
37 <emphasis role="preprocessor">#define&#32;__GTHREAD_MUTEX_INIT&#32;0</emphasis>
38 <emphasis role="preprocessor">#define&#32;__GTHREAD_MUTEX_INIT_FUNCTION(mx)&#32;do&#32;{}&#32;while&#32;(0)</emphasis>
39 <emphasis role="preprocessor">#define&#32;__GTHREAD_RECURSIVE_MUTEX_INIT&#32;0</emphasis>
40 
41 <emphasis role="preprocessor">#define&#32;_GLIBCXX_UNUSED&#32;__attribute__((__unused__))</emphasis>
42 
43 <emphasis role="preprocessor">#ifdef&#32;_LIBOBJC</emphasis>
44 
45 <emphasis role="comment">/*&#32;Thread&#32;local&#32;storage&#32;for&#32;a&#32;single&#32;thread&#32;*/</emphasis>
46 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*thread_local_storage&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
47 
48 <emphasis role="comment">/*&#32;Backend&#32;initialization&#32;functions&#32;*/</emphasis>
49 
50 <emphasis role="comment">/*&#32;Initialize&#32;the&#32;threads&#32;subsystem.&#32;&#32;*/</emphasis>
51 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
52 __gthread_objc_init_thread_system&#32;(<emphasis role="keywordtype">void</emphasis>)
53 {
54 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;thread&#32;support&#32;available&#32;*/</emphasis>
55 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
56 }
57 
58 <emphasis role="comment">/*&#32;Close&#32;the&#32;threads&#32;subsystem.&#32;&#32;*/</emphasis>
59 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
60 __gthread_objc_close_thread_system&#32;(<emphasis role="keywordtype">void</emphasis>)
61 {
62 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;thread&#32;support&#32;available&#32;*/</emphasis>
63 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
64 }
65 
66 <emphasis role="comment">/*&#32;Backend&#32;thread&#32;functions&#32;*/</emphasis>
67 
68 <emphasis role="comment">/*&#32;Create&#32;a&#32;new&#32;thread&#32;of&#32;execution.&#32;&#32;*/</emphasis>
69 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;objc_thread_t
70 __gthread_objc_thread_detach&#32;(<emphasis role="keywordtype">void</emphasis>&#32;(*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>)(<emphasis role="keywordtype">void</emphasis>&#32;*),&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;arg&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
71 {
72 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;thread&#32;support&#32;available&#32;*/</emphasis>
73 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
74 }
75 
76 <emphasis role="comment">/*&#32;Set&#32;the&#32;current&#32;thread&apos;s&#32;priority.&#32;&#32;*/</emphasis>
77 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
78 __gthread_objc_thread_set_priority&#32;(<emphasis role="keywordtype">int</emphasis>&#32;priority&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
79 {
80 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;thread&#32;support&#32;available&#32;*/</emphasis>
81 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
82 }
83 
84 <emphasis role="comment">/*&#32;Return&#32;the&#32;current&#32;thread&apos;s&#32;priority.&#32;&#32;*/</emphasis>
85 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
86 __gthread_objc_thread_get_priority&#32;(<emphasis role="keywordtype">void</emphasis>)
87 {
88 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OBJC_THREAD_INTERACTIVE_PRIORITY;
89 }
90 
91 <emphasis role="comment">/*&#32;Yield&#32;our&#32;process&#32;time&#32;to&#32;another&#32;thread.&#32;&#32;*/</emphasis>
92 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
93 __gthread_objc_thread_yield&#32;(<emphasis role="keywordtype">void</emphasis>)
94 {
95 &#32;&#32;<emphasis role="keywordflow">return</emphasis>;
96 }
97 
98 <emphasis role="comment">/*&#32;Terminate&#32;the&#32;current&#32;thread.&#32;&#32;*/</emphasis>
99 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
100 __gthread_objc_thread_exit&#32;(<emphasis role="keywordtype">void</emphasis>)
101 {
102 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;thread&#32;support&#32;available&#32;*/</emphasis>
103 &#32;&#32;<emphasis role="comment">/*&#32;Should&#32;we&#32;really&#32;exit&#32;the&#32;program&#32;*/</emphasis>
104 &#32;&#32;<emphasis role="comment">/*&#32;exit&#32;(&amp;__objc_thread_exit_status);&#32;*/</emphasis>
105 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
106 }
107 
108 <emphasis role="comment">/*&#32;Returns&#32;an&#32;integer&#32;value&#32;which&#32;uniquely&#32;describes&#32;a&#32;thread.&#32;&#32;*/</emphasis>
109 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;objc_thread_t
110 __gthread_objc_thread_id&#32;(<emphasis role="keywordtype">void</emphasis>)
111 {
112 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;thread&#32;support,&#32;use&#32;1.&#32;&#32;*/</emphasis>
113 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(objc_thread_t)&#32;1;
114 }
115 
116 <emphasis role="comment">/*&#32;Sets&#32;the&#32;thread&apos;s&#32;local&#32;storage&#32;pointer.&#32;&#32;*/</emphasis>
117 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
118 __gthread_objc_thread_set_data&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_classvalue">value</link>)
119 {
120 &#32;&#32;thread_local_storage&#32;=&#32;<link linkend="_classvalue">value</link>;
121 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
122 }
123 
124 <emphasis role="comment">/*&#32;Returns&#32;the&#32;thread&apos;s&#32;local&#32;storage&#32;pointer.&#32;&#32;*/</emphasis>
125 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*
126 __gthread_objc_thread_get_data&#32;(<emphasis role="keywordtype">void</emphasis>)
127 {
128 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thread_local_storage;
129 }
130 
131 <emphasis role="comment">/*&#32;Backend&#32;mutex&#32;functions&#32;*/</emphasis>
132 
133 <emphasis role="comment">/*&#32;Allocate&#32;a&#32;mutex.&#32;&#32;*/</emphasis>
134 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
135 __gthread_objc_mutex_allocate&#32;(objc_mutex_t&#32;mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
136 {
137 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
138 }
139 
140 <emphasis role="comment">/*&#32;Deallocate&#32;a&#32;mutex.&#32;&#32;*/</emphasis>
141 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
142 __gthread_objc_mutex_deallocate&#32;(objc_mutex_t&#32;mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
143 {
144 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
145 }
146 
147 <emphasis role="comment">/*&#32;Grab&#32;a&#32;lock&#32;on&#32;a&#32;mutex.&#32;&#32;*/</emphasis>
148 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
149 __gthread_objc_mutex_lock&#32;(objc_mutex_t&#32;mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
150 {
151 &#32;&#32;<emphasis role="comment">/*&#32;There&#32;can&#32;only&#32;be&#32;one&#32;thread,&#32;so&#32;we&#32;always&#32;get&#32;the&#32;lock&#32;*/</emphasis>
152 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
153 }
154 
155 <emphasis role="comment">/*&#32;Try&#32;to&#32;grab&#32;a&#32;lock&#32;on&#32;a&#32;mutex.&#32;&#32;*/</emphasis>
156 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
157 __gthread_objc_mutex_trylock&#32;(objc_mutex_t&#32;mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
158 {
159 &#32;&#32;<emphasis role="comment">/*&#32;There&#32;can&#32;only&#32;be&#32;one&#32;thread,&#32;so&#32;we&#32;always&#32;get&#32;the&#32;lock&#32;*/</emphasis>
160 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
161 }
162 
163 <emphasis role="comment">/*&#32;Unlock&#32;the&#32;mutex&#32;*/</emphasis>
164 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
165 __gthread_objc_mutex_unlock&#32;(objc_mutex_t&#32;mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
166 {
167 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
168 }
169 
170 <emphasis role="comment">/*&#32;Backend&#32;condition&#32;mutex&#32;functions&#32;*/</emphasis>
171 
172 <emphasis role="comment">/*&#32;Allocate&#32;a&#32;condition.&#32;&#32;*/</emphasis>
173 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
174 __gthread_objc_condition_allocate&#32;(objc_condition_t&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
175 {
176 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
177 }
178 
179 <emphasis role="comment">/*&#32;Deallocate&#32;a&#32;condition.&#32;&#32;*/</emphasis>
180 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
181 __gthread_objc_condition_deallocate&#32;(objc_condition_t&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
182 {
183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
184 }
185 
186 <emphasis role="comment">/*&#32;Wait&#32;on&#32;the&#32;condition&#32;*/</emphasis>
187 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
188 __gthread_objc_condition_wait&#32;(objc_condition_t&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>,
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objc_mutex_t&#32;mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
190 {
191 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
192 }
193 
194 <emphasis role="comment">/*&#32;Wake&#32;up&#32;all&#32;threads&#32;waiting&#32;on&#32;this&#32;condition.&#32;&#32;*/</emphasis>
195 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
196 __gthread_objc_condition_broadcast&#32;(objc_condition_t&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
197 {
198 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
199 }
200 
201 <emphasis role="comment">/*&#32;Wake&#32;up&#32;one&#32;thread&#32;waiting&#32;on&#32;this&#32;condition.&#32;&#32;*/</emphasis>
202 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
203 __gthread_objc_condition_signal&#32;(objc_condition_t&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
204 {
205 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
206 }
207 
208 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;_LIBOBJC&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
209 
210 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
211 __gthread_active_p&#32;(<emphasis role="keywordtype">void</emphasis>)
212 {
213 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
214 }
215 
216 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
217 __gthread_once&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1af51081352b97dcd93f8668cc895c1c7f">__gthread_once_t</link>&#32;*__once&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;(*__func)&#32;(<emphasis role="keywordtype">void</emphasis>)&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
218 {
219 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
220 }
221 
222 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>
223 __gthread_key_create&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3b3e350644d8ae574a3c842e27c69083">__gthread_key_t</link>&#32;*__key&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;(*__func)&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
224 {
225 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
226 }
227 
228 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>
229 __gthread_key_delete&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3b3e350644d8ae574a3c842e27c69083">__gthread_key_t</link>&#32;__key&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
230 {
231 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
232 }
233 
234 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*
235 __gthread_getspecific&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3b3e350644d8ae574a3c842e27c69083">__gthread_key_t</link>&#32;__key&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
236 {
237 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
238 }
239 
240 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
241 __gthread_setspecific&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3b3e350644d8ae574a3c842e27c69083">__gthread_key_t</link>&#32;__key&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*__v&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
242 {
243 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
244 }
245 
246 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
247 __gthread_mutex_destroy&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a97856e6b17fbc2936d96d8ea2962eda3">__gthread_mutex_t</link>&#32;*__mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
248 {
249 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
250 }
251 
252 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
253 __gthread_mutex_lock&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a97856e6b17fbc2936d96d8ea2962eda3">__gthread_mutex_t</link>&#32;*__mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
254 {
255 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
256 }
257 
258 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
259 __gthread_mutex_trylock&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a97856e6b17fbc2936d96d8ea2962eda3">__gthread_mutex_t</link>&#32;*__mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
260 {
261 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
262 }
263 
264 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
265 __gthread_mutex_unlock&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a97856e6b17fbc2936d96d8ea2962eda3">__gthread_mutex_t</link>&#32;*__mutex&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-single_8h_1aed5450237b0708069f66cb1228c0abb4">_GLIBCXX_UNUSED</link>)
266 {
267 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
268 }
269 
270 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
271 __gthread_recursive_mutex_lock&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3c90aae862e464058c70dcf114373851">__gthread_recursive_mutex_t</link>&#32;*__mutex)
272 {
273 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gthread_mutex_lock&#32;(__mutex);
274 }
275 
276 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
277 __gthread_recursive_mutex_trylock&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3c90aae862e464058c70dcf114373851">__gthread_recursive_mutex_t</link>&#32;*__mutex)
278 {
279 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gthread_mutex_trylock&#32;(__mutex);
280 }
281 
282 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
283 __gthread_recursive_mutex_unlock&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3c90aae862e464058c70dcf114373851">__gthread_recursive_mutex_t</link>&#32;*__mutex)
284 {
285 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gthread_mutex_unlock&#32;(__mutex);
286 }
287 
288 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
289 __gthread_recursive_mutex_destroy&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr-default_8h_1a3c90aae862e464058c70dcf114373851">__gthread_recursive_mutex_t</link>&#32;*__mutex)
290 {
291 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gthread_mutex_destroy&#32;(__mutex);
292 }
293 
294 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_LIBOBJC&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
295 
296 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_UNUSED</emphasis>
297 
298 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;!&#32;_GLIBCXX_GCC_GTHR_SINGLE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
