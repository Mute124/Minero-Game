<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__parallel_1_1____intersection__func" xml:lang="en-US">
<title>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;set_operations.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::iterator_traits&lt; _IIter &gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a910baccfab36636b1ee2ae4a2cb6d471">_TraitsType</link></para>
</listitem>
            <listitem><para>typedef _TraitsType::difference_type <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef std::pair&lt; _IIter, _IIter &gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a5f8bab921de3204546567b175d20e1a7">_IteratorPair</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _IIter &gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a910baccfab36636b1ee2ae4a2cb6d471">_TraitsType</link></para>
</listitem>
            <listitem><para>typedef _TraitsType::difference_type <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef std::pair&lt; _IIter, _IIter &gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a5f8bab921de3204546567b175d20e1a7">_IteratorPair</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _IIter &gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a910baccfab36636b1ee2ae4a2cb6d471">_TraitsType</link></para>
</listitem>
            <listitem><para>typedef _TraitsType::difference_type <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link></para>
</listitem>
            <listitem><para>typedef std::pair&lt; _IIter, _IIter &gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a5f8bab921de3204546567b175d20e1a7">_IteratorPair</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____intersection__func_1ad850f7ce6c8dd5766e6afaa5fcd12ddd">__intersection_func</link> (_Compare __comp)</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a4f6ddaf8bc7c88dfef71c0e9d3083aff">_M_invoke</link> (_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link> <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a7687e309e6b92cefface06adb220bba8">__count</link> (_IIter __a, _IIter __b, _IIter __c, _IIter __d) const</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1ac967c63c65176bd0513f739d13435310">__first_empty</link> (_IIter, _IIter, _OutputIterator __out) const</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a4d8d76497f11961e68f90d4da2db4d5e">__second_empty</link> (_IIter, _IIter, _OutputIterator __out) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____intersection__func_1ad850f7ce6c8dd5766e6afaa5fcd12ddd">__intersection_func</link> (_Compare __comp)</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a4f6ddaf8bc7c88dfef71c0e9d3083aff">_M_invoke</link> (_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link> <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a7687e309e6b92cefface06adb220bba8">__count</link> (_IIter __a, _IIter __b, _IIter __c, _IIter __d) const</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1ac967c63c65176bd0513f739d13435310">__first_empty</link> (_IIter, _IIter, _OutputIterator __out) const</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a4d8d76497f11961e68f90d4da2db4d5e">__second_empty</link> (_IIter, _IIter, _OutputIterator __out) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____intersection__func_1ad850f7ce6c8dd5766e6afaa5fcd12ddd">__intersection_func</link> (_Compare __comp)</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a4f6ddaf8bc7c88dfef71c0e9d3083aff">_M_invoke</link> (_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link> <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a7687e309e6b92cefface06adb220bba8">__count</link> (_IIter __a, _IIter __b, _IIter __c, _IIter __d) const</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1ac967c63c65176bd0513f739d13435310">__first_empty</link> (_IIter, _IIter, _OutputIterator __out) const</para>
</listitem>
            <listitem><para>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func_1a4d8d76497f11961e68f90d4da2db4d5e">__second_empty</link> (_IIter, _IIter, _OutputIterator __out) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>_Compare <link linkend="_struct____gnu__parallel_1_1____intersection__func_1af87c3f480c0a1d71e96e3c99853db6d1">_M_comp</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2"/><section>
    <title>_DifferenceType<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef _TraitsType::difference_type <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2"/><section>
    <title>_DifferenceType<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef _TraitsType::difference_type <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2"/><section>
    <title>_DifferenceType<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_DifferenceType</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_DifferenceType</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef _TraitsType::difference_type <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_DifferenceType</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a5f8bab921de3204546567b175d20e1a7"/><section>
    <title>_IteratorPair<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef std::pair&lt;_IIter, _IIter&gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_IteratorPair</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a5f8bab921de3204546567b175d20e1a7"/><section>
    <title>_IteratorPair<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef std::pair&lt;_IIter, _IIter&gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_IteratorPair</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a5f8bab921de3204546567b175d20e1a7"/><section>
    <title>_IteratorPair<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef std::pair&lt;_IIter, _IIter&gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_IteratorPair</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a910baccfab36636b1ee2ae4a2cb6d471"/><section>
    <title>_TraitsType<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_TraitsType</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_TraitsType</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_IIter&gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_TraitsType</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a910baccfab36636b1ee2ae4a2cb6d471"/><section>
    <title>_TraitsType<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_TraitsType</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_TraitsType</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_IIter&gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_TraitsType</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a910baccfab36636b1ee2ae4a2cb6d471"/><section>
    <title>_TraitsType<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_TraitsType</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_TraitsType</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_IIter&gt; <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_TraitsType</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1ad850f7ce6c8dd5766e6afaa5fcd12ddd"/><section>
    <title>__intersection_func()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__intersection_func</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__intersection_func</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__intersection_func (_Compare __comp)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1ad850f7ce6c8dd5766e6afaa5fcd12ddd"/><section>
    <title>__intersection_func()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__intersection_func</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__intersection_func</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__intersection_func (_Compare __comp)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1ad850f7ce6c8dd5766e6afaa5fcd12ddd"/><section>
    <title>__intersection_func()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__intersection_func</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__intersection_func</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__intersection_func (_Compare __comp)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a7687e309e6b92cefface06adb220bba8"/><section>
    <title>__count()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__count</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__count</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link> <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__count (_IIter __a, _IIter __b, _IIter __c, _IIter __d) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a7687e309e6b92cefface06adb220bba8"/><section>
    <title>__count()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__count</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__count</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link> <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__count (_IIter __a, _IIter __b, _IIter __c, _IIter __d) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a7687e309e6b92cefface06adb220bba8"/><section>
    <title>__count()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__count</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__count</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____intersection__func_1a731850aaa371b07df4714fb9687ee6e2">_DifferenceType</link> <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__count (_IIter __a, _IIter __b, _IIter __c, _IIter __d) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1ac967c63c65176bd0513f739d13435310"/><section>
    <title>__first_empty()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__first_empty</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__first_empty</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__first_empty (_IIter , _IIter , _OutputIterator __out) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1ac967c63c65176bd0513f739d13435310"/><section>
    <title>__first_empty()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__first_empty</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__first_empty</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__first_empty (_IIter , _IIter , _OutputIterator __out) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1ac967c63c65176bd0513f739d13435310"/><section>
    <title>__first_empty()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__first_empty</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__first_empty</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__first_empty (_IIter , _IIter , _OutputIterator __out) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a4d8d76497f11961e68f90d4da2db4d5e"/><section>
    <title>__second_empty()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__second_empty</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__second_empty</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__second_empty (_IIter , _IIter , _OutputIterator __out) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a4d8d76497f11961e68f90d4da2db4d5e"/><section>
    <title>__second_empty()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__second_empty</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__second_empty</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__second_empty (_IIter , _IIter , _OutputIterator __out) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a4d8d76497f11961e68f90d4da2db4d5e"/><section>
    <title>__second_empty()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__second_empty</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>__second_empty</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::__second_empty (_IIter , _IIter , _OutputIterator __out) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a4f6ddaf8bc7c88dfef71c0e9d3083aff"/><section>
    <title>_M_invoke()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_M_invoke</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_M_invoke</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_M_invoke (_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a4f6ddaf8bc7c88dfef71c0e9d3083aff"/><section>
    <title>_M_invoke()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_M_invoke</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_M_invoke</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_M_invoke (_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1a4f6ddaf8bc7c88dfef71c0e9d3083aff"/><section>
    <title>_M_invoke()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_M_invoke</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_M_invoke</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_OutputIterator <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_M_invoke (_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____intersection__func_1af87c3f480c0a1d71e96e3c99853db6d1"/><section>
    <title>_M_comp</title>
<indexterm><primary>_M_comp</primary><secondary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</primary><secondary>_M_comp</secondary></indexterm>
<computeroutput>template&lt;typename _IIter , typename _OutputIterator , typename _Compare &gt; </computeroutput><para><computeroutput>_Compare <link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func</link>&lt; _IIter, _OutputIterator, _Compare &gt;::_M_comp</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2set__operations_8h">set_operations.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2set__operations_8h">set_operations.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2set__operations_8h">set_operations.h</link></section>
</section>
