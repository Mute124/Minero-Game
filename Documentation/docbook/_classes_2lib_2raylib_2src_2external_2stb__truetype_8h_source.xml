<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2raylib_2src_2external_2stb__truetype_8h_source" xml:lang="en-US">
<title>stb_truetype.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/raylib/src/external/stb_truetype.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;stb_truetype.h&#32;-&#32;v1.24&#32;-&#32;public&#32;domain</emphasis>
2 <emphasis role="comment">//&#32;authored&#32;from&#32;2009-2020&#32;by&#32;Sean&#32;Barrett&#32;/&#32;RAD&#32;Game&#32;Tools</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;=======================================================================</emphasis>
5 <emphasis role="comment">//</emphasis>
6 <emphasis role="comment">//&#32;&#32;&#32;&#32;NO&#32;SECURITY&#32;GUARANTEE&#32;--&#32;DO&#32;NOT&#32;USE&#32;THIS&#32;ON&#32;UNTRUSTED&#32;FONT&#32;FILES</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//&#32;This&#32;library&#32;does&#32;no&#32;range&#32;checking&#32;of&#32;the&#32;offsets&#32;found&#32;in&#32;the&#32;file,</emphasis>
9 <emphasis role="comment">//&#32;meaning&#32;an&#32;attacker&#32;can&#32;use&#32;it&#32;to&#32;read&#32;arbitrary&#32;memory.</emphasis>
10 <emphasis role="comment">//</emphasis>
11 <emphasis role="comment">//&#32;=======================================================================</emphasis>
12 <emphasis role="comment">//</emphasis>
13 <emphasis role="comment">//&#32;&#32;&#32;This&#32;library&#32;processes&#32;TrueType&#32;files:</emphasis>
14 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parse&#32;files</emphasis>
15 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extract&#32;glyph&#32;metrics</emphasis>
16 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extract&#32;glyph&#32;shapes</emphasis>
17 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;render&#32;glyphs&#32;to&#32;one-channel&#32;bitmaps&#32;with&#32;antialiasing&#32;(box&#32;filter)</emphasis>
18 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;render&#32;glyphs&#32;to&#32;one-channel&#32;SDF&#32;bitmaps&#32;(signed-distance&#32;field/function)</emphasis>
19 <emphasis role="comment">//</emphasis>
20 <emphasis role="comment">//&#32;&#32;&#32;Todo:</emphasis>
21 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;non-MS&#32;cmaps</emphasis>
22 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crashproof&#32;on&#32;bad&#32;data</emphasis>
23 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hinting?&#32;(no&#32;longer&#32;patented)</emphasis>
24 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cleartype-style&#32;AA?</emphasis>
25 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize:&#32;use&#32;simple&#32;memory&#32;allocator&#32;for&#32;intermediates</emphasis>
26 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize:&#32;build&#32;edge-list&#32;directly&#32;from&#32;curves</emphasis>
27 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize:&#32;rasterize&#32;directly&#32;from&#32;curves?</emphasis>
28 <emphasis role="comment">//</emphasis>
29 <emphasis role="comment">//&#32;ADDITIONAL&#32;CONTRIBUTORS</emphasis>
30 <emphasis role="comment">//</emphasis>
31 <emphasis role="comment">//&#32;&#32;&#32;Mikko&#32;Mononen:&#32;compound&#32;shape&#32;support,&#32;more&#32;cmap&#32;formats</emphasis>
32 <emphasis role="comment">//&#32;&#32;&#32;Tor&#32;Andersson:&#32;kerning,&#32;subpixel&#32;rendering</emphasis>
33 <emphasis role="comment">//&#32;&#32;&#32;Dougall&#32;Johnson:&#32;OpenType&#32;/&#32;Type&#32;2&#32;font&#32;handling</emphasis>
34 <emphasis role="comment">//&#32;&#32;&#32;Daniel&#32;Ribeiro&#32;Maciel:&#32;basic&#32;GPOS-based&#32;kerning</emphasis>
35 <emphasis role="comment">//</emphasis>
36 <emphasis role="comment">//&#32;&#32;&#32;Misc&#32;other:</emphasis>
37 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ryan&#32;Gordon</emphasis>
38 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Simon&#32;Glass</emphasis>
39 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:IntellectualKitty</emphasis>
40 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Imanol&#32;Celaya</emphasis>
41 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Daniel&#32;Ribeiro&#32;Maciel</emphasis>
42 <emphasis role="comment">//</emphasis>
43 <emphasis role="comment">//&#32;&#32;&#32;Bug/warning&#32;reports/fixes:</emphasis>
44 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;Zer&quot;&#32;on&#32;mollyrocket&#32;&#32;&#32;&#32;&#32;&#32;&#32;Fabian&#32;&quot;ryg&quot;&#32;Giesen&#32;&#32;&#32;github:NiLuJe</emphasis>
45 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cass&#32;Everitt&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Martins&#32;Mozeiko&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:aloucks</emphasis>
46 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;stoiko&#32;(Haemimont&#32;Games)&#32;&#32;&#32;Cap&#32;Petschulat&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:oyvindjam</emphasis>
47 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Brian&#32;Hook&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Omar&#32;Cornut&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:vassvik</emphasis>
48 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Walter&#32;van&#32;Niftrik&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ryan&#32;Griege</emphasis>
49 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;David&#32;Gow&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Peter&#32;LaValle</emphasis>
50 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;David&#32;Given&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sergey&#32;Popov</emphasis>
51 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ivan-Assen&#32;Ivanov&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Giumo&#32;X.&#32;Clanjor</emphasis>
52 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Anthony&#32;Pesch&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Higor&#32;Euripedes</emphasis>
53 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Johan&#32;Duparc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Thomas&#32;Fields</emphasis>
54 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Hou&#32;Qiming&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Derek&#32;Vinyard</emphasis>
55 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rob&#32;Loach&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cort&#32;Stratton</emphasis>
56 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Kenney&#32;Phillis&#32;Jr.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Brian&#32;Costabile&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
57 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ken&#32;Voskuil&#32;(kaesve)&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
58 <emphasis role="comment">//</emphasis>
59 <emphasis role="comment">//&#32;VERSION&#32;HISTORY</emphasis>
60 <emphasis role="comment">//</emphasis>
61 <emphasis role="comment">//&#32;&#32;&#32;1.24&#32;(2020-02-05)&#32;fix&#32;warning</emphasis>
62 <emphasis role="comment">//&#32;&#32;&#32;1.23&#32;(2020-02-02)&#32;query&#32;SVG&#32;data&#32;for&#32;glyphs;&#32;query&#32;whole&#32;kerning&#32;table&#32;(but&#32;only&#32;kern&#32;not&#32;GPOS)</emphasis>
63 <emphasis role="comment">//&#32;&#32;&#32;1.22&#32;(2019-08-11)&#32;minimize&#32;missing-glyph&#32;duplication;&#32;fix&#32;kerning&#32;if&#32;both&#32;&apos;GPOS&apos;&#32;and&#32;&apos;kern&apos;&#32;are&#32;defined</emphasis>
64 <emphasis role="comment">//&#32;&#32;&#32;1.21&#32;(2019-02-25)&#32;fix&#32;warning</emphasis>
65 <emphasis role="comment">//&#32;&#32;&#32;1.20&#32;(2019-02-07)&#32;PackFontRange&#32;skips&#32;missing&#32;codepoints;&#32;GetScaleFontVMetrics()</emphasis>
66 <emphasis role="comment">//&#32;&#32;&#32;1.19&#32;(2018-02-11)&#32;GPOS&#32;kerning,&#32;STBTT_fmod</emphasis>
67 <emphasis role="comment">//&#32;&#32;&#32;1.18&#32;(2018-01-29)&#32;add&#32;missing&#32;function</emphasis>
68 <emphasis role="comment">//&#32;&#32;&#32;1.17&#32;(2017-07-23)&#32;make&#32;more&#32;arguments&#32;const;&#32;doc&#32;fix</emphasis>
69 <emphasis role="comment">//&#32;&#32;&#32;1.16&#32;(2017-07-12)&#32;SDF&#32;support</emphasis>
70 <emphasis role="comment">//&#32;&#32;&#32;1.15&#32;(2017-03-03)&#32;make&#32;more&#32;arguments&#32;const</emphasis>
71 <emphasis role="comment">//&#32;&#32;&#32;1.14&#32;(2017-01-16)&#32;num-fonts-in-TTC&#32;function</emphasis>
72 <emphasis role="comment">//&#32;&#32;&#32;1.13&#32;(2017-01-02)&#32;support&#32;OpenType&#32;fonts,&#32;certain&#32;Apple&#32;fonts</emphasis>
73 <emphasis role="comment">//&#32;&#32;&#32;1.12&#32;(2016-10-25)&#32;suppress&#32;warnings&#32;about&#32;casting&#32;away&#32;const&#32;with&#32;-Wcast-qual</emphasis>
74 <emphasis role="comment">//&#32;&#32;&#32;1.11&#32;(2016-04-02)&#32;fix&#32;unused-variable&#32;warning</emphasis>
75 <emphasis role="comment">//&#32;&#32;&#32;1.10&#32;(2016-04-02)&#32;user-defined&#32;fabs();&#32;rare&#32;memory&#32;leak;&#32;remove&#32;duplicate&#32;typedef</emphasis>
76 <emphasis role="comment">//&#32;&#32;&#32;1.09&#32;(2016-01-16)&#32;warning&#32;fix;&#32;avoid&#32;crash&#32;on&#32;outofmem;&#32;use&#32;allocation&#32;userdata&#32;properly</emphasis>
77 <emphasis role="comment">//&#32;&#32;&#32;1.08&#32;(2015-09-13)&#32;document&#32;stbtt_Rasterize();&#32;fixes&#32;for&#32;vertical&#32;&amp;&#32;horizontal&#32;edges</emphasis>
78 <emphasis role="comment">//&#32;&#32;&#32;1.07&#32;(2015-08-01)&#32;allow&#32;PackFontRanges&#32;to&#32;accept&#32;arrays&#32;of&#32;sparse&#32;codepoints;</emphasis>
79 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variant&#32;PackFontRanges&#32;to&#32;pack&#32;and&#32;render&#32;in&#32;separate&#32;phases;</emphasis>
80 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;stbtt_GetFontOFfsetForIndex&#32;(never&#32;worked&#32;for&#32;non-0&#32;input?);</emphasis>
81 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;an&#32;assert()&#32;bug&#32;in&#32;the&#32;new&#32;rasterizer</emphasis>
82 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replace&#32;assert()&#32;with&#32;STBTT_assert()&#32;in&#32;new&#32;rasterizer</emphasis>
83 <emphasis role="comment">//</emphasis>
84 <emphasis role="comment">//&#32;&#32;&#32;Full&#32;history&#32;can&#32;be&#32;found&#32;at&#32;the&#32;end&#32;of&#32;this&#32;file.</emphasis>
85 <emphasis role="comment">//</emphasis>
86 <emphasis role="comment">//&#32;LICENSE</emphasis>
87 <emphasis role="comment">//</emphasis>
88 <emphasis role="comment">//&#32;&#32;&#32;See&#32;end&#32;of&#32;file&#32;for&#32;license&#32;information.</emphasis>
89 <emphasis role="comment">//</emphasis>
90 <emphasis role="comment">//&#32;USAGE</emphasis>
91 <emphasis role="comment">//</emphasis>
92 <emphasis role="comment">//&#32;&#32;&#32;Include&#32;this&#32;file&#32;in&#32;whatever&#32;places&#32;need&#32;to&#32;refer&#32;to&#32;it.&#32;In&#32;ONE&#32;C/C++</emphasis>
93 <emphasis role="comment">//&#32;&#32;&#32;file,&#32;write:</emphasis>
94 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STB_TRUETYPE_IMPLEMENTATION</emphasis>
95 <emphasis role="comment">//&#32;&#32;&#32;before&#32;the&#32;#include&#32;of&#32;this&#32;file.&#32;This&#32;expands&#32;out&#32;the&#32;actual</emphasis>
96 <emphasis role="comment">//&#32;&#32;&#32;implementation&#32;into&#32;that&#32;C/C++&#32;file.</emphasis>
97 <emphasis role="comment">//</emphasis>
98 <emphasis role="comment">//&#32;&#32;&#32;To&#32;make&#32;the&#32;implementation&#32;private&#32;to&#32;the&#32;file&#32;that&#32;generates&#32;the&#32;implementation,</emphasis>
99 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBTT_STATIC</emphasis>
100 <emphasis role="comment">//</emphasis>
101 <emphasis role="comment">//&#32;&#32;&#32;Simple&#32;3D&#32;API&#32;(don&apos;t&#32;ship&#32;this,&#32;but&#32;it&apos;s&#32;fine&#32;for&#32;tools&#32;and&#32;quick&#32;start)</emphasis>
102 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_BakeFontBitmap()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;bake&#32;a&#32;font&#32;to&#32;a&#32;bitmap&#32;for&#32;use&#32;as&#32;texture</emphasis>
103 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetBakedQuad()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;compute&#32;quad&#32;to&#32;draw&#32;for&#32;a&#32;given&#32;char</emphasis>
104 <emphasis role="comment">//</emphasis>
105 <emphasis role="comment">//&#32;&#32;&#32;Improved&#32;3D&#32;API&#32;(more&#32;shippable):</emphasis>
106 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#include&#32;&quot;stb_rect_pack.h&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;optional,&#32;but&#32;you&#32;really&#32;want&#32;it</emphasis>
107 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_PackBegin()</emphasis>
108 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_PackSetOversampling()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;for&#32;improved&#32;quality&#32;on&#32;small&#32;fonts</emphasis>
109 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_PackFontRanges()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;pack&#32;and&#32;renders</emphasis>
110 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_PackEnd()</emphasis>
111 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetPackedQuad()</emphasis>
112 <emphasis role="comment">//</emphasis>
113 <emphasis role="comment">//&#32;&#32;&#32;&quot;Load&quot;&#32;a&#32;font&#32;file&#32;from&#32;a&#32;memory&#32;buffer&#32;(you&#32;have&#32;to&#32;keep&#32;the&#32;buffer&#32;loaded)</emphasis>
114 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_InitFont()</emphasis>
115 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetFontOffsetForIndex()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;indexing&#32;for&#32;TTC&#32;font&#32;collections</emphasis>
116 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetNumberOfFonts()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;number&#32;of&#32;fonts&#32;for&#32;TTC&#32;font&#32;collections</emphasis>
117 <emphasis role="comment">//</emphasis>
118 <emphasis role="comment">//&#32;&#32;&#32;Render&#32;a&#32;unicode&#32;codepoint&#32;to&#32;a&#32;bitmap</emphasis>
119 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetCodepointBitmap()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;allocates&#32;and&#32;returns&#32;a&#32;bitmap</emphasis>
120 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_MakeCodepointBitmap()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;renders&#32;into&#32;bitmap&#32;you&#32;provide</emphasis>
121 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetCodepointBitmapBox()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;how&#32;big&#32;the&#32;bitmap&#32;must&#32;be</emphasis>
122 <emphasis role="comment">//</emphasis>
123 <emphasis role="comment">//&#32;&#32;&#32;Character&#32;advance/positioning</emphasis>
124 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetCodepointHMetrics()</emphasis>
125 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetFontVMetrics()</emphasis>
126 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetFontVMetricsOS2()</emphasis>
127 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetCodepointKernAdvance()</emphasis>
128 <emphasis role="comment">//</emphasis>
129 <emphasis role="comment">//&#32;&#32;&#32;Starting&#32;with&#32;version&#32;1.06,&#32;the&#32;rasterizer&#32;was&#32;replaced&#32;with&#32;a&#32;new,</emphasis>
130 <emphasis role="comment">//&#32;&#32;&#32;faster&#32;and&#32;generally-more-precise&#32;rasterizer.&#32;The&#32;new&#32;rasterizer&#32;more</emphasis>
131 <emphasis role="comment">//&#32;&#32;&#32;accurately&#32;measures&#32;pixel&#32;coverage&#32;for&#32;anti-aliasing,&#32;except&#32;in&#32;the&#32;case</emphasis>
132 <emphasis role="comment">//&#32;&#32;&#32;where&#32;multiple&#32;shapes&#32;overlap,&#32;in&#32;which&#32;case&#32;it&#32;overestimates&#32;the&#32;AA&#32;pixel</emphasis>
133 <emphasis role="comment">//&#32;&#32;&#32;coverage.&#32;Thus,&#32;anti-aliasing&#32;of&#32;intersecting&#32;shapes&#32;may&#32;look&#32;wrong.&#32;If</emphasis>
134 <emphasis role="comment">//&#32;&#32;&#32;this&#32;turns&#32;out&#32;to&#32;be&#32;a&#32;problem,&#32;you&#32;can&#32;re-enable&#32;the&#32;old&#32;rasterizer&#32;with</emphasis>
135 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBTT_RASTERIZER_VERSION&#32;1</emphasis>
136 <emphasis role="comment">//&#32;&#32;&#32;which&#32;will&#32;incur&#32;about&#32;a&#32;15%&#32;speed&#32;hit.</emphasis>
137 <emphasis role="comment">//</emphasis>
138 <emphasis role="comment">//&#32;ADDITIONAL&#32;DOCUMENTATION</emphasis>
139 <emphasis role="comment">//</emphasis>
140 <emphasis role="comment">//&#32;&#32;&#32;Immediately&#32;after&#32;this&#32;block&#32;comment&#32;are&#32;a&#32;series&#32;of&#32;sample&#32;programs.</emphasis>
141 <emphasis role="comment">//</emphasis>
142 <emphasis role="comment">//&#32;&#32;&#32;After&#32;the&#32;sample&#32;programs&#32;is&#32;the&#32;&quot;header&#32;file&quot;&#32;section.&#32;This&#32;section</emphasis>
143 <emphasis role="comment">//&#32;&#32;&#32;includes&#32;documentation&#32;for&#32;each&#32;API&#32;function.</emphasis>
144 <emphasis role="comment">//</emphasis>
145 <emphasis role="comment">//&#32;&#32;&#32;Some&#32;important&#32;concepts&#32;to&#32;understand&#32;to&#32;use&#32;this&#32;library:</emphasis>
146 <emphasis role="comment">//</emphasis>
147 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Codepoint</emphasis>
148 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Characters&#32;are&#32;defined&#32;by&#32;unicode&#32;codepoints,&#32;e.g.&#32;65&#32;is</emphasis>
149 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uppercase&#32;A,&#32;231&#32;is&#32;lowercase&#32;c&#32;with&#32;a&#32;cedilla,&#32;0x7e30&#32;is</emphasis>
150 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;hiragana&#32;for&#32;&quot;ma&quot;.</emphasis>
151 <emphasis role="comment">//</emphasis>
152 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Glyph</emphasis>
153 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;visual&#32;character&#32;shape&#32;(every&#32;codepoint&#32;is&#32;rendered&#32;as</emphasis>
154 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;some&#32;glyph)</emphasis>
155 <emphasis role="comment">//</emphasis>
156 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Glyph&#32;index</emphasis>
157 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;font-specific&#32;integer&#32;ID&#32;representing&#32;a&#32;glyph</emphasis>
158 <emphasis role="comment">//</emphasis>
159 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Baseline</emphasis>
160 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Glyph&#32;shapes&#32;are&#32;defined&#32;relative&#32;to&#32;a&#32;baseline,&#32;which&#32;is&#32;the</emphasis>
161 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bottom&#32;of&#32;uppercase&#32;characters.&#32;Characters&#32;extend&#32;both&#32;above</emphasis>
162 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;below&#32;the&#32;baseline.</emphasis>
163 <emphasis role="comment">//</emphasis>
164 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Current&#32;Point</emphasis>
165 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;As&#32;you&#32;draw&#32;text&#32;to&#32;the&#32;screen,&#32;you&#32;keep&#32;track&#32;of&#32;a&#32;&quot;current&#32;point&quot;</emphasis>
166 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;is&#32;the&#32;origin&#32;of&#32;each&#32;character.&#32;The&#32;current&#32;point&apos;s&#32;vertical</emphasis>
167 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;is&#32;the&#32;baseline.&#32;Even&#32;&quot;baked&#32;fonts&quot;&#32;use&#32;this&#32;model.</emphasis>
168 <emphasis role="comment">//</emphasis>
169 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Vertical&#32;Font&#32;Metrics</emphasis>
170 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;vertical&#32;qualities&#32;of&#32;the&#32;font,&#32;used&#32;to&#32;vertically&#32;position</emphasis>
171 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;space&#32;the&#32;characters.&#32;See&#32;docs&#32;for&#32;stbtt_GetFontVMetrics.</emphasis>
172 <emphasis role="comment">//</emphasis>
173 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Font&#32;Size&#32;in&#32;Pixels&#32;or&#32;Points</emphasis>
174 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;preferred&#32;interface&#32;for&#32;specifying&#32;font&#32;sizes&#32;in&#32;stb_truetype</emphasis>
175 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;to&#32;specify&#32;how&#32;tall&#32;the&#32;font&apos;s&#32;vertical&#32;extent&#32;should&#32;be&#32;in&#32;pixels.</emphasis>
176 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;that&#32;sounds&#32;good&#32;enough,&#32;skip&#32;the&#32;next&#32;paragraph.</emphasis>
177 <emphasis role="comment">//</emphasis>
178 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Most&#32;font&#32;APIs&#32;instead&#32;use&#32;&quot;points&quot;,&#32;which&#32;are&#32;a&#32;common&#32;typographic</emphasis>
179 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;measurement&#32;for&#32;describing&#32;font&#32;size,&#32;defined&#32;as&#32;72&#32;points&#32;per&#32;inch.</emphasis>
180 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stb_truetype&#32;provides&#32;a&#32;point&#32;API&#32;for&#32;compatibility.&#32;However,&#32;true</emphasis>
181 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;per&#32;inch&quot;&#32;conventions&#32;don&apos;t&#32;make&#32;much&#32;sense&#32;on&#32;computer&#32;displays</emphasis>
182 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;since&#32;different&#32;monitors&#32;have&#32;different&#32;number&#32;of&#32;pixels&#32;per</emphasis>
183 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inch.&#32;For&#32;example,&#32;Windows&#32;traditionally&#32;uses&#32;a&#32;convention&#32;that</emphasis>
184 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;there&#32;are&#32;96&#32;pixels&#32;per&#32;inch,&#32;thus&#32;making&#32;&apos;inch&apos;&#32;measurements&#32;have</emphasis>
185 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nothing&#32;to&#32;do&#32;with&#32;inches,&#32;and&#32;thus&#32;effectively&#32;defining&#32;a&#32;point&#32;to</emphasis>
186 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;1.333&#32;pixels.&#32;Additionally,&#32;the&#32;TrueType&#32;font&#32;data&#32;provides</emphasis>
187 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;explicit&#32;scale&#32;factor&#32;to&#32;scale&#32;a&#32;given&#32;font&apos;s&#32;glyphs&#32;to&#32;points,</emphasis>
188 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;the&#32;author&#32;has&#32;observed&#32;that&#32;this&#32;scale&#32;factor&#32;is&#32;often&#32;wrong</emphasis>
189 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;non-commercial&#32;fonts,&#32;thus&#32;making&#32;fonts&#32;scaled&#32;in&#32;points</emphasis>
190 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;according&#32;to&#32;the&#32;TrueType&#32;spec&#32;incoherently&#32;sized&#32;in&#32;practice.</emphasis>
191 <emphasis role="comment">//</emphasis>
192 <emphasis role="comment">//&#32;DETAILED&#32;USAGE:</emphasis>
193 <emphasis role="comment">//</emphasis>
194 <emphasis role="comment">//&#32;&#32;Scale:</emphasis>
195 <emphasis role="comment">//&#32;&#32;&#32;&#32;Select&#32;how&#32;high&#32;you&#32;want&#32;the&#32;font&#32;to&#32;be,&#32;in&#32;points&#32;or&#32;pixels.</emphasis>
196 <emphasis role="comment">//&#32;&#32;&#32;&#32;Call&#32;ScaleForPixelHeight&#32;or&#32;ScaleForMappingEmToPixels&#32;to&#32;compute</emphasis>
197 <emphasis role="comment">//&#32;&#32;&#32;&#32;a&#32;scale&#32;factor&#32;SF&#32;that&#32;will&#32;be&#32;used&#32;by&#32;all&#32;other&#32;functions.</emphasis>
198 <emphasis role="comment">//</emphasis>
199 <emphasis role="comment">//&#32;&#32;Baseline:</emphasis>
200 <emphasis role="comment">//&#32;&#32;&#32;&#32;You&#32;need&#32;to&#32;select&#32;a&#32;y-coordinate&#32;that&#32;is&#32;the&#32;baseline&#32;of&#32;where</emphasis>
201 <emphasis role="comment">//&#32;&#32;&#32;&#32;your&#32;text&#32;will&#32;appear.&#32;Call&#32;GetFontBoundingBox&#32;to&#32;get&#32;the&#32;baseline-relative</emphasis>
202 <emphasis role="comment">//&#32;&#32;&#32;&#32;bounding&#32;box&#32;for&#32;all&#32;characters.&#32;SF*-y0&#32;will&#32;be&#32;the&#32;distance&#32;in&#32;pixels</emphasis>
203 <emphasis role="comment">//&#32;&#32;&#32;&#32;that&#32;the&#32;worst-case&#32;character&#32;could&#32;extend&#32;above&#32;the&#32;baseline,&#32;so&#32;if</emphasis>
204 <emphasis role="comment">//&#32;&#32;&#32;&#32;you&#32;want&#32;the&#32;top&#32;edge&#32;of&#32;characters&#32;to&#32;appear&#32;at&#32;the&#32;top&#32;of&#32;the</emphasis>
205 <emphasis role="comment">//&#32;&#32;&#32;&#32;screen&#32;where&#32;y=0,&#32;then&#32;you&#32;would&#32;set&#32;the&#32;baseline&#32;to&#32;SF*-y0.</emphasis>
206 <emphasis role="comment">//</emphasis>
207 <emphasis role="comment">//&#32;&#32;Current&#32;point:</emphasis>
208 <emphasis role="comment">//&#32;&#32;&#32;&#32;Set&#32;the&#32;current&#32;point&#32;where&#32;the&#32;first&#32;character&#32;will&#32;appear.&#32;The</emphasis>
209 <emphasis role="comment">//&#32;&#32;&#32;&#32;first&#32;character&#32;could&#32;extend&#32;left&#32;of&#32;the&#32;current&#32;point;&#32;this&#32;is&#32;font</emphasis>
210 <emphasis role="comment">//&#32;&#32;&#32;&#32;dependent.&#32;You&#32;can&#32;either&#32;choose&#32;a&#32;current&#32;point&#32;that&#32;is&#32;the&#32;leftmost</emphasis>
211 <emphasis role="comment">//&#32;&#32;&#32;&#32;point&#32;and&#32;hope,&#32;or&#32;add&#32;some&#32;padding,&#32;or&#32;check&#32;the&#32;bounding&#32;box&#32;or</emphasis>
212 <emphasis role="comment">//&#32;&#32;&#32;&#32;left-side-bearing&#32;of&#32;the&#32;first&#32;character&#32;to&#32;be&#32;displayed&#32;and&#32;set</emphasis>
213 <emphasis role="comment">//&#32;&#32;&#32;&#32;the&#32;current&#32;point&#32;based&#32;on&#32;that.</emphasis>
214 <emphasis role="comment">//</emphasis>
215 <emphasis role="comment">//&#32;&#32;Displaying&#32;a&#32;character:</emphasis>
216 <emphasis role="comment">//&#32;&#32;&#32;&#32;Compute&#32;the&#32;bounding&#32;box&#32;of&#32;the&#32;character.&#32;It&#32;will&#32;contain&#32;signed&#32;values</emphasis>
217 <emphasis role="comment">//&#32;&#32;&#32;&#32;relative&#32;to&#32;&lt;current_point,&#32;baseline&gt;.&#32;I.e.&#32;if&#32;it&#32;returns&#32;x0,y0,x1,y1,</emphasis>
218 <emphasis role="comment">//&#32;&#32;&#32;&#32;then&#32;the&#32;character&#32;should&#32;be&#32;displayed&#32;in&#32;the&#32;rectangle&#32;from</emphasis>
219 <emphasis role="comment">//&#32;&#32;&#32;&#32;&lt;current_point+SF*x0,&#32;baseline+SF*y0&gt;&#32;to&#32;&lt;current_point+SF*x1,baseline+SF*y1).</emphasis>
220 <emphasis role="comment">//</emphasis>
221 <emphasis role="comment">//&#32;&#32;Advancing&#32;for&#32;the&#32;next&#32;character:</emphasis>
222 <emphasis role="comment">//&#32;&#32;&#32;&#32;Call&#32;GlyphHMetrics,&#32;and&#32;compute&#32;&apos;current_point&#32;+=&#32;SF&#32;*&#32;advance&apos;.</emphasis>
223 <emphasis role="comment">//</emphasis>
224 <emphasis role="comment">//</emphasis>
225 <emphasis role="comment">//&#32;ADVANCED&#32;USAGE</emphasis>
226 <emphasis role="comment">//</emphasis>
227 <emphasis role="comment">//&#32;&#32;&#32;Quality:</emphasis>
228 <emphasis role="comment">//</emphasis>
229 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;Use&#32;the&#32;functions&#32;with&#32;Subpixel&#32;at&#32;the&#32;end&#32;to&#32;allow&#32;your&#32;characters</emphasis>
230 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;to&#32;have&#32;subpixel&#32;positioning.&#32;Since&#32;the&#32;font&#32;is&#32;anti-aliased,&#32;not</emphasis>
231 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;hinted,&#32;this&#32;is&#32;very&#32;import&#32;for&#32;quality.&#32;(This&#32;is&#32;not&#32;possible&#32;with</emphasis>
232 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;baked&#32;fonts.)</emphasis>
233 <emphasis role="comment">//</emphasis>
234 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;Kerning&#32;is&#32;now&#32;supported,&#32;and&#32;if&#32;you&apos;re&#32;supporting&#32;subpixel&#32;rendering</emphasis>
235 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;then&#32;kerning&#32;is&#32;worth&#32;using&#32;to&#32;give&#32;your&#32;text&#32;a&#32;polished&#32;look.</emphasis>
236 <emphasis role="comment">//</emphasis>
237 <emphasis role="comment">//&#32;&#32;&#32;Performance:</emphasis>
238 <emphasis role="comment">//</emphasis>
239 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;Convert&#32;Unicode&#32;codepoints&#32;to&#32;glyph&#32;indexes&#32;and&#32;operate&#32;on&#32;the&#32;glyphs;</emphasis>
240 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;you&#32;don&apos;t&#32;do&#32;this,&#32;stb_truetype&#32;is&#32;forced&#32;to&#32;do&#32;the&#32;conversion&#32;on</emphasis>
241 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;every&#32;call.</emphasis>
242 <emphasis role="comment">//</emphasis>
243 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;There&#32;are&#32;a&#32;lot&#32;of&#32;memory&#32;allocations.&#32;We&#32;should&#32;modify&#32;it&#32;to&#32;take</emphasis>
244 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;a&#32;temp&#32;buffer&#32;and&#32;allocate&#32;from&#32;the&#32;temp&#32;buffer&#32;(without&#32;freeing),</emphasis>
245 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;should&#32;help&#32;performance&#32;a&#32;lot.</emphasis>
246 <emphasis role="comment">//</emphasis>
247 <emphasis role="comment">//&#32;NOTES</emphasis>
248 <emphasis role="comment">//</emphasis>
249 <emphasis role="comment">//&#32;&#32;&#32;The&#32;system&#32;uses&#32;the&#32;raw&#32;data&#32;found&#32;in&#32;the&#32;.ttf&#32;file&#32;without&#32;changing&#32;it</emphasis>
250 <emphasis role="comment">//&#32;&#32;&#32;and&#32;without&#32;building&#32;auxiliary&#32;data&#32;structures.&#32;This&#32;is&#32;a&#32;bit&#32;inefficient</emphasis>
251 <emphasis role="comment">//&#32;&#32;&#32;on&#32;little-endian&#32;systems&#32;(the&#32;data&#32;is&#32;big-endian),&#32;but&#32;assuming&#32;you&apos;re</emphasis>
252 <emphasis role="comment">//&#32;&#32;&#32;caching&#32;the&#32;bitmaps&#32;or&#32;glyph&#32;shapes&#32;this&#32;shouldn&apos;t&#32;be&#32;a&#32;big&#32;deal.</emphasis>
253 <emphasis role="comment">//</emphasis>
254 <emphasis role="comment">//&#32;&#32;&#32;It&#32;appears&#32;to&#32;be&#32;very&#32;hard&#32;to&#32;programmatically&#32;determine&#32;what&#32;font&#32;a</emphasis>
255 <emphasis role="comment">//&#32;&#32;&#32;given&#32;file&#32;is&#32;in&#32;a&#32;general&#32;way.&#32;I&#32;provide&#32;an&#32;API&#32;for&#32;this,&#32;but&#32;I&#32;don&apos;t</emphasis>
256 <emphasis role="comment">//&#32;&#32;&#32;recommend&#32;it.</emphasis>
257 <emphasis role="comment">//</emphasis>
258 <emphasis role="comment">//</emphasis>
259 <emphasis role="comment">//&#32;PERFORMANCE&#32;MEASUREMENTS&#32;FOR&#32;1.06:</emphasis>
260 <emphasis role="comment">//</emphasis>
261 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;32-bit&#32;&#32;&#32;&#32;&#32;64-bit</emphasis>
262 <emphasis role="comment">//&#32;&#32;&#32;Previous&#32;release:&#32;&#32;8.83&#32;s&#32;&#32;&#32;&#32;&#32;7.68&#32;s</emphasis>
263 <emphasis role="comment">//&#32;&#32;&#32;Pool&#32;allocations:&#32;&#32;7.72&#32;s&#32;&#32;&#32;&#32;&#32;6.34&#32;s</emphasis>
264 <emphasis role="comment">//&#32;&#32;&#32;Inline&#32;sort&#32;&#32;&#32;&#32;&#32;:&#32;&#32;6.54&#32;s&#32;&#32;&#32;&#32;&#32;5.65&#32;s</emphasis>
265 <emphasis role="comment">//&#32;&#32;&#32;New&#32;rasterizer&#32;&#32;:&#32;&#32;5.63&#32;s&#32;&#32;&#32;&#32;&#32;5.00&#32;s</emphasis>
266 
272 <emphasis role="comment">//</emphasis>
273 <emphasis role="comment">//&#32;&#32;Incomplete&#32;text-in-3d-api&#32;example,&#32;which&#32;draws&#32;quads&#32;properly&#32;aligned&#32;to&#32;be&#32;lossless</emphasis>
274 <emphasis role="comment">//</emphasis>
275 <emphasis role="preprocessor">#if&#32;0</emphasis>
276 <emphasis role="preprocessor">#define&#32;STB_TRUETYPE_IMPLEMENTATION&#32;&#32;</emphasis><emphasis role="comment">//&#32;force&#32;following&#32;include&#32;to&#32;generate&#32;implementation</emphasis>
277 <emphasis role="preprocessor">#include&#32;&quot;stb_truetype.h&quot;</emphasis>
278 
279 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;ttf_buffer[1&lt;&lt;20];
280 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;temp_bitmap[512*512];
281 
282 <link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;cdata[96];&#32;<emphasis role="comment">//&#32;ASCII&#32;32..126&#32;is&#32;95&#32;glyphs</emphasis>
283 <link linkend="__classes_2lib_2external_2glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;ftex;
284 
285 <emphasis role="keywordtype">void</emphasis>&#32;my_stbtt_initfont(<emphasis role="keywordtype">void</emphasis>)
286 {
287 &#32;&#32;&#32;fread(ttf_buffer,&#32;1,&#32;1&lt;&lt;20,&#32;fopen(<emphasis role="stringliteral">&quot;c:/windows/fonts/times.ttf&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>));
288 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3">stbtt_BakeFontBitmap</link>(ttf_buffer,0,&#32;32.0,&#32;temp_bitmap,512,512,&#32;32,96,&#32;cdata);&#32;<emphasis role="comment">//&#32;no&#32;guarantee&#32;this&#32;fits!</emphasis>
289 &#32;&#32;&#32;<emphasis role="comment">//&#32;can&#32;free&#32;ttf_buffer&#32;at&#32;this&#32;point</emphasis>
290 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a82ac4415f852b8b5bfe7356202ca934e">glGenTextures</link>(1,&#32;&amp;ftex);
291 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a987aecafceffb9afaef11412d42e605b">glBindTexture</link>(<link linkend="__classes_2lib_2external_2glad_8h_1ad4de17abefa73fa2ef53379f73b734be">GL_TEXTURE_2D</link>,&#32;ftex);
292 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a7da97095b562f67f161b50104776a66d">glTexImage2D</link>(<link linkend="__classes_2lib_2external_2glad_8h_1ad4de17abefa73fa2ef53379f73b734be">GL_TEXTURE_2D</link>,&#32;0,&#32;<link linkend="__classes_2lib_2external_2glad_8h_1acf684a80b8a32988e8232d978c60c582">GL_ALPHA</link>,&#32;512,512,&#32;0,&#32;<link linkend="__classes_2lib_2external_2glad_8h_1acf684a80b8a32988e8232d978c60c582">GL_ALPHA</link>,&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a80a33c79f69417372d65d2a65ca36d49">GL_UNSIGNED_BYTE</link>,&#32;temp_bitmap);
293 &#32;&#32;&#32;<emphasis role="comment">//&#32;can&#32;free&#32;temp_bitmap&#32;at&#32;this&#32;point</emphasis>
294 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="__classes_2lib_2external_2glad_8h_1ad4de17abefa73fa2ef53379f73b734be">GL_TEXTURE_2D</link>,&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a173a2b2453322dd8d613df6cf2e72480">GL_TEXTURE_MIN_FILTER</link>,&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a4e682f218130b98b27a1e33fa7325080">GL_LINEAR</link>);
295 }
296 
297 <emphasis role="keywordtype">void</emphasis>&#32;my_stbtt_print(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text)
298 {
299 &#32;&#32;&#32;<emphasis role="comment">//&#32;assume&#32;orthographic&#32;projection&#32;with&#32;units&#32;=&#32;screen&#32;pixels,&#32;origin&#32;at&#32;top&#32;left</emphasis>
300 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a3f7fa0df22505dd09a24a4e1e74eca09">glEnable</link>(<link linkend="__classes_2lib_2external_2glad_8h_1ad4de17abefa73fa2ef53379f73b734be">GL_TEXTURE_2D</link>);
301 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glad_8h_1a987aecafceffb9afaef11412d42e605b">glBindTexture</link>(<link linkend="__classes_2lib_2external_2glad_8h_1ad4de17abefa73fa2ef53379f73b734be">GL_TEXTURE_2D</link>,&#32;ftex);
302 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1a18a9548126ac9e9eb00f9cd26cb0ab85">glBegin</link>(<link linkend="__classes_2lib_2external_2glad_8h_1a36b428225d54dd9cf2e564e5ada3ad3d">GL_QUADS</link>);
303 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*text)&#32;{
304 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*text&#32;&gt;=&#32;32&#32;&amp;&amp;&#32;*text&#32;&lt;&#32;128)&#32;{
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link>&#32;q;
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f">stbtt_GetBakedQuad</link>(cdata,&#32;512,512,&#32;*text-32,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&amp;q,1);<emphasis role="comment">//1=opengl&#32;&amp;&#32;d3d10+,0=d3d9</emphasis>
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1ac070d7960c0d3a19457d466395833bec">glTexCoord2f</link>(q.<link linkend="_structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59">s0</link>,q.<link linkend="_structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b">t1</link>);&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1a077e09fed4e8aef18821105c6d05cc20">glVertex2f</link>(q.<link linkend="_structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e">x0</link>,q.<link linkend="_structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6">y0</link>);
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1ac070d7960c0d3a19457d466395833bec">glTexCoord2f</link>(q.<link linkend="_structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b">s1</link>,q.<link linkend="_structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b">t1</link>);&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1a077e09fed4e8aef18821105c6d05cc20">glVertex2f</link>(q.<link linkend="_structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6">x1</link>,q.<link linkend="_structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6">y0</link>);
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1ac070d7960c0d3a19457d466395833bec">glTexCoord2f</link>(q.<link linkend="_structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b">s1</link>,q.<link linkend="_structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49">t0</link>);&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1a077e09fed4e8aef18821105c6d05cc20">glVertex2f</link>(q.<link linkend="_structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6">x1</link>,q.<link linkend="_structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c">y1</link>);
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1ac070d7960c0d3a19457d466395833bec">glTexCoord2f</link>(q.<link linkend="_structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59">s0</link>,q.<link linkend="_structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49">t0</link>);&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1a077e09fed4e8aef18821105c6d05cc20">glVertex2f</link>(q.<link linkend="_structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e">x0</link>,q.<link linkend="_structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c">y1</link>);
311 &#32;&#32;&#32;&#32;&#32;&#32;}
312 &#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_namespacelest_1acb9f2be64a994ffcd890e99e8a8faf5d">text</link>;
313 &#32;&#32;&#32;}
314 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2gl_8h_1acedf7461ab825274c1c407dcc0ddd56b">glEnd</link>();
315 }
316 <emphasis role="preprocessor">#endif</emphasis>
317 <emphasis role="comment">//</emphasis>
318 <emphasis role="comment">//</emphasis>
320 <emphasis role="comment">//</emphasis>
321 <emphasis role="comment">//&#32;Complete&#32;program&#32;(this&#32;compiles):&#32;get&#32;a&#32;single&#32;bitmap,&#32;print&#32;as&#32;ASCII&#32;art</emphasis>
322 <emphasis role="comment">//</emphasis>
323 <emphasis role="preprocessor">#if&#32;0</emphasis>
324 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
325 <emphasis role="preprocessor">#define&#32;STB_TRUETYPE_IMPLEMENTATION&#32;&#32;</emphasis><emphasis role="comment">//&#32;force&#32;following&#32;include&#32;to&#32;generate&#32;implementation</emphasis>
326 <emphasis role="preprocessor">#include&#32;&quot;stb_truetype.h&quot;</emphasis>
327 
328 <emphasis role="keywordtype">char</emphasis>&#32;ttf_buffer[1&lt;&lt;25];
329 
330 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_error__printer_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv)
331 {
332 &#32;&#32;&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;font;
333 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bitmap;
334 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,h,i,j,c&#32;=&#32;(argc&#32;&gt;&#32;1&#32;?&#32;atoi(argv[1])&#32;:&#32;<emphasis role="stringliteral">&apos;a&apos;</emphasis>),&#32;s&#32;=&#32;(argc&#32;&gt;&#32;2&#32;?&#32;atoi(argv[2])&#32;:&#32;20);
335 
336 &#32;&#32;&#32;fread(ttf_buffer,&#32;1,&#32;1&lt;&lt;25,&#32;fopen(argc&#32;&gt;&#32;3&#32;?&#32;argv[3]&#32;:&#32;<emphasis role="stringliteral">&quot;c:/windows/fonts/arialbd.ttf&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>));
337 
338 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(&amp;font,&#32;ttf_buffer,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link>(ttf_buffer,0));
339 &#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa">stbtt_GetCodepointBitmap</link>(&amp;font,&#32;0,<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(&amp;font,&#32;s),&#32;c,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;&amp;h,&#32;0,0);
340 
341 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;h;&#32;++j)&#32;{
342 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;putchar(<emphasis role="stringliteral">&quot;&#32;.:ioVM@&quot;</emphasis>[bitmap[j*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>+i]&gt;&gt;5]);
344 &#32;&#32;&#32;&#32;&#32;&#32;putchar(<emphasis role="charliteral">&apos;\n&apos;</emphasis>);
345 &#32;&#32;&#32;}
346 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
347 }
348 <emphasis role="preprocessor">#endif</emphasis>
349 <emphasis role="comment">//</emphasis>
350 <emphasis role="comment">//&#32;Output:</emphasis>
351 <emphasis role="comment">//</emphasis>
352 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;.ii.</emphasis>
353 <emphasis role="comment">//&#32;&#32;&#32;&#32;@@@@@@.</emphasis>
354 <emphasis role="comment">//&#32;&#32;&#32;V@Mio@@o</emphasis>
355 <emphasis role="comment">//&#32;&#32;&#32;:i.&#32;&#32;V@V</emphasis>
356 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;:oM@@M</emphasis>
357 <emphasis role="comment">//&#32;&#32;&#32;:@@@MM@M</emphasis>
358 <emphasis role="comment">//&#32;&#32;&#32;@@o&#32;&#32;o@M</emphasis>
359 <emphasis role="comment">//&#32;&#32;:@@.&#32;&#32;M@M</emphasis>
360 <emphasis role="comment">//&#32;&#32;&#32;@@@o@@@@</emphasis>
361 <emphasis role="comment">//&#32;&#32;&#32;:M@@V:@@.</emphasis>
362 <emphasis role="comment">//</emphasis>
364 <emphasis role="comment">//</emphasis>
365 <emphasis role="comment">//&#32;Complete&#32;program:&#32;print&#32;&quot;Hello&#32;World!&quot;&#32;banner,&#32;with&#32;bugs</emphasis>
366 <emphasis role="comment">//</emphasis>
367 <emphasis role="preprocessor">#if&#32;0</emphasis>
368 <emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[24&lt;&lt;20];
369 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;screen[20][79];
370 
371 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_error__printer_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv)
372 {
373 &#32;&#32;&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;font;
374 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,ascent,baseline,ch=0;
375 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>,&#32;xpos=2;&#32;<emphasis role="comment">//&#32;leave&#32;a&#32;little&#32;padding&#32;in&#32;case&#32;the&#32;character&#32;extends&#32;left</emphasis>
376 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_namespacelest_1acb9f2be64a994ffcd890e99e8a8faf5d">text</link>&#32;=&#32;<emphasis role="stringliteral">&quot;Heljo&#32;World!&quot;</emphasis>;&#32;<emphasis role="comment">//&#32;intentionally&#32;misspelled&#32;to&#32;show&#32;&apos;lj&apos;&#32;brokenness</emphasis>
377 
378 &#32;&#32;&#32;fread(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;1,&#32;1000000,&#32;fopen(<emphasis role="stringliteral">&quot;c:/windows/fonts/arialbd.ttf&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>));
379 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(&amp;font,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;0);
380 
381 &#32;&#32;&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(&amp;font,&#32;15);
382 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0">stbtt_GetFontVMetrics</link>(&amp;font,&#32;&amp;ascent,0,0);
383 &#32;&#32;&#32;baseline&#32;=&#32;(int)&#32;(ascent*scale);
384 
385 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(text[ch])&#32;{
386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;advance,lsb,x0,y0,x1,y1;
387 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x_shift&#32;=&#32;xpos&#32;-&#32;(float)&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1af856cb49514ce62a1b07883867f6f255">floor</link>(xpos);
388 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7">stbtt_GetCodepointHMetrics</link>(&amp;font,&#32;text[ch],&#32;&amp;advance,&#32;&amp;lsb);
389 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a18fae014dd2261e554248ca737d05578">stbtt_GetCodepointBitmapBoxSubpixel</link>(&amp;font,&#32;text[ch],&#32;scale,scale,x_shift,0,&#32;&amp;x0,&amp;y0,&amp;x1,&amp;y1);
390 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71">stbtt_MakeCodepointBitmapSubpixel</link>(&amp;font,&#32;&amp;screen[baseline&#32;+&#32;y0][(<emphasis role="keywordtype">int</emphasis>)&#32;xpos&#32;+&#32;x0],&#32;x1-x0,y1-y0,&#32;79,&#32;scale,scale,x_shift,0,&#32;text[ch]);
391 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note&#32;that&#32;this&#32;stomps&#32;the&#32;old&#32;data,&#32;so&#32;where&#32;character&#32;boxes&#32;overlap&#32;(e.g.&#32;&apos;lj&apos;)&#32;it&apos;s&#32;wrong</emphasis>
392 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;because&#32;this&#32;API&#32;is&#32;really&#32;for&#32;baking&#32;character&#32;bitmaps&#32;into&#32;textures.&#32;if&#32;you&#32;want&#32;to&#32;render</emphasis>
393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;sequence&#32;of&#32;characters,&#32;you&#32;really&#32;need&#32;to&#32;render&#32;each&#32;bitmap&#32;to&#32;a&#32;temp&#32;buffer,&#32;then</emphasis>
394 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;alpha&#32;blend&quot;&#32;that&#32;into&#32;the&#32;working&#32;buffer</emphasis>
395 &#32;&#32;&#32;&#32;&#32;&#32;xpos&#32;+=&#32;(advance&#32;*&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>);
396 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(text[ch+1])
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xpos&#32;+=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a83703ede616bacefc0312ef2803774a1">stbtt_GetCodepointKernAdvance</link>(&amp;font,&#32;text[ch],text[ch+1]);
398 &#32;&#32;&#32;&#32;&#32;&#32;++ch;
399 &#32;&#32;&#32;}
400 
401 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;20;&#32;++j)&#32;{
402 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;78;&#32;++i)
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;putchar(<emphasis role="stringliteral">&quot;&#32;.:ioVM@&quot;</emphasis>[screen[j][i]&gt;&gt;5]);
404 &#32;&#32;&#32;&#32;&#32;&#32;putchar(<emphasis role="charliteral">&apos;\n&apos;</emphasis>);
405 &#32;&#32;&#32;}
406 
407 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
408 }
409 <emphasis role="preprocessor">#endif</emphasis>
410 
411 
420 
421 <emphasis role="preprocessor">#ifdef&#32;STB_TRUETYPE_IMPLEMENTATION</emphasis>
422 &#32;&#32;&#32;<emphasis role="comment">//&#32;#define&#32;your&#32;own&#32;(u)stbtt_int8/16/32&#32;before&#32;including&#32;to&#32;override&#32;this</emphasis>
423 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;stbtt_uint8</emphasis>
424 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;stbtt_uint8;
425 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;stbtt_int8;
426 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;stbtt_uint16;
427 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;stbtt_int16;
428 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;stbtt_uint32;
429 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;stbtt_int32;
430 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
431 
432 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;stbtt__check_size32[<emphasis role="keyword">sizeof</emphasis>(stbtt_int32)==4&#32;?&#32;1&#32;:&#32;-1];
433 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;stbtt__check_size16[<emphasis role="keyword">sizeof</emphasis>(stbtt_int16)==2&#32;?&#32;1&#32;:&#32;-1];
434 
435 &#32;&#32;&#32;<emphasis role="comment">//&#32;e.g.&#32;#define&#32;your&#32;own&#32;STBTT_ifloor/STBTT_iceil()&#32;to&#32;avoid&#32;math.h</emphasis>
436 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_ifloor</emphasis>
437 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;math.h&gt;</emphasis>
438 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_ifloor(x)&#32;&#32;&#32;((int)&#32;floor(x))</emphasis>
439 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_iceil(x)&#32;&#32;&#32;&#32;((int)&#32;ceil(x))</emphasis>
440 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
441 
442 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_sqrt</emphasis>
443 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;math.h&gt;</emphasis>
444 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_sqrt(x)&#32;&#32;&#32;&#32;&#32;&#32;sqrt(x)</emphasis>
445 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_pow(x,y)&#32;&#32;&#32;&#32;&#32;pow(x,y)</emphasis>
446 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
447 
448 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_fmod</emphasis>
449 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;math.h&gt;</emphasis>
450 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_fmod(x,y)&#32;&#32;&#32;&#32;fmod(x,y)</emphasis>
451 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
452 
453 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_cos</emphasis>
454 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;math.h&gt;</emphasis>
455 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_cos(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;cos(x)</emphasis>
456 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_acos(x)&#32;&#32;&#32;&#32;&#32;&#32;acos(x)</emphasis>
457 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
458 
459 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_fabs</emphasis>
460 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;math.h&gt;</emphasis>
461 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_fabs(x)&#32;&#32;&#32;&#32;&#32;&#32;fabs(x)</emphasis>
462 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
463 
464 &#32;&#32;&#32;<emphasis role="comment">//&#32;#define&#32;your&#32;own&#32;functions&#32;&quot;STBTT_malloc&quot;&#32;/&#32;&quot;STBTT_free&quot;&#32;to&#32;avoid&#32;malloc.h</emphasis>
465 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_malloc</emphasis>
466 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;stdlib.h&gt;</emphasis>
467 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_malloc(x,u)&#32;&#32;((void)(u),malloc(x))</emphasis>
468 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_free(x,u)&#32;&#32;&#32;&#32;((void)(u),free(x))</emphasis>
469 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
470 
471 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_assert</emphasis>
472 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;assert.h&gt;</emphasis>
473 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_assert(x)&#32;&#32;&#32;&#32;assert(x)</emphasis>
474 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
475 
476 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_strlen</emphasis>
477 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;string.h&gt;</emphasis>
478 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_strlen(x)&#32;&#32;&#32;&#32;strlen(x)</emphasis>
479 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
480 
481 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBTT_memcpy</emphasis>
482 <emphasis role="preprocessor">&#32;&#32;&#32;#include&#32;&lt;string.h&gt;</emphasis>
483 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_memcpy&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy</emphasis>
484 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBTT_memset&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset</emphasis>
485 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
486 <emphasis role="preprocessor">#endif</emphasis>
487 
494 
495 <emphasis role="preprocessor">#ifndef&#32;__STB_INCLUDE_STB_TRUETYPE_H__</emphasis>
496 <emphasis role="preprocessor">#define&#32;__STB_INCLUDE_STB_TRUETYPE_H__</emphasis>
497 
498 <emphasis role="preprocessor">#ifdef&#32;STBTT_STATIC</emphasis>
499 <emphasis role="preprocessor">#define&#32;STBTT_DEF&#32;static</emphasis>
500 <emphasis role="preprocessor">#else</emphasis>
501 <emphasis role="preprocessor">#define&#32;STBTT_DEF&#32;extern</emphasis>
502 <emphasis role="preprocessor">#endif</emphasis>
503 
504 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
505 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
506 <emphasis role="preprocessor">#endif</emphasis>
507 
508 <emphasis role="comment">//&#32;private&#32;structure</emphasis>
509 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
510 {
511 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
512 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cursor;
513 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
514 }&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>;
515 
517 <emphasis role="comment">//</emphasis>
518 <emphasis role="comment">//&#32;TEXTURE&#32;BAKING&#32;API</emphasis>
519 <emphasis role="comment">//</emphasis>
520 <emphasis role="comment">//&#32;If&#32;you&#32;use&#32;this&#32;API,&#32;you&#32;only&#32;have&#32;to&#32;call&#32;two&#32;functions&#32;ever.</emphasis>
521 <emphasis role="comment">//</emphasis>
522 
523 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
524 {
525 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;x0,y0,x1,y1;&#32;<emphasis role="comment">//&#32;coordinates&#32;of&#32;bbox&#32;in&#32;bitmap</emphasis>
526 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xoff,yoff,xadvance;
527 }&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>;
528 
529 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3">stbtt_BakeFontBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;&#32;<emphasis role="comment">//&#32;font&#32;location&#32;(use&#32;offset=0&#32;for&#32;plain&#32;.ttf)</emphasis>
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_height,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;height&#32;of&#32;font&#32;in&#32;pixels</emphasis>
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;&#32;<emphasis role="comment">//&#32;bitmap&#32;to&#32;be&#32;filled&#32;in</emphasis>
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_char,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_chars,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;characters&#32;to&#32;bake</emphasis>
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;*chardata);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;you&#32;allocate&#32;this,&#32;it&apos;s&#32;num_chars&#32;long</emphasis>
534 <emphasis role="comment">//&#32;if&#32;return&#32;is&#32;positive,&#32;the&#32;first&#32;unused&#32;row&#32;of&#32;the&#32;bitmap</emphasis>
535 <emphasis role="comment">//&#32;if&#32;return&#32;is&#32;negative,&#32;returns&#32;the&#32;negative&#32;of&#32;the&#32;number&#32;of&#32;characters&#32;that&#32;fit</emphasis>
536 <emphasis role="comment">//&#32;if&#32;return&#32;is&#32;0,&#32;no&#32;characters&#32;fit&#32;and&#32;no&#32;rows&#32;were&#32;used</emphasis>
537 <emphasis role="comment">//&#32;This&#32;uses&#32;a&#32;very&#32;crappy&#32;packing.</emphasis>
538 
539 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
540 {
541 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0,y0,s0,t0;&#32;<emphasis role="comment">//&#32;top-left</emphasis>
542 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1,y1,s1,t1;&#32;<emphasis role="comment">//&#32;bottom-right</emphasis>
543 }&#32;<link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link>;
544 
545 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f">stbtt_GetBakedQuad</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;*chardata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;&#32;<emphasis role="comment">//&#32;same&#32;data&#32;as&#32;above</emphasis>
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;char_index,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;character&#32;to&#32;display</emphasis>
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*xpos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ypos,&#32;&#32;&#32;<emphasis role="comment">//&#32;pointers&#32;to&#32;current&#32;position&#32;in&#32;screen&#32;pixel&#32;space</emphasis>
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link>&#32;*q,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;output:&#32;quad&#32;to&#32;draw</emphasis>
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;opengl_fillrule);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;true&#32;if&#32;opengl&#32;fill&#32;rule;&#32;false&#32;if&#32;DX9&#32;or&#32;earlier</emphasis>
550 <emphasis role="comment">//&#32;Call&#32;GetBakedQuad&#32;with&#32;char_index&#32;=&#32;&apos;character&#32;-&#32;first_char&apos;,&#32;and&#32;it</emphasis>
551 <emphasis role="comment">//&#32;creates&#32;the&#32;quad&#32;you&#32;need&#32;to&#32;draw&#32;and&#32;advances&#32;the&#32;current&#32;position.</emphasis>
552 <emphasis role="comment">//</emphasis>
553 <emphasis role="comment">//&#32;The&#32;coordinate&#32;system&#32;used&#32;assumes&#32;y&#32;increases&#32;downwards.</emphasis>
554 <emphasis role="comment">//</emphasis>
555 <emphasis role="comment">//&#32;Characters&#32;will&#32;extend&#32;both&#32;above&#32;and&#32;below&#32;the&#32;current&#32;position;</emphasis>
556 <emphasis role="comment">//&#32;see&#32;discussion&#32;of&#32;&quot;BASELINE&quot;&#32;above.</emphasis>
557 <emphasis role="comment">//</emphasis>
558 <emphasis role="comment">//&#32;It&apos;s&#32;inefficient;&#32;you&#32;might&#32;want&#32;to&#32;c&amp;p&#32;it&#32;and&#32;optimize&#32;it.</emphasis>
559 
560 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42">stbtt_GetScaledFontVMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ascent,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*descent,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*lineGap);
561 <emphasis role="comment">//&#32;Query&#32;the&#32;font&#32;vertical&#32;metrics&#32;without&#32;having&#32;to&#32;create&#32;a&#32;font&#32;first.</emphasis>
562 
563 
565 <emphasis role="comment">//</emphasis>
566 <emphasis role="comment">//&#32;NEW&#32;TEXTURE&#32;BAKING&#32;API</emphasis>
567 <emphasis role="comment">//</emphasis>
568 <emphasis role="comment">//&#32;This&#32;provides&#32;options&#32;for&#32;packing&#32;multiple&#32;fonts&#32;into&#32;one&#32;atlas,&#32;not</emphasis>
569 <emphasis role="comment">//&#32;perfectly&#32;but&#32;better&#32;than&#32;nothing.</emphasis>
570 
571 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
572 {
573 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;x0,y0,x1,y1;&#32;<emphasis role="comment">//&#32;coordinates&#32;of&#32;bbox&#32;in&#32;bitmap</emphasis>
574 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xoff,yoff,xadvance;
575 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xoff2,yoff2;
576 }&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>;
577 
578 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>;
579 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>;
580 <emphasis role="preprocessor">#ifndef&#32;STB_RECT_PACK_VERSION</emphasis>
581 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbrp__rect">stbrp_rect</link>&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>;
582 <emphasis role="preprocessor">#endif</emphasis>
583 
584 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c">stbtt_PackBegin</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_in_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*alloc_context);
585 <emphasis role="comment">//&#32;Initializes&#32;a&#32;packing&#32;context&#32;stored&#32;in&#32;the&#32;passed-in&#32;stbtt_pack_context.</emphasis>
586 <emphasis role="comment">//&#32;Future&#32;calls&#32;using&#32;this&#32;context&#32;will&#32;pack&#32;characters&#32;into&#32;the&#32;bitmap&#32;passed</emphasis>
587 <emphasis role="comment">//&#32;in&#32;here:&#32;a&#32;1-channel&#32;bitmap&#32;that&#32;is&#32;width&#32;*&#32;height.&#32;stride_in_bytes&#32;is</emphasis>
588 <emphasis role="comment">//&#32;the&#32;distance&#32;from&#32;one&#32;row&#32;to&#32;the&#32;next&#32;(or&#32;0&#32;to&#32;mean&#32;they&#32;are&#32;packed&#32;tightly</emphasis>
589 <emphasis role="comment">//&#32;together).&#32;&quot;padding&quot;&#32;is&#32;the&#32;amount&#32;of&#32;padding&#32;to&#32;leave&#32;between&#32;each</emphasis>
590 <emphasis role="comment">//&#32;character&#32;(normally&#32;you&#32;want&#32;&apos;1&apos;&#32;for&#32;bitmaps&#32;you&apos;ll&#32;use&#32;as&#32;textures&#32;with</emphasis>
591 <emphasis role="comment">//&#32;bilinear&#32;filtering).</emphasis>
592 <emphasis role="comment">//</emphasis>
593 <emphasis role="comment">//&#32;Returns&#32;0&#32;on&#32;failure,&#32;1&#32;on&#32;success.</emphasis>
594 
595 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140">stbtt_PackEnd</link>&#32;&#32;(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc);
596 <emphasis role="comment">//&#32;Cleans&#32;up&#32;the&#32;packing&#32;context&#32;and&#32;frees&#32;all&#32;memory.</emphasis>
597 
598 <emphasis role="preprocessor">#define&#32;STBTT_POINT_SIZE(x)&#32;&#32;&#32;(-(x))</emphasis>
599 
600 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f">stbtt_PackFontRange</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;font_index,&#32;<emphasis role="keywordtype">float</emphasis>&#32;font_size,
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_unicode_char_in_range,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_chars_in_range,&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*chardata_for_range);
602 <emphasis role="comment">//&#32;Creates&#32;character&#32;bitmaps&#32;from&#32;the&#32;font_index&apos;th&#32;font&#32;found&#32;in&#32;fontdata&#32;(use</emphasis>
603 <emphasis role="comment">//&#32;font_index=0&#32;if&#32;you&#32;don&apos;t&#32;know&#32;what&#32;that&#32;is).&#32;It&#32;creates&#32;num_chars_in_range</emphasis>
604 <emphasis role="comment">//&#32;bitmaps&#32;for&#32;characters&#32;with&#32;unicode&#32;values&#32;starting&#32;at&#32;first_unicode_char_in_range</emphasis>
605 <emphasis role="comment">//&#32;and&#32;increasing.&#32;Data&#32;for&#32;how&#32;to&#32;render&#32;them&#32;is&#32;stored&#32;in&#32;chardata_for_range;</emphasis>
606 <emphasis role="comment">//&#32;pass&#32;these&#32;to&#32;stbtt_GetPackedQuad&#32;to&#32;get&#32;back&#32;renderable&#32;quads.</emphasis>
607 <emphasis role="comment">//</emphasis>
608 <emphasis role="comment">//&#32;font_size&#32;is&#32;the&#32;full&#32;height&#32;of&#32;the&#32;character&#32;from&#32;ascender&#32;to&#32;descender,</emphasis>
609 <emphasis role="comment">//&#32;as&#32;computed&#32;by&#32;stbtt_ScaleForPixelHeight.&#32;To&#32;use&#32;a&#32;point&#32;size&#32;as&#32;computed</emphasis>
610 <emphasis role="comment">//&#32;by&#32;stbtt_ScaleForMappingEmToPixels,&#32;wrap&#32;the&#32;point&#32;size&#32;in&#32;STBTT_POINT_SIZE()</emphasis>
611 <emphasis role="comment">//&#32;and&#32;pass&#32;that&#32;result&#32;as&#32;&apos;font_size&apos;:</emphasis>
612 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;...,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;20&#32;,&#32;...&#32;//&#32;font&#32;max&#32;minus&#32;min&#32;y&#32;is&#32;20&#32;pixels&#32;tall</emphasis>
613 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;...,&#32;STBTT_POINT_SIZE(20),&#32;...&#32;//&#32;&apos;M&apos;&#32;is&#32;20&#32;pixels&#32;tall</emphasis>
614 
615 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
616 {
617 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;font_size;
618 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_unicode_codepoint_in_range;&#32;&#32;<emphasis role="comment">//&#32;if&#32;non-zero,&#32;then&#32;the&#32;chars&#32;are&#32;continuous,&#32;and&#32;this&#32;is&#32;the&#32;first&#32;codepoint</emphasis>
619 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*array_of_unicode_codepoints;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;non-zero,&#32;then&#32;this&#32;is&#32;an&#32;array&#32;of&#32;unicode&#32;codepoints</emphasis>
620 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_chars;
621 &#32;&#32;&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*chardata_for_range;&#32;<emphasis role="comment">//&#32;output</emphasis>
622 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;h_oversample,&#32;v_oversample;&#32;<emphasis role="comment">//&#32;don&apos;t&#32;set&#32;these,&#32;they&apos;re&#32;used&#32;internally</emphasis>
623 }&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>;
624 
625 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157">stbtt_PackFontRanges</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;font_index,&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;*ranges,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_ranges);
626 <emphasis role="comment">//&#32;Creates&#32;character&#32;bitmaps&#32;from&#32;multiple&#32;ranges&#32;of&#32;characters&#32;stored&#32;in</emphasis>
627 <emphasis role="comment">//&#32;ranges.&#32;This&#32;will&#32;usually&#32;create&#32;a&#32;better-packed&#32;bitmap&#32;than&#32;multiple</emphasis>
628 <emphasis role="comment">//&#32;calls&#32;to&#32;stbtt_PackFontRange.&#32;Note&#32;that&#32;you&#32;can&#32;call&#32;this&#32;multiple</emphasis>
629 <emphasis role="comment">//&#32;times&#32;within&#32;a&#32;single&#32;PackBegin/PackEnd.</emphasis>
630 
631 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e">stbtt_PackSetOversampling</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;h_oversample,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;v_oversample);
632 <emphasis role="comment">//&#32;Oversampling&#32;a&#32;font&#32;increases&#32;the&#32;quality&#32;by&#32;allowing&#32;higher-quality&#32;subpixel</emphasis>
633 <emphasis role="comment">//&#32;positioning,&#32;and&#32;is&#32;especially&#32;valuable&#32;at&#32;smaller&#32;text&#32;sizes.</emphasis>
634 <emphasis role="comment">//</emphasis>
635 <emphasis role="comment">//&#32;This&#32;function&#32;sets&#32;the&#32;amount&#32;of&#32;oversampling&#32;for&#32;all&#32;following&#32;calls&#32;to</emphasis>
636 <emphasis role="comment">//&#32;stbtt_PackFontRange(s)&#32;or&#32;stbtt_PackFontRangesGatherRects&#32;for&#32;a&#32;given</emphasis>
637 <emphasis role="comment">//&#32;pack&#32;context.&#32;The&#32;default&#32;(no&#32;oversampling)&#32;is&#32;achieved&#32;by&#32;h_oversample=1</emphasis>
638 <emphasis role="comment">//&#32;and&#32;v_oversample=1.&#32;The&#32;total&#32;number&#32;of&#32;pixels&#32;required&#32;is</emphasis>
639 <emphasis role="comment">//&#32;h_oversample*v_oversample&#32;larger&#32;than&#32;the&#32;default;&#32;for&#32;example,&#32;2x2</emphasis>
640 <emphasis role="comment">//&#32;oversampling&#32;requires&#32;4x&#32;the&#32;storage&#32;of&#32;1x1.&#32;For&#32;best&#32;results,&#32;render</emphasis>
641 <emphasis role="comment">//&#32;oversampled&#32;textures&#32;with&#32;bilinear&#32;filtering.&#32;Look&#32;at&#32;the&#32;readme&#32;in</emphasis>
642 <emphasis role="comment">//&#32;stb/tests/oversample&#32;for&#32;information&#32;about&#32;oversampled&#32;fonts</emphasis>
643 <emphasis role="comment">//</emphasis>
644 <emphasis role="comment">//&#32;To&#32;use&#32;with&#32;PackFontRangesGather&#32;etc.,&#32;you&#32;must&#32;set&#32;it&#32;before&#32;calls</emphasis>
645 <emphasis role="comment">//&#32;call&#32;to&#32;PackFontRangesGatherRects.</emphasis>
646 
647 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e">stbtt_PackSetSkipMissingCodepoints</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;skip);
648 <emphasis role="comment">//&#32;If&#32;skip&#32;!=&#32;0,&#32;this&#32;tells&#32;stb_truetype&#32;to&#32;skip&#32;any&#32;codepoints&#32;for&#32;which</emphasis>
649 <emphasis role="comment">//&#32;there&#32;is&#32;no&#32;corresponding&#32;glyph.&#32;If&#32;skip=0,&#32;which&#32;is&#32;the&#32;default,&#32;then</emphasis>
650 <emphasis role="comment">//&#32;codepoints&#32;without&#32;a&#32;glyph&#32;recived&#32;the&#32;font&apos;s&#32;&quot;missing&#32;character&quot;&#32;glyph,</emphasis>
651 <emphasis role="comment">//&#32;typically&#32;an&#32;empty&#32;box&#32;by&#32;convention.</emphasis>
652 
653 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e">stbtt_GetPackedQuad</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*chardata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;&#32;<emphasis role="comment">//&#32;same&#32;data&#32;as&#32;above</emphasis>
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;char_index,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;character&#32;to&#32;display</emphasis>
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*xpos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ypos,&#32;&#32;&#32;<emphasis role="comment">//&#32;pointers&#32;to&#32;current&#32;position&#32;in&#32;screen&#32;pixel&#32;space</emphasis>
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link>&#32;*q,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;output:&#32;quad&#32;to&#32;draw</emphasis>
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;align_to_integer);
658 
659 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50">stbtt_PackFontRangesGatherRects</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;*ranges,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_ranges,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>);
660 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259">stbtt_PackFontRangesPackRects</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_rects);
661 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631">stbtt_PackFontRangesRenderIntoRects</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;*ranges,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_ranges,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>);
662 <emphasis role="comment">//&#32;Calling&#32;these&#32;functions&#32;in&#32;sequence&#32;is&#32;roughly&#32;equivalent&#32;to&#32;calling</emphasis>
663 <emphasis role="comment">//&#32;stbtt_PackFontRanges().&#32;If&#32;you&#32;more&#32;control&#32;over&#32;the&#32;packing&#32;of&#32;multiple</emphasis>
664 <emphasis role="comment">//&#32;fonts,&#32;or&#32;if&#32;you&#32;want&#32;to&#32;pack&#32;custom&#32;data&#32;into&#32;a&#32;font&#32;texture,&#32;take&#32;a&#32;look</emphasis>
665 <emphasis role="comment">//&#32;at&#32;the&#32;source&#32;to&#32;of&#32;stbtt_PackFontRanges()&#32;and&#32;create&#32;a&#32;custom&#32;version</emphasis>
666 <emphasis role="comment">//&#32;using&#32;these&#32;functions,&#32;e.g.&#32;call&#32;GatherRects&#32;multiple&#32;times,</emphasis>
667 <emphasis role="comment">//&#32;building&#32;up&#32;a&#32;single&#32;array&#32;of&#32;rects,&#32;then&#32;call&#32;PackRects&#32;once,</emphasis>
668 <emphasis role="comment">//&#32;then&#32;call&#32;RenderIntoRects&#32;repeatedly.&#32;This&#32;may&#32;result&#32;in&#32;a</emphasis>
669 <emphasis role="comment">//&#32;better&#32;packing&#32;than&#32;calling&#32;PackFontRanges&#32;multiple&#32;times</emphasis>
670 <emphasis role="comment">//&#32;(or&#32;it&#32;may&#32;not).</emphasis>
671 
672 <emphasis role="comment">//&#32;this&#32;is&#32;an&#32;opaque&#32;structure&#32;that&#32;you&#32;shouldn&apos;t&#32;mess&#32;with&#32;which&#32;holds</emphasis>
673 <emphasis role="comment">//&#32;all&#32;the&#32;context&#32;needed&#32;from&#32;PackBegin&#32;to&#32;PackEnd.</emphasis>
674 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;{
675 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>;
676 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_structstbtt__pack__context_1a4a6d1ef127c0519944d8df1ed2040189">pack_info</link>;
677 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="_structstbtt__pack__context_1a5da0b7b5d3b82d5fc75ea1c8945183fa">width</link>;
678 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="_structstbtt__pack__context_1a817ec010d7f09ba9776517c5a87f13a7">height</link>;
679 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>;
680 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="_structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803">padding</link>;
681 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="_structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3">skip_missing</link>;
682 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>,&#32;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>;
683 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_structstbtt__pack__context_1ab38df62d7d0360ac6d933bf91e2d97a8">pixels</link>;
684 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="_structstbtt__pack__context_1a3578ba8099a507eae79f5ffaf4e3b095">nodes</link>;
685 };
686 
688 <emphasis role="comment">//</emphasis>
689 <emphasis role="comment">//&#32;FONT&#32;LOADING</emphasis>
690 <emphasis role="comment">//</emphasis>
691 <emphasis role="comment">//</emphasis>
692 
693 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672">stbtt_GetNumberOfFonts</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
694 <emphasis role="comment">//&#32;This&#32;function&#32;will&#32;determine&#32;the&#32;number&#32;of&#32;fonts&#32;in&#32;a&#32;font&#32;file.&#32;&#32;TrueType</emphasis>
695 <emphasis role="comment">//&#32;collection&#32;(.ttc)&#32;files&#32;may&#32;contain&#32;multiple&#32;fonts,&#32;while&#32;TrueType&#32;font</emphasis>
696 <emphasis role="comment">//&#32;(.ttf)&#32;files&#32;only&#32;contain&#32;one&#32;font.&#32;The&#32;number&#32;of&#32;fonts&#32;can&#32;be&#32;used&#32;for</emphasis>
697 <emphasis role="comment">//&#32;indexing&#32;with&#32;the&#32;previous&#32;function&#32;where&#32;the&#32;index&#32;is&#32;between&#32;zero&#32;and&#32;one</emphasis>
698 <emphasis role="comment">//&#32;less&#32;than&#32;the&#32;total&#32;fonts.&#32;If&#32;an&#32;error&#32;occurs,&#32;-1&#32;is&#32;returned.</emphasis>
699 
700 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>);
701 <emphasis role="comment">//&#32;Each&#32;.ttf/.ttc&#32;file&#32;may&#32;have&#32;more&#32;than&#32;one&#32;font.&#32;Each&#32;font&#32;has&#32;a&#32;sequential</emphasis>
702 <emphasis role="comment">//&#32;index&#32;number&#32;starting&#32;from&#32;0.&#32;Call&#32;this&#32;function&#32;to&#32;get&#32;the&#32;font&#32;offset&#32;for</emphasis>
703 <emphasis role="comment">//&#32;a&#32;given&#32;index;&#32;it&#32;returns&#32;-1&#32;if&#32;the&#32;index&#32;is&#32;out&#32;of&#32;range.&#32;A&#32;regular&#32;.ttf</emphasis>
704 <emphasis role="comment">//&#32;file&#32;will&#32;only&#32;define&#32;one&#32;font&#32;and&#32;it&#32;always&#32;be&#32;at&#32;offset&#32;0,&#32;so&#32;it&#32;will</emphasis>
705 <emphasis role="comment">//&#32;return&#32;&apos;0&apos;&#32;for&#32;index&#32;0,&#32;and&#32;-1&#32;for&#32;all&#32;other&#32;indices.</emphasis>
706 
707 <emphasis role="comment">//&#32;The&#32;following&#32;structure&#32;is&#32;defined&#32;publicly&#32;so&#32;you&#32;can&#32;declare&#32;one&#32;on</emphasis>
708 <emphasis role="comment">//&#32;the&#32;stack&#32;or&#32;as&#32;a&#32;global&#32;or&#32;etc,&#32;but&#32;you&#32;should&#32;treat&#32;it&#32;as&#32;opaque.</emphasis>
709 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>
710 {
711 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>;
712 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;*&#32;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pointer&#32;to&#32;.ttf&#32;file</emphasis>
713 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d">fontstart</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;offset&#32;of&#32;start&#32;of&#32;font</emphasis>
714 
715 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d">numGlyphs</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;glyphs,&#32;needed&#32;for&#32;range&#32;checking</emphasis>
716 
717 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>,<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>,<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>,<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>,<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>,<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>,<link linkend="_structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022">gpos</link>,<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>;&#32;<emphasis role="comment">//&#32;table&#32;locations&#32;as&#32;offset&#32;from&#32;start&#32;of&#32;.ttf</emphasis>
718 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189">index_map</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;cmap&#32;mapping&#32;for&#32;our&#32;chosen&#32;character&#32;encoding</emphasis>
719 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4">indexToLocFormat</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;format&#32;needed&#32;to&#32;map&#32;from&#32;glyph&#32;index&#32;to&#32;glyph</emphasis>
720 
721 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cff&#32;font&#32;data</emphasis>
722 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="_structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082">charstrings</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;charstring&#32;index</emphasis>
723 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="_structstbtt__fontinfo_1afc5bfc4a52ad0e3879f0f81a372da7fb">gsubrs</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;global&#32;charstring&#32;subroutines&#32;index</emphasis>
724 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="_structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2">subrs</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;private&#32;charstring&#32;subroutines&#32;index</emphasis>
725 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="_structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677">fontdicts</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;array&#32;of&#32;font&#32;dicts</emphasis>
726 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="_structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71">fdselect</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;map&#32;from&#32;glyph&#32;to&#32;fontdict</emphasis>
727 };
728 
729 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>);
730 <emphasis role="comment">//&#32;Given&#32;an&#32;offset&#32;into&#32;the&#32;file&#32;that&#32;defines&#32;a&#32;font,&#32;this&#32;function&#32;builds</emphasis>
731 <emphasis role="comment">//&#32;the&#32;necessary&#32;cached&#32;info&#32;for&#32;the&#32;rest&#32;of&#32;the&#32;system.&#32;You&#32;must&#32;allocate</emphasis>
732 <emphasis role="comment">//&#32;the&#32;stbtt_fontinfo&#32;yourself,&#32;and&#32;stbtt_InitFont&#32;will&#32;fill&#32;it&#32;out.&#32;You&#32;don&apos;t</emphasis>
733 <emphasis role="comment">//&#32;need&#32;to&#32;do&#32;anything&#32;special&#32;to&#32;free&#32;it,&#32;because&#32;the&#32;contents&#32;are&#32;pure</emphasis>
734 <emphasis role="comment">//&#32;value&#32;data&#32;with&#32;no&#32;additional&#32;data&#32;structures.&#32;Returns&#32;0&#32;on&#32;failure.</emphasis>
735 
736 
738 <emphasis role="comment">//</emphasis>
739 <emphasis role="comment">//&#32;CHARACTER&#32;TO&#32;GLYPH-INDEX&#32;CONVERSIOn</emphasis>
740 
741 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;unicode_codepoint);
742 <emphasis role="comment">//&#32;If&#32;you&apos;re&#32;going&#32;to&#32;perform&#32;multiple&#32;operations&#32;on&#32;the&#32;same&#32;character</emphasis>
743 <emphasis role="comment">//&#32;and&#32;you&#32;want&#32;a&#32;speed-up,&#32;call&#32;this&#32;function&#32;with&#32;the&#32;character&#32;you&apos;re</emphasis>
744 <emphasis role="comment">//&#32;going&#32;to&#32;process,&#32;then&#32;use&#32;glyph-based&#32;functions&#32;instead&#32;of&#32;the</emphasis>
745 <emphasis role="comment">//&#32;codepoint-based&#32;functions.</emphasis>
746 <emphasis role="comment">//&#32;Returns&#32;0&#32;if&#32;the&#32;character&#32;codepoint&#32;is&#32;not&#32;defined&#32;in&#32;the&#32;font.</emphasis>
747 
748 
750 <emphasis role="comment">//</emphasis>
751 <emphasis role="comment">//&#32;CHARACTER&#32;PROPERTIES</emphasis>
752 <emphasis role="comment">//</emphasis>
753 
754 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>);
755 <emphasis role="comment">//&#32;computes&#32;a&#32;scale&#32;factor&#32;to&#32;produce&#32;a&#32;font&#32;whose&#32;&quot;height&quot;&#32;is&#32;&apos;pixels&apos;&#32;tall.</emphasis>
756 <emphasis role="comment">//&#32;Height&#32;is&#32;measured&#32;as&#32;the&#32;distance&#32;from&#32;the&#32;highest&#32;ascender&#32;to&#32;the&#32;lowest</emphasis>
757 <emphasis role="comment">//&#32;descender;&#32;in&#32;other&#32;words,&#32;it&apos;s&#32;equivalent&#32;to&#32;calling&#32;stbtt_GetFontVMetrics</emphasis>
758 <emphasis role="comment">//&#32;and&#32;computing:</emphasis>
759 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;=&#32;pixels&#32;/&#32;(ascent&#32;-&#32;descent)</emphasis>
760 <emphasis role="comment">//&#32;so&#32;if&#32;you&#32;prefer&#32;to&#32;measure&#32;height&#32;by&#32;the&#32;ascent&#32;only,&#32;use&#32;a&#32;similar&#32;calculation.</emphasis>
761 
762 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607">stbtt_ScaleForMappingEmToPixels</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>);
763 <emphasis role="comment">//&#32;computes&#32;a&#32;scale&#32;factor&#32;to&#32;produce&#32;a&#32;font&#32;whose&#32;EM&#32;size&#32;is&#32;mapped&#32;to</emphasis>
764 <emphasis role="comment">//&#32;&apos;pixels&apos;&#32;tall.&#32;This&#32;is&#32;probably&#32;what&#32;traditional&#32;APIs&#32;compute,&#32;but</emphasis>
765 <emphasis role="comment">//&#32;I&apos;m&#32;not&#32;positive.</emphasis>
766 
767 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0">stbtt_GetFontVMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ascent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*descent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*lineGap);
768 <emphasis role="comment">//&#32;ascent&#32;is&#32;the&#32;coordinate&#32;above&#32;the&#32;baseline&#32;the&#32;font&#32;extends;&#32;descent</emphasis>
769 <emphasis role="comment">//&#32;is&#32;the&#32;coordinate&#32;below&#32;the&#32;baseline&#32;the&#32;font&#32;extends&#32;(i.e.&#32;it&#32;is&#32;typically&#32;negative)</emphasis>
770 <emphasis role="comment">//&#32;lineGap&#32;is&#32;the&#32;spacing&#32;between&#32;one&#32;row&apos;s&#32;descent&#32;and&#32;the&#32;next&#32;row&apos;s&#32;ascent...</emphasis>
771 <emphasis role="comment">//&#32;so&#32;you&#32;should&#32;advance&#32;the&#32;vertical&#32;position&#32;by&#32;&quot;*ascent&#32;-&#32;*descent&#32;+&#32;*lineGap&quot;</emphasis>
772 <emphasis role="comment">//&#32;&#32;&#32;these&#32;are&#32;expressed&#32;in&#32;unscaled&#32;coordinates,&#32;so&#32;you&#32;must&#32;multiply&#32;by</emphasis>
773 <emphasis role="comment">//&#32;&#32;&#32;the&#32;scale&#32;factor&#32;for&#32;a&#32;given&#32;size</emphasis>
774 
775 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a12154e222685026a3cf315a1b5720f24">stbtt_GetFontVMetricsOS2</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*typoAscent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*typoDescent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*typoLineGap);
776 <emphasis role="comment">//&#32;analogous&#32;to&#32;GetFontVMetrics,&#32;but&#32;returns&#32;the&#32;&quot;typographic&quot;&#32;values&#32;from&#32;the&#32;OS/2</emphasis>
777 <emphasis role="comment">//&#32;table&#32;(specific&#32;to&#32;MS/Windows&#32;TTF&#32;files).</emphasis>
778 <emphasis role="comment">//</emphasis>
779 <emphasis role="comment">//&#32;Returns&#32;1&#32;on&#32;success&#32;(table&#32;present),&#32;0&#32;on&#32;failure.</emphasis>
780 
781 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639">stbtt_GetFontBoundingBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1);
782 <emphasis role="comment">//&#32;the&#32;bounding&#32;box&#32;around&#32;all&#32;possible&#32;characters</emphasis>
783 
784 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7">stbtt_GetCodepointHMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*advanceWidth,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*leftSideBearing);
785 <emphasis role="comment">//&#32;leftSideBearing&#32;is&#32;the&#32;offset&#32;from&#32;the&#32;current&#32;horizontal&#32;position&#32;to&#32;the&#32;left&#32;edge&#32;of&#32;the&#32;character</emphasis>
786 <emphasis role="comment">//&#32;advanceWidth&#32;is&#32;the&#32;offset&#32;from&#32;the&#32;current&#32;horizontal&#32;position&#32;to&#32;the&#32;next&#32;horizontal&#32;position</emphasis>
787 <emphasis role="comment">//&#32;&#32;&#32;these&#32;are&#32;expressed&#32;in&#32;unscaled&#32;coordinates</emphasis>
788 
789 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a83703ede616bacefc0312ef2803774a1">stbtt_GetCodepointKernAdvance</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch2);
790 <emphasis role="comment">//&#32;an&#32;additional&#32;amount&#32;to&#32;add&#32;to&#32;the&#32;&apos;advance&apos;&#32;value&#32;between&#32;ch1&#32;and&#32;ch2</emphasis>
791 
792 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d">stbtt_GetCodepointBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1);
793 <emphasis role="comment">//&#32;Gets&#32;the&#32;bounding&#32;box&#32;of&#32;the&#32;visible&#32;part&#32;of&#32;the&#32;glyph,&#32;in&#32;unscaled&#32;coordinates</emphasis>
794 
795 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a">stbtt_GetGlyphHMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*advanceWidth,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*leftSideBearing);
796 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1acf0b09547b1c2002ad0266802224552d">stbtt_GetGlyphKernAdvance</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph2);
797 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1accf148d2d285fd55178d9a401734ba92">stbtt_GetGlyphBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1);
798 <emphasis role="comment">//&#32;as&#32;above,&#32;but&#32;takes&#32;one&#32;or&#32;more&#32;glyph&#32;indices&#32;for&#32;greater&#32;efficiency</emphasis>
799 
800 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link>
801 {
802 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__kerningentry_1a395848ac004ad9193c532ebc08b07f91">glyph1</link>;&#32;<emphasis role="comment">//&#32;use&#32;stbtt_FindGlyphIndex</emphasis>
803 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__kerningentry_1a9d5a83a93bb6a40bed5c166c5f295c61">glyph2</link>;
804 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbtt__kerningentry_1a1924543c84b2abbdbac1a951f441d8aa">advance</link>;
805 }&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a988d6ec9ddb583b248cc96f17449dd6b">stbtt_kerningentry</link>;
806 
807 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e">stbtt_GetKerningTableLength</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info);
808 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3">stbtt_GetKerningTable</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link>*&#32;<link linkend="_classtable">table</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;table_length);
809 <emphasis role="comment">//&#32;Retrieves&#32;a&#32;complete&#32;list&#32;of&#32;all&#32;of&#32;the&#32;kerning&#32;pairs&#32;provided&#32;by&#32;the&#32;font</emphasis>
810 <emphasis role="comment">//&#32;stbtt_GetKerningTable&#32;never&#32;writes&#32;more&#32;than&#32;table_length&#32;entries&#32;and&#32;returns&#32;how&#32;many&#32;entries&#32;it&#32;did&#32;write.</emphasis>
811 <emphasis role="comment">//&#32;The&#32;table&#32;will&#32;be&#32;sorted&#32;by&#32;(a.glyph1&#32;==&#32;b.glyph1)?(a.glyph2&#32;&lt;&#32;b.glyph2):(a.glyph1&#32;&lt;&#32;b.glyph1)</emphasis>
812 
814 <emphasis role="comment">//</emphasis>
815 <emphasis role="comment">//&#32;GLYPH&#32;SHAPES&#32;(you&#32;probably&#32;don&apos;t&#32;need&#32;these,&#32;but&#32;they&#32;have&#32;to&#32;go&#32;before</emphasis>
816 <emphasis role="comment">//&#32;the&#32;bitmaps&#32;for&#32;C&#32;declaration-order&#32;reasons)</emphasis>
817 <emphasis role="comment">//</emphasis>
818 
819 <emphasis role="preprocessor">#ifndef&#32;STBTT_vmove&#32;</emphasis><emphasis role="comment">//&#32;you&#32;can&#32;predefine&#32;these&#32;to&#32;use&#32;different&#32;values&#32;(but&#32;why?)</emphasis>
820 &#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;{
821 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link>=1,
822 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>,
823 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,
824 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab6cd2670234c731eafba404d3a2470fd">STBTT_vcubic</link>
825 &#32;&#32;&#32;};
826 <emphasis role="preprocessor">#endif</emphasis>
827 
828 <emphasis role="preprocessor">#ifndef&#32;stbtt_vertex&#32;</emphasis><emphasis role="comment">//&#32;you&#32;can&#32;predefine&#32;this&#32;to&#32;use&#32;different&#32;values</emphasis>
829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(we&#32;share&#32;this&#32;with&#32;other&#32;code&#32;at&#32;RAD)</emphasis>
830 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbtt_vertex_type&#32;short&#32;</emphasis><emphasis role="comment">//&#32;can&apos;t&#32;use&#32;stbtt_int16&#32;because&#32;that&apos;s&#32;not&#32;visible&#32;in&#32;the&#32;header&#32;file</emphasis>
831 &#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
832 &#32;&#32;&#32;{
833 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,cx,cy,cx1,cy1;
834 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>,padding;
835 &#32;&#32;&#32;}&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>;
836 <emphasis role="preprocessor">#endif</emphasis>
837 
838 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485">stbtt_IsGlyphEmpty</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index);
839 <emphasis role="comment">//&#32;returns&#32;non-zero&#32;if&#32;nothing&#32;is&#32;drawn&#32;for&#32;this&#32;glyph</emphasis>
840 
841 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795">stbtt_GetCodepointShape</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;unicode_codepoint,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;**vertices);
842 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;**vertices);
843 <emphasis role="comment">//&#32;returns&#32;#&#32;of&#32;vertices&#32;and&#32;fills&#32;*vertices&#32;with&#32;the&#32;pointer&#32;to&#32;them</emphasis>
844 <emphasis role="comment">//&#32;&#32;&#32;these&#32;are&#32;expressed&#32;in&#32;&quot;unscaled&quot;&#32;coordinates</emphasis>
845 <emphasis role="comment">//</emphasis>
846 <emphasis role="comment">//&#32;The&#32;shape&#32;is&#32;a&#32;series&#32;of&#32;contours.&#32;Each&#32;one&#32;starts&#32;with</emphasis>
847 <emphasis role="comment">//&#32;a&#32;STBTT_moveto,&#32;then&#32;consists&#32;of&#32;a&#32;series&#32;of&#32;mixed</emphasis>
848 <emphasis role="comment">//&#32;STBTT_lineto&#32;and&#32;STBTT_curveto&#32;segments.&#32;A&#32;lineto</emphasis>
849 <emphasis role="comment">//&#32;draws&#32;a&#32;line&#32;from&#32;previous&#32;endpoint&#32;to&#32;its&#32;x,y;&#32;a&#32;curveto</emphasis>
850 <emphasis role="comment">//&#32;draws&#32;a&#32;quadratic&#32;bezier&#32;from&#32;previous&#32;endpoint&#32;to</emphasis>
851 <emphasis role="comment">//&#32;its&#32;x,y,&#32;using&#32;cx,cy&#32;as&#32;the&#32;bezier&#32;control&#32;point.</emphasis>
852 
853 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93">stbtt_FreeShape</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices);
854 <emphasis role="comment">//&#32;frees&#32;the&#32;data&#32;allocated&#32;above</emphasis>
855 
856 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a">stbtt_GetCodepointSVG</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;unicode_codepoint,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**svg);
857 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17">stbtt_GetGlyphSVG</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**svg);
858 <emphasis role="comment">//&#32;fills&#32;svg&#32;with&#32;the&#32;character&apos;s&#32;SVG&#32;data.</emphasis>
859 <emphasis role="comment">//&#32;returns&#32;data&#32;size&#32;or&#32;0&#32;if&#32;SVG&#32;not&#32;found.</emphasis>
860 
862 <emphasis role="comment">//</emphasis>
863 <emphasis role="comment">//&#32;BITMAP&#32;RENDERING</emphasis>
864 <emphasis role="comment">//</emphasis>
865 
866 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8254e6763560645597c44e00024b58fa">stbtt_FreeBitmap</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bitmap,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata);
867 <emphasis role="comment">//&#32;frees&#32;the&#32;bitmap&#32;allocated&#32;below</emphasis>
868 
869 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa">stbtt_GetCodepointBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff);
870 <emphasis role="comment">//&#32;allocates&#32;a&#32;large-enough&#32;single-channel&#32;8bpp&#32;bitmap&#32;and&#32;renders&#32;the</emphasis>
871 <emphasis role="comment">//&#32;specified&#32;character/glyph&#32;at&#32;the&#32;specified&#32;scale&#32;into&#32;it,&#32;with</emphasis>
872 <emphasis role="comment">//&#32;antialiasing.&#32;0&#32;is&#32;no&#32;coverage&#32;(transparent),&#32;255&#32;is&#32;fully&#32;covered&#32;(opaque).</emphasis>
873 <emphasis role="comment">//&#32;*width&#32;&amp;&#32;*height&#32;are&#32;filled&#32;out&#32;with&#32;the&#32;width&#32;&amp;&#32;height&#32;of&#32;the&#32;bitmap,</emphasis>
874 <emphasis role="comment">//&#32;which&#32;is&#32;stored&#32;left-to-right,&#32;top-to-bottom.</emphasis>
875 <emphasis role="comment">//</emphasis>
876 <emphasis role="comment">//&#32;xoff/yoff&#32;are&#32;the&#32;offset&#32;it&#32;pixel&#32;space&#32;from&#32;the&#32;glyph&#32;origin&#32;to&#32;the&#32;top-left&#32;of&#32;the&#32;bitmap</emphasis>
877 
878 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be">stbtt_GetCodepointBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff);
879 <emphasis role="comment">//&#32;the&#32;same&#32;as&#32;stbtt_GetCodepoitnBitmap,&#32;but&#32;you&#32;can&#32;specify&#32;a&#32;subpixel</emphasis>
880 <emphasis role="comment">//&#32;shift&#32;for&#32;the&#32;character</emphasis>
881 
882 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb">stbtt_MakeCodepointBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint);
883 <emphasis role="comment">//&#32;the&#32;same&#32;as&#32;stbtt_GetCodepointBitmap,&#32;but&#32;you&#32;pass&#32;in&#32;storage&#32;for&#32;the&#32;bitmap</emphasis>
884 <emphasis role="comment">//&#32;in&#32;the&#32;form&#32;of&#32;&apos;output&apos;,&#32;with&#32;row&#32;spacing&#32;of&#32;&apos;out_stride&apos;&#32;bytes.&#32;the&#32;bitmap</emphasis>
885 <emphasis role="comment">//&#32;is&#32;clipped&#32;to&#32;out_w/out_h&#32;bytes.&#32;Call&#32;stbtt_GetCodepointBitmapBox&#32;to&#32;get&#32;the</emphasis>
886 <emphasis role="comment">//&#32;width&#32;and&#32;height&#32;and&#32;positioning&#32;info&#32;for&#32;it&#32;first.</emphasis>
887 
888 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71">stbtt_MakeCodepointBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint);
889 <emphasis role="comment">//&#32;same&#32;as&#32;stbtt_MakeCodepointBitmap,&#32;but&#32;you&#32;can&#32;specify&#32;a&#32;subpixel</emphasis>
890 <emphasis role="comment">//&#32;shift&#32;for&#32;the&#32;character</emphasis>
891 
892 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be">stbtt_MakeCodepointBitmapSubpixelPrefilter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;oversample_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;oversample_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint);
893 <emphasis role="comment">//&#32;same&#32;as&#32;stbtt_MakeCodepointBitmapSubpixel,&#32;but&#32;prefiltering</emphasis>
894 <emphasis role="comment">//&#32;is&#32;performed&#32;(see&#32;stbtt_PackSetOversampling)</emphasis>
895 
896 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f">stbtt_GetCodepointBitmapBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1);
897 <emphasis role="comment">//&#32;get&#32;the&#32;bbox&#32;of&#32;the&#32;bitmap&#32;centered&#32;around&#32;the&#32;glyph&#32;origin;&#32;so&#32;the</emphasis>
898 <emphasis role="comment">//&#32;bitmap&#32;width&#32;is&#32;ix1-ix0,&#32;height&#32;is&#32;iy1-iy0,&#32;and&#32;location&#32;to&#32;place</emphasis>
899 <emphasis role="comment">//&#32;the&#32;bitmap&#32;top&#32;left&#32;is&#32;(leftSideBearing*scale,iy0).</emphasis>
900 <emphasis role="comment">//&#32;(Note&#32;that&#32;the&#32;bitmap&#32;uses&#32;y-increases-down,&#32;but&#32;the&#32;shape&#32;uses</emphasis>
901 <emphasis role="comment">//&#32;y-increases-up,&#32;so&#32;CodepointBitmapBox&#32;and&#32;CodepointBox&#32;are&#32;inverted.)</emphasis>
902 
903 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a18fae014dd2261e554248ca737d05578">stbtt_GetCodepointBitmapBoxSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1);
904 <emphasis role="comment">//&#32;same&#32;as&#32;stbtt_GetCodepointBitmapBox,&#32;but&#32;you&#32;can&#32;specify&#32;a&#32;subpixel</emphasis>
905 <emphasis role="comment">//&#32;shift&#32;for&#32;the&#32;character</emphasis>
906 
907 <emphasis role="comment">//&#32;the&#32;following&#32;functions&#32;are&#32;equivalent&#32;to&#32;the&#32;above&#32;functions,&#32;but&#32;operate</emphasis>
908 <emphasis role="comment">//&#32;on&#32;glyph&#32;indices&#32;instead&#32;of&#32;Unicode&#32;codepoints&#32;(for&#32;efficiency)</emphasis>
909 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1adba6ae7b9f05604eb366a828836b62a9">stbtt_GetGlyphBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff);
910 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24">stbtt_GetGlyphBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff);
911 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a915acab7676b20098f4d480376c5b589">stbtt_MakeGlyphBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph);
912 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph);
913 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a006159e27c5c733ea11c688211e47c25">stbtt_MakeGlyphBitmapSubpixelPrefilter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;oversample_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;oversample_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph);
914 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53">stbtt_GetGlyphBitmapBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1);
915 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1);
916 
917 
918 <emphasis role="comment">//&#32;@TODO:&#32;don&apos;t&#32;expose&#32;this&#32;structure</emphasis>
919 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
920 {
921 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,h,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>;
922 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>;
923 }&#32;<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>;
924 
925 <emphasis role="comment">//&#32;rasterize&#32;a&#32;shape&#32;with&#32;quadratic&#32;beziers&#32;into&#32;a&#32;bitmap</emphasis>
926 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db">stbtt_Rasterize</link>(<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;1-channel&#32;bitmap&#32;to&#32;draw&#32;into</emphasis>
927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;flatness_in_pixels,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;allowable&#32;error&#32;of&#32;curve&#32;in&#32;pixels</emphasis>
928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;array&#32;of&#32;vertices&#32;defining&#32;shape</emphasis>
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_verts,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;vertices&#32;in&#32;above&#32;array</emphasis>
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="comment">//&#32;scale&#32;applied&#32;to&#32;input&#32;vertices</emphasis>
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="comment">//&#32;translation&#32;applied&#32;to&#32;input&#32;vertices</emphasis>
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x_off,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y_off,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;another&#32;translation&#32;applied&#32;to&#32;input</emphasis>
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;non-zero,&#32;vertically&#32;flip&#32;shape</emphasis>
934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;context&#32;for&#32;to&#32;STBTT_MALLOC</emphasis>
935 
937 <emphasis role="comment">//</emphasis>
938 <emphasis role="comment">//&#32;Signed&#32;Distance&#32;Function&#32;(or&#32;Field)&#32;rendering</emphasis>
939 
940 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a1254dc807df81931ab070c6e80370489">stbtt_FreeSDF</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bitmap,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata);
941 <emphasis role="comment">//&#32;frees&#32;the&#32;SDF&#32;bitmap&#32;allocated&#32;below</emphasis>
942 
943 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97">stbtt_GetGlyphSDF</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;onedge_value,&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_dist_scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff);
944 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ae70e9e09a74359133d5f282e032d5aa7">stbtt_GetCodepointSDF</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;onedge_value,&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_dist_scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff);
945 <emphasis role="comment">//&#32;These&#32;functions&#32;compute&#32;a&#32;discretized&#32;SDF&#32;field&#32;for&#32;a&#32;single&#32;character,&#32;suitable&#32;for&#32;storing</emphasis>
946 <emphasis role="comment">//&#32;in&#32;a&#32;single-channel&#32;texture,&#32;sampling&#32;with&#32;bilinear&#32;filtering,&#32;and&#32;testing&#32;against</emphasis>
947 <emphasis role="comment">//&#32;larger&#32;than&#32;some&#32;threshold&#32;to&#32;produce&#32;scalable&#32;fonts.</emphasis>
948 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;the&#32;font</emphasis>
949 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;controls&#32;the&#32;size&#32;of&#32;the&#32;resulting&#32;SDF&#32;bitmap,&#32;same&#32;as&#32;it&#32;would&#32;be&#32;creating&#32;a&#32;regular&#32;bitmap</emphasis>
950 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glyph/codepoint&#32;&#32;&#32;--&#32;&#32;the&#32;character&#32;to&#32;generate&#32;the&#32;SDF&#32;for</emphasis>
951 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;padding&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;extra&#32;&quot;pixels&quot;&#32;around&#32;the&#32;character&#32;which&#32;are&#32;filled&#32;with&#32;the&#32;distance&#32;to&#32;the&#32;character&#32;(not&#32;0),</emphasis>
952 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;allows&#32;effects&#32;like&#32;bit&#32;outlines</emphasis>
953 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onedge_value&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;value&#32;0-255&#32;to&#32;test&#32;the&#32;SDF&#32;against&#32;to&#32;reconstruct&#32;the&#32;character&#32;(i.e.&#32;the&#32;isocontour&#32;of&#32;the&#32;character)</emphasis>
954 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel_dist_scale&#32;&#32;--&#32;&#32;what&#32;value&#32;the&#32;SDF&#32;should&#32;increase&#32;by&#32;when&#32;moving&#32;one&#32;SDF&#32;&quot;pixel&quot;&#32;away&#32;from&#32;the&#32;edge&#32;(on&#32;the&#32;0..255&#32;scale)</emphasis>
955 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;positive,&#32;&gt;&#32;onedge_value&#32;is&#32;inside;&#32;if&#32;negative,&#32;&lt;&#32;onedge_value&#32;is&#32;inside</emphasis>
956 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width,height&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;output&#32;height&#32;&amp;&#32;width&#32;of&#32;the&#32;SDF&#32;bitmap&#32;(including&#32;padding)</emphasis>
957 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xoff,yoff&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;output&#32;origin&#32;of&#32;the&#32;character</emphasis>
958 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;value&#32;&#32;&#32;&#32;&#32;&#32;--&#32;&#32;a&#32;2D&#32;array&#32;of&#32;bytes&#32;0..255,&#32;width*height&#32;in&#32;size</emphasis>
959 <emphasis role="comment">//</emphasis>
960 <emphasis role="comment">//&#32;pixel_dist_scale&#32;&amp;&#32;onedge_value&#32;are&#32;a&#32;scale&#32;&amp;&#32;bias&#32;that&#32;allows&#32;you&#32;to&#32;make</emphasis>
961 <emphasis role="comment">//&#32;optimal&#32;use&#32;of&#32;the&#32;limited&#32;0..255&#32;for&#32;your&#32;application,&#32;trading&#32;off&#32;precision</emphasis>
962 <emphasis role="comment">//&#32;and&#32;special&#32;effects.&#32;SDF&#32;values&#32;outside&#32;the&#32;range&#32;0..255&#32;are&#32;clamped&#32;to&#32;0..255.</emphasis>
963 <emphasis role="comment">//</emphasis>
964 <emphasis role="comment">//&#32;Example:</emphasis>
965 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;=&#32;stbtt_ScaleForPixelHeight(22)</emphasis>
966 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;padding&#32;=&#32;5</emphasis>
967 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;onedge_value&#32;=&#32;180</emphasis>
968 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;pixel_dist_scale&#32;=&#32;180/5.0&#32;=&#32;36.0</emphasis>
969 <emphasis role="comment">//</emphasis>
970 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;This&#32;will&#32;create&#32;an&#32;SDF&#32;bitmap&#32;in&#32;which&#32;the&#32;character&#32;is&#32;about&#32;22&#32;pixels</emphasis>
971 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;high&#32;but&#32;the&#32;whole&#32;bitmap&#32;is&#32;about&#32;22+5+5=32&#32;pixels&#32;high.&#32;To&#32;produce&#32;a&#32;filled</emphasis>
972 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;shape,&#32;sample&#32;the&#32;SDF&#32;at&#32;each&#32;pixel&#32;and&#32;fill&#32;the&#32;pixel&#32;if&#32;the&#32;SDF&#32;value</emphasis>
973 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;is&#32;greater&#32;than&#32;or&#32;equal&#32;to&#32;180/255.&#32;(You&apos;ll&#32;actually&#32;want&#32;to&#32;antialias,</emphasis>
974 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;which&#32;is&#32;beyond&#32;the&#32;scope&#32;of&#32;this&#32;example.)&#32;Additionally,&#32;you&#32;can&#32;compute</emphasis>
975 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;outlines&#32;(e.g.&#32;to&#32;stroke&#32;the&#32;character&#32;border&#32;inside&#32;&amp;&#32;outside,</emphasis>
976 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;or&#32;only&#32;outside).&#32;For&#32;example,&#32;to&#32;fill&#32;outside&#32;the&#32;character&#32;up&#32;to&#32;3&#32;SDF</emphasis>
977 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;pixels,&#32;you&#32;would&#32;compare&#32;against&#32;(180-36.0*3)/255&#32;=&#32;72/255.&#32;The&#32;above</emphasis>
978 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;choice&#32;of&#32;variables&#32;maps&#32;a&#32;range&#32;from&#32;5&#32;pixels&#32;outside&#32;the&#32;shape&#32;to</emphasis>
979 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;2&#32;pixels&#32;inside&#32;the&#32;shape&#32;to&#32;0..255;&#32;this&#32;is&#32;intended&#32;primarily&#32;for&#32;apply</emphasis>
980 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;outside&#32;effects&#32;only&#32;(the&#32;interior&#32;range&#32;is&#32;needed&#32;to&#32;allow&#32;proper</emphasis>
981 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;antialiasing&#32;of&#32;the&#32;font&#32;at&#32;*smaller*&#32;sizes)</emphasis>
982 <emphasis role="comment">//</emphasis>
983 <emphasis role="comment">//&#32;The&#32;function&#32;computes&#32;the&#32;SDF&#32;analytically&#32;at&#32;each&#32;SDF&#32;pixel,&#32;not&#32;by&#32;e.g.</emphasis>
984 <emphasis role="comment">//&#32;building&#32;a&#32;higher-res&#32;bitmap&#32;and&#32;approximating&#32;it.&#32;In&#32;theory&#32;the&#32;quality</emphasis>
985 <emphasis role="comment">//&#32;should&#32;be&#32;as&#32;high&#32;as&#32;possible&#32;for&#32;an&#32;SDF&#32;of&#32;this&#32;size&#32;&amp;&#32;representation,&#32;but</emphasis>
986 <emphasis role="comment">//&#32;unclear&#32;if&#32;this&#32;is&#32;true&#32;in&#32;practice&#32;(perhaps&#32;building&#32;a&#32;higher-res&#32;bitmap</emphasis>
987 <emphasis role="comment">//&#32;and&#32;computing&#32;from&#32;that&#32;can&#32;allow&#32;drop-out&#32;prevention).</emphasis>
988 <emphasis role="comment">//</emphasis>
989 <emphasis role="comment">//&#32;The&#32;algorithm&#32;has&#32;not&#32;been&#32;optimized&#32;at&#32;all,&#32;so&#32;expect&#32;it&#32;to&#32;be&#32;slow</emphasis>
990 <emphasis role="comment">//&#32;if&#32;computing&#32;lots&#32;of&#32;characters&#32;or&#32;very&#32;large&#32;sizes.</emphasis>
991 
992 
993 
995 <emphasis role="comment">//</emphasis>
996 <emphasis role="comment">//&#32;Finding&#32;the&#32;right&#32;font...</emphasis>
997 <emphasis role="comment">//</emphasis>
998 <emphasis role="comment">//&#32;You&#32;should&#32;really&#32;just&#32;solve&#32;this&#32;offline,&#32;keep&#32;your&#32;own&#32;tables</emphasis>
999 <emphasis role="comment">//&#32;of&#32;what&#32;font&#32;is&#32;what,&#32;and&#32;don&apos;t&#32;try&#32;to&#32;get&#32;it&#32;out&#32;of&#32;the&#32;.ttf&#32;file.</emphasis>
1000 <emphasis role="comment">//&#32;That&apos;s&#32;because&#32;getting&#32;it&#32;out&#32;of&#32;the&#32;.ttf&#32;file&#32;is&#32;really&#32;hard,&#32;because</emphasis>
1001 <emphasis role="comment">//&#32;the&#32;names&#32;in&#32;the&#32;file&#32;can&#32;appear&#32;in&#32;many&#32;possible&#32;encodings,&#32;in&#32;many</emphasis>
1002 <emphasis role="comment">//&#32;possible&#32;languages,&#32;and&#32;e.g.&#32;if&#32;you&#32;need&#32;a&#32;case-insensitive&#32;comparison,</emphasis>
1003 <emphasis role="comment">//&#32;the&#32;details&#32;of&#32;that&#32;depend&#32;on&#32;the&#32;encoding&#32;&amp;&#32;language&#32;in&#32;a&#32;complex&#32;way</emphasis>
1004 <emphasis role="comment">//&#32;(actually&#32;underspecified&#32;in&#32;truetype,&#32;but&#32;also&#32;gigantic).</emphasis>
1005 <emphasis role="comment">//</emphasis>
1006 <emphasis role="comment">//&#32;But&#32;you&#32;can&#32;use&#32;the&#32;provided&#32;functions&#32;in&#32;two&#32;possible&#32;ways:</emphasis>
1007 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbtt_FindMatchingFont()&#32;will&#32;use&#32;*case-sensitive*&#32;comparisons&#32;on</emphasis>
1008 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unicode-encoded&#32;names&#32;to&#32;try&#32;to&#32;find&#32;the&#32;font&#32;you&#32;want;</emphasis>
1009 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;you&#32;can&#32;run&#32;this&#32;before&#32;calling&#32;stbtt_InitFont()</emphasis>
1010 <emphasis role="comment">//</emphasis>
1011 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbtt_GetFontNameString()&#32;lets&#32;you&#32;get&#32;any&#32;of&#32;the&#32;various&#32;strings</emphasis>
1012 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;the&#32;file&#32;yourself&#32;and&#32;do&#32;your&#32;own&#32;comparisons&#32;on&#32;them.</emphasis>
1013 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;You&#32;have&#32;to&#32;have&#32;called&#32;stbtt_InitFont()&#32;first.</emphasis>
1014 
1015 
1016 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f">stbtt_FindMatchingFont</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
1017 <emphasis role="comment">//&#32;returns&#32;the&#32;offset&#32;(not&#32;index)&#32;of&#32;the&#32;font&#32;that&#32;matches,&#32;or&#32;-1&#32;if&#32;none</emphasis>
1018 <emphasis role="comment">//&#32;&#32;&#32;if&#32;you&#32;use&#32;STBTT_MACSTYLE_DONTCARE,&#32;use&#32;a&#32;font&#32;name&#32;like&#32;&quot;Arial&#32;Bold&quot;.</emphasis>
1019 <emphasis role="comment">//&#32;&#32;&#32;if&#32;you&#32;use&#32;any&#32;other&#32;flag,&#32;use&#32;a&#32;font&#32;name&#32;like&#32;&quot;Arial&quot;;&#32;this&#32;checks</emphasis>
1020 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;the&#32;&apos;macStyle&apos;&#32;header&#32;field;&#32;i&#32;don&apos;t&#32;know&#32;if&#32;fonts&#32;set&#32;this&#32;consistently</emphasis>
1021 <emphasis role="preprocessor">#define&#32;STBTT_MACSTYLE_DONTCARE&#32;&#32;&#32;&#32;&#32;0</emphasis>
1022 <emphasis role="preprocessor">#define&#32;STBTT_MACSTYLE_BOLD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
1023 <emphasis role="preprocessor">#define&#32;STBTT_MACSTYLE_ITALIC&#32;&#32;&#32;&#32;&#32;&#32;&#32;2</emphasis>
1024 <emphasis role="preprocessor">#define&#32;STBTT_MACSTYLE_UNDERSCORE&#32;&#32;&#32;4</emphasis>
1025 <emphasis role="preprocessor">#define&#32;STBTT_MACSTYLE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;8&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;&lt;=&#32;not&#32;same&#32;as&#32;0,&#32;this&#32;makes&#32;us&#32;check&#32;the&#32;bitfield&#32;is&#32;0</emphasis>
1026 
1027 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31">stbtt_CompareUTF8toUTF16_bigendian</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len1,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len2);
1028 <emphasis role="comment">//&#32;returns&#32;1/0&#32;whether&#32;the&#32;first&#32;string&#32;interpreted&#32;as&#32;utf8&#32;is&#32;identical&#32;to</emphasis>
1029 <emphasis role="comment">//&#32;the&#32;second&#32;string&#32;interpreted&#32;as&#32;big-endian&#32;utf16...&#32;useful&#32;for&#32;strings&#32;from&#32;next&#32;func</emphasis>
1030 
1031 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a404d8b8c23a01c8cdf71f02d6d47d185">stbtt_GetFontNameString</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="_namespacelength">length</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;platformID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;encodingID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;languageID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nameID);
1032 <emphasis role="comment">//&#32;returns&#32;the&#32;string&#32;(which&#32;may&#32;be&#32;big-endian&#32;double&#32;byte,&#32;e.g.&#32;for&#32;unicode)</emphasis>
1033 <emphasis role="comment">//&#32;and&#32;puts&#32;the&#32;length&#32;in&#32;bytes&#32;in&#32;*length.</emphasis>
1034 <emphasis role="comment">//</emphasis>
1035 <emphasis role="comment">//&#32;some&#32;of&#32;the&#32;values&#32;for&#32;the&#32;IDs&#32;are&#32;below;&#32;for&#32;more&#32;see&#32;the&#32;truetype&#32;spec:</emphasis>
1036 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;http://developer.apple.com/textfonts/TTRefMan/RM06/Chap6name.html</emphasis>
1037 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;http://www.microsoft.com/typography/otspec/name.htm</emphasis>
1038 
1039 <emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;platformID</emphasis>
1040 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4d29ca5db06e2ae647d1ec22548a9d2aa7df9cd0e95e0b375d03348661b399b69">STBTT_PLATFORM_ID_UNICODE</link>&#32;&#32;&#32;=0,
1041 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4d29ca5db06e2ae647d1ec22548a9d2aadc1a3ed4f2abe63dd4e91d789136db3f">STBTT_PLATFORM_ID_MAC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=1,
1042 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4d29ca5db06e2ae647d1ec22548a9d2aacd63703eafd91118387dfb70b384132d">STBTT_PLATFORM_ID_ISO</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=2,
1043 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4d29ca5db06e2ae647d1ec22548a9d2aa86f00e4c49cfec574b34090faa47f878">STBTT_PLATFORM_ID_MICROSOFT</link>&#32;=3
1044 };
1045 
1046 <emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;encodingID&#32;for&#32;STBTT_PLATFORM_ID_UNICODE</emphasis>
1047 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a592aba11ab30da4dbf57e9736c8387a1aeec1111b4adcd61a20a461138726fc46">STBTT_UNICODE_EID_UNICODE_1_0</link>&#32;&#32;&#32;&#32;=0,
1048 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a592aba11ab30da4dbf57e9736c8387a1aa13de23938974ed5ed2039ad0c623901">STBTT_UNICODE_EID_UNICODE_1_1</link>&#32;&#32;&#32;&#32;=1,
1049 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a592aba11ab30da4dbf57e9736c8387a1a2803b7d7150216b6e67cdd2ef9e734b0">STBTT_UNICODE_EID_ISO_10646</link>&#32;&#32;&#32;&#32;&#32;&#32;=2,
1050 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a592aba11ab30da4dbf57e9736c8387a1a4ead513507e004e256fb772d7ee91f60">STBTT_UNICODE_EID_UNICODE_2_0_BMP</link>=3,
1051 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a592aba11ab30da4dbf57e9736c8387a1a95f85f02ffe39539e6b4032a3db58eed">STBTT_UNICODE_EID_UNICODE_2_0_FULL</link>=4
1052 };
1053 
1054 <emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;encodingID&#32;for&#32;STBTT_PLATFORM_ID_MICROSOFT</emphasis>
1055 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad1afd468cb4339144d0997ddcf04748a87372d512b2e4be1dce36fe0153b8cc0">STBTT_MS_EID_SYMBOL</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=0,
1056 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad1afd468cb4339144d0997ddcf04748af3b7a17fc226e7540f025d241f36f17d">STBTT_MS_EID_UNICODE_BMP</link>&#32;&#32;&#32;=1,
1057 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad1afd468cb4339144d0997ddcf04748aaaab3da7b4e39433ac3db32fd9a83808">STBTT_MS_EID_SHIFTJIS</link>&#32;&#32;&#32;&#32;&#32;&#32;=2,
1058 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad1afd468cb4339144d0997ddcf04748a08224d2a200bd947c6513926290f4640">STBTT_MS_EID_UNICODE_FULL</link>&#32;&#32;=10
1059 };
1060 
1061 <emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;encodingID&#32;for&#32;STBTT_PLATFORM_ID_MAC;&#32;same&#32;as&#32;Script&#32;Manager&#32;codes</emphasis>
1062 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5a11789a74295482059768d7ed21ddc1ae">STBTT_MAC_EID_ROMAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=0,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5aedbd64dd9fc105aabbbae72bae09be1f">STBTT_MAC_EID_ARABIC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=4,
1063 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5aa1cd5f4622dd634ffafe0487a2135524">STBTT_MAC_EID_JAPANESE</link>&#32;&#32;&#32;&#32;&#32;=1,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5a4f4920b5c91733bd8bb176d5425bd106">STBTT_MAC_EID_HEBREW</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=5,
1064 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5a808bbaa74269579caa945ffdae31c62a">STBTT_MAC_EID_CHINESE_TRAD</link>&#32;=2,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5ac3c0a50ac37d4b5a68e0ea22824bee75">STBTT_MAC_EID_GREEK</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=6,
1065 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5a0b8da1ad3177e0c9b1564c780fc11f0b">STBTT_MAC_EID_KOREAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=3,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abc3975f01f66a098a347a8262ff103e5aba7e217cc8f987ce69ab91180bd15a7f">STBTT_MAC_EID_RUSSIAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=7
1066 };
1067 
1068 <emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;languageID&#32;for&#32;STBTT_PLATFORM_ID_MICROSOFT;&#32;same&#32;as&#32;LCID...</emphasis>
1069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;problematic&#32;because&#32;there&#32;are&#32;e.g.&#32;16&#32;english&#32;LCIDs&#32;and&#32;16&#32;arabic&#32;LCIDs</emphasis>
1070 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea73e1e353a8727baf20ce85ee329b310b">STBTT_MS_LANG_ENGLISH</link>&#32;&#32;&#32;&#32;&#32;=0x0409,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea9d1b0af23f2f76cd1789e0cd638b935d">STBTT_MS_LANG_ITALIAN</link>&#32;&#32;&#32;&#32;&#32;=0x0410,
1071 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea6092851487f2d9708532ee955d4a75bd">STBTT_MS_LANG_CHINESE</link>&#32;&#32;&#32;&#32;&#32;=0x0804,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea0e44b54e59bcc095ff9fe786850cbf74">STBTT_MS_LANG_JAPANESE</link>&#32;&#32;&#32;&#32;=0x0411,
1072 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea0b5f77089567369488e03917d99ddbe5">STBTT_MS_LANG_DUTCH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=0x0413,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8deadc4f5bbc60ef97f1418902574fd9b418">STBTT_MS_LANG_KOREAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x0412,
1073 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea3b89fa08e6376c8314c330bd1e9837b5">STBTT_MS_LANG_FRENCH</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x040c,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea7930264450b0313e58f7590550520786">STBTT_MS_LANG_RUSSIAN</link>&#32;&#32;&#32;&#32;&#32;=0x0419,
1074 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8deaebb69f5af1155d26a280778c5ab72580">STBTT_MS_LANG_GERMAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x0407,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea541da99c0255bb044006cc32c2ae50a2">STBTT_MS_LANG_SPANISH</link>&#32;&#32;&#32;&#32;&#32;=0x0409,
1075 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8deaed7119e1e991009f49065071f4df39c6">STBTT_MS_LANG_HEBREW</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x040d,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5e8ce9967db697e85d5528dafee6b8dea126d5bcdbb6e42a9799873b4ffde6c34">STBTT_MS_LANG_SWEDISH</link>&#32;&#32;&#32;&#32;&#32;=0x041D
1076 };
1077 
1078 <emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;languageID&#32;for&#32;STBTT_PLATFORM_ID_MAC</emphasis>
1079 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a845b632475daa7639bb3438785ca3fc9">STBTT_MAC_LANG_ENGLISH</link>&#32;&#32;&#32;&#32;&#32;&#32;=0&#32;,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a988de1366d401829c919b481c5c3c8e2">STBTT_MAC_LANG_JAPANESE</link>&#32;&#32;&#32;&#32;&#32;=11,
1080 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419ae6f91a195abd217070ca9cee63849420">STBTT_MAC_LANG_ARABIC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=12,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a236502e69e2e07df089168e80dc1330d">STBTT_MAC_LANG_KOREAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=23,
1081 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419af2757f8c4078dfb9fe9ad9dc32e801ee">STBTT_MAC_LANG_DUTCH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=4&#32;,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419af99640bf65945428bcb19f3b9e6e287f">STBTT_MAC_LANG_RUSSIAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=32,
1082 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a9a8ae7b8dca3b2902eb69ece32b817a3">STBTT_MAC_LANG_FRENCH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=1&#32;,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a5399db7b554ed772c935f1b5d9d67852">STBTT_MAC_LANG_SPANISH</link>&#32;&#32;&#32;&#32;&#32;&#32;=6&#32;,
1083 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419ae3360f5396032fdf22ebb35f3d30e849">STBTT_MAC_LANG_GERMAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=2&#32;,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a0315abafecf696110de133e4d54ade8c">STBTT_MAC_LANG_SWEDISH</link>&#32;&#32;&#32;&#32;&#32;&#32;=5&#32;,
1084 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419ad60d41526c1e9ee9ec50e8fd8950b9a4">STBTT_MAC_LANG_HEBREW</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=10,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a552ed7fe17ee850f3883344b3424e26b">STBTT_MAC_LANG_CHINESE_SIMPLIFIED</link>&#32;=33,
1085 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419a50fb98b75fe8bc23d2bc963e45ea8d96">STBTT_MAC_LANG_ITALIAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=3&#32;,&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aaa91b962ffd8aca2f3c24e886a222419af7d2b171e725e29ef4fbfbff7c3b5926">STBTT_MAC_LANG_CHINESE_TRAD</link>&#32;=19
1086 };
1087 
1088 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
1089 }
1090 <emphasis role="preprocessor">#endif</emphasis>
1091 
1092 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__STB_INCLUDE_STB_TRUETYPE_H__</emphasis>
1093 
1100 
1101 <emphasis role="preprocessor">#ifdef&#32;STB_TRUETYPE_IMPLEMENTATION</emphasis>
1102 
1103 <emphasis role="preprocessor">#ifndef&#32;STBTT_MAX_OVERSAMPLE</emphasis>
1104 <emphasis role="preprocessor">#define&#32;STBTT_MAX_OVERSAMPLE&#32;&#32;&#32;8</emphasis>
1105 <emphasis role="preprocessor">#endif</emphasis>
1106 
1107 <emphasis role="preprocessor">#if&#32;STBTT_MAX_OVERSAMPLE&#32;&gt;&#32;255</emphasis>
1108 <emphasis role="preprocessor">#error&#32;&quot;STBTT_MAX_OVERSAMPLE&#32;cannot&#32;be&#32;&gt;&#32;255&quot;</emphasis>
1109 <emphasis role="preprocessor">#endif</emphasis>
1110 
1111 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE&#32;&amp;&#32;(STBTT_MAX_OVERSAMPLE-1))&#32;==&#32;0&#32;?&#32;1&#32;:&#32;-1];
1112 
1113 <emphasis role="preprocessor">#ifndef&#32;STBTT_RASTERIZER_VERSION</emphasis>
1114 <emphasis role="preprocessor">#define&#32;STBTT_RASTERIZER_VERSION&#32;2</emphasis>
1115 <emphasis role="preprocessor">#endif</emphasis>
1116 
1117 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
1118 <emphasis role="preprocessor">#define&#32;STBTT__NOTUSED(v)&#32;&#32;(void)(v)</emphasis>
1119 <emphasis role="preprocessor">#else</emphasis>
1120 <emphasis role="preprocessor">#define&#32;STBTT__NOTUSED(v)&#32;&#32;(void)sizeof(v)</emphasis>
1121 <emphasis role="preprocessor">#endif</emphasis>
1122 
1124 <emphasis role="comment">//</emphasis>
1125 <emphasis role="comment">//&#32;stbtt__buf&#32;helpers&#32;to&#32;parse&#32;data&#32;from&#32;file</emphasis>
1126 <emphasis role="comment">//</emphasis>
1127 
1128 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint8&#32;stbtt__buf_get8(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1129 {
1130 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size)
1131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1132 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;data[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor++];
1133 }
1134 
1135 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint8&#32;stbtt__buf_peek8(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1136 {
1137 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size)
1138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1139 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;data[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor];
1140 }
1141 
1142 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__buf_seek(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;o)
1143 {
1144 &#32;&#32;&#32;STBTT_assert(!(o&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size&#32;||&#32;o&#32;&lt;&#32;0));
1145 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;=&#32;(o&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size&#32;||&#32;o&#32;&lt;&#32;0)&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size&#32;:&#32;o;
1146 }
1147 
1148 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__buf_skip(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;o)
1149 {
1150 &#32;&#32;&#32;stbtt__buf_seek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;+&#32;o);
1151 }
1152 
1153 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint32&#32;stbtt__buf_get(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1154 {
1155 &#32;&#32;&#32;stbtt_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;0;
1156 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1157 &#32;&#32;&#32;STBTT_assert(n&#32;&gt;=&#32;1&#32;&amp;&amp;&#32;n&#32;&lt;=&#32;4);
1158 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
1159 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&lt;&lt;&#32;8)&#32;|&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1160 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
1161 }
1162 
1163 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__new_buf(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
1164 {
1165 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
1166 &#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;&lt;&#32;0x40000000);
1167 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>.data&#32;=&#32;(stbtt_uint8*)&#32;p;
1168 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>.size&#32;=&#32;(int)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
1169 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>.cursor&#32;=&#32;0;
1170 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
1171 }
1172 
1173 <emphasis role="preprocessor">#define&#32;stbtt__buf_get16(b)&#32;&#32;stbtt__buf_get((b),&#32;2)</emphasis>
1174 <emphasis role="preprocessor">#define&#32;stbtt__buf_get32(b)&#32;&#32;stbtt__buf_get((b),&#32;4)</emphasis>
1175 
1176 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__buf_range(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;o,&#32;<emphasis role="keywordtype">int</emphasis>&#32;s)
1177 {
1178 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1179 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o&#32;&lt;&#32;0&#32;||&#32;s&#32;&lt;&#32;0&#32;||&#32;o&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size&#32;||&#32;s&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size&#32;-&#32;o)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
1180 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>.data&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;data&#32;+&#32;o;
1181 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>.size&#32;=&#32;s;
1182 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
1183 }
1184 
1185 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__cff_get_index(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1186 {
1187 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>,&#32;offsize;
1188 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;<link linkend="_structstbtt____buf_1ac047fda650726920531272c28aa354fb">cursor</link>;
1189 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;stbtt__buf_get16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1190 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)&#32;{
1191 &#32;&#32;&#32;&#32;&#32;&#32;offsize&#32;=&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1192 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(offsize&#32;&gt;=&#32;1&#32;&amp;&amp;&#32;offsize&#32;&lt;=&#32;4);
1193 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;offsize&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>);
1194 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;stbtt__buf_get(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;offsize)&#32;-&#32;1);
1195 &#32;&#32;&#32;}
1196 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_range(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>);
1197 }
1198 
1199 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint32&#32;stbtt__cff_int(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1200 {
1201 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b0&#32;=&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1202 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;&gt;=&#32;32&#32;&amp;&amp;&#32;b0&#32;&lt;=&#32;246)&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;b0&#32;-&#32;139;
1203 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;&gt;=&#32;247&#32;&amp;&amp;&#32;b0&#32;&lt;=&#32;250)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(b0&#32;-&#32;247)*256&#32;+&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;+&#32;108;
1204 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;&gt;=&#32;251&#32;&amp;&amp;&#32;b0&#32;&lt;=&#32;254)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-(b0&#32;-&#32;251)*256&#32;-&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;-&#32;108;
1205 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;==&#32;28)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_get16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1206 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;==&#32;29)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_get32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1207 &#32;&#32;&#32;STBTT_assert(0);
1208 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1209 }
1210 
1211 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__cff_skip_operand(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;{
1212 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;b0&#32;=&#32;stbtt__buf_peek8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1213 &#32;&#32;&#32;STBTT_assert(b0&#32;&gt;=&#32;28);
1214 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;==&#32;30)&#32;{
1215 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;1);
1216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size)&#32;{
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&amp;&#32;0xF)&#32;==&#32;0xF&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&gt;&gt;&#32;4)&#32;==&#32;0xF)
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1220 &#32;&#32;&#32;&#32;&#32;&#32;}
1221 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1222 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__cff_int(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1223 &#32;&#32;&#32;}
1224 }
1225 
1226 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__dict_get(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;key)
1227 {
1228 &#32;&#32;&#32;stbtt__buf_seek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;0);
1229 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;size)&#32;{
1230 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>,&#32;op;
1231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(stbtt__buf_peek8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;&gt;=&#32;28)
1232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__cff_skip_operand(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1233 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;cursor;
1234 &#32;&#32;&#32;&#32;&#32;&#32;op&#32;=&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(op&#32;==&#32;12)&#32;&#32;op&#32;=&#32;stbtt__buf_get8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;|&#32;0x100;
1236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(op&#32;==&#32;key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_range(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>);
1237 &#32;&#32;&#32;}
1238 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_range(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;0,&#32;0);
1239 }
1240 
1241 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__dict_get_ints(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;outcount,&#32;stbtt_uint32&#32;*out)
1242 {
1243 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1244 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;operands&#32;=&#32;stbtt__dict_get(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;key);
1245 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;outcount&#32;&amp;&amp;&#32;operands.<link linkend="_structstbtt____buf_1ac047fda650726920531272c28aa354fb">cursor</link>&#32;&lt;&#32;operands.<link linkend="_structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b">size</link>;&#32;i++)
1246 &#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;stbtt__cff_int(&amp;operands);
1247 }
1248 
1249 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__cff_index_count(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1250 {
1251 &#32;&#32;&#32;stbtt__buf_seek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;0);
1252 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_get16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1253 }
1254 
1255 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__cff_index_get(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i)
1256 {
1257 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;offsize,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>;
1258 &#32;&#32;&#32;stbtt__buf_seek(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;0);
1259 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;stbtt__buf_get16(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1260 &#32;&#32;&#32;offsize&#32;=&#32;stbtt__buf_get8(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1261 &#32;&#32;&#32;STBTT_assert(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>);
1262 &#32;&#32;&#32;STBTT_assert(offsize&#32;&gt;=&#32;1&#32;&amp;&amp;&#32;offsize&#32;&lt;=&#32;4);
1263 &#32;&#32;&#32;stbtt__buf_skip(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;i*offsize);
1264 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;stbtt__buf_get(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;offsize);
1265 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;stbtt__buf_get(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;offsize);
1266 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__buf_range(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;2+(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>+1)*offsize+<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>);
1267 }
1268 
1270 <emphasis role="comment">//</emphasis>
1271 <emphasis role="comment">//&#32;accessors&#32;to&#32;parse&#32;data&#32;from&#32;file</emphasis>
1272 <emphasis role="comment">//</emphasis>
1273 
1274 <emphasis role="comment">//&#32;on&#32;platforms&#32;that&#32;don&apos;t&#32;allow&#32;misaligned&#32;reads,&#32;if&#32;we&#32;want&#32;to&#32;allow</emphasis>
1275 <emphasis role="comment">//&#32;truetype&#32;fonts&#32;that&#32;aren&apos;t&#32;padded&#32;to&#32;alignment,&#32;define&#32;ALLOW_UNALIGNED_TRUETYPE</emphasis>
1276 
1277 <emphasis role="preprocessor">#define&#32;ttBYTE(p)&#32;&#32;&#32;&#32;&#32;(*&#32;(stbtt_uint8&#32;*)&#32;(p))</emphasis>
1278 <emphasis role="preprocessor">#define&#32;ttCHAR(p)&#32;&#32;&#32;&#32;&#32;(*&#32;(stbtt_int8&#32;*)&#32;(p))</emphasis>
1279 <emphasis role="preprocessor">#define&#32;ttFixed(p)&#32;&#32;&#32;&#32;ttLONG(p)</emphasis>
1280 
1281 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint16&#32;ttUSHORT(stbtt_uint8&#32;*p)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;p[0]*256&#32;+&#32;p[1];&#32;}
1282 <emphasis role="keyword">static</emphasis>&#32;stbtt_int16&#32;ttSHORT(stbtt_uint8&#32;*p)&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;p[0]*256&#32;+&#32;p[1];&#32;}
1283 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint32&#32;ttULONG(stbtt_uint8&#32;*p)&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(p[0]&lt;&lt;24)&#32;+&#32;(p[1]&lt;&lt;16)&#32;+&#32;(p[2]&lt;&lt;8)&#32;+&#32;p[3];&#32;}
1284 <emphasis role="keyword">static</emphasis>&#32;stbtt_int32&#32;ttLONG(stbtt_uint8&#32;*p)&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(p[0]&lt;&lt;24)&#32;+&#32;(p[1]&lt;&lt;16)&#32;+&#32;(p[2]&lt;&lt;8)&#32;+&#32;p[3];&#32;}
1285 
1286 <emphasis role="preprocessor">#define&#32;stbtt_tag4(p,c0,c1,c2,c3)&#32;((p)[0]&#32;==&#32;(c0)&#32;&amp;&amp;&#32;(p)[1]&#32;==&#32;(c1)&#32;&amp;&amp;&#32;(p)[2]&#32;==&#32;(c2)&#32;&amp;&amp;&#32;(p)[3]&#32;==&#32;(c3))</emphasis>
1287 <emphasis role="preprocessor">#define&#32;stbtt_tag(p,str)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_tag4(p,str[0],str[1],str[2],str[3])</emphasis>
1288 
1289 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__isfont(stbtt_uint8&#32;*font)
1290 {
1291 &#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;the&#32;version&#32;number</emphasis>
1292 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag4(font,&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,0,0,0))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;TrueType&#32;1</emphasis>
1293 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag(font,&#32;<emphasis role="stringliteral">&quot;typ1&quot;</emphasis>))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;TrueType&#32;with&#32;type&#32;1&#32;font&#32;--&#32;we&#32;don&apos;t&#32;support&#32;this!</emphasis>
1294 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag(font,&#32;<emphasis role="stringliteral">&quot;OTTO&quot;</emphasis>))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;OpenType&#32;with&#32;CFF</emphasis>
1295 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag4(font,&#32;0,1,0,0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;OpenType&#32;1.0</emphasis>
1296 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag(font,&#32;<emphasis role="stringliteral">&quot;true&quot;</emphasis>))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;Apple&#32;specification&#32;for&#32;TrueType&#32;fonts</emphasis>
1297 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1298 }
1299 
1300 <emphasis role="comment">//&#32;@OPTIMIZE:&#32;binary&#32;search</emphasis>
1301 <emphasis role="keyword">static</emphasis>&#32;stbtt_uint32&#32;stbtt__find_table(stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;stbtt_uint32&#32;fontstart,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tag)
1302 {
1303 &#32;&#32;&#32;stbtt_int32&#32;num_tables&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+fontstart+4);
1304 &#32;&#32;&#32;stbtt_uint32&#32;tabledir&#32;=&#32;fontstart&#32;+&#32;12;
1305 &#32;&#32;&#32;stbtt_int32&#32;i;
1306 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_tables;&#32;++i)&#32;{
1307 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;loc&#32;=&#32;tabledir&#32;+&#32;16*i;
1308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+loc+0,&#32;tag))
1309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+loc+8);
1310 &#32;&#32;&#32;}
1311 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1312 }
1313 
1314 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt_GetFontOffsetForIndex_internal(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*font_collection,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)
1315 {
1316 &#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;it&apos;s&#32;just&#32;a&#32;font,&#32;there&apos;s&#32;only&#32;one&#32;valid&#32;index</emphasis>
1317 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__isfont(font_collection))
1318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;==&#32;0&#32;?&#32;0&#32;:&#32;-1;
1319 
1320 &#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;it&apos;s&#32;a&#32;TTC</emphasis>
1321 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag(font_collection,&#32;<emphasis role="stringliteral">&quot;ttcf&quot;</emphasis>))&#32;{
1322 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;version&#32;1?</emphasis>
1323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttULONG(font_collection+4)&#32;==&#32;0x00010000&#32;||&#32;ttULONG(font_collection+4)&#32;==&#32;0x00020000)&#32;{
1324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;n&#32;=&#32;ttLONG(font_collection+8);
1325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;&gt;=&#32;n)
1326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
1327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttULONG(font_collection+12+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>*4);
1328 &#32;&#32;&#32;&#32;&#32;&#32;}
1329 &#32;&#32;&#32;}
1330 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
1331 }
1332 
1333 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt_GetNumberOfFonts_internal(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*font_collection)
1334 {
1335 &#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;it&apos;s&#32;just&#32;a&#32;font,&#32;there&apos;s&#32;only&#32;one&#32;valid&#32;font</emphasis>
1336 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__isfont(font_collection))
1337 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1338 
1339 &#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;it&apos;s&#32;a&#32;TTC</emphasis>
1340 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_tag(font_collection,&#32;<emphasis role="stringliteral">&quot;ttcf&quot;</emphasis>))&#32;{
1341 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;version&#32;1?</emphasis>
1342 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttULONG(font_collection+4)&#32;==&#32;0x00010000&#32;||&#32;ttULONG(font_collection+4)&#32;==&#32;0x00020000)&#32;{
1343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttLONG(font_collection+8);
1344 &#32;&#32;&#32;&#32;&#32;&#32;}
1345 &#32;&#32;&#32;}
1346 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1347 }
1348 
1349 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__get_subrs(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;cff,&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;fontdict)
1350 {
1351 &#32;&#32;&#32;stbtt_uint32&#32;subrsoff&#32;=&#32;0,&#32;private_loc[2]&#32;=&#32;{&#32;0,&#32;0&#32;};
1352 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;pdict;
1353 &#32;&#32;&#32;stbtt__dict_get_ints(&amp;fontdict,&#32;18,&#32;2,&#32;private_loc);
1354 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!private_loc[1]&#32;||&#32;!private_loc[0])&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1355 &#32;&#32;&#32;pdict&#32;=&#32;stbtt__buf_range(&amp;cff,&#32;private_loc[1],&#32;private_loc[0]);
1356 &#32;&#32;&#32;stbtt__dict_get_ints(&amp;pdict,&#32;19,&#32;1,&#32;&amp;subrsoff);
1357 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!subrsoff)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1358 &#32;&#32;&#32;stbtt__buf_seek(&amp;cff,&#32;private_loc[1]+subrsoff);
1359 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__cff_get_index(&amp;cff);
1360 }
1361 
1362 <emphasis role="comment">//&#32;since&#32;most&#32;people&#32;won&apos;t&#32;use&#32;this,&#32;find&#32;this&#32;table&#32;the&#32;first&#32;time&#32;it&apos;s&#32;needed</emphasis>
1363 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__get_svg(<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info)
1364 {
1365 &#32;&#32;&#32;stbtt_uint32&#32;t;
1366 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>&#32;&lt;&#32;0)&#32;{
1367 &#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;stbtt__find_table(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d">fontstart</link>,&#32;<emphasis role="stringliteral">&quot;SVG&#32;&quot;</emphasis>);
1368 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t)&#32;{
1369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;ttULONG(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;t&#32;+&#32;2);
1370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>&#32;=&#32;t&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
1371 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>&#32;=&#32;0;
1373 &#32;&#32;&#32;&#32;&#32;&#32;}
1374 &#32;&#32;&#32;}
1375 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>;
1376 }
1377 
1378 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt_InitFont_internal(<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;fontstart)
1379 {
1380 &#32;&#32;&#32;stbtt_uint32&#32;cmap,&#32;t;
1381 &#32;&#32;&#32;stbtt_int32&#32;i,numTables;
1382 
1383 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1384 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d">fontstart</link>&#32;=&#32;fontstart;
1385 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>&#32;=&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1386 
1387 &#32;&#32;&#32;cmap&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;cmap&quot;</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;required</emphasis>
1388 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;loca&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;required</emphasis>
1389 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;head&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;required</emphasis>
1390 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;glyf&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;required</emphasis>
1391 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;hhea&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;required</emphasis>
1392 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;hmtx&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;required</emphasis>
1393 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;kern&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;not&#32;required</emphasis>
1394 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022">gpos</link>&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;GPOS&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;not&#32;required</emphasis>
1395 
1396 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cmap&#32;||&#32;!info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;||&#32;!info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;||&#32;!info-&gt;<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>)
1397 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1398 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>)&#32;{
1399 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;required&#32;for&#32;truetype</emphasis>
1400 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1401 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1402 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;initialization&#32;for&#32;CFF&#32;/&#32;Type2&#32;fonts&#32;(OTF)</emphasis>
1403 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;topdict,&#32;topdictidx;
1404 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;cstype&#32;=&#32;2,&#32;charstrings&#32;=&#32;0,&#32;fdarrayoff&#32;=&#32;0,&#32;fdselectoff&#32;=&#32;0;
1405 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;cff;
1406 
1407 &#32;&#32;&#32;&#32;&#32;&#32;cff&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;CFF&#32;&quot;</emphasis>);
1408 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cff)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1409 
1410 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677">fontdicts</link>&#32;=&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1411 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71">fdselect</link>&#32;=&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1412 
1413 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;this&#32;should&#32;use&#32;size&#32;from&#32;table&#32;(not&#32;512MB)</emphasis>
1414 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>&#32;=&#32;stbtt__new_buf(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+cff,&#32;512*1024*1024);
1415 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>;
1416 
1417 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read&#32;the&#32;header</emphasis>
1418 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;2);
1419 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_seek(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;stbtt__buf_get8(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>));&#32;<emphasis role="comment">//&#32;hdrsize</emphasis>
1420 
1421 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;the&#32;name&#32;INDEX&#32;could&#32;list&#32;multiple&#32;fonts,</emphasis>
1422 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;we&#32;just&#32;use&#32;the&#32;first&#32;one.</emphasis>
1423 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__cff_get_index(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);&#32;&#32;<emphasis role="comment">//&#32;name&#32;INDEX</emphasis>
1424 &#32;&#32;&#32;&#32;&#32;&#32;topdictidx&#32;=&#32;stbtt__cff_get_index(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1425 &#32;&#32;&#32;&#32;&#32;&#32;topdict&#32;=&#32;stbtt__cff_index_get(topdictidx,&#32;0);
1426 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__cff_get_index(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);&#32;&#32;<emphasis role="comment">//&#32;string&#32;INDEX</emphasis>
1427 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1afc5bfc4a52ad0e3879f0f81a372da7fb">gsubrs</link>&#32;=&#32;stbtt__cff_get_index(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1428 
1429 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__dict_get_ints(&amp;topdict,&#32;17,&#32;1,&#32;&amp;charstrings);
1430 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__dict_get_ints(&amp;topdict,&#32;0x100&#32;|&#32;6,&#32;1,&#32;&amp;cstype);
1431 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__dict_get_ints(&amp;topdict,&#32;0x100&#32;|&#32;36,&#32;1,&#32;&amp;fdarrayoff);
1432 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__dict_get_ints(&amp;topdict,&#32;0x100&#32;|&#32;37,&#32;1,&#32;&amp;fdselectoff);
1433 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2">subrs</link>&#32;=&#32;stbtt__get_subrs(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;topdict);
1434 
1435 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;only&#32;support&#32;Type&#32;2&#32;charstrings</emphasis>
1436 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cstype&#32;!=&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1437 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(charstrings&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1438 
1439 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fdarrayoff)&#32;{
1440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;looks&#32;like&#32;a&#32;CID&#32;font</emphasis>
1441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!fdselectoff)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_seek(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;fdarrayoff);
1443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677">fontdicts</link>&#32;=&#32;stbtt__cff_get_index(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71">fdselect</link>&#32;=&#32;stbtt__buf_range(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;fdselectoff,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.size-fdselectoff);
1445 &#32;&#32;&#32;&#32;&#32;&#32;}
1446 
1447 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_seek(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;charstrings);
1448 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082">charstrings</link>&#32;=&#32;stbtt__cff_get_index(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1449 &#32;&#32;&#32;}
1450 
1451 &#32;&#32;&#32;t&#32;=&#32;stbtt__find_table(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;fontstart,&#32;<emphasis role="stringliteral">&quot;maxp&quot;</emphasis>);
1452 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t)
1453 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d">numGlyphs</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+t+4);
1454 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1455 &#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d">numGlyphs</link>&#32;=&#32;0xffff;
1456 
1457 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>&#32;=&#32;-1;
1458 
1459 &#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;a&#32;cmap&#32;encoding&#32;table&#32;we&#32;understand&#32;*now*&#32;to&#32;avoid&#32;searching</emphasis>
1460 &#32;&#32;&#32;<emphasis role="comment">//&#32;later.&#32;(todo:&#32;could&#32;make&#32;this&#32;installable)</emphasis>
1461 &#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;same&#32;regardless&#32;of&#32;glyph.</emphasis>
1462 &#32;&#32;&#32;numTables&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;cmap&#32;+&#32;2);
1463 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189">index_map</link>&#32;=&#32;0;
1464 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;numTables;&#32;++i)&#32;{
1465 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;encoding_record&#32;=&#32;cmap&#32;+&#32;4&#32;+&#32;8&#32;*&#32;i;
1466 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;an&#32;encoding&#32;we&#32;understand:</emphasis>
1467 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+encoding_record))&#32;{
1468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4d29ca5db06e2ae647d1ec22548a9d2aa86f00e4c49cfec574b34090faa47f878">STBTT_PLATFORM_ID_MICROSOFT</link>:
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+encoding_record+2))&#32;{
1470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad1afd468cb4339144d0997ddcf04748af3b7a17fc226e7540f025d241f36f17d">STBTT_MS_EID_UNICODE_BMP</link>:
1471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad1afd468cb4339144d0997ddcf04748a08224d2a200bd947c6513926290f4640">STBTT_MS_EID_UNICODE_FULL</link>:
1472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MS/Unicode</emphasis>
1473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189">index_map</link>&#32;=&#32;cmap&#32;+&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+encoding_record+4);
1474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4d29ca5db06e2ae647d1ec22548a9d2aa7df9cd0e95e0b375d03348661b399b69">STBTT_PLATFORM_ID_UNICODE</link>:
1478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mac/iOS&#32;has&#32;these</emphasis>
1479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;all&#32;the&#32;encodingIDs&#32;are&#32;unicode,&#32;so&#32;we&#32;don&apos;t&#32;bother&#32;to&#32;check&#32;it</emphasis>
1480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189">index_map</link>&#32;=&#32;cmap&#32;+&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+encoding_record+4);
1481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1482 &#32;&#32;&#32;&#32;&#32;&#32;}
1483 &#32;&#32;&#32;}
1484 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189">index_map</link>&#32;==&#32;0)
1485 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1486 
1487 &#32;&#32;&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4">indexToLocFormat</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;+&#32;50);
1488 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1489 }
1490 
1491 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;unicode_codepoint)
1492 {
1493 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>;
1494 &#32;&#32;&#32;stbtt_uint32&#32;index_map&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189">index_map</link>;
1495 
1496 &#32;&#32;&#32;stbtt_uint16&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;0);
1497 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;apple&#32;byte&#32;encoding</emphasis>
1498 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;bytes&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;2);
1499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(unicode_codepoint&#32;&lt;&#32;bytes-6)
1500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttBYTE(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;6&#32;+&#32;unicode_codepoint);
1501 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1502 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;6)&#32;{
1503 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;6);
1504 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;8);
1505 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((stbtt_uint32)&#32;unicode_codepoint&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;&amp;&amp;&#32;(stbtt_uint32)&#32;unicode_codepoint&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)
1506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;10&#32;+&#32;(unicode_codepoint&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)*2);
1507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1508 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;2)&#32;{
1509 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(0);&#32;<emphasis role="comment">//&#32;@TODO:&#32;high-byte&#32;mapping&#32;for&#32;japanese/chinese/korean</emphasis>
1510 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1511 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;4)&#32;{&#32;<emphasis role="comment">//&#32;standard&#32;mapping&#32;for&#32;windows&#32;fonts:&#32;binary&#32;search&#32;collection&#32;of&#32;ranges</emphasis>
1512 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;segcount&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+6)&#32;&gt;&gt;&#32;1;
1513 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;searchRange&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+8)&#32;&gt;&gt;&#32;1;
1514 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;entrySelector&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+10);
1515 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;rangeShift&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+12)&#32;&gt;&gt;&#32;1;
1516 
1517 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;do&#32;a&#32;binary&#32;search&#32;of&#32;the&#32;segments</emphasis>
1518 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;endCount&#32;=&#32;index_map&#32;+&#32;14;
1519 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;<link linkend="_namespacestd_1a5a4354dff231af6d172e1f24befda7f2">search</link>&#32;=&#32;endCount;
1520 
1521 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(unicode_codepoint&#32;&gt;&#32;0xffff)
1522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1523 
1524 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;they&#32;lie&#32;from&#32;endCount&#32;..&#32;endCount&#32;+&#32;segCount</emphasis>
1525 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;searchRange&#32;is&#32;the&#32;nearest&#32;power&#32;of&#32;two,&#32;so...</emphasis>
1526 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(unicode_codepoint&#32;&gt;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;search&#32;+&#32;rangeShift*2))
1527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a5a4354dff231af6d172e1f24befda7f2">search</link>&#32;+=&#32;rangeShift*2;
1528 
1529 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;decrement&#32;to&#32;bias&#32;correctly&#32;to&#32;find&#32;smallest</emphasis>
1530 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a5a4354dff231af6d172e1f24befda7f2">search</link>&#32;-=&#32;2;
1531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(entrySelector)&#32;{
1532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>;
1533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;searchRange&#32;&gt;&gt;=&#32;1;
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;search&#32;+&#32;searchRange*2);
1535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(unicode_codepoint&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>)
1536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a5a4354dff231af6d172e1f24befda7f2">search</link>&#32;+=&#32;searchRange*2;
1537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--entrySelector;
1538 &#32;&#32;&#32;&#32;&#32;&#32;}
1539 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a5a4354dff231af6d172e1f24befda7f2">search</link>&#32;+=&#32;2;
1540 
1541 &#32;&#32;&#32;&#32;&#32;&#32;{
1542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>;
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;item&#32;=&#32;(stbtt_uint16)&#32;((search&#32;-&#32;endCount)&#32;&gt;&gt;&#32;1);
1544 
1545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(unicode_codepoint&#32;&lt;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;endCount&#32;+&#32;2*item));
1546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;14&#32;+&#32;segcount*2&#32;+&#32;2&#32;+&#32;2*item);
1547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(unicode_codepoint&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>)
1548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1549 
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;14&#32;+&#32;segcount*6&#32;+&#32;2&#32;+&#32;2*item);
1551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;==&#32;0)
1552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbtt_uint16)&#32;(unicode_codepoint&#32;+&#32;ttSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;index_map&#32;+&#32;14&#32;+&#32;segcount*4&#32;+&#32;2&#32;+&#32;2*item));
1553 
1554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;+&#32;(unicode_codepoint-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>)*2&#32;+&#32;index_map&#32;+&#32;14&#32;+&#32;segcount*6&#32;+&#32;2&#32;+&#32;2*item);
1555 &#32;&#32;&#32;&#32;&#32;&#32;}
1556 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;12&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;13)&#32;{
1557 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;ngroups&#32;=&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+12);
1558 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;low,high;
1559 &#32;&#32;&#32;&#32;&#32;&#32;low&#32;=&#32;0;&#32;high&#32;=&#32;(stbtt_int32)ngroups;
1560 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Binary&#32;search&#32;the&#32;right&#32;group.</emphasis>
1561 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(low&#32;&lt;&#32;high)&#32;{
1562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;mid&#32;=&#32;low&#32;+&#32;((high-low)&#32;&gt;&gt;&#32;1);&#32;<emphasis role="comment">//&#32;rounds&#32;down,&#32;so&#32;low&#32;&lt;=&#32;mid&#32;&lt;&#32;high</emphasis>
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;start_char&#32;=&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+16+mid*12);
1564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;end_char&#32;=&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+16+mid*12+4);
1565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((stbtt_uint32)&#32;unicode_codepoint&#32;&lt;&#32;start_char)
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;high&#32;=&#32;mid;
1567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((stbtt_uint32)&#32;unicode_codepoint&#32;&gt;&#32;end_char)
1568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;low&#32;=&#32;mid+1;
1569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;start_glyph&#32;=&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+index_map+16+mid*12+8);
1571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;==&#32;12)
1572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;start_glyph&#32;+&#32;unicode_codepoint-start_char;
1573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">//&#32;format&#32;==&#32;13</emphasis>
1574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;start_glyph;
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1576 &#32;&#32;&#32;&#32;&#32;&#32;}
1577 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;not&#32;found</emphasis>
1578 &#32;&#32;&#32;}
1579 &#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO</emphasis>
1580 &#32;&#32;&#32;STBTT_assert(0);
1581 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1582 }
1583 
1584 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795">stbtt_GetCodepointShape</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;unicode_codepoint,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;**vertices)
1585 {
1586 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(info,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,&#32;unicode_codepoint),&#32;vertices);
1587 }
1588 
1589 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt_setvertex(<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;stbtt_uint8&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;stbtt_int32&#32;cx,&#32;stbtt_int32&#32;cy)
1590 {
1591 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;type&#32;=&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
1592 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;x&#32;=&#32;(stbtt_int16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1593 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;y&#32;=&#32;(stbtt_int16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1594 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;cx&#32;=&#32;(stbtt_int16)&#32;cx;
1595 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;cy&#32;=&#32;(stbtt_int16)&#32;cy;
1596 }
1597 
1598 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__GetGlyfOffset(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index)
1599 {
1600 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;g1,g2;
1601 
1602 &#32;&#32;&#32;STBTT_assert(!info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>.<link linkend="_structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b">size</link>);
1603 
1604 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph_index&#32;&gt;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d">numGlyphs</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;<emphasis role="comment">//&#32;glyph&#32;index&#32;out&#32;of&#32;range</emphasis>
1605 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4">indexToLocFormat</link>&#32;&gt;=&#32;2)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;<emphasis role="comment">//&#32;unknown&#32;index-&gt;glyph&#32;map&#32;format</emphasis>
1606 
1607 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4">indexToLocFormat</link>&#32;==&#32;0)&#32;{
1608 &#32;&#32;&#32;&#32;&#32;&#32;g1&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>&#32;+&#32;ttUSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>&#32;+&#32;glyph_index&#32;*&#32;2)&#32;*&#32;2;
1609 &#32;&#32;&#32;&#32;&#32;&#32;g2&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>&#32;+&#32;ttUSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>&#32;+&#32;glyph_index&#32;*&#32;2&#32;+&#32;2)&#32;*&#32;2;
1610 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1611 &#32;&#32;&#32;&#32;&#32;&#32;g1&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>&#32;+&#32;ttULONG&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>&#32;+&#32;glyph_index&#32;*&#32;4);
1612 &#32;&#32;&#32;&#32;&#32;&#32;g2&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5">glyf</link>&#32;+&#32;ttULONG&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0">loca</link>&#32;+&#32;glyph_index&#32;*&#32;4&#32;+&#32;4);
1613 &#32;&#32;&#32;}
1614 
1615 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g1==g2&#32;?&#32;-1&#32;:&#32;g1;&#32;<emphasis role="comment">//&#32;if&#32;length&#32;is&#32;0,&#32;return&#32;-1</emphasis>
1616 }
1617 
1618 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__GetGlyphInfoT2(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1);
1619 
1620 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1accf148d2d285fd55178d9a401734ba92">stbtt_GetGlyphBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1)
1621 {
1622 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>.<link linkend="_structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b">size</link>)&#32;{
1623 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__GetGlyphInfoT2(info,&#32;glyph_index,&#32;x0,&#32;y0,&#32;x1,&#32;y1);
1624 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1625 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;stbtt__GetGlyfOffset(info,&#32;glyph_index);
1626 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1627 
1628 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0)&#32;*x0&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;2);
1629 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y0)&#32;*y0&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;4);
1630 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x1)&#32;*x1&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;6);
1631 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y1)&#32;*y1&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;8);
1632 &#32;&#32;&#32;}
1633 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1634 }
1635 
1636 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d">stbtt_GetCodepointBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1)
1637 {
1638 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1accf148d2d285fd55178d9a401734ba92">stbtt_GetGlyphBox</link>(info,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,codepoint),&#32;x0,y0,x1,y1);
1639 }
1640 
1641 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485">stbtt_IsGlyphEmpty</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index)
1642 {
1643 &#32;&#32;&#32;stbtt_int16&#32;numberOfContours;
1644 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>;
1645 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>.<link linkend="_structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b">size</link>)
1646 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__GetGlyphInfoT2(info,&#32;glyph_index,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;==&#32;0;
1647 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;stbtt__GetGlyfOffset(info,&#32;glyph_index);
1648 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1649 &#32;&#32;&#32;numberOfContours&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>);
1650 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;numberOfContours&#32;==&#32;0;
1651 }
1652 
1653 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__close_shape(<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_vertices,&#32;<emphasis role="keywordtype">int</emphasis>&#32;was_off,&#32;<emphasis role="keywordtype">int</emphasis>&#32;start_off,
1654 &#32;&#32;&#32;&#32;stbtt_int32&#32;sx,&#32;stbtt_int32&#32;sy,&#32;stbtt_int32&#32;scx,&#32;stbtt_int32&#32;scy,&#32;stbtt_int32&#32;cx,&#32;stbtt_int32&#32;cy)
1655 {
1656 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(start_off)&#32;{
1657 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(was_off)
1658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,&#32;(cx+scx)&gt;&gt;1,&#32;(cy+scy)&gt;&gt;1,&#32;cx,cy);
1659 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,&#32;sx,sy,scx,scy);
1660 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1661 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(was_off)
1662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,sx,sy,cx,cy);
1663 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>,sx,sy,0,0);
1665 &#32;&#32;&#32;}
1666 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num_vertices;
1667 }
1668 
1669 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__GetGlyphShapeTT(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;**pvertices)
1670 {
1671 &#32;&#32;&#32;stbtt_int16&#32;numberOfContours;
1672 &#32;&#32;&#32;stbtt_uint8&#32;*endPtsOfContours;
1673 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>;
1674 &#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices=0;
1675 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_vertices=0;
1676 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;stbtt__GetGlyfOffset(info,&#32;glyph_index);
1677 
1678 &#32;&#32;&#32;*pvertices&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1679 
1680 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1681 
1682 &#32;&#32;&#32;numberOfContours&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>);
1683 
1684 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(numberOfContours&#32;&gt;&#32;0)&#32;{
1685 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>=0,flagcount;
1686 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;ins,&#32;i,j=0,m,n,&#32;next_move,&#32;was_off=0,&#32;off,&#32;start_off=0;
1687 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,cx,cy,sx,sy,&#32;scx,scy;
1688 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*points;
1689 &#32;&#32;&#32;&#32;&#32;&#32;endPtsOfContours&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;10);
1690 &#32;&#32;&#32;&#32;&#32;&#32;ins&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;10&#32;+&#32;numberOfContours&#32;*&#32;2);
1691 &#32;&#32;&#32;&#32;&#32;&#32;points&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;10&#32;+&#32;numberOfContours&#32;*&#32;2&#32;+&#32;2&#32;+&#32;ins;
1692 
1693 &#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;1+ttUSHORT(endPtsOfContours&#32;+&#32;numberOfContours*2-2);
1694 
1695 &#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;n&#32;+&#32;2*numberOfContours;&#32;&#32;<emphasis role="comment">//&#32;a&#32;loose&#32;bound&#32;on&#32;how&#32;many&#32;vertices&#32;we&#32;might&#32;need</emphasis>
1696 &#32;&#32;&#32;&#32;&#32;&#32;vertices&#32;=&#32;(<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*)&#32;STBTT_malloc(m&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(vertices[0]),&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
1697 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(vertices&#32;==&#32;0)
1698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1699 
1700 &#32;&#32;&#32;&#32;&#32;&#32;next_move&#32;=&#32;0;
1701 &#32;&#32;&#32;&#32;&#32;&#32;flagcount=0;
1702 
1703 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;first&#32;pass,&#32;we&#32;load&#32;uninterpreted&#32;data&#32;into&#32;the&#32;allocated&#32;array</emphasis>
1704 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;above,&#32;shifted&#32;to&#32;the&#32;end&#32;of&#32;the&#32;array&#32;so&#32;we&#32;won&apos;t&#32;overwrite&#32;it&#32;when</emphasis>
1705 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;create&#32;our&#32;final&#32;data&#32;starting&#32;from&#32;the&#32;front</emphasis>
1706 
1707 &#32;&#32;&#32;&#32;&#32;&#32;off&#32;=&#32;m&#32;-&#32;n;&#32;<emphasis role="comment">//&#32;starting&#32;offset&#32;for&#32;uninterpreted&#32;data,&#32;regardless&#32;of&#32;how&#32;m&#32;ends&#32;up&#32;being&#32;calculated</emphasis>
1708 
1709 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;first&#32;load&#32;flags</emphasis>
1710 
1711 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;n;&#32;++i)&#32;{
1712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flagcount&#32;==&#32;0)&#32;{
1713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;=&#32;*points++;
1714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;8)
1715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flagcount&#32;=&#32;*points++;
1716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--flagcount;
1718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[off+i].<link linkend="_structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395">type</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>;
1719 &#32;&#32;&#32;&#32;&#32;&#32;}
1720 
1721 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;load&#32;x&#32;coordinates</emphasis>
1722 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;
1723 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;n;&#32;++i)&#32;{
1724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;=&#32;vertices[off+i].<link linkend="_structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395">type</link>;
1725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;2)&#32;{
1726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int16&#32;dx&#32;=&#32;*points++;
1727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;16)&#32;?&#32;dx&#32;:&#32;-dx;&#32;<emphasis role="comment">//&#32;???</emphasis>
1728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;16))&#32;{
1730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;(stbtt_int16)&#32;(points[0]*256&#32;+&#32;points[1]);
1731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points&#32;+=&#32;2;
1732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[off+i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>&#32;=&#32;(stbtt_int16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1735 &#32;&#32;&#32;&#32;&#32;&#32;}
1736 
1737 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;load&#32;y&#32;coordinates</emphasis>
1738 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=0;
1739 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;n;&#32;++i)&#32;{
1740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;=&#32;vertices[off+i].<link linkend="_structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395">type</link>;
1741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;4)&#32;{
1742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int16&#32;dy&#32;=&#32;*points++;
1743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;32)&#32;?&#32;dy&#32;:&#32;-dy;&#32;<emphasis role="comment">//&#32;???</emphasis>
1744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;32))&#32;{
1746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;(stbtt_int16)&#32;(points[0]*256&#32;+&#32;points[1]);
1747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points&#32;+=&#32;2;
1748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[off+i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>&#32;=&#32;(stbtt_int16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1751 &#32;&#32;&#32;&#32;&#32;&#32;}
1752 
1753 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;convert&#32;them&#32;to&#32;our&#32;format</emphasis>
1754 &#32;&#32;&#32;&#32;&#32;&#32;num_vertices=0;
1755 &#32;&#32;&#32;&#32;&#32;&#32;sx&#32;=&#32;sy&#32;=&#32;cx&#32;=&#32;cy&#32;=&#32;scx&#32;=&#32;scy&#32;=&#32;0;
1756 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;n;&#32;++i)&#32;{
1757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;=&#32;vertices[off+i].<link linkend="_structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395">type</link>;
1758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&#32;&#32;&#32;&#32;=&#32;(stbtt_int16)&#32;vertices[off+i].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&#32;&#32;&#32;&#32;=&#32;(stbtt_int16)&#32;vertices[off+i].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1760 
1761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(next_move&#32;==&#32;i)&#32;{
1762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;0)
1763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_vertices&#32;=&#32;stbtt__close_shape(vertices,&#32;num_vertices,&#32;was_off,&#32;start_off,&#32;sx,sy,scx,scy,cx,cy);
1764 
1765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;start&#32;the&#32;new&#32;one</emphasis>
1766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;start_off&#32;=&#32;!(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;1);
1767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(start_off)&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;start&#32;off&#32;with&#32;an&#32;off-curve&#32;point,&#32;then&#32;when&#32;we&#32;need&#32;to&#32;find&#32;a&#32;point&#32;on&#32;the&#32;curve</emphasis>
1769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;where&#32;we&#32;can&#32;start,&#32;and&#32;we&#32;need&#32;to&#32;save&#32;some&#32;state&#32;for&#32;when&#32;we&#32;wraparound.</emphasis>
1770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scx&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scy&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(vertices[off+i+1].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;&amp;&#32;1))&#32;{
1773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;next&#32;point&#32;is&#32;also&#32;a&#32;curve&#32;point,&#32;so&#32;interpolate&#32;an&#32;on-point&#32;curve</emphasis>
1774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sx&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;(stbtt_int32)&#32;vertices[off+i+1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;&gt;&gt;&#32;1;
1775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;(stbtt_int32)&#32;vertices[off+i+1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;&gt;&gt;&#32;1;
1776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;otherwise&#32;just&#32;use&#32;the&#32;next&#32;point&#32;as&#32;our&#32;start&#32;point</emphasis>
1778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sx&#32;=&#32;(stbtt_int32)&#32;vertices[off+i+1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy&#32;=&#32;(stbtt_int32)&#32;vertices[off+i+1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;&#32;<emphasis role="comment">//&#32;we&apos;re&#32;using&#32;point&#32;i+1&#32;as&#32;the&#32;starting&#32;point,&#32;so&#32;skip&#32;it</emphasis>
1781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sx&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link>,sx,sy,0,0);
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was_off&#32;=&#32;0;
1788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next_move&#32;=&#32;1&#32;+&#32;ttUSHORT(endPtsOfContours+j*2);
1789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++j;
1790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;1))&#32;{&#32;<emphasis role="comment">//&#32;if&#32;it&apos;s&#32;a&#32;curve</emphasis>
1792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(was_off)&#32;<emphasis role="comment">//&#32;two&#32;off-curve&#32;control&#32;points&#32;in&#32;a&#32;row&#32;means&#32;interpolate&#32;an&#32;on-curve&#32;midpoint</emphasis>
1793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,&#32;(cx+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&gt;&gt;1,&#32;(cy+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&gt;&gt;1,&#32;cx,&#32;cy);
1794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cx&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cy&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was_off&#32;=&#32;1;
1797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(was_off)
1799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;cx,&#32;cy);
1800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;vertices[num_vertices++],&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,0,0);
1802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was_off&#32;=&#32;0;
1803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1805 &#32;&#32;&#32;&#32;&#32;&#32;}
1806 &#32;&#32;&#32;&#32;&#32;&#32;num_vertices&#32;=&#32;stbtt__close_shape(vertices,&#32;num_vertices,&#32;was_off,&#32;start_off,&#32;sx,sy,scx,scy,cx,cy);
1807 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(numberOfContours&#32;&lt;&#32;0)&#32;{
1808 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compound&#32;shapes.</emphasis>
1809 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;more&#32;=&#32;1;
1810 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;10;
1811 &#32;&#32;&#32;&#32;&#32;&#32;num_vertices&#32;=&#32;0;
1812 &#32;&#32;&#32;&#32;&#32;&#32;vertices&#32;=&#32;0;
1813 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(more)&#32;{
1814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>,&#32;gidx;
1815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;comp_num_verts&#32;=&#32;0,&#32;i;
1816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*comp_verts&#32;=&#32;0,&#32;*tmp&#32;=&#32;0;
1817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mtx[6]&#32;=&#32;{1,0,0,1,0,0},&#32;m,&#32;n;
1818 
1819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gidx&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1821 
1822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;2)&#32;{&#32;<emphasis role="comment">//&#32;XY&#32;values</emphasis>
1823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;1)&#32;{&#32;<emphasis role="comment">//&#32;shorts</emphasis>
1824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[4]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[5]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[4]&#32;=&#32;ttCHAR(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=1;
1828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[5]&#32;=&#32;ttCHAR(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=1;
1829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;handle&#32;matching&#32;point</emphasis>
1833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(0);
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;(1&lt;&lt;3))&#32;{&#32;<emphasis role="comment">//&#32;WE_HAVE_A_SCALE</emphasis>
1836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[0]&#32;=&#32;mtx[3]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[1]&#32;=&#32;mtx[2]&#32;=&#32;0;
1838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;(1&lt;&lt;6))&#32;{&#32;<emphasis role="comment">//&#32;WE_HAVE_AN_X_AND_YSCALE</emphasis>
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[0]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[1]&#32;=&#32;mtx[2]&#32;=&#32;0;
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[3]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;(1&lt;&lt;7))&#32;{&#32;<emphasis role="comment">//&#32;WE_HAVE_A_TWO_BY_TWO</emphasis>
1843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[0]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[1]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[2]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mtx[3]&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)/16384.0f;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+=2;
1847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1848 
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;transformation&#32;scales.</emphasis>
1850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(float)&#32;STBTT_sqrt(mtx[0]*mtx[0]&#32;+&#32;mtx[1]*mtx[1]);
1851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;(float)&#32;STBTT_sqrt(mtx[2]*mtx[2]&#32;+&#32;mtx[3]*mtx[3]);
1852 
1853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;indexed&#32;glyph.</emphasis>
1854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;comp_num_verts&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(info,&#32;gidx,&#32;&amp;comp_verts);
1855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comp_num_verts&#32;&gt;&#32;0)&#32;{
1856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transform&#32;vertices.</emphasis>
1857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;comp_num_verts;&#32;++i)&#32;{
1858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;&amp;comp_verts[i];
1859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;y;
1861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;x&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>)(m&#32;*&#32;(mtx[0]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;mtx[2]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;mtx[4]));
1862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;y&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>)(n&#32;*&#32;(mtx[1]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;mtx[3]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;mtx[5]));
1863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;cx;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;cy;
1864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;cx&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>)(m&#32;*&#32;(mtx[0]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;mtx[2]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;mtx[4]));
1865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-&gt;cy&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>)(n&#32;*&#32;(mtx[1]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;mtx[3]*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;mtx[5]));
1866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Append&#32;vertices.</emphasis>
1868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;(<link linkend="_structstbtt__vertex">stbtt_vertex</link>*)STBTT_malloc((num_vertices+comp_num_verts)*<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structstbtt__vertex">stbtt_vertex</link>),&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
1869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tmp)&#32;{
1870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(vertices)&#32;STBTT_free(vertices,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
1871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comp_verts)&#32;STBTT_free(comp_verts,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_vertices&#32;&gt;&#32;0)&#32;STBTT_memcpy(tmp,&#32;vertices,&#32;num_vertices*<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structstbtt__vertex">stbtt_vertex</link>));
1875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_memcpy(tmp+num_vertices,&#32;comp_verts,&#32;comp_num_verts*<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structstbtt__vertex">stbtt_vertex</link>));
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(vertices)&#32;STBTT_free(vertices,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
1877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices&#32;=&#32;tmp;
1878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(comp_verts,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
1879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_vertices&#32;+=&#32;comp_num_verts;
1880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;More&#32;components&#32;?</emphasis>
1882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;more&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;(1&lt;&lt;5);
1883 &#32;&#32;&#32;&#32;&#32;&#32;}
1884 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1885 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;numberOfCounters&#32;==&#32;0,&#32;do&#32;nothing</emphasis>
1886 &#32;&#32;&#32;}
1887 
1888 &#32;&#32;&#32;*pvertices&#32;=&#32;vertices;
1889 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num_vertices;
1890 }
1891 
1892 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
1893 {
1894 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bounds;
1895 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;started;
1896 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;first_x,&#32;first_y;
1897 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1898 &#32;&#32;&#32;stbtt_int32&#32;min_x,&#32;max_x,&#32;min_y,&#32;max_y;
1899 
1900 &#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*pvertices;
1901 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_vertices;
1902 }&#32;stbtt__csctx;
1903 
1904 <emphasis role="preprocessor">#define&#32;STBTT__CSCTX_INIT(bounds)&#32;{bounds,0,&#32;0,0,&#32;0,0,&#32;0,0,0,0,&#32;NULL,&#32;0}</emphasis>
1905 
1906 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__track_vertex(stbtt__csctx&#32;*c,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
1907 {
1908 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;c-&gt;max_x&#32;||&#32;!c-&gt;started)&#32;c-&gt;max_x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1909 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;c-&gt;max_y&#32;||&#32;!c-&gt;started)&#32;c-&gt;max_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1910 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;&#32;c-&gt;min_x&#32;||&#32;!c-&gt;started)&#32;c-&gt;min_x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1911 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y&#32;&lt;&#32;c-&gt;min_y&#32;||&#32;!c-&gt;started)&#32;c-&gt;min_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1912 &#32;&#32;&#32;c-&gt;started&#32;=&#32;1;
1913 }
1914 
1915 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__csctx_v(stbtt__csctx&#32;*c,&#32;stbtt_uint8&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;stbtt_int32&#32;cx,&#32;stbtt_int32&#32;cy,&#32;stbtt_int32&#32;cx1,&#32;stbtt_int32&#32;cy1)
1916 {
1917 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c-&gt;bounds)&#32;{
1918 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__track_vertex(c,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
1919 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab6cd2670234c731eafba404d3a2470fd">STBTT_vcubic</link>)&#32;{
1920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__track_vertex(c,&#32;cx,&#32;cy);
1921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__track_vertex(c,&#32;cx1,&#32;cy1);
1922 &#32;&#32;&#32;&#32;&#32;&#32;}
1923 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1924 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_setvertex(&amp;c-&gt;pvertices[c-&gt;num_vertices],&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;cx,&#32;cy);
1925 &#32;&#32;&#32;&#32;&#32;&#32;c-&gt;pvertices[c-&gt;num_vertices].cx1&#32;=&#32;(stbtt_int16)&#32;cx1;
1926 &#32;&#32;&#32;&#32;&#32;&#32;c-&gt;pvertices[c-&gt;num_vertices].cy1&#32;=&#32;(stbtt_int16)&#32;cy1;
1927 &#32;&#32;&#32;}
1928 &#32;&#32;&#32;c-&gt;num_vertices++;
1929 }
1930 
1931 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__csctx_close_shape(stbtt__csctx&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>)
1932 {
1933 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;first_x&#32;!=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;first_y&#32;!=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y)
1934 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_v(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;first_x,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;first_y,&#32;0,&#32;0,&#32;0,&#32;0);
1935 }
1936 
1937 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__csctx_rmove_to(stbtt__csctx&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy)
1938 {
1939 &#32;&#32;&#32;stbtt__csctx_close_shape(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>);
1940 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;first_x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x&#32;+&#32;dx;
1941 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;first_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y&#32;+&#32;dy;
1942 &#32;&#32;&#32;stbtt__csctx_v(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y,&#32;0,&#32;0,&#32;0,&#32;0);
1943 }
1944 
1945 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__csctx_rline_to(stbtt__csctx&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy)
1946 {
1947 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x&#32;+=&#32;dx;
1948 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y&#32;+=&#32;dy;
1949 &#32;&#32;&#32;stbtt__csctx_v(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y,&#32;0,&#32;0,&#32;0,&#32;0);
1950 }
1951 
1952 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__csctx_rccurve_to(stbtt__csctx&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx3,&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy3)
1953 {
1954 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;cx1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x&#32;+&#32;dx1;
1955 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;cy1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y&#32;+&#32;dy1;
1956 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;cx2&#32;=&#32;cx1&#32;+&#32;dx2;
1957 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;cy2&#32;=&#32;cy1&#32;+&#32;dy2;
1958 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x&#32;=&#32;cx2&#32;+&#32;dx3;
1959 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y&#32;=&#32;cy2&#32;+&#32;dy3;
1960 &#32;&#32;&#32;stbtt__csctx_v(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab6cd2670234c731eafba404d3a2470fd">STBTT_vcubic</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;x,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a209c8e51e11ce41075280eea53ad018c">ctx</link>-&gt;y,&#32;(<emphasis role="keywordtype">int</emphasis>)cx1,&#32;(<emphasis role="keywordtype">int</emphasis>)cy1,&#32;(<emphasis role="keywordtype">int</emphasis>)cx2,&#32;(<emphasis role="keywordtype">int</emphasis>)cy2);
1961 }
1962 
1963 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__get_subr(<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;idx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1964 {
1965 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;stbtt__cff_index_count(&amp;idx);
1966 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bias&#32;=&#32;107;
1967 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;=&#32;33900)
1968 &#32;&#32;&#32;&#32;&#32;&#32;bias&#32;=&#32;32768;
1969 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;=&#32;1240)
1970 &#32;&#32;&#32;&#32;&#32;&#32;bias&#32;=&#32;1131;
1971 &#32;&#32;&#32;n&#32;+=&#32;bias;
1972 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&lt;&#32;0&#32;||&#32;n&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)
1973 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
1974 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__cff_index_get(idx,&#32;n);
1975 }
1976 
1977 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;stbtt__cid_get_glyph_subrs(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index)
1978 {
1979 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;fdselect&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71">fdselect</link>;
1980 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nranges,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;fmt,&#32;fdselector&#32;=&#32;-1,&#32;i;
1981 
1982 &#32;&#32;&#32;stbtt__buf_seek(&amp;fdselect,&#32;0);
1983 &#32;&#32;&#32;fmt&#32;=&#32;stbtt__buf_get8(&amp;fdselect);
1984 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmt&#32;==&#32;0)&#32;{
1985 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;untested</emphasis>
1986 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(&amp;fdselect,&#32;glyph_index);
1987 &#32;&#32;&#32;&#32;&#32;&#32;fdselector&#32;=&#32;stbtt__buf_get8(&amp;fdselect);
1988 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fmt&#32;==&#32;3)&#32;{
1989 &#32;&#32;&#32;&#32;&#32;&#32;nranges&#32;=&#32;stbtt__buf_get16(&amp;fdselect);
1990 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;stbtt__buf_get16(&amp;fdselect);
1991 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nranges;&#32;i++)&#32;{
1992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;stbtt__buf_get8(&amp;fdselect);
1993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;stbtt__buf_get16(&amp;fdselect);
1994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph_index&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;&amp;&amp;&#32;glyph_index&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>)&#32;{
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fdselector&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
1996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>;
1999 &#32;&#32;&#32;&#32;&#32;&#32;}
2000 &#32;&#32;&#32;}
2001 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fdselector&#32;==&#32;-1)&#32;stbtt__new_buf(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
2002 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__get_subrs(info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>,&#32;stbtt__cff_index_get(info-&gt;<link linkend="_structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677">fontdicts</link>,&#32;fdselector));
2003 }
2004 
2005 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__run_charstring(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;stbtt__csctx&#32;*c)
2006 {
2007 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;in_header&#32;=&#32;1,&#32;maskbits&#32;=&#32;0,&#32;subr_stack_height&#32;=&#32;0,&#32;sp&#32;=&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;i,&#32;b0;
2008 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;has_subrs&#32;=&#32;0,&#32;clear_stack;
2009 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s[48];
2010 &#32;&#32;&#32;<link linkend="_structstbtt____buf">stbtt__buf</link>&#32;subr_stack[10],&#32;subrs&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2">subrs</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
2011 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
2012 
2013 <emphasis role="preprocessor">#define&#32;STBTT__CSERR(s)&#32;(0)</emphasis>
2014 
2015 &#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;currently&#32;ignores&#32;the&#32;initial&#32;width&#32;value,&#32;which&#32;isn&apos;t&#32;needed&#32;if&#32;we&#32;have&#32;hmtx</emphasis>
2016 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;stbtt__cff_index_get(info-&gt;<link linkend="_structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082">charstrings</link>,&#32;glyph_index);
2017 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.cursor&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.size)&#32;{
2018 &#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
2019 &#32;&#32;&#32;&#32;&#32;&#32;clear_stack&#32;=&#32;1;
2020 &#32;&#32;&#32;&#32;&#32;&#32;b0&#32;=&#32;stbtt__buf_get8(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
2021 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(b0)&#32;{
2022 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;implement&#32;hinting</emphasis>
2023 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x13:&#32;<emphasis role="comment">//&#32;hintmask</emphasis>
2024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x14:&#32;<emphasis role="comment">//&#32;cntrmask</emphasis>
2025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(in_header)
2026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maskbits&#32;+=&#32;(sp&#32;/&#32;2);&#32;<emphasis role="comment">//&#32;implicit&#32;&quot;vstem&quot;</emphasis>
2027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_header&#32;=&#32;0;
2028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;(maskbits&#32;+&#32;7)&#32;/&#32;8);
2029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2030 
2031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x01:&#32;<emphasis role="comment">//&#32;hstem</emphasis>
2032 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x03:&#32;<emphasis role="comment">//&#32;vstem</emphasis>
2033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x12:&#32;<emphasis role="comment">//&#32;hstemhm</emphasis>
2034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x17:&#32;<emphasis role="comment">//&#32;vstemhm</emphasis>
2035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maskbits&#32;+=&#32;(sp&#32;/&#32;2);
2036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2037 
2038 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x15:&#32;<emphasis role="comment">//&#32;rmoveto</emphasis>
2039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_header&#32;=&#32;0;
2040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rmoveto&#32;stack&quot;</emphasis>);
2041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rmove_to(c,&#32;s[sp-2],&#32;s[sp-1]);
2042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x04:&#32;<emphasis role="comment">//&#32;vmoveto</emphasis>
2044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_header&#32;=&#32;0;
2045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;vmoveto&#32;stack&quot;</emphasis>);
2046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rmove_to(c,&#32;0,&#32;s[sp-1]);
2047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x16:&#32;<emphasis role="comment">//&#32;hmoveto</emphasis>
2049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_header&#32;=&#32;0;
2050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;hmoveto&#32;stack&quot;</emphasis>);
2051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rmove_to(c,&#32;s[sp-1],&#32;0);
2052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2053 
2054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x05:&#32;<emphasis role="comment">//&#32;rlineto</emphasis>
2055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rlineto&#32;stack&quot;</emphasis>);
2056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;+&#32;1&#32;&lt;&#32;sp;&#32;i&#32;+=&#32;2)
2057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rline_to(c,&#32;s[i],&#32;s[i+1]);
2058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2059 
2060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hlineto/vlineto&#32;and&#32;vhcurveto/hvcurveto&#32;alternate&#32;horizontal&#32;and&#32;vertical</emphasis>
2061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;starting&#32;from&#32;a&#32;different&#32;place.</emphasis>
2062 
2063 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x07:&#32;<emphasis role="comment">//&#32;vlineto</emphasis>
2064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;vlineto&#32;stack&quot;</emphasis>);
2065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;vlineto;
2066 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x06:&#32;<emphasis role="comment">//&#32;hlineto</emphasis>
2067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;hlineto&#32;stack&quot;</emphasis>);
2068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
2069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;sp)&#32;<emphasis role="keywordflow">break</emphasis>;
2070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rline_to(c,&#32;s[i],&#32;0);
2071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
2072 &#32;&#32;&#32;&#32;&#32;&#32;vlineto:
2073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;sp)&#32;<emphasis role="keywordflow">break</emphasis>;
2074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rline_to(c,&#32;0,&#32;s[i]);
2075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
2076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2078 
2079 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x1F:&#32;<emphasis role="comment">//&#32;hvcurveto</emphasis>
2080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;hvcurveto&#32;stack&quot;</emphasis>);
2081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;hvcurveto;
2082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x1E:&#32;<emphasis role="comment">//&#32;vhcurveto</emphasis>
2083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;vhcurveto&#32;stack&quot;</emphasis>);
2084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
2085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;3&#32;&gt;=&#32;sp)&#32;<emphasis role="keywordflow">break</emphasis>;
2086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;0,&#32;s[i],&#32;s[i+1],&#32;s[i+2],&#32;s[i+3],&#32;(sp&#32;-&#32;i&#32;==&#32;5)&#32;?&#32;s[i&#32;+&#32;4]&#32;:&#32;0.0f);
2087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;4;
2088 &#32;&#32;&#32;&#32;&#32;&#32;hvcurveto:
2089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;3&#32;&gt;=&#32;sp)&#32;<emphasis role="keywordflow">break</emphasis>;
2090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;s[i],&#32;0,&#32;s[i+1],&#32;s[i+2],&#32;(sp&#32;-&#32;i&#32;==&#32;5)&#32;?&#32;s[i+4]&#32;:&#32;0.0f,&#32;s[i+3]);
2091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;4;
2092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2094 
2095 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x08:&#32;<emphasis role="comment">//&#32;rrcurveto</emphasis>
2096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;6)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rcurveline&#32;stack&quot;</emphasis>);
2097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;+&#32;5&#32;&lt;&#32;sp;&#32;i&#32;+=&#32;6)
2098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;s[i],&#32;s[i+1],&#32;s[i+2],&#32;s[i+3],&#32;s[i+4],&#32;s[i+5]);
2099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2100 
2101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x18:&#32;<emphasis role="comment">//&#32;rcurveline</emphasis>
2102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;8)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rcurveline&#32;stack&quot;</emphasis>);
2103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;+&#32;5&#32;&lt;&#32;sp&#32;-&#32;2;&#32;i&#32;+=&#32;6)
2104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;s[i],&#32;s[i+1],&#32;s[i+2],&#32;s[i+3],&#32;s[i+4],&#32;s[i+5]);
2105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;1&#32;&gt;=&#32;sp)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rcurveline&#32;stack&quot;</emphasis>);
2106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rline_to(c,&#32;s[i],&#32;s[i+1]);
2107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2108 
2109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x19:&#32;<emphasis role="comment">//&#32;rlinecurve</emphasis>
2110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;8)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rlinecurve&#32;stack&quot;</emphasis>);
2111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;+&#32;1&#32;&lt;&#32;sp&#32;-&#32;6;&#32;i&#32;+=&#32;2)
2112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rline_to(c,&#32;s[i],&#32;s[i+1]);
2113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;5&#32;&gt;=&#32;sp)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;rlinecurve&#32;stack&quot;</emphasis>);
2114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;s[i],&#32;s[i+1],&#32;s[i+2],&#32;s[i+3],&#32;s[i+4],&#32;s[i+5]);
2115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2116 
2117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x1A:&#32;<emphasis role="comment">//&#32;vvcurveto</emphasis>
2118 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x1B:&#32;<emphasis role="comment">//&#32;hhcurveto</emphasis>
2119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;(vv|hh)curveto&#32;stack&quot;</emphasis>);
2120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;0.0;
2121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&amp;&#32;1)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;s[i];&#32;i++;&#32;}
2122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;+&#32;3&#32;&lt;&#32;sp;&#32;i&#32;+=&#32;4)&#32;{
2123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;==&#32;0x1B)
2124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;s[i],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;s[i+1],&#32;s[i+2],&#32;s[i+3],&#32;0.0);
2125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;s[i],&#32;s[i+1],&#32;s[i+2],&#32;0.0,&#32;s[i+3]);
2127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;0.0;
2128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2130 
2131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x0A:&#32;<emphasis role="comment">//&#32;callsubr</emphasis>
2132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!has_subrs)&#32;{
2133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71">fdselect</link>.<link linkend="_structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b">size</link>)
2134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subrs&#32;=&#32;stbtt__cid_get_glyph_subrs(info,&#32;glyph_index);
2135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has_subrs&#32;=&#32;1;
2136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fallthrough</emphasis>
2138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x1D:&#32;<emphasis role="comment">//&#32;callgsubr</emphasis>
2139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;call(g|)subr&#32;stack&quot;</emphasis>);
2140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;(int)&#32;s[--sp];
2141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(subr_stack_height&#32;&gt;=&#32;10)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;recursion&#32;limit&quot;</emphasis>);
2142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subr_stack[subr_stack_height++]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
2143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;stbtt__get_subr(b0&#32;==&#32;0x0A&#32;?&#32;subrs&#32;:&#32;info-&gt;gsubrs,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
2144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.size&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;subr&#32;not&#32;found&quot;</emphasis>);
2145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.cursor&#32;=&#32;0;
2146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clear_stack&#32;=&#32;0;
2147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2148 
2149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x0B:&#32;<emphasis role="comment">//&#32;return</emphasis>
2150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(subr_stack_height&#32;&lt;=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;return&#32;outside&#32;subr&quot;</emphasis>);
2151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;subr_stack[--subr_stack_height];
2152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clear_stack&#32;=&#32;0;
2153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2154 
2155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x0E:&#32;<emphasis role="comment">//&#32;endchar</emphasis>
2156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_close_shape(c);
2157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2158 
2159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x0C:&#32;{&#32;<emphasis role="comment">//&#32;two-byte&#32;escape</emphasis>
2160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx1,&#32;dx2,&#32;dx3,&#32;dx4,&#32;dx5,&#32;dx6,&#32;dy1,&#32;dy2,&#32;dy3,&#32;dy4,&#32;dy5,&#32;dy6;
2161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx,&#32;dy;
2162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b1&#32;=&#32;stbtt__buf_get8(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
2163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(b1)&#32;{
2164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;These&#32;&quot;flex&quot;&#32;implementations&#32;ignore&#32;the&#32;flex-depth&#32;and&#32;resolution,</emphasis>
2165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;always&#32;draw&#32;beziers.</emphasis>
2166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x22:&#32;<emphasis role="comment">//&#32;hflex</emphasis>
2167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;7)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;hflex&#32;stack&quot;</emphasis>);
2168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx1&#32;=&#32;s[0];
2169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx2&#32;=&#32;s[1];
2170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy2&#32;=&#32;s[2];
2171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx3&#32;=&#32;s[3];
2172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx4&#32;=&#32;s[4];
2173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx5&#32;=&#32;s[5];
2174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx6&#32;=&#32;s[6];
2175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx1,&#32;0,&#32;dx2,&#32;dy2,&#32;dx3,&#32;0);
2176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx4,&#32;0,&#32;dx5,&#32;-dy2,&#32;dx6,&#32;0);
2177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2178 
2179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x23:&#32;<emphasis role="comment">//&#32;flex</emphasis>
2180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;13)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;flex&#32;stack&quot;</emphasis>);
2181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx1&#32;=&#32;s[0];
2182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy1&#32;=&#32;s[1];
2183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx2&#32;=&#32;s[2];
2184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy2&#32;=&#32;s[3];
2185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx3&#32;=&#32;s[4];
2186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy3&#32;=&#32;s[5];
2187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx4&#32;=&#32;s[6];
2188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy4&#32;=&#32;s[7];
2189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx5&#32;=&#32;s[8];
2190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy5&#32;=&#32;s[9];
2191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx6&#32;=&#32;s[10];
2192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy6&#32;=&#32;s[11];
2193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//fd&#32;is&#32;s[12]</emphasis>
2194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx1,&#32;dy1,&#32;dx2,&#32;dy2,&#32;dx3,&#32;dy3);
2195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx4,&#32;dy4,&#32;dx5,&#32;dy5,&#32;dx6,&#32;dy6);
2196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2197 
2198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x24:&#32;<emphasis role="comment">//&#32;hflex1</emphasis>
2199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;9)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;hflex1&#32;stack&quot;</emphasis>);
2200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx1&#32;=&#32;s[0];
2201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy1&#32;=&#32;s[1];
2202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx2&#32;=&#32;s[2];
2203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy2&#32;=&#32;s[3];
2204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx3&#32;=&#32;s[4];
2205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx4&#32;=&#32;s[5];
2206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx5&#32;=&#32;s[6];
2207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy5&#32;=&#32;s[7];
2208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx6&#32;=&#32;s[8];
2209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx1,&#32;dy1,&#32;dx2,&#32;dy2,&#32;dx3,&#32;0);
2210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx4,&#32;0,&#32;dx5,&#32;dy5,&#32;dx6,&#32;-(dy1+dy2+dy5));
2211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2212 
2213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x25:&#32;<emphasis role="comment">//&#32;flex1</emphasis>
2214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&lt;&#32;11)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;flex1&#32;stack&quot;</emphasis>);
2215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx1&#32;=&#32;s[0];
2216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy1&#32;=&#32;s[1];
2217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx2&#32;=&#32;s[2];
2218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy2&#32;=&#32;s[3];
2219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx3&#32;=&#32;s[4];
2220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy3&#32;=&#32;s[5];
2221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx4&#32;=&#32;s[6];
2222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy4&#32;=&#32;s[7];
2223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx5&#32;=&#32;s[8];
2224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy5&#32;=&#32;s[9];
2225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx6&#32;=&#32;dy6&#32;=&#32;s[10];
2226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx&#32;=&#32;dx1+dx2+dx3+dx4+dx5;
2227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy&#32;=&#32;dy1+dy2+dy3+dy4+dy5;
2228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(STBTT_fabs(dx)&#32;&gt;&#32;STBTT_fabs(dy))
2229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy6&#32;=&#32;-dy;
2230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx6&#32;=&#32;-dx;
2232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx1,&#32;dy1,&#32;dx2,&#32;dy2,&#32;dx3,&#32;dy3);
2233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__csctx_rccurve_to(c,&#32;dx4,&#32;dy4,&#32;dx5,&#32;dy5,&#32;dx6,&#32;dy6);
2234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2235 
2236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
2237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;unimplemented&quot;</emphasis>);
2238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2239 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2240 
2241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
2242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;!=&#32;255&#32;&amp;&amp;&#32;b0&#32;!=&#32;28&#32;&amp;&amp;&#32;(b0&#32;&lt;&#32;32&#32;||&#32;b0&#32;&gt;&#32;254))
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;reserved&#32;operator&quot;</emphasis>);
2244 
2245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;push&#32;immediate</emphasis>
2246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b0&#32;==&#32;255)&#32;{
2247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;(float)(stbtt_int32)stbtt__buf_get32(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;/&#32;0x10000;
2248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__buf_skip(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;-1);
2250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;(float)(stbtt_int16)stbtt__cff_int(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
2251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sp&#32;&gt;=&#32;48)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;push&#32;stack&#32;overflow&quot;</emphasis>);
2253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s[sp++]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
2254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clear_stack&#32;=&#32;0;
2255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2256 &#32;&#32;&#32;&#32;&#32;&#32;}
2257 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(clear_stack)&#32;sp&#32;=&#32;0;
2258 &#32;&#32;&#32;}
2259 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBTT__CSERR(<emphasis role="stringliteral">&quot;no&#32;endchar&quot;</emphasis>);
2260 
2261 <emphasis role="preprocessor">#undef&#32;STBTT__CSERR</emphasis>
2262 }
2263 
2264 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__GetGlyphShapeT2(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;**pvertices)
2265 {
2266 &#32;&#32;&#32;<emphasis role="comment">//&#32;runs&#32;the&#32;charstring&#32;twice,&#32;once&#32;to&#32;count&#32;and&#32;once&#32;to&#32;output&#32;(to&#32;avoid&#32;realloc)</emphasis>
2267 &#32;&#32;&#32;stbtt__csctx&#32;count_ctx&#32;=&#32;STBTT__CSCTX_INIT(1);
2268 &#32;&#32;&#32;stbtt__csctx&#32;output_ctx&#32;=&#32;STBTT__CSCTX_INIT(0);
2269 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__run_charstring(info,&#32;glyph_index,&#32;&amp;count_ctx))&#32;{
2270 &#32;&#32;&#32;&#32;&#32;&#32;*pvertices&#32;=&#32;(<link linkend="_structstbtt__vertex">stbtt_vertex</link>*)STBTT_malloc(count_ctx.num_vertices*<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structstbtt__vertex">stbtt_vertex</link>),&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
2271 &#32;&#32;&#32;&#32;&#32;&#32;output_ctx.pvertices&#32;=&#32;*pvertices;
2272 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__run_charstring(info,&#32;glyph_index,&#32;&amp;output_ctx))&#32;{
2273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(output_ctx.num_vertices&#32;==&#32;count_ctx.num_vertices);
2274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;output_ctx.num_vertices;
2275 &#32;&#32;&#32;&#32;&#32;&#32;}
2276 &#32;&#32;&#32;}
2277 &#32;&#32;&#32;*pvertices&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2278 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2279 }
2280 
2281 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__GetGlyphInfoT2(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1)
2282 {
2283 &#32;&#32;&#32;stbtt__csctx&#32;c&#32;=&#32;STBTT__CSCTX_INIT(1);
2284 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbtt__run_charstring(info,&#32;glyph_index,&#32;&amp;c);
2285 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0)&#32;&#32;*x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;?&#32;c.min_x&#32;:&#32;0;
2286 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y0)&#32;&#32;*y0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;?&#32;c.min_y&#32;:&#32;0;
2287 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x1)&#32;&#32;*x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;?&#32;c.max_x&#32;:&#32;0;
2288 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y1)&#32;&#32;*y1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;?&#32;c.max_y&#32;:&#32;0;
2289 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;?&#32;c.num_vertices&#32;:&#32;0;
2290 }
2291 
2292 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;**pvertices)
2293 {
2294 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4">cff</link>.<link linkend="_structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b">size</link>)
2295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__GetGlyphShapeTT(info,&#32;glyph_index,&#32;pvertices);
2296 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2297 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt__GetGlyphShapeT2(info,&#32;glyph_index,&#32;pvertices);
2298 }
2299 
2300 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a">stbtt_GetGlyphHMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph_index,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*advanceWidth,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*leftSideBearing)
2301 {
2302 &#32;&#32;&#32;stbtt_uint16&#32;numOfLongHorMetrics&#32;=&#32;ttUSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;+&#32;34);
2303 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph_index&#32;&lt;&#32;numOfLongHorMetrics)&#32;{
2304 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(advanceWidth)&#32;&#32;&#32;&#32;&#32;*advanceWidth&#32;&#32;&#32;&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>&#32;+&#32;4*glyph_index);
2305 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(leftSideBearing)&#32;&#32;*leftSideBearing&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>&#32;+&#32;4*glyph_index&#32;+&#32;2);
2306 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2307 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(advanceWidth)&#32;&#32;&#32;&#32;&#32;*advanceWidth&#32;&#32;&#32;&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>&#32;+&#32;4*(numOfLongHorMetrics-1));
2308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(leftSideBearing)&#32;&#32;*leftSideBearing&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1">hmtx</link>&#32;+&#32;4*numOfLongHorMetrics&#32;+&#32;2*(glyph_index&#32;-&#32;numOfLongHorMetrics));
2309 &#32;&#32;&#32;}
2310 }
2311 
2312 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e">stbtt_GetKerningTableLength</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info)
2313 {
2314 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>;
2315 
2316 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;only&#32;look&#32;at&#32;the&#32;first&#32;table.&#32;it&#32;must&#32;be&#32;&apos;horizontal&apos;&#32;and&#32;format&#32;0.</emphasis>
2317 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>)
2318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2319 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+2)&#32;&lt;&#32;1)&#32;<emphasis role="comment">//&#32;number&#32;of&#32;tables,&#32;need&#32;at&#32;least&#32;1</emphasis>
2320 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2321 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+8)&#32;!=&#32;1)&#32;<emphasis role="comment">//&#32;horizontal&#32;flag&#32;must&#32;be&#32;set&#32;in&#32;format</emphasis>
2322 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2323 
2324 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+10);
2325 }
2326 
2327 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3">stbtt_GetKerningTable</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link>*&#32;<link linkend="_classtable">table</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;table_length)
2328 {
2329 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>;
2330 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;<link linkend="_namespacelength">length</link>;
2331 
2332 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;only&#32;look&#32;at&#32;the&#32;first&#32;table.&#32;it&#32;must&#32;be&#32;&apos;horizontal&apos;&#32;and&#32;format&#32;0.</emphasis>
2333 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>)
2334 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2335 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+2)&#32;&lt;&#32;1)&#32;<emphasis role="comment">//&#32;number&#32;of&#32;tables,&#32;need&#32;at&#32;least&#32;1</emphasis>
2336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2337 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+8)&#32;!=&#32;1)&#32;<emphasis role="comment">//&#32;horizontal&#32;flag&#32;must&#32;be&#32;set&#32;in&#32;format</emphasis>
2338 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2339 
2340 &#32;&#32;&#32;<link linkend="_namespacelength">length</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+10);
2341 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(table_length&#32;&lt;&#32;<link linkend="_namespacelength">length</link>)
2342 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacelength">length</link>&#32;=&#32;table_length;
2343 
2344 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;<link linkend="_namespacelength">length</link>;&#32;k++)
2345 &#32;&#32;&#32;{
2346 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classtable">table</link>[k].glyph1&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+18+(k*6));
2347 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classtable">table</link>[k].glyph2&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+20+(k*6));
2348 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classtable">table</link>[k].advance&#32;=&#32;ttSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+22+(k*6));
2349 &#32;&#32;&#32;}
2350 
2351 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacelength">length</link>;
2352 }
2353 
2354 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;stbtt__GetGlyphKernInfoAdvance(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph2)
2355 {
2356 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>;
2357 &#32;&#32;&#32;stbtt_uint32&#32;needle,&#32;straw;
2358 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,&#32;m;
2359 
2360 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;only&#32;look&#32;at&#32;the&#32;first&#32;table.&#32;it&#32;must&#32;be&#32;&apos;horizontal&apos;&#32;and&#32;format&#32;0.</emphasis>
2361 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>)
2362 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2363 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+2)&#32;&lt;&#32;1)&#32;<emphasis role="comment">//&#32;number&#32;of&#32;tables,&#32;need&#32;at&#32;least&#32;1</emphasis>
2364 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2365 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+8)&#32;!=&#32;1)&#32;<emphasis role="comment">//&#32;horizontal&#32;flag&#32;must&#32;be&#32;set&#32;in&#32;format</emphasis>
2366 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2367 
2368 &#32;&#32;&#32;l&#32;=&#32;0;
2369 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+10)&#32;-&#32;1;
2370 &#32;&#32;&#32;needle&#32;=&#32;glyph1&#32;&lt;&lt;&#32;16&#32;|&#32;glyph2;
2371 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
2372 &#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(l&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;&gt;&gt;&#32;1;
2373 &#32;&#32;&#32;&#32;&#32;&#32;straw&#32;=&#32;ttULONG(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+18+(m*6));&#32;<emphasis role="comment">//&#32;note:&#32;unaligned&#32;read</emphasis>
2374 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&lt;&#32;straw)
2375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;m&#32;-&#32;1;
2376 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&gt;&#32;straw)
2377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;m&#32;+&#32;1;
2378 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+22+(m*6));
2380 &#32;&#32;&#32;}
2381 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2382 }
2383 
2384 <emphasis role="keyword">static</emphasis>&#32;stbtt_int32&#32;&#32;stbtt__GetCoverageIndex(stbtt_uint8&#32;*coverageTable,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph)
2385 {
2386 &#32;&#32;&#32;&#32;stbtt_uint16&#32;coverageFormat&#32;=&#32;ttUSHORT(coverageTable);
2387 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(coverageFormat)&#32;{
2388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;{
2389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;glyphCount&#32;=&#32;ttUSHORT(coverageTable&#32;+&#32;2);
2390 
2391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Binary&#32;search.</emphasis>
2392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;l=0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>=glyphCount-1,&#32;m;
2393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;straw,&#32;needle=glyph;
2394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
2395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*glyphArray&#32;=&#32;coverageTable&#32;+&#32;4;
2396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;glyphID;
2397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(l&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;&gt;&gt;&#32;1;
2398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glyphID&#32;=&#32;ttUSHORT(glyphArray&#32;+&#32;2&#32;*&#32;m);
2399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;straw&#32;=&#32;glyphID;
2400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&lt;&#32;straw)
2401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;m&#32;-&#32;1;
2402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&gt;&#32;straw)
2403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;m&#32;+&#32;1;
2404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
2406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2409 
2410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;{
2411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;rangeCount&#32;=&#32;ttUSHORT(coverageTable&#32;+&#32;2);
2412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*rangeArray&#32;=&#32;coverageTable&#32;+&#32;4;
2413 
2414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Binary&#32;search.</emphasis>
2415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;l=0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>=rangeCount-1,&#32;m;
2416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;strawStart,&#32;strawEnd,&#32;needle=glyph;
2417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
2418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*rangeRecord;
2419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(l&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;&gt;&gt;&#32;1;
2420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rangeRecord&#32;=&#32;rangeArray&#32;+&#32;6&#32;*&#32;m;
2421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strawStart&#32;=&#32;ttUSHORT(rangeRecord);
2422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strawEnd&#32;=&#32;ttUSHORT(rangeRecord&#32;+&#32;2);
2423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&lt;&#32;strawStart)
2424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;m&#32;-&#32;1;
2425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&gt;&#32;strawEnd)
2426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;m&#32;+&#32;1;
2427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;startCoverageIndex&#32;=&#32;ttUSHORT(rangeRecord&#32;+&#32;4);
2429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;startCoverageIndex&#32;+&#32;glyph&#32;-&#32;strawStart;
2430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2433 
2434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
2435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;There&#32;are&#32;no&#32;other&#32;cases.</emphasis>
2436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(0);
2437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2438 &#32;&#32;&#32;&#32;}
2439 
2440 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2441 }
2442 
2443 <emphasis role="keyword">static</emphasis>&#32;stbtt_int32&#32;&#32;stbtt__GetGlyphClass(stbtt_uint8&#32;*classDefTable,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph)
2444 {
2445 &#32;&#32;&#32;&#32;stbtt_uint16&#32;classDefFormat&#32;=&#32;ttUSHORT(classDefTable);
2446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(classDefFormat)
2447 &#32;&#32;&#32;&#32;{
2448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;{
2449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;startGlyphID&#32;=&#32;ttUSHORT(classDefTable&#32;+&#32;2);
2450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;glyphCount&#32;=&#32;ttUSHORT(classDefTable&#32;+&#32;4);
2451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*classDef1ValueArray&#32;=&#32;classDefTable&#32;+&#32;6;
2452 
2453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph&#32;&gt;=&#32;startGlyphID&#32;&amp;&amp;&#32;glyph&#32;&lt;&#32;startGlyphID&#32;+&#32;glyphCount)
2454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbtt_int32)ttUSHORT(classDef1ValueArray&#32;+&#32;2&#32;*&#32;(glyph&#32;-&#32;startGlyphID));
2455 
2456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;classDefTable&#32;=&#32;classDef1ValueArray&#32;+&#32;2&#32;*&#32;glyphCount;
2457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2458 
2459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;{
2460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;classRangeCount&#32;=&#32;ttUSHORT(classDefTable&#32;+&#32;2);
2461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*classRangeRecords&#32;=&#32;classDefTable&#32;+&#32;4;
2462 
2463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Binary&#32;search.</emphasis>
2464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;l=0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>=classRangeCount-1,&#32;m;
2465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;strawStart,&#32;strawEnd,&#32;needle=glyph;
2466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
2467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*classRangeRecord;
2468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(l&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;&gt;&gt;&#32;1;
2469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;classRangeRecord&#32;=&#32;classRangeRecords&#32;+&#32;6&#32;*&#32;m;
2470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strawStart&#32;=&#32;ttUSHORT(classRangeRecord);
2471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strawEnd&#32;=&#32;ttUSHORT(classRangeRecord&#32;+&#32;2);
2472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&lt;&#32;strawStart)
2473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;m&#32;-&#32;1;
2474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&gt;&#32;strawEnd)
2475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;m&#32;+&#32;1;
2476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbtt_int32)ttUSHORT(classRangeRecord&#32;+&#32;4);
2478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2479 
2480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;classDefTable&#32;=&#32;classRangeRecords&#32;+&#32;6&#32;*&#32;classRangeCount;
2481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2482 
2483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
2484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;There&#32;are&#32;no&#32;other&#32;cases.</emphasis>
2485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(0);
2486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2487 &#32;&#32;&#32;&#32;}
2488 
2489 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2490 }
2491 
2492 <emphasis role="comment">//&#32;Define&#32;to&#32;STBTT_assert(x)&#32;if&#32;you&#32;want&#32;to&#32;break&#32;on&#32;unimplemented&#32;formats.</emphasis>
2493 <emphasis role="preprocessor">#define&#32;STBTT_GPOS_TODO_assert(x)</emphasis>
2494 
2495 <emphasis role="keyword">static</emphasis>&#32;stbtt_int32&#32;&#32;stbtt__GetGlyphGPOSInfoAdvance(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph2)
2496 {
2497 &#32;&#32;&#32;&#32;stbtt_uint16&#32;lookupListOffset;
2498 &#32;&#32;&#32;&#32;stbtt_uint8&#32;*lookupList;
2499 &#32;&#32;&#32;&#32;stbtt_uint16&#32;lookupCount;
2500 &#32;&#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
2501 &#32;&#32;&#32;&#32;stbtt_int32&#32;i;
2502 
2503 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022">gpos</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2504 
2505 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022">gpos</link>;
2506 
2507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+0)&#32;!=&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;Major&#32;version&#32;1</emphasis>
2508 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+2)&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;Minor&#32;version&#32;0</emphasis>
2509 
2510 &#32;&#32;&#32;&#32;lookupListOffset&#32;=&#32;ttUSHORT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+8);
2511 &#32;&#32;&#32;&#32;lookupList&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;lookupListOffset;
2512 &#32;&#32;&#32;&#32;lookupCount&#32;=&#32;ttUSHORT(lookupList);
2513 
2514 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&lt;lookupCount;&#32;++i)&#32;{
2515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;lookupOffset&#32;=&#32;ttUSHORT(lookupList&#32;+&#32;2&#32;+&#32;2&#32;*&#32;i);
2516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*lookupTable&#32;=&#32;lookupList&#32;+&#32;lookupOffset;
2517 
2518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;lookupType&#32;=&#32;ttUSHORT(lookupTable);
2519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;subTableCount&#32;=&#32;ttUSHORT(lookupTable&#32;+&#32;4);
2520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*subTableOffsets&#32;=&#32;lookupTable&#32;+&#32;6;
2521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(lookupType)&#32;{
2522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;{&#32;<emphasis role="comment">//&#32;Pair&#32;Adjustment&#32;Positioning&#32;Subtable</emphasis>
2523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;sti;
2524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(sti=0;&#32;sti&lt;subTableCount;&#32;sti++)&#32;{
2525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;subtableOffset&#32;=&#32;ttUSHORT(subTableOffsets&#32;+&#32;2&#32;*&#32;sti);
2526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="_classtable">table</link>&#32;=&#32;lookupTable&#32;+&#32;subtableOffset;
2527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;posFormat&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>);
2528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;coverageOffset&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;2);
2529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;coverageIndex&#32;=&#32;stbtt__GetCoverageIndex(<link linkend="_classtable">table</link>&#32;+&#32;coverageOffset,&#32;glyph1);
2530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(coverageIndex&#32;==&#32;-1)&#32;<emphasis role="keywordflow">continue</emphasis>;
2531 
2532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(posFormat)&#32;{
2533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;{
2534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;l,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,&#32;m;
2535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;straw,&#32;needle;
2536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;valueFormat1&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;4);
2537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;valueFormat2&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;6);
2538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;valueRecordPairSizeInBytes&#32;=&#32;2;
2539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;pairSetCount&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;8);
2540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;pairPosOffset&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;10&#32;+&#32;2&#32;*&#32;coverageIndex);
2541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*pairValueTable&#32;=&#32;<link linkend="_classtable">table</link>&#32;+&#32;pairPosOffset;
2542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;pairValueCount&#32;=&#32;ttUSHORT(pairValueTable);
2543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*pairValueArray&#32;=&#32;pairValueTable&#32;+&#32;2;
2544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Support&#32;more&#32;formats.</emphasis>
2545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_GPOS_TODO_assert(valueFormat1&#32;==&#32;4);
2546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valueFormat1&#32;!=&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_GPOS_TODO_assert(valueFormat2&#32;==&#32;0);
2548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valueFormat2&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2549 
2550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(coverageIndex&#32;&lt;&#32;pairSetCount);
2551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT__NOTUSED(pairSetCount);
2552 
2553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;needle=glyph2;
2554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>=pairValueCount-1;
2555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l=0;
2556 
2557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Binary&#32;search.</emphasis>
2558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
2559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;secondGlyph;
2560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*pairValue;
2561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(l&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;&gt;&gt;&#32;1;
2562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pairValue&#32;=&#32;pairValueArray&#32;+&#32;(2&#32;+&#32;valueRecordPairSizeInBytes)&#32;*&#32;m;
2563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;secondGlyph&#32;=&#32;ttUSHORT(pairValue);
2564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;straw&#32;=&#32;secondGlyph;
2565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&lt;&#32;straw)
2566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;m&#32;-&#32;1;
2567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(needle&#32;&gt;&#32;straw)
2568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;m&#32;+&#32;1;
2569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int16&#32;xAdvance&#32;=&#32;ttSHORT(pairValue&#32;+&#32;2);
2571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xAdvance;
2572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2575 
2576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;{
2577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;valueFormat1&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;4);
2578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;valueFormat2&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;6);
2579 
2580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;classDef1Offset&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;8);
2581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;classDef2Offset&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;10);
2582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph1class&#32;=&#32;stbtt__GetGlyphClass(<link linkend="_classtable">table</link>&#32;+&#32;classDef1Offset,&#32;glyph1);
2583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph2class&#32;=&#32;stbtt__GetGlyphClass(<link linkend="_classtable">table</link>&#32;+&#32;classDef2Offset,&#32;glyph2);
2584 
2585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;class1Count&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;12);
2586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;class2Count&#32;=&#32;ttUSHORT(<link linkend="_classtable">table</link>&#32;+&#32;14);
2587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(glyph1class&#32;&lt;&#32;class1Count);
2588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(glyph2class&#32;&lt;&#32;class2Count);
2589 
2590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Support&#32;more&#32;formats.</emphasis>
2591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_GPOS_TODO_assert(valueFormat1&#32;==&#32;4);
2592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valueFormat1&#32;!=&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_GPOS_TODO_assert(valueFormat2&#32;==&#32;0);
2594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valueFormat2&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2595 
2596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph1class&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;glyph1class&#32;&lt;&#32;class1Count&#32;&amp;&amp;&#32;glyph2class&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;glyph2class&#32;&lt;&#32;class2Count)&#32;{
2597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*class1Records&#32;=&#32;<link linkend="_classtable">table</link>&#32;+&#32;16;
2598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*class2Records&#32;=&#32;class1Records&#32;+&#32;2&#32;*&#32;(glyph1class&#32;*&#32;class2Count);
2599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int16&#32;xAdvance&#32;=&#32;ttSHORT(class2Records&#32;+&#32;2&#32;*&#32;glyph2class);
2600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xAdvance;
2601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
2603 
2604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
2605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;There&#32;are&#32;no&#32;other&#32;cases.</emphasis>
2606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(0);
2607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2613 
2614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
2615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Implement&#32;other&#32;stuff.</emphasis>
2616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2618 &#32;&#32;&#32;&#32;}
2619 
2620 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2621 }
2622 
2623 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1acf0b09547b1c2002ad0266802224552d">stbtt_GetGlyphKernAdvance</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;g1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;g2)
2624 {
2625 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xAdvance&#32;=&#32;0;
2626 
2627 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022">gpos</link>)
2628 &#32;&#32;&#32;&#32;&#32;&#32;xAdvance&#32;+=&#32;stbtt__GetGlyphGPOSInfoAdvance(info,&#32;g1,&#32;g2);
2629 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>)
2630 &#32;&#32;&#32;&#32;&#32;&#32;xAdvance&#32;+=&#32;stbtt__GetGlyphKernInfoAdvance(info,&#32;g1,&#32;g2);
2631 
2632 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xAdvance;
2633 }
2634 
2635 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a83703ede616bacefc0312ef2803774a1">stbtt_GetCodepointKernAdvance</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch2)
2636 {
2637 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!info-&gt;<link linkend="_structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37">kern</link>&#32;&amp;&amp;&#32;!info-&gt;<link linkend="_structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022">gpos</link>)&#32;<emphasis role="comment">//&#32;if&#32;no&#32;kerning&#32;table,&#32;don&apos;t&#32;waste&#32;time&#32;looking&#32;up&#32;both&#32;codepoint-&gt;glyphs</emphasis>
2638 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2639 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1acf0b09547b1c2002ad0266802224552d">stbtt_GetGlyphKernAdvance</link>(info,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,ch1),&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,ch2));
2640 }
2641 
2642 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7">stbtt_GetCodepointHMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*advanceWidth,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*leftSideBearing)
2643 {
2644 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a">stbtt_GetGlyphHMetrics</link>(info,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,codepoint),&#32;advanceWidth,&#32;leftSideBearing);
2645 }
2646 
2647 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0">stbtt_GetFontVMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ascent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*descent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*lineGap)
2648 {
2649 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ascent&#32;)&#32;*ascent&#32;&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;+&#32;4);
2650 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(descent)&#32;*descent&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;+&#32;6);
2651 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineGap)&#32;*lineGap&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;+&#32;8);
2652 }
2653 
2654 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a12154e222685026a3cf315a1b5720f24">stbtt_GetFontVMetricsOS2</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*typoAscent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*typoDescent,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*typoLineGap)
2655 {
2656 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tab&#32;=&#32;stbtt__find_table(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d">fontstart</link>,&#32;<emphasis role="stringliteral">&quot;OS/2&quot;</emphasis>);
2657 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tab)
2658 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2659 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(typoAscent&#32;)&#32;*typoAscent&#32;&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+tab&#32;+&#32;68);
2660 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(typoDescent)&#32;*typoDescent&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+tab&#32;+&#32;70);
2661 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(typoLineGap)&#32;*typoLineGap&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>+tab&#32;+&#32;72);
2662 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2663 }
2664 
2665 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639">stbtt_GetFontBoundingBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*x1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*y1)
2666 {
2667 &#32;&#32;&#32;*x0&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;+&#32;36);
2668 &#32;&#32;&#32;*y0&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;+&#32;38);
2669 &#32;&#32;&#32;*x1&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;+&#32;40);
2670 &#32;&#32;&#32;*y1&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;+&#32;42);
2671 }
2672 
2673 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
2674 {
2675 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fheight&#32;=&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;+&#32;4)&#32;-&#32;ttSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5">hhea</link>&#32;+&#32;6);
2676 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;/&#32;fheight;
2677 }
2678 
2679 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607">stbtt_ScaleForMappingEmToPixels</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>)
2680 {
2681 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;unitsPerEm&#32;=&#32;ttUSHORT(info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9">head</link>&#32;+&#32;18);
2682 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>&#32;/&#32;unitsPerEm;
2683 }
2684 
2685 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93">stbtt_FreeShape</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
2686 {
2687 &#32;&#32;&#32;STBTT_free(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
2688 }
2689 
2690 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09">stbtt_FindSVGDoc</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl)
2691 {
2692 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
2693 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>;
2694 &#32;&#32;&#32;stbtt_uint8&#32;*svg_doc_list&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;stbtt__get_svg((<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*)&#32;info);
2695 
2696 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numEntries&#32;=&#32;ttUSHORT(svg_doc_list);
2697 &#32;&#32;&#32;stbtt_uint8&#32;*svg_docs&#32;=&#32;svg_doc_list&#32;+&#32;2;
2698 
2699 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;numEntries;&#32;i++)&#32;{
2700 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint8&#32;*svg_doc&#32;=&#32;svg_docs&#32;+&#32;(12&#32;*&#32;i);
2701 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((gl&#32;&gt;=&#32;ttUSHORT(svg_doc))&#32;&amp;&amp;&#32;(gl&#32;&lt;=&#32;ttUSHORT(svg_doc&#32;+&#32;2)))
2702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;svg_doc;
2703 &#32;&#32;&#32;}
2704 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2705 }
2706 
2707 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17">stbtt_GetGlyphSVG</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;gl,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**svg)
2708 {
2709 &#32;&#32;&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>;
2710 &#32;&#32;&#32;stbtt_uint8&#32;*svg_doc;
2711 
2712 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>&#32;==&#32;0)
2713 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2714 
2715 &#32;&#32;&#32;svg_doc&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09">stbtt_FindSVGDoc</link>(info,&#32;gl);
2716 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(svg_doc&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2717 &#32;&#32;&#32;&#32;&#32;&#32;*svg&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3">svg</link>&#32;+&#32;ttULONG(svg_doc&#32;+&#32;4);
2718 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ttULONG(svg_doc&#32;+&#32;8);
2719 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2720 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2721 &#32;&#32;&#32;}
2722 }
2723 
2724 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a">stbtt_GetCodepointSVG</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;unicode_codepoint,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**svg)
2725 {
2726 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17">stbtt_GetGlyphSVG</link>(info,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,&#32;unicode_codepoint),&#32;svg);
2727 }
2728 
2730 <emphasis role="comment">//</emphasis>
2731 <emphasis role="comment">//&#32;antialiasing&#32;software&#32;rasterizer</emphasis>
2732 <emphasis role="comment">//</emphasis>
2733 
2734 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1)
2735 {
2736 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0=0,y0=0,x1,y1;&#32;<emphasis role="comment">//&#32;=0&#32;suppresses&#32;compiler&#32;warning</emphasis>
2737 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2stb__truetype_8h_1accf148d2d285fd55178d9a401734ba92">stbtt_GetGlyphBox</link>(font,&#32;glyph,&#32;&amp;x0,&amp;y0,&amp;x1,&amp;y1))&#32;{
2738 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;e.g.&#32;space&#32;character</emphasis>
2739 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix0)&#32;*ix0&#32;=&#32;0;
2740 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iy0)&#32;*iy0&#32;=&#32;0;
2741 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix1)&#32;*ix1&#32;=&#32;0;
2742 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iy1)&#32;*iy1&#32;=&#32;0;
2743 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2744 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;move&#32;to&#32;integral&#32;bboxes&#32;(treating&#32;pixels&#32;as&#32;little&#32;squares,&#32;what&#32;pixels&#32;get&#32;touched)?</emphasis>
2745 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix0)&#32;*ix0&#32;=&#32;STBTT_ifloor(&#32;x0&#32;*&#32;scale_x&#32;+&#32;shift_x);
2746 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iy0)&#32;*iy0&#32;=&#32;STBTT_ifloor(-y1&#32;*&#32;scale_y&#32;+&#32;shift_y);
2747 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix1)&#32;*ix1&#32;=&#32;STBTT_iceil&#32;(&#32;x1&#32;*&#32;scale_x&#32;+&#32;shift_x);
2748 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iy1)&#32;*iy1&#32;=&#32;STBTT_iceil&#32;(-y0&#32;*&#32;scale_y&#32;+&#32;shift_y);
2749 &#32;&#32;&#32;}
2750 }
2751 
2752 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53">stbtt_GetGlyphBitmapBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1)
2753 {
2754 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(font,&#32;glyph,&#32;scale_x,&#32;scale_y,0.0f,0.0f,&#32;ix0,&#32;iy0,&#32;ix1,&#32;iy1);
2755 }
2756 
2757 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a18fae014dd2261e554248ca737d05578">stbtt_GetCodepointBitmapBoxSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1)
2758 {
2759 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(font,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(font,codepoint),&#32;scale_x,&#32;scale_y,shift_x,shift_y,&#32;ix0,iy0,ix1,iy1);
2760 }
2761 
2762 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f">stbtt_GetCodepointBitmapBox</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ix1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*iy1)
2763 {
2764 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a18fae014dd2261e554248ca737d05578">stbtt_GetCodepointBitmapBoxSubpixel</link>(font,&#32;codepoint,&#32;scale_x,&#32;scale_y,0.0f,0.0f,&#32;ix0,iy0,ix1,iy1);
2765 }
2766 
2768 <emphasis role="comment">//</emphasis>
2769 <emphasis role="comment">//&#32;&#32;Rasterizer</emphasis>
2770 
2771 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__hheap_chunk
2772 {
2773 &#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__hheap_chunk&#32;*next;
2774 }&#32;stbtt__hheap_chunk;
2775 
2776 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__hheap
2777 {
2778 &#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__hheap_chunk&#32;*head;
2779 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;*first_free;
2780 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;num_remaining_in_head_chunk;
2781 }&#32;stbtt__hheap;
2782 
2783 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbtt__hheap_alloc(stbtt__hheap&#32;*hh,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
2784 {
2785 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hh-&gt;first_free)&#32;{
2786 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p&#32;=&#32;hh-&gt;first_free;
2787 &#32;&#32;&#32;&#32;&#32;&#32;hh-&gt;first_free&#32;=&#32;*&#32;(<emphasis role="keywordtype">void</emphasis>&#32;**)&#32;p;
2788 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p;
2789 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2790 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hh-&gt;num_remaining_in_head_chunk&#32;==&#32;0)&#32;{
2791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;&lt;&#32;32&#32;?&#32;2000&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;&lt;&#32;128&#32;?&#32;800&#32;:&#32;100);
2792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__hheap_chunk&#32;*c&#32;=&#32;(stbtt__hheap_chunk&#32;*)&#32;STBTT_malloc(<emphasis role="keyword">sizeof</emphasis>(stbtt__hheap_chunk)&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;userdata);
2793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
2794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c-&gt;next&#32;=&#32;hh-&gt;head;
2796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hh-&gt;head&#32;=&#32;c;
2797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hh-&gt;num_remaining_in_head_chunk&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;
2798 &#32;&#32;&#32;&#32;&#32;&#32;}
2799 &#32;&#32;&#32;&#32;&#32;&#32;--hh-&gt;num_remaining_in_head_chunk;
2800 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;(hh-&gt;head)&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(stbtt__hheap_chunk)&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;*&#32;hh-&gt;num_remaining_in_head_chunk;
2801 &#32;&#32;&#32;}
2802 }
2803 
2804 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__hheap_free(stbtt__hheap&#32;*hh,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p)
2805 {
2806 &#32;&#32;&#32;*(<emphasis role="keywordtype">void</emphasis>&#32;**)&#32;p&#32;=&#32;hh-&gt;first_free;
2807 &#32;&#32;&#32;hh-&gt;first_free&#32;=&#32;p;
2808 }
2809 
2810 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__hheap_cleanup(stbtt__hheap&#32;*hh,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
2811 {
2812 &#32;&#32;&#32;stbtt__hheap_chunk&#32;*c&#32;=&#32;hh-&gt;head;
2813 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(c)&#32;{
2814 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__hheap_chunk&#32;*n&#32;=&#32;c-&gt;next;
2815 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(c,&#32;userdata);
2816 &#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;n;
2817 &#32;&#32;&#32;}
2818 }
2819 
2820 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__edge&#32;{
2821 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0,y0,&#32;x1,y1;
2822 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>;
2823 }&#32;stbtt__edge;
2824 
2825 
2826 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__active_edge
2827 {
2828 &#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stbtt__active_edge&#32;*next;
2829 <emphasis role="preprocessor">&#32;&#32;&#32;#if&#32;STBTT_RASTERIZER_VERSION==1</emphasis>
2830 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,dx;
2831 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ey;
2832 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;direction;
2833 <emphasis role="preprocessor">&#32;&#32;&#32;#elif&#32;STBTT_RASTERIZER_VERSION==2</emphasis>
2834 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fx,fdx,fdy;
2835 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;direction;
2836 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sy;
2837 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ey;
2838 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
2839 <emphasis role="preprocessor">&#32;&#32;&#32;#error&#32;&quot;Unrecognized&#32;value&#32;of&#32;STBTT_RASTERIZER_VERSION&quot;</emphasis>
2840 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
2841 }&#32;stbtt__active_edge;
2842 
2843 <emphasis role="preprocessor">#if&#32;STBTT_RASTERIZER_VERSION&#32;==&#32;1</emphasis>
2844 <emphasis role="preprocessor">#define&#32;STBTT_FIXSHIFT&#32;&#32;&#32;10</emphasis>
2845 <emphasis role="preprocessor">#define&#32;STBTT_FIX&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;STBTT_FIXSHIFT)</emphasis>
2846 <emphasis role="preprocessor">#define&#32;STBTT_FIXMASK&#32;&#32;&#32;&#32;(STBTT_FIX-1)</emphasis>
2847 
2848 <emphasis role="keyword">static</emphasis>&#32;stbtt__active_edge&#32;*stbtt__new_active(stbtt__hheap&#32;*hh,&#32;stbtt__edge&#32;*e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;start_point,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
2849 {
2850 &#32;&#32;&#32;stbtt__active_edge&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;(stbtt__active_edge&#32;*)&#32;stbtt__hheap_alloc(hh,&#32;<emphasis role="keyword">sizeof</emphasis>(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>),&#32;userdata);
2851 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dxdy&#32;=&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x1&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x0)&#32;/&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y1&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0);
2852 &#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2853 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
2854 
2855 &#32;&#32;&#32;<emphasis role="comment">//&#32;round&#32;dx&#32;down&#32;to&#32;avoid&#32;overshooting</emphasis>
2856 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dxdy&#32;&lt;&#32;0)
2857 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dx&#32;=&#32;-STBTT_ifloor(STBTT_FIX&#32;*&#32;-dxdy);
2858 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2859 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dx&#32;=&#32;STBTT_ifloor(STBTT_FIX&#32;*&#32;dxdy);
2860 
2861 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;x&#32;=&#32;STBTT_ifloor(STBTT_FIX&#32;*&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x0&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dx&#32;*&#32;(start_point&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0));&#32;<emphasis role="comment">//&#32;use&#32;z-&gt;dx&#32;so&#32;when&#32;we&#32;offset&#32;later&#32;it&apos;s&#32;by&#32;the&#32;same&#32;amount</emphasis>
2862 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;x&#32;-=&#32;off_x&#32;*&#32;STBTT_FIX;
2863 
2864 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y1;
2865 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next&#32;=&#32;0;
2866 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;direction&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;invert&#32;?&#32;1&#32;:&#32;-1;
2867 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
2868 }
2869 <emphasis role="preprocessor">#elif&#32;STBTT_RASTERIZER_VERSION&#32;==&#32;2</emphasis>
2870 <emphasis role="keyword">static</emphasis>&#32;stbtt__active_edge&#32;*stbtt__new_active(stbtt__hheap&#32;*hh,&#32;stbtt__edge&#32;*e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;start_point,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
2871 {
2872 &#32;&#32;&#32;stbtt__active_edge&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;(stbtt__active_edge&#32;*)&#32;stbtt__hheap_alloc(hh,&#32;<emphasis role="keyword">sizeof</emphasis>(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>),&#32;userdata);
2873 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dxdy&#32;=&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x1&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x0)&#32;/&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y1&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0);
2874 &#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2875 &#32;&#32;&#32;<emphasis role="comment">//STBTT_assert(e-&gt;y0&#32;&lt;=&#32;start_point);</emphasis>
2876 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
2877 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fdx&#32;=&#32;dxdy;
2878 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fdy&#32;=&#32;dxdy&#32;!=&#32;0.0f&#32;?&#32;(1.0f/dxdy)&#32;:&#32;0.0f;
2879 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fx&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x0&#32;+&#32;dxdy&#32;*&#32;(start_point&#32;-&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0);
2880 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fx&#32;-=&#32;off_x;
2881 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;direction&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;invert&#32;?&#32;1.0f&#32;:&#32;-1.0f;
2882 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;sy&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0;
2883 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y1;
2884 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next&#32;=&#32;0;
2885 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
2886 }
2887 <emphasis role="preprocessor">#else</emphasis>
2888 <emphasis role="preprocessor">#error&#32;&quot;Unrecognized&#32;value&#32;of&#32;STBTT_RASTERIZER_VERSION&quot;</emphasis>
2889 <emphasis role="preprocessor">#endif</emphasis>
2890 
2891 <emphasis role="preprocessor">#if&#32;STBTT_RASTERIZER_VERSION&#32;==&#32;1</emphasis>
2892 <emphasis role="comment">//&#32;note:&#32;this&#32;routine&#32;clips&#32;fills&#32;that&#32;extend&#32;off&#32;the&#32;edges...&#32;ideally&#32;this</emphasis>
2893 <emphasis role="comment">//&#32;wouldn&apos;t&#32;happen,&#32;but&#32;it&#32;could&#32;happen&#32;if&#32;the&#32;truetype&#32;glyph&#32;bounding&#32;boxes</emphasis>
2894 <emphasis role="comment">//&#32;are&#32;wrong,&#32;or&#32;if&#32;the&#32;user&#32;supplies&#32;a&#32;too-small&#32;bitmap</emphasis>
2895 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__fill_active_edges(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*scanline,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;stbtt__active_edge&#32;*e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_weight)
2896 {
2897 &#32;&#32;&#32;<emphasis role="comment">//&#32;non-zero&#32;winding&#32;fill</emphasis>
2898 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0=0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>=0;
2899 
2900 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(e)&#32;{
2901 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;==&#32;0)&#32;{
2902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&apos;re&#32;currently&#32;at&#32;zero,&#32;we&#32;need&#32;to&#32;record&#32;the&#32;edge&#32;start&#32;point</emphasis>
2903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;+=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction;
2904 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x1&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;x;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;+=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction;
2906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;went&#32;to&#32;zero,&#32;we&#32;need&#32;to&#32;draw</emphasis>
2907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;==&#32;0)&#32;{
2908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;x0&#32;&gt;&gt;&#32;STBTT_FIXSHIFT;
2909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;x1&#32;&gt;&gt;&#32;STBTT_FIXSHIFT;
2910 
2911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;len&#32;&amp;&amp;&#32;j&#32;&gt;=&#32;0)&#32;{
2912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;j)&#32;{
2913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;x0,x1&#32;are&#32;the&#32;same&#32;pixel,&#32;so&#32;compute&#32;combined&#32;coverage</emphasis>
2914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[i]&#32;=&#32;scanline[i]&#32;+&#32;(stbtt_uint8)&#32;((x1&#32;-&#32;x0)&#32;*&#32;max_weight&#32;&gt;&gt;&#32;STBTT_FIXSHIFT);
2915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;0)&#32;<emphasis role="comment">//&#32;add&#32;antialiasing&#32;for&#32;x0</emphasis>
2917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[i]&#32;=&#32;scanline[i]&#32;+&#32;(stbtt_uint8)&#32;(((STBTT_FIX&#32;-&#32;(x0&#32;&amp;&#32;STBTT_FIXMASK))&#32;*&#32;max_weight)&#32;&gt;&gt;&#32;STBTT_FIXSHIFT);
2918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;-1;&#32;<emphasis role="comment">//&#32;clip</emphasis>
2920 
2921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;<emphasis role="comment">//&#32;add&#32;antialiasing&#32;for&#32;x1</emphasis>
2922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[j]&#32;=&#32;scanline[j]&#32;+&#32;(stbtt_uint8)&#32;(((x1&#32;&amp;&#32;STBTT_FIXMASK)&#32;*&#32;max_weight)&#32;&gt;&gt;&#32;STBTT_FIXSHIFT);
2923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;<emphasis role="comment">//&#32;clip</emphasis>
2925 
2926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(++i;&#32;i&#32;&lt;&#32;j;&#32;++i)&#32;<emphasis role="comment">//&#32;fill&#32;pixels&#32;between&#32;x0&#32;and&#32;x1</emphasis>
2927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[i]&#32;=&#32;scanline[i]&#32;+&#32;(stbtt_uint8)&#32;max_weight;
2928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2931 &#32;&#32;&#32;&#32;&#32;&#32;}
2932 
2933 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;next;
2934 &#32;&#32;&#32;}
2935 }
2936 
2937 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__rasterize_sorted_edges(<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;stbtt__edge&#32;*e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vsubsample,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_y,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
2938 {
2939 &#32;&#32;&#32;stbtt__hheap&#32;hh&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
2940 &#32;&#32;&#32;stbtt__active_edge&#32;*active&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2941 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,j=0;
2942 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_weight&#32;=&#32;(255&#32;/&#32;vsubsample);&#32;&#32;<emphasis role="comment">//&#32;weight&#32;per&#32;vertical&#32;scanline</emphasis>
2943 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s;&#32;<emphasis role="comment">//&#32;vertical&#32;subsample&#32;index</emphasis>
2944 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;scanline_data[512],&#32;*scanline;
2945 
2946 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w&#32;&gt;&#32;512)
2947 &#32;&#32;&#32;&#32;&#32;&#32;scanline&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;STBTT_malloc(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w,&#32;userdata);
2948 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2949 &#32;&#32;&#32;&#32;&#32;&#32;scanline&#32;=&#32;scanline_data;
2950 
2951 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;off_y&#32;*&#32;vsubsample;
2952 &#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].y0&#32;=&#32;(off_y&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;h)&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;vsubsample&#32;+&#32;1;
2953 
2954 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j&#32;&lt;&#32;result-&gt;h)&#32;{
2955 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memset(scanline,&#32;0,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w);
2956 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(s=0;&#32;s&#32;&lt;&#32;vsubsample;&#32;++s)&#32;{
2957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;center&#32;of&#32;pixel&#32;for&#32;this&#32;scanline</emphasis>
2958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scan_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;0.5f;
2959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;**<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;active;
2960 
2961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;update&#32;all&#32;active&#32;edges;</emphasis>
2962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;remove&#32;all&#32;active&#32;edges&#32;that&#32;terminate&#32;before&#32;the&#32;center&#32;of&#32;this&#32;scanline</emphasis>
2963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*step)&#32;{
2964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
2965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;&lt;=&#32;scan_y)&#32;{
2966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next;&#32;<emphasis role="comment">//&#32;delete&#32;from&#32;list</emphasis>
2967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;direction);
2968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;direction&#32;=&#32;0;
2969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__hheap_free(&amp;hh,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
2970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;x&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dx;&#32;<emphasis role="comment">//&#32;advance&#32;to&#32;position&#32;for&#32;current&#32;scanline</emphasis>
2972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;((*step)-&gt;next);&#32;<emphasis role="comment">//&#32;advance&#32;through&#32;list</emphasis>
2973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2975 
2976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;resort&#32;the&#32;list&#32;if&#32;needed</emphasis>
2977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
2978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;changed=0;
2979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;active;
2980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*step&#32;&amp;&amp;&#32;(*step)-&gt;next)&#32;{
2981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*step)-&gt;x&#32;&gt;&#32;(*step)-&gt;next-&gt;x)&#32;{
2982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*t&#32;=&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
2983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*q&#32;=&#32;t-&gt;next;
2984 
2985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t-&gt;next&#32;=&#32;q-&gt;next;
2986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q-&gt;next&#32;=&#32;t;
2987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;q;
2988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changed&#32;=&#32;1;
2989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;(*step)-&gt;next;
2991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!changed)&#32;<emphasis role="keywordflow">break</emphasis>;
2993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2994 
2995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;all&#32;edges&#32;that&#32;start&#32;before&#32;the&#32;center&#32;of&#32;this&#32;scanline&#32;--&#32;omit&#32;ones&#32;that&#32;also&#32;end&#32;on&#32;this&#32;scanline</emphasis>
2996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0&#32;&lt;=&#32;scan_y)&#32;{
2997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y1&#32;&gt;&#32;scan_y)&#32;{
2998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbtt__new_active(&amp;hh,&#32;e,&#32;off_x,&#32;scan_y,&#32;userdata);
2999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;insertion&#32;point</emphasis>
3001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(active&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
3002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;active&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
3003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;x&#32;&lt;&#32;active-&gt;x)&#32;{
3004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;at&#32;front</emphasis>
3005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next&#32;=&#32;active;
3006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;active&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
3007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;thing&#32;to&#32;insert&#32;AFTER</emphasis>
3009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*p&#32;=&#32;active;
3010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p-&gt;next&#32;&amp;&amp;&#32;p-&gt;next-&gt;x&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;x)
3011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;p-&gt;next;
3012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;at&#32;this&#32;point,&#32;p-&gt;next-&gt;x&#32;is&#32;NOT&#32;&lt;&#32;z-&gt;x</emphasis>
3013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next&#32;=&#32;p-&gt;next;
3014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p-&gt;next&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
3015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>;
3019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3020 
3021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;process&#32;all&#32;active&#32;edges&#32;in&#32;XOR&#32;fashion</emphasis>
3022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(active)
3023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__fill_active_edges(scanline,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w,&#32;active,&#32;max_weight);
3024 
3025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
3026 &#32;&#32;&#32;&#32;&#32;&#32;}
3027 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memcpy(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;pixels&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;stride,&#32;scanline,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w);
3028 &#32;&#32;&#32;&#32;&#32;&#32;++j;
3029 &#32;&#32;&#32;}
3030 
3031 &#32;&#32;&#32;stbtt__hheap_cleanup(&amp;hh,&#32;userdata);
3032 
3033 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scanline&#32;!=&#32;scanline_data)
3034 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(scanline,&#32;userdata);
3035 }
3036 
3037 <emphasis role="preprocessor">#elif&#32;STBTT_RASTERIZER_VERSION&#32;==&#32;2</emphasis>
3038 
3039 <emphasis role="comment">//&#32;the&#32;edge&#32;passed&#32;in&#32;here&#32;does&#32;not&#32;cross&#32;the&#32;vertical&#32;line&#32;at&#32;x&#32;or&#32;the&#32;vertical&#32;line&#32;at&#32;x+1</emphasis>
3040 <emphasis role="comment">//&#32;(i.e.&#32;it&#32;has&#32;already&#32;been&#32;clipped&#32;to&#32;those)</emphasis>
3041 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__handle_clipped_edge(<emphasis role="keywordtype">float</emphasis>&#32;*scanline,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;stbtt__active_edge&#32;*e,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y1)
3042 {
3043 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y0&#32;==&#32;y1)&#32;<emphasis role="keywordflow">return</emphasis>;
3044 &#32;&#32;&#32;STBTT_assert(y0&#32;&lt;&#32;y1);
3045 &#32;&#32;&#32;STBTT_assert(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy&#32;&lt;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey);
3046 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y0&#32;&gt;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey)&#32;<emphasis role="keywordflow">return</emphasis>;
3047 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y1&#32;&lt;&#32;e-&gt;sy)&#32;<emphasis role="keywordflow">return</emphasis>;
3048 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y0&#32;&lt;&#32;e-&gt;sy)&#32;{
3049 &#32;&#32;&#32;&#32;&#32;&#32;x0&#32;+=&#32;(x1-x0)&#32;*&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy&#32;-&#32;y0)&#32;/&#32;(y1-y0);
3050 &#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy;
3051 &#32;&#32;&#32;}
3052 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y1&#32;&gt;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey)&#32;{
3053 &#32;&#32;&#32;&#32;&#32;&#32;x1&#32;+=&#32;(x1-x0)&#32;*&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey&#32;-&#32;y1)&#32;/&#32;(y1-y0);
3054 &#32;&#32;&#32;&#32;&#32;&#32;y1&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey;
3055 &#32;&#32;&#32;}
3056 
3057 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
3058 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(x1&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1);
3059 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1)
3060 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(x1&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
3061 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
3062 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(x1&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
3063 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1)
3064 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(x1&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1);
3065 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3066 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(x1&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;x1&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1);
3067 
3068 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;x1&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
3069 &#32;&#32;&#32;&#32;&#32;&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]&#32;+=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction&#32;*&#32;(y1-y0);
3070 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1&#32;&amp;&amp;&#32;x1&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1)
3071 &#32;&#32;&#32;&#32;&#32;&#32;;
3072 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3073 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(x0&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;x0&#32;&lt;=&#32;x+1&#32;&amp;&amp;&#32;x1&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;x1&#32;&lt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1);
3074 &#32;&#32;&#32;&#32;&#32;&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]&#32;+=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction&#32;*&#32;(y1-y0)&#32;*&#32;(1-((x0-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)+(x1-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>))/2);&#32;<emphasis role="comment">//&#32;coverage&#32;=&#32;1&#32;-&#32;average&#32;x&#32;position</emphasis>
3075 &#32;&#32;&#32;}
3076 }
3077 
3078 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__fill_active_edges_new(<emphasis role="keywordtype">float</emphasis>&#32;*scanline,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scanline_fill,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;stbtt__active_edge&#32;*e,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y_top)
3079 {
3080 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y_bottom&#32;=&#32;y_top+1;
3081 
3082 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(e)&#32;{
3083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;brute&#32;force&#32;every&#32;pixel</emphasis>
3084 
3085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;intersection&#32;points&#32;with&#32;top&#32;&amp;&#32;bottom</emphasis>
3086 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey&#32;&gt;=&#32;y_top);
3087 
3088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;fdx&#32;==&#32;0)&#32;{
3089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;fx;
3090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{
3091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&gt;=&#32;0)&#32;{
3092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,(<emphasis role="keywordtype">int</emphasis>)&#32;x0,e,&#32;x0,y_top,&#32;x0,y_bottom);
3093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline_fill-1,(<emphasis role="keywordtype">int</emphasis>)&#32;x0+1,e,&#32;x0,y_top,&#32;x0,y_bottom);
3094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline_fill-1,0,e,&#32;x0,y_top,&#32;x0,y_bottom);
3096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3098 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;fx;
3100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;fdx;
3101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xb&#32;=&#32;x0&#32;+&#32;dx;
3102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x_top,&#32;x_bottom;
3103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sy0,sy1;
3104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;fdy;
3105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy&#32;&lt;=&#32;y_bottom&#32;&amp;&amp;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey&#32;&gt;=&#32;y_top);
3106 
3107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;endpoints&#32;of&#32;line&#32;segment&#32;clipped&#32;to&#32;this&#32;scanline&#32;(if&#32;the</emphasis>
3108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;line&#32;segment&#32;starts&#32;on&#32;this&#32;scanline.&#32;x0&#32;is&#32;the&#32;intersection&#32;of&#32;the</emphasis>
3109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;line&#32;with&#32;y_top,&#32;but&#32;that&#32;may&#32;be&#32;off&#32;the&#32;line&#32;segment.</emphasis>
3110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy&#32;&gt;&#32;y_top)&#32;{
3111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_top&#32;=&#32;x0&#32;+&#32;dx&#32;*&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy&#32;-&#32;y_top);
3112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy0&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;sy;
3113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_top&#32;=&#32;x0;
3115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy0&#32;=&#32;y_top;
3116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey&#32;&lt;&#32;y_bottom)&#32;{
3118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_bottom&#32;=&#32;x0&#32;+&#32;dx&#32;*&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey&#32;-&#32;y_top);
3119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy1&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;ey;
3120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_bottom&#32;=&#32;xb;
3122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy1&#32;=&#32;y_bottom;
3123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3124 
3125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x_top&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;x_bottom&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;x_top&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&amp;&amp;&#32;x_bottom&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{
3126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;from&#32;here&#32;on,&#32;we&#32;don&apos;t&#32;have&#32;to&#32;range&#32;check&#32;x&#32;values</emphasis>
3127 
3128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)&#32;x_top&#32;==&#32;(int)&#32;x_bottom)&#32;{
3129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
3130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;simple&#32;case,&#32;only&#32;spans&#32;one&#32;pixel</emphasis>
3131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;(int)&#32;x_top;
3132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;sy1&#32;-&#32;sy0;
3133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
3134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]&#32;+=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction&#32;*&#32;(1-((x_top&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;+&#32;(x_bottom-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>))/2)&#32;&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
3135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline_fill[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]&#32;+=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;<emphasis role="comment">//&#32;everything&#32;right&#32;of&#32;this&#32;pixel&#32;is&#32;filled</emphasis>
3136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,x1,x2;
3138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y_crossing,&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>,&#32;<link linkend="_namespacesign">sign</link>,&#32;area;
3139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;covers&#32;2+&#32;pixels</emphasis>
3140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x_top&#32;&gt;&#32;x_bottom)&#32;{
3141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;flip&#32;scanline&#32;vertically;&#32;signed&#32;area&#32;is&#32;the&#32;same</emphasis>
3142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t;
3143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy0&#32;=&#32;y_bottom&#32;-&#32;(sy0&#32;-&#32;y_top);
3144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy1&#32;=&#32;y_bottom&#32;-&#32;(sy1&#32;-&#32;y_top);
3145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;sy0,&#32;sy0&#32;=&#32;sy1,&#32;sy1&#32;=&#32;t;
3146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;x_bottom,&#32;x_bottom&#32;=&#32;x_top,&#32;x_top&#32;=&#32;t;
3147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx&#32;=&#32;-dx;
3148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy&#32;=&#32;-dy;
3149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;x0,&#32;x0&#32;=&#32;xb,&#32;xb&#32;=&#32;t;
3150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3151 
3152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;(int)&#32;x_top;
3153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2&#32;=&#32;(int)&#32;x_bottom;
3154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;intersection&#32;with&#32;y&#32;axis&#32;at&#32;x1+1</emphasis>
3155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y_crossing&#32;=&#32;(x1+1&#32;-&#32;x0)&#32;*&#32;dy&#32;+&#32;y_top;
3156 
3157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacesign">sign</link>&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;direction;
3158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;area&#32;of&#32;the&#32;rectangle&#32;covered&#32;from&#32;y0..y_crossing</emphasis>
3159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area&#32;=&#32;<link linkend="_namespacesign">sign</link>&#32;*&#32;(y_crossing-sy0);
3160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;area&#32;of&#32;the&#32;triangle&#32;(x_top,y0),&#32;(x+1,y0),&#32;(x+1,y_crossing)</emphasis>
3161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[x1]&#32;+=&#32;area&#32;*&#32;(1-((x_top&#32;-&#32;x1)+(x1+1-x1))/2);
3162 
3163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;<link linkend="_namespacesign">sign</link>&#32;*&#32;dy;
3164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;x1+1;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;x2;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;{
3165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]&#32;+=&#32;area&#32;+&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>/2;
3166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
3167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y_crossing&#32;+=&#32;dy&#32;*&#32;(x2&#32;-&#32;(x1+1));
3169 
3170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(STBTT_fabs(area)&#32;&lt;=&#32;1.01f);
3171 
3172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[x2]&#32;+=&#32;area&#32;+&#32;<link linkend="_namespacesign">sign</link>&#32;*&#32;(1-((x2-x2)+(x_bottom-x2))/2)&#32;*&#32;(sy1-y_crossing);
3173 
3174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline_fill[x2]&#32;+=&#32;<link linkend="_namespacesign">sign</link>&#32;*&#32;(sy1-sy0);
3175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;edge&#32;goes&#32;outside&#32;of&#32;box&#32;we&apos;re&#32;drawing,&#32;we&#32;require</emphasis>
3178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clipping&#32;logic.&#32;since&#32;this&#32;does&#32;not&#32;match&#32;the&#32;intended&#32;use</emphasis>
3179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;of&#32;this&#32;library,&#32;we&#32;use&#32;a&#32;different,&#32;very&#32;slow&#32;brute</emphasis>
3180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;force&#32;implementation</emphasis>
3181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;{
3183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cases:</emphasis>
3184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
3185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;there&#32;can&#32;be&#32;up&#32;to&#32;two&#32;intersections&#32;with&#32;the&#32;pixel.&#32;any&#32;intersection</emphasis>
3186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;with&#32;left&#32;or&#32;right&#32;edges&#32;can&#32;be&#32;handled&#32;by&#32;splitting&#32;into&#32;two&#32;(or&#32;three)</emphasis>
3187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;regions.&#32;intersections&#32;with&#32;top&#32;&amp;&#32;bottom&#32;do&#32;not&#32;necessitate&#32;case-wise&#32;logic.</emphasis>
3188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
3189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;old&#32;way&#32;of&#32;doing&#32;this&#32;found&#32;the&#32;intersections&#32;with&#32;the&#32;left&#32;&amp;&#32;right&#32;edges,</emphasis>
3190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;used&#32;some&#32;simple&#32;logic&#32;to&#32;produce&#32;up&#32;to&#32;three&#32;segments&#32;in&#32;sorted&#32;order</emphasis>
3191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;from&#32;top-to-bottom.&#32;however,&#32;this&#32;had&#32;a&#32;problem:&#32;if&#32;an&#32;x&#32;edge&#32;was&#32;epsilon</emphasis>
3192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;across&#32;the&#32;x&#32;border,&#32;then&#32;the&#32;corresponding&#32;y&#32;position&#32;might&#32;not&#32;be&#32;distinct</emphasis>
3193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;from&#32;the&#32;other&#32;y&#32;segment,&#32;and&#32;it&#32;might&#32;ignored&#32;as&#32;an&#32;empty&#32;segment.&#32;to&#32;avoid</emphasis>
3194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;that,&#32;we&#32;need&#32;to&#32;explicitly&#32;produce&#32;segments&#32;based&#32;on&#32;x&#32;positions.</emphasis>
3195 
3196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rename&#32;variables&#32;to&#32;clearly-defined&#32;pairs</emphasis>
3197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y0&#32;=&#32;y_top;
3198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;(float)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
3199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2&#32;=&#32;(float)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1);
3200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x3&#32;=&#32;xb;
3201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y3&#32;=&#32;y_bottom;
3202 
3203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;x&#32;=&#32;e-&gt;x&#32;+&#32;e-&gt;dx&#32;*&#32;(y-y_top)</emphasis>
3204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(y-y_top)&#32;=&#32;(x&#32;-&#32;e-&gt;x)&#32;/&#32;e-&gt;dx</emphasis>
3205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;y&#32;=&#32;(x&#32;-&#32;e-&gt;x)&#32;/&#32;e-&gt;dx&#32;+&#32;y_top</emphasis>
3206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y1&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;-&#32;x0)&#32;/&#32;dx&#32;+&#32;y_top;
3207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y2&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+1&#32;-&#32;x0)&#32;/&#32;dx&#32;+&#32;y_top;
3208 
3209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&lt;&#32;x1&#32;&amp;&amp;&#32;x3&#32;&gt;&#32;x2)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;three&#32;segments&#32;descending&#32;down-right</emphasis>
3210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x1,y1);
3211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x1,y1,&#32;x2,y2);
3212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x2,y2,&#32;x3,y3);
3213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x3&#32;&lt;&#32;x1&#32;&amp;&amp;&#32;x0&#32;&gt;&#32;x2)&#32;{&#32;&#32;<emphasis role="comment">//&#32;three&#32;segments&#32;descending&#32;down-left</emphasis>
3214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x2,y2);
3215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x2,y2,&#32;x1,y1);
3216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x1,y1,&#32;x3,y3);
3217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&lt;&#32;x1&#32;&amp;&amp;&#32;x3&#32;&gt;&#32;x1)&#32;{&#32;&#32;<emphasis role="comment">//&#32;two&#32;segments&#32;across&#32;x,&#32;down-right</emphasis>
3218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x1,y1);
3219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x1,y1,&#32;x3,y3);
3220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x3&#32;&lt;&#32;x1&#32;&amp;&amp;&#32;x0&#32;&gt;&#32;x1)&#32;{&#32;&#32;<emphasis role="comment">//&#32;two&#32;segments&#32;across&#32;x,&#32;down-left</emphasis>
3221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x1,y1);
3222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x1,y1,&#32;x3,y3);
3223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0&#32;&lt;&#32;x2&#32;&amp;&amp;&#32;x3&#32;&gt;&#32;x2)&#32;{&#32;&#32;<emphasis role="comment">//&#32;two&#32;segments&#32;across&#32;x+1,&#32;down-right</emphasis>
3224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x2,y2);
3225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x2,y2,&#32;x3,y3);
3226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x3&#32;&lt;&#32;x2&#32;&amp;&amp;&#32;x0&#32;&gt;&#32;x2)&#32;{&#32;&#32;<emphasis role="comment">//&#32;two&#32;segments&#32;across&#32;x+1,&#32;down-left</emphasis>
3227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x2,y2);
3228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x2,y2,&#32;x3,y3);
3229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">//&#32;one&#32;segment</emphasis>
3230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__handle_clipped_edge(scanline,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,e,&#32;x0,y0,&#32;x3,y3);
3231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3234 &#32;&#32;&#32;&#32;&#32;&#32;}
3235 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;next;
3236 &#32;&#32;&#32;}
3237 }
3238 
3239 <emphasis role="comment">//&#32;directly&#32;AA&#32;rasterize&#32;edges&#32;w/o&#32;supersampling</emphasis>
3240 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__rasterize_sorted_edges(<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;stbtt__edge&#32;*e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vsubsample,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_y,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
3241 {
3242 &#32;&#32;&#32;stbtt__hheap&#32;hh&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
3243 &#32;&#32;&#32;stbtt__active_edge&#32;*active&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3244 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,j=0,&#32;i;
3245 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scanline_data[129],&#32;*scanline,&#32;*scanline2;
3246 
3247 &#32;&#32;&#32;STBTT__NOTUSED(vsubsample);
3248 
3249 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w&#32;&gt;&#32;64)
3250 &#32;&#32;&#32;&#32;&#32;&#32;scanline&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)&#32;STBTT_malloc((<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w*2+1)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(float),&#32;userdata);
3251 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3252 &#32;&#32;&#32;&#32;&#32;&#32;scanline&#32;=&#32;scanline_data;
3253 
3254 &#32;&#32;&#32;scanline2&#32;=&#32;scanline&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w;
3255 
3256 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;off_y;
3257 &#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].y0&#32;=&#32;(float)&#32;(off_y&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;h)&#32;+&#32;1;
3258 
3259 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j&#32;&lt;&#32;result-&gt;h)&#32;{
3260 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;center&#32;of&#32;pixel&#32;for&#32;this&#32;scanline</emphasis>
3261 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scan_y_top&#32;&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;0.0f;
3262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scan_y_bottom&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;1.0f;
3263 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;**<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;active;
3264 
3265 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memset(scanline&#32;,&#32;0,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w*<emphasis role="keyword">sizeof</emphasis>(scanline[0]));
3266 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memset(scanline2,&#32;0,&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w+1)*<emphasis role="keyword">sizeof</emphasis>(scanline[0]));
3267 
3268 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;update&#32;all&#32;active&#32;edges;</emphasis>
3269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;remove&#32;all&#32;active&#32;edges&#32;that&#32;terminate&#32;before&#32;the&#32;top&#32;of&#32;this&#32;scanline</emphasis>
3270 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*step)&#32;{
3271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
3272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;&lt;=&#32;scan_y_top)&#32;{
3273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next;&#32;<emphasis role="comment">//&#32;delete&#32;from&#32;list</emphasis>
3274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;direction);
3275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;direction&#32;=&#32;0;
3276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__hheap_free(&amp;hh,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;((*step)-&gt;next);&#32;<emphasis role="comment">//&#32;advance&#32;through&#32;list</emphasis>
3279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3280 &#32;&#32;&#32;&#32;&#32;&#32;}
3281 
3282 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;all&#32;edges&#32;that&#32;start&#32;before&#32;the&#32;bottom&#32;of&#32;this&#32;scanline</emphasis>
3283 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0&#32;&lt;=&#32;scan_y_bottom)&#32;{
3284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y0&#32;!=&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>-&gt;y1)&#32;{
3285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbtt__new_active(&amp;hh,&#32;e,&#32;off_x,&#32;scan_y_top,&#32;userdata);
3286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;==&#32;0&#32;&amp;&amp;&#32;off_y&#32;!=&#32;0)&#32;{
3288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;&lt;&#32;scan_y_top)&#32;{
3289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;can&#32;happen&#32;due&#32;to&#32;subpixel&#32;positioning&#32;and&#32;some&#32;kind&#32;of&#32;fp&#32;rounding&#32;error&#32;i&#32;think</emphasis>
3290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;=&#32;scan_y_top;
3291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;ey&#32;&gt;=&#32;scan_y_top);&#32;<emphasis role="comment">//&#32;if&#32;we&#32;get&#32;really&#32;unlucky&#32;a&#32;tiny&#32;bit&#32;of&#32;an&#32;edge&#32;can&#32;be&#32;out&#32;of&#32;bounds</emphasis>
3294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;at&#32;front</emphasis>
3295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;next&#32;=&#32;active;
3296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;active&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
3297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>;
3300 &#32;&#32;&#32;&#32;&#32;&#32;}
3301 
3302 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;process&#32;all&#32;active&#32;edges</emphasis>
3303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(active)
3304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__fill_active_edges_new(scanline,&#32;scanline2+1,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w,&#32;active,&#32;scan_y_top);
3305 
3306 &#32;&#32;&#32;&#32;&#32;&#32;{
3307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sum&#32;=&#32;0;
3308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;w;&#32;++i)&#32;{
3309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;k;
3310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m;
3311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sum&#32;+=&#32;scanline2[i];
3312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;scanline[i]&#32;+&#32;sum;
3313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;(float)&#32;STBTT_fabs(k)*255&#32;+&#32;0.5f;
3314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;(int)&#32;k;
3315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m&#32;&gt;&#32;255)&#32;m&#32;=&#32;255;
3316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;pixels[j*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;stride&#32;+&#32;i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;m;
3317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3318 &#32;&#32;&#32;&#32;&#32;&#32;}
3319 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;advance&#32;all&#32;the&#32;edges</emphasis>
3320 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;active;
3321 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*step)&#32;{
3322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__active_edge&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;*<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
3323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fx&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fdx;&#32;<emphasis role="comment">//&#32;advance&#32;to&#32;position&#32;for&#32;current&#32;scanline</emphasis>
3324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>&#32;=&#32;&amp;((*step)-&gt;next);&#32;<emphasis role="comment">//&#32;advance&#32;through&#32;list</emphasis>
3325 &#32;&#32;&#32;&#32;&#32;&#32;}
3326 
3327 &#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
3328 &#32;&#32;&#32;&#32;&#32;&#32;++j;
3329 &#32;&#32;&#32;}
3330 
3331 &#32;&#32;&#32;stbtt__hheap_cleanup(&amp;hh,&#32;userdata);
3332 
3333 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scanline&#32;!=&#32;scanline_data)
3334 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(scanline,&#32;userdata);
3335 }
3336 <emphasis role="preprocessor">#else</emphasis>
3337 <emphasis role="preprocessor">#error&#32;&quot;Unrecognized&#32;value&#32;of&#32;STBTT_RASTERIZER_VERSION&quot;</emphasis>
3338 <emphasis role="preprocessor">#endif</emphasis>
3339 
3340 <emphasis role="preprocessor">#define&#32;STBTT__COMPARE(a,b)&#32;&#32;((a)-&gt;y0&#32;&lt;&#32;(b)-&gt;y0)</emphasis>
3341 
3342 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__sort_edges_ins_sort(stbtt__edge&#32;*p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
3343 {
3344 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
3345 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=1;&#32;i&#32;&lt;&#32;n;&#32;++i)&#32;{
3346 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__edge&#32;t&#32;=&#32;p[i],&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;&amp;t;
3347 &#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;i;
3348 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j&#32;&gt;&#32;0)&#32;{
3349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__edge&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;&amp;p[j-1];
3350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;STBTT__COMPARE(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
3351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!c)&#32;<emphasis role="keywordflow">break</emphasis>;
3352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[j]&#32;=&#32;p[j-1];
3353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--j;
3354 &#32;&#32;&#32;&#32;&#32;&#32;}
3355 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;j)
3356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[j]&#32;=&#32;t;
3357 &#32;&#32;&#32;}
3358 }
3359 
3360 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__sort_edges_quicksort(stbtt__edge&#32;*p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
3361 {
3362 &#32;&#32;&#32;<emphasis role="comment">/*&#32;threshold&#32;for&#32;transitioning&#32;to&#32;insertion&#32;sort&#32;*/</emphasis>
3363 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&gt;&#32;12)&#32;{
3364 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__edge&#32;t;
3365 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c01,c12,c,m,i,j;
3366 
3367 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;compute&#32;median&#32;of&#32;three&#32;*/</emphasis>
3368 &#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;n&#32;&gt;&gt;&#32;1;
3369 &#32;&#32;&#32;&#32;&#32;&#32;c01&#32;=&#32;STBTT__COMPARE(&amp;p[0],&amp;p[m]);
3370 &#32;&#32;&#32;&#32;&#32;&#32;c12&#32;=&#32;STBTT__COMPARE(&amp;p[m],&amp;p[n-1]);
3371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;if&#32;0&#32;&gt;=&#32;mid&#32;&gt;=&#32;end,&#32;or&#32;0&#32;&lt;&#32;mid&#32;&lt;&#32;end,&#32;then&#32;use&#32;mid&#32;*/</emphasis>
3372 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c01&#32;!=&#32;c12)&#32;{
3373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;otherwise,&#32;we&apos;ll&#32;need&#32;to&#32;swap&#32;something&#32;else&#32;to&#32;middle&#32;*/</emphasis>
3374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
3375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;STBTT__COMPARE(&amp;p[0],&amp;p[n-1]);
3376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;0&gt;mid&#32;&amp;&amp;&#32;mid&lt;n:&#32;&#32;0&gt;n&#32;=&gt;&#32;n;&#32;0&lt;n&#32;=&gt;&#32;0&#32;*/</emphasis>
3377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;0&lt;mid&#32;&amp;&amp;&#32;mid&gt;n:&#32;&#32;0&gt;n&#32;=&gt;&#32;0;&#32;0&lt;n&#32;=&gt;&#32;n&#32;*/</emphasis>
3378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;(c&#32;==&#32;c12)&#32;?&#32;0&#32;:&#32;n-1;
3379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;p[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>];
3380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>]&#32;=&#32;p[m];
3381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[m]&#32;=&#32;t;
3382 &#32;&#32;&#32;&#32;&#32;&#32;}
3383 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;now&#32;p[m]&#32;is&#32;the&#32;median-of-three&#32;*/</emphasis>
3384 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;swap&#32;it&#32;to&#32;the&#32;beginning&#32;so&#32;it&#32;won&apos;t&#32;move&#32;around&#32;*/</emphasis>
3385 &#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;p[0];
3386 &#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;p[m];
3387 &#32;&#32;&#32;&#32;&#32;&#32;p[m]&#32;=&#32;t;
3388 
3389 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;partition&#32;loop&#32;*/</emphasis>
3390 &#32;&#32;&#32;&#32;&#32;&#32;i=1;
3391 &#32;&#32;&#32;&#32;&#32;&#32;j=n-1;
3392 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
3393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;handling&#32;of&#32;equality&#32;is&#32;crucial&#32;here&#32;*/</emphasis>
3394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;for&#32;sentinels&#32;&amp;&#32;efficiency&#32;with&#32;duplicates&#32;*/</emphasis>
3395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;++i)&#32;{
3396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!STBTT__COMPARE(&amp;p[i],&#32;&amp;p[0]))&#32;<emphasis role="keywordflow">break</emphasis>;
3397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;--j)&#32;{
3399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!STBTT__COMPARE(&amp;p[0],&#32;&amp;p[j]))&#32;<emphasis role="keywordflow">break</emphasis>;
3400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;make&#32;sure&#32;we&#32;haven&apos;t&#32;crossed&#32;*/</emphasis>
3402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;j)&#32;<emphasis role="keywordflow">break</emphasis>;
3403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;p[i];
3404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[i]&#32;=&#32;p[j];
3405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[j]&#32;=&#32;t;
3406 
3407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
3408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--j;
3409 &#32;&#32;&#32;&#32;&#32;&#32;}
3410 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;recurse&#32;on&#32;smaller&#32;side,&#32;iterate&#32;on&#32;larger&#32;*/</emphasis>
3411 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&lt;&#32;(n-i))&#32;{
3412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__sort_edges_quicksort(p,j);
3413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;p+i;
3414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;n-i;
3415 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__sort_edges_quicksort(p+i,&#32;n-i);
3417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;j;
3418 &#32;&#32;&#32;&#32;&#32;&#32;}
3419 &#32;&#32;&#32;}
3420 }
3421 
3422 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__sort_edges(stbtt__edge&#32;*p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
3423 {
3424 &#32;&#32;&#32;stbtt__sort_edges_quicksort(p,&#32;n);
3425 &#32;&#32;&#32;stbtt__sort_edges_ins_sort(p,&#32;n);
3426 }
3427 
3428 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
3429 {
3430 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
3431 }&#32;stbtt__point;
3432 
3433 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__rasterize(<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;stbtt__point&#32;*pts,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*wcount,&#32;<emphasis role="keywordtype">int</emphasis>&#32;windings,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;off_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
3434 {
3435 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y_scale_inv&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>&#32;?&#32;-scale_y&#32;:&#32;scale_y;
3436 &#32;&#32;&#32;stbtt__edge&#32;*<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>;
3437 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,i,j,k,m;
3438 <emphasis role="preprocessor">#if&#32;STBTT_RASTERIZER_VERSION&#32;==&#32;1</emphasis>
3439 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;vsubsample&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>-&gt;h&#32;&lt;&#32;8&#32;?&#32;15&#32;:&#32;5;
3440 <emphasis role="preprocessor">#elif&#32;STBTT_RASTERIZER_VERSION&#32;==&#32;2</emphasis>
3441 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;vsubsample&#32;=&#32;1;
3442 <emphasis role="preprocessor">#else</emphasis>
3443 <emphasis role="preprocessor">&#32;&#32;&#32;#error&#32;&quot;Unrecognized&#32;value&#32;of&#32;STBTT_RASTERIZER_VERSION&quot;</emphasis>
3444 <emphasis role="preprocessor">#endif</emphasis>
3445 &#32;&#32;&#32;<emphasis role="comment">//&#32;vsubsample&#32;should&#32;divide&#32;255&#32;evenly;&#32;otherwise&#32;we&#32;won&apos;t&#32;reach&#32;full&#32;opacity</emphasis>
3446 
3447 &#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;we&#32;have&#32;to&#32;blow&#32;out&#32;the&#32;windings&#32;into&#32;explicit&#32;edge&#32;lists</emphasis>
3448 &#32;&#32;&#32;n&#32;=&#32;0;
3449 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;windings;&#32;++i)
3450 &#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;wcount[i];
3451 
3452 &#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;(stbtt__edge&#32;*)&#32;STBTT_malloc(<emphasis role="keyword">sizeof</emphasis>(*e)&#32;*&#32;(n+1),&#32;userdata);&#32;<emphasis role="comment">//&#32;add&#32;an&#32;extra&#32;one&#32;as&#32;a&#32;sentinel</emphasis>
3453 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>;
3454 &#32;&#32;&#32;n&#32;=&#32;0;
3455 
3456 &#32;&#32;&#32;m=0;
3457 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;windings;&#32;++i)&#32;{
3458 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__point&#32;*p&#32;=&#32;pts&#32;+&#32;m;
3459 &#32;&#32;&#32;&#32;&#32;&#32;m&#32;+=&#32;wcount[i];
3460 &#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;wcount[i]-1;
3461 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;wcount[i];&#32;j=k++)&#32;{
3462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>=k,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>=j;
3463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;the&#32;edge&#32;if&#32;horizontal</emphasis>
3464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p[j].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;==&#32;p[k].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
3465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
3466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;edge&#32;from&#32;j&#32;to&#32;k&#32;to&#32;the&#32;list</emphasis>
3467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].invert&#32;=&#32;0;
3468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>&#32;?&#32;p[j].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;p[k].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;:&#32;p[j].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;p[k].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
3469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].invert&#32;=&#32;1;
3470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>=j,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>=k;
3471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].x0&#32;=&#32;p[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>].x&#32;*&#32;scale_x&#32;+&#32;shift_x;
3473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].y0&#32;=&#32;(p[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>].y&#32;*&#32;y_scale_inv&#32;+&#32;shift_y)&#32;*&#32;vsubsample;
3474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].x1&#32;=&#32;p[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].x&#32;*&#32;scale_x&#32;+&#32;shift_x;
3475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>[n].y1&#32;=&#32;(p[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].y&#32;*&#32;y_scale_inv&#32;+&#32;shift_y)&#32;*&#32;vsubsample;
3476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++n;
3477 &#32;&#32;&#32;&#32;&#32;&#32;}
3478 &#32;&#32;&#32;}
3479 
3480 &#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;sort&#32;the&#32;edges&#32;by&#32;their&#32;highest&#32;point&#32;(should&#32;snap&#32;to&#32;integer,&#32;and&#32;then&#32;by&#32;x)</emphasis>
3481 &#32;&#32;&#32;<emphasis role="comment">//STBTT_sort(e,&#32;n,&#32;sizeof(e[0]),&#32;stbtt__edge_compare);</emphasis>
3482 &#32;&#32;&#32;stbtt__sort_edges(e,&#32;n);
3483 
3484 &#32;&#32;&#32;<emphasis role="comment">//&#32;now,&#32;traverse&#32;the&#32;scanlines&#32;and&#32;find&#32;the&#32;intersections&#32;on&#32;each&#32;scanline,&#32;use&#32;xor&#32;winding&#32;rule</emphasis>
3485 &#32;&#32;&#32;stbtt__rasterize_sorted_edges(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;e,&#32;n,&#32;vsubsample,&#32;off_x,&#32;off_y,&#32;userdata);
3486 
3487 &#32;&#32;&#32;STBTT_free(e,&#32;userdata);
3488 }
3489 
3490 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__add_point(stbtt__point&#32;*points,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
3491 {
3492 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!points)&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;during&#32;first&#32;pass,&#32;it&apos;s&#32;unallocated</emphasis>
3493 &#32;&#32;&#32;points[n].x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3494 &#32;&#32;&#32;points[n].y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
3495 }
3496 
3497 <emphasis role="comment">//&#32;tessellate&#32;until&#32;threshold&#32;p&#32;is&#32;happy...&#32;@TODO&#32;warped&#32;to&#32;compensate&#32;for&#32;non-linear&#32;stretching</emphasis>
3498 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__tesselate_curve(stbtt__point&#32;*points,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*num_points,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;objspace_flatness_squared,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
3499 {
3500 &#32;&#32;&#32;<emphasis role="comment">//&#32;midpoint</emphasis>
3501 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mx&#32;=&#32;(x0&#32;+&#32;2*x1&#32;+&#32;x2)/4;
3502 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;my&#32;=&#32;(y0&#32;+&#32;2*y1&#32;+&#32;y2)/4;
3503 &#32;&#32;&#32;<emphasis role="comment">//&#32;versus&#32;directly&#32;drawn&#32;line</emphasis>
3504 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx&#32;=&#32;(x0+x2)/2&#32;-&#32;mx;
3505 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy&#32;=&#32;(y0+y2)/2&#32;-&#32;my;
3506 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&gt;&#32;16)&#32;<emphasis role="comment">//&#32;65536&#32;segments&#32;on&#32;one&#32;curve&#32;better&#32;be&#32;enough!</emphasis>
3507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3508 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dx*dx+dy*dy&#32;&gt;&#32;objspace_flatness_squared)&#32;{&#32;<emphasis role="comment">//&#32;half-pixel&#32;error&#32;allowed...&#32;need&#32;to&#32;be&#32;smaller&#32;if&#32;AA</emphasis>
3509 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__tesselate_curve(points,&#32;num_points,&#32;x0,y0,&#32;(x0+x1)/2.0f,(y0+y1)/2.0f,&#32;mx,my,&#32;objspace_flatness_squared,n+1);
3510 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__tesselate_curve(points,&#32;num_points,&#32;mx,my,&#32;(x1+x2)/2.0f,(y1+y2)/2.0f,&#32;x2,y2,&#32;objspace_flatness_squared,n+1);
3511 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3512 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__add_point(points,&#32;*num_points,x2,y2);
3513 &#32;&#32;&#32;&#32;&#32;&#32;*num_points&#32;=&#32;*num_points+1;
3514 &#32;&#32;&#32;}
3515 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3516 }
3517 
3518 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__tesselate_cubic(stbtt__point&#32;*points,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*num_points,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x3,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y3,&#32;<emphasis role="keywordtype">float</emphasis>&#32;objspace_flatness_squared,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
3519 {
3520 &#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;this&#32;&quot;flatness&quot;&#32;calculation&#32;is&#32;just&#32;made-up&#32;nonsense&#32;that&#32;seems&#32;to&#32;work&#32;well&#32;enough</emphasis>
3521 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx0&#32;=&#32;x1-x0;
3522 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy0&#32;=&#32;y1-y0;
3523 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx1&#32;=&#32;x2-x1;
3524 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy1&#32;=&#32;y2-y1;
3525 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx2&#32;=&#32;x3-x2;
3526 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy2&#32;=&#32;y3-y2;
3527 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx&#32;=&#32;x3-x0;
3528 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dy&#32;=&#32;y3-y0;
3529 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;longlen&#32;=&#32;(float)&#32;(STBTT_sqrt(dx0*dx0+dy0*dy0)+STBTT_sqrt(dx1*dx1+dy1*dy1)+STBTT_sqrt(dx2*dx2+dy2*dy2));
3530 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;shortlen&#32;=&#32;(float)&#32;STBTT_sqrt(dx*dx+dy*dy);
3531 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;flatness_squared&#32;=&#32;longlen*longlen-shortlen*shortlen;
3532 
3533 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&gt;&#32;16)&#32;<emphasis role="comment">//&#32;65536&#32;segments&#32;on&#32;one&#32;curve&#32;better&#32;be&#32;enough!</emphasis>
3534 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3535 
3536 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flatness_squared&#32;&gt;&#32;objspace_flatness_squared)&#32;{
3537 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x01&#32;=&#32;(x0+x1)/2;
3538 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y01&#32;=&#32;(y0+y1)/2;
3539 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x12&#32;=&#32;(x1+x2)/2;
3540 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y12&#32;=&#32;(y1+y2)/2;
3541 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x23&#32;=&#32;(x2+x3)/2;
3542 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y23&#32;=&#32;(y2+y3)/2;
3543 
3544 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xa&#32;=&#32;(x01+x12)/2;
3545 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ya&#32;=&#32;(y01+y12)/2;
3546 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xb&#32;=&#32;(x12+x23)/2;
3547 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;yb&#32;=&#32;(y12+y23)/2;
3548 
3549 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mx&#32;=&#32;(xa+xb)/2;
3550 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;my&#32;=&#32;(ya+yb)/2;
3551 
3552 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__tesselate_cubic(points,&#32;num_points,&#32;x0,y0,&#32;x01,y01,&#32;xa,ya,&#32;mx,my,&#32;objspace_flatness_squared,n+1);
3553 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__tesselate_cubic(points,&#32;num_points,&#32;mx,my,&#32;xb,yb,&#32;x23,y23,&#32;x3,y3,&#32;objspace_flatness_squared,n+1);
3554 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3555 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__add_point(points,&#32;*num_points,x3,y3);
3556 &#32;&#32;&#32;&#32;&#32;&#32;*num_points&#32;=&#32;*num_points+1;
3557 &#32;&#32;&#32;}
3558 }
3559 
3560 <emphasis role="comment">//&#32;returns&#32;number&#32;of&#32;contours</emphasis>
3561 <emphasis role="keyword">static</emphasis>&#32;stbtt__point&#32;*stbtt_FlattenCurves(<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_verts,&#32;<emphasis role="keywordtype">float</emphasis>&#32;objspace_flatness,&#32;<emphasis role="keywordtype">int</emphasis>&#32;**contour_lengths,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*num_contours,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
3562 {
3563 &#32;&#32;&#32;stbtt__point&#32;*points=0;
3564 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_points=0;
3565 
3566 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;objspace_flatness_squared&#32;=&#32;objspace_flatness&#32;*&#32;objspace_flatness;
3567 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,n=0,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>=0,&#32;pass;
3568 
3569 &#32;&#32;&#32;<emphasis role="comment">//&#32;count&#32;how&#32;many&#32;&quot;moves&quot;&#32;there&#32;are&#32;to&#32;get&#32;the&#32;contour&#32;count</emphasis>
3570 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_verts;&#32;++i)
3571 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(vertices[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link>)
3572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++n;
3573 
3574 &#32;&#32;&#32;*num_contours&#32;=&#32;n;
3575 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3576 
3577 &#32;&#32;&#32;*contour_lengths&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;STBTT_malloc(<emphasis role="keyword">sizeof</emphasis>(**contour_lengths)&#32;*&#32;n,&#32;userdata);
3578 
3579 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*contour_lengths&#32;==&#32;0)&#32;{
3580 &#32;&#32;&#32;&#32;&#32;&#32;*num_contours&#32;=&#32;0;
3581 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3582 &#32;&#32;&#32;}
3583 
3584 &#32;&#32;&#32;<emphasis role="comment">//&#32;make&#32;two&#32;passes&#32;through&#32;the&#32;points&#32;so&#32;we&#32;don&apos;t&#32;need&#32;to&#32;realloc</emphasis>
3585 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(pass=0;&#32;pass&#32;&lt;&#32;2;&#32;++pass)&#32;{
3586 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=0;
3587 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pass&#32;==&#32;1)&#32;{
3588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points&#32;=&#32;(stbtt__point&#32;*)&#32;STBTT_malloc(num_points&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(points[0]),&#32;userdata);
3589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(points&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__bit__count_8cpp_1ab34dedbf30a51859090cbab92fa60edb">error</link>;
3590 &#32;&#32;&#32;&#32;&#32;&#32;}
3591 &#32;&#32;&#32;&#32;&#32;&#32;num_points&#32;=&#32;0;
3592 &#32;&#32;&#32;&#32;&#32;&#32;n=&#32;-1;
3593 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_verts;&#32;++i)&#32;{
3594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(vertices[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)&#32;{
3595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link>:
3596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;start&#32;the&#32;next&#32;contour</emphasis>
3597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&gt;=&#32;0)
3598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*contour_lengths)[n]&#32;=&#32;num_points&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>;
3599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++n;
3600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>&#32;=&#32;num_points;
3601 
3602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>;
3603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__add_point(points,&#32;num_points++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
3604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>:
3606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>;
3607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__add_point(points,&#32;num_points++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
3608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>:
3610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__tesselate_curve(points,&#32;&amp;num_points,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,
3611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[i].cx,&#32;vertices[i].cy,
3612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[i].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;&#32;vertices[i].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,
3613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objspace_flatness_squared,&#32;0);
3614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>;
3615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab6cd2670234c731eafba404d3a2470fd">STBTT_vcubic</link>:
3617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__tesselate_cubic(points,&#32;&amp;num_points,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,
3618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[i].cx,&#32;vertices[i].cy,
3619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[i].cx1,&#32;vertices[i].cy1,
3620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[i].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;&#32;vertices[i].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,
3621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objspace_flatness_squared,&#32;0);
3622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;vertices[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>;
3623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3625 &#32;&#32;&#32;&#32;&#32;&#32;}
3626 &#32;&#32;&#32;&#32;&#32;&#32;(*contour_lengths)[n]&#32;=&#32;num_points&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>;
3627 &#32;&#32;&#32;}
3628 
3629 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;points;
3630 <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__bit__count_8cpp_1ab34dedbf30a51859090cbab92fa60edb">error</link>:
3631 &#32;&#32;&#32;STBTT_free(points,&#32;userdata);
3632 &#32;&#32;&#32;STBTT_free(*contour_lengths,&#32;userdata);
3633 &#32;&#32;&#32;*contour_lengths&#32;=&#32;0;
3634 &#32;&#32;&#32;*num_contours&#32;=&#32;0;
3635 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3636 }
3637 
3638 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db">stbtt_Rasterize</link>(<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;flatness_in_pixels,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_verts,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x_off,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y_off,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
3639 {
3640 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;scale_x&#32;&gt;&#32;scale_y&#32;?&#32;scale_y&#32;:&#32;scale_x;
3641 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;winding_count&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
3642 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*winding_lengths&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3643 &#32;&#32;&#32;stbtt__point&#32;*windings&#32;=&#32;stbtt_FlattenCurves(vertices,&#32;num_verts,&#32;flatness_in_pixels&#32;/&#32;scale,&#32;&amp;winding_lengths,&#32;&amp;winding_count,&#32;userdata);
3644 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(windings)&#32;{
3645 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__rasterize(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;windings,&#32;winding_lengths,&#32;winding_count,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;x_off,&#32;y_off,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>,&#32;userdata);
3646 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(winding_lengths,&#32;userdata);
3647 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(windings,&#32;userdata);
3648 &#32;&#32;&#32;}
3649 }
3650 
3651 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8254e6763560645597c44e00024b58fa">stbtt_FreeBitmap</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bitmap,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
3652 {
3653 &#32;&#32;&#32;STBTT_free(bitmap,&#32;userdata);
3654 }
3655 
3656 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24">stbtt_GetGlyphBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff)
3657 {
3658 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ix0,iy0,ix1,iy1;
3659 &#32;&#32;&#32;<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;gbm;
3660 &#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices;
3661 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_verts&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(info,&#32;glyph,&#32;&amp;vertices);
3662 
3663 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scale_x&#32;==&#32;0)&#32;scale_x&#32;=&#32;scale_y;
3664 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scale_y&#32;==&#32;0)&#32;{
3665 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scale_x&#32;==&#32;0)&#32;{
3666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(vertices,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
3667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3668 &#32;&#32;&#32;&#32;&#32;&#32;}
3669 &#32;&#32;&#32;&#32;&#32;&#32;scale_y&#32;=&#32;scale_x;
3670 &#32;&#32;&#32;}
3671 
3672 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(info,&#32;glyph,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;&amp;ix0,&amp;iy0,&amp;ix1,&amp;iy1);
3673 
3674 &#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;we&#32;get&#32;the&#32;size</emphasis>
3675 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>&#32;=&#32;(ix1&#32;-&#32;ix0);
3676 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e">h</link>&#32;=&#32;(iy1&#32;-&#32;iy0);
3677 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1ac73881d1b28e118368edf8dda13f5f27">pixels</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;<emphasis role="comment">//&#32;in&#32;case&#32;we&#32;error</emphasis>
3678 
3679 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;&#32;=&#32;gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>;
3680 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;gbm.<link linkend="_structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e">h</link>;
3681 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xoff&#32;&#32;)&#32;*xoff&#32;&#32;&#32;=&#32;ix0;
3682 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yoff&#32;&#32;)&#32;*yoff&#32;&#32;&#32;=&#32;iy0;
3683 
3684 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>&#32;&amp;&amp;&#32;gbm.<link linkend="_structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e">h</link>)&#32;{
3685 &#32;&#32;&#32;&#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1ac73881d1b28e118368edf8dda13f5f27">pixels</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;STBTT_malloc(gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>&#32;*&#32;gbm.<link linkend="_structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e">h</link>,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
3686 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gbm.<link linkend="_structstbtt____bitmap_1ac73881d1b28e118368edf8dda13f5f27">pixels</link>)&#32;{
3687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98">stride</link>&#32;=&#32;gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>;
3688 
3689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db">stbtt_Rasterize</link>(&amp;gbm,&#32;0.35f,&#32;vertices,&#32;num_verts,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;ix0,&#32;iy0,&#32;1,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
3690 &#32;&#32;&#32;&#32;&#32;&#32;}
3691 &#32;&#32;&#32;}
3692 &#32;&#32;&#32;STBTT_free(vertices,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
3693 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;gbm.<link linkend="_structstbtt____bitmap_1ac73881d1b28e118368edf8dda13f5f27">pixels</link>;
3694 }
3695 
3696 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1adba6ae7b9f05604eb366a828836b62a9">stbtt_GetGlyphBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff)
3697 {
3698 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24">stbtt_GetGlyphBitmapSubpixel</link>(info,&#32;scale_x,&#32;scale_y,&#32;0.0f,&#32;0.0f,&#32;glyph,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;xoff,&#32;yoff);
3699 }
3700 
3701 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph)
3702 {
3703 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ix0,iy0;
3704 &#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*vertices;
3705 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_verts&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(info,&#32;glyph,&#32;&amp;vertices);
3706 &#32;&#32;&#32;<link linkend="_structstbtt____bitmap">stbtt__bitmap</link>&#32;gbm;
3707 
3708 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(info,&#32;glyph,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;&amp;ix0,&amp;iy0,0,0);
3709 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1ac73881d1b28e118368edf8dda13f5f27">pixels</link>&#32;=&#32;output;
3710 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>&#32;=&#32;out_w;
3711 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e">h</link>&#32;=&#32;out_h;
3712 &#32;&#32;&#32;gbm.<link linkend="_structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98">stride</link>&#32;=&#32;out_stride;
3713 
3714 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gbm.<link linkend="_structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926">w</link>&#32;&amp;&amp;&#32;gbm.<link linkend="_structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e">h</link>)
3715 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db">stbtt_Rasterize</link>(&amp;gbm,&#32;0.35f,&#32;vertices,&#32;num_verts,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;ix0,iy0,&#32;1,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
3716 
3717 &#32;&#32;&#32;STBTT_free(vertices,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
3718 }
3719 
3720 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a915acab7676b20098f4d480376c5b589">stbtt_MakeGlyphBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph)
3721 {
3722 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link>(info,&#32;output,&#32;out_w,&#32;out_h,&#32;out_stride,&#32;scale_x,&#32;scale_y,&#32;0.0f,0.0f,&#32;glyph);
3723 }
3724 
3725 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be">stbtt_GetCodepointBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff)
3726 {
3727 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24">stbtt_GetGlyphBitmapSubpixel</link>(info,&#32;scale_x,&#32;scale_y,shift_x,shift_y,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,codepoint),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,xoff,yoff);
3728 }
3729 
3730 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be">stbtt_MakeCodepointBitmapSubpixelPrefilter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;oversample_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;oversample_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint)
3731 {
3732 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a006159e27c5c733ea11c688211e47c25">stbtt_MakeGlyphBitmapSubpixelPrefilter</link>(info,&#32;output,&#32;out_w,&#32;out_h,&#32;out_stride,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;oversample_x,&#32;oversample_y,&#32;sub_x,&#32;sub_y,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,codepoint));
3733 }
3734 
3735 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71">stbtt_MakeCodepointBitmapSubpixel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint)
3736 {
3737 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link>(info,&#32;output,&#32;out_w,&#32;out_h,&#32;out_stride,&#32;scale_x,&#32;scale_y,&#32;shift_x,&#32;shift_y,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,codepoint));
3738 }
3739 
3740 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa">stbtt_GetCodepointBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff)
3741 {
3742 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be">stbtt_GetCodepointBitmapSubpixel</link>(info,&#32;scale_x,&#32;scale_y,&#32;0.0f,0.0f,&#32;codepoint,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,xoff,yoff);
3743 }
3744 
3745 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb">stbtt_MakeCodepointBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint)
3746 {
3747 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71">stbtt_MakeCodepointBitmapSubpixel</link>(info,&#32;output,&#32;out_w,&#32;out_h,&#32;out_stride,&#32;scale_x,&#32;scale_y,&#32;0.0f,0.0f,&#32;codepoint);
3748 }
3749 
3751 <emphasis role="comment">//</emphasis>
3752 <emphasis role="comment">//&#32;bitmap&#32;baking</emphasis>
3753 <emphasis role="comment">//</emphasis>
3754 <emphasis role="comment">//&#32;This&#32;is&#32;SUPER-CRAPPY&#32;packing&#32;to&#32;keep&#32;source&#32;code&#32;small</emphasis>
3755 
3756 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt_BakeFontBitmap_internal(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;&#32;<emphasis role="comment">//&#32;font&#32;location&#32;(use&#32;offset=0&#32;for&#32;plain&#32;.ttf)</emphasis>
3757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_height,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;height&#32;of&#32;font&#32;in&#32;pixels</emphasis>
3758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;&#32;<emphasis role="comment">//&#32;bitmap&#32;to&#32;be&#32;filled&#32;in</emphasis>
3759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_char,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_chars,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;characters&#32;to&#32;bake</emphasis>
3760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;*chardata)
3761 {
3762 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>;
3763 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,bottom_y,&#32;i;
3764 &#32;&#32;&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
3765 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>.<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3766 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>))
3767 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
3768 &#32;&#32;&#32;STBTT_memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;0,&#32;pw*ph);&#32;<emphasis role="comment">//&#32;background&#32;of&#32;0&#32;around&#32;pixels</emphasis>
3769 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=1;
3770 &#32;&#32;&#32;bottom_y&#32;=&#32;1;
3771 
3772 &#32;&#32;&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;pixel_height);
3773 
3774 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_chars;&#32;++i)&#32;{
3775 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;advance,&#32;lsb,&#32;x0,y0,x1,y1,gw,gh;
3776 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;first_char&#32;+&#32;i);
3777 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a">stbtt_GetGlyphHMetrics</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;&amp;advance,&#32;&amp;lsb);
3778 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53">stbtt_GetGlyphBitmapBox</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;scale,scale,&#32;&amp;x0,&amp;y0,&amp;x1,&amp;y1);
3779 &#32;&#32;&#32;&#32;&#32;&#32;gw&#32;=&#32;x1-x0;
3780 &#32;&#32;&#32;&#32;&#32;&#32;gh&#32;=&#32;y1-y0;
3781 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;gw&#32;+&#32;1&#32;&gt;=&#32;pw)
3782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;bottom_y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;1;&#32;<emphasis role="comment">//&#32;advance&#32;to&#32;next&#32;row</emphasis>
3783 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;gh&#32;+&#32;1&#32;&gt;=&#32;ph)&#32;<emphasis role="comment">//&#32;check&#32;if&#32;it&#32;fits&#32;vertically&#32;AFTER&#32;potentially&#32;moving&#32;to&#32;next&#32;row</emphasis>
3784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-i;
3785 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+gw&#32;&lt;&#32;pw);
3786 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>+gh&#32;&lt;&#32;ph);
3787 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a915acab7676b20098f4d480376c5b589">stbtt_MakeGlyphBitmap</link>(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*pw,&#32;gw,gh,pw,&#32;scale,scale,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>);
3788 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1a8011a0ed0410de9fa405c9cb1ab43da2">x0</link>&#32;=&#32;(stbtt_int16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3789 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1aec4def12c086e0038ba32ff33ee78644">y0</link>&#32;=&#32;(stbtt_int16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
3790 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1a72c22c32abde95a5ba02925b8bd892bf">x1</link>&#32;=&#32;(stbtt_int16)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;gw);
3791 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1ac831dc667f6c39b5d22740c6cbd5bc3f">y1</link>&#32;=&#32;(stbtt_int16)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;gh);
3792 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1ad77b35d1a849d9eb7edb91df05b10536">xadvance</link>&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;advance;
3793 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1a0708a6588a2768b68a3ae59002944b7c">xoff</link>&#32;&#32;&#32;&#32;&#32;=&#32;(float)&#32;x0;
3794 &#32;&#32;&#32;&#32;&#32;&#32;chardata[i].<link linkend="_structstbtt__bakedchar_1aba01393e52d1c6f4ce86a8b51e498bb4">yoff</link>&#32;&#32;&#32;&#32;&#32;=&#32;(float)&#32;y0;
3795 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;gw&#32;+&#32;1;
3796 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>+gh+1&#32;&gt;&#32;bottom_y)
3797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bottom_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>+gh+1;
3798 &#32;&#32;&#32;}
3799 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bottom_y;
3800 }
3801 
3802 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f">stbtt_GetBakedQuad</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;*chardata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;char_index,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*xpos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ypos,&#32;<link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link>&#32;*q,&#32;<emphasis role="keywordtype">int</emphasis>&#32;opengl_fillrule)
3803 {
3804 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d3d_bias&#32;=&#32;opengl_fillrule&#32;?&#32;0&#32;:&#32;-0.5f;
3805 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ipw&#32;=&#32;1.0f&#32;/&#32;pw,&#32;iph&#32;=&#32;1.0f&#32;/&#32;ph;
3806 &#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;chardata&#32;+&#32;char_index;
3807 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;round_x&#32;=&#32;STBTT_ifloor((*xpos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xoff)&#32;+&#32;0.5f);
3808 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;round_y&#32;=&#32;STBTT_ifloor((*ypos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;yoff)&#32;+&#32;0.5f);
3809 
3810 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e">x0</link>&#32;=&#32;round_x&#32;+&#32;d3d_bias;
3811 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6">y0</link>&#32;=&#32;round_y&#32;+&#32;d3d_bias;
3812 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6">x1</link>&#32;=&#32;round_x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;x1&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;x0&#32;+&#32;d3d_bias;
3813 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c">y1</link>&#32;=&#32;round_y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;y1&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;y0&#32;+&#32;d3d_bias;
3814 
3815 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59">s0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;x0&#32;*&#32;ipw;
3816 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49">t0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;y0&#32;*&#32;iph;
3817 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b">s1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;x1&#32;*&#32;ipw;
3818 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b">t1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;y1&#32;*&#32;iph;
3819 
3820 &#32;&#32;&#32;*xpos&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xadvance;
3821 }
3822 
3824 <emphasis role="comment">//</emphasis>
3825 <emphasis role="comment">//&#32;rectangle&#32;packing&#32;replacement&#32;routines&#32;if&#32;you&#32;don&apos;t&#32;have&#32;stb_rect_pack.h</emphasis>
3826 <emphasis role="comment">//</emphasis>
3827 
3828 <emphasis role="preprocessor">#ifndef&#32;STB_RECT_PACK_VERSION</emphasis>
3829 
3830 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a4a396a45893c12de32e2d598abd6b302">stbrp_coord</link>;
3831 
3833 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3834 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3835 <emphasis role="comment">//&#32;COMPILER&#32;WARNING&#32;?!?!?&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3836 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3837 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3838 <emphasis role="comment">//&#32;if&#32;you&#32;get&#32;a&#32;compile&#32;warning&#32;due&#32;to&#32;these&#32;symbols&#32;being&#32;defined&#32;more&#32;than&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3839 <emphasis role="comment">//&#32;once,&#32;move&#32;#include&#32;&quot;stb_rect_pack.h&quot;&#32;before&#32;#include&#32;&quot;stb_truetype.h&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3840 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
3842 
3843 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
3844 {
3845 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
3846 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,bottom_y;
3847 }&#32;<link linkend="_structstbrp__context">stbrp_context</link>;
3848 
3849 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
3850 {
3851 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3852 }&#32;<link linkend="_structstbrp__node">stbrp_node</link>;
3853 
3854 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structstbrp__rect">stbrp_rect</link>
3855 {
3856 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a4a396a45893c12de32e2d598abd6b302">stbrp_coord</link>&#32;<link linkend="_structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18">x</link>,<link linkend="_structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa">y</link>;
3857 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structstbrp__rect_1a92da8626bc99df041c0c3bfd01c25f7a">id</link>,<link linkend="_structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5">w</link>,<link linkend="_structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398">h</link>,<link linkend="_structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49">was_packed</link>;
3858 };
3859 
3860 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c">stbrp_init_target</link>(<link linkend="_structstbrp__context">stbrp_context</link>&#32;*con,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;<link linkend="_structstbrp__node">stbrp_node</link>&#32;*nodes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_nodes)
3861 {
3862 &#32;&#32;&#32;con-&gt;<link linkend="_structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2">width</link>&#32;&#32;=&#32;pw;
3863 &#32;&#32;&#32;con-&gt;<link linkend="_structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7">height</link>&#32;=&#32;ph;
3864 &#32;&#32;&#32;con-&gt;x&#32;=&#32;0;
3865 &#32;&#32;&#32;con-&gt;y&#32;=&#32;0;
3866 &#32;&#32;&#32;con-&gt;bottom_y&#32;=&#32;0;
3867 &#32;&#32;&#32;STBTT__NOTUSED(nodes);
3868 &#32;&#32;&#32;STBTT__NOTUSED(num_nodes);
3869 }
3870 
3871 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1af038ae1b98573f24736c9a3eed0478ba">stbrp_pack_rects</link>(<link linkend="_structstbrp__context">stbrp_context</link>&#32;*con,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_rects)
3872 {
3873 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3874 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_rects;&#32;++i)&#32;{
3875 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(con-&gt;x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].w&#32;&gt;&#32;con-&gt;<link linkend="_structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2">width</link>)&#32;{
3876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;con-&gt;x&#32;=&#32;0;
3877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;con-&gt;y&#32;=&#32;con-&gt;bottom_y;
3878 &#32;&#32;&#32;&#32;&#32;&#32;}
3879 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(con-&gt;y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].h&#32;&gt;&#32;con-&gt;<link linkend="_structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7">height</link>)
3880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3881 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].x&#32;=&#32;con-&gt;x;
3882 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].y&#32;=&#32;con-&gt;y;
3883 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].was_packed&#32;=&#32;1;
3884 &#32;&#32;&#32;&#32;&#32;&#32;con-&gt;x&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].w;
3885 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(con-&gt;y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].h&#32;&gt;&#32;con-&gt;bottom_y)
3886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;con-&gt;bottom_y&#32;=&#32;con-&gt;y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].h;
3887 &#32;&#32;&#32;}
3888 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;&#32;&#32;;&#32;i&#32;&lt;&#32;num_rects;&#32;++i)
3889 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[i].was_packed&#32;=&#32;0;
3890 }
3891 <emphasis role="preprocessor">#endif</emphasis>
3892 
3894 <emphasis role="comment">//</emphasis>
3895 <emphasis role="comment">//&#32;bitmap&#32;baking</emphasis>
3896 <emphasis role="comment">//</emphasis>
3897 <emphasis role="comment">//&#32;This&#32;is&#32;SUPER-AWESOME&#32;(tm&#32;Ryan&#32;Gordon)&#32;packing&#32;using&#32;stb_rect_pack.h.&#32;If</emphasis>
3898 <emphasis role="comment">//&#32;stb_rect_pack.h&#32;isn&apos;t&#32;available,&#32;it&#32;uses&#32;the&#32;BakeFontBitmap&#32;strategy.</emphasis>
3899 
3900 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c">stbtt_PackBegin</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_in_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*alloc_context)
3901 {
3902 &#32;&#32;&#32;<link linkend="_structstbrp__context">stbrp_context</link>&#32;*context&#32;=&#32;(<link linkend="_structstbrp__context">stbrp_context</link>&#32;*)&#32;STBTT_malloc(<emphasis role="keyword">sizeof</emphasis>(*context)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,alloc_context);
3903 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_nodes&#32;=&#32;pw&#32;-&#32;padding;
3904 &#32;&#32;&#32;<link linkend="_structstbrp__node">stbrp_node</link>&#32;&#32;&#32;&#32;*nodes&#32;&#32;&#32;=&#32;(<link linkend="_structstbrp__node">stbrp_node</link>&#32;&#32;&#32;&#32;*)&#32;STBTT_malloc(<emphasis role="keyword">sizeof</emphasis>(*nodes&#32;&#32;)&#32;*&#32;num_nodes,alloc_context);
3905 
3906 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(context&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;nodes&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3907 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(context&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;STBTT_free(context,&#32;alloc_context);
3908 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nodes&#32;&#32;&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;STBTT_free(nodes&#32;&#32;,&#32;alloc_context);
3909 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3910 &#32;&#32;&#32;}
3911 
3912 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>&#32;=&#32;alloc_context;
3913 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a5da0b7b5d3b82d5fc75ea1c8945183fa">width</link>&#32;=&#32;pw;
3914 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a817ec010d7f09ba9776517c5a87f13a7">height</link>&#32;=&#32;ph;
3915 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1ab38df62d7d0360ac6d933bf91e2d97a8">pixels</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>;
3916 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4a6d1ef127c0519944d8df1ed2040189">pack_info</link>&#32;=&#32;context;
3917 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a3578ba8099a507eae79f5ffaf4e3b095">nodes</link>&#32;=&#32;nodes;
3918 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803">padding</link>&#32;=&#32;padding;
3919 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>&#32;=&#32;stride_in_bytes&#32;!=&#32;0&#32;?&#32;stride_in_bytes&#32;:&#32;pw;
3920 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>&#32;=&#32;1;
3921 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>&#32;=&#32;1;
3922 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3">skip_missing</link>&#32;=&#32;0;
3923 
3924 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c">stbrp_init_target</link>(context,&#32;pw-padding,&#32;ph-padding,&#32;nodes,&#32;num_nodes);
3925 
3926 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>)
3927 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;0,&#32;pw*ph);&#32;<emphasis role="comment">//&#32;background&#32;of&#32;0&#32;around&#32;pixels</emphasis>
3928 
3929 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3930 }
3931 
3932 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140">stbtt_PackEnd</link>&#32;&#32;(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc)
3933 {
3934 &#32;&#32;&#32;STBTT_free(spc-&gt;<link linkend="_structstbtt__pack__context_1a3578ba8099a507eae79f5ffaf4e3b095">nodes</link>&#32;&#32;&#32;&#32;,&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>);
3935 &#32;&#32;&#32;STBTT_free(spc-&gt;<link linkend="_structstbtt__pack__context_1a4a6d1ef127c0519944d8df1ed2040189">pack_info</link>,&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>);
3936 }
3937 
3938 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e">stbtt_PackSetOversampling</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;h_oversample,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;v_oversample)
3939 {
3940 &#32;&#32;&#32;STBTT_assert(h_oversample&#32;&lt;=&#32;STBTT_MAX_OVERSAMPLE);
3941 &#32;&#32;&#32;STBTT_assert(v_oversample&#32;&lt;=&#32;STBTT_MAX_OVERSAMPLE);
3942 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(h_oversample&#32;&lt;=&#32;STBTT_MAX_OVERSAMPLE)
3943 &#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>&#32;=&#32;h_oversample;
3944 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v_oversample&#32;&lt;=&#32;STBTT_MAX_OVERSAMPLE)
3945 &#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>&#32;=&#32;v_oversample;
3946 }
3947 
3948 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e">stbtt_PackSetSkipMissingCodepoints</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;skip)
3949 {
3950 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3">skip_missing</link>&#32;=&#32;skip;
3951 }
3952 
3953 <emphasis role="preprocessor">#define&#32;STBTT__OVER_MASK&#32;&#32;(STBTT_MAX_OVERSAMPLE-1)</emphasis>
3954 
3955 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__h_prefilter(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_in_bytes,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;kernel_width)
3956 {
3957 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[STBTT_MAX_OVERSAMPLE];
3958 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;safe_w&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;-&#32;kernel_width;
3959 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
3960 &#32;&#32;&#32;STBTT_memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;0,&#32;STBTT_MAX_OVERSAMPLE);&#32;<emphasis role="comment">//&#32;suppress&#32;bogus&#32;warning&#32;from&#32;VS2013&#32;-analyze</emphasis>
3961 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;h;&#32;++j)&#32;{
3962 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3963 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;total;
3964 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;0,&#32;kernel_width);
3965 
3966 &#32;&#32;&#32;&#32;&#32;&#32;total&#32;=&#32;0;
3967 
3968 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;make&#32;kernel_width&#32;a&#32;constant&#32;in&#32;common&#32;cases&#32;so&#32;compiler&#32;can&#32;optimize&#32;out&#32;the&#32;divide</emphasis>
3969 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(kernel_width)&#32;{
3970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
3971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_w;&#32;++i)&#32;{
3972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
3973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i];
3974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;2);
3975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
3978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_w;&#32;++i)&#32;{
3979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
3980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i];
3981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;3);
3982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
3985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_w;&#32;++i)&#32;{
3986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
3987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i];
3988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;4);
3989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;5:
3992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_w;&#32;++i)&#32;{
3993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
3994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i];
3995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;5);
3996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
3999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_w;&#32;++i)&#32;{
4000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i];
4002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;kernel_width);
4003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4005 &#32;&#32;&#32;&#32;&#32;&#32;}
4006 
4007 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)&#32;{
4008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;==&#32;0);
4009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;-=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;kernel_width);
4011 &#32;&#32;&#32;&#32;&#32;&#32;}
4012 
4013 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>&#32;+=&#32;stride_in_bytes;
4014 &#32;&#32;&#32;}
4015 }
4016 
4017 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbtt__v_prefilter(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_in_bytes,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;kernel_width)
4018 {
4019 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[STBTT_MAX_OVERSAMPLE];
4020 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;safe_h&#32;=&#32;h&#32;-&#32;kernel_width;
4021 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
4022 &#32;&#32;&#32;STBTT_memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;0,&#32;STBTT_MAX_OVERSAMPLE);&#32;<emphasis role="comment">//&#32;suppress&#32;bogus&#32;warning&#32;from&#32;VS2013&#32;-analyze</emphasis>
4023 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++j)&#32;{
4024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
4025 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;total;
4026 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;0,&#32;kernel_width);
4027 
4028 &#32;&#32;&#32;&#32;&#32;&#32;total&#32;=&#32;0;
4029 
4030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;make&#32;kernel_width&#32;a&#32;constant&#32;in&#32;common&#32;cases&#32;so&#32;compiler&#32;can&#32;optimize&#32;out&#32;the&#32;divide</emphasis>
4031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(kernel_width)&#32;{
4032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
4033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_h;&#32;++i)&#32;{
4034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes];
4036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;2);
4037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
4040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_h;&#32;++i)&#32;{
4041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes];
4043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;3);
4044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
4047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_h;&#32;++i)&#32;{
4048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes];
4050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;4);
4051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;5:
4054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_h;&#32;++i)&#32;{
4055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes];
4057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;5);
4058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
4061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;=&#32;safe_h;&#32;++i)&#32;{
4062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[(i+kernel_width)&#32;&amp;&#32;STBTT__OVER_MASK]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes];
4064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;kernel_width);
4065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4067 &#32;&#32;&#32;&#32;&#32;&#32;}
4068 
4069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;h;&#32;++i)&#32;{
4070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;==&#32;0);
4071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total&#32;-=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i&#32;&amp;&#32;STBTT__OVER_MASK];
4072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>[i*stride_in_bytes]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(total&#32;/&#32;kernel_width);
4073 &#32;&#32;&#32;&#32;&#32;&#32;}
4074 
4075 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>&#32;+=&#32;1;
4076 &#32;&#32;&#32;}
4077 }
4078 
4079 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;stbtt__oversample_shift(<emphasis role="keywordtype">int</emphasis>&#32;oversample)
4080 {
4081 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!oversample)
4082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
4083 
4084 &#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;prefilter&#32;is&#32;a&#32;box&#32;filter&#32;of&#32;width&#32;&quot;oversample&quot;,</emphasis>
4085 &#32;&#32;&#32;<emphasis role="comment">//&#32;which&#32;shifts&#32;phase&#32;by&#32;(oversample&#32;-&#32;1)/2&#32;pixels&#32;in</emphasis>
4086 &#32;&#32;&#32;<emphasis role="comment">//&#32;oversampled&#32;space.&#32;We&#32;want&#32;to&#32;shift&#32;in&#32;the&#32;opposite</emphasis>
4087 &#32;&#32;&#32;<emphasis role="comment">//&#32;direction&#32;to&#32;counter&#32;this.</emphasis>
4088 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)-(oversample&#32;-&#32;1)&#32;/&#32;(2.0f&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)oversample);
4089 }
4090 
4091 <emphasis role="comment">//&#32;rects&#32;array&#32;must&#32;be&#32;big&#32;enough&#32;to&#32;accommodate&#32;all&#32;characters&#32;in&#32;the&#32;given&#32;ranges</emphasis>
4092 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50">stbtt_PackFontRangesGatherRects</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;*ranges,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_ranges,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>)
4093 {
4094 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k;
4095 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;missing_glyph_added&#32;=&#32;0;
4096 
4097 &#32;&#32;&#32;k=0;
4098 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_ranges;&#32;++i)&#32;{
4099 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fh&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828">font_size</link>;
4100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;fh&#32;&gt;&#32;0&#32;?&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(info,&#32;fh)&#32;:&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607">stbtt_ScaleForMappingEmToPixels</link>(info,&#32;-fh);
4101 &#32;&#32;&#32;&#32;&#32;&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008">h_oversample</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>;
4102 &#32;&#32;&#32;&#32;&#32;&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a6288f14006e257544db3d015c32b4113">v_oversample</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>;
4103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23">num_chars</link>;&#32;++j)&#32;{
4104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0,y0,x1,y1;
4105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a3906ee944585d3bf69246197b5763fee">array_of_unicode_codepoints</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;?&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759">first_unicode_codepoint_in_range</link>&#32;+&#32;j&#32;:&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a3906ee944585d3bf69246197b5763fee">array_of_unicode_codepoints</link>[j];
4106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,&#32;codepoint);
4107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph&#32;==&#32;0&#32;&amp;&amp;&#32;(spc-&gt;<link linkend="_structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3">skip_missing</link>&#32;||&#32;missing_glyph_added))&#32;{
4108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[k].w&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[k].h&#32;=&#32;0;
4109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(info,glyph,
4111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;*&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>,
4112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;*&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>,
4113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,0,
4114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;x0,&amp;y0,&amp;x1,&amp;y1);
4115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[k].w&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a4a396a45893c12de32e2d598abd6b302">stbrp_coord</link>)&#32;(x1-x0&#32;+&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803">padding</link>&#32;+&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>-1);
4116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[k].h&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a4a396a45893c12de32e2d598abd6b302">stbrp_coord</link>)&#32;(y1-y0&#32;+&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803">padding</link>&#32;+&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>-1);
4117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph&#32;==&#32;0)
4118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;missing_glyph_added&#32;=&#32;1;
4119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++k;
4121 &#32;&#32;&#32;&#32;&#32;&#32;}
4122 &#32;&#32;&#32;}
4123 
4124 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
4125 }
4126 
4127 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a006159e27c5c733ea11c688211e47c25">stbtt_MakeGlyphBitmapSubpixelPrefilter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;shift_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;prefilter_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;prefilter_y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*sub_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph)
4128 {
4129 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link>(info,
4130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output,
4131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out_w&#32;-&#32;(prefilter_x&#32;-&#32;1),
4132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out_h&#32;-&#32;(prefilter_y&#32;-&#32;1),
4133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out_stride,
4134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale_x,
4135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale_y,
4136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift_x,
4137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift_y,
4138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glyph);
4139 
4140 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prefilter_x&#32;&gt;&#32;1)
4141 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__h_prefilter(output,&#32;out_w,&#32;out_h,&#32;out_stride,&#32;prefilter_x);
4142 
4143 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prefilter_y&#32;&gt;&#32;1)
4144 &#32;&#32;&#32;&#32;&#32;&#32;stbtt__v_prefilter(output,&#32;out_w,&#32;out_h,&#32;out_stride,&#32;prefilter_y);
4145 
4146 &#32;&#32;&#32;*sub_x&#32;=&#32;stbtt__oversample_shift(prefilter_x);
4147 &#32;&#32;&#32;*sub_y&#32;=&#32;stbtt__oversample_shift(prefilter_y);
4148 }
4149 
4150 <emphasis role="comment">//&#32;rects&#32;array&#32;must&#32;be&#32;big&#32;enough&#32;to&#32;accommodate&#32;all&#32;characters&#32;in&#32;the&#32;given&#32;ranges</emphasis>
4151 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631">stbtt_PackFontRangesRenderIntoRects</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;*ranges,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_ranges,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>)
4152 {
4153 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k,&#32;missing_glyph&#32;=&#32;-1,&#32;return_value&#32;=&#32;1;
4154 
4155 &#32;&#32;&#32;<emphasis role="comment">//&#32;save&#32;current&#32;values</emphasis>
4156 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;old_h_over&#32;=&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>;
4157 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;old_v_over&#32;=&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>;
4158 
4159 &#32;&#32;&#32;k&#32;=&#32;0;
4160 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_ranges;&#32;++i)&#32;{
4161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fh&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828">font_size</link>;
4162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;fh&#32;&gt;&#32;0&#32;?&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(info,&#32;fh)&#32;:&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607">stbtt_ScaleForMappingEmToPixels</link>(info,&#32;-fh);
4163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;recip_h,recip_v,sub_x,sub_y;
4164 &#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008">h_oversample</link>;
4165 &#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a6288f14006e257544db3d015c32b4113">v_oversample</link>;
4166 &#32;&#32;&#32;&#32;&#32;&#32;recip_h&#32;=&#32;1.0f&#32;/&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>;
4167 &#32;&#32;&#32;&#32;&#32;&#32;recip_v&#32;=&#32;1.0f&#32;/&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>;
4168 &#32;&#32;&#32;&#32;&#32;&#32;sub_x&#32;=&#32;stbtt__oversample_shift(spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>);
4169 &#32;&#32;&#32;&#32;&#32;&#32;sub_y&#32;=&#32;stbtt__oversample_shift(spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>);
4170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23">num_chars</link>;&#32;++j)&#32;{
4171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>[k];
4172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;was_packed&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w&#32;!=&#32;0&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h&#32;!=&#32;0)&#32;{
4173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*bc&#32;=&#32;&amp;ranges[i].<link linkend="_structstbtt__pack__range_1a6b57fce452aa0ce742f20ae0e0c37f7d">chardata_for_range</link>[j];
4174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;advance,&#32;lsb,&#32;x0,y0,x1,y1;
4175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a3906ee944585d3bf69246197b5763fee">array_of_unicode_codepoints</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;?&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759">first_unicode_codepoint_in_range</link>&#32;+&#32;j&#32;:&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a3906ee944585d3bf69246197b5763fee">array_of_unicode_codepoints</link>[j];
4176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,&#32;codepoint);
4177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a4a396a45893c12de32e2d598abd6b302">stbrp_coord</link>&#32;pad&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1a4a396a45893c12de32e2d598abd6b302">stbrp_coord</link>)&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803">padding</link>;
4178 
4179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pad&#32;on&#32;left&#32;and&#32;top</emphasis>
4180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;x&#32;+=&#32;pad;
4181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;y&#32;+=&#32;pad;
4182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w&#32;-=&#32;pad;
4183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h&#32;-=&#32;pad;
4184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a">stbtt_GetGlyphHMetrics</link>(info,&#32;glyph,&#32;&amp;advance,&#32;&amp;lsb);
4185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53">stbtt_GetGlyphBitmapBox</link>(info,&#32;glyph,
4186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;*&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>,
4187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;*&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>,
4188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;x0,&amp;y0,&amp;x1,&amp;y1);
4189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link>(info,
4190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1ab38df62d7d0360ac6d933bf91e2d97a8">pixels</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;y*spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>,
4191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w&#32;-&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>+1,
4192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h&#32;-&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>+1,
4193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>,
4194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;*&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>,
4195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;*&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>,
4196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,0,
4197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glyph);
4198 
4199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>&#32;&gt;&#32;1)
4200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__h_prefilter(spc-&gt;<link linkend="_structstbtt__pack__context_1ab38df62d7d0360ac6d933bf91e2d97a8">pixels</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;y*spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>,
4201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h,&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>,
4202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>);
4203 
4204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>&#32;&gt;&#32;1)
4205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt__v_prefilter(spc-&gt;<link linkend="_structstbtt__pack__context_1ab38df62d7d0360ac6d933bf91e2d97a8">pixels</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;y*spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>,
4206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h,&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801">stride_in_bytes</link>,
4207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>);
4208 
4209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;x0&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(stbtt_int16)&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;x;
4210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;y0&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(stbtt_int16)&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;y;
4211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;x1&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(stbtt_int16)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w);
4212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;y1&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(stbtt_int16)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h);
4213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;xadvance&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;advance;
4214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;xoff&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float)&#32;&#32;x0&#32;*&#32;recip_h&#32;+&#32;sub_x;
4215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;yoff&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float)&#32;&#32;y0&#32;*&#32;recip_v&#32;+&#32;sub_y;
4216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;xoff2&#32;&#32;&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(x0&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w)&#32;*&#32;recip_h&#32;+&#32;sub_x;
4217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc-&gt;yoff2&#32;&#32;&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(y0&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h)&#32;*&#32;recip_v&#32;+&#32;sub_y;
4218 
4219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glyph&#32;==&#32;0)
4220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;missing_glyph&#32;=&#32;j;
4221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(spc-&gt;<link linkend="_structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3">skip_missing</link>)&#32;{
4222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return_value&#32;=&#32;0;
4223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;was_packed&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;h&#32;==&#32;0&#32;&amp;&amp;&#32;missing_glyph&#32;&gt;=&#32;0)&#32;{
4224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a6b57fce452aa0ce742f20ae0e0c37f7d">chardata_for_range</link>[j]&#32;=&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a6b57fce452aa0ce742f20ae0e0c37f7d">chardata_for_range</link>[missing_glyph];
4225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return_value&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;if&#32;any&#32;fail,&#32;report&#32;failure</emphasis>
4227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4228 
4229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++k;
4230 &#32;&#32;&#32;&#32;&#32;&#32;}
4231 &#32;&#32;&#32;}
4232 
4233 &#32;&#32;&#32;<emphasis role="comment">//&#32;restore&#32;original&#32;values</emphasis>
4234 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7">h_oversample</link>&#32;=&#32;old_h_over;
4235 &#32;&#32;&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0">v_oversample</link>&#32;=&#32;old_v_over;
4236 
4237 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;return_value;
4238 }
4239 
4240 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259">stbtt_PackFontRangesPackRects</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_rects)
4241 {
4242 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__rect__pack_8h_1af038ae1b98573f24736c9a3eed0478ba">stbrp_pack_rects</link>((<link linkend="_structstbrp__context">stbrp_context</link>&#32;*)&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a4a6d1ef127c0519944d8df1ed2040189">pack_info</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>,&#32;num_rects);
4243 }
4244 
4245 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157">stbtt_PackFontRanges</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;font_index,&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;*ranges,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_ranges)
4246 {
4247 &#32;&#32;&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;info;
4248 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,n,&#32;return_value&#32;=&#32;1;
4249 &#32;&#32;&#32;<emphasis role="comment">//stbrp_context&#32;*context&#32;=&#32;(stbrp_context&#32;*)&#32;spc-&gt;pack_info;</emphasis>
4250 &#32;&#32;&#32;<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>;
4251 
4252 &#32;&#32;&#32;<emphasis role="comment">//&#32;flag&#32;all&#32;characters&#32;as&#32;NOT&#32;packed</emphasis>
4253 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_ranges;&#32;++i)
4254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;ranges[i].<link linkend="_structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23">num_chars</link>;&#32;++j)
4255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranges[i].chardata_for_range[j].x0&#32;=
4256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranges[i].chardata_for_range[j].y0&#32;=
4257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranges[i].chardata_for_range[j].x1&#32;=
4258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranges[i].chardata_for_range[j].y1&#32;=&#32;0;
4259 
4260 &#32;&#32;&#32;n&#32;=&#32;0;
4261 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_ranges;&#32;++i)
4262 &#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;ranges[i].num_chars;
4263 
4264 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>&#32;=&#32;(<link linkend="_structstbrp__rect">stbrp_rect</link>&#32;*)&#32;STBTT_malloc(<emphasis role="keyword">sizeof</emphasis>(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>)&#32;*&#32;n,&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>);
4265 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
4266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4267 
4268 &#32;&#32;&#32;info.<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>&#32;=&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>;
4269 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(&amp;info,&#32;fontdata,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link>(fontdata,font_index));
4270 
4271 &#32;&#32;&#32;n&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50">stbtt_PackFontRangesGatherRects</link>(spc,&#32;&amp;info,&#32;ranges,&#32;num_ranges,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>);
4272 
4273 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259">stbtt_PackFontRangesPackRects</link>(spc,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>,&#32;n);
4274 
4275 &#32;&#32;&#32;return_value&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631">stbtt_PackFontRangesRenderIntoRects</link>(spc,&#32;&amp;info,&#32;ranges,&#32;num_ranges,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>);
4276 
4277 &#32;&#32;&#32;STBTT_free(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac34ca70e63c2ed89e7bf6ba3b4b62f1b">rects</link>,&#32;spc-&gt;<link linkend="_structstbtt__pack__context_1a041d5b253c9136229be81c5509ea1d1a">user_allocator_context</link>);
4278 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;return_value;
4279 }
4280 
4281 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f">stbtt_PackFontRange</link>(<link linkend="_structstbtt__pack__context">stbtt_pack_context</link>&#32;*spc,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;font_index,&#32;<emphasis role="keywordtype">float</emphasis>&#32;font_size,
4282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_unicode_codepoint_in_range,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_chars_in_range,&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*chardata_for_range)
4283 {
4284 &#32;&#32;&#32;<link linkend="_structstbtt__pack__range">stbtt_pack_range</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>;
4285 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>.<link linkend="_structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759">first_unicode_codepoint_in_range</link>&#32;=&#32;first_unicode_codepoint_in_range;
4286 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>.array_of_unicode_codepoints&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4287 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>.num_chars&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;num_chars_in_range;
4288 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>.chardata_for_range&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;chardata_for_range;
4289 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>.font_size&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;font_size;
4290 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157">stbtt_PackFontRanges</link>(spc,&#32;fontdata,&#32;font_index,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7b8ad0b27a927682837f95528fa454f5">range</link>,&#32;1);
4291 }
4292 
4293 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42">stbtt_GetScaledFontVMetrics</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ascent,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*descent,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*lineGap)
4294 {
4295 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_ascent,&#32;i_descent,&#32;i_lineGap;
4296 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>;
4297 &#32;&#32;&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;info;
4298 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(&amp;info,&#32;fontdata,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link>(fontdata,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>));
4299 &#32;&#32;&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;&gt;&#32;0&#32;?&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(&amp;info,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)&#32;:&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607">stbtt_ScaleForMappingEmToPixels</link>(&amp;info,&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);
4300 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0">stbtt_GetFontVMetrics</link>(&amp;info,&#32;&amp;i_ascent,&#32;&amp;i_descent,&#32;&amp;i_lineGap);
4301 &#32;&#32;&#32;*ascent&#32;&#32;=&#32;(float)&#32;i_ascent&#32;&#32;*&#32;scale;
4302 &#32;&#32;&#32;*descent&#32;=&#32;(float)&#32;i_descent&#32;*&#32;scale;
4303 &#32;&#32;&#32;*lineGap&#32;=&#32;(float)&#32;i_lineGap&#32;*&#32;scale;
4304 }
4305 
4306 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e">stbtt_GetPackedQuad</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*chardata,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;char_index,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*xpos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ypos,&#32;<link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link>&#32;*q,&#32;<emphasis role="keywordtype">int</emphasis>&#32;align_to_integer)
4307 {
4308 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ipw&#32;=&#32;1.0f&#32;/&#32;pw,&#32;iph&#32;=&#32;1.0f&#32;/&#32;ph;
4309 &#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__packedchar">stbtt_packedchar</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;chardata&#32;+&#32;char_index;
4310 
4311 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(align_to_integer)&#32;{
4312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;(float)&#32;STBTT_ifloor((*xpos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xoff)&#32;+&#32;0.5f);
4313 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;(float)&#32;STBTT_ifloor((*ypos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;yoff)&#32;+&#32;0.5f);
4314 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e">x0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
4315 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6">y0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4316 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6">x1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xoff2&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xoff;
4317 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c">y1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;yoff2&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;yoff;
4318 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4319 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e">x0</link>&#32;=&#32;*xpos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xoff;
4320 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6">y0</link>&#32;=&#32;*ypos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;yoff;
4321 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6">x1</link>&#32;=&#32;*xpos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xoff2;
4322 &#32;&#32;&#32;&#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c">y1</link>&#32;=&#32;*ypos&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;yoff2;
4323 &#32;&#32;&#32;}
4324 
4325 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59">s0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;x0&#32;*&#32;ipw;
4326 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49">t0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;y0&#32;*&#32;iph;
4327 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b">s1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;x1&#32;*&#32;ipw;
4328 &#32;&#32;&#32;q-&gt;<link linkend="_structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b">t1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;y1&#32;*&#32;iph;
4329 
4330 &#32;&#32;&#32;*xpos&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-&gt;xadvance;
4331 }
4332 
4334 <emphasis role="comment">//</emphasis>
4335 <emphasis role="comment">//&#32;sdf&#32;computation</emphasis>
4336 <emphasis role="comment">//</emphasis>
4337 
4338 <emphasis role="preprocessor">#define&#32;STBTT_min(a,b)&#32;&#32;((a)&#32;&lt;&#32;(b)&#32;?&#32;(a)&#32;:&#32;(b))</emphasis>
4339 <emphasis role="preprocessor">#define&#32;STBTT_max(a,b)&#32;&#32;((a)&#32;&lt;&#32;(b)&#32;?&#32;(b)&#32;:&#32;(a))</emphasis>
4340 
4341 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__ray_intersect_bezier(<emphasis role="keywordtype">float</emphasis>&#32;orig[2],&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[2],&#32;<emphasis role="keywordtype">float</emphasis>&#32;q0[2],&#32;<emphasis role="keywordtype">float</emphasis>&#32;q1[2],&#32;<emphasis role="keywordtype">float</emphasis>&#32;q2[2],&#32;<emphasis role="keywordtype">float</emphasis>&#32;hits[2][2])
4342 {
4343 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q0perp&#32;=&#32;q0[1]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]&#32;-&#32;q0[0]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1];
4344 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q1perp&#32;=&#32;q1[1]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]&#32;-&#32;q1[0]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1];
4345 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q2perp&#32;=&#32;q2[1]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]&#32;-&#32;q2[0]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1];
4346 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;roperp&#32;=&#32;orig[1]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]&#32;-&#32;orig[0]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1];
4347 
4348 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;q0perp&#32;-&#32;2*q1perp&#32;+&#32;q2perp;
4349 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;q1perp&#32;-&#32;q0perp;
4350 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;c&#32;=&#32;q0perp&#32;-&#32;roperp;
4351 
4352 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s0&#32;=&#32;0.,&#32;s1&#32;=&#32;0.;
4353 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_s&#32;=&#32;0;
4354 
4355 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;!=&#32;0.0)&#32;{
4356 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;discr&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*c;
4357 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(discr&#32;&gt;&#32;0.0)&#32;{
4358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rcpna&#32;=&#32;-1&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d&#32;=&#32;(float)&#32;STBTT_sqrt(discr);
4360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s0&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>+d)&#32;*&#32;rcpna;
4361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s1&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>-d)&#32;*&#32;rcpna;
4362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s0&#32;&gt;=&#32;0.0&#32;&amp;&amp;&#32;s0&#32;&lt;=&#32;1.0)
4363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_s&#32;=&#32;1;
4364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;&gt;&#32;0.0&#32;&amp;&amp;&#32;s1&#32;&gt;=&#32;0.0&#32;&amp;&amp;&#32;s1&#32;&lt;=&#32;1.0)&#32;{
4365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_s&#32;==&#32;0)&#32;s0&#32;=&#32;s1;
4366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++num_s;
4367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4368 &#32;&#32;&#32;&#32;&#32;&#32;}
4369 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4370 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;2*b*s&#32;+&#32;c&#32;=&#32;0</emphasis>
4371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;s&#32;=&#32;-c&#32;/&#32;(2*b)</emphasis>
4372 &#32;&#32;&#32;&#32;&#32;&#32;s0&#32;=&#32;c&#32;/&#32;(-2&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
4373 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s0&#32;&gt;=&#32;0.0&#32;&amp;&amp;&#32;s0&#32;&lt;=&#32;1.0)
4374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_s&#32;=&#32;1;
4375 &#32;&#32;&#32;}
4376 
4377 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_s&#32;==&#32;0)
4378 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4379 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4380 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rcp_len2&#32;=&#32;1&#32;/&#32;(<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]&#32;+&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1]*<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1]);
4381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rayn_x&#32;=&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[0]&#32;*&#32;rcp_len2,&#32;rayn_y&#32;=&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[1]&#32;*&#32;rcp_len2;
4382 
4383 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q0d&#32;=&#32;&#32;&#32;q0[0]*rayn_x&#32;+&#32;&#32;&#32;q0[1]*rayn_y;
4384 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q1d&#32;=&#32;&#32;&#32;q1[0]*rayn_x&#32;+&#32;&#32;&#32;q1[1]*rayn_y;
4385 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q2d&#32;=&#32;&#32;&#32;q2[0]*rayn_x&#32;+&#32;&#32;&#32;q2[1]*rayn_y;
4386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rod&#32;=&#32;orig[0]*rayn_x&#32;+&#32;orig[1]*rayn_y;
4387 
4388 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q10d&#32;=&#32;q1d&#32;-&#32;q0d;
4389 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q20d&#32;=&#32;q2d&#32;-&#32;q0d;
4390 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q0rd&#32;=&#32;q0d&#32;-&#32;rod;
4391 
4392 &#32;&#32;&#32;&#32;&#32;&#32;hits[0][0]&#32;=&#32;q0rd&#32;+&#32;s0*(2.0f&#32;-&#32;2.0f*s0)*q10d&#32;+&#32;s0*s0*q20d;
4393 &#32;&#32;&#32;&#32;&#32;&#32;hits[0][1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*s0+<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
4394 
4395 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_s&#32;&gt;&#32;1)&#32;{
4396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hits[1][0]&#32;=&#32;q0rd&#32;+&#32;s1*(2.0f&#32;-&#32;2.0f*s1)*q10d&#32;+&#32;s1*s1*q20d;
4397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hits[1][1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*s1+<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
4398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
4399 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4401 &#32;&#32;&#32;&#32;&#32;&#32;}
4402 &#32;&#32;&#32;}
4403 }
4404 
4405 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__core__func__vector__relational_1gaf539cf490630ba648dfd6e36aef910a1">equal</link>(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
4406 {
4407 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[0]&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[0]&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[1]&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[1]);
4408 }
4409 
4410 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__compute_crossings_x(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nverts,&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*verts)
4411 {
4412 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
4413 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;orig[2],&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>[2]&#32;=&#32;{&#32;1,&#32;0&#32;};
4414 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y_frac;
4415 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;winding&#32;=&#32;0;
4416 
4417 &#32;&#32;&#32;orig[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
4418 &#32;&#32;&#32;orig[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4419 
4420 &#32;&#32;&#32;<emphasis role="comment">//&#32;make&#32;sure&#32;y&#32;never&#32;passes&#32;through&#32;a&#32;vertex&#32;of&#32;the&#32;shape</emphasis>
4421 &#32;&#32;&#32;y_frac&#32;=&#32;(float)&#32;STBTT_fmod(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;1.0f);
4422 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y_frac&#32;&lt;&#32;0.01f)
4423 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;0.01f;
4424 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y_frac&#32;&gt;&#32;0.99f)
4425 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;-=&#32;0.01f;
4426 &#32;&#32;&#32;orig[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4427 
4428 &#32;&#32;&#32;<emphasis role="comment">//&#32;test&#32;a&#32;ray&#32;from&#32;(-infinity,y)&#32;to&#32;(x,y)</emphasis>
4429 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;nverts;&#32;++i)&#32;{
4430 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(verts[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>)&#32;{
4431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0&#32;=&#32;(int)&#32;verts[i-1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;y0&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;verts[i-1].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>;
4432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x1&#32;=&#32;(int)&#32;verts[i&#32;&#32;].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;y1&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;verts[i&#32;&#32;].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>;
4433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;STBTT_min(y0,y1)&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;STBTT_max(y0,y1)&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;STBTT_min(x0,x1))&#32;{
4434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x_inter&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;-&#32;y0)&#32;/&#32;(y1&#32;-&#32;y0)&#32;*&#32;(x1-x0)&#32;+&#32;x0;
4435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x_inter&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
4436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;winding&#32;+=&#32;(y0&#32;&lt;&#32;y1)&#32;?&#32;1&#32;:&#32;-1;
4437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4438 &#32;&#32;&#32;&#32;&#32;&#32;}
4439 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(verts[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>)&#32;{
4440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0&#32;=&#32;(int)&#32;verts[i-1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;,&#32;y0&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;verts[i-1].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>&#32;;
4441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x1&#32;=&#32;(int)&#32;verts[i&#32;&#32;].cx,&#32;y1&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;verts[i&#32;&#32;].<link linkend="_structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e">cy</link>;
4442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x2&#32;=&#32;(int)&#32;verts[i&#32;&#32;].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;,&#32;y2&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;verts[i&#32;&#32;].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>&#32;;
4443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ax&#32;=&#32;STBTT_min(x0,STBTT_min(x1,x2)),&#32;ay&#32;=&#32;STBTT_min(y0,STBTT_min(y1,y2));
4444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;by&#32;=&#32;STBTT_max(y0,STBTT_max(y1,y2));
4445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;ay&#32;&amp;&amp;&#32;y&#32;&lt;&#32;by&#32;&amp;&amp;&#32;x&#32;&gt;&#32;ax)&#32;{
4446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q0[2],q1[2],q2[2];
4447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;hits[2][2];
4448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q0[0]&#32;=&#32;(float)x0;
4449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q0[1]&#32;=&#32;(float)y0;
4450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q1[0]&#32;=&#32;(float)x1;
4451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q1[1]&#32;=&#32;(float)y1;
4452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q2[0]&#32;=&#32;(float)x2;
4453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q2[1]&#32;=&#32;(float)y2;
4454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__core__func__vector__relational_1gaf539cf490630ba648dfd6e36aef910a1">equal</link>(q0,q1)&#32;||&#32;<link linkend="_group__core__func__vector__relational_1gaf539cf490630ba648dfd6e36aef910a1">equal</link>(q1,q2))&#32;{
4455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;(int)verts[i-1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
4456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;(int)verts[i-1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;(int)verts[i&#32;&#32;].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
4458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y1&#32;=&#32;(int)verts[i&#32;&#32;].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;STBTT_min(y0,y1)&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;STBTT_max(y0,y1)&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;STBTT_min(x0,x1))&#32;{
4460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x_inter&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;-&#32;y0)&#32;/&#32;(y1&#32;-&#32;y0)&#32;*&#32;(x1-x0)&#32;+&#32;x0;
4461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x_inter&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
4462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;winding&#32;+=&#32;(y0&#32;&lt;&#32;y1)&#32;?&#32;1&#32;:&#32;-1;
4463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_hits&#32;=&#32;stbtt__ray_intersect_bezier(orig,&#32;<link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>,&#32;q0,&#32;q1,&#32;q2,&#32;hits);
4466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_hits&#32;&gt;=&#32;1)
4467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hits[0][0]&#32;&lt;&#32;0)
4468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;winding&#32;+=&#32;(hits[0][1]&#32;&lt;&#32;0&#32;?&#32;-1&#32;:&#32;1);
4469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_hits&#32;&gt;=&#32;2)
4470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hits[1][0]&#32;&lt;&#32;0)
4471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;winding&#32;+=&#32;(hits[1][1]&#32;&lt;&#32;0&#32;?&#32;-1&#32;:&#32;1);
4472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4474 &#32;&#32;&#32;&#32;&#32;&#32;}
4475 &#32;&#32;&#32;}
4476 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;winding;
4477 }
4478 
4479 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;stbtt__cuberoot(&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;)
4480 {
4481 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&lt;0)
4482 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-(float)&#32;STBTT_pow(-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,1.0f/3.0f);
4483 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
4484 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;STBTT_pow(&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,1.0f/3.0f);
4485 }
4486 
4487 <emphasis role="comment">//&#32;x^3&#32;+&#32;c*x^2&#32;+&#32;b*x&#32;+&#32;a&#32;=&#32;0</emphasis>
4488 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__solve_cubic(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;c,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)
4489 {
4490 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s&#32;=&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;/&#32;3;
4491 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;/&#32;3;
4492 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;q&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;(2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;9*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;/&#32;27&#32;+&#32;c;
4493 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;p3&#32;=&#32;p*p*p;
4494 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d&#32;=&#32;q*q&#32;+&#32;4*p3&#32;/&#32;27;
4495 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;&gt;=&#32;0)&#32;{
4496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;(float)&#32;STBTT_sqrt(d);
4497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;(-q&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;/&#32;2;
4498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;(-q&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;/&#32;2;
4499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;stbtt__cuberoot(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>);
4500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;stbtt__cuberoot(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
4501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>[0]&#32;=&#32;s&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
4502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4503 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;(float)&#32;STBTT_sqrt(-p/3);
4505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;(float)&#32;STBTT_acos(-STBTT_sqrt(-27/p3)&#32;*&#32;q&#32;/&#32;2)&#32;/&#32;3;&#32;<emphasis role="comment">//&#32;p3&#32;must&#32;be&#32;negative,&#32;since&#32;d&#32;is&#32;negative</emphasis>
4506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m&#32;=&#32;(float)&#32;STBTT_cos(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
4507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;n&#32;=&#32;(float)&#32;STBTT_cos(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>-3.141592/2)*1.732050808f;
4508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>[0]&#32;=&#32;s&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;*&#32;2&#32;*&#32;m;
4509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>[1]&#32;=&#32;s&#32;-&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;*&#32;(m&#32;+&#32;n);
4510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>[2]&#32;=&#32;s&#32;-&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;*&#32;(m&#32;-&#32;n);
4511 
4512 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//STBTT_assert(&#32;STBTT_fabs(((r[0]+a)*r[0]+b)*r[0]+c)&#32;&lt;&#32;0.05f);&#32;&#32;//&#32;these&#32;asserts&#32;may&#32;not&#32;be&#32;safe&#32;at&#32;all&#32;scales,&#32;though&#32;they&apos;re&#32;in&#32;bezier&#32;t&#32;parameter&#32;units&#32;so&#32;maybe?</emphasis>
4513 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//STBTT_assert(&#32;STBTT_fabs(((r[1]+a)*r[1]+b)*r[1]+c)&#32;&lt;&#32;0.05f);</emphasis>
4514 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//STBTT_assert(&#32;STBTT_fabs(((r[2]+a)*r[2]+b)*r[2]+c)&#32;&lt;&#32;0.05f);</emphasis>
4515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
4516 &#32;&#32;&#32;}
4517 }
4518 
4519 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97">stbtt_GetGlyphSDF</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glyph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;onedge_value,&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_dist_scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff)
4520 {
4521 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale_x&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>,&#32;scale_y&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>;
4522 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ix0,iy0,ix1,iy1;
4523 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,h;
4524 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
4525 
4526 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scale&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4527 
4528 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link>(info,&#32;glyph,&#32;scale,&#32;scale,&#32;0.0f,0.0f,&#32;&amp;ix0,&amp;iy0,&amp;ix1,&amp;iy1);
4529 
4530 &#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;empty,&#32;return&#32;NULL</emphasis>
4531 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix0&#32;==&#32;ix1&#32;||&#32;iy0&#32;==&#32;iy1)
4532 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4533 
4534 &#32;&#32;&#32;ix0&#32;-=&#32;padding;
4535 &#32;&#32;&#32;iy0&#32;-=&#32;padding;
4536 &#32;&#32;&#32;ix1&#32;+=&#32;padding;
4537 &#32;&#32;&#32;iy1&#32;+=&#32;padding;
4538 
4539 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;(ix1&#32;-&#32;ix0);
4540 &#32;&#32;&#32;h&#32;=&#32;(iy1&#32;-&#32;iy0);
4541 
4542 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;
4543 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;h;
4544 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xoff&#32;&#32;)&#32;*xoff&#32;&#32;&#32;=&#32;ix0;
4545 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yoff&#32;&#32;)&#32;*yoff&#32;&#32;&#32;=&#32;iy0;
4546 
4547 &#32;&#32;&#32;<emphasis role="comment">//&#32;invert&#32;for&#32;y-downwards&#32;bitmaps</emphasis>
4548 &#32;&#32;&#32;scale_y&#32;=&#32;-scale_y;
4549 
4550 &#32;&#32;&#32;{
4551 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,i,j;
4552 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*precompute;
4553 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbtt__vertex">stbtt_vertex</link>&#32;*verts;
4554 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_verts&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link>(info,&#32;glyph,&#32;&amp;verts);
4555 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;STBTT_malloc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;*&#32;h,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
4556 &#32;&#32;&#32;&#32;&#32;&#32;precompute&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)&#32;STBTT_malloc(num_verts&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>),&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
4557 
4558 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0,j=num_verts-1;&#32;i&#32;&lt;&#32;num_verts;&#32;j=i++)&#32;{
4559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(verts[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>)&#32;{
4560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>*scale_x,&#32;y0&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>*scale_y;
4561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;verts[j].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>*scale_x,&#32;y1&#32;=&#32;verts[j].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>*scale_y;
4562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dist&#32;=&#32;(float)&#32;STBTT_sqrt((x1-x0)*(x1-x0)&#32;+&#32;(y1-y0)*(y1-y0));
4563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precompute[i]&#32;=&#32;(dist&#32;==&#32;0)&#32;?&#32;0.0f&#32;:&#32;1.0f&#32;/&#32;dist;
4564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(verts[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>)&#32;{
4565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2&#32;=&#32;verts[j].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>&#32;*scale_x,&#32;y2&#32;=&#32;verts[j].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>&#32;*scale_y;
4566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae">cx</link>*scale_x,&#32;y1&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e">cy</link>*scale_y;
4567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>&#32;*scale_x,&#32;y0&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>&#32;*scale_y;
4568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bx&#32;=&#32;x0&#32;-&#32;2*x1&#32;+&#32;x2,&#32;by&#32;=&#32;y0&#32;-&#32;2*y1&#32;+&#32;y2;
4569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;len2&#32;=&#32;bx*bx&#32;+&#32;by*by;
4570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len2&#32;!=&#32;0.0f)
4571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precompute[i]&#32;=&#32;1.0f&#32;/&#32;(bx*bx&#32;+&#32;by*by);
4572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
4573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precompute[i]&#32;=&#32;0.0f;
4574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
4575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precompute[i]&#32;=&#32;0.0f;
4576 &#32;&#32;&#32;&#32;&#32;&#32;}
4577 
4578 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=iy0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;iy1;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
4579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=ix0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;ix1;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;{
4580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
4581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;min_dist&#32;=&#32;999999.0f;
4582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sx&#32;=&#32;(float)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;0.5f;
4583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sy&#32;=&#32;(float)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;0.5f;
4584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x_gspace&#32;=&#32;(sx&#32;/&#32;scale_x);
4585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y_gspace&#32;=&#32;(sy&#32;/&#32;scale_y);
4586 
4587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;winding&#32;=&#32;stbtt__compute_crossings_x(x_gspace,&#32;y_gspace,&#32;num_verts,&#32;verts);&#32;<emphasis role="comment">//&#32;@OPTIMIZE:&#32;this&#32;could&#32;just&#32;be&#32;a&#32;rasterization,&#32;but&#32;needs&#32;to&#32;be&#32;line&#32;vs.&#32;non-tesselated&#32;curves&#32;so&#32;a&#32;new&#32;path</emphasis>
4588 
4589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_verts;&#32;++i)&#32;{
4590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>*scale_x,&#32;y0&#32;=&#32;verts[i].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>*scale_y;
4591 
4592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;against&#32;every&#32;point&#32;here&#32;rather&#32;than&#32;inside&#32;line/curve&#32;primitives&#32;--&#32;@TODO:&#32;wrong&#32;if&#32;multiple&#32;&apos;moves&apos;&#32;in&#32;a&#32;row&#32;produce&#32;a&#32;garbage&#32;point,&#32;and&#32;given&#32;culling,&#32;probably&#32;more&#32;efficient&#32;to&#32;do&#32;within&#32;line/curve</emphasis>
4593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dist2&#32;=&#32;(x0-sx)*(x0-sx)&#32;+&#32;(y0-sy)*(y0-sy);
4594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist2&#32;&lt;&#32;min_dist*min_dist)
4595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_dist&#32;=&#32;(float)&#32;STBTT_sqrt(dist2);
4596 
4597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(verts[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>)&#32;{
4598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;verts[i-1].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>*scale_x,&#32;y1&#32;=&#32;verts[i-1].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>*scale_y;
4599 
4600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;coarse&#32;culling&#32;against&#32;bbox</emphasis>
4601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(sx&#32;&gt;&#32;STBTT_min(x0,x1)-min_dist&#32;&amp;&amp;&#32;sx&#32;&lt;&#32;STBTT_max(x0,x1)+min_dist&#32;&amp;&amp;</emphasis>
4602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;sy&#32;&gt;&#32;STBTT_min(y0,y1)-min_dist&#32;&amp;&amp;&#32;sy&#32;&lt;&#32;STBTT_max(y0,y1)+min_dist)</emphasis>
4603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dist&#32;=&#32;(float)&#32;STBTT_fabs((x1-x0)*(y0-sy)&#32;-&#32;(y1-y0)*(x0-sx))&#32;*&#32;precompute[i];
4604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBTT_assert(i&#32;!=&#32;0);
4605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist&#32;&lt;&#32;min_dist)&#32;{
4606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;position&#32;along&#32;line</emphasis>
4607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;x&apos;&#32;=&#32;x0&#32;+&#32;t*(x1-x0),&#32;y&apos;&#32;=&#32;y0&#32;+&#32;t*(y1-y0)</emphasis>
4608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;minimize&#32;(x&apos;-sx)*(x&apos;-sx)+(y&apos;-sy)*(y&apos;-sy)</emphasis>
4609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dx&#32;=&#32;x1-x0,&#32;dy&#32;=&#32;y1-y0;
4610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;px&#32;=&#32;x0-sx,&#32;py&#32;=&#32;y0-sy;
4611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;minimize&#32;(px+t*dx)^2&#32;+&#32;(py+t*dy)^2&#32;=&#32;px*px&#32;+&#32;2*px*dx*t&#32;+&#32;t^2*dx*dx&#32;+&#32;py*py&#32;+&#32;2*py*dy*t&#32;+&#32;t^2*dy*dy</emphasis>
4612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;derivative:&#32;2*px*dx&#32;+&#32;2*py*dy&#32;+&#32;(2*dx*dx+2*dy*dy)*t,&#32;set&#32;to&#32;0&#32;and&#32;solve</emphasis>
4613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t&#32;=&#32;-(px*dx&#32;+&#32;py*dy)&#32;/&#32;(dx*dx&#32;+&#32;dy*dy);
4614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;&gt;=&#32;0.0f&#32;&amp;&amp;&#32;t&#32;&lt;=&#32;1.0f)
4615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_dist&#32;=&#32;dist;
4616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(verts[i].<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a52864abcf6ebd8d120995b36fe6ce06eab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>)&#32;{
4618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2&#32;=&#32;verts[i-1].<link linkend="_structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919">x</link>&#32;*scale_x,&#32;y2&#32;=&#32;verts[i-1].<link linkend="_structstbtt__vertex_1a9052065ca544b63d537325b246928cfc">y</link>&#32;*scale_y;
4619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;verts[i&#32;&#32;].<link linkend="_structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae">cx</link>*scale_x,&#32;y1&#32;=&#32;verts[i&#32;&#32;].<link linkend="_structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e">cy</link>*scale_y;
4620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;box_x0&#32;=&#32;STBTT_min(STBTT_min(x0,x1),x2);
4621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;box_y0&#32;=&#32;STBTT_min(STBTT_min(y0,y1),y2);
4622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;box_x1&#32;=&#32;STBTT_max(STBTT_max(x0,x1),x2);
4623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;box_y1&#32;=&#32;STBTT_max(STBTT_max(y0,y1),y2);
4624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;coarse&#32;culling&#32;against&#32;bbox&#32;to&#32;avoid&#32;computing&#32;cubic&#32;unnecessarily</emphasis>
4625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sx&#32;&gt;&#32;box_x0-min_dist&#32;&amp;&amp;&#32;sx&#32;&lt;&#32;box_x1+min_dist&#32;&amp;&amp;&#32;sy&#32;&gt;&#32;box_y0-min_dist&#32;&amp;&amp;&#32;sy&#32;&lt;&#32;box_y1+min_dist)&#32;{
4626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>=0;
4627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ax&#32;=&#32;x1-x0,&#32;ay&#32;=&#32;y1-y0;
4628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bx&#32;=&#32;x0&#32;-&#32;2*x1&#32;+&#32;x2,&#32;by&#32;=&#32;y0&#32;-&#32;2*y1&#32;+&#32;y2;
4629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mx&#32;=&#32;x0&#32;-&#32;sx,&#32;my&#32;=&#32;y0&#32;-&#32;sy;
4630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[3],px,py,t,it;
4631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;a_inv&#32;=&#32;precompute[i];
4632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a_inv&#32;==&#32;0.0)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;a_inv&#32;is&#32;0,&#32;it&apos;s&#32;2nd&#32;degree&#32;so&#32;use&#32;quadratic&#32;formula</emphasis>
4633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;3*(ax*bx&#32;+&#32;ay*by);
4634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;2*(ax*ax&#32;+&#32;ay*ay)&#32;+&#32;(mx*bx+my*by);
4635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;c&#32;=&#32;mx*ax+my*ay;
4636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;==&#32;0.0)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;a&#32;is&#32;0,&#32;it&apos;s&#32;linear</emphasis>
4637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;!=&#32;0.0)&#32;{
4638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>++]&#32;=&#32;-c/<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
4639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;discriminant&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;4*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*c;
4642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(discriminant&#32;&lt;&#32;0)
4643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>&#32;=&#32;0;
4644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;=&#32;(float)&#32;STBTT_sqrt(discriminant);
4646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[0]&#32;=&#32;(-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>)/(2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[1]&#32;=&#32;(-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;+&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>)/(2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>&#32;=&#32;2;&#32;<emphasis role="comment">//&#32;don&apos;t&#32;bother&#32;distinguishing&#32;1-solution&#32;case,&#32;as&#32;code&#32;below&#32;will&#32;still&#32;work</emphasis>
4649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;3*(ax*bx&#32;+&#32;ay*by)&#32;*&#32;a_inv;&#32;<emphasis role="comment">//&#32;could&#32;precompute&#32;this&#32;as&#32;it&#32;doesn&apos;t&#32;depend&#32;on&#32;sample&#32;point</emphasis>
4653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;c&#32;=&#32;(2*(ax*ax&#32;+&#32;ay*ay)&#32;+&#32;(mx*bx+my*by))&#32;*&#32;a_inv;
4654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d&#32;=&#32;(mx*ax+my*ay)&#32;*&#32;a_inv;
4655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>&#32;=&#32;stbtt__solve_cubic(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;c,&#32;d,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>);
4656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>&#32;&gt;=&#32;1&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[0]&#32;&gt;=&#32;0.0f&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[0]&#32;&lt;=&#32;1.0f)&#32;{
4658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[0],&#32;it&#32;=&#32;1.0f&#32;-&#32;t;
4659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;px&#32;=&#32;it*it*x0&#32;+&#32;2*t*it*x1&#32;+&#32;t*t*x2;
4660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;py&#32;=&#32;it*it*y0&#32;+&#32;2*t*it*y1&#32;+&#32;t*t*y2;
4661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dist2&#32;=&#32;(px-sx)*(px-sx)&#32;+&#32;(py-sy)*(py-sy);
4662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist2&#32;&lt;&#32;min_dist&#32;*&#32;min_dist)
4663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_dist&#32;=&#32;(float)&#32;STBTT_sqrt(dist2);
4664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>&#32;&gt;=&#32;2&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[1]&#32;&gt;=&#32;0.0f&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[1]&#32;&lt;=&#32;1.0f)&#32;{
4666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[1],&#32;it&#32;=&#32;1.0f&#32;-&#32;t;
4667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;px&#32;=&#32;it*it*x0&#32;+&#32;2*t*it*x1&#32;+&#32;t*t*x2;
4668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;py&#32;=&#32;it*it*y0&#32;+&#32;2*t*it*y1&#32;+&#32;t*t*y2;
4669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dist2&#32;=&#32;(px-sx)*(px-sx)&#32;+&#32;(py-sy)*(py-sy);
4670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist2&#32;&lt;&#32;min_dist&#32;*&#32;min_dist)
4671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_dist&#32;=&#32;(float)&#32;STBTT_sqrt(dist2);
4672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>&#32;&gt;=&#32;3&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[2]&#32;&gt;=&#32;0.0f&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[2]&#32;&lt;=&#32;1.0f)&#32;{
4674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>[2],&#32;it&#32;=&#32;1.0f&#32;-&#32;t;
4675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;px&#32;=&#32;it*it*x0&#32;+&#32;2*t*it*x1&#32;+&#32;t*t*x2;
4676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;py&#32;=&#32;it*it*y0&#32;+&#32;2*t*it*y1&#32;+&#32;t*t*y2;
4677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dist2&#32;=&#32;(px-sx)*(px-sx)&#32;+&#32;(py-sy)*(py-sy);
4678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist2&#32;&lt;&#32;min_dist&#32;*&#32;min_dist)
4679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_dist&#32;=&#32;(float)&#32;STBTT_sqrt(dist2);
4680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(winding&#32;==&#32;0)
4685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_dist&#32;=&#32;-min_dist;&#32;&#32;<emphasis role="comment">//&#32;if&#32;outside&#32;the&#32;shape,&#32;value&#32;is&#32;negative</emphasis>
4686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;onedge_value&#32;+&#32;pixel_dist_scale&#32;*&#32;min_dist;
4687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;&lt;&#32;0)
4688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;0;
4689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;&gt;&#32;255)
4690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;255;
4691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>-iy0)*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>+(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>-ix0)]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
4692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4693 &#32;&#32;&#32;&#32;&#32;&#32;}
4694 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(precompute,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
4695 &#32;&#32;&#32;&#32;&#32;&#32;STBTT_free(verts,&#32;info-&gt;<link linkend="_structstbtt__fontinfo_1aa59102a0e32774487fbe0f6d038f12cd">userdata</link>);
4696 &#32;&#32;&#32;}
4697 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
4698 }
4699 
4700 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ae70e9e09a74359133d5f282e032d5aa7">stbtt_GetCodepointSDF</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codepoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;onedge_value,&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_dist_scale,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*xoff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*yoff)
4701 {
4702 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97">stbtt_GetGlyphSDF</link>(info,&#32;scale,&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link>(info,&#32;codepoint),&#32;padding,&#32;onedge_value,&#32;pixel_dist_scale,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;xoff,&#32;yoff);
4703 }
4704 
4705 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a1254dc807df81931ab070c6e80370489">stbtt_FreeSDF</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bitmap,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*userdata)
4706 {
4707 &#32;&#32;&#32;STBTT_free(bitmap,&#32;userdata);
4708 }
4709 
4711 <emphasis role="comment">//</emphasis>
4712 <emphasis role="comment">//&#32;font&#32;name&#32;matching&#32;--&#32;recommended&#32;not&#32;to&#32;use&#32;this</emphasis>
4713 <emphasis role="comment">//</emphasis>
4714 
4715 <emphasis role="comment">//&#32;check&#32;if&#32;a&#32;utf8&#32;string&#32;contains&#32;a&#32;prefix&#32;which&#32;is&#32;the&#32;utf16&#32;string;&#32;if&#32;so&#32;return&#32;length&#32;of&#32;matching&#32;utf8&#32;string</emphasis>
4716 <emphasis role="keyword">static</emphasis>&#32;stbtt_int32&#32;stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8&#32;*s1,&#32;stbtt_int32&#32;len1,&#32;stbtt_uint8&#32;*s2,&#32;stbtt_int32&#32;len2)
4717 {
4718 &#32;&#32;&#32;stbtt_int32&#32;i=0;
4719 
4720 &#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;utf16&#32;to&#32;utf8&#32;and&#32;compare&#32;the&#32;results&#32;while&#32;converting</emphasis>
4721 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(len2)&#32;{
4722 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;ch&#32;=&#32;s2[0]*256&#32;+&#32;s2[1];
4723 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ch&#32;&lt;&#32;0x80)&#32;{
4724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;len1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;ch)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4726 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ch&#32;&lt;&#32;0x800)&#32;{
4727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i+1&#32;&gt;=&#32;len1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0xc0&#32;+&#32;(ch&#32;&gt;&gt;&#32;6))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0x80&#32;+&#32;(ch&#32;&amp;&#32;0x3f))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4730 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ch&#32;&gt;=&#32;0xd800&#32;&amp;&amp;&#32;ch&#32;&lt;&#32;0xdc00)&#32;{
4731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;c;
4732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint16&#32;ch2&#32;=&#32;s2[2]*256&#32;+&#32;s2[3];
4733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i+3&#32;&gt;=&#32;len1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;((ch&#32;-&#32;0xd800)&#32;&lt;&lt;&#32;10)&#32;+&#32;(ch2&#32;-&#32;0xdc00)&#32;+&#32;0x10000;
4735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0xf0&#32;+&#32;(c&#32;&gt;&gt;&#32;18))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0x80&#32;+&#32;((c&#32;&gt;&gt;&#32;12)&#32;&amp;&#32;0x3f))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0x80&#32;+&#32;((c&#32;&gt;&gt;&#32;&#32;6)&#32;&amp;&#32;0x3f))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0x80&#32;+&#32;((c&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0x3f))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s2&#32;+=&#32;2;&#32;<emphasis role="comment">//&#32;plus&#32;another&#32;2&#32;below</emphasis>
4740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len2&#32;-=&#32;2;
4741 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ch&#32;&gt;=&#32;0xdc00&#32;&amp;&amp;&#32;ch&#32;&lt;&#32;0xe000)&#32;{
4742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4743 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i+2&#32;&gt;=&#32;len1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0xe0&#32;+&#32;(ch&#32;&gt;&gt;&#32;12))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0x80&#32;+&#32;((ch&#32;&gt;&gt;&#32;6)&#32;&amp;&#32;0x3f))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s1[i++]&#32;!=&#32;0x80&#32;+&#32;((ch&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0x3f))&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4748 &#32;&#32;&#32;&#32;&#32;&#32;}
4749 &#32;&#32;&#32;&#32;&#32;&#32;s2&#32;+=&#32;2;
4750 &#32;&#32;&#32;&#32;&#32;&#32;len2&#32;-=&#32;2;
4751 &#32;&#32;&#32;}
4752 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
4753 }
4754 
4755 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt_CompareUTF8toUTF16_bigendian_internal(<emphasis role="keywordtype">char</emphasis>&#32;*s1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len1,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len2)
4756 {
4757 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len1&#32;==&#32;stbtt__CompareUTF8toUTF16_bigendian_prefix((stbtt_uint8*)&#32;s1,&#32;len1,&#32;(stbtt_uint8*)&#32;s2,&#32;len2);
4758 }
4759 
4760 <emphasis role="comment">//&#32;returns&#32;results&#32;in&#32;whatever&#32;encoding&#32;you&#32;request...&#32;but&#32;note&#32;that&#32;2-byte&#32;encodings</emphasis>
4761 <emphasis role="comment">//&#32;will&#32;be&#32;BIG-ENDIAN...&#32;use&#32;stbtt_CompareUTF8toUTF16_bigendian()&#32;to&#32;compare</emphasis>
4762 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a404d8b8c23a01c8cdf71f02d6d47d185">stbtt_GetFontNameString</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*font,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="_namespacelength">length</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;platformID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;encodingID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;languageID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nameID)
4763 {
4764 &#32;&#32;&#32;stbtt_int32&#32;i,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,stringOffset;
4765 &#32;&#32;&#32;stbtt_uint8&#32;*fc&#32;=&#32;font-&gt;<link linkend="_structstbtt__fontinfo_1ab1295cbda6fa1b3264aa261e4c5fd720">data</link>;
4766 &#32;&#32;&#32;stbtt_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;font-&gt;<link linkend="_structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d">fontstart</link>;
4767 &#32;&#32;&#32;stbtt_uint32&#32;nm&#32;=&#32;stbtt__find_table(fc,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<emphasis role="stringliteral">&quot;name&quot;</emphasis>);
4768 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!nm)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4769 
4770 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;ttUSHORT(fc+nm+2);
4771 &#32;&#32;&#32;stringOffset&#32;=&#32;nm&#32;+&#32;ttUSHORT(fc+nm+4);
4772 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++i)&#32;{
4773 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;loc&#32;=&#32;nm&#32;+&#32;6&#32;+&#32;12&#32;*&#32;i;
4774 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;==&#32;ttUSHORT(fc+loc+0)&#32;&amp;&amp;&#32;encodingID&#32;==&#32;ttUSHORT(fc+loc+2)
4775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;languageID&#32;==&#32;ttUSHORT(fc+loc+4)&#32;&amp;&amp;&#32;nameID&#32;==&#32;ttUSHORT(fc+loc+6))&#32;{
4776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_namespacelength">length</link>&#32;=&#32;ttUSHORT(fc+loc+8);
4777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;(fc+stringOffset+ttUSHORT(fc+loc+10));
4778 &#32;&#32;&#32;&#32;&#32;&#32;}
4779 &#32;&#32;&#32;}
4780 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4781 }
4782 
4783 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__matchpair(stbtt_uint8&#32;*fc,&#32;stbtt_uint32&#32;nm,&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;stbtt_int32&#32;nlen,&#32;stbtt_int32&#32;target_id,&#32;stbtt_int32&#32;next_id)
4784 {
4785 &#32;&#32;&#32;stbtt_int32&#32;i;
4786 &#32;&#32;&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;ttUSHORT(fc+nm+2);
4787 &#32;&#32;&#32;stbtt_int32&#32;stringOffset&#32;=&#32;nm&#32;+&#32;ttUSHORT(fc+nm+4);
4788 
4789 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++i)&#32;{
4790 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_uint32&#32;loc&#32;=&#32;nm&#32;+&#32;6&#32;+&#32;12&#32;*&#32;i;
4791 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;ttUSHORT(fc+loc+6);
4792 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;==&#32;target_id)&#32;{
4793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;the&#32;encoding</emphasis>
4794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;platform&#32;=&#32;ttUSHORT(fc+loc+0),&#32;encoding&#32;=&#32;ttUSHORT(fc+loc+2),&#32;language&#32;=&#32;ttUSHORT(fc+loc+4);
4795 
4796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;is&#32;this&#32;a&#32;Unicode&#32;encoding?</emphasis>
4797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platform&#32;==&#32;0&#32;||&#32;(platform&#32;==&#32;3&#32;&amp;&amp;&#32;encoding&#32;==&#32;1)&#32;||&#32;(platform&#32;==&#32;3&#32;&amp;&amp;&#32;encoding&#32;==&#32;10))&#32;{
4798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;slen&#32;=&#32;ttUSHORT(fc+loc+8);
4799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;off&#32;=&#32;ttUSHORT(fc+loc+10);
4800 
4801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;there&apos;s&#32;a&#32;prefix&#32;match</emphasis>
4802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;matchlen&#32;=&#32;stbtt__CompareUTF8toUTF16_bigendian_prefix(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;fc+stringOffset+off,slen);
4803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(matchlen&#32;&gt;=&#32;0)&#32;{
4804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;for&#32;target_id+1&#32;immediately&#32;following,&#32;with&#32;same&#32;encoding&#32;&amp;&#32;language</emphasis>
4805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i+1&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&amp;&amp;&#32;ttUSHORT(fc+loc+12+6)&#32;==&#32;next_id&#32;&amp;&amp;&#32;ttUSHORT(fc+loc+12)&#32;==&#32;platform&#32;&amp;&amp;&#32;ttUSHORT(fc+loc+12+2)&#32;==&#32;encoding&#32;&amp;&amp;&#32;ttUSHORT(fc+loc+12+4)&#32;==&#32;language)&#32;{
4806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slen&#32;=&#32;ttUSHORT(fc+loc+12+8);
4807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;off&#32;=&#32;ttUSHORT(fc+loc+12+10);
4808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slen&#32;==&#32;0)&#32;{
4809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(matchlen&#32;==&#32;nlen)
4810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(matchlen&#32;&lt;&#32;nlen&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>[matchlen]&#32;==&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>)&#32;{
4812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++matchlen;
4813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt_CompareUTF8toUTF16_bigendian_internal((<emphasis role="keywordtype">char</emphasis>*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>+matchlen),&#32;nlen-matchlen,&#32;(<emphasis role="keywordtype">char</emphasis>*)(fc+stringOffset+off),slen))
4814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;nothing&#32;immediately&#32;following</emphasis>
4818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(matchlen&#32;==&#32;nlen)
4819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4823 
4824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;handle&#32;other&#32;encodings</emphasis>
4825 &#32;&#32;&#32;&#32;&#32;&#32;}
4826 &#32;&#32;&#32;}
4827 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4828 }
4829 
4830 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt__matches(stbtt_uint8&#32;*fc,&#32;stbtt_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;stbtt_uint8&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
4831 {
4832 &#32;&#32;&#32;stbtt_int32&#32;nlen&#32;=&#32;(stbtt_int32)&#32;STBTT_strlen((<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>);
4833 &#32;&#32;&#32;stbtt_uint32&#32;nm,hd;
4834 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbtt__isfont(fc+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4835 
4836 &#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;italics/bold/underline&#32;flags&#32;in&#32;macStyle...</emphasis>
4837 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)&#32;{
4838 &#32;&#32;&#32;&#32;&#32;&#32;hd&#32;=&#32;stbtt__find_table(fc,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<emphasis role="stringliteral">&quot;head&quot;</emphasis>);
4839 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ttUSHORT(fc+hd+44)&#32;&amp;&#32;7)&#32;!=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>&#32;&amp;&#32;7))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4840 &#32;&#32;&#32;}
4841 
4842 &#32;&#32;&#32;nm&#32;=&#32;stbtt__find_table(fc,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<emphasis role="stringliteral">&quot;name&quot;</emphasis>);
4843 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!nm)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4844 
4845 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)&#32;{
4846 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;checked&#32;the&#32;macStyle&#32;flags,&#32;then&#32;just&#32;check&#32;the&#32;family&#32;and&#32;ignore&#32;the&#32;subfamily</emphasis>
4847 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matchpair(fc,&#32;nm,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;16,&#32;-1))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4848 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matchpair(fc,&#32;nm,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;&#32;1,&#32;-1))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4849 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matchpair(fc,&#32;nm,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;&#32;3,&#32;-1))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4850 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4851 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matchpair(fc,&#32;nm,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;16,&#32;17))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4852 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matchpair(fc,&#32;nm,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;&#32;1,&#32;&#32;2))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4853 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matchpair(fc,&#32;nm,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;nlen,&#32;&#32;3,&#32;-1))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4854 &#32;&#32;&#32;}
4855 
4856 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4857 }
4858 
4859 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbtt_FindMatchingFont_internal(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*font_collection,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*name_utf8,&#32;stbtt_int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
4860 {
4861 &#32;&#32;&#32;stbtt_int32&#32;i;
4862 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;;++i)&#32;{
4863 &#32;&#32;&#32;&#32;&#32;&#32;stbtt_int32&#32;off&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link>(font_collection,&#32;i);
4864 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(off&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;off;
4865 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbtt__matches((stbtt_uint8&#32;*)&#32;font_collection,&#32;off,&#32;(stbtt_uint8*)&#32;name_utf8,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>))
4866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;off;
4867 &#32;&#32;&#32;}
4868 }
4869 
4870 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)&#32;||&#32;defined(__clang__)</emphasis>
4871 <emphasis role="preprocessor">#pragma&#32;GCC&#32;diagnostic&#32;push</emphasis>
4872 <emphasis role="preprocessor">#pragma&#32;GCC&#32;diagnostic&#32;ignored&#32;&quot;-Wcast-qual&quot;</emphasis>
4873 <emphasis role="preprocessor">#endif</emphasis>
4874 
4875 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3">stbtt_BakeFontBitmap</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,
4876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pixel_height,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pw,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ph,
4877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_char,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_chars,&#32;<link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link>&#32;*chardata)
4878 {
4879 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt_BakeFontBitmap_internal((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;pixel_height,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;pw,&#32;ph,&#32;first_char,&#32;num_chars,&#32;chardata);
4880 }
4881 
4882 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)
4883 {
4884 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt_GetFontOffsetForIndex_internal((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>);
4885 }
4886 
4887 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672">stbtt_GetNumberOfFonts</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
4888 {
4889 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt_GetNumberOfFonts_internal((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
4890 }
4891 
4892 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;*info,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>)
4893 {
4894 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt_InitFont_internal(info,&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>);
4895 }
4896 
4897 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f">stbtt_FindMatchingFont</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fontdata,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>)
4898 {
4899 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt_FindMatchingFont_internal((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;fontdata,&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>);
4900 }
4901 
4902 <link linkend="__classes_2lib_2external_2stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31">stbtt_CompareUTF8toUTF16_bigendian</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len1,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len2)
4903 {
4904 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbtt_CompareUTF8toUTF16_bigendian_internal((<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;s1,&#32;len1,&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;s2,&#32;len2);
4905 }
4906 
4907 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)&#32;||&#32;defined(__clang__)</emphasis>
4908 <emphasis role="preprocessor">#pragma&#32;GCC&#32;diagnostic&#32;pop</emphasis>
4909 <emphasis role="preprocessor">#endif</emphasis>
4910 
4911 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STB_TRUETYPE_IMPLEMENTATION</emphasis>
4912 
4913 
4914 <emphasis role="comment">//&#32;FULL&#32;VERSION&#32;HISTORY</emphasis>
4915 <emphasis role="comment">//</emphasis>
4916 <emphasis role="comment">//&#32;&#32;&#32;1.19&#32;(2018-02-11)&#32;OpenType&#32;GPOS&#32;kerning&#32;(horizontal&#32;only),&#32;STBTT_fmod</emphasis>
4917 <emphasis role="comment">//&#32;&#32;&#32;1.18&#32;(2018-01-29)&#32;add&#32;missing&#32;function</emphasis>
4918 <emphasis role="comment">//&#32;&#32;&#32;1.17&#32;(2017-07-23)&#32;make&#32;more&#32;arguments&#32;const;&#32;doc&#32;fix</emphasis>
4919 <emphasis role="comment">//&#32;&#32;&#32;1.16&#32;(2017-07-12)&#32;SDF&#32;support</emphasis>
4920 <emphasis role="comment">//&#32;&#32;&#32;1.15&#32;(2017-03-03)&#32;make&#32;more&#32;arguments&#32;const</emphasis>
4921 <emphasis role="comment">//&#32;&#32;&#32;1.14&#32;(2017-01-16)&#32;num-fonts-in-TTC&#32;function</emphasis>
4922 <emphasis role="comment">//&#32;&#32;&#32;1.13&#32;(2017-01-02)&#32;support&#32;OpenType&#32;fonts,&#32;certain&#32;Apple&#32;fonts</emphasis>
4923 <emphasis role="comment">//&#32;&#32;&#32;1.12&#32;(2016-10-25)&#32;suppress&#32;warnings&#32;about&#32;casting&#32;away&#32;const&#32;with&#32;-Wcast-qual</emphasis>
4924 <emphasis role="comment">//&#32;&#32;&#32;1.11&#32;(2016-04-02)&#32;fix&#32;unused-variable&#32;warning</emphasis>
4925 <emphasis role="comment">//&#32;&#32;&#32;1.10&#32;(2016-04-02)&#32;allow&#32;user-defined&#32;fabs()&#32;replacement</emphasis>
4926 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;memory&#32;leak&#32;if&#32;fontsize=0.0</emphasis>
4927 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;warning&#32;from&#32;duplicate&#32;typedef</emphasis>
4928 <emphasis role="comment">//&#32;&#32;&#32;1.09&#32;(2016-01-16)&#32;warning&#32;fix;&#32;avoid&#32;crash&#32;on&#32;outofmem;&#32;use&#32;alloc&#32;userdata&#32;for&#32;PackFontRanges</emphasis>
4929 <emphasis role="comment">//&#32;&#32;&#32;1.08&#32;(2015-09-13)&#32;document&#32;stbtt_Rasterize();&#32;fixes&#32;for&#32;vertical&#32;&amp;&#32;horizontal&#32;edges</emphasis>
4930 <emphasis role="comment">//&#32;&#32;&#32;1.07&#32;(2015-08-01)&#32;allow&#32;PackFontRanges&#32;to&#32;accept&#32;arrays&#32;of&#32;sparse&#32;codepoints;</emphasis>
4931 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allow&#32;PackFontRanges&#32;to&#32;pack&#32;and&#32;render&#32;in&#32;separate&#32;phases;</emphasis>
4932 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;stbtt_GetFontOFfsetForIndex&#32;(never&#32;worked&#32;for&#32;non-0&#32;input?);</emphasis>
4933 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;an&#32;assert()&#32;bug&#32;in&#32;the&#32;new&#32;rasterizer</emphasis>
4934 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replace&#32;assert()&#32;with&#32;STBTT_assert()&#32;in&#32;new&#32;rasterizer</emphasis>
4935 <emphasis role="comment">//&#32;&#32;&#32;1.06&#32;(2015-07-14)&#32;performance&#32;improvements&#32;(~35%&#32;faster&#32;on&#32;x86&#32;and&#32;x64&#32;on&#32;test&#32;machine)</emphasis>
4936 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;also&#32;more&#32;precise&#32;AA&#32;rasterizer,&#32;except&#32;if&#32;shapes&#32;overlap</emphasis>
4937 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remove&#32;need&#32;for&#32;STBTT_sort</emphasis>
4938 <emphasis role="comment">//&#32;&#32;&#32;1.05&#32;(2015-04-15)&#32;fix&#32;misplaced&#32;definitions&#32;for&#32;STBTT_STATIC</emphasis>
4939 <emphasis role="comment">//&#32;&#32;&#32;1.04&#32;(2015-04-15)&#32;typo&#32;in&#32;example</emphasis>
4940 <emphasis role="comment">//&#32;&#32;&#32;1.03&#32;(2015-04-12)&#32;STBTT_STATIC,&#32;fix&#32;memory&#32;leak&#32;in&#32;new&#32;packing,&#32;various&#32;fixes</emphasis>
4941 <emphasis role="comment">//&#32;&#32;&#32;1.02&#32;(2014-12-10)&#32;fix&#32;various&#32;warnings&#32;&amp;&#32;compile&#32;issues&#32;w/&#32;stb_rect_pack,&#32;C++</emphasis>
4942 <emphasis role="comment">//&#32;&#32;&#32;1.01&#32;(2014-12-08)&#32;fix&#32;subpixel&#32;position&#32;when&#32;oversampling&#32;to&#32;exactly&#32;match</emphasis>
4943 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;non-oversampled;&#32;STBTT_POINT_SIZE&#32;for&#32;packed&#32;case&#32;only</emphasis>
4944 <emphasis role="comment">//&#32;&#32;&#32;1.00&#32;(2014-12-06)&#32;add&#32;new&#32;PackBegin&#32;etc.&#32;API,&#32;w/&#32;support&#32;for&#32;oversampling</emphasis>
4945 <emphasis role="comment">//&#32;&#32;&#32;0.99&#32;(2014-09-18)&#32;fix&#32;multiple&#32;bugs&#32;with&#32;subpixel&#32;rendering&#32;(ryg)</emphasis>
4946 <emphasis role="comment">//&#32;&#32;&#32;0.9&#32;&#32;(2014-08-07)&#32;support&#32;certain&#32;mac/iOS&#32;fonts&#32;without&#32;an&#32;MS&#32;platformID</emphasis>
4947 <emphasis role="comment">//&#32;&#32;&#32;0.8b&#32;(2014-07-07)&#32;fix&#32;a&#32;warning</emphasis>
4948 <emphasis role="comment">//&#32;&#32;&#32;0.8&#32;&#32;(2014-05-25)&#32;fix&#32;a&#32;few&#32;more&#32;warnings</emphasis>
4949 <emphasis role="comment">//&#32;&#32;&#32;0.7&#32;&#32;(2013-09-25)&#32;bugfix:&#32;subpixel&#32;glyph&#32;bug&#32;fixed&#32;in&#32;0.5&#32;had&#32;come&#32;back</emphasis>
4950 <emphasis role="comment">//&#32;&#32;&#32;0.6c&#32;(2012-07-24)&#32;improve&#32;documentation</emphasis>
4951 <emphasis role="comment">//&#32;&#32;&#32;0.6b&#32;(2012-07-20)&#32;fix&#32;a&#32;few&#32;more&#32;warnings</emphasis>
4952 <emphasis role="comment">//&#32;&#32;&#32;0.6&#32;&#32;(2012-07-17)&#32;fix&#32;warnings;&#32;added&#32;stbtt_ScaleForMappingEmToPixels,</emphasis>
4953 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetFontBoundingBox,&#32;stbtt_IsGlyphEmpty</emphasis>
4954 <emphasis role="comment">//&#32;&#32;&#32;0.5&#32;&#32;(2011-12-09)&#32;bugfixes:</emphasis>
4955 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subpixel&#32;glyph&#32;renderer&#32;computed&#32;wrong&#32;bounding&#32;box</emphasis>
4956 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;first&#32;vertex&#32;of&#32;shape&#32;can&#32;be&#32;off-curve&#32;(FreeSans)</emphasis>
4957 <emphasis role="comment">//&#32;&#32;&#32;0.4b&#32;(2011-12-03)&#32;fixed&#32;an&#32;error&#32;in&#32;the&#32;font&#32;baking&#32;example</emphasis>
4958 <emphasis role="comment">//&#32;&#32;&#32;0.4&#32;&#32;(2011-12-01)&#32;kerning,&#32;subpixel&#32;rendering&#32;(tor)</emphasis>
4959 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bugfixes&#32;for:</emphasis>
4960 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;codepoint-to-glyph&#32;conversion&#32;using&#32;table&#32;fmt=12</emphasis>
4961 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;codepoint-to-glyph&#32;conversion&#32;using&#32;table&#32;fmt=4</emphasis>
4962 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbtt_GetBakedQuad&#32;with&#32;non-square&#32;texture&#32;(Zer)</emphasis>
4963 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updated&#32;Hello&#32;World!&#32;sample&#32;to&#32;use&#32;kerning&#32;and&#32;subpixel</emphasis>
4964 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;some&#32;warnings</emphasis>
4965 <emphasis role="comment">//&#32;&#32;&#32;0.3&#32;&#32;(2009-06-24)&#32;cmap&#32;fmt=12,&#32;compound&#32;shapes&#32;(MM)</emphasis>
4966 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;userdata,&#32;malloc-from-userdata,&#32;non-zero&#32;fill&#32;(stb)</emphasis>
4967 <emphasis role="comment">//&#32;&#32;&#32;0.2&#32;&#32;(2009-03-11)&#32;Fix&#32;unsigned/signed&#32;char&#32;warnings</emphasis>
4968 <emphasis role="comment">//&#32;&#32;&#32;0.1&#32;&#32;(2009-03-09)&#32;First&#32;public&#32;release</emphasis>
4969 <emphasis role="comment">//</emphasis>
4970 
4971 <emphasis role="comment">/*</emphasis>
4972 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
4973 <emphasis role="comment">This&#32;software&#32;is&#32;available&#32;under&#32;2&#32;licenses&#32;--&#32;choose&#32;whichever&#32;you&#32;prefer.</emphasis>
4974 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
4975 <emphasis role="comment">ALTERNATIVE&#32;A&#32;-&#32;MIT&#32;License</emphasis>
4976 <emphasis role="comment">Copyright&#32;(c)&#32;2017&#32;Sean&#32;Barrett</emphasis>
4977 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
4978 <emphasis role="comment">this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
4979 <emphasis role="comment">the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
4980 <emphasis role="comment">use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies</emphasis>
4981 <emphasis role="comment">of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do</emphasis>
4982 <emphasis role="comment">so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
4983 <emphasis role="comment">The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
4984 <emphasis role="comment">copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
4985 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
4986 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
4987 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
4988 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
4989 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
4990 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
4991 <emphasis role="comment">SOFTWARE.</emphasis>
4992 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
4993 <emphasis role="comment">ALTERNATIVE&#32;B&#32;-&#32;Public&#32;Domain&#32;(www.unlicense.org)</emphasis>
4994 <emphasis role="comment">This&#32;is&#32;free&#32;and&#32;unencumbered&#32;software&#32;released&#32;into&#32;the&#32;public&#32;domain.</emphasis>
4995 <emphasis role="comment">Anyone&#32;is&#32;free&#32;to&#32;copy,&#32;modify,&#32;publish,&#32;use,&#32;compile,&#32;sell,&#32;or&#32;distribute&#32;this</emphasis>
4996 <emphasis role="comment">software,&#32;either&#32;in&#32;source&#32;code&#32;form&#32;or&#32;as&#32;a&#32;compiled&#32;binary,&#32;for&#32;any&#32;purpose,</emphasis>
4997 <emphasis role="comment">commercial&#32;or&#32;non-commercial,&#32;and&#32;by&#32;any&#32;means.</emphasis>
4998 <emphasis role="comment">In&#32;jurisdictions&#32;that&#32;recognize&#32;copyright&#32;laws,&#32;the&#32;author&#32;or&#32;authors&#32;of&#32;this</emphasis>
4999 <emphasis role="comment">software&#32;dedicate&#32;any&#32;and&#32;all&#32;copyright&#32;interest&#32;in&#32;the&#32;software&#32;to&#32;the&#32;public</emphasis>
5000 <emphasis role="comment">domain.&#32;We&#32;make&#32;this&#32;dedication&#32;for&#32;the&#32;benefit&#32;of&#32;the&#32;public&#32;at&#32;large&#32;and&#32;to</emphasis>
5001 <emphasis role="comment">the&#32;detriment&#32;of&#32;our&#32;heirs&#32;and&#32;successors.&#32;We&#32;intend&#32;this&#32;dedication&#32;to&#32;be&#32;an</emphasis>
5002 <emphasis role="comment">overt&#32;act&#32;of&#32;relinquishment&#32;in&#32;perpetuity&#32;of&#32;all&#32;present&#32;and&#32;future&#32;rights&#32;to</emphasis>
5003 <emphasis role="comment">this&#32;software&#32;under&#32;copyright&#32;law.</emphasis>
5004 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
5005 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
5006 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
5007 <emphasis role="comment">AUTHORS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN</emphasis>
5008 <emphasis role="comment">ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION</emphasis>
5009 <emphasis role="comment">WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
5010 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
5011 <emphasis role="comment">*/</emphasis>
</programlisting></section>
