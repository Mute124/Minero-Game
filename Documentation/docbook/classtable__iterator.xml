<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtable__iterator" xml:lang="en-US">
<title>table_iterator&lt; IsConst &gt; Class Template Reference</title>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;toml.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_classtable__iterator_1a13ef9869127c3631d01369bee0d17aa5">value_type</link> = table_proxy_pair&lt; IsConst &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_classtable__iterator_1af2354635a7ee020e49582f75e8773bf0">reference</link> = <link linkend="_classtable__iterator_1a13ef9869127c3631d01369bee0d17aa5">value_type</link> &amp;</para>
</listitem>
            <listitem><para>using <link linkend="_classtable__iterator_1a93d59c68765600bd4f1b4cbdc1c46d76">pointer</link> = <link linkend="_classtable__iterator_1a13ef9869127c3631d01369bee0d17aa5">value_type</link> *</para>
</listitem>
            <listitem><para>using <link linkend="_classtable__iterator_1aaed33aefda45393ff595e69092eb03af">difference_type</link> = typename std::iterator_traits&lt; map_iterator &gt;::difference_type</para>
</listitem>
            <listitem><para>using <link linkend="_classtable__iterator_1a5c833f895e194135be3b4e65dc9be255">iterator_category</link> = typename std::iterator_traits&lt; map_iterator &gt;::iterator_category</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator_1a927971b405ec32ab9ead3070834ed9d3">table_iterator</link> () noexcept=default</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator_1a57b1a98b440bc12501ab764fe90967be">table_iterator</link> (mutable_map_iterator iter) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator_1ae1afe8ab9aacc20250e7080302214c75">table_iterator</link> (const_map_iterator iter) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator_1a7e36036afab6f639d48c0d2b831834b7">table_iterator</link> (const <link linkend="_classtable__iterator">table_iterator</link>&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link> &gt; &amp;other) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator_1a554876885261cac5a8c405f34d9f2f85">table_iterator</link> (const <link linkend="_classtable__iterator">table_iterator</link> &amp;other) noexcept</para>
</listitem>
            <listitem><para><link linkend="_classtable__iterator">table_iterator</link> &amp; <link linkend="_classtable__iterator_1a0e0044f4bcc398d1d134c9cce68c7176">operator=</link> (const <link linkend="_classtable__iterator">table_iterator</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_classtable__iterator">table_iterator</link> &amp; <link linkend="_classtable__iterator_1a61846cb70a951ad5448894bbe46b1d20">operator++</link> () noexcept</para>
</listitem>
            <listitem><para><link linkend="_classtable__iterator">table_iterator</link> <link linkend="_classtable__iterator_1a9960982cf7cc9db0d5b26a448e2d8458">operator++</link> (int) noexcept</para>
</listitem>
            <listitem><para><link linkend="_classtable__iterator">table_iterator</link> &amp; <link linkend="_classtable__iterator_1a0ec9bb4ce770f71d5c1aa2db6aa6df09">operator--</link> () noexcept</para>
</listitem>
            <listitem><para><link linkend="_classtable__iterator">table_iterator</link> <link linkend="_classtable__iterator_1abf6cbeff194b861d14288892095af43f">operator--</link> (int) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator_1af2354635a7ee020e49582f75e8773bf0">reference</link> <link linkend="_classtable__iterator_1af03e3cdfe0aff165d18bffc2c64b6888">operator*</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator_1a93d59c68765600bd4f1b4cbdc1c46d76">pointer</link> <link linkend="_classtable__iterator_1ac55eab1931a333c6511ffc2650945b87">operator-&gt;</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator_1a261a5aa193fe608d7abdd843ee9ce9e8">operator const map_iterator &amp;</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator_1a46c6373413c482fd4b2d8dfd7f7acb00">operator const const_map_iterator</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &gt; </para><para>class <link linkend="_classtable__iterator_1af7a5bcba154b06b7f9ce8ed4b08dc8d7">table_iterator</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classtable__iterator_1a8f2adae1b6df957d76858c396731b00c">operator==</link> (const <link linkend="_classtable__iterator">table_iterator</link> &amp;lhs, const <link linkend="_classtable__iterator">table_iterator</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classtable__iterator_1aecd0f32a9d98b7c12b1428ff2350cb36">operator!=</link> (const <link linkend="_classtable__iterator">table_iterator</link> &amp;lhs, const <link linkend="_classtable__iterator">table_iterator</link> &amp;rhs) noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classtable__iterator_1aaed33aefda45393ff595e69092eb03af"/><section>
    <title>difference_type</title>
<indexterm><primary>difference_type</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput>using <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::difference_type =  typename std::iterator_traits&lt;map_iterator&gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a5c833f895e194135be3b4e65dc9be255"/><section>
    <title>iterator_category</title>
<indexterm><primary>iterator_category</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput>using <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::iterator_category =  typename std::iterator_traits&lt;map_iterator&gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a93d59c68765600bd4f1b4cbdc1c46d76"/><section>
    <title>pointer</title>
<indexterm><primary>pointer</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput>using <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> =  <link linkend="_classtable__iterator_1a13ef9869127c3631d01369bee0d17aa5">value_type</link>*</computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1af2354635a7ee020e49582f75e8773bf0"/><section>
    <title>reference</title>
<indexterm><primary>reference</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput>using <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::reference =  <link linkend="_classtable__iterator_1a13ef9869127c3631d01369bee0d17aa5">value_type</link>&amp;</computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a13ef9869127c3631d01369bee0d17aa5"/><section>
    <title>value_type</title>
<indexterm><primary>value_type</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput>using <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::value_type =  table_proxy_pair&lt;IsConst&gt;</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtable__iterator_1a927971b405ec32ab9ead3070834ed9d3"/><section>
    <title>table_iterator()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>table_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>table_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;<link linkend="_classtable__iterator">::table_iterator</link> ( )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a57b1a98b440bc12501ab764fe90967be"/><section>
    <title>table_iterator()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>table_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>table_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;<link linkend="_classtable__iterator">::table_iterator</link> (mutable_map_iterator iter)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1ae1afe8ab9aacc20250e7080302214c75"/><section>
    <title>table_iterator()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>table_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>table_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;<link linkend="_classtable__iterator">::table_iterator</link> (const_map_iterator iter)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a7e36036afab6f639d48c0d2b831834b7"/><section>
    <title>table_iterator()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>table_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>table_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;<link linkend="_classtable__iterator">::table_iterator</link> (const <link linkend="_classtable__iterator">table_iterator</link>&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link> &gt; &amp; other)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a554876885261cac5a8c405f34d9f2f85"/><section>
    <title>table_iterator()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>table_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>table_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;<link linkend="_classtable__iterator">::table_iterator</link> (const <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt; &amp; other)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtable__iterator_1a46c6373413c482fd4b2d8dfd7f7acb00"/><section>
    <title>operator const const_map_iterator()</title>
<indexterm><primary>operator const const_map_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator const const_map_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator const const_map_iterator ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a261a5aa193fe608d7abdd843ee9ce9e8"/><section>
    <title>operator const map_iterator &amp;()</title>
<indexterm><primary>operator const map_iterator &amp;</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator const map_iterator &amp;</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator const map_iterator &amp; ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1af03e3cdfe0aff165d18bffc2c64b6888"/><section>
    <title>operator*()</title>
<indexterm><primary>operator*</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator_1af2354635a7ee020e49582f75e8773bf0">reference</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a61846cb70a951ad5448894bbe46b1d20"/><section>
    <title>operator++()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_classtable__iterator">table_iterator</link> &amp; <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator++ ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a9960982cf7cc9db0d5b26a448e2d8458"/><section>
    <title>operator++()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_classtable__iterator">table_iterator</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator++ (int )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a0ec9bb4ce770f71d5c1aa2db6aa6df09"/><section>
    <title>operator--()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_classtable__iterator">table_iterator</link> &amp; <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator-- ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1abf6cbeff194b861d14288892095af43f"/><section>
    <title>operator--()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_classtable__iterator">table_iterator</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator-- (int )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1ac55eab1931a333c6511ffc2650945b87"/><section>
    <title>operator-&gt;()</title>
<indexterm><primary>operator-&gt;</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="_classtable__iterator_1a93d59c68765600bd4f1b4cbdc1c46d76">pointer</link> <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a0e0044f4bcc398d1d134c9cce68c7176"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_classtable__iterator">table_iterator</link> &amp; <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt;::operator= (const <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt; &amp; rhs)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_classtable__iterator_1aecd0f32a9d98b7c12b1428ff2350cb36"/><section>
    <title>operator!=</title>
<indexterm><primary>operator!=</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt; &amp; lhs, const <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt; &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1a8f2adae1b6df957d76858c396731b00c"/><section>
    <title>operator==</title>
<indexterm><primary>operator==</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt; &amp; lhs, const <link linkend="_classtable__iterator">table_iterator</link>&lt; IsConst &gt; &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtable__iterator_1af7a5bcba154b06b7f9ce8ed4b08dc8d7"/><section>
    <title>table_iterator</title>
<indexterm><primary>table_iterator</primary><secondary>table_iterator&lt; IsConst &gt;</secondary></indexterm>
<indexterm><primary>table_iterator&lt; IsConst &gt;</primary><secondary>table_iterator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsConst&gt; </computeroutput><computeroutput>template&lt;<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &gt; </computeroutput><para><computeroutput>friend class <link linkend="_classtable__iterator">table_iterator</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
