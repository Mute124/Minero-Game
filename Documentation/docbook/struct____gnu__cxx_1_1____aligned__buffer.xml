<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__cxx_1_1____aligned__buffer" xml:lang="en-US">
<title>__gnu_cxx::__aligned_buffer&lt; _Tp &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;aligned_buffer.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_cxx::__aligned_buffer&lt; _Tp &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_cxx::__aligned_buffer&lt; _Tp &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05">__aligned_buffer</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811">__aligned_buffer</link> (std::nullptr_t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda">_M_addr</link> () noexcept</para>
</listitem>
            <listitem><para>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db">_M_addr</link> () const noexcept</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06">_M_ptr</link> () noexcept</para>
</listitem>
            <listitem><para>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593">_M_ptr</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05">__aligned_buffer</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811">__aligned_buffer</link> (std::nullptr_t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda">_M_addr</link> () noexcept</para>
</listitem>
            <listitem><para>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db">_M_addr</link> () const noexcept</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06">_M_ptr</link> () noexcept</para>
</listitem>
            <listitem><para>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593">_M_ptr</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05">__aligned_buffer</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811">__aligned_buffer</link> (std::nullptr_t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda">_M_addr</link> () noexcept</para>
</listitem>
            <listitem><para>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db">_M_addr</link> () const noexcept</para>
</listitem>
            <listitem><para>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06">_M_ptr</link> () noexcept</para>
</listitem>
            <listitem><para>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593">_M_ptr</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::aligned_storage&lt; sizeof(_Tp), __alignof__(_Tp)&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ad2658faead1f6bddfe5718ba9f878ce5">_M_storage</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05"/><section>
    <title>__aligned_buffer()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>__aligned_buffer</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>__aligned_buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::__aligned_buffer ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811"/><section>
    <title>__aligned_buffer()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>__aligned_buffer</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>__aligned_buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::__aligned_buffer (std::nullptr_t )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05"/><section>
    <title>__aligned_buffer()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>__aligned_buffer</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>__aligned_buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::__aligned_buffer ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811"/><section>
    <title>__aligned_buffer()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>__aligned_buffer</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>__aligned_buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::__aligned_buffer (std::nullptr_t )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05"/><section>
    <title>__aligned_buffer()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>__aligned_buffer</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>__aligned_buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::__aligned_buffer ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811"/><section>
    <title>__aligned_buffer()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>__aligned_buffer</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>__aligned_buffer</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::__aligned_buffer (std::nullptr_t )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db"/><section>
    <title>_M_addr()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_addr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db"/><section>
    <title>_M_addr()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_addr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db"/><section>
    <title>_M_addr()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_addr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda"/><section>
    <title>_M_addr()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_addr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_a1d3a215f88d305fbe28246d64b0a2fda_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda"/><section>
    <title>_M_addr()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_addr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda"/><section>
    <title>_M_addr()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_M_addr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_addr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_addr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593"/><section>
    <title>_M_ptr()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_ptr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_aa12d1b00657c87da2e57164246b3d593_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593"/><section>
    <title>_M_ptr()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_ptr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_aa12d1b00657c87da2e57164246b3d593_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593"/><section>
    <title>_M_ptr()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>const _Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_ptr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_aa12d1b00657c87da2e57164246b3d593_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06"/><section>
    <title>_M_ptr()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_ptr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_a4f7396ec827253c1af249edad1c67b06_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_a4f7396ec827253c1af249edad1c67b06_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06"/><section>
    <title>_M_ptr()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_ptr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_a4f7396ec827253c1af249edad1c67b06_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06"/><section>
    <title>_M_ptr()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_M_ptr</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_ptr</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>_Tp * <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_ptr ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__cxx_1_1____aligned__buffer_a4f7396ec827253c1af249edad1c67b06_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__cxx_1_1____aligned__buffer_1ad2658faead1f6bddfe5718ba9f878ce5"/><section>
    <title>_M_storage</title>
<indexterm><primary>_M_storage</primary><secondary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</secondary></indexterm>
<indexterm><primary>__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</primary><secondary>_M_storage</secondary></indexterm>
<computeroutput>template&lt;typename _Tp &gt; </computeroutput><para><computeroutput>std::aligned_storage&lt; sizeof(_Tp), __alignof__(_Tp)&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer</link>&lt; _Tp &gt;::_M_storage</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2aligned__buffer_8h">aligned_buffer.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/<link linkend="_lib_2include_2c_09_09_2ext_2aligned__buffer_8h">aligned_buffer.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2aligned__buffer_8h">aligned_buffer.h</link></section>
</section>
