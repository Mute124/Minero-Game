<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1lu__counter__policy" xml:lang="en-US">
<title>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;list_update_policy.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9">max_count</link> = Max_Count
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9">max_count</link> = Max_Count
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9">max_count</link> = Max_Count
 }</para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata</link>&lt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link> &gt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link></para>

<para>Metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link></para>

<para>Reference to metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata</link>&lt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link> &gt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link></para>

<para>Metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link></para>

<para>Reference to metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata</link>&lt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link> &gt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link></para>

<para>Metadata on which this functor operates. </para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt; _Alloc, <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> &gt;::reference <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link></para>

<para>Reference to metadata on which this functor operates. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a">operator()</link> () const</para>

<para>Creates a metadata object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34">operator()</link> (<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link> r_data) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a">operator()</link> () const</para>

<para>Creates a metadata object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34">operator()</link> (<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link> r_data) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a">operator()</link> () const</para>

<para>Creates a metadata object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34">operator()</link> (<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link> r_data) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;std::size_t Max_Count = 5, typename _Alloc = std::allocator&lt;char&gt;&gt;<?linebreak?>class __gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</title></simplesect>

<para>A list-update policy that moves elements to the front of the list based on the counter algorithm. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aa8852116a38629ce0b1f3073e197f681"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f"/><section>
    <title>metadata_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_reference</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>metadata_reference</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::metadata_reference</computeroutput></para><para>

<para>Reference to metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f"/><section>
    <title>metadata_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_reference</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>metadata_reference</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::metadata_reference</computeroutput></para><para>

<para>Reference to metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f"/><section>
    <title>metadata_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_reference</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>metadata_reference</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits</link>&lt;_Alloc,<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link>&gt;::reference <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::metadata_reference</computeroutput></para><para>

<para>Reference to metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d"/><section>
    <title>metadata_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata</link>&lt;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link>&gt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::metadata_type</computeroutput></para><para>

<para>Metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d"/><section>
    <title>metadata_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata</link>&lt;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link>&gt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::metadata_type</computeroutput></para><para>

<para>Metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d"/><section>
    <title>metadata_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">detail::lu_counter_metadata</link>&lt;<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6">size_type</link>&gt; <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::metadata_type</computeroutput></para><para>

<para>Metadata on which this functor operates. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1af5a96b1862394ca8d7f28d33adb588b6"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::size_type</computeroutput></para></section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>max_count</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>max_count</secondary></indexterm>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9"/>max_count</entry><entry>
<para>When some element is accessed this number of times, it will be moved to the front of the list. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1a2e50b7c4e2509ca83d62153be88cd05d"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>max_count</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>max_count</secondary></indexterm>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9"/>max_count</entry><entry>
<para>When some element is accessed this number of times, it will be moved to the front of the list. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1a5a1aa3a6c25a766f2ea03039be97a6b8"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>max_count</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>max_count</secondary></indexterm>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aedf55450de2f223fa207cd245c2d2551adcaf31324c145d251761d478cb4b60d9"/>max_count</entry><entry>
<para>When some element is accessed this number of times, it will be moved to the front of the list. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a"/><section>
    <title>operator()()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::operator() ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Creates a metadata object. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy_aba9450255401d4b96c50bf7c56d4c49a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a"/><section>
    <title>operator()()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::operator() ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Creates a metadata object. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy_aba9450255401d4b96c50bf7c56d4c49a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1aba9450255401d4b96c50bf7c56d4c49a"/><section>
    <title>operator()()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1lu__counter__policy_1aa53180229ff61fd4f105cd893740b12d">metadata_type</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::operator() ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Creates a metadata object. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy_aba9450255401d4b96c50bf7c56d4c49a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34"/><section>
    <title>operator()()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link> r_data) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Decides whether a metadata object should be moved to the front of the list. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy_afa66044dd6264f0c6d6f1cfd05c2fe34_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34"/><section>
    <title>operator()()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link> r_data) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Decides whether a metadata object should be moved to the front of the list. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy_afa66044dd6264f0c6d6f1cfd05c2fe34_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1lu__counter__policy_1afa66044dd6264f0c6d6f1cfd05c2fe34"/><section>
    <title>operator()()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;std::size_t Max_Count = 5, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy</link>&lt; Max_Count, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1lu__counter__policy_1a0332eedaecbec1dd175accc96ffff40f">metadata_reference</link> r_data) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Decides whether a metadata object should be moved to the front of the list. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1lu__counter__policy_afa66044dd6264f0c6d6f1cfd05c2fe34_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp">list_update_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp">list_update_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2list__update__policy_8hpp">list_update_policy.hpp</link></section>
</section>
