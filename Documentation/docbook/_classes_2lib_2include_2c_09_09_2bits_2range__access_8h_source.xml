<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2bits_2range__access_8h_source" xml:lang="en-US">
<title>range_access.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/bits/range_access.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Range&#32;access&#32;functions&#32;for&#32;containers&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2010-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_RANGE_ACCESS_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_GLIBCXX_RANGE_ACCESS_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
34 
35 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;initializer_list&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;common_type_t,&#32;make_signed_t</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_iterator.h&gt;</emphasis>&#32;<emphasis role="comment">//&#32;reverse_iterator</emphasis>
39 
40 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
41 {
42 _GLIBCXX_BEGIN_NAMESPACE_VERSION
43 
49 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
50 &#32;&#32;&#32;&#32;[[__nodiscard__]]
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
52 &#32;&#32;&#32;&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.begin())
53 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.begin();&#32;}
54 
60 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
61 &#32;&#32;&#32;&#32;[[__nodiscard__]]
62 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
63 &#32;&#32;&#32;&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.begin())
64 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.begin();&#32;}
65 
71 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
72 &#32;&#32;&#32;&#32;[[__nodiscard__]]
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
74 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>(_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.end())
75 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.end();&#32;}
76 
82 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
83 &#32;&#32;&#32;&#32;[[__nodiscard__]]
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
85 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.end())
86 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.end();&#32;}
87 
92 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
93 &#32;&#32;&#32;&#32;[[__nodiscard__]]
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX14_CONSTEXPR&#32;_Tp*
95 &#32;&#32;&#32;&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(_Tp&#32;(&amp;__arr)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
96 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__arr;&#32;}
97 
103 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
104 &#32;&#32;&#32;&#32;[[__nodiscard__]]
105 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX14_CONSTEXPR&#32;_Tp*
106 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>(_Tp&#32;(&amp;__arr)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
107 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__arr&#32;+&#32;_Nm;&#32;}
108 
109 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201402L</emphasis>
110 
111 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>valarray;
112 &#32;&#32;<emphasis role="comment">//&#32;These&#32;overloads&#32;must&#32;be&#32;declared&#32;for&#32;cbegin&#32;and&#32;cend&#32;to&#32;use&#32;them.</emphasis>
113 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;_Tp*&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(valarray&lt;_Tp&gt;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>;
114 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(<emphasis role="keyword">const</emphasis>&#32;valarray&lt;_Tp&gt;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>;
115 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;_Tp*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>(valarray&lt;_Tp&gt;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>;
116 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>(<emphasis role="keyword">const</emphasis>&#32;valarray&lt;_Tp&gt;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>;
117 
123 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
124 &#32;&#32;&#32;&#32;[[__nodiscard__]]
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
126 &#32;&#32;&#32;&#32;cbegin(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(std::begin(__cont)))
127 &#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(std::begin(__cont))
128 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::begin(__cont);&#32;}
129 
135 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
136 &#32;&#32;&#32;&#32;[[__nodiscard__]]
137 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
138 &#32;&#32;&#32;&#32;cend(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(std::end(__cont)))
139 &#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(std::end(__cont))
140 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::end(__cont);&#32;}
141 
147 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
148 &#32;&#32;&#32;&#32;[[__nodiscard__]]
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
150 &#32;&#32;&#32;&#32;rbegin(_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.rbegin())
151 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.rbegin();&#32;}
152 
158 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
159 &#32;&#32;&#32;&#32;[[__nodiscard__]]
160 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
161 &#32;&#32;&#32;&#32;rbegin(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.rbegin())
162 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.rbegin();&#32;}
163 
169 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
170 &#32;&#32;&#32;&#32;[[__nodiscard__]]
171 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
172 &#32;&#32;&#32;&#32;rend(_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.rend())
173 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.rend();&#32;}
174 
180 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
181 &#32;&#32;&#32;&#32;[[__nodiscard__]]
182 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
183 &#32;&#32;&#32;&#32;rend(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.rend())
184 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.rend();&#32;}
185 
191 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
192 &#32;&#32;&#32;&#32;[[__nodiscard__]]
193 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;reverse_iterator&lt;_Tp*&gt;
194 &#32;&#32;&#32;&#32;rbegin(_Tp&#32;(&amp;__arr)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
195 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;reverse_iterator&lt;_Tp*&gt;(__arr&#32;+&#32;_Nm);&#32;}
196 
202 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
203 &#32;&#32;&#32;&#32;[[__nodiscard__]]
204 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;reverse_iterator&lt;_Tp*&gt;
205 &#32;&#32;&#32;&#32;rend(_Tp&#32;(&amp;__arr)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
206 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;reverse_iterator&lt;_Tp*&gt;(__arr);&#32;}
207 
213 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
214 &#32;&#32;&#32;&#32;[[__nodiscard__]]
215 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;reverse_iterator&lt;const&#32;_Tp*&gt;
216 &#32;&#32;&#32;&#32;rbegin(initializer_list&lt;_Tp&gt;&#32;__il)&#32;<emphasis role="keyword">noexcept</emphasis>
217 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;reverse_iterator&lt;const&#32;_Tp*&gt;(__il.end());&#32;}
218 
224 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
225 &#32;&#32;&#32;&#32;[[__nodiscard__]]
226 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;reverse_iterator&lt;const&#32;_Tp*&gt;
227 &#32;&#32;&#32;&#32;rend(initializer_list&lt;_Tp&gt;&#32;__il)&#32;<emphasis role="keyword">noexcept</emphasis>
228 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;reverse_iterator&lt;const&#32;_Tp*&gt;(__il.begin());&#32;}
229 
235 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
236 &#32;&#32;&#32;&#32;[[__nodiscard__]]
237 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
238 &#32;&#32;&#32;&#32;crbegin(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(std::rbegin(__cont))
239 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::rbegin(__cont);&#32;}
240 
246 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
247 &#32;&#32;&#32;&#32;[[__nodiscard__]]
248 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_GLIBCXX17_CONSTEXPR&#32;<emphasis role="keyword">auto</emphasis>
249 &#32;&#32;&#32;&#32;crend(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(std::rend(__cont))
250 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::rend(__cont);&#32;}
251 
252 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++14</emphasis>
253 
254 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201703L</emphasis>
255 <emphasis role="preprocessor">#define&#32;__cpp_lib_nonmember_container_access&#32;201411L</emphasis>
256 
261 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
262 &#32;&#32;&#32;&#32;[[nodiscard]]
263 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
264 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(__cont.size()))
265 &#32;&#32;&#32;&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.size())
266 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.size();&#32;}
267 
271 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
272 &#32;&#32;&#32;&#32;[[nodiscard]]
273 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>
274 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(<emphasis role="keyword">const</emphasis>&#32;_Tp&#32;(&amp;)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
275 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Nm;&#32;}
276 
281 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
282 &#32;&#32;&#32;&#32;[[nodiscard]]&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
283 &#32;&#32;&#32;&#32;empty(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(__cont.empty()))
284 &#32;&#32;&#32;&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.empty())
285 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.empty();&#32;}
286 
290 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
291 &#32;&#32;&#32;&#32;[[nodiscard]]&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
292 &#32;&#32;&#32;&#32;empty(<emphasis role="keyword">const</emphasis>&#32;_Tp&#32;(&amp;)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
293 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}
294 
299 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
300 &#32;&#32;&#32;&#32;[[nodiscard]]&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
301 &#32;&#32;&#32;&#32;empty(initializer_list&lt;_Tp&gt;&#32;__il)&#32;<emphasis role="keyword">noexcept</emphasis>
302 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__il.size()&#32;==&#32;0;}
303 
308 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
309 &#32;&#32;&#32;&#32;[[nodiscard]]
310 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
311 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>(_Container&amp;&#32;__cont)&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(__cont.data()))
312 &#32;&#32;&#32;&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.data())
313 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.data();&#32;}
314 
319 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
320 &#32;&#32;&#32;&#32;[[nodiscard]]
321 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
322 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(__cont.data()))
323 &#32;&#32;&#32;&#32;-&gt;&#32;<emphasis role="keyword">decltype</emphasis>(__cont.data())
324 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cont.data();&#32;}
325 
330 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_Nm&gt;
331 &#32;&#32;&#32;&#32;[[nodiscard]]
332 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp*
333 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>(_Tp&#32;(&amp;__array)[_Nm])&#32;<emphasis role="keyword">noexcept</emphasis>
334 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__array;&#32;}
335 
340 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
341 &#32;&#32;&#32;&#32;[[nodiscard]]
342 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*
343 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>(initializer_list&lt;_Tp&gt;&#32;__il)&#32;<emphasis role="keyword">noexcept</emphasis>
344 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__il.begin();&#32;}
345 
346 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;&#32;201703L</emphasis>
347 <emphasis role="preprocessor">#define&#32;__cpp_lib_ssize&#32;201902L</emphasis>
348 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
349 &#32;&#32;&#32;&#32;[[nodiscard]]
350 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>
351 &#32;&#32;&#32;&#32;ssize(<emphasis role="keyword">const</emphasis>&#32;_Container&amp;&#32;__cont)
352 &#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>(<emphasis role="keyword">noexcept</emphasis>(__cont.size()))
353 &#32;&#32;&#32;&#32;-&gt;&#32;common_type_t&lt;<link linkend="__classes_2lib_2include_2stddef_8h_1a6d26a0475a6d6c897e655cdc5d8019d2">ptrdiff_t</link>,&#32;make_signed_t&lt;<emphasis role="keyword">decltype</emphasis>(__cont.size())&gt;&gt;
354 &#32;&#32;&#32;&#32;{
355 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;make_signed_t&lt;<emphasis role="keyword">decltype</emphasis>(__cont.size())&gt;;
356 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>common_type_t&lt;ptrdiff_t,&#32;type&gt;<emphasis role="keyword">&gt;</emphasis>(__cont.size());
357 &#32;&#32;&#32;&#32;}
358 
359 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;ptrdiff_t&#32;_Num&gt;
360 &#32;&#32;&#32;&#32;[[nodiscard]]
361 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1a6d26a0475a6d6c897e655cdc5d8019d2">ptrdiff_t</link>
362 &#32;&#32;&#32;&#32;ssize(<emphasis role="keyword">const</emphasis>&#32;_Tp&#32;(&amp;)[_Num])&#32;<emphasis role="keyword">noexcept</emphasis>
363 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Num;&#32;}
364 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++20</emphasis>
365 
366 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++17</emphasis>
367 _GLIBCXX_END_NAMESPACE_VERSION
368 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
369 
370 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
371 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_RANGE_ACCESS_H</emphasis>
</programlisting></section>
