<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1priority__queue" xml:lang="en-US">
<title>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;priority_queue.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1priority__queue__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1priority__queue__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _Tv <link linkend="_class____gnu__pbds_1_1priority__queue_1a2e039a9e0523d941daeb0cf62bfaece8">value_type</link></para>
</listitem>
            <listitem><para>typedef Cmp_Fn <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link></para>
</listitem>
            <listitem><para>typedef Tag <link linkend="_class____gnu__pbds_1_1priority__queue_1a42dabb276b4f6048af380a775faf157e">container_category</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1priority__queue_1ac9c89575468e639df2697aae589dfb0e">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1priority__queue_1a38a5ca18e23a5576603bd787a51df734">size_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1priority__queue_1a94bbdf0021e115d17411582b7f973ee5">difference_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::reference <link linkend="_class____gnu__pbds_1_1priority__queue_1ac3dcdf43512d32f125e8062c8d7db069">reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_reference <link linkend="_class____gnu__pbds_1_1priority__queue_1a966051b061a35415b4db0e5559ddb5e3">const_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::pointer <link linkend="_class____gnu__pbds_1_1priority__queue_1a8852b6160821a88227be8ba430580312">pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_pointer <link linkend="_class____gnu__pbds_1_1priority__queue_1a5dd06f5e1564a87cddf962cf06089ef5">const_pointer</link></para>
</listitem>
            <listitem><para>typedef base_type::point_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1adf16ab3be6832883eaa47729e4f0dfdd">point_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::point_const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a6125fd5a518b48ab8f7f770e1e22436a">point_const_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a0df067f0a544d1fc3fd3fbadda94f1e9">iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a92f3572681756c5f9298a748f09775cd">const_iterator</link></para>
</listitem>
            <listitem><para>typedef _Tv <link linkend="_class____gnu__pbds_1_1priority__queue_1a2e039a9e0523d941daeb0cf62bfaece8">value_type</link></para>
</listitem>
            <listitem><para>typedef Cmp_Fn <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link></para>
</listitem>
            <listitem><para>typedef Tag <link linkend="_class____gnu__pbds_1_1priority__queue_1a42dabb276b4f6048af380a775faf157e">container_category</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1priority__queue_1ac9c89575468e639df2697aae589dfb0e">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1priority__queue_1a38a5ca18e23a5576603bd787a51df734">size_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1priority__queue_1a94bbdf0021e115d17411582b7f973ee5">difference_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::reference <link linkend="_class____gnu__pbds_1_1priority__queue_1ac3dcdf43512d32f125e8062c8d7db069">reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_reference <link linkend="_class____gnu__pbds_1_1priority__queue_1a966051b061a35415b4db0e5559ddb5e3">const_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::pointer <link linkend="_class____gnu__pbds_1_1priority__queue_1a8852b6160821a88227be8ba430580312">pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_pointer <link linkend="_class____gnu__pbds_1_1priority__queue_1a5dd06f5e1564a87cddf962cf06089ef5">const_pointer</link></para>
</listitem>
            <listitem><para>typedef base_type::point_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1adf16ab3be6832883eaa47729e4f0dfdd">point_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::point_const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a6125fd5a518b48ab8f7f770e1e22436a">point_const_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a0df067f0a544d1fc3fd3fbadda94f1e9">iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a92f3572681756c5f9298a748f09775cd">const_iterator</link></para>
</listitem>
            <listitem><para>typedef _Tv <link linkend="_class____gnu__pbds_1_1priority__queue_1a2e039a9e0523d941daeb0cf62bfaece8">value_type</link></para>
</listitem>
            <listitem><para>typedef Cmp_Fn <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link></para>
</listitem>
            <listitem><para>typedef Tag <link linkend="_class____gnu__pbds_1_1priority__queue_1a42dabb276b4f6048af380a775faf157e">container_category</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1priority__queue_1ac9c89575468e639df2697aae589dfb0e">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1priority__queue_1a38a5ca18e23a5576603bd787a51df734">size_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1priority__queue_1a94bbdf0021e115d17411582b7f973ee5">difference_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::reference <link linkend="_class____gnu__pbds_1_1priority__queue_1ac3dcdf43512d32f125e8062c8d7db069">reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_reference <link linkend="_class____gnu__pbds_1_1priority__queue_1a966051b061a35415b4db0e5559ddb5e3">const_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::pointer <link linkend="_class____gnu__pbds_1_1priority__queue_1a8852b6160821a88227be8ba430580312">pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_pointer <link linkend="_class____gnu__pbds_1_1priority__queue_1a5dd06f5e1564a87cddf962cf06089ef5">const_pointer</link></para>
</listitem>
            <listitem><para>typedef base_type::point_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1adf16ab3be6832883eaa47729e4f0dfdd">point_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::point_const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a6125fd5a518b48ab8f7f770e1e22436a">point_const_iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a0df067f0a544d1fc3fd3fbadda94f1e9">iterator</link></para>
</listitem>
            <listitem><para>typedef base_type::const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue_1a92f3572681756c5f9298a748f09775cd">const_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a3bab238a7db98ae6e9ba8a1a81ecf9c8">priority_queue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1aa6332f0e852dc89f0879cb5408d168c0">priority_queue</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp;r_cmp_fn)</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a2b637d89cbd874881a4da920d57b0487">priority_queue</link> (It first_it, It last_it)</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1priority__queue_1ad0141192206747833a170be548fd51e0">priority_queue</link> (It first_it, It last_it, const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp;r_cmp_fn)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a899c272fba59f61ba76caa6e84d35bb4">priority_queue</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1priority__queue_1aa1f1f89bf0d94cd4b6f6dfe3ab6f4aa5">~priority_queue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp; <link linkend="_class____gnu__pbds_1_1priority__queue_1a2a8a0673e19c443c429bca27da0a6009">operator=</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1priority__queue_1ae5076ffb65c8817075b6cf375cc8c5ca">swap</link> (<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a3bab238a7db98ae6e9ba8a1a81ecf9c8">priority_queue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1aa6332f0e852dc89f0879cb5408d168c0">priority_queue</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp;r_cmp_fn)</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a2b637d89cbd874881a4da920d57b0487">priority_queue</link> (It first_it, It last_it)</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1priority__queue_1ad0141192206747833a170be548fd51e0">priority_queue</link> (It first_it, It last_it, const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp;r_cmp_fn)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a899c272fba59f61ba76caa6e84d35bb4">priority_queue</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1priority__queue_1aa1f1f89bf0d94cd4b6f6dfe3ab6f4aa5">~priority_queue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp; <link linkend="_class____gnu__pbds_1_1priority__queue_1a2a8a0673e19c443c429bca27da0a6009">operator=</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1priority__queue_1ae5076ffb65c8817075b6cf375cc8c5ca">swap</link> (<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a3bab238a7db98ae6e9ba8a1a81ecf9c8">priority_queue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1aa6332f0e852dc89f0879cb5408d168c0">priority_queue</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp;r_cmp_fn)</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a2b637d89cbd874881a4da920d57b0487">priority_queue</link> (It first_it, It last_it)</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1priority__queue_1ad0141192206747833a170be548fd51e0">priority_queue</link> (It first_it, It last_it, const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp;r_cmp_fn)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue_1a899c272fba59f61ba76caa6e84d35bb4">priority_queue</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1priority__queue_1aa1f1f89bf0d94cd4b6f6dfe3ab6f4aa5">~priority_queue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp; <link linkend="_class____gnu__pbds_1_1priority__queue_1a2a8a0673e19c443c429bca27da0a6009">operator=</link> (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1priority__queue_1ae5076ffb65c8817075b6cf375cc8c5ca">swap</link> (<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp;other)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Tv, typename Cmp_Fn = std::less&lt;_Tv&gt;, typename Tag = pairing_heap_tag, typename _Alloc = std::allocator&lt;char&gt;&gt;<?linebreak?>class __gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</title></simplesect>

<para>A priority queue composed of one specific heap policy.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>_Tv</entry><entry>
<para>Value type. </para>
</entry>
                            </row>
                            <row>
<entry>Cmp_Fn</entry><entry>
<para>Comparison functor. </para>
</entry>
                            </row>
                            <row>
<entry>Tag</entry><entry>
<para>Instantiating data structure type, see <link linkend="_struct____gnu__pbds_1_1container__tag">container_tag</link>. </para>
</entry>
                            </row>
                            <row>
<entry>_Alloc</entry><entry>
<para>Allocator type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Base is dispatched at compile time via Tag, from the following choices: <link linkend="_struct____gnu__pbds_1_1binary__heap__tag">binary_heap_tag</link>, <link linkend="_struct____gnu__pbds_1_1binomial__heap__tag">binomial_heap_tag</link>, <link linkend="_struct____gnu__pbds_1_1pairing__heap__tag">pairing_heap_tag</link>, <link linkend="_struct____gnu__pbds_1_1rc__binomial__heap__tag">rc_binomial_heap_tag</link>, <link linkend="_struct____gnu__pbds_1_1thin__heap__tag">thin_heap_tag</link></para>

<para>Base choices are: <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">detail::binary_heap</link>, <link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap">detail::binomial_heap</link>, <link linkend="_class____gnu__pbds_1_1detail_1_1pairing__heap">detail::pairing_heap</link>, <link linkend="_class____gnu__pbds_1_1detail_1_1rc__binomial__heap">detail::rc_binomial_heap</link>, <link linkend="_class____gnu__pbds_1_1detail_1_1thin__heap">detail::thin_heap</link>. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ac9c89575468e639df2697aae589dfb0e"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ac9c89575468e639df2697aae589dfb0e"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ac9c89575468e639df2697aae589dfb0e"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46"/><section>
    <title>cmp_fn<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>cmp_fn</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>cmp_fn</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Cmp_Fn <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::cmp_fn</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46"/><section>
    <title>cmp_fn<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>cmp_fn</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>cmp_fn</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Cmp_Fn <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::cmp_fn</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46"/><section>
    <title>cmp_fn<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>cmp_fn</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>cmp_fn</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Cmp_Fn <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::cmp_fn</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a92f3572681756c5f9298a748f09775cd"/><section>
    <title>const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a92f3572681756c5f9298a748f09775cd"/><section>
    <title>const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a92f3572681756c5f9298a748f09775cd"/><section>
    <title>const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a5dd06f5e1564a87cddf962cf06089ef5"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_pointer <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a5dd06f5e1564a87cddf962cf06089ef5"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_pointer <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a5dd06f5e1564a87cddf962cf06089ef5"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_pointer <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a966051b061a35415b4db0e5559ddb5e3"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_reference <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a966051b061a35415b4db0e5559ddb5e3"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_reference <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a966051b061a35415b4db0e5559ddb5e3"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_reference <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a42dabb276b4f6048af380a775faf157e"/><section>
    <title>container_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>container_category</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>container_category</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Tag <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::container_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a42dabb276b4f6048af380a775faf157e"/><section>
    <title>container_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>container_category</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>container_category</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Tag <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::container_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a42dabb276b4f6048af380a775faf157e"/><section>
    <title>container_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>container_category</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>container_category</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Tag <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::container_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a94bbdf0021e115d17411582b7f973ee5"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a94bbdf0021e115d17411582b7f973ee5"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a94bbdf0021e115d17411582b7f973ee5"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a0df067f0a544d1fc3fd3fbadda94f1e9"/><section>
    <title>iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a0df067f0a544d1fc3fd3fbadda94f1e9"/><section>
    <title>iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a0df067f0a544d1fc3fd3fbadda94f1e9"/><section>
    <title>iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a6125fd5a518b48ab8f7f770e1e22436a"/><section>
    <title>point_const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>point_const_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>point_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::point_const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::point_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a6125fd5a518b48ab8f7f770e1e22436a"/><section>
    <title>point_const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>point_const_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>point_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::point_const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::point_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a6125fd5a518b48ab8f7f770e1e22436a"/><section>
    <title>point_const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>point_const_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>point_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::point_const_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::point_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1adf16ab3be6832883eaa47729e4f0dfdd"/><section>
    <title>point_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>point_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>point_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::point_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::point_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1adf16ab3be6832883eaa47729e4f0dfdd"/><section>
    <title>point_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>point_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>point_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::point_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::point_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1adf16ab3be6832883eaa47729e4f0dfdd"/><section>
    <title>point_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>point_iterator</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>point_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef base_type::point_iterator <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::point_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a8852b6160821a88227be8ba430580312"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::pointer <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a8852b6160821a88227be8ba430580312"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::pointer <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a8852b6160821a88227be8ba430580312"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::pointer <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ac3dcdf43512d32f125e8062c8d7db069"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::reference <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ac3dcdf43512d32f125e8062c8d7db069"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::reference <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ac3dcdf43512d32f125e8062c8d7db069"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef __rebind_va::reference <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a38a5ca18e23a5576603bd787a51df734"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a38a5ca18e23a5576603bd787a51df734"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a38a5ca18e23a5576603bd787a51df734"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2e039a9e0523d941daeb0cf62bfaece8"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Tv <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2e039a9e0523d941daeb0cf62bfaece8"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Tv <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2e039a9e0523d941daeb0cf62bfaece8"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef _Tv <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::value_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a3bab238a7db98ae6e9ba8a1a81ecf9c8"/><section>
    <title>priority_queue()<computeroutput>[1/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1aa6332f0e852dc89f0879cb5408d168c0"/><section>
    <title>priority_queue()<computeroutput>[2/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp; r_cmp_fn)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking some policy objects. r_cmp_fn will be copied by the Cmp_Fn object of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2b637d89cbd874881a4da920d57b0487"/><section>
    <title>priority_queue()<computeroutput>[3/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (It first_it, It last_it)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ad0141192206747833a170be548fd51e0"/><section>
    <title>priority_queue()<computeroutput>[4/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (It first_it, It last_it, const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp; r_cmp_fn)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types and some policy objects The value_types between first_it and last_it will be inserted into the container object. r_cmp_fn will be copied by the cmp_fn object of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a899c272fba59f61ba76caa6e84d35bb4"/><section>
    <title>priority_queue()<computeroutput>[5/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1aa1f1f89bf0d94cd4b6f6dfe3ab6f4aa5"/><section>
    <title>~priority_queue()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>~priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::~<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a3bab238a7db98ae6e9ba8a1a81ecf9c8"/><section>
    <title>priority_queue()<computeroutput>[6/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1aa6332f0e852dc89f0879cb5408d168c0"/><section>
    <title>priority_queue()<computeroutput>[7/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp; r_cmp_fn)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking some policy objects. r_cmp_fn will be copied by the Cmp_Fn object of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2b637d89cbd874881a4da920d57b0487"/><section>
    <title>priority_queue()<computeroutput>[8/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (It first_it, It last_it)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ad0141192206747833a170be548fd51e0"/><section>
    <title>priority_queue()<computeroutput>[9/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (It first_it, It last_it, const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp; r_cmp_fn)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types and some policy objects The value_types between first_it and last_it will be inserted into the container object. r_cmp_fn will be copied by the cmp_fn object of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a899c272fba59f61ba76caa6e84d35bb4"/><section>
    <title>priority_queue()<computeroutput>[10/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1aa1f1f89bf0d94cd4b6f6dfe3ab6f4aa5"/><section>
    <title>~priority_queue()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>~priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::~<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a3bab238a7db98ae6e9ba8a1a81ecf9c8"/><section>
    <title>priority_queue()<computeroutput>[11/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1aa6332f0e852dc89f0879cb5408d168c0"/><section>
    <title>priority_queue()<computeroutput>[12/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp; r_cmp_fn)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking some policy objects. r_cmp_fn will be copied by the Cmp_Fn object of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2b637d89cbd874881a4da920d57b0487"/><section>
    <title>priority_queue()<computeroutput>[13/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (It first_it, It last_it)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ad0141192206747833a170be548fd51e0"/><section>
    <title>priority_queue()<computeroutput>[14/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (It first_it, It last_it, const <link linkend="_class____gnu__pbds_1_1priority__queue_1a304975fa40b9b7448b4762d720832c46">cmp_fn</link> &amp; r_cmp_fn)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types and some policy objects The value_types between first_it and last_it will be inserted into the container object. r_cmp_fn will be copied by the cmp_fn object of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a899c272fba59f61ba76caa6e84d35bb4"/><section>
    <title>priority_queue()<computeroutput>[15/15]</computeroutput></title>
<indexterm><primary>priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::priority_queue (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1aa1f1f89bf0d94cd4b6f6dfe3ab6f4aa5"/><section>
    <title>~priority_queue()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~priority_queue</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>~priority_queue</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::~<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2a8a0673e19c443c429bca27da0a6009"/><section>
    <title>operator=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp; <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1priority__queue_a2a8a0673e19c443c429bca27da0a6009_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2a8a0673e19c443c429bca27da0a6009"/><section>
    <title>operator=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp; <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1priority__queue_a2a8a0673e19c443c429bca27da0a6009_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1a2a8a0673e19c443c429bca27da0a6009"/><section>
    <title>operator=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link> &amp; <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1priority__queue_a2a8a0673e19c443c429bca27da0a6009_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ae5076ffb65c8817075b6cf375cc8c5ca"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::swap (<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1priority__queue_ae5076ffb65c8817075b6cf375cc8c5ca_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ae5076ffb65c8817075b6cf375cc8c5ca"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::swap (<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1priority__queue_1ae5076ffb65c8817075b6cf375cc8c5ca"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename _Tv , typename Cmp_Fn  = std::less&lt;_Tv&gt;, typename Tag  = pairing_heap_tag, typename _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;::swap (<link linkend="_class____gnu__pbds_1_1priority__queue">priority_queue</link>&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2priority__queue_8hpp">priority_queue.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2priority__queue_8hpp">priority_queue.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2priority__queue_8hpp">priority_queue.hpp</link></section>
</section>
