<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacebit_count" xml:lang="en-US">
<title>bitCount Namespace Reference</title>
<indexterm><primary>bitCount</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structbit_count_1_1compute__bitfield_bit_count_step">compute_bitfieldBitCountStep</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbit_count_1_1compute__bitfield_bit_count_step_3_01true_01_4">compute_bitfieldBitCountStep&lt; true &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structbit_count_1_1type">type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacebit_count_1a1e72c429cc9e7069d876a3486f01c739">bitCount_if</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>int <link linkend="_namespacebit_count_1a2078d8cecc1408f4de73f8db6734bf76">bitCount_vec</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structbit_count_1_1type">type</link>&lt; int &gt; const <link linkend="_namespacebit_count_1a688fc7c6b6cf99a69dad0247a9a15fc3">DataI32</link> []</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacebit_count_1a1e72c429cc9e7069d876a3486f01c739"/><section>
    <title>bitCount_if()</title>
<indexterm><primary>bitCount_if</primary><secondary>bitCount</secondary></indexterm>
<indexterm><primary>bitCount</primary><secondary>bitCount_if</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>int bitCount::bitCount_if (T v)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespacebit_count_1a2078d8cecc1408f4de73f8db6734bf76"/><section>
    <title>bitCount_vec()</title>
<indexterm><primary>bitCount_vec</primary><secondary>bitCount</secondary></indexterm>
<indexterm><primary>bitCount</primary><secondary>bitCount_vec</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>int bitCount::bitCount_vec (T v)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespacebit_count_1a688fc7c6b6cf99a69dad0247a9a15fc3"/><section>
    <title>DataI32</title>
<indexterm><primary>DataI32</primary><secondary>bitCount</secondary></indexterm>
<indexterm><primary>bitCount</primary><secondary>DataI32</secondary></indexterm>
<para><computeroutput><link linkend="_structbit_count_1_1type">type</link>&lt; int &gt; const bitCount::DataI32</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0x00000001,&#32;&#32;1},
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0x00000003,&#32;&#32;2},
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0x00000002,&#32;&#32;1},
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0x7fffffff,&#32;31},
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0x00000000,&#32;&#32;0}
&#32;&#32;&#32;&#32;}
</programlisting></section>
</section>
</section>
