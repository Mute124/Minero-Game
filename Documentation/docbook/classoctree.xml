<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classoctree" xml:lang="en-US">
<title>octree Class Reference</title>
<indexterm><primary>octree</primary></indexterm>
<para>
<computeroutput>#include &lt;octree.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classoctree_1a1919674ecf1f9d1592909258591f386a">octree</link> (FIntVector <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>, int <link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1ad546b6133db9681264893d693688b930">operator==</link> (<link linkend="_classoctree">octree</link> agent) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1ac176f06302c71cebd6f263741ad85f69">operator&lt;</link> (<link linkend="_classoctree">octree</link> agent) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1a76e6cacab9bc0370c46fbed777c160c1">operator&gt;</link> (<link linkend="_classoctree">octree</link> agent) const</para>
</listitem>
            <listitem><para>FORCEINLINE int <link linkend="_classoctree_1a969f93c2bda5bac3d072d2c51441474b">size</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1aa94a040f908fcc2cbcc9f76fa14a8f46">getMin</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1aea9e746ee5d256cda1464a5d54c2133b">getMax</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1a963d04a7d4de5ce8e07522e293e1c502">bLeaf</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1af2792f05c6b1675830298a0cff0b1727">bInTree</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1a4435e66e662308f0f335748bbda096c9">glconvert</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1a2d553dda5fe0cbbac00449c7e89d7ab7">lgconvert</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>FORCEINLINE int <link linkend="_classoctree_1a8f99e2165de16e414f3d355fe54f7d8d">depth_id</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>)</para>
</listitem>
            <listitem><para><link linkend="_classoctree_1a1919674ecf1f9d1592909258591f386a">octree</link> (FIntVector <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>, int <link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1ad546b6133db9681264893d693688b930">operator==</link> (<link linkend="_classoctree">octree</link> agent) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1ac176f06302c71cebd6f263741ad85f69">operator&lt;</link> (<link linkend="_classoctree">octree</link> agent) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1a76e6cacab9bc0370c46fbed777c160c1">operator&gt;</link> (<link linkend="_classoctree">octree</link> agent) const</para>
</listitem>
            <listitem><para>FORCEINLINE int <link linkend="_classoctree_1acd1c10ffce49dae3f695ddb9a671c871">size</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1aa94a040f908fcc2cbcc9f76fa14a8f46">getMin</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1aea9e746ee5d256cda1464a5d54c2133b">getMax</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1a0c42955016b9ee197db406b250a22dbd">bLeaf</link> ()</para>
</listitem>
            <listitem><para>FORCEINLINE <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1a580e76bda7dceca6c559ec143cdb3cac">bInTree</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1a600c3425eb43d026eb20d3a98dfbeaae">glconvert</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>FORCEINLINE FIntVector <link linkend="_classoctree_1a87c79c025c7d7a5ef3f75e6330398984">lgconvert</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>FORCEINLINE int <link linkend="_classoctree_1aeda12addd3696c9f066e257187a77a39">depth_id</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>FIntVector <link linkend="_classoctree_1a9ec450ec2f5e739d075831b0c0e988ca">m_position</link></para>
</listitem>
            <listitem><para>int <link linkend="_classoctree_1a35c29824ccc1c48b60026da393902c30">m_depth</link></para>
</listitem>
            <listitem><para>int <link linkend="_classoctree_1a62905cc919667d4ec2049638b9569949">m_id</link></para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classoctree_1ae27ef31ff805f4e647a34b087950f5d0">m_bFather</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classoctree_1a1919674ecf1f9d1592909258591f386a"/><section>
    <title>octree()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>octree</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>octree</secondary></indexterm>
<para><computeroutput>octree::octree (FIntVector position, int depth, int id)</computeroutput></para></section>
<anchor xml:id="_classoctree_1a1919674ecf1f9d1592909258591f386a"/><section>
    <title>octree()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>octree</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>octree</secondary></indexterm>
<para><computeroutput>octree::octree (FIntVector position, int depth, int id)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classoctree_1af2792f05c6b1675830298a0cff0b1727"/><section>
    <title>bInTree()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>bInTree</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>bInTree</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::bInTree (int x, int y, int z)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classoctree_af2792f05c6b1675830298a0cff0b1727_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classoctree_1a580e76bda7dceca6c559ec143cdb3cac"/><section>
    <title>bInTree()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>bInTree</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>bInTree</secondary></indexterm>
<para><computeroutput>FORCEINLINE <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::bInTree (int x, int y, int z)</computeroutput></para></section>
<anchor xml:id="_classoctree_1a963d04a7d4de5ce8e07522e293e1c502"/><section>
    <title>bLeaf()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>bLeaf</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>bLeaf</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::bLeaf ( )</computeroutput></para></section>
<anchor xml:id="_classoctree_1a0c42955016b9ee197db406b250a22dbd"/><section>
    <title>bLeaf()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>bLeaf</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>bLeaf</secondary></indexterm>
<para><computeroutput>FORCEINLINE <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::bLeaf ( )</computeroutput></para></section>
<anchor xml:id="_classoctree_1a8f99e2165de16e414f3d355fe54f7d8d"/><section>
    <title>depth_id()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>depth_id</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>depth_id</secondary></indexterm>
<para><computeroutput>int octree::depth_id (int depth)</computeroutput></para></section>
<anchor xml:id="_classoctree_1aeda12addd3696c9f066e257187a77a39"/><section>
    <title>depth_id()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>depth_id</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>depth_id</secondary></indexterm>
<para><computeroutput>FORCEINLINE int octree::depth_id (int depth)</computeroutput></para></section>
<anchor xml:id="_classoctree_1aea9e746ee5d256cda1464a5d54c2133b"/><section>
    <title>getMax()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getMax</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>getMax</secondary></indexterm>
<para><computeroutput>FORCEINLINE FIntVector octree::getMax ( )</computeroutput></para></section>
<anchor xml:id="_classoctree_1aea9e746ee5d256cda1464a5d54c2133b"/><section>
    <title>getMax()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getMax</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>getMax</secondary></indexterm>
<para><computeroutput>FORCEINLINE FIntVector octree::getMax ( )</computeroutput></para></section>
<anchor xml:id="_classoctree_1aa94a040f908fcc2cbcc9f76fa14a8f46"/><section>
    <title>getMin()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getMin</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>getMin</secondary></indexterm>
<para><computeroutput>FORCEINLINE FIntVector octree::getMin ( )</computeroutput></para></section>
<anchor xml:id="_classoctree_1aa94a040f908fcc2cbcc9f76fa14a8f46"/><section>
    <title>getMin()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getMin</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>getMin</secondary></indexterm>
<para><computeroutput>FORCEINLINE FIntVector octree::getMin ( )</computeroutput></para></section>
<anchor xml:id="_classoctree_1a4435e66e662308f0f335748bbda096c9"/><section>
    <title>glconvert()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>glconvert</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>glconvert</secondary></indexterm>
<para><computeroutput>FIntVector octree::glconvert (int x, int y, int z)</computeroutput></para></section>
<anchor xml:id="_classoctree_1a600c3425eb43d026eb20d3a98dfbeaae"/><section>
    <title>glconvert()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>glconvert</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>glconvert</secondary></indexterm>
<para><computeroutput>FORCEINLINE FIntVector octree::glconvert (int x, int y, int z)</computeroutput></para></section>
<anchor xml:id="_classoctree_1a2d553dda5fe0cbbac00449c7e89d7ab7"/><section>
    <title>lgconvert()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>lgconvert</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>lgconvert</secondary></indexterm>
<para><computeroutput>FIntVector octree::lgconvert (int x, int y, int z)</computeroutput></para></section>
<anchor xml:id="_classoctree_1a87c79c025c7d7a5ef3f75e6330398984"/><section>
    <title>lgconvert()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>lgconvert</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>lgconvert</secondary></indexterm>
<para><computeroutput>FORCEINLINE FIntVector octree::lgconvert (int x, int y, int z)</computeroutput></para></section>
<anchor xml:id="_classoctree_1ac176f06302c71cebd6f263741ad85f69"/><section>
    <title>operator&lt;()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::operator&lt; (<link linkend="_classoctree">octree</link> agent) const</computeroutput></para></section>
<anchor xml:id="_classoctree_1ac176f06302c71cebd6f263741ad85f69"/><section>
    <title>operator&lt;()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::operator&lt; (<link linkend="_classoctree">octree</link> agent) const</computeroutput></para></section>
<anchor xml:id="_classoctree_1ad546b6133db9681264893d693688b930"/><section>
    <title>operator==()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::operator== (<link linkend="_classoctree">octree</link> agent) const</computeroutput></para></section>
<anchor xml:id="_classoctree_1ad546b6133db9681264893d693688b930"/><section>
    <title>operator==()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::operator== (<link linkend="_classoctree">octree</link> agent) const</computeroutput></para></section>
<anchor xml:id="_classoctree_1a76e6cacab9bc0370c46fbed777c160c1"/><section>
    <title>operator&gt;()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&gt;</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::operator&gt; (<link linkend="_classoctree">octree</link> agent) const</computeroutput></para></section>
<anchor xml:id="_classoctree_1a76e6cacab9bc0370c46fbed777c160c1"/><section>
    <title>operator&gt;()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&gt;</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::operator&gt; (<link linkend="_classoctree">octree</link> agent) const</computeroutput></para></section>
<anchor xml:id="_classoctree_1a969f93c2bda5bac3d072d2c51441474b"/><section>
    <title>size()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>size</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>size</secondary></indexterm>
<para><computeroutput>int octree::size ( )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classoctree_a969f93c2bda5bac3d072d2c51441474b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classoctree_1acd1c10ffce49dae3f695ddb9a671c871"/><section>
    <title>size()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>size</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>size</secondary></indexterm>
<para><computeroutput>FORCEINLINE int octree::size ( )</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classoctree_1ae27ef31ff805f4e647a34b087950f5d0"/><section>
    <title>m_bFather</title>
<indexterm><primary>m_bFather</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>m_bFather</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> octree::m_bFather</computeroutput></para></section>
<anchor xml:id="_classoctree_1a35c29824ccc1c48b60026da393902c30"/><section>
    <title>m_depth</title>
<indexterm><primary>m_depth</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>m_depth</secondary></indexterm>
<para><computeroutput>int octree::m_depth</computeroutput></para></section>
<anchor xml:id="_classoctree_1a62905cc919667d4ec2049638b9569949"/><section>
    <title>m_id</title>
<indexterm><primary>m_id</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>m_id</secondary></indexterm>
<para><computeroutput>int octree::m_id</computeroutput></para></section>
<anchor xml:id="_classoctree_1a9ec450ec2f5e739d075831b0c0e988ca"/><section>
    <title>m_position</title>
<indexterm><primary>m_position</primary><secondary>octree</secondary></indexterm>
<indexterm><primary>octree</primary><secondary>m_position</secondary></indexterm>
<para><computeroutput>FIntVector octree::m_position</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/Smooth-Infinite-Voxel-Terrain-master/<link linkend="__classes_2lib_2_smooth-_infinite-_voxel-_terrain-master_2octree_8h">octree.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/Smooth-Infinite-Voxel-Terrain-master/<link linkend="_lib_2_smooth-_infinite-_voxel-_terrain-master_2octree_8h">octree.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/Smooth-Infinite-Voxel-Terrain-master/<link linkend="__classes_2lib_2_smooth-_infinite-_voxel-_terrain-master_2octree_8cpp">octree.cpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/Smooth-Infinite-Voxel-Terrain-master/<link linkend="_lib_2_smooth-_infinite-_voxel-_terrain-master_2octree_8cpp">octree.cpp</link></section>
</section>
