<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structnative__value__traits" xml:lang="en-US">
<title>native_value_traits&lt; T, NodeType &gt; Struct Template Reference</title>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;toml.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_structnative__value__traits_1acb9bb4c233e53efda4e52ee6b1d7c6a2">native_type</link> = T</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits_1a6e882a8f3b23326993e92f69aa5dca7e">is_native</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link></para>
</listitem>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits_1aa085e6ea9dfd8bbe4e4bd95121b474e9">is_losslessly_convertible_to_native</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link></para>
</listitem>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits_1ae6816b96da077408cd540f9591ca2e8e">can_represent_native</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link></para>
</listitem>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits_1ab3e14472a7bcdb9a3676151edb811bfc">can_partially_represent_native</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link></para>
</listitem>
            <listitem><para>static constexpr auto <link linkend="_structnative__value__traits_1ac38e527fab2c8bc25af165a774262a81">type</link> = NodeType</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_structnative__value__traits_1acb9bb4c233e53efda4e52ee6b1d7c6a2"/><section>
    <title>native_type</title>
<indexterm><primary>native_type</primary><secondary>native_value_traits&lt; T, NodeType &gt;</secondary></indexterm>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary><secondary>native_type</secondary></indexterm>
<computeroutput>template&lt;typename T , node_type NodeType&gt; </computeroutput><para><computeroutput>using <link linkend="_structnative__value__traits">native_value_traits</link>&lt; T, NodeType &gt;::native_type =  T</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structnative__value__traits_1ab3e14472a7bcdb9a3676151edb811bfc"/><section>
    <title>can_partially_represent_native</title>
<indexterm><primary>can_partially_represent_native</primary><secondary>native_value_traits&lt; T, NodeType &gt;</secondary></indexterm>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary><secondary>can_partially_represent_native</secondary></indexterm>
<computeroutput>template&lt;typename T , node_type NodeType&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits">native_value_traits</link>&lt; T, NodeType &gt;::can_partially_represent_native = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link><computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnative__value__traits_1ae6816b96da077408cd540f9591ca2e8e"/><section>
    <title>can_represent_native</title>
<indexterm><primary>can_represent_native</primary><secondary>native_value_traits&lt; T, NodeType &gt;</secondary></indexterm>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary><secondary>can_represent_native</secondary></indexterm>
<computeroutput>template&lt;typename T , node_type NodeType&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits">native_value_traits</link>&lt; T, NodeType &gt;::can_represent_native = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link><computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnative__value__traits_1aa085e6ea9dfd8bbe4e4bd95121b474e9"/><section>
    <title>is_losslessly_convertible_to_native</title>
<indexterm><primary>is_losslessly_convertible_to_native</primary><secondary>native_value_traits&lt; T, NodeType &gt;</secondary></indexterm>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary><secondary>is_losslessly_convertible_to_native</secondary></indexterm>
<computeroutput>template&lt;typename T , node_type NodeType&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits">native_value_traits</link>&lt; T, NodeType &gt;::is_losslessly_convertible_to_native = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link><computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnative__value__traits_1a6e882a8f3b23326993e92f69aa5dca7e"/><section>
    <title>is_native</title>
<indexterm><primary>is_native</primary><secondary>native_value_traits&lt; T, NodeType &gt;</secondary></indexterm>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary><secondary>is_native</secondary></indexterm>
<computeroutput>template&lt;typename T , node_type NodeType&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structnative__value__traits">native_value_traits</link>&lt; T, NodeType &gt;::is_native = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link><computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnative__value__traits_1ac38e527fab2c8bc25af165a774262a81"/><section>
    <title>type</title>
<indexterm><primary>type</primary><secondary>native_value_traits&lt; T, NodeType &gt;</secondary></indexterm>
<indexterm><primary>native_value_traits&lt; T, NodeType &gt;</primary><secondary>type</secondary></indexterm>
<computeroutput>template&lt;typename T , node_type NodeType&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_structnative__value__traits">native_value_traits</link>&lt; T, NodeType &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> = NodeType<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
