<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2ov__tree__map___8hpp_source" xml:lang="en-US">
<title>ov_tree_map_.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
42 <emphasis role="preprocessor">#include&#32;&lt;set&gt;</emphasis>
43 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/exception.hpp&gt;</emphasis>
44 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tree_policy.hpp&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/eq_fn/eq_by_less.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/types_traits.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/tree_trace_base.hpp&gt;</emphasis>
49 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
50 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/debug_map_base.hpp&gt;</emphasis>
51 <emphasis role="preprocessor">#endif</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
53 <emphasis role="preprocessor">#include&#32;&lt;functional&gt;</emphasis>
54 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
55 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
56 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
57 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
58 
59 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
60 {
61 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
62 &#32;&#32;{
63 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
64 <emphasis role="preprocessor">#define&#32;PB_DS_OV_TREE_NAME&#32;ov_tree_map</emphasis>
65 <emphasis role="preprocessor">#define&#32;PB_DS_CONST_NODE_ITERATOR_NAME&#32;ov_tree_node_const_iterator_map</emphasis>
66 <emphasis role="preprocessor">#endif</emphasis>
67 
68 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
69 <emphasis role="preprocessor">#define&#32;PB_DS_OV_TREE_NAME&#32;ov_tree_set</emphasis>
70 <emphasis role="preprocessor">#define&#32;PB_DS_CONST_NODE_ITERATOR_NAME&#32;ov_tree_node_const_iterator_set</emphasis>
71 <emphasis role="preprocessor">#endif</emphasis>
72 
73 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
74 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Key,&#32;typename&#32;Mapped,&#32;typename&#32;Cmp_Fn,&#32;\</emphasis>
75 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;Node_And_It_Traits,&#32;typename&#32;_Alloc&gt;</emphasis>
76 
77 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
78 <emphasis role="preprocessor">&#32;&#32;&#32;PB_DS_OV_TREE_NAME&lt;Key,&#32;Mapped,&#32;Cmp_Fn,&#32;Node_And_It_Traits,&#32;_Alloc&gt;</emphasis>
79 
80 <emphasis role="preprocessor">#define&#32;PB_DS_OV_TREE_TRAITS_BASE&#32;\</emphasis>
81 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;types_traits&lt;Key,&#32;Mapped,&#32;_Alloc,&#32;false&gt;</emphasis>
82 
83 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
84 <emphasis role="preprocessor">#define&#32;PB_DS_DEBUG_MAP_BASE_C_DEC&#32;\</emphasis>
85 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;debug_map_base&lt;Key,&#32;eq_by_less&lt;Key,&#32;Cmp_Fn&gt;,&#32;\</emphasis>
86 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;rebind_traits&lt;_Alloc,&#32;Key&gt;::const_reference&gt;</emphasis>
87 <emphasis role="preprocessor">#endif</emphasis>
88 
89 <emphasis role="preprocessor">#ifdef&#32;PB_DS_TREE_TRACE</emphasis>
90 <emphasis role="preprocessor">#define&#32;PB_DS_TREE_TRACE_BASE_C_DEC&#32;\</emphasis>
91 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;tree_trace_base&lt;typename&#32;Node_And_It_Traits::node_const_iterator,&#32;&#32;&#32;\</emphasis>
92 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;Node_And_It_Traits::node_iterator,&#32;&#32;&#32;&#32;&#32;\</emphasis>
93 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cmp_Fn,&#32;false,&#32;_Alloc&gt;</emphasis>
94 <emphasis role="preprocessor">#endif</emphasis>
95 
96 <emphasis role="preprocessor">#ifndef&#32;PB_DS_CHECK_KEY_EXISTS</emphasis>
97 <emphasis role="preprocessor">#&#32;&#32;error&#32;Missing&#32;definition</emphasis>
98 <emphasis role="preprocessor">#endif</emphasis>
99 
104 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped,&#32;<emphasis role="keyword">typename</emphasis>&#32;Cmp_Fn,
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Node_And_It_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e">PB_DS_OV_TREE_NAME</link>&#32;:
107 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;PB_DS_DEBUG_MAP_BASE_C_DEC,
109 <emphasis role="preprocessor">#endif</emphasis>
110 <emphasis role="preprocessor">#ifdef&#32;PB_DS_TREE_TRACE</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PB_DS_TREE_TRACE_BASE_C_DEC,
112 <emphasis role="preprocessor">#endif</emphasis>
113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Cmp_Fn,
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Node_And_It_Traits::node_update,
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2ov__tree__map___8hpp_1a67d46647ed9a244ef4f81a13b675eddb">PB_DS_OV_TREE_TRAITS_BASE</link>
116 &#32;&#32;&#32;&#32;{
117 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
118 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2ov__tree__map___2ov__tree__map___8hpp_1a67d46647ed9a244ef4f81a13b675eddb">PB_DS_OV_TREE_TRAITS_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base;
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Node_And_It_Traits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type;
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;remove_const&lt;typename&#32;traits_base::value_type&gt;::type&#32;non_const_value_type;
122 
123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, non_const_value_type&gt;</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">value_alloc_traits</link>;
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">value_alloc_traits::allocator_type</link>&#32;value_allocator;
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;value_alloc_traits::pointer&#32;&#32;&#32;&#32;value_vector;
126 
127 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;PB_DS_DEBUG_MAP_BASE_C_DEC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_base;
129 <emphasis role="preprocessor">#endif</emphasis>
130 
131 <emphasis role="preprocessor">#ifdef&#32;PB_DS_TREE_TRACE</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;PB_DS_TREE_TRACE_BASE_C_DEC&#32;&#32;&#32;&#32;&#32;&#32;&#32;trace_base;
133 <emphasis role="preprocessor">#endif</emphasis>
134 
135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mapped_pointer_;
136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_pointer&#32;&#32;&#32;mapped_const_pointer_;
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::metadata_type&#32;&#32;&#32;metadata_type;
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, metadata_type&gt;</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">metadata_alloc_traits</link>;
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">metadata_alloc_traits::allocator_type</link>&#32;metadata_allocator;
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;metadata_alloc_traits::pointer&#32;&#32;&#32;metadata_pointer;
143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;metadata_alloc_traits::const_reference&#32;metadata_const_reference;
144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;metadata_alloc_traits::reference&#32;metadata_reference;
145 
146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::null_node_update_pointer
147 &#32;&#32;&#32;&#32;&#32;&#32;null_node_update_pointer;
148 
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1ov__tree__tag">ov_tree_tag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a4cea810e482af06469877ca2721761aa">container_category</link>;
151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a4d69e61ffcf3b39027a25589ca204877">allocator_type</link>;
152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>;
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ade3ca63345609cb841841f78cb94d554">difference_type</link>;
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Cmp_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a28ec5351c27459e3016c45ac081bab08">cmp_fn</link>;
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a8211a41cf1a9858a0dda8f3054dfc1e1">key_type</link>;
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_pointer&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3a62a77fe3b7b1c2f26d2f302b2e4136">key_pointer</link>;
158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_const_pointer&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a2f9679f49590052f5e1c7a4344785beb">key_const_pointer</link>;
159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_reference&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1abc000992a24aa39b1a4b7b439f53c98b">key_reference</link>;
160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>;
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_type&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1acabe385268cd2f55faeece946a976195">mapped_type</link>;
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_pointer&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9b62fc6bf8c25cd9dfc5cbecd5fcf81e">mapped_pointer</link>;
163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ab31c3de3d592818a14bda5d07caa2ca9">mapped_const_pointer</link>;
164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_reference&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a8b2bb1f9289ee8c89e35f3e5db0ca017">mapped_reference</link>;
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ac3c9b518a94af5002b8a4d338ba7ef61">mapped_const_reference</link>;
166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::value_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ab72cdf32c199de20b0e2d10d90724974">value_type</link>;
167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1abd58508b6e8d148297d7c972b623946c">pointer</link>;
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_pointer&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ae6ef58a8e888a936f4d0c235f4b4a8c2">const_pointer</link>;
169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::reference&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9402f96b494c193556225cb350d14a13">reference</link>;
170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_reference&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3713942e53a9eda3c15017ed10a8f40e">const_reference</link>;
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ae6ef58a8e888a936f4d0c235f4b4a8c2">const_pointer</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a41b5122acf61bf8a4c4ad3b300c54324">point_const_iterator</link>;
173 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1abd58508b6e8d148297d7c972b623946c">pointer</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>;
175 <emphasis role="preprocessor">#else</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a41b5122acf61bf8a4c4ad3b300c54324">point_const_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>;
177 <emphasis role="preprocessor">#endif</emphasis>
178 
179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>;
180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a41b5122acf61bf8a4c4ad3b300c54324">point_const_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a27d420e11bc3c05e1cc449cc4594d98f">const_iterator</link>;
181 
183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Size_Type&gt;
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor">cond_dtor</link>
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
186 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
187 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1af6f238f16aa1dc95a855ba04ad1cdde3">cond_dtor</link>(value_vector&#32;a_vec,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&amp;&#32;r_last_it,&#32;
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Size_Type&#32;total_size)&#32;
189 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a1c665bec66a189181cdfb83e41a6a6e4">m_a_vec</link>(a_vec),&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a97fc2c75450ba96e78436d55512da1ac">m_r_last_it</link>(r_last_it),&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1ad7c3a1bf071277851e0bd3dfad50f78b">m_max_size</link>(total_size),
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a9c46e645052b6db96e67f5fdd1e40849">m_no_action</link>(<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>)
191 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
192 
193 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1acb65fd527d43815a7b63dec78e8c06e1">~cond_dtor</link>()
194 &#32;&#32;&#32;&#32;&#32;&#32;{
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a9c46e645052b6db96e67f5fdd1e40849">m_no_action</link>)
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a1c665bec66a189181cdfb83e41a6a6e4">m_a_vec</link>;
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(it&#32;!=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a97fc2c75450ba96e78436d55512da1ac">m_r_last_it</link>)
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it-&gt;~value_type();
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++it;
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1ad7c3a1bf071277851e0bd3dfad50f78b">m_max_size</link>&#32;&gt;&#32;0)
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_allocator().deallocate(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a1c665bec66a189181cdfb83e41a6a6e4">m_a_vec</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1ad7c3a1bf071277851e0bd3dfad50f78b">m_max_size</link>);
206 &#32;&#32;&#32;&#32;&#32;&#32;}
207 
208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a81039cfc25db270c694c71e3ea947821">set_no_action</link>()
210 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a9c46e645052b6db96e67f5fdd1e40849">m_no_action</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;}
211 &#32;&#32;&#32;&#32;&#32;&#32;
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
213 &#32;&#32;&#32;&#32;&#32;&#32;value_vector&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a1c665bec66a189181cdfb83e41a6a6e4">m_a_vec</link>;
214 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a97fc2c75450ba96e78436d55512da1ac">m_r_last_it</link>;
215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Size_Type&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1ad7c3a1bf071277851e0bd3dfad50f78b">m_max_size</link>;
216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor_1a9c46e645052b6db96e67f5fdd1e40849">m_no_action</link>;
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;};
218 &#32;&#32;&#32;&#32;&#32;&#32;
219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::node_update&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a59e45f9d2e5d821b261683524a4ce841">node_update</link>;
220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::node_iterator&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>;
221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_type::node_const_iterator&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a84522c6f0a47b0ae33cce876b3881fbb">node_const_iterator</link>;
222 
223 
224 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a521d544eff8c5a8284c89964cbf9c70f">PB_DS_OV_TREE_NAME</link>();
225 
226 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a54c17371d02b2fd1eb48d90eaa32c5dd">PB_DS_OV_TREE_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;);
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a63c3780b78887434974fbca25a642790">PB_DS_OV_TREE_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a59e45f9d2e5d821b261683524a4ce841">node_update</link>&amp;);
229 
230 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af2b047fb7b6b57f1eebf9873af132b9f">PB_DS_OV_TREE_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
231 
232 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9b4d67081b41869e29fc1680508042ad">~PB_DS_OV_TREE_NAME</link>();
233 
234 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
235 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a25a55943a9b09521b2d774314683b4c1">swap</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
236 
237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
239 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a84d056499e7eb726fe42ea8f26f04a24">copy_from_range</link>(It,&#32;It);
240 
241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>
242 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3d5f97d7b0c9fae0550b0a6456d6ec02">max_size</link>()&#32;<emphasis role="keyword">const</emphasis>;
243 
244 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
245 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ad7434c5b4064f58e448c456d26ec2af4">empty</link>()&#32;<emphasis role="keyword">const</emphasis>;
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>
248 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ae5580679ba52f764419600c47cb251fa">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;Cmp_Fn&amp;
251 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a1928cbbee0af8f103d770981a5b8a903">get_cmp_fn</link>();
252 
253 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;
254 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a61041ed30beef92a3e21a0628c29db5e">get_cmp_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
255 
256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a8b2bb1f9289ee8c89e35f3e5db0ca017">mapped_reference</link>
257 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a8d8773e444457ac8c32df1db43151f64">operator[]</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)
258 &#32;&#32;&#32;&#32;&#32;&#32;{
259 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
260 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
261 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>&#32;it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a90d84c7b901b9d0780895cc6b695cbc5">lower_bound</link>(r_key);
262 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>()&#32;&amp;&amp;&#32;!Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*it)))
263 &#32;&#32;&#32;&#32;&#32;&#32;{
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(r_key)
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;it-&gt;second;
267 &#32;&#32;&#32;&#32;&#32;&#32;}
268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;insert_new_val(it,&#32;std::make_pair(r_key,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1acabe385268cd2f55faeece946a976195">mapped_type</link>()))-&gt;second;
269 <emphasis role="preprocessor">#else</emphasis>
270 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a61882b92867cad263ab80a73477477ad">insert</link>(r_key);
271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;traits_base::s_null_type;
272 <emphasis role="preprocessor">#endif</emphasis>
273 &#32;&#32;&#32;&#32;&#32;&#32;}
274 
275 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;std::pair&lt;point_iterator,&#32;bool&gt;
276 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a61882b92867cad263ab80a73477477ad">insert</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3713942e53a9eda3c15017ed10a8f40e">const_reference</link>&#32;r_value)
277 &#32;&#32;&#32;&#32;&#32;&#32;{
278 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
279 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(r_value);
280 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>&#32;it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a90d84c7b901b9d0780895cc6b695cbc5">lower_bound</link>(r_key);
281 
282 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>()&amp;&amp;&#32;&#32;!Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*it)))
283 &#32;&#32;&#32;&#32;&#32;&#32;{
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(r_key)
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_pair(it,&#32;<emphasis role="keyword">false</emphasis>);
287 &#32;&#32;&#32;&#32;&#32;&#32;}
288 
289 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_pair(insert_new_val(it,&#32;r_value),&#32;<emphasis role="keyword">true</emphasis>);
290 &#32;&#32;&#32;&#32;&#32;&#32;}
291 
292 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>
293 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a90d84c7b901b9d0780895cc6b695cbc5">lower_bound</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)
294 &#32;&#32;&#32;&#32;&#32;&#32;{
295 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1abd58508b6e8d148297d7c972b623946c">pointer</link>&#32;it&#32;=&#32;m_a_values;
296 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1abd58508b6e8d148297d7c972b623946c">pointer</link>&#32;e_it&#32;=&#32;m_a_values&#32;+&#32;m_size;
297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(it&#32;!=&#32;e_it)
298 &#32;&#32;&#32;&#32;&#32;&#32;{
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1abd58508b6e8d148297d7c972b623946c">pointer</link>&#32;mid_it&#32;=&#32;it&#32;+&#32;((e_it&#32;-&#32;it)&#32;&gt;&gt;&#32;1);
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cmp_fn::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*mid_it),&#32;r_key))
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;=&#32;++mid_it;
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e_it&#32;=&#32;mid_it;
304 &#32;&#32;&#32;&#32;&#32;&#32;}
305 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;it;
306 &#32;&#32;&#32;&#32;&#32;&#32;}
307 
308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a41b5122acf61bf8a4c4ad3b300c54324">point_const_iterator</link>
309 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9fac6126bf3c6f9f51c729f430053ce1">lower_bound</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
310 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;<emphasis role="keyword">&gt;</emphasis>(*this).lower_bound(r_key);&#32;}
311 
312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>
313 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a8c1b385c176869daf2d7605a72157d56">upper_bound</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)
314 &#32;&#32;&#32;&#32;&#32;&#32;{
315 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;pot_it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a90d84c7b901b9d0780895cc6b695cbc5">lower_bound</link>(r_key);
316 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pot_it&#32;!=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>()&#32;&amp;&amp;&#32;!Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*pot_it)))
317 &#32;&#32;&#32;&#32;&#32;&#32;{
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(r_key)
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;++pot_it;
320 &#32;&#32;&#32;&#32;&#32;&#32;}
321 
322 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(r_key)
323 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pot_it;
324 &#32;&#32;&#32;&#32;&#32;&#32;}
325 
326 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a41b5122acf61bf8a4c4ad3b300c54324">point_const_iterator</link>
327 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a22b22fa05013d76d77cfc8f287cd1a85">upper_bound</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
328 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this).upper_bound(r_key);&#32;}
329 
330 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9a27d6c7de9a465f83967c96d7f410f5">point_iterator</link>
331 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a21643d6b86e5ae7e6d5cca3bce6933f0">find</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)
332 &#32;&#32;&#32;&#32;&#32;&#32;{
333 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
334 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;pot_it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a90d84c7b901b9d0780895cc6b695cbc5">lower_bound</link>(r_key);
335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pot_it&#32;!=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>()&#32;&amp;&amp;&#32;!Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(*pot_it)))
336 &#32;&#32;&#32;&#32;&#32;&#32;{
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(r_key)
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pot_it;
339 &#32;&#32;&#32;&#32;&#32;&#32;}
340 
341 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(r_key)
342 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>();
343 &#32;&#32;&#32;&#32;&#32;&#32;}
344 
345 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a41b5122acf61bf8a4c4ad3b300c54324">point_const_iterator</link>
346 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a15934b61bc4aad2a953cf5e1174d3990">find</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
347 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this).find(r_key));&#32;}
348 
349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
350 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3025abeaefe7281fbc44dadb5b2ad4af">erase</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>);
351 
352 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
353 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>
354 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a7ea7c73b833afe55a1916959a85d0903">erase_if</link>(Pred);
355 
356 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>
357 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1aaf45a62be0e9356ccadd24444ebdc1e9">erase</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;it)
358 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;erase_imp&lt;iterator&gt;(it);&#32;}
359 
360 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
361 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a7586f9c3e03a68e5120817e77b1619f4">clear</link>();
362 
363 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
364 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a625fe35aa84284573ef1cea502acfa50">join</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
365 
366 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
367 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3c47519f52e3a3e36817614c7c1219f3">split</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a574c05243643e487b2f5403d2dfbfe06">key_const_reference</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
368 
369 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>
370 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1acbce8babfefef24b49ac986830bdf456">begin</link>()
371 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_a_values;&#32;}
372 
373 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a27d420e11bc3c05e1cc449cc4594d98f">const_iterator</link>
374 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a697476a013e417015d6d33f1fd87cd75">begin</link>()<emphasis role="keyword">&#32;const</emphasis>
375 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_a_values;&#32;}
376 
377 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>
378 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>()
379 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_end_it;&#32;}
380 
381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a27d420e11bc3c05e1cc449cc4594d98f">const_iterator</link>
382 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a921dad832d8608f199b9106737ba7811">end</link>()<emphasis role="keyword">&#32;const</emphasis>
383 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_end_it;&#32;}
384 
387 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a84522c6f0a47b0ae33cce876b3881fbb">node_const_iterator</link>
388 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a4ebc904447af7513952c8bc8097b91e4">node_begin</link>()&#32;<emphasis role="keyword">const</emphasis>;
389 
392 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>
393 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a01f986377d301c38751496e870a6d117">node_begin</link>();
394 
397 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a84522c6f0a47b0ae33cce876b3881fbb">node_const_iterator</link>
398 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a37229f4578dd578447eb8df59e66e234">node_end</link>()&#32;<emphasis role="keyword">const</emphasis>;
399 
402 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>
403 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1aa6b081bbdf34317ea20b3b1ca705dfab">node_end</link>();
404 
405 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
406 
407 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
408 &#32;&#32;&#32;&#32;&#32;&#32;update(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>,&#32;null_node_update_pointer);
409 
410 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Node_Update&gt;
411 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
412 &#32;&#32;&#32;&#32;&#32;&#32;update(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>,&#32;Node_Update*);
413 
414 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
415 &#32;&#32;&#32;&#32;&#32;&#32;reallocate_metadata(null_node_update_pointer,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>);
416 
417 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Node_Update_&gt;
418 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
419 &#32;&#32;&#32;&#32;&#32;&#32;reallocate_metadata(Node_Update_*,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>);
420 
421 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
422 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
423 &#32;&#32;&#32;&#32;&#32;&#32;copy_from_ordered_range(It,&#32;It);
424 
425 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
426 &#32;&#32;&#32;&#32;&#32;&#32;value_swap(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
427 
428 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
429 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
430 &#32;&#32;&#32;&#32;&#32;&#32;copy_from_ordered_range(It,&#32;It,&#32;It,&#32;It);
431 
432 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Ptr&gt;
433 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Ptr
434 &#32;&#32;&#32;&#32;&#32;&#32;mid_pointer(Ptr&#32;p_begin,&#32;Ptr&#32;p_end)
435 &#32;&#32;&#32;&#32;&#32;&#32;{
436 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(p_end&#32;&gt;=&#32;p_begin);
437 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(p_begin&#32;+&#32;(p_end&#32;-&#32;p_begin)&#32;/&#32;2);
438 &#32;&#32;&#32;&#32;&#32;&#32;}
439 
440 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>
441 &#32;&#32;&#32;&#32;&#32;&#32;insert_new_val(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;it,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a3713942e53a9eda3c15017ed10a8f40e">const_reference</link>&#32;r_value)
442 &#32;&#32;&#32;&#32;&#32;&#32;{
443 <emphasis role="preprocessor">#ifdef&#32;PB_DS_REGRESSION</emphasis>
444 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::group_adjustor&#32;adjust(m_size);
445 <emphasis role="preprocessor">#endif</emphasis>
446 
447 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(r_value))
448 
449 &#32;&#32;&#32;&#32;value_vector&#32;a_values&#32;=&#32;s_value_alloc.allocate(m_size&#32;+&#32;1);
450 
451 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;source_it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1acbce8babfefef24b49ac986830bdf456">begin</link>();
452 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;source_end_it&#32;=&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a04022f58fcd067821e82c93df2deaf9b">end</link>();
453 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;target_it&#32;=&#32;a_values;
454 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;ret_it;
455 
456 &#32;&#32;&#32;&#32;cond_dtor&lt;size_type&gt;&#32;cd(a_values,&#32;target_it,&#32;m_size&#32;+&#32;1);
457 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(source_it&#32;!=&#32;it)
458 &#32;&#32;&#32;&#32;&#32;&#32;{
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">const_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(target_it)))
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ab72cdf32c199de20b0e2d10d90724974">value_type</link>(*source_it++);
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++target_it;
462 &#32;&#32;&#32;&#32;&#32;&#32;}
463 
464 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">const_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(ret_it&#32;=&#32;target_it)))
465 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ab72cdf32c199de20b0e2d10d90724974">value_type</link>(r_value);
466 &#32;&#32;&#32;&#32;++target_it;
467 
468 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(source_it&#32;!=&#32;source_end_it)
469 &#32;&#32;&#32;&#32;&#32;&#32;{
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">const_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(target_it)))
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1ab72cdf32c199de20b0e2d10d90724974">value_type</link>(*source_it++);
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++target_it;
473 &#32;&#32;&#32;&#32;&#32;&#32;}
474 
475 &#32;&#32;&#32;&#32;reallocate_metadata((<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a59e45f9d2e5d821b261683524a4ce841">node_update</link>*)<emphasis role="keyword">this</emphasis>,&#32;m_size&#32;+&#32;1);
476 &#32;&#32;&#32;&#32;cd.set_no_action();
477 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_size&#32;!=&#32;0)
478 &#32;&#32;&#32;&#32;&#32;&#32;{
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cond_dtor&lt;size_type&gt;&#32;cd1(m_a_values,&#32;m_end_it,&#32;m_size);
480 &#32;&#32;&#32;&#32;&#32;&#32;}
481 
482 &#32;&#32;&#32;&#32;++m_size;
483 &#32;&#32;&#32;&#32;m_a_values&#32;=&#32;a_values;
484 &#32;&#32;&#32;&#32;m_end_it&#32;=&#32;m_a_values&#32;+&#32;m_size;
485 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(debug_base::insert_new(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(r_value)));
486 &#32;&#32;&#32;&#32;update(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a4ebc904447af7513952c8bc8097b91e4">node_begin</link>(),&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a59e45f9d2e5d821b261683524a4ce841">node_update</link>*&#32;)<emphasis role="keyword">this</emphasis>);
487 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
488 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;ret_it;
489 &#32;&#32;&#32;&#32;&#32;&#32;}
490 
491 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
492 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
493 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
494 
495 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
496 &#32;&#32;&#32;&#32;&#32;&#32;assert_iterators(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
497 <emphasis role="preprocessor">#endif</emphasis>
498 
499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
500 &#32;&#32;&#32;&#32;&#32;&#32;It
501 &#32;&#32;&#32;&#32;&#32;&#32;erase_imp(It);
502 
503 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a84522c6f0a47b0ae33cce876b3881fbb">node_const_iterator</link>
504 &#32;&#32;&#32;&#32;&#32;&#32;PB_DS_node_begin_imp()&#32;<emphasis role="keyword">const</emphasis>;
505 
506 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a84522c6f0a47b0ae33cce876b3881fbb">node_const_iterator</link>
507 &#32;&#32;&#32;&#32;&#32;&#32;PB_DS_node_end_imp()&#32;<emphasis role="keyword">const</emphasis>;
508 
509 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>
510 &#32;&#32;&#32;&#32;&#32;&#32;PB_DS_node_begin_imp();
511 
512 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a20bb109613b2f3ccf0525f6bfd894d92">node_iterator</link>
513 &#32;&#32;&#32;&#32;&#32;&#32;PB_DS_node_end_imp();
514 
515 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
516 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;value_allocator&#32;&#32;&#32;&#32;s_value_alloc;
517 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;metadata_allocator&#32;s_metadata_alloc;
518 
519 &#32;&#32;&#32;&#32;&#32;&#32;value_vector&#32;&#32;&#32;&#32;&#32;&#32;m_a_values;
520 &#32;&#32;&#32;&#32;&#32;&#32;metadata_pointer&#32;&#32;&#32;&#32;&#32;&#32;m_a_metadata;
521 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1a9ec613842a8623f624fad377e91a91ef">iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_end_it;
522 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1af217e120f3394d695c714bcfefa2fdff">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_size;
523 &#32;&#32;&#32;&#32;};
524 
525 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp&gt;</emphasis>
526 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp&gt;</emphasis>
527 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/debug_fn_imps.hpp&gt;</emphasis>
528 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/erase_fn_imps.hpp&gt;</emphasis>
529 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/insert_fn_imps.hpp&gt;</emphasis>
530 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/info_fn_imps.hpp&gt;</emphasis>
531 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp&gt;</emphasis>
532 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/bin_search_tree_/policy_access_fn_imps.hpp&gt;</emphasis>
533 
534 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
535 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
536 <emphasis role="preprocessor">#undef&#32;PB_DS_OV_TREE_NAME</emphasis>
537 <emphasis role="preprocessor">#undef&#32;PB_DS_OV_TREE_TRAITS_BASE</emphasis>
538 <emphasis role="preprocessor">#undef&#32;PB_DS_DEBUG_MAP_BASE_C_DEC</emphasis>
539 <emphasis role="preprocessor">#ifdef&#32;PB_DS_TREE_TRACE</emphasis>
540 <emphasis role="preprocessor">#undef&#32;PB_DS_TREE_TRACE_BASE_C_DEC</emphasis>
541 <emphasis role="preprocessor">#endif</emphasis>
542 <emphasis role="preprocessor">#undef&#32;PB_DS_CONST_NODE_ITERATOR_NAME</emphasis>
543 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
544 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
</programlisting></section>
