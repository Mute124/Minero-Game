<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__quaternion" xml:lang="en-US">
<title>GLM_GTX_quaternion</title>
<indexterm><primary>GLM_GTX_quaternion</primary></indexterm>
Collaboration diagram for GLM_GTX_quaternion:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1ga96a6304e423f605c2dedd5b09d50e382">glm::quat_identity</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__quaternion_1ga2d70720567450b23275dd5c6d6394b6e">glm::cross</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__quaternion_1ga90bb70a9dee5f86e87b9981a1888cc25">glm::cross</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1ga77f8e42a93c02b56d5dd6f7ca2c904bd">glm::squad</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q1, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q2, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;s1, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;s2, T const &amp;h)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1ga674f3a481bf37d397e81787c5d4d873f">glm::intermediate</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;prev, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;curr, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;next)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__quaternion_1ga1dabfe5f7c5bb7e30de1c5521fc61d7a">glm::rotate</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; <link linkend="_group__gtx__quaternion_1ga70e1d9e394aa51c357e238a4db0ab0e5">glm::rotate</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q, <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__gtx__quaternion_1ga321953c1b2e7befe6f5dcfddbfc6b76b">glm::extractRealComponent</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__quaternion_1ga49a9dae041787fb53b0ca831f54c2298">glm::toMat3</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__quaternion_1ga71e02805846949198c2c572797a98fb2">glm::toMat4</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1ga3248e751da3c09620b1e2a7db05ea9e4">glm::toQuat</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1ga5e2bd74c7ac83f6bcf4284aa88bc2f48">glm::toQuat</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1gaa67d8a157c0c4df05354aafd2e40aa72">glm::shortMix</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1ga43a95b70cd08ed3471e09d6c117e3464">glm::fastMix</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17">glm::rotation</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;orig, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;dest)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> T <link linkend="_group__gtx__quaternion_1ga08eb643306c5ba9211a81b322bc89543">glm::length2</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/quaternion.hpp&gt; to use the features of this extension.</para>

<para>Extented quaternion types and functions </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__quaternion_1ga2d70720567450b23275dd5c6d6394b6e"/><section>
    <title>cross()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>cross</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>cross</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::cross (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Compute a cross product between a quaternion and a vector.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga90bb70a9dee5f86e87b9981a1888cc25"/><section>
    <title>cross()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>cross</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>cross</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::cross (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Compute a cross product between a vector and a quaternion.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga90bb70a9dee5f86e87b9981a1888cc25_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga321953c1b2e7befe6f5dcfddbfc6b76b"/><section>
    <title>extractRealComponent()</title>
<indexterm><primary>extractRealComponent</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>extractRealComponent</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::extractRealComponent (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Extract the real component of a quaternion.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga43a95b70cd08ed3471e09d6c117e3464"/><section>
    <title>fastMix()</title>
<indexterm><primary>fastMix</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>fastMix</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::fastMix (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; y, T const &amp; a)</computeroutput></para>
<para>Quaternion normalized linear interpolation.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga43a95b70cd08ed3471e09d6c117e3464_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga43a95b70cd08ed3471e09d6c117e3464_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga674f3a481bf37d397e81787c5d4d873f"/><section>
    <title>intermediate()</title>
<indexterm><primary>intermediate</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>intermediate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::intermediate (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; prev, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; curr, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; next)</computeroutput></para>
<para>Returns an intermediate control point for squad interpolation.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga674f3a481bf37d397e81787c5d4d873f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga08eb643306c5ba9211a81b322bc89543"/><section>
    <title>length2()</title>
<indexterm><primary>length2</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>length2</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> T glm::length2 (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Returns the squared length of x.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga96a6304e423f605c2dedd5b09d50e382"/><section>
    <title>quat_identity()</title>
<indexterm><primary>quat_identity</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>quat_identity</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::quat_identity ( )</computeroutput></para>
<para>Create an identity quaternion.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga1dabfe5f7c5bb7e30de1c5521fc61d7a"/><section>
    <title>rotate()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>rotate</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::rotate (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Returns quarternion square root.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> Rotates <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link> 3 <link linkend="_group__gtx__range_1gaf2831875a8cee7cc000abadba2aa1265">components</link> vector by <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link> quaternion.</para>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga70e1d9e394aa51c357e238a4db0ab0e5"/><section>
    <title>rotate()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>rotate</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; glm::rotate (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q, <link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Rotates a 4 components vector by a quaternion.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17"/><section>
    <title>rotation()</title>
<indexterm><primary>rotation</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>rotation</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::rotation (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; orig, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; dest)</computeroutput></para>
<para>Compute the rotation between two vectors. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>orig</entry><entry>
<para>vector, needs to be normalized </para>
</entry>
                            </row>
                            <row>
<entry>dest</entry><entry>
<para>vector, needs to be normalized</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_gadbb992b52cef49dd3b11966e34260d17_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_gadbb992b52cef49dd3b11966e34260d17_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1gaa67d8a157c0c4df05354aafd2e40aa72"/><section>
    <title>shortMix()</title>
<indexterm><primary>shortMix</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>shortMix</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::shortMix (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; y, T const &amp; a)</computeroutput></para>
<para>Quaternion interpolation using the rotation short path.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_gaa67d8a157c0c4df05354aafd2e40aa72_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga77f8e42a93c02b56d5dd6f7ca2c904bd"/><section>
    <title>squad()</title>
<indexterm><primary>squad</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>squad</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::squad (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q1, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q2, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; s1, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; s2, T const &amp; h)</computeroutput></para>
<para>Compute a point on a path according squad equation. q1 and q2 are control points; s1 and s2 are intermediate control points.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga77f8e42a93c02b56d5dd6f7ca2c904bd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga49a9dae041787fb53b0ca831f54c2298"/><section>
    <title>toMat3()</title>
<indexterm><primary>toMat3</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>toMat3</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::toMat3 (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x)</computeroutput></para>
<para>Converts a quaternion to a 3 * 3 matrix.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga49a9dae041787fb53b0ca831f54c2298_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga71e02805846949198c2c572797a98fb2"/><section>
    <title>toMat4()</title>
<indexterm><primary>toMat4</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>toMat4</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::toMat4 (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x)</computeroutput></para>
<para>Converts a quaternion to a 4 * 4 matrix.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga71e02805846949198c2c572797a98fb2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga3248e751da3c09620b1e2a7db05ea9e4"/><section>
    <title>toQuat()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>toQuat</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>toQuat</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::toQuat (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Converts a 3 * 3 matrix to a quaternion.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga3248e751da3c09620b1e2a7db05ea9e4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__quaternion_1ga5e2bd74c7ac83f6bcf4284aa88bc2f48"/><section>
    <title>toQuat()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>toQuat</primary><secondary>GLM_GTX_quaternion</secondary></indexterm>
<indexterm><primary>GLM_GTX_quaternion</primary><secondary>toQuat</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::toQuat (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; x)</computeroutput></para>
<para>Converts a 4 * 4 matrix to a quaternion.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__quaternion">GLM_GTX_quaternion</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__quaternion_ga5e2bd74c7ac83f6bcf4284aa88bc2f48_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
