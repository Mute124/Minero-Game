<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2vstring__util_8h_source" xml:lang="en-US">
<title>vstring_util.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/vstring_util.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Versatile&#32;string&#32;utility&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_VSTRING_UTIL_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_VSTRING_UTIL_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;ext/vstring_fwd.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_function.h&gt;</emphasis>&#32;&#32;<emphasis role="comment">//&#32;For&#32;less</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;bits/functexcept.h&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;bits/localefwd.h&gt;</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;bits/ostream_insert.h&gt;</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_iterator.h&gt;</emphasis>
42 <emphasis role="preprocessor">#include&#32;&lt;ext/numeric_traits.h&gt;</emphasis>
43 <emphasis role="preprocessor">#include&#32;&lt;ext/alloc_traits.h&gt;</emphasis>
44 <emphasis role="preprocessor">#include&#32;&lt;bits/move.h&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;bits/range_access.h&gt;</emphasis>
46 
47 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
48 {
49 _GLIBCXX_BEGIN_NAMESPACE_VERSION
50 
51 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__vstring_utility
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__alloc_traits&lt;_Alloc&gt;::template&#32;rebind&lt;_CharT&gt;::other
55 &#32;&#32;&#32;&#32;_CharT_alloc_type;
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__alloc_traits&lt;_CharT_alloc_type&gt;&#32;_CharT_alloc_traits;
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Traits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type;
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits::char_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_type;
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_type::size_type&#32;&#32;&#32;&#32;&#32;size_type;
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_type::difference_type&#32;&#32;&#32;difference_type;
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_traits::pointer&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>;
63 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_traits::const_pointer&#32;&#32;&#32;const_pointer;
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;__sso_string.</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__gnu_cxx::
67 &#32;&#32;&#32;&#32;&#32;&#32;__normal_iterator&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>,&#32;__gnu_cxx::
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sso_string_base&gt;&#32;&gt;
70 &#32;&#32;&#32;&#32;__sso_iterator;
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__gnu_cxx::
72 &#32;&#32;&#32;&#32;&#32;&#32;__normal_iterator&lt;const_pointer,&#32;__gnu_cxx::
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sso_string_base&gt;&#32;&gt;
75 &#32;&#32;&#32;&#32;__const_sso_iterator;
76 
77 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;__rc_string.</emphasis>
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__gnu_cxx::
79 &#32;&#32;&#32;&#32;&#32;&#32;__normal_iterator&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>,&#32;__gnu_cxx::
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rc_string_base&gt;&#32;&gt;
82 &#32;&#32;&#32;&#32;__rc_iterator;
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__gnu_cxx::
84 &#32;&#32;&#32;&#32;&#32;&#32;__normal_iterator&lt;const_pointer,&#32;__gnu_cxx::
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rc_string_base&gt;&#32;&gt;
87 &#32;&#32;&#32;&#32;__const_rc_iterator;
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NB:&#32;&#32;When&#32;the&#32;allocator&#32;is&#32;empty,&#32;deriving&#32;from&#32;it&#32;saves&#32;space</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(http://www.cantrip.org/emptyopt.html).</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Alloc1&gt;
92 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Alloc_hider
93 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;_Alloc1
94 &#32;&#32;&#32;&#32;{
95 &#32;&#32;&#32;&#32;&#32;&#32;_Alloc_hider(_CharT*&#32;__ptr)
96 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Alloc1(),&#32;_M_p(__ptr)&#32;{&#32;}
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;_Alloc_hider(<emphasis role="keyword">const</emphasis>&#32;_Alloc1&amp;&#32;__a,&#32;_CharT*&#32;__ptr)
99 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Alloc1(__a),&#32;_M_p(__ptr)&#32;{&#32;}
100 
101 &#32;&#32;&#32;&#32;&#32;&#32;_CharT*&#32;&#32;_M_p;&#32;<emphasis role="comment">//&#32;The&#32;actual&#32;data.</emphasis>
102 &#32;&#32;&#32;&#32;};
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;__n&#32;=&#32;1&#32;way&#32;faster&#32;than&#32;the&#32;general&#32;multichar</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;traits_type::copy/move/assign.</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy(_CharT*&#32;__d,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
108 &#32;&#32;&#32;&#32;&#32;&#32;{
109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;==&#32;1)
110 &#32;&#32;&#32;&#32;&#32;&#32;traits_type::assign(*__d,&#32;*__s);
111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;traits_type::copy(__d,&#32;__s,&#32;__n);
113 &#32;&#32;&#32;&#32;&#32;&#32;}
114 
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;_S_move(_CharT*&#32;__d,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
117 &#32;&#32;&#32;&#32;&#32;&#32;{
118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;==&#32;1)
119 &#32;&#32;&#32;&#32;&#32;&#32;traits_type::assign(*__d,&#32;*__s);
120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
121 &#32;&#32;&#32;&#32;&#32;&#32;traits_type::move(__d,&#32;__s,&#32;__n);
122 &#32;&#32;&#32;&#32;&#32;&#32;}
123 
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
125 &#32;&#32;&#32;&#32;&#32;&#32;_S_assign(_CharT*&#32;__d,&#32;size_type&#32;__n,&#32;_CharT&#32;__c)
126 &#32;&#32;&#32;&#32;&#32;&#32;{
127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;==&#32;1)
128 &#32;&#32;&#32;&#32;&#32;&#32;traits_type::assign(*__d,&#32;__c);
129 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
130 &#32;&#32;&#32;&#32;&#32;&#32;traits_type::assign(__d,&#32;__n,&#32;__c);
131 &#32;&#32;&#32;&#32;&#32;&#32;}
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_S_copy_chars&#32;is&#32;a&#32;separate&#32;template&#32;to&#32;permit&#32;specialization</emphasis>
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;optimize&#32;for&#32;the&#32;common&#32;case&#32;of&#32;pointers&#32;as&#32;iterators.</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
136 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
137 &#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;_Iterator&#32;__k1,&#32;_Iterator&#32;__k2)
138 &#32;&#32;&#32;&#32;{
139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__k1&#32;!=&#32;__k2;&#32;++__k1,&#32;++__p)
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type::assign(*__p,&#32;*__k1);&#32;<emphasis role="comment">//&#32;These&#32;types&#32;are&#32;off.</emphasis>
141 &#32;&#32;&#32;&#32;}
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
144 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;__sso_iterator&#32;__k1,&#32;__sso_iterator&#32;__k2)
145 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_S_copy_chars(__p,&#32;__k1.base(),&#32;__k2.base());&#32;}
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;__const_sso_iterator&#32;__k1,
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__const_sso_iterator&#32;__k2)
150 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_S_copy_chars(__p,&#32;__k1.base(),&#32;__k2.base());&#32;}
151 
152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
153 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;__rc_iterator&#32;__k1,&#32;__rc_iterator&#32;__k2)
154 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_S_copy_chars(__p,&#32;__k1.base(),&#32;__k2.base());&#32;}
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;__const_rc_iterator&#32;__k1,
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__const_rc_iterator&#32;__k2)
159 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_S_copy_chars(__p,&#32;__k1.base(),&#32;__k2.base());&#32;}
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;_CharT*&#32;__k1,&#32;_CharT*&#32;__k2)
163 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_S_copy(__p,&#32;__k1,&#32;__k2&#32;-&#32;__k1);&#32;}
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;_S_copy_chars(_CharT*&#32;__p,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__k1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__k2)
167 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;_S_copy(__p,&#32;__k1,&#32;__k2&#32;-&#32;__k1);&#32;}
168 
169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
170 &#32;&#32;&#32;&#32;&#32;&#32;_S_compare(size_type&#32;__n1,&#32;size_type&#32;__n2)
171 &#32;&#32;&#32;&#32;&#32;&#32;{
172 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;difference_type&#32;__d&#32;=&#32;difference_type(__n1&#32;-&#32;__n2);
173 
174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__d&#32;&gt;&#32;__numeric_traits_integer&lt;int&gt;::__max)
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__numeric_traits_integer&lt;int&gt;::__max;
176 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__d&#32;&lt;&#32;__numeric_traits_integer&lt;int&gt;::__min)
177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__numeric_traits_integer&lt;int&gt;::__min;
178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;int(__d);
180 &#32;&#32;&#32;&#32;&#32;&#32;}
181 &#32;&#32;&#32;&#32;};
182 
183 _GLIBCXX_END_NAMESPACE_VERSION
184 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
185 
186 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_VSTRING_UTIL_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
