<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2rc__binomial__heap___2rc_8hpp_source" xml:lang="en-US">
<title>rc.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_RC_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_RC_HPP</emphasis>
43 
44 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
45 {
46 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
47 &#32;&#32;{
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>rc
51 &#32;&#32;&#32;&#32;{
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
53 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocator_type;
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;allocator_type::size_type&#32;&#32;&#32;&#32;&#32;size_type;
55 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Node&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;node;
56 
57 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;rebind_traits&lt;_Alloc,&#32;node&gt;::pointer&#32;node_pointer;
58 
59 
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;rebind_traits&lt;_Alloc,&#32;node_pointer&gt;::pointer
61 &#32;&#32;&#32;&#32;entry_pointer;
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;rebind_traits&lt;_Alloc,&#32;node_pointer&gt;::const_pointer
63 &#32;&#32;&#32;&#32;entry_const_pointer;
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
66 &#32;&#32;&#32;&#32;{
67 &#32;&#32;&#32;&#32;&#32;&#32;max_entries&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(size_type)&#32;&lt;&lt;&#32;3
68 &#32;&#32;&#32;&#32;};
69 
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;node_pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a3c59784ebb8eb16281b91a37a29818bc">entry</link>;
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;entry_const_pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ae873333858de4dec2d485693a54f0267">const_iterator</link>;
73 
74 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1af1c320fb2b636c33a144a88443637693">rc</link>();
75 
76 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a8a38d0b3717b50a085f76cadb9cefb78">rc</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc">rc</link>&amp;);
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1aee4cdd95ff2cfe01968237d57294a190">swap</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1rc">rc</link>&amp;);
80 
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a70509c384a5b3692554d6c7f53de5061">push</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a3c59784ebb8eb16281b91a37a29818bc">entry</link>);
83 
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;node_pointer
85 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a9930a61a1cde0ca4170b66954e87ed95">top</link>()&#32;<emphasis role="keyword">const</emphasis>;
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ad5a4fb0e44f528ff8bbb3d1a87eb4880">pop</link>();
89 
90 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a36f9c004aa94a0ea3f91e15a102eb5e3">empty</link>()&#32;<emphasis role="keyword">const</emphasis>;
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;size_type
94 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1aa4d2e72302f63001eb5ea2346ab64fe6">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a2521b6cf45b02c88823117e7ad34e614">clear</link>();
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ae873333858de4dec2d485693a54f0267">const_iterator</link>
100 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ae5bf534ea23ccd4f71811f7d78adea72">begin</link>()&#32;<emphasis role="keyword">const</emphasis>;
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ae873333858de4dec2d485693a54f0267">const_iterator</link>
103 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ab3aa19abf09b57a34bfb5aadd59ddda4">end</link>()&#32;<emphasis role="keyword">const</emphasis>;
104 
105 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
108 <emphasis role="preprocessor">#endif</emphasis>
109 
110 <emphasis role="preprocessor">#ifdef&#32;PB_DS_RC_BINOMIAL_HEAP_TRACE_</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;trace()&#32;<emphasis role="keyword">const</emphasis>;
113 <emphasis role="preprocessor">#endif</emphasis>
114 
115 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
116 &#32;&#32;&#32;&#32;&#32;&#32;node_pointer&#32;&#32;m_a_entries[max_entries];
117 &#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;&#32;&#32;&#32;&#32;m_over_top;
118 &#32;&#32;&#32;&#32;};
119 
120 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
121 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1af1c320fb2b636c33a144a88443637693">rc&lt;_Node, _Alloc&gt;::</link>
122 <link linkend="_class____gnu__pbds_1_1detail_1_1rc_1af1c320fb2b636c33a144a88443637693">    rc</link>()&#32;:&#32;m_over_top(0)
123 &#32;&#32;&#32;&#32;{&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
124 
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
126 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1af1c320fb2b636c33a144a88443637693">rc&lt;_Node, _Alloc&gt;::</link>
127 <link linkend="_class____gnu__pbds_1_1detail_1_1rc_1af1c320fb2b636c33a144a88443637693">    rc</link>(<emphasis role="keyword">const</emphasis>&#32;rc&lt;_Node,&#32;_Alloc&gt;&amp;&#32;other)&#32;:&#32;m_over_top(0)
128 &#32;&#32;&#32;&#32;{&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
129 
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
132 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1aee4cdd95ff2cfe01968237d57294a190">rc&lt;_Node, _Alloc&gt;::</link>
133 <link linkend="_class____gnu__pbds_1_1detail_1_1rc_1aee4cdd95ff2cfe01968237d57294a190">    swap</link>(rc&lt;_Node,&#32;_Alloc&gt;&amp;&#32;other)
134 &#32;&#32;&#32;&#32;{
135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
136 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;const&#32;size_type&#32;over_top&#32;=&#32;<link linkend="_namespacestd">std</link>::max(m_over_top,&#32;other.m_over_top);
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;for&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;over_top;&#32;++i)
141 &#32;&#32;&#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_a_entries[i],&#32;other.m_a_entries[i]);
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_over_top,&#32;other.m_over_top);
144 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
146 &#32;&#32;&#32;&#32;&#32;}
147 
148 &#32;&#32;&#32;&#32;template&lt;typename&#32;_Node,&#32;typename&#32;_Alloc&gt;
149 &#32;&#32;&#32;&#32;inline&#32;<emphasis role="keywordtype">void</emphasis>
150 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
151 &#32;&#32;&#32;&#32;push(entry&#32;p_nd)
152 &#32;&#32;&#32;&#32;{
153 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
154 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_over_top&#32;&lt;&#32;max_entries);
155 &#32;&#32;&#32;&#32;&#32;&#32;m_a_entries[m_over_top++]&#32;=&#32;p_nd;
156 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
157 &#32;&#32;&#32;&#32;}
158 
159 &#32;&#32;&#32;&#32;template&lt;typename&#32;_Node,&#32;typename&#32;_Alloc&gt;
160 &#32;&#32;&#32;&#32;inline&#32;<emphasis role="keywordtype">void</emphasis>
161 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
162 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1af90aa2f32f9c39ddd552c1d27f65dbaf">pop</link>()
163 &#32;&#32;&#32;&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
165 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(!empty());
166 &#32;&#32;&#32;&#32;&#32;&#32;--m_over_top;
167 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
168 &#32;&#32;&#32;&#32;}
169 
170 &#32;&#32;&#32;&#32;template&lt;typename&#32;_Node,&#32;typename&#32;_Alloc&gt;
171 &#32;&#32;&#32;&#32;inline&#32;typename&#32;rc&lt;_Node,&#32;_Alloc&gt;::node_pointer
172 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
173 &#32;&#32;&#32;&#32;top()<emphasis role="keyword">&#32;const</emphasis>
174 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
175 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
176 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(!empty());
177 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;*(m_a_entries&#32;+&#32;m_over_top&#32;-&#32;1);
178 &#32;&#32;&#32;&#32;}
179 
180 &#32;&#32;&#32;&#32;template&lt;typename&#32;_Node,&#32;typename&#32;_Alloc&gt;
181 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;inline&#32;<emphasis role="keywordtype">bool</emphasis>
182 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
183 &#32;&#32;&#32;&#32;empty()<emphasis role="keyword">&#32;const</emphasis>
184 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
185 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
186 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;m_over_top&#32;==&#32;0;
187 &#32;&#32;&#32;&#32;}
188 
189 &#32;&#32;&#32;&#32;template&lt;typename&#32;_Node,&#32;typename&#32;_Alloc&gt;
190 &#32;&#32;&#32;&#32;inline&#32;typename&#32;rc&lt;_Node,&#32;_Alloc&gt;::size_type
191 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
192 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()<emphasis role="keyword">&#32;const</emphasis>
193 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_over_top;&#32;}
194 
195 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
196 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
197 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a2521b6cf45b02c88823117e7ad34e614">rc&lt;_Node, _Alloc&gt;::</link>
198 <link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a2521b6cf45b02c88823117e7ad34e614">    clear</link>()
199 &#32;&#32;&#32;&#32;{
200 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
201 &#32;&#32;&#32;&#32;&#32;&#32;m_over_top&#32;=&#32;0;
202 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
203 &#32;&#32;&#32;&#32;}
204 
205 &#32;&#32;&#32;&#32;template&lt;typename&#32;_Node,&#32;typename&#32;_Alloc&gt;
206 &#32;&#32;&#32;&#32;const&#32;typename&#32;rc&lt;_Node,&#32;_Alloc&gt;::const_iterator
207 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
208 &#32;&#32;&#32;&#32;begin()<emphasis role="keyword">&#32;const</emphasis>
209 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&amp;&#32;m_a_entries[0];&#32;}
210 
211 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1ae873333858de4dec2d485693a54f0267">rc&lt;_Node, _Alloc&gt;::const_iterator</link>
213 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a37be14bd80577df334ecb0e723af75c5">rc&lt;_Node, _Alloc&gt;::</link>
214 <link linkend="_class____gnu__pbds_1_1detail_1_1rc_1a37be14bd80577df334ecb0e723af75c5">    end</link>()<emphasis role="keyword">&#32;const</emphasis>
215 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&amp;&#32;m_a_entries[m_over_top];&#32;}
216 
217 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
218 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
219 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
220 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
221 &#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
222 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_over_top&#32;&lt;&#32;max_entries);&#32;}
223 <emphasis role="preprocessor">#endif</emphasis>
224 
225 <emphasis role="preprocessor">#ifdef&#32;PB_DS_RC_BINOMIAL_HEAP_TRACE_</emphasis>
226 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Node,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
227 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
228 &#32;&#32;&#32;&#32;rc&lt;_Node,&#32;_Alloc&gt;::
229 &#32;&#32;&#32;&#32;trace()<emphasis role="keyword">&#32;const</emphasis>
230 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
231 &#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;rc&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_over_top;&#32;++i)
233 &#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;m_a_entries[i]&#32;&lt;&lt;&#32;std::endl;
234 &#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
235 &#32;&#32;&#32;&#32;}
236 <emphasis role="preprocessor">#endif</emphasis>
237 }&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
238 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
239 
240 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
