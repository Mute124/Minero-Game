<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2rtext_8c" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/rtext.c File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/rtext.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;raylib.h&quot;<?linebreak?>#include &quot;config.h&quot;<?linebreak?>#include &quot;utils.h&quot;<?linebreak?>#include &quot;rlgl.h&quot;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &lt;stdarg.h&gt;<?linebreak?>#include &lt;ctype.h&gt;<?linebreak?>#include &quot;external/stb_rect_pack.h&quot;<?linebreak?>#include &quot;external/stb_truetype.h&quot;<?linebreak?></programlisting>Include dependency graph for rtext.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a0791e69f0dcd58efa795dd50eb8c6cd0">STB_RECT_PACK_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1adb252cc9576591994fdf2f89baddc630">STBTT_STATIC</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1afaa2f2d0d9d6726cfae6da070e736347">STB_TRUETYPE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1aec8472dadb8a58d8e40f0aed52e5d51c">MAX_TEXT_UNICODE_CHARS</link>&#160;&#160;&#160;512</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ab53403b709717305a8d0a8e692a70de6">BIT_CHECK</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>) &amp; (1<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link> &lt;&lt; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ad7d1ff65b0269367b224d8091d9ccbe2">FONT_TTF_DEFAULT_SIZE</link>&#160;&#160;&#160;32</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1aa9885fc038fe5f964dded3d3972df08a">FONT_TTF_DEFAULT_NUMCHARS</link>&#160;&#160;&#160;95</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1aabe89da05a3ec78a4116571bdd7ba5ea">FONT_TTF_DEFAULT_FIRST_CHAR</link>&#160;&#160;&#160;32</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1af1f50ef954ac9db84ee020d435f0b8e9">FONT_TTF_DEFAULT_CHARS_PADDING</link>&#160;&#160;&#160;4</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a6d6e13269004e56e7a6d85dc9b61c0f7">MAX_GLYPHS_FROM_IMAGE</link>&#160;&#160;&#160;256</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a5b769e391cd935d795ce1cf44c2315d4">COLOR_EQUAL</link>(col1,  col2)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col1.r</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col2.r</link>) &amp;&amp; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col1.g</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col2.g</link>) &amp;&amp; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col1.b</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col2.b</link>) &amp;&amp; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col1.a</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col2.a</link>))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a6a64f923680f9d315e6df0297f6dada0">FONT_SDF_CHAR_PADDING</link>&#160;&#160;&#160;4</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a9353444320a3d00f0ce6bc99ebb1d332">FONT_SDF_ON_EDGE_VALUE</link>&#160;&#160;&#160;128</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a9542f768035871dd78905b43d177c2c0">FONT_SDF_PIXEL_DIST_SCALE</link>&#160;&#160;&#160;64.0f</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a919b4cee5ab8e4edfa3dab9a6c878655">FONT_BITMAP_ALPHA_THRESHOLD</link>&#160;&#160;&#160;80</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1aa42912725e2d76836ffeaa3d4062abff">TEXT_BYTES_PER_LINE</link>&#160;&#160;&#160;20</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a96a9bea2a313a22b13f7b596cd48b2e0">MAX_FONT_DATA_SIZE</link>&#160;&#160;&#160;1024*1024</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a27296e565e20f3389af024b1f26dfde3">SUPPORT_COMPRESSED_FONT_ATLAS</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ae95daa8081861e6b8857cec240b5aa7a">GLYPH_NOTFOUND_CHAR_FALLBACK</link>&#160;&#160;&#160;63</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a96deb98456f04a28934ab923e619647e">SUPPORT_UNORDERED_CHARSET</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ae7d1ecc7432b1a99c91be68177bafccd">MAX_TEXTFORMAT_BUFFERS</link>&#160;&#160;&#160;4</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ad4d796b98c583d49e83adabd74a63bf6">MAX_BUFFER_SIZE</link>&#160;&#160;&#160;256</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a8484fb93b071180266b4e0a4c23fc296">LoadFontDefault</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a24ffb11e46b52a9706555b02ccbc19da">UnloadFontDefault</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ab0c27a81dd37c596295654a82e201137">GetFontDefault</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a3af0b11c77b23684cd8c95127b39929c">LoadFont</link> (const char *fileName)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ab0d4d79244a953e7dff301fcf7862502">LoadFontEx</link> (const char *fileName, int fontSize, int *fontChars, int glyphCount)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a56705d5b2c3d2c7c9bbeda302142d948">LoadFontFromImage</link> (<link linkend="_struct_image">Image</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>, <link linkend="_struct_color">Color</link> key, int firstChar)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a158ba1fefe2e1baeb88c87d59648f97a">LoadFontFromMemory</link> (const char *fileType, const unsigned char *fileData, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>, int fontSize, int *fontChars, int glyphCount)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1aa6bb58339061c71bbe9e8e43ee6b8426">IsFontReady</link> (<link linkend="_struct_font">Font</link> font)</para>
</listitem>
            <listitem><para><link linkend="_struct_glyph_info">GlyphInfo</link> * <link linkend="__old_2_classes_2lib_2rtext_8c_1a24950140d316a4ba534345bc2747f645">LoadFontData</link> (const unsigned char *fileData, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>, int fontSize, int *fontChars, int glyphCount, int <link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_image">Image</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a2c777d92b9285df6dcc2fa5d707a74ed">GenImageFontAtlas</link> (const <link linkend="_struct_glyph_info">GlyphInfo</link> *chars, <link linkend="_struct_rectangle">Rectangle</link> **charRecs, int glyphCount, int fontSize, int padding, int packMethod)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ac322a99dde42a100e7cb80979c1bf9f8">UnloadFontData</link> (<link linkend="_struct_glyph_info">GlyphInfo</link> *glyphs, int glyphCount)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1abaf732c815ab45f012072256766574a4">UnloadFont</link> (<link linkend="_struct_font">Font</link> font)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1af6f490f2fbc5d5d489effd46d7b74961">ExportFontAsCode</link> (<link linkend="_struct_font">Font</link> font, const char *fileName)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a7ced13adb512f945c159aa3a7aa6175e">DrawFPS</link> (int posX, int posY)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ab75e0f9fe436edf4a3aa5abed4df28ca">DrawText</link> (const char *text, int posX, int posY, int fontSize, <link linkend="_struct_color">Color</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1afa48e7e0974c35abf9b50f04e62ed9e7">DrawTextEx</link> (<link linkend="_struct_font">Font</link> font, const char *text, <link linkend="_struct_vector2">Vector2</link> <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a7337783b45718ef25477f7881c78a67a">DrawTextPro</link> (<link linkend="_struct_font">Font</link> font, const char *text, <link linkend="_struct_vector2">Vector2</link> <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, <link linkend="_struct_vector2">Vector2</link> origin, float rotation, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1afa8124f9a9ca1b5749a0c2f5af66e115">DrawTextCodepoint</link> (<link linkend="_struct_font">Font</link> font, int codepoint, <link linkend="_struct_vector2">Vector2</link> <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, float fontSize, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a0cef33837c9a036a9ac969ef404e0d97">DrawTextCodepoints</link> (<link linkend="_struct_font">Font</link> font, const int *codepoints, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, <link linkend="_struct_vector2">Vector2</link> <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1a34469970dc39e965e5aab01140e2932f">MeasureText</link> (const char *text, int fontSize)</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2">Vector2</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a4ea62af28450b68a1c99c00a1fc562ca">MeasureTextEx</link> (<link linkend="_struct_font">Font</link> font, const char *text, float fontSize, float spacing)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1a37c1bca5f2d858bf4f0a75788cf537e0">GetGlyphIndex</link> (<link linkend="_struct_font">Font</link> font, int codepoint)</para>
</listitem>
            <listitem><para><link linkend="_struct_glyph_info">GlyphInfo</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ac59c366af1e313b5c2f31a36d3b04f26">GetGlyphInfo</link> (<link linkend="_struct_font">Font</link> font, int codepoint)</para>
</listitem>
            <listitem><para><link linkend="_struct_rectangle">Rectangle</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a686f96c5213a7965ab14b7c8784b267c">GetGlyphAtlasRec</link> (<link linkend="_struct_font">Font</link> font, int codepoint)</para>
</listitem>
            <listitem><para>unsigned int <link linkend="__old_2_classes_2lib_2rtext_8c_1a5ac8f1891934193dc88fd85f493c3a41">TextLength</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1ac3c593fd4b408dcf52d20d693e8976fc">TextFormat</link> (const char *text,...)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1a43640b85ae37b909b4cee50d40d9d534">TextToInteger</link> (const char *text)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1a2744f3dbfac87e50e85dad25eaacc4b0">TextCopy</link> (char *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>, const char *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a27de470afa89a9b701b0167644998d60">TextIsEqual</link> (const char *text1, const char *text2)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1aac6306c12128752bb0a04a9f2e0b399c">TextSubtext</link> (const char *text, int <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3c8469415bbc83dd1341af15c67f1cef">length</link>)</para>
</listitem>
            <listitem><para>char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a735836f8830f42ab79ba223c90968df8">TextReplace</link> (char *text, const char *replace, const char *by)</para>
</listitem>
            <listitem><para>char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a942e58dc390f0fc698844ba73533c05d">TextInsert</link> (const char *text, const char *insert, int <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a929ab4dbd523239258ed5f5b05e819e6">TextJoin</link> (const char **textList, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, const char *delimiter)</para>
</listitem>
            <listitem><para>const char ** <link linkend="__old_2_classes_2lib_2rtext_8c_1a0020744de71c89efe5ef9739827ffdc5">TextSplit</link> (const char *text, char delimiter, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a30b12f937ee26c5ff847d62250dc2d2c">TextAppend</link> (char *text, const char *append, int *<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1afd90fa13a2612689a6e0d9429ac4d33f">TextFindIndex</link> (const char *text, const char *<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1af9331ca6d77de0c76831f3318b6a12a5">TextToUpper</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a5ce035033f9eedfa204df83389dd9254">TextToLower</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a7882a03c379e5641064258f7d9a2fb23">TextToPascal</link> (const char *text)</para>
</listitem>
            <listitem><para>char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a045352ddf4447a25298f30fe36a29b55">LoadUTF8</link> (const int *codepoints, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3c8469415bbc83dd1341af15c67f1cef">length</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1ac4efdf78dc45dd0916bd2df941a5b00a">UnloadUTF8</link> (char *text)</para>
</listitem>
            <listitem><para>int * <link linkend="__old_2_classes_2lib_2rtext_8c_1a1c20fb8d30b44873a6728909ed5f6847">LoadCodepoints</link> (const char *text, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__old_2_classes_2lib_2rtext_8c_1a8d49c0aeaf739b41d3606c838262e919">UnloadCodepoints</link> (int *codepoints)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1aa6265afc6b18a91b6f6de875cdcd0c07">GetCodepointCount</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="__old_2_classes_2lib_2rtext_8c_1a7fe0b7ec386a2ebabdca8271ccbcc837">CodepointToUTF8</link> (int codepoint, int *utf8Size)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1ac9e671bd603d2ae1318d9d6522fddd1f">GetCodepoint</link> (const char *text, int *codepointSize)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1a502188494be285261d46b843b122c97a">GetCodepointNext</link> (const char *text, int *codepointSize)</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2rtext_8c_1a08f2568af01467e301d9a081af1a505b">GetCodepointPrevious</link> (const char *text, int *codepointSize)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ab53403b709717305a8d0a8e692a70de6"/><section>
    <title>BIT_CHECK</title>
<indexterm><primary>BIT_CHECK</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>BIT_CHECK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> BIT_CHECK( <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>) &amp; (1<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link> &lt;&lt; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)))</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a5b769e391cd935d795ce1cf44c2315d4"/><section>
    <title>COLOR_EQUAL</title>
<indexterm><primary>COLOR_EQUAL</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>COLOR_EQUAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> COLOR_EQUAL( col1,  col2)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col1.r</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col2.r</link>) &amp;&amp; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col1.g</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col2.g</link>) &amp;&amp; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col1.b</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col2.b</link>) &amp;&amp; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col1.a</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col2.a</link>))</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a919b4cee5ab8e4edfa3dab9a6c878655"/><section>
    <title>FONT_BITMAP_ALPHA_THRESHOLD</title>
<indexterm><primary>FONT_BITMAP_ALPHA_THRESHOLD</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_BITMAP_ALPHA_THRESHOLD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_BITMAP_ALPHA_THRESHOLD&#160;&#160;&#160;80</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a6a64f923680f9d315e6df0297f6dada0"/><section>
    <title>FONT_SDF_CHAR_PADDING</title>
<indexterm><primary>FONT_SDF_CHAR_PADDING</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_SDF_CHAR_PADDING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_SDF_CHAR_PADDING&#160;&#160;&#160;4</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a9353444320a3d00f0ce6bc99ebb1d332"/><section>
    <title>FONT_SDF_ON_EDGE_VALUE</title>
<indexterm><primary>FONT_SDF_ON_EDGE_VALUE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_SDF_ON_EDGE_VALUE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_SDF_ON_EDGE_VALUE&#160;&#160;&#160;128</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a9542f768035871dd78905b43d177c2c0"/><section>
    <title>FONT_SDF_PIXEL_DIST_SCALE</title>
<indexterm><primary>FONT_SDF_PIXEL_DIST_SCALE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_SDF_PIXEL_DIST_SCALE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_SDF_PIXEL_DIST_SCALE&#160;&#160;&#160;64.0f</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1af1f50ef954ac9db84ee020d435f0b8e9"/><section>
    <title>FONT_TTF_DEFAULT_CHARS_PADDING</title>
<indexterm><primary>FONT_TTF_DEFAULT_CHARS_PADDING</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_TTF_DEFAULT_CHARS_PADDING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_TTF_DEFAULT_CHARS_PADDING&#160;&#160;&#160;4</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aabe89da05a3ec78a4116571bdd7ba5ea"/><section>
    <title>FONT_TTF_DEFAULT_FIRST_CHAR</title>
<indexterm><primary>FONT_TTF_DEFAULT_FIRST_CHAR</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_TTF_DEFAULT_FIRST_CHAR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_TTF_DEFAULT_FIRST_CHAR&#160;&#160;&#160;32</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aa9885fc038fe5f964dded3d3972df08a"/><section>
    <title>FONT_TTF_DEFAULT_NUMCHARS</title>
<indexterm><primary>FONT_TTF_DEFAULT_NUMCHARS</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_TTF_DEFAULT_NUMCHARS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_TTF_DEFAULT_NUMCHARS&#160;&#160;&#160;95</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ad7d1ff65b0269367b224d8091d9ccbe2"/><section>
    <title>FONT_TTF_DEFAULT_SIZE</title>
<indexterm><primary>FONT_TTF_DEFAULT_SIZE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>FONT_TTF_DEFAULT_SIZE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> FONT_TTF_DEFAULT_SIZE&#160;&#160;&#160;32</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ae95daa8081861e6b8857cec240b5aa7a"/><section>
    <title>GLYPH_NOTFOUND_CHAR_FALLBACK</title>
<indexterm><primary>GLYPH_NOTFOUND_CHAR_FALLBACK</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GLYPH_NOTFOUND_CHAR_FALLBACK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> GLYPH_NOTFOUND_CHAR_FALLBACK&#160;&#160;&#160;63</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ad4d796b98c583d49e83adabd74a63bf6"/><section>
    <title>MAX_BUFFER_SIZE</title>
<indexterm><primary>MAX_BUFFER_SIZE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MAX_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_BUFFER_SIZE&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a96a9bea2a313a22b13f7b596cd48b2e0"/><section>
    <title>MAX_FONT_DATA_SIZE</title>
<indexterm><primary>MAX_FONT_DATA_SIZE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MAX_FONT_DATA_SIZE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_FONT_DATA_SIZE&#160;&#160;&#160;1024*1024</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a6d6e13269004e56e7a6d85dc9b61c0f7"/><section>
    <title>MAX_GLYPHS_FROM_IMAGE</title>
<indexterm><primary>MAX_GLYPHS_FROM_IMAGE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MAX_GLYPHS_FROM_IMAGE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_GLYPHS_FROM_IMAGE&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aec8472dadb8a58d8e40f0aed52e5d51c"/><section>
    <title>MAX_TEXT_UNICODE_CHARS</title>
<indexterm><primary>MAX_TEXT_UNICODE_CHARS</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MAX_TEXT_UNICODE_CHARS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_TEXT_UNICODE_CHARS&#160;&#160;&#160;512</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ae7d1ecc7432b1a99c91be68177bafccd"/><section>
    <title>MAX_TEXTFORMAT_BUFFERS</title>
<indexterm><primary>MAX_TEXTFORMAT_BUFFERS</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MAX_TEXTFORMAT_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_TEXTFORMAT_BUFFERS&#160;&#160;&#160;4</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a0791e69f0dcd58efa795dd50eb8c6cd0"/><section>
    <title>STB_RECT_PACK_IMPLEMENTATION</title>
<indexterm><primary>STB_RECT_PACK_IMPLEMENTATION</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>STB_RECT_PACK_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> STB_RECT_PACK_IMPLEMENTATION</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1afaa2f2d0d9d6726cfae6da070e736347"/><section>
    <title>STB_TRUETYPE_IMPLEMENTATION</title>
<indexterm><primary>STB_TRUETYPE_IMPLEMENTATION</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>STB_TRUETYPE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> STB_TRUETYPE_IMPLEMENTATION</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1adb252cc9576591994fdf2f89baddc630"/><section>
    <title>STBTT_STATIC</title>
<indexterm><primary>STBTT_STATIC</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>STBTT_STATIC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> STBTT_STATIC</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a27296e565e20f3389af024b1f26dfde3"/><section>
    <title>SUPPORT_COMPRESSED_FONT_ATLAS</title>
<indexterm><primary>SUPPORT_COMPRESSED_FONT_ATLAS</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>SUPPORT_COMPRESSED_FONT_ATLAS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SUPPORT_COMPRESSED_FONT_ATLAS</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a96deb98456f04a28934ab923e619647e"/><section>
    <title>SUPPORT_UNORDERED_CHARSET</title>
<indexterm><primary>SUPPORT_UNORDERED_CHARSET</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>SUPPORT_UNORDERED_CHARSET</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SUPPORT_UNORDERED_CHARSET</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aa42912725e2d76836ffeaa3d4062abff"/><section>
    <title>TEXT_BYTES_PER_LINE</title>
<indexterm><primary>TEXT_BYTES_PER_LINE</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TEXT_BYTES_PER_LINE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TEXT_BYTES_PER_LINE&#160;&#160;&#160;20</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a7fe0b7ec386a2ebabdca8271ccbcc837"/><section>
    <title>CodepointToUTF8()</title>
<indexterm><primary>CodepointToUTF8</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>CodepointToUTF8</secondary></indexterm>
<para><computeroutput>const char * CodepointToUTF8 (int codepoint, int * utf8Size)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a7ced13adb512f945c159aa3a7aa6175e"/><section>
    <title>DrawFPS()</title>
<indexterm><primary>DrawFPS</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>DrawFPS</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawFPS (int posX, int posY)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a7ced13adb512f945c159aa3a7aa6175e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a7ced13adb512f945c159aa3a7aa6175e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ab75e0f9fe436edf4a3aa5abed4df28ca"/><section>
    <title>DrawText()</title>
<indexterm><primary>DrawText</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>DrawText</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawText (const char * text, int posX, int posY, int fontSize, <link linkend="_struct_color">Color</link> color)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ab75e0f9fe436edf4a3aa5abed4df28ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ab75e0f9fe436edf4a3aa5abed4df28ca_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1afa8124f9a9ca1b5749a0c2f5af66e115"/><section>
    <title>DrawTextCodepoint()</title>
<indexterm><primary>DrawTextCodepoint</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>DrawTextCodepoint</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextCodepoint (<link linkend="_struct_font">Font</link> font, int codepoint, <link linkend="_struct_vector2">Vector2</link> position, float fontSize, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_afa8124f9a9ca1b5749a0c2f5af66e115_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a0cef33837c9a036a9ac969ef404e0d97"/><section>
    <title>DrawTextCodepoints()</title>
<indexterm><primary>DrawTextCodepoints</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>DrawTextCodepoints</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextCodepoints (<link linkend="_struct_font">Font</link> font, const int * codepoints, int count, <link linkend="_struct_vector2">Vector2</link> position, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a0cef33837c9a036a9ac969ef404e0d97_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1afa48e7e0974c35abf9b50f04e62ed9e7"/><section>
    <title>DrawTextEx()</title>
<indexterm><primary>DrawTextEx</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>DrawTextEx</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextEx (<link linkend="_struct_font">Font</link> font, const char * text, <link linkend="_struct_vector2">Vector2</link> position, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_afa48e7e0974c35abf9b50f04e62ed9e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_afa48e7e0974c35abf9b50f04e62ed9e7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a7337783b45718ef25477f7881c78a67a"/><section>
    <title>DrawTextPro()</title>
<indexterm><primary>DrawTextPro</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>DrawTextPro</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextPro (<link linkend="_struct_font">Font</link> font, const char * text, <link linkend="_struct_vector2">Vector2</link> position, <link linkend="_struct_vector2">Vector2</link> origin, float rotation, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a7337783b45718ef25477f7881c78a67a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1af6f490f2fbc5d5d489effd46d7b74961"/><section>
    <title>ExportFontAsCode()</title>
<indexterm><primary>ExportFontAsCode</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>ExportFontAsCode</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> ExportFontAsCode (<link linkend="_struct_font">Font</link> font, const char * fileName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_af6f490f2fbc5d5d489effd46d7b74961_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a2c777d92b9285df6dcc2fa5d707a74ed"/><section>
    <title>GenImageFontAtlas()</title>
<indexterm><primary>GenImageFontAtlas</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GenImageFontAtlas</secondary></indexterm>
<para><computeroutput><link linkend="_struct_image">Image</link> GenImageFontAtlas (const <link linkend="_struct_glyph_info">GlyphInfo</link> * chars, <link linkend="_struct_rectangle">Rectangle</link> ** charRecs, int glyphCount, int fontSize, int padding, int packMethod)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a2c777d92b9285df6dcc2fa5d707a74ed_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ac9e671bd603d2ae1318d9d6522fddd1f"/><section>
    <title>GetCodepoint()</title>
<indexterm><primary>GetCodepoint</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetCodepoint</secondary></indexterm>
<para><computeroutput>int GetCodepoint (const char * text, int * codepointSize)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aa6265afc6b18a91b6f6de875cdcd0c07"/><section>
    <title>GetCodepointCount()</title>
<indexterm><primary>GetCodepointCount</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetCodepointCount</secondary></indexterm>
<para><computeroutput>int GetCodepointCount (const char * text)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_aa6265afc6b18a91b6f6de875cdcd0c07_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a502188494be285261d46b843b122c97a"/><section>
    <title>GetCodepointNext()</title>
<indexterm><primary>GetCodepointNext</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetCodepointNext</secondary></indexterm>
<para><computeroutput>int GetCodepointNext (const char * text, int * codepointSize)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a502188494be285261d46b843b122c97a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a08f2568af01467e301d9a081af1a505b"/><section>
    <title>GetCodepointPrevious()</title>
<indexterm><primary>GetCodepointPrevious</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetCodepointPrevious</secondary></indexterm>
<para><computeroutput>int GetCodepointPrevious (const char * text, int * codepointSize)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a08f2568af01467e301d9a081af1a505b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ab0c27a81dd37c596295654a82e201137"/><section>
    <title>GetFontDefault()</title>
<indexterm><primary>GetFontDefault</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetFontDefault</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> GetFontDefault (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ab0c27a81dd37c596295654a82e201137_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a686f96c5213a7965ab14b7c8784b267c"/><section>
    <title>GetGlyphAtlasRec()</title>
<indexterm><primary>GetGlyphAtlasRec</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetGlyphAtlasRec</secondary></indexterm>
<para><computeroutput><link linkend="_struct_rectangle">Rectangle</link> GetGlyphAtlasRec (<link linkend="_struct_font">Font</link> font, int codepoint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a686f96c5213a7965ab14b7c8784b267c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a37c1bca5f2d858bf4f0a75788cf537e0"/><section>
    <title>GetGlyphIndex()</title>
<indexterm><primary>GetGlyphIndex</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetGlyphIndex</secondary></indexterm>
<para><computeroutput>int GetGlyphIndex (<link linkend="_struct_font">Font</link> font, int codepoint)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a37c1bca5f2d858bf4f0a75788cf537e0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ac59c366af1e313b5c2f31a36d3b04f26"/><section>
    <title>GetGlyphInfo()</title>
<indexterm><primary>GetGlyphInfo</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>GetGlyphInfo</secondary></indexterm>
<para><computeroutput><link linkend="_struct_glyph_info">GlyphInfo</link> GetGlyphInfo (<link linkend="_struct_font">Font</link> font, int codepoint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ac59c366af1e313b5c2f31a36d3b04f26_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aa6bb58339061c71bbe9e8e43ee6b8426"/><section>
    <title>IsFontReady()</title>
<indexterm><primary>IsFontReady</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>IsFontReady</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> IsFontReady (<link linkend="_struct_font">Font</link> font)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a1c20fb8d30b44873a6728909ed5f6847"/><section>
    <title>LoadCodepoints()</title>
<indexterm><primary>LoadCodepoints</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadCodepoints</secondary></indexterm>
<para><computeroutput>int * LoadCodepoints (const char * text, int * count)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a1c20fb8d30b44873a6728909ed5f6847_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a3af0b11c77b23684cd8c95127b39929c"/><section>
    <title>LoadFont()</title>
<indexterm><primary>LoadFont</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadFont</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFont (const char * fileName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a3af0b11c77b23684cd8c95127b39929c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a3af0b11c77b23684cd8c95127b39929c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a24950140d316a4ba534345bc2747f645"/><section>
    <title>LoadFontData()</title>
<indexterm><primary>LoadFontData</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadFontData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_glyph_info">GlyphInfo</link> * LoadFontData (const unsigned char * fileData, int dataSize, int fontSize, int * fontChars, int glyphCount, int type)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a24950140d316a4ba534345bc2747f645_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a8484fb93b071180266b4e0a4c23fc296"/><section>
    <title>LoadFontDefault()</title>
<indexterm><primary>LoadFontDefault</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadFontDefault</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> LoadFontDefault (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )<computeroutput>[extern]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a8484fb93b071180266b4e0a4c23fc296_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a8484fb93b071180266b4e0a4c23fc296_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ab0d4d79244a953e7dff301fcf7862502"/><section>
    <title>LoadFontEx()</title>
<indexterm><primary>LoadFontEx</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadFontEx</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFontEx (const char * fileName, int fontSize, int * fontChars, int glyphCount)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ab0d4d79244a953e7dff301fcf7862502_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a56705d5b2c3d2c7c9bbeda302142d948"/><section>
    <title>LoadFontFromImage()</title>
<indexterm><primary>LoadFontFromImage</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadFontFromImage</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFontFromImage (<link linkend="_struct_image">Image</link> image, <link linkend="_struct_color">Color</link> key, int firstChar)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a56705d5b2c3d2c7c9bbeda302142d948_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a158ba1fefe2e1baeb88c87d59648f97a"/><section>
    <title>LoadFontFromMemory()</title>
<indexterm><primary>LoadFontFromMemory</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadFontFromMemory</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFontFromMemory (const char * fileType, const unsigned char * fileData, int dataSize, int fontSize, int * fontChars, int glyphCount)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a158ba1fefe2e1baeb88c87d59648f97a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a045352ddf4447a25298f30fe36a29b55"/><section>
    <title>LoadUTF8()</title>
<indexterm><primary>LoadUTF8</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>LoadUTF8</secondary></indexterm>
<para><computeroutput>char * LoadUTF8 (const int * codepoints, int length)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a045352ddf4447a25298f30fe36a29b55_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a34469970dc39e965e5aab01140e2932f"/><section>
    <title>MeasureText()</title>
<indexterm><primary>MeasureText</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MeasureText</secondary></indexterm>
<para><computeroutput>int MeasureText (const char * text, int fontSize)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a34469970dc39e965e5aab01140e2932f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a4ea62af28450b68a1c99c00a1fc562ca"/><section>
    <title>MeasureTextEx()</title>
<indexterm><primary>MeasureTextEx</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>MeasureTextEx</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2">Vector2</link> MeasureTextEx (<link linkend="_struct_font">Font</link> font, const char * text, float fontSize, float spacing)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a4ea62af28450b68a1c99c00a1fc562ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a4ea62af28450b68a1c99c00a1fc562ca_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a30b12f937ee26c5ff847d62250dc2d2c"/><section>
    <title>TextAppend()</title>
<indexterm><primary>TextAppend</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextAppend</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> TextAppend (char * text, const char * append, int * position)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a30b12f937ee26c5ff847d62250dc2d2c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a2744f3dbfac87e50e85dad25eaacc4b0"/><section>
    <title>TextCopy()</title>
<indexterm><primary>TextCopy</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextCopy</secondary></indexterm>
<para><computeroutput>int TextCopy (char * dst, const char * src)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a2744f3dbfac87e50e85dad25eaacc4b0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1afd90fa13a2612689a6e0d9429ac4d33f"/><section>
    <title>TextFindIndex()</title>
<indexterm><primary>TextFindIndex</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextFindIndex</secondary></indexterm>
<para><computeroutput>int TextFindIndex (const char * text, const char * find)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_afd90fa13a2612689a6e0d9429ac4d33f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ac3c593fd4b408dcf52d20d693e8976fc"/><section>
    <title>TextFormat()</title>
<indexterm><primary>TextFormat</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextFormat</secondary></indexterm>
<para><computeroutput>const char * TextFormat (const char * text,  ...)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ac3c593fd4b408dcf52d20d693e8976fc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a942e58dc390f0fc698844ba73533c05d"/><section>
    <title>TextInsert()</title>
<indexterm><primary>TextInsert</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextInsert</secondary></indexterm>
<para><computeroutput>char * TextInsert (const char * text, const char * insert, int position)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a942e58dc390f0fc698844ba73533c05d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a27de470afa89a9b701b0167644998d60"/><section>
    <title>TextIsEqual()</title>
<indexterm><primary>TextIsEqual</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextIsEqual</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> TextIsEqual (const char * text1, const char * text2)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a27de470afa89a9b701b0167644998d60_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a929ab4dbd523239258ed5f5b05e819e6"/><section>
    <title>TextJoin()</title>
<indexterm><primary>TextJoin</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextJoin</secondary></indexterm>
<para><computeroutput>const char * TextJoin (const char ** textList, int count, const char * delimiter)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a929ab4dbd523239258ed5f5b05e819e6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a5ac8f1891934193dc88fd85f493c3a41"/><section>
    <title>TextLength()</title>
<indexterm><primary>TextLength</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextLength</secondary></indexterm>
<para><computeroutput>unsigned int TextLength (const char * text)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a5ac8f1891934193dc88fd85f493c3a41_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a735836f8830f42ab79ba223c90968df8"/><section>
    <title>TextReplace()</title>
<indexterm><primary>TextReplace</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextReplace</secondary></indexterm>
<para><computeroutput>char * TextReplace (char * text, const char * replace, const char * by)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a735836f8830f42ab79ba223c90968df8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a0020744de71c89efe5ef9739827ffdc5"/><section>
    <title>TextSplit()</title>
<indexterm><primary>TextSplit</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextSplit</secondary></indexterm>
<para><computeroutput>const char ** TextSplit (const char * text, char delimiter, int * count)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a0020744de71c89efe5ef9739827ffdc5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1aac6306c12128752bb0a04a9f2e0b399c"/><section>
    <title>TextSubtext()</title>
<indexterm><primary>TextSubtext</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextSubtext</secondary></indexterm>
<para><computeroutput>const char * TextSubtext (const char * text, int position, int length)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_aac6306c12128752bb0a04a9f2e0b399c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a43640b85ae37b909b4cee50d40d9d534"/><section>
    <title>TextToInteger()</title>
<indexterm><primary>TextToInteger</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextToInteger</secondary></indexterm>
<para><computeroutput>int TextToInteger (const char * text)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a5ce035033f9eedfa204df83389dd9254"/><section>
    <title>TextToLower()</title>
<indexterm><primary>TextToLower</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextToLower</secondary></indexterm>
<para><computeroutput>const char * TextToLower (const char * text)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a5ce035033f9eedfa204df83389dd9254_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a7882a03c379e5641064258f7d9a2fb23"/><section>
    <title>TextToPascal()</title>
<indexterm><primary>TextToPascal</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextToPascal</secondary></indexterm>
<para><computeroutput>const char * TextToPascal (const char * text)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1af9331ca6d77de0c76831f3318b6a12a5"/><section>
    <title>TextToUpper()</title>
<indexterm><primary>TextToUpper</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>TextToUpper</secondary></indexterm>
<para><computeroutput>const char * TextToUpper (const char * text)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a8d49c0aeaf739b41d3606c838262e919"/><section>
    <title>UnloadCodepoints()</title>
<indexterm><primary>UnloadCodepoints</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>UnloadCodepoints</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadCodepoints (int * codepoints)</computeroutput></para></section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1abaf732c815ab45f012072256766574a4"/><section>
    <title>UnloadFont()</title>
<indexterm><primary>UnloadFont</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>UnloadFont</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadFont (<link linkend="_struct_font">Font</link> font)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_abaf732c815ab45f012072256766574a4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ac322a99dde42a100e7cb80979c1bf9f8"/><section>
    <title>UnloadFontData()</title>
<indexterm><primary>UnloadFontData</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>UnloadFontData</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadFontData (<link linkend="_struct_glyph_info">GlyphInfo</link> * glyphs, int glyphCount)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_ac322a99dde42a100e7cb80979c1bf9f8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1a24ffb11e46b52a9706555b02ccbc19da"/><section>
    <title>UnloadFontDefault()</title>
<indexterm><primary>UnloadFontDefault</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>UnloadFontDefault</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadFontDefault (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )<computeroutput>[extern]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a24ffb11e46b52a9706555b02ccbc19da_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2rtext_8c_a24ffb11e46b52a9706555b02ccbc19da_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__old_2_classes_2lib_2rtext_8c_1ac4efdf78dc45dd0916bd2df941a5b00a"/><section>
    <title>UnloadUTF8()</title>
<indexterm><primary>UnloadUTF8</primary><secondary>rtext.c</secondary></indexterm>
<indexterm><primary>rtext.c</primary><secondary>UnloadUTF8</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadUTF8 (char * text)</computeroutput></para></section>
</section>
</section>
