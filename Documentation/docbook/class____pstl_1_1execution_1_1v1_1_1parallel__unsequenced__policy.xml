<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy" xml:lang="en-US">
<title>__pstl::execution::v1::parallel_unsequenced_policy Class Reference</title>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary></indexterm>
<para>
<computeroutput>#include &lt;execution_defs.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7">__allow_unsequenced</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630">__allow_vector</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064">__allow_parallel</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7">__allow_unsequenced</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630">__allow_vector</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064">__allow_parallel</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7">__allow_unsequenced</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630">__allow_vector</link> ()</para>
</listitem>
            <listitem><para>static constexpr std::true_type <link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064">__allow_parallel</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064"/><section>
    <title>__allow_parallel()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__allow_parallel</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_parallel</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_parallel ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064"/><section>
    <title>__allow_parallel()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__allow_parallel</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_parallel</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_parallel ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064"/><section>
    <title>__allow_parallel()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__allow_parallel</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_parallel</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_parallel ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7"/><section>
    <title>__allow_unsequenced()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__allow_unsequenced</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_unsequenced</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_unsequenced ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7"/><section>
    <title>__allow_unsequenced()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__allow_unsequenced</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_unsequenced</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_unsequenced ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7"/><section>
    <title>__allow_unsequenced()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__allow_unsequenced</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_unsequenced</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_unsequenced ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630"/><section>
    <title>__allow_vector()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__allow_vector</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_vector</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_vector ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630"/><section>
    <title>__allow_vector()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__allow_vector</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_vector</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_vector ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630"/><section>
    <title>__allow_vector()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__allow_vector</primary><secondary>__pstl::execution::v1::parallel_unsequenced_policy</secondary></indexterm>
<indexterm><primary>__pstl::execution::v1::parallel_unsequenced_policy</primary><secondary>__allow_vector</secondary></indexterm>
<para><computeroutput>static constexpr std::true_type __pstl::execution::v1::parallel_unsequenced_policy::__allow_vector ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/<link linkend="__classes_2lib_2include_2c_09_09_2pstl_2execution__defs_8h">execution_defs.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/<link linkend="_lib_2include_2c_09_09_2pstl_2execution__defs_8h">execution_defs.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2execution__defs_8h">execution_defs.h</link></section>
</section>
