<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update" xml:lang="en-US">
<title>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary></indexterm>
<para>

<para>Functor updating ranks of entrees. </para>
 
</para>
<para>
<computeroutput>#include &lt;trie_policy.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1trie__order__statistics__node__update__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1trie__order__statistics__node__update__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9">access_traits</link></para>
</listitem>
            <listitem><para>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c">key_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9">access_traits</link></para>
</listitem>
            <listitem><para>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c">key_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link></para>
</listitem>
            <listitem><para>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9">access_traits</link></para>
</listitem>
            <listitem><para>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link></para>
</listitem>
            <listitem><para>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54">allocator_type</link></para>
</listitem>
            <listitem><para>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c">key_type</link></para>
</listitem>
            <listitem><para>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee">metadata_type</link></para>
</listitem>
            <listitem><para>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link></para>
</listitem>
            <listitem><para>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link></para>
</listitem>
            <listitem><para>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link></para>
</listitem>
            <listitem><para>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc">find_by_order</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2">find_by_order</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c">order_of_key</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc">order_of_prefix</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc">find_by_order</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2">find_by_order</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c">order_of_key</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc">order_of_prefix</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc">find_by_order</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2">find_by_order</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c">order_of_key</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc">order_of_prefix</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a">operator()</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a">operator()</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a">operator()</link> (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>, <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node_CItr, typename Node_Itr, typename _ATraits, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</title></simplesect>

<para>Functor updating ranks of entrees. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6"/><section>
    <title>a_const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>a_const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>a_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::a_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6"/><section>
    <title>a_const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>a_const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>a_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::a_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6"/><section>
    <title>a_const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>a_const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>a_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef access_traits::const_iterator <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::a_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9"/><section>
    <title>access_traits<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9"/><section>
    <title>access_traits<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9"/><section>
    <title>access_traits<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>access_traits</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>access_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _ATraits <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::access_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4"/><section>
    <title>const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4"/><section>
    <title>const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4"/><section>
    <title>const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_const_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64"/><section>
    <title>iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64"/><section>
    <title>iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64"/><section>
    <title>iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef node_iterator::value_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885"/><section>
    <title>key_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885"/><section>
    <title>key_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885"/><section>
    <title>key_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_const_reference <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c"/><section>
    <title>key_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c"/><section>
    <title>key_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c"/><section>
    <title>key_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::key_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee"/><section>
    <title>metadata_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee"/><section>
    <title>metadata_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee"/><section>
    <title>metadata_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>metadata_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>metadata_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::metadata_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29"/><section>
    <title>node_const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29"/><section>
    <title>node_const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29"/><section>
    <title>node_const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_const_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_CItr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_const_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951"/><section>
    <title>node_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951"/><section>
    <title>node_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951"/><section>
    <title>node_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_iterator</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>node_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef Node_Itr <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::node_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef allocator_type::size_type <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::size_type</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2"/><section>
    <title>find_by_order()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>find_by_order</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>find_by_order</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::find_by_order (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Finds an entry by __order. Returns an iterator to the entry with the __order order, or an iterator to the container object&apos;s end if order is at least the size of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2"/><section>
    <title>find_by_order()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>find_by_order</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>find_by_order</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::find_by_order (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Finds an entry by __order. Returns an iterator to the entry with the __order order, or an iterator to the container object&apos;s end if order is at least the size of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2"/><section>
    <title>find_by_order()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>find_by_order</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>find_by_order</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::find_by_order (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Finds an entry by __order. Returns an iterator to the entry with the __order order, or an iterator to the container object&apos;s end if order is at least the size of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc"/><section>
    <title>find_by_order()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>find_by_order</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>find_by_order</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::find_by_order (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Finds an entry by __order. Returns a const_iterator to the entry with the __order order, or a const_iterator to the container object&apos;s end if order is at least the size of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc"/><section>
    <title>find_by_order()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>find_by_order</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>find_by_order</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::find_by_order (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Finds an entry by __order. Returns a const_iterator to the entry with the __order order, or a const_iterator to the container object&apos;s end if order is at least the size of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc"/><section>
    <title>find_by_order()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>find_by_order</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>find_by_order</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::find_by_order (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Finds an entry by __order. Returns a const_iterator to the entry with the __order order, or a const_iterator to the container object&apos;s end if order is at least the size of the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link> ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Updates the rank of a node through a node_iterator node_it; end_nd_it is the end node iterator. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link> ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Updates the rank of a node through a node_iterator node_it; end_nd_it is the end node iterator. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::operator() (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link> ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Updates the rank of a node through a node_iterator node_it; end_nd_it is the end node iterator. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c"/><section>
    <title>order_of_key()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>order_of_key</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>order_of_key</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::order_of_key (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns the order of a key within a sequence. For exapmle, if r_key is the smallest key, this method will return 0; if r_key is a key between the smallest and next key, this method will return 1; if r_key is a key larger than the largest key, this method will return the size of r_c. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c"/><section>
    <title>order_of_key()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>order_of_key</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>order_of_key</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::order_of_key (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns the order of a key within a sequence. For exapmle, if r_key is the smallest key, this method will return 0; if r_key is a key between the smallest and next key, this method will return 1; if r_key is a key larger than the largest key, this method will return the size of r_c. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c"/><section>
    <title>order_of_key()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>order_of_key</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>order_of_key</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::order_of_key (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns the order of a key within a sequence. For exapmle, if r_key is the smallest key, this method will return 0; if r_key is a key between the smallest and next key, this method will return 1; if r_key is a key larger than the largest key, this method will return the size of r_c. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc"/><section>
    <title>order_of_prefix()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>order_of_prefix</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>order_of_prefix</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::order_of_prefix (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns the order of a prefix within a sequence. For exapmle, if [b, e] is the smallest prefix, this method will return 0; if r_key is a key between the smallest and next key, this method will return 1; if r_key is a key larger than the largest key, this method will return the size of r_c. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc"/><section>
    <title>order_of_prefix()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>order_of_prefix</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>order_of_prefix</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::order_of_prefix (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns the order of a prefix within a sequence. For exapmle, if [b, e] is the smallest prefix, this method will return 0; if r_key is a key between the smallest and next key, this method will return 1; if r_key is a key larger than the largest key, this method will return the size of r_c. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc"/><section>
    <title>order_of_prefix()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>order_of_prefix</primary><secondary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</primary><secondary>order_of_prefix</secondary></indexterm>
<computeroutput>template&lt;typename Node_CItr , typename Node_Itr , typename _ATraits , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link> <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update</link>&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;::order_of_prefix (<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link> , <link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link> ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns the order of a prefix within a sequence. For exapmle, if [b, e] is the smallest prefix, this method will return 0; if r_key is a key between the smallest and next key, this method will return 1; if r_key is a key larger than the largest key, this method will return the size of r_c. </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp">trie_policy.hpp</link></section>
</section>
