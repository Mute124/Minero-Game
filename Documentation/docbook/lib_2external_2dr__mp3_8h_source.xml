<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2dr__mp3_8h_source" xml:lang="en-US">
<title>dr_mp3.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/dr_mp3.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">MP3&#32;audio&#32;decoder.&#32;Choice&#32;of&#32;public&#32;domain&#32;or&#32;MIT-0.&#32;See&#32;license&#32;statements&#32;at&#32;the&#32;end&#32;of&#32;this&#32;file.</emphasis>
3 <emphasis role="comment">dr_mp3&#32;-&#32;v0.6.34&#32;-&#32;2022-09-17</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">David&#32;Reid&#32;-&#32;mackron@gmail.com</emphasis>
6 <emphasis role="comment"></emphasis>
7 <emphasis role="comment">GitHub:&#32;https://github.com/mackron/dr_libs</emphasis>
8 <emphasis role="comment"></emphasis>
9 <emphasis role="comment">Based&#32;on&#32;minimp3&#32;(https://github.com/lieff/minimp3)&#32;which&#32;is&#32;where&#32;the&#32;real&#32;work&#32;was&#32;done.&#32;See&#32;the&#32;bottom&#32;of&#32;this&#32;file&#32;for&#32;differences&#32;between&#32;minimp3&#32;and&#32;dr_mp3.</emphasis>
10 <emphasis role="comment">*/</emphasis>
11 
12 <emphasis role="comment">/*</emphasis>
13 <emphasis role="comment">RELEASE&#32;NOTES&#32;-&#32;VERSION&#32;0.6</emphasis>
14 <emphasis role="comment">===========================</emphasis>
15 <emphasis role="comment">Version&#32;0.6&#32;includes&#32;breaking&#32;changes&#32;with&#32;the&#32;configuration&#32;of&#32;decoders.&#32;The&#32;ability&#32;to&#32;customize&#32;the&#32;number&#32;of&#32;output&#32;channels&#32;and&#32;the&#32;sample&#32;rate&#32;has&#32;been</emphasis>
16 <emphasis role="comment">removed.&#32;You&#32;must&#32;now&#32;use&#32;the&#32;channel&#32;count&#32;and&#32;sample&#32;rate&#32;reported&#32;by&#32;the&#32;MP3&#32;stream&#32;itself,&#32;and&#32;all&#32;channel&#32;and&#32;sample&#32;rate&#32;conversion&#32;must&#32;be&#32;done</emphasis>
17 <emphasis role="comment">yourself.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment"></emphasis>
20 <emphasis role="comment">Changes&#32;to&#32;Initialization</emphasis>
21 <emphasis role="comment">-------------------------</emphasis>
22 <emphasis role="comment">Previously,&#32;`drmp3_init()`,&#32;etc.&#32;took&#32;a&#32;pointer&#32;to&#32;a&#32;`drmp3_config`&#32;object&#32;that&#32;allowed&#32;you&#32;to&#32;customize&#32;the&#32;output&#32;channels&#32;and&#32;sample&#32;rate.&#32;This&#32;has&#32;been</emphasis>
23 <emphasis role="comment">removed.&#32;If&#32;you&#32;need&#32;the&#32;old&#32;behaviour&#32;you&#32;will&#32;need&#32;to&#32;convert&#32;the&#32;data&#32;yourself&#32;or&#32;just&#32;not&#32;upgrade.&#32;The&#32;following&#32;APIs&#32;have&#32;changed.</emphasis>
24 <emphasis role="comment"></emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;&#32;`drmp3_init()`</emphasis>
26 <emphasis role="comment">&#32;&#32;&#32;&#32;`drmp3_init_memory()`</emphasis>
27 <emphasis role="comment">&#32;&#32;&#32;&#32;`drmp3_init_file()`</emphasis>
28 <emphasis role="comment"></emphasis>
29 <emphasis role="comment"></emphasis>
30 <emphasis role="comment">Miscellaneous&#32;Changes</emphasis>
31 <emphasis role="comment">---------------------</emphasis>
32 <emphasis role="comment">Support&#32;for&#32;loading&#32;a&#32;file&#32;from&#32;a&#32;`wchar_t`&#32;string&#32;has&#32;been&#32;added&#32;via&#32;the&#32;`drmp3_init_file_w()`&#32;API.</emphasis>
33 <emphasis role="comment">*/</emphasis>
34 
35 <emphasis role="comment">/*</emphasis>
36 <emphasis role="comment">Introducation</emphasis>
37 <emphasis role="comment">=============</emphasis>
38 <emphasis role="comment">dr_mp3&#32;is&#32;a&#32;single&#32;file&#32;library.&#32;To&#32;use&#32;it,&#32;do&#32;something&#32;like&#32;the&#32;following&#32;in&#32;one&#32;.c&#32;file.</emphasis>
39 <emphasis role="comment"></emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;&#32;```c</emphasis>
41 <emphasis role="comment">&#32;&#32;&#32;&#32;#define&#32;DR_MP3_IMPLEMENTATION</emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;&#32;#include&#32;&quot;dr_mp3.h&quot;</emphasis>
43 <emphasis role="comment">&#32;&#32;&#32;&#32;```</emphasis>
44 <emphasis role="comment"></emphasis>
45 <emphasis role="comment">You&#32;can&#32;then&#32;#include&#32;this&#32;file&#32;in&#32;other&#32;parts&#32;of&#32;the&#32;program&#32;as&#32;you&#32;would&#32;with&#32;any&#32;other&#32;header&#32;file.&#32;To&#32;decode&#32;audio&#32;data,&#32;do&#32;something&#32;like&#32;the&#32;following:</emphasis>
46 <emphasis role="comment"></emphasis>
47 <emphasis role="comment">&#32;&#32;&#32;&#32;```c</emphasis>
48 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3&#32;mp3;</emphasis>
49 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(!drmp3_init_file(&amp;mp3,&#32;&quot;MySong.mp3&quot;,&#32;NULL))&#32;{</emphasis>
50 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Failed&#32;to&#32;open&#32;file</emphasis>
51 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
52 <emphasis role="comment"></emphasis>
53 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
54 <emphasis role="comment"></emphasis>
55 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_uint64&#32;framesRead&#32;=&#32;drmp3_read_pcm_frames_f32(pMP3,&#32;framesToRead,&#32;pFrames);</emphasis>
56 <emphasis role="comment">&#32;&#32;&#32;&#32;```</emphasis>
57 <emphasis role="comment"></emphasis>
58 <emphasis role="comment">The&#32;drmp3&#32;object&#32;is&#32;transparent&#32;so&#32;you&#32;can&#32;get&#32;access&#32;to&#32;the&#32;channel&#32;count&#32;and&#32;sample&#32;rate&#32;like&#32;so:</emphasis>
59 <emphasis role="comment"></emphasis>
60 <emphasis role="comment">&#32;&#32;&#32;&#32;```</emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_uint32&#32;channels&#32;=&#32;mp3.channels;</emphasis>
62 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_uint32&#32;sampleRate&#32;=&#32;mp3.sampleRate;</emphasis>
63 <emphasis role="comment">&#32;&#32;&#32;&#32;```</emphasis>
64 <emphasis role="comment"></emphasis>
65 <emphasis role="comment">The&#32;example&#32;above&#32;initializes&#32;a&#32;decoder&#32;from&#32;a&#32;file,&#32;but&#32;you&#32;can&#32;also&#32;initialize&#32;it&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;and&#32;read&#32;and&#32;seek&#32;callbacks&#32;with</emphasis>
66 <emphasis role="comment">`drmp3_init_memory()`&#32;and&#32;`drmp3_init()`&#32;respectively.</emphasis>
67 <emphasis role="comment"></emphasis>
68 <emphasis role="comment">You&#32;do&#32;not&#32;need&#32;to&#32;do&#32;any&#32;annoying&#32;memory&#32;management&#32;when&#32;reading&#32;PCM&#32;frames&#32;-&#32;this&#32;is&#32;all&#32;managed&#32;internally.&#32;You&#32;can&#32;request&#32;any&#32;number&#32;of&#32;PCM&#32;frames&#32;in&#32;each</emphasis>
69 <emphasis role="comment">call&#32;to&#32;`drmp3_read_pcm_frames_f32()`&#32;and&#32;it&#32;will&#32;return&#32;as&#32;many&#32;PCM&#32;frames&#32;as&#32;it&#32;can,&#32;up&#32;to&#32;the&#32;requested&#32;amount.</emphasis>
70 <emphasis role="comment"></emphasis>
71 <emphasis role="comment">You&#32;can&#32;also&#32;decode&#32;an&#32;entire&#32;file&#32;in&#32;one&#32;go&#32;with&#32;`drmp3_open_and_read_pcm_frames_f32()`,&#32;`drmp3_open_memory_and_read_pcm_frames_f32()`&#32;and</emphasis>
72 <emphasis role="comment">`drmp3_open_file_and_read_pcm_frames_f32()`.</emphasis>
73 <emphasis role="comment"></emphasis>
74 <emphasis role="comment"></emphasis>
75 <emphasis role="comment">Build&#32;Options</emphasis>
76 <emphasis role="comment">=============</emphasis>
77 <emphasis role="comment">#define&#32;these&#32;options&#32;before&#32;including&#32;this&#32;file.</emphasis>
78 <emphasis role="comment"></emphasis>
79 <emphasis role="comment">#define&#32;DR_MP3_NO_STDIO</emphasis>
80 <emphasis role="comment">&#32;&#32;Disable&#32;drmp3_init_file(),&#32;etc.</emphasis>
81 <emphasis role="comment"></emphasis>
82 <emphasis role="comment">#define&#32;DR_MP3_NO_SIMD</emphasis>
83 <emphasis role="comment">&#32;&#32;Disable&#32;SIMD&#32;optimizations.</emphasis>
84 <emphasis role="comment">*/</emphasis>
85 
86 <emphasis role="preprocessor">#ifndef&#32;dr_mp3_h</emphasis>
87 <emphasis role="preprocessor">#define&#32;dr_mp3_h</emphasis>
88 
89 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
90 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
91 <emphasis role="preprocessor">#endif</emphasis>
92 
93 <emphasis role="preprocessor">#define&#32;DRMP3_STRINGIFY(x)&#32;&#32;&#32;&#32;&#32;&#32;#x</emphasis>
94 <emphasis role="preprocessor">#define&#32;DRMP3_XSTRINGIFY(x)&#32;&#32;&#32;&#32;&#32;DRMP3_STRINGIFY(x)</emphasis>
95 
96 <emphasis role="preprocessor">#define&#32;DRMP3_VERSION_MAJOR&#32;&#32;&#32;&#32;&#32;0</emphasis>
97 <emphasis role="preprocessor">#define&#32;DRMP3_VERSION_MINOR&#32;&#32;&#32;&#32;&#32;6</emphasis>
98 <emphasis role="preprocessor">#define&#32;DRMP3_VERSION_REVISION&#32;&#32;34</emphasis>
99 <emphasis role="preprocessor">#define&#32;DRMP3_VERSION_STRING&#32;&#32;&#32;&#32;DRMP3_XSTRINGIFY(DRMP3_VERSION_MAJOR)&#32;&quot;.&quot;&#32;DRMP3_XSTRINGIFY(DRMP3_VERSION_MINOR)&#32;&quot;.&quot;&#32;DRMP3_XSTRINGIFY(DRMP3_VERSION_REVISION)</emphasis>
100 
101 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>&#32;<emphasis role="comment">/*&#32;For&#32;size_t.&#32;*/</emphasis>
102 
103 <emphasis role="comment">/*&#32;Sized&#32;types.&#32;*/</emphasis>
104 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2fe2d0be80c5655718c7e481db502507">drmp3_int8</link>;
105 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>;
106 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>;
107 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>;
108 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>;
109 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>;
110 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;!defined(__clang__)</emphasis>
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;__int64&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad097358cee4d2778ab515253fcf26dbc">drmp3_int64</link>;
112 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;__int64&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>;
113 <emphasis role="preprocessor">#else</emphasis>
114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(__clang__)&#32;||&#32;(defined(__GNUC__)&#32;&amp;&amp;&#32;(__GNUC__&#32;&gt;&#32;4&#32;||&#32;(__GNUC__&#32;==&#32;4&#32;&amp;&amp;&#32;__GNUC_MINOR__&#32;&gt;=&#32;6)))</emphasis>
115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#pragma&#32;GCC&#32;diagnostic&#32;push</emphasis>
116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#pragma&#32;GCC&#32;diagnostic&#32;ignored&#32;&quot;-Wlong-long&quot;</emphasis>
117 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__clang__)</emphasis>
118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#pragma&#32;GCC&#32;diagnostic&#32;ignored&#32;&quot;-Wc++11-long-long&quot;</emphasis>
119 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad097358cee4d2778ab515253fcf26dbc">drmp3_int64</link>;
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>;
123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(__clang__)&#32;||&#32;(defined(__GNUC__)&#32;&amp;&amp;&#32;(__GNUC__&#32;&gt;&#32;4&#32;||&#32;(__GNUC__&#32;==&#32;4&#32;&amp;&amp;&#32;__GNUC_MINOR__&#32;&gt;=&#32;6)))</emphasis>
124 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#pragma&#32;GCC&#32;diagnostic&#32;pop</emphasis>
125 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
126 <emphasis role="preprocessor">#endif</emphasis>
127 <emphasis role="preprocessor">#if&#32;defined(__LP64__)&#32;||&#32;defined(_WIN64)&#32;||&#32;(defined(__x86_64__)&#32;&amp;&amp;&#32;!defined(__ILP32__))&#32;||&#32;defined(_M_X64)&#32;||&#32;defined(__ia64)&#32;||&#32;defined&#32;(_M_IA64)&#32;||&#32;defined(__aarch64__)&#32;||&#32;defined(_M_ARM64)&#32;||&#32;defined(__powerpc64__)</emphasis>
128 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ab2f829766cb0ece0e5e76c189a124254">drmp3_uintptr</link>;
129 <emphasis role="preprocessor">#else</emphasis>
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ab2f829766cb0ece0e5e76c189a124254">drmp3_uintptr</link>;
131 <emphasis role="preprocessor">#endif</emphasis>
132 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9cfa15ddd9b04c15cd974691768a3b01">drmp3_bool8</link>;
133 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>;
134 <emphasis role="preprocessor">#define&#32;DRMP3_TRUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
135 <emphasis role="preprocessor">#define&#32;DRMP3_FALSE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
136 
137 <emphasis role="preprocessor">#if&#32;!defined(DRMP3_API)</emphasis>
138 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(DRMP3_DLL)</emphasis>
139 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(_WIN32)</emphasis>
140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_IMPORT&#32;&#32;__declspec(dllimport)</emphasis>
141 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_EXPORT&#32;&#32;__declspec(dllexport)</emphasis>
142 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_PRIVATE&#32;static</emphasis>
143 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
144 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__GNUC__)&#32;&amp;&amp;&#32;__GNUC__&#32;&gt;=&#32;4</emphasis>
145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_IMPORT&#32;&#32;__attribute__((visibility(&quot;default&quot;)))</emphasis>
146 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_EXPORT&#32;&#32;__attribute__((visibility(&quot;default&quot;)))</emphasis>
147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_PRIVATE&#32;__attribute__((visibility(&quot;hidden&quot;)))</emphasis>
148 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
149 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_IMPORT</emphasis>
150 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_EXPORT</emphasis>
151 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_DLL_PRIVATE&#32;static</emphasis>
152 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
153 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
154 
155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(DR_MP3_IMPLEMENTATION)&#32;||&#32;defined(DRMP3_IMPLEMENTATION)</emphasis>
156 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_API&#32;&#32;DRMP3_DLL_EXPORT</emphasis>
157 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
158 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_API&#32;&#32;DRMP3_DLL_IMPORT</emphasis>
159 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
160 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_PRIVATE&#32;DRMP3_DLL_PRIVATE</emphasis>
161 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
162 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_API&#32;extern</emphasis>
163 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_PRIVATE&#32;static</emphasis>
164 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
165 <emphasis role="preprocessor">#endif</emphasis>
166 
167 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a643c3af984b3685f5e325200be04bf23">drmp3_result</link>;
168 <emphasis role="preprocessor">#define&#32;DRMP3_SUCCESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
169 <emphasis role="preprocessor">#define&#32;DRMP3_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;A&#32;generic&#32;error.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
170 <emphasis role="preprocessor">#define&#32;DRMP3_INVALID_ARGS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2</emphasis>
171 <emphasis role="preprocessor">#define&#32;DRMP3_INVALID_OPERATION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-3</emphasis>
172 <emphasis role="preprocessor">#define&#32;DRMP3_OUT_OF_MEMORY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-4</emphasis>
173 <emphasis role="preprocessor">#define&#32;DRMP3_OUT_OF_RANGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5</emphasis>
174 <emphasis role="preprocessor">#define&#32;DRMP3_ACCESS_DENIED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-6</emphasis>
175 <emphasis role="preprocessor">#define&#32;DRMP3_DOES_NOT_EXIST&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-7</emphasis>
176 <emphasis role="preprocessor">#define&#32;DRMP3_ALREADY_EXISTS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-8</emphasis>
177 <emphasis role="preprocessor">#define&#32;DRMP3_TOO_MANY_OPEN_FILES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-9</emphasis>
178 <emphasis role="preprocessor">#define&#32;DRMP3_INVALID_FILE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-10</emphasis>
179 <emphasis role="preprocessor">#define&#32;DRMP3_TOO_BIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-11</emphasis>
180 <emphasis role="preprocessor">#define&#32;DRMP3_PATH_TOO_LONG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-12</emphasis>
181 <emphasis role="preprocessor">#define&#32;DRMP3_NAME_TOO_LONG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-13</emphasis>
182 <emphasis role="preprocessor">#define&#32;DRMP3_NOT_DIRECTORY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-14</emphasis>
183 <emphasis role="preprocessor">#define&#32;DRMP3_IS_DIRECTORY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-15</emphasis>
184 <emphasis role="preprocessor">#define&#32;DRMP3_DIRECTORY_NOT_EMPTY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-16</emphasis>
185 <emphasis role="preprocessor">#define&#32;DRMP3_END_OF_FILE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-17</emphasis>
186 <emphasis role="preprocessor">#define&#32;DRMP3_NO_SPACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-18</emphasis>
187 <emphasis role="preprocessor">#define&#32;DRMP3_BUSY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-19</emphasis>
188 <emphasis role="preprocessor">#define&#32;DRMP3_IO_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-20</emphasis>
189 <emphasis role="preprocessor">#define&#32;DRMP3_INTERRUPT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-21</emphasis>
190 <emphasis role="preprocessor">#define&#32;DRMP3_UNAVAILABLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-22</emphasis>
191 <emphasis role="preprocessor">#define&#32;DRMP3_ALREADY_IN_USE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-23</emphasis>
192 <emphasis role="preprocessor">#define&#32;DRMP3_BAD_ADDRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-24</emphasis>
193 <emphasis role="preprocessor">#define&#32;DRMP3_BAD_SEEK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-25</emphasis>
194 <emphasis role="preprocessor">#define&#32;DRMP3_BAD_PIPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-26</emphasis>
195 <emphasis role="preprocessor">#define&#32;DRMP3_DEADLOCK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-27</emphasis>
196 <emphasis role="preprocessor">#define&#32;DRMP3_TOO_MANY_LINKS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-28</emphasis>
197 <emphasis role="preprocessor">#define&#32;DRMP3_NOT_IMPLEMENTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-29</emphasis>
198 <emphasis role="preprocessor">#define&#32;DRMP3_NO_MESSAGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-30</emphasis>
199 <emphasis role="preprocessor">#define&#32;DRMP3_BAD_MESSAGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-31</emphasis>
200 <emphasis role="preprocessor">#define&#32;DRMP3_NO_DATA_AVAILABLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-32</emphasis>
201 <emphasis role="preprocessor">#define&#32;DRMP3_INVALID_DATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-33</emphasis>
202 <emphasis role="preprocessor">#define&#32;DRMP3_TIMEOUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-34</emphasis>
203 <emphasis role="preprocessor">#define&#32;DRMP3_NO_NETWORK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-35</emphasis>
204 <emphasis role="preprocessor">#define&#32;DRMP3_NOT_UNIQUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-36</emphasis>
205 <emphasis role="preprocessor">#define&#32;DRMP3_NOT_SOCKET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-37</emphasis>
206 <emphasis role="preprocessor">#define&#32;DRMP3_NO_ADDRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-38</emphasis>
207 <emphasis role="preprocessor">#define&#32;DRMP3_BAD_PROTOCOL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-39</emphasis>
208 <emphasis role="preprocessor">#define&#32;DRMP3_PROTOCOL_UNAVAILABLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-40</emphasis>
209 <emphasis role="preprocessor">#define&#32;DRMP3_PROTOCOL_NOT_SUPPORTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-41</emphasis>
210 <emphasis role="preprocessor">#define&#32;DRMP3_PROTOCOL_FAMILY_NOT_SUPPORTED&#32;-42</emphasis>
211 <emphasis role="preprocessor">#define&#32;DRMP3_ADDRESS_FAMILY_NOT_SUPPORTED&#32;&#32;-43</emphasis>
212 <emphasis role="preprocessor">#define&#32;DRMP3_SOCKET_NOT_SUPPORTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-44</emphasis>
213 <emphasis role="preprocessor">#define&#32;DRMP3_CONNECTION_RESET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-45</emphasis>
214 <emphasis role="preprocessor">#define&#32;DRMP3_ALREADY_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-46</emphasis>
215 <emphasis role="preprocessor">#define&#32;DRMP3_NOT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-47</emphasis>
216 <emphasis role="preprocessor">#define&#32;DRMP3_CONNECTION_REFUSED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-48</emphasis>
217 <emphasis role="preprocessor">#define&#32;DRMP3_NO_HOST&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-49</emphasis>
218 <emphasis role="preprocessor">#define&#32;DRMP3_IN_PROGRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-50</emphasis>
219 <emphasis role="preprocessor">#define&#32;DRMP3_CANCELLED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-51</emphasis>
220 <emphasis role="preprocessor">#define&#32;DRMP3_MEMORY_ALREADY_MAPPED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-52</emphasis>
221 <emphasis role="preprocessor">#define&#32;DRMP3_AT_END&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-53</emphasis>
222 
223 
224 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME&#32;&#32;1152</emphasis>
225 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_SAMPLES_PER_FRAME&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME*2)</emphasis>
226 
227 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
228 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;DRMP3_INLINE&#32;__forceinline</emphasis>
229 <emphasis role="preprocessor">#elif&#32;defined(__GNUC__)</emphasis>
230 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
231 <emphasis role="comment">&#32;&#32;&#32;&#32;I&apos;ve&#32;had&#32;a&#32;bug&#32;report&#32;where&#32;GCC&#32;is&#32;emitting&#32;warnings&#32;about&#32;functions&#32;possibly&#32;not&#32;being&#32;inlineable.&#32;This&#32;warning&#32;happens&#32;when</emphasis>
232 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;__attribute__((always_inline))&#32;attribute&#32;is&#32;defined&#32;without&#32;an&#32;&quot;inline&quot;&#32;statement.&#32;I&#32;think&#32;therefore&#32;there&#32;must&#32;be&#32;some</emphasis>
233 <emphasis role="comment">&#32;&#32;&#32;&#32;case&#32;where&#32;&quot;__inline__&quot;&#32;is&#32;not&#32;always&#32;defined,&#32;thus&#32;the&#32;compiler&#32;emitting&#32;these&#32;warnings.&#32;When&#32;using&#32;-std=c89&#32;or&#32;-ansi&#32;on&#32;the</emphasis>
234 <emphasis role="comment">&#32;&#32;&#32;&#32;command&#32;line,&#32;we&#32;cannot&#32;use&#32;the&#32;&quot;inline&quot;&#32;keyword&#32;and&#32;instead&#32;need&#32;to&#32;use&#32;&quot;__inline__&quot;.&#32;In&#32;an&#32;attempt&#32;to&#32;work&#32;around&#32;this&#32;issue</emphasis>
235 <emphasis role="comment">&#32;&#32;&#32;&#32;I&#32;am&#32;using&#32;&quot;__inline__&quot;&#32;only&#32;when&#32;we&apos;re&#32;compiling&#32;in&#32;strict&#32;ANSI&#32;mode.</emphasis>
236 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(__STRICT_ANSI__)</emphasis>
238 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_GNUC_INLINE_HINT&#32;__inline__</emphasis>
239 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
240 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_GNUC_INLINE_HINT&#32;inline</emphasis>
241 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
242 
243 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(__GNUC__&#32;&gt;&#32;3&#32;||&#32;(__GNUC__&#32;==&#32;3&#32;&amp;&amp;&#32;__GNUC_MINOR__&#32;&gt;=&#32;2))&#32;||&#32;defined(__clang__)</emphasis>
244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_INLINE&#32;DRMP3_GNUC_INLINE_HINT&#32;__attribute__((always_inline))</emphasis>
245 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
246 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_INLINE&#32;DRMP3_GNUC_INLINE_HINT</emphasis>
247 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
248 <emphasis role="preprocessor">#elif&#32;defined(__WATCOMC__)</emphasis>
249 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;DRMP3_INLINE&#32;__inline</emphasis>
250 <emphasis role="preprocessor">#else</emphasis>
251 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;DRMP3_INLINE</emphasis>
252 <emphasis role="preprocessor">#endif</emphasis>
253 
254 
255 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a481d06773624e40b9669ac965af4ab0f">drmp3_version</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pMajor,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pMinor,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pRevision);
256 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad99971bf0214c3be8ad2b94489230b12">drmp3_version_string</link>(<emphasis role="keywordtype">void</emphasis>);
257 
258 
259 <emphasis role="comment">/*</emphasis>
260 <emphasis role="comment">Low&#32;Level&#32;Push&#32;API</emphasis>
261 <emphasis role="comment">==================</emphasis>
262 <emphasis role="comment">*/</emphasis>
263 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
264 {
265 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes,&#32;channels,&#32;hz,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;bitrate_kbps;
266 }&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>;
267 
268 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
269 {
270 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mdct_overlap[2][9*32],&#32;qmf_state[15*2*32];
271 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;reserv,&#32;free_format_bytes;
272 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;header[4],&#32;reserv_buf[511];
273 }&#32;<link linkend="_structdrmp3dec">drmp3dec</link>;
274 
275 <emphasis role="comment">/*&#32;Initializes&#32;a&#32;low&#32;level&#32;decoder.&#32;*/</emphasis>
276 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec);
277 
278 <emphasis role="comment">/*&#32;Reads&#32;a&#32;frame&#32;from&#32;a&#32;low&#32;level&#32;decoder.&#32;*/</emphasis>
279 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*mp3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pcm,&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;*info);
280 
281 <emphasis role="comment">/*&#32;Helper&#32;for&#32;converting&#32;between&#32;f32&#32;and&#32;s16.&#32;*/</emphasis>
282 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1abe41d7ed1ca280315620335435a62c32">drmp3dec_f32_to_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;*out,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;num_samples);
283 
284 
285 
286 <emphasis role="comment">/*</emphasis>
287 <emphasis role="comment">Main&#32;API&#32;(Pull&#32;API)</emphasis>
288 <emphasis role="comment">===================</emphasis>
289 <emphasis role="comment">*/</emphasis>
290 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
291 {
292 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>,
293 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>
294 }&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>;
295 
296 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
297 {
298 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;seekPosInBytes;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Points&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;an&#32;MP3&#32;frame.&#32;*/</emphasis>
299 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFrameIndex;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;index&#32;of&#32;the&#32;PCM&#32;frame&#32;this&#32;seek&#32;point&#32;targets.&#32;*/</emphasis>
300 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;mp3FramesToDiscard;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;whole&#32;MP3&#32;frames&#32;to&#32;be&#32;discarded&#32;before&#32;pcmFramesToDiscard.&#32;*/</emphasis>
301 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;pcmFramesToDiscard;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;leading&#32;samples&#32;to&#32;read&#32;and&#32;discard.&#32;These&#32;are&#32;discarded&#32;after&#32;mp3FramesToDiscard.&#32;*/</emphasis>
302 }&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>;
303 
304 <emphasis role="comment">/*</emphasis>
305 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;is&#32;read.&#32;Return&#32;value&#32;is&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
306 <emphasis role="comment"></emphasis>
307 <emphasis role="comment">pUserData&#32;&#32;&#32;[in]&#32;&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drmp3_init(),&#32;drmp3_open()&#32;and&#32;family.</emphasis>
308 <emphasis role="comment">pBufferOut&#32;&#32;[out]&#32;The&#32;output&#32;buffer.</emphasis>
309 <emphasis role="comment">bytesToRead&#32;[in]&#32;&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;read.</emphasis>
310 <emphasis role="comment"></emphasis>
311 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
312 <emphasis role="comment"></emphasis>
313 <emphasis role="comment">A&#32;return&#32;value&#32;of&#32;less&#32;than&#32;bytesToRead&#32;indicates&#32;the&#32;end&#32;of&#32;the&#32;stream.&#32;Do&#32;_not_&#32;return&#32;from&#32;this&#32;callback&#32;until</emphasis>
314 <emphasis role="comment">either&#32;the&#32;entire&#32;bytesToRead&#32;is&#32;filled&#32;or&#32;you&#32;have&#32;reached&#32;the&#32;end&#32;of&#32;the&#32;stream.</emphasis>
315 <emphasis role="comment">*/</emphasis>
316 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead);
317 
318 <emphasis role="comment">/*</emphasis>
319 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;seeked.</emphasis>
320 <emphasis role="comment"></emphasis>
321 <emphasis role="comment">pUserData&#32;[in]&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drmp3_init(),&#32;drmp3_open()&#32;and&#32;family.</emphasis>
322 <emphasis role="comment">offset&#32;&#32;&#32;&#32;[in]&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;move,&#32;relative&#32;to&#32;the&#32;origin.&#32;Will&#32;never&#32;be&#32;negative.</emphasis>
323 <emphasis role="comment">origin&#32;&#32;&#32;&#32;[in]&#32;The&#32;origin&#32;of&#32;the&#32;seek&#32;-&#32;the&#32;current&#32;position&#32;or&#32;the&#32;start&#32;of&#32;the&#32;stream.</emphasis>
324 <emphasis role="comment"></emphasis>
325 <emphasis role="comment">Returns&#32;whether&#32;or&#32;not&#32;the&#32;seek&#32;was&#32;successful.</emphasis>
326 <emphasis role="comment"></emphasis>
327 <emphasis role="comment">Whether&#32;or&#32;not&#32;it&#32;is&#32;relative&#32;to&#32;the&#32;beginning&#32;or&#32;current&#32;position&#32;is&#32;determined&#32;by&#32;the&#32;&quot;origin&quot;&#32;parameter&#32;which</emphasis>
328 <emphasis role="comment">will&#32;be&#32;either&#32;drmp3_seek_origin_start&#32;or&#32;drmp3_seek_origin_current.</emphasis>
329 <emphasis role="comment">*/</emphasis>
330 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin);
331 
332 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
333 {
334 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData;
335 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;(*&#32;onMalloc)(<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
336 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;(*&#32;onRealloc)(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
337 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;&#32;(*&#32;onFree)(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData);
338 }&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>;
339 
340 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
341 {
342 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;channels;
343 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRate;
344 }&#32;<link linkend="_structdrmp3__config">drmp3_config</link>;
345 
346 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
347 {
348 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3dec">drmp3dec</link>&#32;decoder;
349 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;channels;
350 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRate;
351 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead;
352 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek;
353 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData;
354 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>&#32;allocationCallbacks;
355 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;mp3FrameChannels;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;channels&#32;in&#32;the&#32;currently&#32;loaded&#32;MP3&#32;frame.&#32;Internal&#32;use&#32;only.&#32;*/</emphasis>
356 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;mp3FrameSampleRate;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;sample&#32;rate&#32;of&#32;the&#32;currently&#32;loaded&#32;MP3&#32;frame.&#32;Internal&#32;use&#32;only.&#32;*/</emphasis>
357 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesConsumedInMP3Frame;
358 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRemainingInMP3Frame;
359 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;pcmFrames[<emphasis role="keyword">sizeof</emphasis>(float)*<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a7bc707cf672a7623b621d19047cc8584">DRMP3_MAX_SAMPLES_PER_FRAME</link>];&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Multipled&#32;by&#32;sizeof(float)&#32;to&#32;ensure&#32;there&apos;s&#32;enough&#32;room&#32;for&#32;DR_MP3_FLOAT_OUTPUT.&#32;*/</emphasis>
360 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;currentPCMFrame;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;current&#32;PCM&#32;frame,&#32;globally,&#32;based&#32;on&#32;the&#32;output&#32;sample&#32;rate.&#32;Mainly&#32;used&#32;for&#32;seeking.&#32;*/</emphasis>
361 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;streamCursor;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;current&#32;byte&#32;the&#32;decoder&#32;is&#32;sitting&#32;on&#32;in&#32;the&#32;raw&#32;stream.&#32;*/</emphasis>
362 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;NULL&#32;by&#32;default.&#32;Set&#32;with&#32;drmp3_bind_seek_table().&#32;Memory&#32;is&#32;owned&#32;by&#32;the&#32;client.&#32;dr_mp3&#32;will&#32;never&#32;attempt&#32;to&#32;free&#32;this&#32;pointer.&#32;*/</emphasis>
363 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;items&#32;in&#32;pSeekPoints.&#32;When&#32;set&#32;to&#32;0&#32;assumes&#32;to&#32;no&#32;seek&#32;table.&#32;Defaults&#32;to&#32;zero.&#32;*/</emphasis>
364 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
365 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;dataCapacity;
366 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;dataConsumed;
367 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pData;
368 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;atEnd&#32;:&#32;1;
369 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
370 &#32;&#32;&#32;&#32;{
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pData;
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;currentReadPos;
374 &#32;&#32;&#32;&#32;}&#32;memory;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;used&#32;for&#32;decoders&#32;that&#32;were&#32;opened&#32;against&#32;a&#32;block&#32;of&#32;memory.&#32;*/</emphasis>
375 }&#32;<link linkend="_structdrmp3">drmp3</link>;
376 
377 <emphasis role="comment">/*</emphasis>
378 <emphasis role="comment">Initializes&#32;an&#32;MP3&#32;decoder.</emphasis>
379 <emphasis role="comment"></emphasis>
380 <emphasis role="comment">onRead&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;read&#32;from&#32;the&#32;client.</emphasis>
381 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;the&#32;read&#32;position&#32;of&#32;the&#32;client&#32;data&#32;needs&#32;to&#32;move.</emphasis>
382 <emphasis role="comment">pUserData&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onRead&#32;and&#32;onSeek.</emphasis>
383 <emphasis role="comment"></emphasis>
384 <emphasis role="comment">Returns&#32;true&#32;if&#32;successful;&#32;false&#32;otherwise.</emphasis>
385 <emphasis role="comment"></emphasis>
386 <emphasis role="comment">Close&#32;the&#32;loader&#32;with&#32;drmp3_uninit().</emphasis>
387 <emphasis role="comment"></emphasis>
388 <emphasis role="comment">See&#32;also:&#32;drmp3_init_file(),&#32;drmp3_init_memory(),&#32;drmp3_uninit()</emphasis>
389 <emphasis role="comment">*/</emphasis>
390 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
391 
392 <emphasis role="comment">/*</emphasis>
393 <emphasis role="comment">Initializes&#32;an&#32;MP3&#32;decoder&#32;from&#32;a&#32;block&#32;of&#32;memory.</emphasis>
394 <emphasis role="comment"></emphasis>
395 <emphasis role="comment">This&#32;does&#32;not&#32;create&#32;a&#32;copy&#32;of&#32;the&#32;data.&#32;It&#32;is&#32;up&#32;to&#32;the&#32;application&#32;to&#32;ensure&#32;the&#32;buffer&#32;remains&#32;valid&#32;for</emphasis>
396 <emphasis role="comment">the&#32;lifetime&#32;of&#32;the&#32;drmp3&#32;object.</emphasis>
397 <emphasis role="comment"></emphasis>
398 <emphasis role="comment">The&#32;buffer&#32;should&#32;contain&#32;the&#32;contents&#32;of&#32;the&#32;entire&#32;MP3&#32;file.</emphasis>
399 <emphasis role="comment">*/</emphasis>
400 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
401 
402 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
403 <emphasis role="comment">/*</emphasis>
404 <emphasis role="comment">Initializes&#32;an&#32;MP3&#32;decoder&#32;from&#32;a&#32;file.</emphasis>
405 <emphasis role="comment"></emphasis>
406 <emphasis role="comment">This&#32;holds&#32;the&#32;internal&#32;FILE&#32;object&#32;until&#32;drmp3_uninit()&#32;is&#32;called.&#32;Keep&#32;this&#32;in&#32;mind&#32;if&#32;you&apos;re&#32;caching&#32;drmp3</emphasis>
407 <emphasis role="comment">objects&#32;because&#32;the&#32;operating&#32;system&#32;may&#32;restrict&#32;the&#32;number&#32;of&#32;file&#32;handles&#32;an&#32;application&#32;can&#32;have&#32;open&#32;at</emphasis>
408 <emphasis role="comment">any&#32;given&#32;time.</emphasis>
409 <emphasis role="comment">*/</emphasis>
410 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pFilePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
411 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac7a2e49a5e780cdc3d635143d8d6d5fa">drmp3_init_file_w</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;pFilePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
412 <emphasis role="preprocessor">#endif</emphasis>
413 
414 <emphasis role="comment">/*</emphasis>
415 <emphasis role="comment">Uninitializes&#32;an&#32;MP3&#32;decoder.</emphasis>
416 <emphasis role="comment">*/</emphasis>
417 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
418 
419 <emphasis role="comment">/*</emphasis>
420 <emphasis role="comment">Reads&#32;PCM&#32;frames&#32;as&#32;interleaved&#32;32-bit&#32;IEEE&#32;floating&#32;point&#32;PCM.</emphasis>
421 <emphasis role="comment"></emphasis>
422 <emphasis role="comment">Note&#32;that&#32;framesToRead&#32;specifies&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;to&#32;read,&#32;_not_&#32;the&#32;number&#32;of&#32;MP3&#32;frames.</emphasis>
423 <emphasis role="comment">*/</emphasis>
424 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut);
425 
426 <emphasis role="comment">/*</emphasis>
427 <emphasis role="comment">Reads&#32;PCM&#32;frames&#32;as&#32;interleaved&#32;signed&#32;16-bit&#32;integer&#32;PCM.</emphasis>
428 <emphasis role="comment"></emphasis>
429 <emphasis role="comment">Note&#32;that&#32;framesToRead&#32;specifies&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;to&#32;read,&#32;_not_&#32;the&#32;number&#32;of&#32;MP3&#32;frames.</emphasis>
430 <emphasis role="comment">*/</emphasis>
431 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pBufferOut);
432 
433 <emphasis role="comment">/*</emphasis>
434 <emphasis role="comment">Seeks&#32;to&#32;a&#32;specific&#32;frame.</emphasis>
435 <emphasis role="comment"></emphasis>
436 <emphasis role="comment">Note&#32;that&#32;this&#32;is&#32;_not_&#32;an&#32;MP3&#32;frame,&#32;but&#32;rather&#32;a&#32;PCM&#32;frame.</emphasis>
437 <emphasis role="comment">*/</emphasis>
438 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex);
439 
440 <emphasis role="comment">/*</emphasis>
441 <emphasis role="comment">Calculates&#32;the&#32;total&#32;number&#32;of&#32;PCM&#32;frames&#32;in&#32;the&#32;MP3&#32;stream.&#32;Cannot&#32;be&#32;used&#32;for&#32;infinite&#32;streams&#32;such&#32;as&#32;internet</emphasis>
442 <emphasis role="comment">radio.&#32;Runs&#32;in&#32;linear&#32;time.&#32;Returns&#32;0&#32;on&#32;error.</emphasis>
443 <emphasis role="comment">*/</emphasis>
444 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8da91a2c2b1659be7393d799fed77754">drmp3_get_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
445 
446 <emphasis role="comment">/*</emphasis>
447 <emphasis role="comment">Calculates&#32;the&#32;total&#32;number&#32;of&#32;MP3&#32;frames&#32;in&#32;the&#32;MP3&#32;stream.&#32;Cannot&#32;be&#32;used&#32;for&#32;infinite&#32;streams&#32;such&#32;as&#32;internet</emphasis>
448 <emphasis role="comment">radio.&#32;Runs&#32;in&#32;linear&#32;time.&#32;Returns&#32;0&#32;on&#32;error.</emphasis>
449 <emphasis role="comment">*/</emphasis>
450 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a51e6dda0eebdefceed1612f20133b765">drmp3_get_mp3_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
451 
452 <emphasis role="comment">/*</emphasis>
453 <emphasis role="comment">Calculates&#32;the&#32;total&#32;number&#32;of&#32;MP3&#32;and&#32;PCM&#32;frames&#32;in&#32;the&#32;MP3&#32;stream.&#32;Cannot&#32;be&#32;used&#32;for&#32;infinite&#32;streams&#32;such&#32;as&#32;internet</emphasis>
454 <emphasis role="comment">radio.&#32;Runs&#32;in&#32;linear&#32;time.&#32;Returns&#32;0&#32;on&#32;error.</emphasis>
455 <emphasis role="comment"></emphasis>
456 <emphasis role="comment">This&#32;is&#32;equivalent&#32;to&#32;calling&#32;drmp3_get_mp3_frame_count()&#32;and&#32;drmp3_get_pcm_frame_count()&#32;except&#32;that&#32;it&apos;s&#32;more&#32;efficient.</emphasis>
457 <emphasis role="comment">*/</emphasis>
458 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pMP3FrameCount,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pPCMFrameCount);
459 
460 <emphasis role="comment">/*</emphasis>
461 <emphasis role="comment">Calculates&#32;the&#32;seekpoints&#32;based&#32;on&#32;PCM&#32;frames.&#32;This&#32;is&#32;slow.</emphasis>
462 <emphasis role="comment"></emphasis>
463 <emphasis role="comment">pSeekpoint&#32;count&#32;is&#32;a&#32;pointer&#32;to&#32;a&#32;uint32&#32;containing&#32;the&#32;seekpoint&#32;count.&#32;On&#32;input&#32;it&#32;contains&#32;the&#32;desired&#32;count.</emphasis>
464 <emphasis role="comment">On&#32;output&#32;it&#32;contains&#32;the&#32;actual&#32;count.&#32;The&#32;reason&#32;for&#32;this&#32;design&#32;is&#32;that&#32;the&#32;client&#32;may&#32;request&#32;too&#32;many</emphasis>
465 <emphasis role="comment">seekpoints,&#32;in&#32;which&#32;case&#32;dr_mp3&#32;will&#32;return&#32;a&#32;corrected&#32;count.</emphasis>
466 <emphasis role="comment"></emphasis>
467 <emphasis role="comment">Note&#32;that&#32;seektable&#32;seeking&#32;is&#32;not&#32;quite&#32;sample&#32;exact&#32;when&#32;the&#32;MP3&#32;stream&#32;contains&#32;inconsistent&#32;sample&#32;rates.</emphasis>
468 <emphasis role="comment">*/</emphasis>
469 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a31caabc58611fdd8d3849be909e0ebc8">drmp3_calculate_seek_points</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pSeekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints);
470 
471 <emphasis role="comment">/*</emphasis>
472 <emphasis role="comment">Binds&#32;a&#32;seek&#32;table&#32;to&#32;the&#32;decoder.</emphasis>
473 <emphasis role="comment"></emphasis>
474 <emphasis role="comment">This&#32;does&#32;_not_&#32;make&#32;a&#32;copy&#32;of&#32;pSeekPoints&#32;-&#32;it&#32;only&#32;references&#32;it.&#32;It&#32;is&#32;up&#32;to&#32;the&#32;application&#32;to&#32;ensure&#32;this</emphasis>
475 <emphasis role="comment">remains&#32;valid&#32;while&#32;it&#32;is&#32;bound&#32;to&#32;the&#32;decoder.</emphasis>
476 <emphasis role="comment"></emphasis>
477 <emphasis role="comment">Use&#32;drmp3_calculate_seek_points()&#32;to&#32;calculate&#32;the&#32;seek&#32;points.</emphasis>
478 <emphasis role="comment">*/</emphasis>
479 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a6fbf417308a71a006881246f9d9b579e">drmp3_bind_seek_table</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints);
480 
481 
482 <emphasis role="comment">/*</emphasis>
483 <emphasis role="comment">Opens&#32;an&#32;decodes&#32;an&#32;entire&#32;MP3&#32;stream&#32;as&#32;a&#32;single&#32;operation.</emphasis>
484 <emphasis role="comment"></emphasis>
485 <emphasis role="comment">On&#32;output&#32;pConfig&#32;will&#32;receive&#32;the&#32;channel&#32;count&#32;and&#32;sample&#32;rate&#32;of&#32;the&#32;stream.</emphasis>
486 <emphasis role="comment"></emphasis>
487 <emphasis role="comment">Free&#32;the&#32;returned&#32;pointer&#32;with&#32;drmp3_free().</emphasis>
488 <emphasis role="comment">*/</emphasis>
489 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4747a2a6b8e2c01bfc4f49b879e1ed72">drmp3_open_and_read_pcm_frames_f32</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
490 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaf9d7e42817f8ce7ca2ce1c74a5e7b51">drmp3_open_and_read_pcm_frames_s16</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
491 
492 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a5fab2d5b1d2aadd2b2004682013e26b1">drmp3_open_memory_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
493 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2f0ca09141bac061ebc7ba774605b90d">drmp3_open_memory_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
494 
495 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
496 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a5821e5a5c6590922e3b2380c33b2ff02">drmp3_open_file_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
497 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a31cae6872e81b24cb3950f96144dc3e9">drmp3_open_file_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
498 <emphasis role="preprocessor">#endif</emphasis>
499 
500 <emphasis role="comment">/*</emphasis>
501 <emphasis role="comment">Allocates&#32;a&#32;block&#32;of&#32;memory&#32;on&#32;the&#32;heap.</emphasis>
502 <emphasis role="comment">*/</emphasis>
503 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a7b7196f1d807c985efb2b02435206932">drmp3_malloc</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
504 
505 <emphasis role="comment">/*</emphasis>
506 <emphasis role="comment">Frees&#32;any&#32;memory&#32;that&#32;was&#32;allocated&#32;by&#32;a&#32;public&#32;drmp3&#32;API.</emphasis>
507 <emphasis role="comment">*/</emphasis>
508 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks);
509 
510 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
511 }
512 <emphasis role="preprocessor">#endif</emphasis>
513 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;dr_mp3_h&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
514 
515 
516 <emphasis role="comment">/************************************************************************************************************************************************************</emphasis>
517 <emphasis role="comment">&#32;************************************************************************************************************************************************************</emphasis>
518 <emphasis role="comment"></emphasis>
519 <emphasis role="comment">&#32;IMPLEMENTATION</emphasis>
520 <emphasis role="comment"></emphasis>
521 <emphasis role="comment">&#32;************************************************************************************************************************************************************</emphasis>
522 <emphasis role="comment">&#32;************************************************************************************************************************************************************/</emphasis>
523 <emphasis role="preprocessor">#if&#32;defined(DR_MP3_IMPLEMENTATION)&#32;||&#32;defined(DRMP3_IMPLEMENTATION)</emphasis>
524 <emphasis role="preprocessor">#ifndef&#32;dr_mp3_c</emphasis>
525 <emphasis role="preprocessor">#define&#32;dr_mp3_c</emphasis>
526 
527 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
528 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
529 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>&#32;<emphasis role="comment">/*&#32;For&#32;INT_MAX&#32;*/</emphasis>
530 
531 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a481d06773624e40b9669ac965af4ab0f">drmp3_version</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pMajor,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pMinor,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pRevision)
532 {
533 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMajor)&#32;{
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pMajor&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ab25e71e73377f16b7df0000057aeb1ec">DRMP3_VERSION_MAJOR</link>;
535 &#32;&#32;&#32;&#32;}
536 
537 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMinor)&#32;{
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pMinor&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a7624242d4da373b51f19032378c83ae5">DRMP3_VERSION_MINOR</link>;
539 &#32;&#32;&#32;&#32;}
540 
541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pRevision)&#32;{
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pRevision&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1abd5b1fb4be840405bdf039a4ca498b44">DRMP3_VERSION_REVISION</link>;
543 &#32;&#32;&#32;&#32;}
544 }
545 
546 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad99971bf0214c3be8ad2b94489230b12">drmp3_version_string</link>(<emphasis role="keywordtype">void</emphasis>)
547 {
548 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae17b245093fb0c384e7c216b334d1302">DRMP3_VERSION_STRING</link>;
549 }
550 
551 <emphasis role="comment">/*&#32;Disable&#32;SIMD&#32;when&#32;compiling&#32;with&#32;TCC&#32;for&#32;now.&#32;*/</emphasis>
552 <emphasis role="preprocessor">#if&#32;defined(__TINYC__)</emphasis>
553 <emphasis role="preprocessor">#define&#32;DR_MP3_NO_SIMD</emphasis>
554 <emphasis role="preprocessor">#endif</emphasis>
555 
556 <emphasis role="preprocessor">#define&#32;DRMP3_OFFSET_PTR(p,&#32;offset)&#32;((void*)((drmp3_uint8*)(p)&#32;+&#32;(offset)))</emphasis>
557 
558 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_FREE_FORMAT_FRAME_SIZE&#32;&#32;2304&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;more&#32;than&#32;ISO&#32;spec&apos;s&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
559 <emphasis role="preprocessor">#ifndef&#32;DRMP3_MAX_FRAME_SYNC_MATCHES</emphasis>
560 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_FRAME_SYNC_MATCHES&#32;&#32;&#32;&#32;&#32;&#32;10</emphasis>
561 <emphasis role="preprocessor">#endif</emphasis>
562 
563 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES&#32;&#32;DRMP3_MAX_FREE_FORMAT_FRAME_SIZE&#32;</emphasis><emphasis role="comment">/*&#32;MUST&#32;be&#32;&gt;=&#32;320000/8/32000*1152&#32;=&#32;1440&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
564 
565 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_BITRESERVOIR_BYTES&#32;&#32;&#32;&#32;&#32;&#32;511</emphasis>
566 <emphasis role="preprocessor">#define&#32;DRMP3_SHORT_BLOCK_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2</emphasis>
567 <emphasis role="preprocessor">#define&#32;DRMP3_STOP_BLOCK_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3</emphasis>
568 <emphasis role="preprocessor">#define&#32;DRMP3_MODE_MONO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3</emphasis>
569 <emphasis role="preprocessor">#define&#32;DRMP3_MODE_JOINT_STEREO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
570 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4</emphasis>
571 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_MONO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[3])&#32;&amp;&#32;0xC0)&#32;==&#32;0xC0)</emphasis>
572 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_MS_STEREO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[3])&#32;&amp;&#32;0xE0)&#32;==&#32;0x60)</emphasis>
573 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_FREE_FORMAT(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[2])&#32;&amp;&#32;0xF0)&#32;==&#32;0)</emphasis>
574 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_CRC(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(!((h[1])&#32;&amp;&#32;1))</emphasis>
575 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_PADDING(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[2])&#32;&amp;&#32;0x2)</emphasis>
576 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_MPEG1(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1])&#32;&amp;&#32;0x8)</emphasis>
577 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_NOT_MPEG25(h)&#32;&#32;&#32;&#32;&#32;&#32;((h[1])&#32;&amp;&#32;0x10)</emphasis>
578 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_I_STEREO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[3])&#32;&amp;&#32;0x10)</emphasis>
579 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_MS_STEREO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[3])&#32;&amp;&#32;0x20)</emphasis>
580 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_STEREO_MODE(h)&#32;&#32;&#32;&#32;&#32;&#32;(((h[3])&#32;&gt;&gt;&#32;6)&#32;&amp;&#32;3)</emphasis>
581 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_STEREO_MODE_EXT(h)&#32;&#32;(((h[3])&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;3)</emphasis>
582 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_LAYER(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[1])&#32;&gt;&gt;&#32;1)&#32;&amp;&#32;3)</emphasis>
583 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_BITRATE(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[2])&#32;&gt;&gt;&#32;4)</emphasis>
584 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_SAMPLE_RATE(h)&#32;&#32;&#32;&#32;&#32;&#32;(((h[2])&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;3)</emphasis>
585 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_MY_SAMPLE_RATE(h)&#32;&#32;&#32;(DRMP3_HDR_GET_SAMPLE_RATE(h)&#32;+&#32;(((h[1]&#32;&gt;&gt;&#32;3)&#32;&amp;&#32;1)&#32;+&#32;((h[1]&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;1))*3)</emphasis>
586 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_FRAME_576(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1]&#32;&amp;&#32;14)&#32;==&#32;2)</emphasis>
587 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_LAYER_1(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1]&#32;&amp;&#32;6)&#32;==&#32;6)</emphasis>
588 
589 <emphasis role="preprocessor">#define&#32;DRMP3_BITS_DEQUANTIZER_OUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1</emphasis>
590 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_SCF&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(255&#32;+&#32;DRMP3_BITS_DEQUANTIZER_OUT*4&#32;-&#32;210)</emphasis>
591 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_SCFI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((DRMP3_MAX_SCF&#32;+&#32;3)&#32;&amp;&#32;~3)</emphasis>
592 
593 <emphasis role="preprocessor">#define&#32;DRMP3_MIN(a,&#32;b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((a)&#32;&gt;&#32;(b)&#32;?&#32;(b)&#32;:&#32;(a))</emphasis>
594 <emphasis role="preprocessor">#define&#32;DRMP3_MAX(a,&#32;b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((a)&#32;&lt;&#32;(b)&#32;?&#32;(b)&#32;:&#32;(a))</emphasis>
595 
596 <emphasis role="preprocessor">#if&#32;!defined(DR_MP3_NO_SIMD)</emphasis>
597 
598 <emphasis role="preprocessor">#if&#32;!defined(DR_MP3_ONLY_SIMD)&#32;&amp;&amp;&#32;(defined(_M_X64)&#32;||&#32;defined(__x86_64__)&#32;||&#32;defined(__aarch64__)&#32;||&#32;defined(_M_ARM64))</emphasis>
599 <emphasis role="comment">/*&#32;x64&#32;always&#32;have&#32;SSE2,&#32;arm64&#32;always&#32;have&#32;neon,&#32;no&#32;need&#32;for&#32;generic&#32;code&#32;*/</emphasis>
600 <emphasis role="preprocessor">#define&#32;DR_MP3_ONLY_SIMD</emphasis>
601 <emphasis role="preprocessor">#endif</emphasis>
602 
603 <emphasis role="preprocessor">#if&#32;((defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400)&#32;&amp;&amp;&#32;defined(_M_X64))&#32;||&#32;((defined(__i386)&#32;||&#32;defined(_M_IX86)&#32;||&#32;defined(__i386__)&#32;||&#32;defined(__x86_64__))&#32;&amp;&amp;&#32;((defined(_M_IX86_FP)&#32;&amp;&amp;&#32;_M_IX86_FP&#32;==&#32;2)&#32;||&#32;defined(__SSE2__)))</emphasis>
604 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
605 <emphasis role="preprocessor">#include&#32;&lt;intrin.h&gt;</emphasis>
606 <emphasis role="preprocessor">#endif</emphasis>
607 <emphasis role="preprocessor">#include&#32;&lt;emmintrin.h&gt;</emphasis>
608 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SSE&#32;1</emphasis>
609 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;1</emphasis>
610 <emphasis role="preprocessor">#define&#32;DRMP3_VSTORE&#32;_mm_storeu_ps</emphasis>
611 <emphasis role="preprocessor">#define&#32;DRMP3_VLD&#32;_mm_loadu_ps</emphasis>
612 <emphasis role="preprocessor">#define&#32;DRMP3_VSET&#32;_mm_set1_ps</emphasis>
613 <emphasis role="preprocessor">#define&#32;DRMP3_VADD&#32;_mm_add_ps</emphasis>
614 <emphasis role="preprocessor">#define&#32;DRMP3_VSUB&#32;_mm_sub_ps</emphasis>
615 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL&#32;_mm_mul_ps</emphasis>
616 <emphasis role="preprocessor">#define&#32;DRMP3_VMAC(a,&#32;x,&#32;y)&#32;_mm_add_ps(a,&#32;_mm_mul_ps(x,&#32;y))</emphasis>
617 <emphasis role="preprocessor">#define&#32;DRMP3_VMSB(a,&#32;x,&#32;y)&#32;_mm_sub_ps(a,&#32;_mm_mul_ps(x,&#32;y))</emphasis>
618 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL_S(x,&#32;s)&#32;&#32;_mm_mul_ps(x,&#32;_mm_set1_ps(s))</emphasis>
619 <emphasis role="preprocessor">#define&#32;DRMP3_VREV(x)&#32;_mm_shuffle_ps(x,&#32;x,&#32;_MM_SHUFFLE(0,&#32;1,&#32;2,&#32;3))</emphasis>
620 <emphasis role="keyword">typedef</emphasis>&#32;__m128&#32;drmp3_f4;
621 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;||&#32;defined(DR_MP3_ONLY_SIMD)</emphasis>
622 <emphasis role="preprocessor">#define&#32;drmp3_cpuid&#32;__cpuid</emphasis>
623 <emphasis role="preprocessor">#else</emphasis>
624 <emphasis role="keyword">static</emphasis>&#32;__inline__&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((always_inline))&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_cpuid(<emphasis role="keywordtype">int</emphasis>&#32;CPUInfo[],&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;InfoType)
625 {
626 <emphasis role="preprocessor">#if&#32;defined(__PIC__)</emphasis>
627 &#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
628 #<emphasis role="keywordflow">if</emphasis>&#32;defined(__x86_64__)
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;push&#32;%%rbx\n&quot;</emphasis>
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;cpuid\n&quot;</emphasis>
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;xchgl&#32;%%ebx,&#32;%1\n&quot;</emphasis>
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;pop&#32;&#32;%%rbx\n&quot;</emphasis>
633 #<emphasis role="keywordflow">else</emphasis>
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;xchgl&#32;%%ebx,&#32;%1\n&quot;</emphasis>
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;cpuid\n&quot;</emphasis>
636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;xchgl&#32;%%ebx,&#32;%1\n&quot;</emphasis>
637 #endif
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=a&quot;</emphasis>&#32;(CPUInfo[0]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(CPUInfo[1]),&#32;<emphasis role="stringliteral">&quot;=c&quot;</emphasis>&#32;(CPUInfo[2]),&#32;<emphasis role="stringliteral">&quot;=d&quot;</emphasis>&#32;(CPUInfo[3])
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>&#32;(InfoType));
640 <emphasis role="preprocessor">#else</emphasis>
641 &#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;cpuid&quot;</emphasis>
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=a&quot;</emphasis>&#32;(CPUInfo[0]),&#32;<emphasis role="stringliteral">&quot;=b&quot;</emphasis>&#32;(CPUInfo[1]),&#32;<emphasis role="stringliteral">&quot;=c&quot;</emphasis>&#32;(CPUInfo[2]),&#32;<emphasis role="stringliteral">&quot;=d&quot;</emphasis>&#32;(CPUInfo[3])
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>&#32;(InfoType));
645 <emphasis role="preprocessor">#endif</emphasis>
646 }
647 <emphasis role="preprocessor">#endif</emphasis>
648 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_have_simd(<emphasis role="keywordtype">void</emphasis>)
649 {
650 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
651 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
652 <emphasis role="preprocessor">#else</emphasis>
653 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;g_have_simd;
654 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;CPUInfo[4];
655 <emphasis role="preprocessor">#ifdef&#32;MINIMP3_TEST</emphasis>
656 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;g_counter;
657 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(g_counter++&#32;&gt;&#32;100)
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
659 <emphasis role="preprocessor">#endif</emphasis>
660 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(g_have_simd)
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>;
662 &#32;&#32;&#32;&#32;drmp3_cpuid(CPUInfo,&#32;0);
663 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CPUInfo[0]&#32;&gt;&#32;0)
664 &#32;&#32;&#32;&#32;{
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_cpuid(CPUInfo,&#32;1);
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g_have_simd&#32;=&#32;(CPUInfo[3]&#32;&amp;&#32;(1&#32;&lt;&lt;&#32;26))&#32;+&#32;1;&#32;<emphasis role="comment">/*&#32;SSE2&#32;*/</emphasis>
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_have_simd&#32;-&#32;1;
668 &#32;&#32;&#32;&#32;}
669 
670 <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>:
671 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_have_simd&#32;-&#32;1;
672 <emphasis role="preprocessor">#endif</emphasis>
673 }
674 <emphasis role="preprocessor">#elif&#32;defined(__ARM_NEON)&#32;||&#32;defined(__aarch64__)&#32;||&#32;defined(_M_ARM64)</emphasis>
675 <emphasis role="preprocessor">#include&#32;&lt;arm_neon.h&gt;</emphasis>
676 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SSE&#32;0</emphasis>
677 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;1</emphasis>
678 <emphasis role="preprocessor">#define&#32;DRMP3_VSTORE&#32;vst1q_f32</emphasis>
679 <emphasis role="preprocessor">#define&#32;DRMP3_VLD&#32;vld1q_f32</emphasis>
680 <emphasis role="preprocessor">#define&#32;DRMP3_VSET&#32;vmovq_n_f32</emphasis>
681 <emphasis role="preprocessor">#define&#32;DRMP3_VADD&#32;vaddq_f32</emphasis>
682 <emphasis role="preprocessor">#define&#32;DRMP3_VSUB&#32;vsubq_f32</emphasis>
683 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL&#32;vmulq_f32</emphasis>
684 <emphasis role="preprocessor">#define&#32;DRMP3_VMAC(a,&#32;x,&#32;y)&#32;vmlaq_f32(a,&#32;x,&#32;y)</emphasis>
685 <emphasis role="preprocessor">#define&#32;DRMP3_VMSB(a,&#32;x,&#32;y)&#32;vmlsq_f32(a,&#32;x,&#32;y)</emphasis>
686 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL_S(x,&#32;s)&#32;&#32;vmulq_f32(x,&#32;vmovq_n_f32(s))</emphasis>
687 <emphasis role="preprocessor">#define&#32;DRMP3_VREV(x)&#32;vcombine_f32(vget_high_f32(vrev64q_f32(x)),&#32;vget_low_f32(vrev64q_f32(x)))</emphasis>
688 <emphasis role="keyword">typedef</emphasis>&#32;float32x4_t&#32;drmp3_f4;
689 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_have_simd(<emphasis role="keywordtype">void</emphasis>)
690 {&#32;&#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;detect&#32;neon&#32;for&#32;!DR_MP3_ONLY_SIMD&#32;*/</emphasis>
691 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
692 }
693 <emphasis role="preprocessor">#else</emphasis>
694 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SSE&#32;0</emphasis>
695 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;0</emphasis>
696 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
697 <emphasis role="preprocessor">#error&#32;DR_MP3_ONLY_SIMD&#32;used,&#32;but&#32;SSE/NEON&#32;not&#32;enabled</emphasis>
698 <emphasis role="preprocessor">#endif</emphasis>
699 <emphasis role="preprocessor">#endif</emphasis>
700 
701 <emphasis role="preprocessor">#else</emphasis>
702 
703 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;0</emphasis>
704 
705 <emphasis role="preprocessor">#endif</emphasis>
706 
707 <emphasis role="preprocessor">#if&#32;defined(__ARM_ARCH)&#32;&amp;&amp;&#32;(__ARM_ARCH&#32;&gt;=&#32;6)&#32;&amp;&amp;&#32;!defined(__aarch64__)&#32;&amp;&amp;&#32;!defined(_M_ARM64)</emphasis>
708 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_ARMV6&#32;1</emphasis>
709 <emphasis role="keyword">static</emphasis>&#32;__inline__&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((always_inline))&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>&#32;drmp3_clip_int16_arm(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
710 {
711 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;0;
712 &#32;&#32;&#32;&#32;__asm__&#32;(<emphasis role="stringliteral">&quot;ssat&#32;%0,&#32;#16,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>));
713 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
714 }
715 <emphasis role="preprocessor">#else</emphasis>
716 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_ARMV6&#32;0</emphasis>
717 <emphasis role="preprocessor">#endif</emphasis>
718 
719 
720 <emphasis role="comment">/*&#32;Standard&#32;library&#32;stuff.&#32;*/</emphasis>
721 <emphasis role="preprocessor">#ifndef&#32;DRMP3_ASSERT</emphasis>
722 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
723 <emphasis role="preprocessor">#define&#32;DRMP3_ASSERT(expression)&#32;assert(expression)</emphasis>
724 <emphasis role="preprocessor">#endif</emphasis>
725 <emphasis role="preprocessor">#ifndef&#32;DRMP3_COPY_MEMORY</emphasis>
726 <emphasis role="preprocessor">#define&#32;DRMP3_COPY_MEMORY(dst,&#32;src,&#32;sz)&#32;memcpy((dst),&#32;(src),&#32;(sz))</emphasis>
727 <emphasis role="preprocessor">#endif</emphasis>
728 <emphasis role="preprocessor">#ifndef&#32;DRMP3_MOVE_MEMORY</emphasis>
729 <emphasis role="preprocessor">#define&#32;DRMP3_MOVE_MEMORY(dst,&#32;src,&#32;sz)&#32;memmove((dst),&#32;(src),&#32;(sz))</emphasis>
730 <emphasis role="preprocessor">#endif</emphasis>
731 <emphasis role="preprocessor">#ifndef&#32;DRMP3_ZERO_MEMORY</emphasis>
732 <emphasis role="preprocessor">#define&#32;DRMP3_ZERO_MEMORY(p,&#32;sz)&#32;memset((p),&#32;0,&#32;(sz))</emphasis>
733 <emphasis role="preprocessor">#endif</emphasis>
734 <emphasis role="preprocessor">#define&#32;DRMP3_ZERO_OBJECT(p)&#32;DRMP3_ZERO_MEMORY((p),&#32;sizeof(*(p)))</emphasis>
735 <emphasis role="preprocessor">#ifndef&#32;DRMP3_MALLOC</emphasis>
736 <emphasis role="preprocessor">#define&#32;DRMP3_MALLOC(sz)&#32;malloc((sz))</emphasis>
737 <emphasis role="preprocessor">#endif</emphasis>
738 <emphasis role="preprocessor">#ifndef&#32;DRMP3_REALLOC</emphasis>
739 <emphasis role="preprocessor">#define&#32;DRMP3_REALLOC(p,&#32;sz)&#32;realloc((p),&#32;(sz))</emphasis>
740 <emphasis role="preprocessor">#endif</emphasis>
741 <emphasis role="preprocessor">#ifndef&#32;DRMP3_FREE</emphasis>
742 <emphasis role="preprocessor">#define&#32;DRMP3_FREE(p)&#32;free((p))</emphasis>
743 <emphasis role="preprocessor">#endif</emphasis>
744 
745 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
746 {
747 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ad8a8baf08bc0399738960c9259571911">buf</link>;
748 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos,&#32;limit;
749 }&#32;drmp3_bs;
750 
751 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
752 {
753 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scf[3*64];
754 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;total_bands,&#32;stereo_bands,&#32;bitalloc[64],&#32;scfcod[64];
755 }&#32;drmp3_L12_scale_info;
756 
757 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
758 {
759 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;tab_offset,&#32;code_tab_width,&#32;band_count;
760 }&#32;drmp3_L12_subband_alloc;
761 
762 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
763 {
764 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfbtab;
765 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;part_23_length,&#32;big_values,&#32;scalefac_compress;
766 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;global_gain,&#32;block_type,&#32;mixed_block_flag,&#32;n_long_sfb,&#32;n_short_sfb;
767 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;table_select[3],&#32;region_count[3],&#32;subblock_gain[3];
768 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;preflag,&#32;scalefac_scale,&#32;count1_table,&#32;scfsi;
769 }&#32;drmp3_L3_gr_info;
770 
771 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
772 {
773 &#32;&#32;&#32;&#32;drmp3_bs&#32;bs;
774 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;maindata[DRMP3_MAX_BITRESERVOIR_BYTES&#32;+&#32;DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES];
775 &#32;&#32;&#32;&#32;drmp3_L3_gr_info&#32;gr_info[4];
776 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;grbuf[2][576],&#32;scf[40],&#32;syn[18&#32;+&#32;15][2*32];
777 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;ist_pos[2][39];
778 }&#32;drmp3dec_scratch;
779 
780 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_bs_init(drmp3_bs&#32;*bs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes)
781 {
782 &#32;&#32;&#32;&#32;bs-&gt;buf&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
783 &#32;&#32;&#32;&#32;bs-&gt;pos&#32;&#32;&#32;=&#32;0;
784 &#32;&#32;&#32;&#32;bs-&gt;limit&#32;=&#32;bytes*8;
785 }
786 
787 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_bs_get_bits(drmp3_bs&#32;*bs,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
788 {
789 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;next,&#32;cache&#32;=&#32;0,&#32;s&#32;=&#32;bs-&gt;pos&#32;&amp;&#32;7;
790 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;shl&#32;=&#32;n&#32;+&#32;s;
791 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*p&#32;=&#32;bs-&gt;buf&#32;+&#32;(bs-&gt;pos&#32;&gt;&gt;&#32;3);
792 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bs-&gt;pos&#32;+=&#32;n)&#32;&gt;&#32;bs-&gt;limit)
793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
794 &#32;&#32;&#32;&#32;next&#32;=&#32;*p++&#32;&amp;&#32;(255&#32;&gt;&gt;&#32;s);
795 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((shl&#32;-=&#32;8)&#32;&gt;&#32;0)
796 &#32;&#32;&#32;&#32;{
797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache&#32;|=&#32;next&#32;&lt;&lt;&#32;shl;
798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next&#32;=&#32;*p++;
799 &#32;&#32;&#32;&#32;}
800 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cache&#32;|&#32;(next&#32;&gt;&gt;&#32;-shl);
801 }
802 
803 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_valid(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
804 {
805 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h[0]&#32;==&#32;0xff&#32;&amp;&amp;
806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1]&#32;&amp;&#32;0xF0)&#32;==&#32;0xf0&#32;||&#32;(h[1]&#32;&amp;&#32;0xFE)&#32;==&#32;0xe2)&#32;&amp;&amp;
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_HDR_GET_LAYER(h)&#32;!=&#32;0)&#32;&amp;&amp;
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_HDR_GET_BITRATE(h)&#32;!=&#32;15)&#32;&amp;&amp;
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_HDR_GET_SAMPLE_RATE(h)&#32;!=&#32;3);
810 }
811 
812 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_compare(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h2)
813 {
814 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_hdr_valid(h2)&#32;&amp;&amp;
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h1[1]&#32;^&#32;h2[1])&#32;&amp;&#32;0xFE)&#32;==&#32;0&#32;&amp;&amp;
816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h1[2]&#32;^&#32;h2[2])&#32;&amp;&#32;0x0C)&#32;==&#32;0&#32;&amp;&amp;
817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!(DRMP3_HDR_IS_FREE_FORMAT(h1)&#32;^&#32;DRMP3_HDR_IS_FREE_FORMAT(h2));
818 }
819 
820 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;drmp3_hdr_bitrate_kbps(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
821 {
822 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;halfrate[2][3][15]&#32;=&#32;{
823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;{&#32;0,4,8,12,16,20,24,28,32,40,48,56,64,72,80&#32;},&#32;{&#32;0,4,8,12,16,20,24,28,32,40,48,56,64,72,80&#32;},&#32;{&#32;0,16,24,28,32,40,48,56,64,72,80,88,96,112,128&#32;}&#32;},
824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;{&#32;0,16,20,24,28,32,40,48,56,64,80,96,112,128,160&#32;},&#32;{&#32;0,16,24,28,32,40,48,56,64,80,96,112,128,160,192&#32;},&#32;{&#32;0,16,32,48,64,80,96,112,128,144,160,176,192,208,224&#32;}&#32;},
825 &#32;&#32;&#32;&#32;};
826 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2*halfrate[!!DRMP3_HDR_TEST_MPEG1(h)][DRMP3_HDR_GET_LAYER(h)&#32;-&#32;1][DRMP3_HDR_GET_BITRATE(h)];
827 }
828 
829 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;drmp3_hdr_sample_rate_hz(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
830 {
831 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;g_hz[3]&#32;=&#32;{&#32;44100,&#32;48000,&#32;32000&#32;};
832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_hz[DRMP3_HDR_GET_SAMPLE_RATE(h)]&#32;&gt;&gt;&#32;(int)!DRMP3_HDR_TEST_MPEG1(h)&#32;&gt;&gt;&#32;(int)!DRMP3_HDR_TEST_NOT_MPEG25(h);
833 }
834 
835 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;drmp3_hdr_frame_samples(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
836 {
837 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DRMP3_HDR_IS_LAYER_1(h)&#32;?&#32;384&#32;:&#32;(1152&#32;&gt;&gt;&#32;(int)DRMP3_HDR_IS_FRAME_576(h));
838 }
839 
840 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_frame_bytes(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;free_format_size)
841 {
842 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes&#32;=&#32;drmp3_hdr_frame_samples(h)*drmp3_hdr_bitrate_kbps(h)*125/drmp3_hdr_sample_rate_hz(h);
843 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_LAYER_1(h))
844 &#32;&#32;&#32;&#32;{
845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_bytes&#32;&amp;=&#32;~3;&#32;<emphasis role="comment">/*&#32;slot&#32;align&#32;*/</emphasis>
846 &#32;&#32;&#32;&#32;}
847 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frame_bytes&#32;?&#32;frame_bytes&#32;:&#32;free_format_size;
848 }
849 
850 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_padding(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
851 {
852 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DRMP3_HDR_TEST_PADDING(h)&#32;?&#32;(DRMP3_HDR_IS_LAYER_1(h)&#32;?&#32;4&#32;:&#32;1)&#32;:&#32;0;
853 }
854 
855 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_ONLY_MP3</emphasis>
856 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;*drmp3_L12_subband_alloc_table(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;drmp3_L12_scale_info&#32;*sci)
857 {
858 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;*alloc;
859 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;DRMP3_HDR_GET_STEREO_MODE(hdr);
860 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands,&#32;stereo_bands&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;DRMP3_MODE_MONO)&#32;?&#32;0&#32;:&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;DRMP3_MODE_JOINT_STEREO)&#32;?&#32;(DRMP3_HDR_GET_STEREO_MODE_EXT(hdr)&#32;&lt;&lt;&#32;2)&#32;+&#32;4&#32;:&#32;32;
861 
862 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_LAYER_1(hdr))
863 &#32;&#32;&#32;&#32;{
864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L1[]&#32;=&#32;{&#32;{&#32;76,&#32;4,&#32;32&#32;}&#32;};
865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L1;
866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;32;
867 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!DRMP3_HDR_TEST_MPEG1(hdr))
868 &#32;&#32;&#32;&#32;{
869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L2M2[]&#32;=&#32;{&#32;{&#32;60,&#32;4,&#32;4&#32;},&#32;{&#32;44,&#32;3,&#32;7&#32;},&#32;{&#32;44,&#32;2,&#32;19&#32;}&#32;};
870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L2M2;
871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;30;
872 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
873 &#32;&#32;&#32;&#32;{
874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L2M1[]&#32;=&#32;{&#32;{&#32;0,&#32;4,&#32;3&#32;},&#32;{&#32;16,&#32;4,&#32;8&#32;},&#32;{&#32;32,&#32;3,&#32;12&#32;},&#32;{&#32;40,&#32;2,&#32;7&#32;}&#32;};
875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sample_rate_idx&#32;=&#32;DRMP3_HDR_GET_SAMPLE_RATE(hdr);
876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;kbps&#32;=&#32;drmp3_hdr_bitrate_kbps(hdr)&#32;&gt;&gt;&#32;(int)(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;!=&#32;DRMP3_MODE_MONO);
877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!kbps)&#32;<emphasis role="comment">/*&#32;free-format&#32;*/</emphasis>
878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kbps&#32;=&#32;192;
880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
881 
882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L2M1;
883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;27;
884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kbps&#32;&lt;&#32;56)
885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L2M1_lowrate[]&#32;=&#32;{&#32;{&#32;44,&#32;4,&#32;2&#32;},&#32;{&#32;44,&#32;3,&#32;10&#32;}&#32;};
887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L2M1_lowrate;
888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;sample_rate_idx&#32;==&#32;2&#32;?&#32;12&#32;:&#32;8;
889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kbps&#32;&gt;=&#32;96&#32;&amp;&amp;&#32;sample_rate_idx&#32;!=&#32;1)
890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;30;
892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
893 &#32;&#32;&#32;&#32;}
894 
895 &#32;&#32;&#32;&#32;sci-&gt;total_bands&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)nbands;
896 &#32;&#32;&#32;&#32;sci-&gt;stereo_bands&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)DRMP3_MIN(stereo_bands,&#32;nbands);
897 
898 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;alloc;
899 }
900 
901 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L12_read_scalefactors(drmp3_bs&#32;*bs,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*pba,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scfcod,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bands,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf)
902 {
903 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_deq_L12[18*3]&#32;=&#32;{
904 <emphasis role="preprocessor">#define&#32;DRMP3_DQ(x)&#32;9.53674316e-07f/x,&#32;7.56931807e-07f/x,&#32;6.00777173e-07f/x</emphasis>
905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DQ(3),DRMP3_DQ(7),DRMP3_DQ(15),DRMP3_DQ(31),DRMP3_DQ(63),DRMP3_DQ(127),DRMP3_DQ(255),DRMP3_DQ(511),DRMP3_DQ(1023),DRMP3_DQ(2047),DRMP3_DQ(4095),DRMP3_DQ(8191),DRMP3_DQ(16383),DRMP3_DQ(32767),DRMP3_DQ(65535),DRMP3_DQ(3),DRMP3_DQ(5),DRMP3_DQ(9)
906 &#32;&#32;&#32;&#32;};
907 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;m;
908 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bands;&#32;i++)
909 &#32;&#32;&#32;&#32;{
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s&#32;=&#32;0;
911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ba&#32;=&#32;*pba++;
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacemask">mask</link>&#32;=&#32;ba&#32;?&#32;4&#32;+&#32;((19&#32;&gt;&gt;&#32;scfcod[i])&#32;&amp;&#32;3)&#32;:&#32;0;
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(m&#32;=&#32;4;&#32;m;&#32;m&#32;&gt;&gt;=&#32;1)
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacemask">mask</link>&#32;&amp;&#32;m)
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;drmp3_bs_get_bits(bs,&#32;6);
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;g_deq_L12[ba*3&#32;-&#32;6&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;%&#32;3]*(int)(1&#32;&lt;&lt;&#32;21&#32;&gt;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>/3);
919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*scf++&#32;=&#32;s;
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
922 &#32;&#32;&#32;&#32;}
923 }
924 
925 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L12_read_scale_info(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;drmp3_bs&#32;*bs,&#32;drmp3_L12_scale_info&#32;*sci)
926 {
927 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_bitalloc_code_tab[]&#32;=&#32;{
928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,&#32;3,&#32;4,&#32;5,6,7,&#32;8,9,10,11,12,13,14,15,16,
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,&#32;3,19,4,5,&#32;6,7,&#32;8,&#32;9,10,11,12,13,16,
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,&#32;3,19,4,5,16,
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,16,
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,19,&#32;4,5,6,&#32;7,8,&#32;9,10,11,12,13,14,15,
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,&#32;3,19,4,5,&#32;6,7,&#32;8,&#32;9,10,11,12,13,14,
934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;2,&#32;3,&#32;4,&#32;5,6,7,&#32;8,9,10,11,12,13,14,15,16
935 &#32;&#32;&#32;&#32;};
936 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;*subband_alloc&#32;=&#32;drmp3_L12_subband_alloc_table(hdr,&#32;sci);
937 
938 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k&#32;=&#32;0,&#32;ba_bits&#32;=&#32;0;
939 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ba_code_tab&#32;=&#32;g_bitalloc_code_tab;
940 
941 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sci-&gt;total_bands;&#32;i++)
942 &#32;&#32;&#32;&#32;{
943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;ba;
944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;k)
945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;subband_alloc-&gt;band_count;
947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba_bits&#32;=&#32;subband_alloc-&gt;code_tab_width;
948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba_code_tab&#32;=&#32;g_bitalloc_code_tab&#32;+&#32;subband_alloc-&gt;tab_offset;
949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subband_alloc++;
950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba&#32;=&#32;ba_code_tab[drmp3_bs_get_bits(bs,&#32;ba_bits)];
952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;bitalloc[2*i]&#32;=&#32;ba;
953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;sci-&gt;stereo_bands)
954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba&#32;=&#32;ba_code_tab[drmp3_bs_get_bits(bs,&#32;ba_bits)];
956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;bitalloc[2*i&#32;+&#32;1]&#32;=&#32;sci-&gt;stereo_bands&#32;?&#32;ba&#32;:&#32;0;
958 &#32;&#32;&#32;&#32;}
959 
960 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2*sci-&gt;total_bands;&#32;i++)
961 &#32;&#32;&#32;&#32;{
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;scfcod[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(sci-&gt;bitalloc[i]&#32;?&#32;DRMP3_HDR_IS_LAYER_1(hdr)&#32;?&#32;2&#32;:&#32;drmp3_bs_get_bits(bs,&#32;2)&#32;:&#32;6);
963 &#32;&#32;&#32;&#32;}
964 
965 &#32;&#32;&#32;&#32;drmp3_L12_read_scalefactors(bs,&#32;sci-&gt;bitalloc,&#32;sci-&gt;scfcod,&#32;sci-&gt;total_bands*2,&#32;sci-&gt;scf);
966 
967 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;sci-&gt;stereo_bands;&#32;i&#32;&lt;&#32;sci-&gt;total_bands;&#32;i++)
968 &#32;&#32;&#32;&#32;{
969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;bitalloc[2*i&#32;+&#32;1]&#32;=&#32;0;
970 &#32;&#32;&#32;&#32;}
971 }
972 
973 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_L12_dequantize_granule(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;drmp3_bs&#32;*bs,&#32;drmp3_L12_scale_info&#32;*sci,&#32;<emphasis role="keywordtype">int</emphasis>&#32;group_size)
974 {
975 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j,&#32;k,&#32;choff&#32;=&#32;576;
976 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)
977 &#32;&#32;&#32;&#32;{
978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;grbuf&#32;+&#32;group_size*j;
979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2*sci-&gt;total_bands;&#32;i++)
980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ba&#32;=&#32;sci-&gt;bitalloc[i];
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ba&#32;!=&#32;0)
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ba&#32;&lt;&#32;17)
985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;half&#32;=&#32;(1&#32;&lt;&lt;&#32;(ba&#32;-&#32;1))&#32;-&#32;1;
987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;group_size;&#32;k++)
988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k]&#32;=&#32;(float)((<emphasis role="keywordtype">int</emphasis>)drmp3_bs_get_bits(bs,&#32;ba)&#32;-&#32;half);
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>&#32;=&#32;(2&#32;&lt;&lt;&#32;(ba&#32;-&#32;17))&#32;+&#32;1;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;3,&#32;5,&#32;9&#32;*/</emphasis>
994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;code&#32;=&#32;drmp3_bs_get_bits(bs,&#32;mod&#32;+&#32;2&#32;-&#32;(mod&#32;&gt;&gt;&#32;3));&#32;&#32;<emphasis role="comment">/*&#32;5,&#32;7,&#32;10&#32;*/</emphasis>
995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;group_size;&#32;k++,&#32;code&#32;/=&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>)
996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k]&#32;=&#32;(float)((<emphasis role="keywordtype">int</emphasis>)(code&#32;%&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>&#32;-&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>/2));
998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+=&#32;choff;
1002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;choff&#32;=&#32;18&#32;-&#32;choff;
1003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1004 &#32;&#32;&#32;&#32;}
1005 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;group_size*4;
1006 }
1007 
1008 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L12_apply_scf_384(drmp3_L12_scale_info&#32;*sci,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>)
1009 {
1010 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
1011 &#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+&#32;576&#32;+&#32;sci-&gt;stereo_bands*18,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+&#32;sci-&gt;stereo_bands*18,&#32;(sci-&gt;total_bands&#32;-&#32;sci-&gt;stereo_bands)*18*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
1012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sci-&gt;total_bands;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+=&#32;18,&#32;scf&#32;+=&#32;6)
1013 &#32;&#32;&#32;&#32;{
1014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;12;&#32;k++)
1015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k&#32;+&#32;0]&#32;&#32;&#32;*=&#32;scf[0];
1017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k&#32;+&#32;576]&#32;*=&#32;scf[3];
1018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1019 &#32;&#32;&#32;&#32;}
1020 }
1021 <emphasis role="preprocessor">#endif</emphasis>
1022 
1023 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_L3_read_side_info(drmp3_bs&#32;*bs,&#32;drmp3_L3_gr_info&#32;*gr,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr)
1024 {
1025 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_long[8][23]&#32;=&#32;{
1026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54,0&#32;},
1027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;12,12,12,12,12,12,16,20,24,28,32,40,48,56,64,76,90,2,2,2,2,2,0&#32;},
1028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54,0&#32;},
1029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,18,22,26,32,38,46,54,62,70,76,36,0&#32;},
1030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54,0&#32;},
1031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,8,8,10,12,16,20,24,28,34,42,50,54,76,158,0&#32;},
1032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,6,8,10,12,16,18,22,28,34,40,46,54,54,192,0&#32;},
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,8,10,12,16,20,24,30,38,46,56,68,84,102,26,0&#32;}
1034 &#32;&#32;&#32;&#32;};
1035 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_short[8][40]&#32;=&#32;{
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;8,8,8,8,8,8,8,8,8,12,12,12,16,16,16,20,20,20,24,24,24,28,28,28,36,36,36,2,2,2,2,2,2,2,2,2,26,26,26,0&#32;},
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,8,8,8,10,10,10,14,14,14,18,18,18,26,26,26,32,32,32,42,42,42,18,18,18,0&#32;},
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,32,32,32,44,44,44,12,12,12,0&#32;},
1040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
1041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,22,22,22,30,30,30,56,56,56,0&#32;},
1042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,10,10,10,12,12,12,14,14,14,16,16,16,20,20,20,26,26,26,66,66,66,0&#32;},
1043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,12,12,12,16,16,16,20,20,20,26,26,26,34,34,34,42,42,42,12,12,12,0&#32;}
1044 &#32;&#32;&#32;&#32;};
1045 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_mixed[8][40]&#32;=&#32;{
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;12,12,12,4,4,4,8,8,8,12,12,12,16,16,16,20,20,20,24,24,24,28,28,28,36,36,36,2,2,2,2,2,2,2,2,2,26,26,26,0&#32;},
1048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,14,14,14,18,18,18,26,26,26,32,32,32,42,42,42,18,18,18,0&#32;},
1049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,32,32,32,44,44,44,12,12,12,0&#32;},
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,22,22,22,30,30,30,56,56,56,0&#32;},
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,4,4,4,6,6,6,6,6,6,10,10,10,12,12,12,14,14,14,16,16,16,20,20,20,26,26,26,66,66,66,0&#32;},
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,4,4,4,6,6,6,8,8,8,12,12,12,16,16,16,20,20,20,26,26,26,34,34,34,42,42,42,12,12,12,0&#32;}
1054 &#32;&#32;&#32;&#32;};
1055 
1056 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;tables,&#32;scfsi&#32;=&#32;0;
1057 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;main_data_begin,&#32;part_23_sum&#32;=&#32;0;
1058 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;gr_count&#32;=&#32;DRMP3_HDR_IS_MONO(hdr)&#32;?&#32;1&#32;:&#32;2;
1059 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sr_idx&#32;=&#32;DRMP3_HDR_GET_MY_SAMPLE_RATE(hdr);&#32;sr_idx&#32;-=&#32;(sr_idx&#32;!=&#32;0);
1060 
1061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MPEG1(hdr))
1062 &#32;&#32;&#32;&#32;{
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr_count&#32;*=&#32;2;
1064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;main_data_begin&#32;=&#32;drmp3_bs_get_bits(bs,&#32;9);
1065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;=&#32;drmp3_bs_get_bits(bs,&#32;7&#32;+&#32;gr_count);
1066 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1067 &#32;&#32;&#32;&#32;{
1068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;main_data_begin&#32;=&#32;drmp3_bs_get_bits(bs,&#32;8&#32;+&#32;gr_count)&#32;&gt;&gt;&#32;gr_count;
1069 &#32;&#32;&#32;&#32;}
1070 
1071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1072 &#32;&#32;&#32;&#32;{
1073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_MONO(hdr))
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;&lt;&lt;=&#32;4;
1076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;part_23_length&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)drmp3_bs_get_bits(bs,&#32;12);
1078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;part_23_sum&#32;+=&#32;gr-&gt;part_23_length;
1079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;big_values&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)drmp3_bs_get_bits(bs,&#32;&#32;9);
1080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;big_values&#32;&gt;&#32;288)
1081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
1083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;global_gain&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;8);
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;scalefac_compress&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)drmp3_bs_get_bits(bs,&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;4&#32;:&#32;9);
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;sfbtab&#32;=&#32;g_scf_long[sr_idx];
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_long_sfb&#32;&#32;=&#32;22;
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_short_sfb&#32;=&#32;0;
1089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_bs_get_bits(bs,&#32;1))
1090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;block_type&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;2);
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!gr-&gt;block_type)
1093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;mixed_block_flag&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;1);
1097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[0]&#32;=&#32;7;
1098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[1]&#32;=&#32;255;
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;block_type&#32;==&#32;DRMP3_SHORT_BLOCK_TYPE)
1100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;&amp;=&#32;0x0F0F;
1102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!gr-&gt;mixed_block_flag)
1103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[0]&#32;=&#32;8;
1105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;sfbtab&#32;=&#32;g_scf_short[sr_idx];
1106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_long_sfb&#32;=&#32;0;
1107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_short_sfb&#32;=&#32;39;
1108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;sfbtab&#32;=&#32;g_scf_mixed[sr_idx];
1111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_long_sfb&#32;=&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;8&#32;:&#32;6;
1112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_short_sfb&#32;=&#32;30;
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tables&#32;=&#32;drmp3_bs_get_bits(bs,&#32;10);
1116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tables&#32;&lt;&lt;=&#32;5;
1117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;subblock_gain[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
1118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;subblock_gain[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
1119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;subblock_gain[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
1120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;block_type&#32;=&#32;0;
1123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;mixed_block_flag&#32;=&#32;0;
1124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tables&#32;=&#32;drmp3_bs_get_bits(bs,&#32;15);
1125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;4);
1126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
1127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[2]&#32;=&#32;255;
1128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;table_select[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(tables&#32;&gt;&gt;&#32;10);
1130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;table_select[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)((tables&#32;&gt;&gt;&#32;5)&#32;&amp;&#32;31);
1131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;table_select[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)((tables)&#32;&amp;&#32;31);
1132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;preflag&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;drmp3_bs_get_bits(bs,&#32;1)&#32;:&#32;(gr-&gt;scalefac_compress&#32;&gt;=&#32;500));
1133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;scalefac_scale&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;1);
1134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;count1_table&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;1);
1135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;scfsi&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)((scfsi&#32;&gt;&gt;&#32;12)&#32;&amp;&#32;15);
1136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;&lt;&lt;=&#32;4;
1137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr++;
1138 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(--gr_count);
1139 
1140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(part_23_sum&#32;+&#32;bs-&gt;pos&#32;&gt;&#32;bs-&gt;limit&#32;+&#32;main_data_begin*8)
1141 &#32;&#32;&#32;&#32;{
1142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
1143 &#32;&#32;&#32;&#32;}
1144 
1145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;main_data_begin;
1146 }
1147 
1148 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_read_scalefactors(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf_size,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf_count,&#32;drmp3_bs&#32;*bitbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scfsi)
1149 {
1150 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
1151 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4&#32;&amp;&amp;&#32;scf_count[i];&#32;i++,&#32;scfsi&#32;*=&#32;2)
1152 &#32;&#32;&#32;&#32;{
1153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;scf_count[i];
1154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scfsi&#32;&amp;&#32;8)
1155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(scf,&#32;ist_pos,&#32;cnt);
1157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;scf_size[i];
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bits)
1161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_MEMORY(scf,&#32;cnt);
1163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_MEMORY(ist_pos,&#32;cnt);
1164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_scf&#32;=&#32;(scfsi&#32;&lt;&#32;0)&#32;?&#32;(1&#32;&lt;&lt;&#32;bits)&#32;-&#32;1&#32;:&#32;-1;
1167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;cnt;&#32;k++)
1168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;drmp3_bs_get_bits(bitbuf,&#32;bits);
1170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ist_pos[k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(s&#32;==&#32;max_scf&#32;?&#32;-1&#32;:&#32;s);
1171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf[k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)s;
1172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ist_pos&#32;+=&#32;cnt;
1176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf&#32;+=&#32;cnt;
1177 &#32;&#32;&#32;&#32;}
1178 &#32;&#32;&#32;&#32;scf[0]&#32;=&#32;scf[1]&#32;=&#32;scf[2]&#32;=&#32;0;
1179 }
1180 
1181 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_L3_ldexp_q2(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;exp_q2)
1182 {
1183 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_expfrac[4]&#32;=&#32;{&#32;9.31322575e-10f,7.83145814e-10f,6.58544508e-10f,5.53767716e-10f&#32;};
1184 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>;
1185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1186 &#32;&#32;&#32;&#32;{
1187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;DRMP3_MIN(30*4,&#32;exp_q2);
1188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;*=&#32;g_expfrac[<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&amp;&#32;3]*(1&#32;&lt;&lt;&#32;30&#32;&gt;&gt;&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&gt;&gt;&#32;2));
1189 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((exp_q2&#32;-=&#32;e)&#32;&gt;&#32;0);
1190 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1191 }
1192 
1193 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_decode_scalefactors(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;drmp3_bs&#32;*bs,&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L3_gr_info&#32;*gr,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch)
1194 {
1195 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_partitions[3][28]&#32;=&#32;{
1196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,5,5,&#32;5,6,5,5,5,6,5,&#32;7,3,11,10,0,0,&#32;7,&#32;7,&#32;7,0,&#32;6,&#32;6,6,3,&#32;8,&#32;8,5,0&#32;},
1197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;8,9,6,12,6,9,9,9,6,9,12,6,15,18,0,0,&#32;6,15,12,0,&#32;6,12,9,6,&#32;6,18,9,0&#32;},
1198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;9,9,6,12,9,9,9,9,9,9,12,6,18,18,0,0,12,12,12,0,12,&#32;9,9,6,15,12,9,0&#32;}
1199 &#32;&#32;&#32;&#32;};
1200 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf_partition&#32;=&#32;g_scf_partitions[!!gr-&gt;n_short_sfb&#32;+&#32;!gr-&gt;n_long_sfb];
1201 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;scf_size[4],&#32;iscf[40];
1202 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;scf_shift&#32;=&#32;gr-&gt;scalefac_scale&#32;+&#32;1,&#32;gain_exp,&#32;scfsi&#32;=&#32;gr-&gt;scfsi;
1203 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;gain;
1204 
1205 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MPEG1(hdr))
1206 &#32;&#32;&#32;&#32;{
1207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scfc_decode[16]&#32;=&#32;{&#32;0,1,2,3,&#32;12,5,6,7,&#32;9,10,11,13,&#32;14,15,18,19&#32;};
1208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;part&#32;=&#32;g_scfc_decode[gr-&gt;scalefac_compress];
1209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_size[1]&#32;=&#32;scf_size[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(part&#32;&gt;&gt;&#32;2);
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_size[3]&#32;=&#32;scf_size[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(part&#32;&amp;&#32;3);
1211 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1212 &#32;&#32;&#32;&#32;{
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_mod[6*4]&#32;=&#32;{&#32;5,5,4,4,5,5,4,1,4,3,1,1,5,6,6,1,4,4,4,1,4,3,1,1&#32;};
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;modprod,&#32;sfc,&#32;ist&#32;=&#32;DRMP3_HDR_TEST_I_STEREO(hdr)&#32;&amp;&amp;&#32;ch;
1215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sfc&#32;=&#32;gr-&gt;scalefac_compress&#32;&gt;&gt;&#32;ist;
1216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;ist*3*4;&#32;sfc&#32;&gt;=&#32;0;&#32;sfc&#32;-=&#32;modprod,&#32;k&#32;+=&#32;4)
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(modprod&#32;=&#32;1,&#32;i&#32;=&#32;3;&#32;i&#32;&gt;=&#32;0;&#32;i--)
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_size[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(sfc&#32;/&#32;modprod&#32;%&#32;g_mod[k&#32;+&#32;i]);
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modprod&#32;*=&#32;g_mod[k&#32;+&#32;i];
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_partition&#32;+=&#32;k;
1225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;=&#32;-16;
1226 &#32;&#32;&#32;&#32;}
1227 &#32;&#32;&#32;&#32;drmp3_L3_read_scalefactors(iscf,&#32;ist_pos,&#32;scf_size,&#32;scf_partition,&#32;bs,&#32;scfsi);
1228 
1229 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;n_short_sfb)
1230 &#32;&#32;&#32;&#32;{
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sh&#32;=&#32;3&#32;-&#32;scf_shift;
1232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;gr-&gt;n_short_sfb;&#32;i&#32;+=&#32;3)
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;0]&#32;+&#32;(gr-&gt;subblock_gain[0]&#32;&lt;&lt;&#32;sh));
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;1]&#32;+&#32;(gr-&gt;subblock_gain[1]&#32;&lt;&lt;&#32;sh));
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;2]&#32;+&#32;(gr-&gt;subblock_gain[2]&#32;&lt;&lt;&#32;sh));
1237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1238 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;preflag)
1239 &#32;&#32;&#32;&#32;{
1240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_preamp[10]&#32;=&#32;{&#32;1,1,1,1,2,2,3,3,3,2&#32;};
1241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;i++)
1242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[11&#32;+&#32;i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(iscf[11&#32;+&#32;i]&#32;+&#32;g_preamp[i]);
1244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1245 &#32;&#32;&#32;&#32;}
1246 
1247 &#32;&#32;&#32;&#32;gain_exp&#32;=&#32;gr-&gt;global_gain&#32;+&#32;DRMP3_BITS_DEQUANTIZER_OUT*4&#32;-&#32;210&#32;-&#32;(DRMP3_HDR_IS_MS_STEREO(hdr)&#32;?&#32;2&#32;:&#32;0);
1248 &#32;&#32;&#32;&#32;gain&#32;=&#32;drmp3_L3_ldexp_q2(1&#32;&lt;&lt;&#32;(DRMP3_MAX_SCFI/4),&#32;&#32;DRMP3_MAX_SCFI&#32;-&#32;gain_exp);
1249 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;(int)(gr-&gt;n_long_sfb&#32;+&#32;gr-&gt;n_short_sfb);&#32;i++)
1250 &#32;&#32;&#32;&#32;{
1251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf[i]&#32;=&#32;drmp3_L3_ldexp_q2(gain,&#32;iscf[i]&#32;&lt;&lt;&#32;scf_shift);
1252 &#32;&#32;&#32;&#32;}
1253 }
1254 
1255 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_drmp3_pow43[129&#32;+&#32;16]&#32;=&#32;{
1256 &#32;&#32;&#32;&#32;0,-1,-2.519842f,-4.326749f,-6.349604f,-8.549880f,-10.902724f,-13.390518f,-16.000000f,-18.720754f,-21.544347f,-24.463781f,-27.473142f,-30.567351f,-33.741992f,-36.993181f,
1257 &#32;&#32;&#32;&#32;0,1,2.519842f,4.326749f,6.349604f,8.549880f,10.902724f,13.390518f,16.000000f,18.720754f,21.544347f,24.463781f,27.473142f,30.567351f,33.741992f,36.993181f,40.317474f,43.711787f,47.173345f,50.699631f,54.288352f,57.937408f,61.644865f,65.408941f,69.227979f,73.100443f,77.024898f,81.000000f,85.024491f,89.097188f,93.216975f,97.382800f,101.593667f,105.848633f,110.146801f,114.487321f,118.869381f,123.292209f,127.755065f,132.257246f,136.798076f,141.376907f,145.993119f,150.646117f,155.335327f,160.060199f,164.820202f,169.614826f,174.443577f,179.305980f,184.201575f,189.129918f,194.090580f,199.083145f,204.107210f,209.162385f,214.248292f,219.364564f,224.510845f,229.686789f,234.892058f,240.126328f,245.389280f,250.680604f,256.000000f,261.347174f,266.721841f,272.123723f,277.552547f,283.008049f,288.489971f,293.998060f,299.532071f,305.091761f,310.676898f,316.287249f,321.922592f,327.582707f,333.267377f,338.976394f,344.709550f,350.466646f,356.247482f,362.051866f,367.879608f,373.730522f,379.604427f,385.501143f,391.420496f,397.362314f,403.326427f,409.312672f,415.320884f,421.350905f,427.402579f,433.475750f,439.570269f,445.685987f,451.822757f,457.980436f,464.158883f,470.357960f,476.577530f,482.817459f,489.077615f,495.357868f,501.658090f,507.978156f,514.317941f,520.677324f,527.056184f,533.454404f,539.871867f,546.308458f,552.764065f,559.238575f,565.731879f,572.243870f,578.774440f,585.323483f,591.890898f,598.476581f,605.080431f,611.702349f,618.342238f,625.000000f,631.675540f,638.368763f,645.079578f
1258 };
1259 
1260 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_L3_pow_43(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
1261 {
1262 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;frac;
1263 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacesign">sign</link>,&#32;mult&#32;=&#32;256;
1264 
1265 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;129)
1266 &#32;&#32;&#32;&#32;{
1267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_drmp3_pow43[16&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>];
1268 &#32;&#32;&#32;&#32;}
1269 
1270 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;1024)
1271 &#32;&#32;&#32;&#32;{
1272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mult&#32;=&#32;16;
1273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&lt;=&#32;3;
1274 &#32;&#32;&#32;&#32;}
1275 
1276 &#32;&#32;&#32;&#32;<link linkend="_namespacesign">sign</link>&#32;=&#32;2*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&#32;64;
1277 &#32;&#32;&#32;&#32;frac&#32;=&#32;(float)((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&#32;63)&#32;-&#32;<link linkend="_namespacesign">sign</link>)&#32;/&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&#32;~63)&#32;+&#32;<link linkend="_namespacesign">sign</link>);
1278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_drmp3_pow43[16&#32;+&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="_namespacesign">sign</link>)&#32;&gt;&gt;&#32;6)]*(1.f&#32;+&#32;frac*((4.f/3)&#32;+&#32;frac*(2.f/9)))*mult;
1279 }
1280 
1281 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_huffman(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>,&#32;drmp3_bs&#32;*bs,&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L3_gr_info&#32;*gr_info,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer3gr_limit)
1282 {
1283 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;tabs[]&#32;=&#32;{&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;785,785,785,785,784,784,784,784,513,513,513,513,513,513,513,513,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-255,1313,1298,1282,785,785,785,785,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,290,288,
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-255,1313,1298,1282,769,769,769,769,529,529,529,529,529,529,529,529,528,528,528,528,528,528,528,528,512,512,512,512,512,512,512,512,290,288,
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-253,-318,-351,-367,785,785,785,785,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,819,818,547,547,275,275,275,275,561,560,515,546,289,274,288,258,
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-254,-287,1329,1299,1314,1312,1057,1057,1042,1042,1026,1026,784,784,784,784,529,529,529,529,529,529,529,529,769,769,769,769,768,768,768,768,563,560,306,306,291,259,
1289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-252,-413,-477,-542,1298,-575,1041,1041,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-383,-399,1107,1092,1106,1061,849,849,789,789,1104,1091,773,773,1076,1075,341,340,325,309,834,804,577,577,532,532,516,516,832,818,803,816,561,561,531,531,515,546,289,289,288,258,
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-252,-429,-493,-559,1057,1057,1042,1042,529,529,529,529,529,529,529,529,784,784,784,784,769,769,769,769,512,512,512,512,512,512,512,512,-382,1077,-415,1106,1061,1104,849,849,789,789,1091,1076,1029,1075,834,834,597,581,340,340,339,324,804,833,532,532,832,772,818,803,817,787,816,771,290,290,290,290,288,258,
1291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-253,-349,-414,-447,-463,1329,1299,-479,1314,1312,1057,1057,1042,1042,1026,1026,785,785,785,785,784,784,784,784,769,769,769,769,768,768,768,768,-319,851,821,-335,836,850,805,849,341,340,325,336,533,533,579,579,564,564,773,832,578,548,563,516,321,276,306,291,304,259,
1292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-251,-572,-733,-830,-863,-879,1041,1041,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-511,-527,-543,1396,1351,1381,1366,1395,1335,1380,-559,1334,1138,1138,1063,1063,1350,1392,1031,1031,1062,1062,1364,1363,1120,1120,1333,1348,881,881,881,881,375,374,359,373,343,358,341,325,791,791,1123,1122,-703,1105,1045,-719,865,865,790,790,774,774,1104,1029,338,293,323,308,-799,-815,833,788,772,818,803,816,322,292,307,320,561,531,515,546,289,274,288,258,
1293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-251,-525,-605,-685,-765,-831,-846,1298,1057,1057,1312,1282,785,785,785,785,784,784,784,784,769,769,769,769,512,512,512,512,512,512,512,512,1399,1398,1383,1367,1382,1396,1351,-511,1381,1366,1139,1139,1079,1079,1124,1124,1364,1349,1363,1333,882,882,882,882,807,807,807,807,1094,1094,1136,1136,373,341,535,535,881,775,867,822,774,-591,324,338,-671,849,550,550,866,864,609,609,293,336,534,534,789,835,773,-751,834,804,308,307,833,788,832,772,562,562,547,547,305,275,560,515,290,290,
1294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-252,-397,-477,-557,-622,-653,-719,-735,-750,1329,1299,1314,1057,1057,1042,1042,1312,1282,1024,1024,785,785,785,785,784,784,784,784,769,769,769,769,-383,1127,1141,1111,1126,1140,1095,1110,869,869,883,883,1079,1109,882,882,375,374,807,868,838,881,791,-463,867,822,368,263,852,837,836,-543,610,610,550,550,352,336,534,534,865,774,851,821,850,805,593,533,579,564,773,832,578,578,548,548,577,577,307,276,306,291,516,560,259,259,
1295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-250,-2107,-2507,-2764,-2909,-2974,-3007,-3023,1041,1041,1040,1040,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-767,-1052,-1213,-1277,-1358,-1405,-1469,-1535,-1550,-1582,-1614,-1647,-1662,-1694,-1726,-1759,-1774,-1807,-1822,-1854,-1886,1565,-1919,-1935,-1951,-1967,1731,1730,1580,1717,-1983,1729,1564,-1999,1548,-2015,-2031,1715,1595,-2047,1714,-2063,1610,-2079,1609,-2095,1323,1323,1457,1457,1307,1307,1712,1547,1641,1700,1699,1594,1685,1625,1442,1442,1322,1322,-780,-973,-910,1279,1278,1277,1262,1276,1261,1275,1215,1260,1229,-959,974,974,989,989,-943,735,478,478,495,463,506,414,-1039,1003,958,1017,927,942,987,957,431,476,1272,1167,1228,-1183,1256,-1199,895,895,941,941,1242,1227,1212,1135,1014,1014,490,489,503,487,910,1013,985,925,863,894,970,955,1012,847,-1343,831,755,755,984,909,428,366,754,559,-1391,752,486,457,924,997,698,698,983,893,740,740,908,877,739,739,667,667,953,938,497,287,271,271,683,606,590,712,726,574,302,302,738,736,481,286,526,725,605,711,636,724,696,651,589,681,666,710,364,467,573,695,466,466,301,465,379,379,709,604,665,679,316,316,634,633,436,436,464,269,424,394,452,332,438,363,347,408,393,448,331,422,362,407,392,421,346,406,391,376,375,359,1441,1306,-2367,1290,-2383,1337,-2399,-2415,1426,1321,-2431,1411,1336,-2447,-2463,-2479,1169,1169,1049,1049,1424,1289,1412,1352,1319,-2495,1154,1154,1064,1064,1153,1153,416,390,360,404,403,389,344,374,373,343,358,372,327,357,342,311,356,326,1395,1394,1137,1137,1047,1047,1365,1392,1287,1379,1334,1364,1349,1378,1318,1363,792,792,792,792,1152,1152,1032,1032,1121,1121,1046,1046,1120,1120,1030,1030,-2895,1106,1061,1104,849,849,789,789,1091,1076,1029,1090,1060,1075,833,833,309,324,532,532,832,772,818,803,561,561,531,560,515,546,289,274,288,258,
1296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-250,-1179,-1579,-1836,-1996,-2124,-2253,-2333,-2413,-2477,-2542,-2574,-2607,-2622,-2655,1314,1313,1298,1312,1282,785,785,785,785,1040,1040,1025,1025,768,768,768,768,-766,-798,-830,-862,-895,-911,-927,-943,-959,-975,-991,-1007,-1023,-1039,-1055,-1070,1724,1647,-1103,-1119,1631,1767,1662,1738,1708,1723,-1135,1780,1615,1779,1599,1677,1646,1778,1583,-1151,1777,1567,1737,1692,1765,1722,1707,1630,1751,1661,1764,1614,1736,1676,1763,1750,1645,1598,1721,1691,1762,1706,1582,1761,1566,-1167,1749,1629,767,766,751,765,494,494,735,764,719,749,734,763,447,447,748,718,477,506,431,491,446,476,461,505,415,430,475,445,504,399,460,489,414,503,383,474,429,459,502,502,746,752,488,398,501,473,413,472,486,271,480,270,-1439,-1455,1357,-1471,-1487,-1503,1341,1325,-1519,1489,1463,1403,1309,-1535,1372,1448,1418,1476,1356,1462,1387,-1551,1475,1340,1447,1402,1386,-1567,1068,1068,1474,1461,455,380,468,440,395,425,410,454,364,467,466,464,453,269,409,448,268,432,1371,1473,1432,1417,1308,1460,1355,1446,1459,1431,1083,1083,1401,1416,1458,1445,1067,1067,1370,1457,1051,1051,1291,1430,1385,1444,1354,1415,1400,1443,1082,1082,1173,1113,1186,1066,1185,1050,-1967,1158,1128,1172,1097,1171,1081,-1983,1157,1112,416,266,375,400,1170,1142,1127,1065,793,793,1169,1033,1156,1096,1141,1111,1155,1080,1126,1140,898,898,808,808,897,897,792,792,1095,1152,1032,1125,1110,1139,1079,1124,882,807,838,881,853,791,-2319,867,368,263,822,852,837,866,806,865,-2399,851,352,262,534,534,821,836,594,594,549,549,593,593,533,533,848,773,579,579,564,578,548,563,276,276,577,576,306,291,516,560,305,305,275,259,
1297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-251,-892,-2058,-2620,-2828,-2957,-3023,-3039,1041,1041,1040,1040,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-511,-527,-543,-559,1530,-575,-591,1528,1527,1407,1526,1391,1023,1023,1023,1023,1525,1375,1268,1268,1103,1103,1087,1087,1039,1039,1523,-604,815,815,815,815,510,495,509,479,508,463,507,447,431,505,415,399,-734,-782,1262,-815,1259,1244,-831,1258,1228,-847,-863,1196,-879,1253,987,987,748,-767,493,493,462,477,414,414,686,669,478,446,461,445,474,429,487,458,412,471,1266,1264,1009,1009,799,799,-1019,-1276,-1452,-1581,-1677,-1757,-1821,-1886,-1933,-1997,1257,1257,1483,1468,1512,1422,1497,1406,1467,1496,1421,1510,1134,1134,1225,1225,1466,1451,1374,1405,1252,1252,1358,1480,1164,1164,1251,1251,1238,1238,1389,1465,-1407,1054,1101,-1423,1207,-1439,830,830,1248,1038,1237,1117,1223,1148,1236,1208,411,426,395,410,379,269,1193,1222,1132,1235,1221,1116,976,976,1192,1162,1177,1220,1131,1191,963,963,-1647,961,780,-1663,558,558,994,993,437,408,393,407,829,978,813,797,947,-1743,721,721,377,392,844,950,828,890,706,706,812,859,796,960,948,843,934,874,571,571,-1919,690,555,689,421,346,539,539,944,779,918,873,932,842,903,888,570,570,931,917,674,674,-2575,1562,-2591,1609,-2607,1654,1322,1322,1441,1441,1696,1546,1683,1593,1669,1624,1426,1426,1321,1321,1639,1680,1425,1425,1305,1305,1545,1668,1608,1623,1667,1592,1638,1666,1320,1320,1652,1607,1409,1409,1304,1304,1288,1288,1664,1637,1395,1395,1335,1335,1622,1636,1394,1394,1319,1319,1606,1621,1392,1392,1137,1137,1137,1137,345,390,360,375,404,373,1047,-2751,-2767,-2783,1062,1121,1046,-2799,1077,-2815,1106,1061,789,789,1105,1104,263,355,310,340,325,354,352,262,339,324,1091,1076,1029,1090,1060,1075,833,833,788,788,1088,1028,818,818,803,803,561,561,531,531,816,771,546,546,289,274,288,258,
1298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-253,-317,-381,-446,-478,-509,1279,1279,-811,-1179,-1451,-1756,-1900,-2028,-2189,-2253,-2333,-2414,-2445,-2511,-2526,1313,1298,-2559,1041,1041,1040,1040,1025,1025,1024,1024,1022,1007,1021,991,1020,975,1019,959,687,687,1018,1017,671,671,655,655,1016,1015,639,639,758,758,623,623,757,607,756,591,755,575,754,559,543,543,1009,783,-575,-621,-685,-749,496,-590,750,749,734,748,974,989,1003,958,988,973,1002,942,987,957,972,1001,926,986,941,971,956,1000,910,985,925,999,894,970,-1071,-1087,-1102,1390,-1135,1436,1509,1451,1374,-1151,1405,1358,1480,1420,-1167,1507,1494,1389,1342,1465,1435,1450,1326,1505,1310,1493,1373,1479,1404,1492,1464,1419,428,443,472,397,736,526,464,464,486,457,442,471,484,482,1357,1449,1434,1478,1388,1491,1341,1490,1325,1489,1463,1403,1309,1477,1372,1448,1418,1433,1476,1356,1462,1387,-1439,1475,1340,1447,1402,1474,1324,1461,1371,1473,269,448,1432,1417,1308,1460,-1711,1459,-1727,1441,1099,1099,1446,1386,1431,1401,-1743,1289,1083,1083,1160,1160,1458,1445,1067,1067,1370,1457,1307,1430,1129,1129,1098,1098,268,432,267,416,266,400,-1887,1144,1187,1082,1173,1113,1186,1066,1050,1158,1128,1143,1172,1097,1171,1081,420,391,1157,1112,1170,1142,1127,1065,1169,1049,1156,1096,1141,1111,1155,1080,1126,1154,1064,1153,1140,1095,1048,-2159,1125,1110,1137,-2175,823,823,1139,1138,807,807,384,264,368,263,868,838,853,791,867,822,852,837,866,806,865,790,-2319,851,821,836,352,262,850,805,849,-2399,533,533,835,820,336,261,578,548,563,577,532,532,832,772,562,562,547,547,305,275,560,515,290,290,288,258&#32;};
1299 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;tab32[]&#32;=&#32;{&#32;130,162,193,209,44,28,76,140,9,9,9,9,9,9,9,9,190,254,222,238,126,94,157,157,109,61,173,205};
1300 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;tab33[]&#32;=&#32;{&#32;252,236,220,204,188,172,156,140,124,108,92,76,60,44,28,12&#32;};
1301 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;tabindex[2*16]&#32;=&#32;{&#32;0,32,64,98,0,132,180,218,292,364,426,538,648,746,0,1126,1460,1460,1460,1460,1460,1460,1460,1460,1842,1842,1842,1842,1842,1842,1842,1842&#32;};
1302 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_linbits[]&#32;=&#32;&#32;{&#32;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,6,8,10,13,4,5,6,7,8,9,11,13&#32;};
1303 
1304 <emphasis role="preprocessor">#define&#32;DRMP3_PEEK_BITS(n)&#32;&#32;&#32;&#32;(bs_cache&#32;&gt;&gt;&#32;(32&#32;-&#32;(n)))</emphasis>
1305 <emphasis role="preprocessor">#define&#32;DRMP3_FLUSH_BITS(n)&#32;&#32;&#32;{&#32;bs_cache&#32;&lt;&lt;=&#32;(n);&#32;bs_sh&#32;+=&#32;(n);&#32;}</emphasis>
1306 <emphasis role="preprocessor">#define&#32;DRMP3_CHECK_BITS&#32;&#32;&#32;&#32;&#32;&#32;while&#32;(bs_sh&#32;&gt;=&#32;0)&#32;{&#32;bs_cache&#32;|=&#32;(drmp3_uint32)*bs_next_ptr++&#32;&lt;&lt;&#32;bs_sh;&#32;bs_sh&#32;-=&#32;8;&#32;}</emphasis>
1307 <emphasis role="preprocessor">#define&#32;DRMP3_BSPOS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((bs_next_ptr&#32;-&#32;bs-&gt;buf)*8&#32;-&#32;24&#32;+&#32;bs_sh)</emphasis>
1308 
1309 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>&#32;=&#32;0.0f;
1310 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ireg&#32;=&#32;0,&#32;big_val_cnt&#32;=&#32;gr_info-&gt;big_values;
1311 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb&#32;=&#32;gr_info-&gt;sfbtab;
1312 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*bs_next_ptr&#32;=&#32;bs-&gt;buf&#32;+&#32;bs-&gt;pos/8;
1313 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;bs_cache&#32;=&#32;(((bs_next_ptr[0]*256u&#32;+&#32;bs_next_ptr[1])*256u&#32;+&#32;bs_next_ptr[2])*256u&#32;+&#32;bs_next_ptr[3])&#32;&lt;&lt;&#32;(bs-&gt;pos&#32;&amp;&#32;7);
1314 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pairs_to_decode,&#32;np,&#32;bs_sh&#32;=&#32;(bs-&gt;pos&#32;&amp;&#32;7)&#32;-&#32;8;
1315 &#32;&#32;&#32;&#32;bs_next_ptr&#32;+=&#32;4;
1316 
1317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(big_val_cnt&#32;&gt;&#32;0)
1318 &#32;&#32;&#32;&#32;{
1319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tab_num&#32;=&#32;gr_info-&gt;table_select[ireg];
1320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sfb_cnt&#32;=&#32;gr_info-&gt;region_count[ireg++];
1321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;*codebook&#32;=&#32;tabs&#32;+&#32;tabindex[tab_num];
1322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;linbits&#32;=&#32;g_linbits[tab_num];
1323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(linbits)
1324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np&#32;=&#32;*sfb++&#32;/&#32;2;
1328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pairs_to_decode&#32;=&#32;DRMP3_MIN(big_val_cnt,&#32;np);
1329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>&#32;=&#32;*scf++;
1330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;5;
1333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)];
1334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(leaf&#32;&lt;&#32;0)
1335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
1337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;leaf&#32;&amp;&#32;7;
1338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)&#32;-&#32;(leaf&#32;&gt;&gt;&#32;3)];
1339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(leaf&#32;&gt;&gt;&#32;8);
1341 
1342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++,&#32;dst++,&#32;leaf&#32;&gt;&gt;=&#32;4)
1343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lsb&#32;=&#32;leaf&#32;&amp;&#32;0x0F;
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lsb&#32;==&#32;15)
1346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lsb&#32;+=&#32;DRMP3_PEEK_BITS(linbits);
1348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(linbits);
1349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>*drmp3_L3_pow_43(lsb)*((<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>)bs_cache&#32;&lt;&#32;0&#32;?&#32;-1:&#32;1);
1351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;g_drmp3_pow43[16&#32;+&#32;lsb&#32;-&#32;16*(bs_cache&#32;&gt;&gt;&#32;31)]*one;
1354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(lsb&#32;?&#32;1&#32;:&#32;0);
1356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--pairs_to_decode);
1359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((big_val_cnt&#32;-=&#32;np)&#32;&gt;&#32;0&#32;&amp;&amp;&#32;--sfb_cnt&#32;&gt;=&#32;0);
1360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np&#32;=&#32;*sfb++&#32;/&#32;2;
1365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pairs_to_decode&#32;=&#32;DRMP3_MIN(big_val_cnt,&#32;np);
1366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>&#32;=&#32;*scf++;
1367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;5;
1370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)];
1371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(leaf&#32;&lt;&#32;0)
1372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
1374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;leaf&#32;&amp;&#32;7;
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)&#32;-&#32;(leaf&#32;&gt;&gt;&#32;3)];
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(leaf&#32;&gt;&gt;&#32;8);
1378 
1379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++,&#32;dst++,&#32;leaf&#32;&gt;&gt;=&#32;4)
1380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lsb&#32;=&#32;leaf&#32;&amp;&#32;0x0F;
1382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;g_drmp3_pow43[16&#32;+&#32;lsb&#32;-&#32;16*(bs_cache&#32;&gt;&gt;&#32;31)]*one;
1383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(lsb&#32;?&#32;1&#32;:&#32;0);
1384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--pairs_to_decode);
1387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((big_val_cnt&#32;-=&#32;np)&#32;&gt;&#32;0&#32;&amp;&amp;&#32;--sfb_cnt&#32;&gt;=&#32;0);
1388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1389 &#32;&#32;&#32;&#32;}
1390 
1391 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(np&#32;=&#32;1&#32;-&#32;big_val_cnt;;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+=&#32;4)
1392 &#32;&#32;&#32;&#32;{
1393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*codebook_count1&#32;=&#32;(gr_info-&gt;count1_table)&#32;?&#32;tab33&#32;:&#32;tab32;
1394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf&#32;=&#32;codebook_count1[DRMP3_PEEK_BITS(4)];
1395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(leaf&#32;&amp;&#32;8))
1396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leaf&#32;=&#32;codebook_count1[(leaf&#32;&gt;&gt;&#32;3)&#32;+&#32;(bs_cache&#32;&lt;&lt;&#32;4&#32;&gt;&gt;&#32;(32&#32;-&#32;(leaf&#32;&amp;&#32;3)))];
1398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(leaf&#32;&amp;&#32;7);
1400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_BSPOS&#32;&gt;&#32;layer3gr_limit)
1401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1404 <emphasis role="preprocessor">#define&#32;DRMP3_RELOAD_SCALEFACTOR&#32;&#32;if&#32;(!--np)&#32;{&#32;np&#32;=&#32;*sfb++/2;&#32;if&#32;(!np)&#32;break;&#32;one&#32;=&#32;*scf++;&#32;}</emphasis>
1405 <emphasis role="preprocessor">#define&#32;DRMP3_DEQ_COUNT1(s)&#32;if&#32;(leaf&#32;&amp;&#32;(128&#32;&gt;&gt;&#32;s))&#32;{&#32;dst[s]&#32;=&#32;((drmp3_int32)bs_cache&#32;&lt;&#32;0)&#32;?&#32;-one&#32;:&#32;one;&#32;DRMP3_FLUSH_BITS(1)&#32;}</emphasis>
1406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_RELOAD_SCALEFACTOR;
1407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(0);
1408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(1);
1409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_RELOAD_SCALEFACTOR;
1410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(2);
1411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(3);
1412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1413 &#32;&#32;&#32;&#32;}
1414 
1415 &#32;&#32;&#32;&#32;bs-&gt;pos&#32;=&#32;layer3gr_limit;
1416 }
1417 
1418 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_midside_stereo(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1419 {
1420 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
1421 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*right&#32;=&#32;left&#32;+&#32;576;
1422 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1423 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())
1424 &#32;&#32;&#32;&#32;{
1425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;n&#32;-&#32;3;&#32;i&#32;+=&#32;4)
1426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vl&#32;=&#32;DRMP3_VLD(left&#32;+&#32;i);
1428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vr&#32;=&#32;DRMP3_VLD(right&#32;+&#32;i);
1429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(left&#32;+&#32;i,&#32;DRMP3_VADD(vl,&#32;vr));
1430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(right&#32;+&#32;i,&#32;DRMP3_VSUB(vl,&#32;vr));
1431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1432 <emphasis role="preprocessor">#ifdef&#32;__GNUC__</emphasis>
1433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Workaround&#32;for&#32;spurious&#32;-Waggressive-loop-optimizations&#32;warning&#32;from&#32;gcc.</emphasis>
1434 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;For&#32;more&#32;info&#32;see:&#32;https://github.com/lieff/minimp3/issues/88</emphasis>
1435 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
1436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__builtin_constant_p(n&#32;%&#32;4&#32;==&#32;0)&#32;&amp;&amp;&#32;n&#32;%&#32;4&#32;==&#32;0)
1437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1438 <emphasis role="preprocessor">#endif</emphasis>
1439 &#32;&#32;&#32;&#32;}
1440 <emphasis role="preprocessor">#endif</emphasis>
1441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;n;&#32;i++)
1442 &#32;&#32;&#32;&#32;{
1443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;left[i];
1444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;right[i];
1445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1447 &#32;&#32;&#32;&#32;}
1448 }
1449 
1450 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_intensity_stereo_band(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;kl,&#32;<emphasis role="keywordtype">float</emphasis>&#32;kr)
1451 {
1452 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1453 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
1454 &#32;&#32;&#32;&#32;{
1455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left[i&#32;+&#32;576]&#32;=&#32;left[i]*kr;
1456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left[i]&#32;=&#32;left[i]*kl;
1457 &#32;&#32;&#32;&#32;}
1458 }
1459 
1460 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_stereo_top_band(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*right,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_band[3])
1461 {
1462 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
1463 
1464 &#32;&#32;&#32;&#32;max_band[0]&#32;=&#32;max_band[1]&#32;=&#32;max_band[2]&#32;=&#32;-1;
1465 
1466 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nbands;&#32;i++)
1467 &#32;&#32;&#32;&#32;{
1468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;sfb[i];&#32;k&#32;+=&#32;2)
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(right[k]&#32;!=&#32;0&#32;||&#32;right[k&#32;+&#32;1]&#32;!=&#32;0)
1471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_band[i&#32;%&#32;3]&#32;=&#32;i;
1473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right&#32;+=&#32;sfb[i];
1477 &#32;&#32;&#32;&#32;}
1478 }
1479 
1480 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_stereo_process(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_band[3],&#32;<emphasis role="keywordtype">int</emphasis>&#32;mpeg2_sh)
1481 {
1482 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_pan[7*2]&#32;=&#32;{&#32;0,1,0.21132487f,0.78867513f,0.36602540f,0.63397460f,0.5f,0.5f,0.63397460f,0.36602540f,0.78867513f,0.21132487f,1,0&#32;};
1483 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;i,&#32;max_pos&#32;=&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;7&#32;:&#32;64;
1484 
1485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;sfb[i];&#32;i++)
1486 &#32;&#32;&#32;&#32;{
1487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;ipos&#32;=&#32;ist_pos[i];
1488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)i&#32;&gt;&#32;max_band[i&#32;%&#32;3]&#32;&amp;&amp;&#32;ipos&#32;&lt;&#32;max_pos)
1489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;kl,&#32;kr,&#32;s&#32;=&#32;DRMP3_HDR_TEST_MS_STEREO(hdr)&#32;?&#32;1.41421356f&#32;:&#32;1;
1491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MPEG1(hdr))
1492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kl&#32;=&#32;g_pan[2*ipos];
1494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;g_pan[2*ipos&#32;+&#32;1];
1495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kl&#32;=&#32;1;
1498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;drmp3_L3_ldexp_q2(1,&#32;(ipos&#32;+&#32;1)&#32;&gt;&gt;&#32;1&#32;&lt;&lt;&#32;mpeg2_sh);
1499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ipos&#32;&amp;&#32;1)
1500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kl&#32;=&#32;kr;
1502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;1;
1503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_intensity_stereo_band(left,&#32;sfb[i],&#32;kl*s,&#32;kr*s);
1506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MS_STEREO(hdr))
1507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_midside_stereo(left,&#32;sfb[i]);
1509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;+=&#32;sfb[i];
1511 &#32;&#32;&#32;&#32;}
1512 }
1513 
1514 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_intensity_stereo(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L3_gr_info&#32;*gr,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr)
1515 {
1516 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_band[3],&#32;n_sfb&#32;=&#32;gr-&gt;n_long_sfb&#32;+&#32;gr-&gt;n_short_sfb;
1517 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;max_blocks&#32;=&#32;gr-&gt;n_short_sfb&#32;?&#32;3&#32;:&#32;1;
1518 
1519 &#32;&#32;&#32;&#32;drmp3_L3_stereo_top_band(left&#32;+&#32;576,&#32;gr-&gt;sfbtab,&#32;n_sfb,&#32;max_band);
1520 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;n_long_sfb)
1521 &#32;&#32;&#32;&#32;{
1522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_band[0]&#32;=&#32;max_band[1]&#32;=&#32;max_band[2]&#32;=&#32;DRMP3_MAX(DRMP3_MAX(max_band[0],&#32;max_band[1]),&#32;max_band[2]);
1523 &#32;&#32;&#32;&#32;}
1524 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;max_blocks;&#32;i++)
1525 &#32;&#32;&#32;&#32;{
1526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;default_pos&#32;=&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;3&#32;:&#32;0;
1527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;itop&#32;=&#32;n_sfb&#32;-&#32;max_blocks&#32;+&#32;i;
1528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prev&#32;=&#32;itop&#32;-&#32;max_blocks;
1529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ist_pos[itop]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(max_band[i]&#32;&gt;=&#32;prev&#32;?&#32;default_pos&#32;:&#32;ist_pos[prev]);
1530 &#32;&#32;&#32;&#32;}
1531 &#32;&#32;&#32;&#32;drmp3_L3_stereo_process(left,&#32;ist_pos,&#32;gr-&gt;sfbtab,&#32;hdr,&#32;max_band,&#32;gr[1].scalefac_compress&#32;&amp;&#32;1);
1532 }
1533 
1534 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_reorder(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scratch,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb)
1535 {
1536 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
1537 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;=&#32;grbuf,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;scratch;
1538 
1539 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;0&#32;!=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;*sfb);&#32;sfb&#32;+=&#32;3,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;+=&#32;2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
1540 &#32;&#32;&#32;&#32;{
1541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>++)
1542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>];
1544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>];
1545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>];
1546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1547 &#32;&#32;&#32;&#32;}
1548 &#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(grbuf,&#32;scratch,&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;-&#32;scratch)*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
1549 }
1550 
1551 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_antialias(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands)
1552 {
1553 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_aa[2][8]&#32;=&#32;{
1554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0.85749293f,0.88174200f,0.94962865f,0.98331459f,0.99551782f,0.99916056f,0.99989920f,0.99999316f},
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0.51449576f,0.47173197f,0.31337745f,0.18191320f,0.09457419f,0.04096558f,0.01419856f,0.00369997f}
1556 &#32;&#32;&#32;&#32;};
1557 
1558 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;nbands&#32;&gt;&#32;0;&#32;nbands--,&#32;grbuf&#32;+=&#32;18)
1559 &#32;&#32;&#32;&#32;{
1560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
1561 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;8;&#32;i&#32;+=&#32;4)
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vu&#32;=&#32;DRMP3_VLD(grbuf&#32;+&#32;18&#32;+&#32;i);
1565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vd&#32;=&#32;DRMP3_VLD(grbuf&#32;+&#32;14&#32;-&#32;i);
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vc0&#32;=&#32;DRMP3_VLD(g_aa[0]&#32;+&#32;i);
1567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vc1&#32;=&#32;DRMP3_VLD(g_aa[1]&#32;+&#32;i);
1568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vd&#32;=&#32;DRMP3_VREV(vd);
1569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;18&#32;+&#32;i,&#32;DRMP3_VSUB(DRMP3_VMUL(vu,&#32;vc0),&#32;DRMP3_VMUL(vd,&#32;vc1)));
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vd&#32;=&#32;DRMP3_VADD(DRMP3_VMUL(vu,&#32;vc1),&#32;DRMP3_VMUL(vd,&#32;vc0));
1571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;14&#32;-&#32;i,&#32;DRMP3_VREV(vd));
1572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1573 <emphasis role="preprocessor">#endif</emphasis>
1574 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_ONLY_SIMD</emphasis>
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&#32;&lt;&#32;8;&#32;i++)
1576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;grbuf[18&#32;+&#32;i];
1578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d&#32;=&#32;grbuf[17&#32;-&#32;i];
1579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[18&#32;+&#32;i]&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>*g_aa[0][i]&#32;-&#32;d*g_aa[1][i];
1580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[17&#32;-&#32;i]&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>*g_aa[1][i]&#32;+&#32;d*g_aa[0][i];
1581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1582 <emphasis role="preprocessor">#endif</emphasis>
1583 &#32;&#32;&#32;&#32;}
1584 }
1585 
1586 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_dct3_9(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
1587 {
1588 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s0,&#32;s1,&#32;s2,&#32;s3,&#32;s4,&#32;s5,&#32;s6,&#32;s7,&#32;s8,&#32;t0,&#32;t2,&#32;t4;
1589 
1590 &#32;&#32;&#32;&#32;s0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0];&#32;s2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2];&#32;s4&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[4];&#32;s6&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[6];&#32;s8&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[8];
1591 &#32;&#32;&#32;&#32;t0&#32;=&#32;s0&#32;+&#32;s6*0.5f;
1592 &#32;&#32;&#32;&#32;s0&#32;-=&#32;s6;
1593 &#32;&#32;&#32;&#32;t4&#32;=&#32;(s4&#32;+&#32;s2)*0.93969262f;
1594 &#32;&#32;&#32;&#32;t2&#32;=&#32;(s8&#32;+&#32;s2)*0.76604444f;
1595 &#32;&#32;&#32;&#32;s6&#32;=&#32;(s4&#32;-&#32;s8)*0.17364818f;
1596 &#32;&#32;&#32;&#32;s4&#32;+=&#32;s8&#32;-&#32;s2;
1597 
1598 &#32;&#32;&#32;&#32;s2&#32;=&#32;s0&#32;-&#32;s4*0.5f;
1599 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[4]&#32;=&#32;s4&#32;+&#32;s0;
1600 &#32;&#32;&#32;&#32;s8&#32;=&#32;t0&#32;-&#32;t2&#32;+&#32;s6;
1601 &#32;&#32;&#32;&#32;s0&#32;=&#32;t0&#32;-&#32;t4&#32;+&#32;t2;
1602 &#32;&#32;&#32;&#32;s4&#32;=&#32;t0&#32;+&#32;t4&#32;-&#32;s6;
1603 
1604 &#32;&#32;&#32;&#32;s1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1];&#32;s3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3];&#32;s5&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[5];&#32;s7&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[7];
1605 
1606 &#32;&#32;&#32;&#32;s3&#32;*=&#32;0.86602540f;
1607 &#32;&#32;&#32;&#32;t0&#32;=&#32;(s5&#32;+&#32;s1)*0.98480775f;
1608 &#32;&#32;&#32;&#32;t4&#32;=&#32;(s5&#32;-&#32;s7)*0.34202014f;
1609 &#32;&#32;&#32;&#32;t2&#32;=&#32;(s1&#32;+&#32;s7)*0.64278761f;
1610 &#32;&#32;&#32;&#32;s1&#32;=&#32;(s1&#32;-&#32;s5&#32;-&#32;s7)*0.86602540f;
1611 
1612 &#32;&#32;&#32;&#32;s5&#32;=&#32;t0&#32;-&#32;s3&#32;-&#32;t2;
1613 &#32;&#32;&#32;&#32;s7&#32;=&#32;t4&#32;-&#32;s3&#32;-&#32;t0;
1614 &#32;&#32;&#32;&#32;s3&#32;=&#32;t4&#32;+&#32;s3&#32;-&#32;t2;
1615 
1616 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0]&#32;=&#32;s4&#32;-&#32;s7;
1617 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1]&#32;=&#32;s2&#32;+&#32;s1;
1618 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2]&#32;=&#32;s0&#32;-&#32;s3;
1619 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3]&#32;=&#32;s8&#32;+&#32;s5;
1620 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[5]&#32;=&#32;s8&#32;-&#32;s5;
1621 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[6]&#32;=&#32;s0&#32;+&#32;s3;
1622 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[7]&#32;=&#32;s2&#32;-&#32;s1;
1623 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[8]&#32;=&#32;s4&#32;+&#32;s7;
1624 }
1625 
1626 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct36(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands)
1627 {
1628 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
1629 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_twid9[18]&#32;=&#32;{
1630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.73727734f,0.79335334f,0.84339145f,0.88701083f,0.92387953f,0.95371695f,0.97629601f,0.99144486f,0.99904822f,0.67559021f,0.60876143f,0.53729961f,0.46174861f,0.38268343f,0.30070580f,0.21643961f,0.13052619f,0.04361938f
1631 &#32;&#32;&#32;&#32;};
1632 
1633 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;nbands;&#32;j++,&#32;grbuf&#32;+=&#32;18,&#32;overlap&#32;+=&#32;9)
1634 &#32;&#32;&#32;&#32;{
1635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;co[9],&#32;si[9];
1636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co[0]&#32;=&#32;-grbuf[0];
1637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[0]&#32;=&#32;grbuf[17];
1638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)
1639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[8&#32;-&#32;2*i]&#32;=&#32;&#32;&#32;grbuf[4*i&#32;+&#32;1]&#32;-&#32;grbuf[4*i&#32;+&#32;2];
1641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co[1&#32;+&#32;2*i]&#32;=&#32;&#32;&#32;grbuf[4*i&#32;+&#32;1]&#32;+&#32;grbuf[4*i&#32;+&#32;2];
1642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[7&#32;-&#32;2*i]&#32;=&#32;&#32;&#32;grbuf[4*i&#32;+&#32;4]&#32;-&#32;grbuf[4*i&#32;+&#32;3];
1643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co[2&#32;+&#32;2*i]&#32;=&#32;-(grbuf[4*i&#32;+&#32;3]&#32;+&#32;grbuf[4*i&#32;+&#32;4]);
1644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_dct3_9(co);
1646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_dct3_9(si);
1647 
1648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[1]&#32;=&#32;-si[1];
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[3]&#32;=&#32;-si[3];
1650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[5]&#32;=&#32;-si[5];
1651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[7]&#32;=&#32;-si[7];
1652 
1653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
1654 
1655 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;8;&#32;i&#32;+=&#32;4)
1657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vovl&#32;=&#32;DRMP3_VLD(overlap&#32;+&#32;i);
1659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vc&#32;=&#32;DRMP3_VLD(co&#32;+&#32;i);
1660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vs&#32;=&#32;DRMP3_VLD(si&#32;+&#32;i);
1661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vr0&#32;=&#32;DRMP3_VLD(g_twid9&#32;+&#32;i);
1662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vr1&#32;=&#32;DRMP3_VLD(g_twid9&#32;+&#32;9&#32;+&#32;i);
1663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vw0&#32;=&#32;DRMP3_VLD(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>&#32;+&#32;i);
1664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vw1&#32;=&#32;DRMP3_VLD(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>&#32;+&#32;9&#32;+&#32;i);
1665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vsum&#32;=&#32;DRMP3_VADD(DRMP3_VMUL(vc,&#32;vr1),&#32;DRMP3_VMUL(vs,&#32;vr0));
1666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(overlap&#32;+&#32;i,&#32;DRMP3_VSUB(DRMP3_VMUL(vc,&#32;vr0),&#32;DRMP3_VMUL(vs,&#32;vr1)));
1667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;i,&#32;DRMP3_VSUB(DRMP3_VMUL(vovl,&#32;vw0),&#32;DRMP3_VMUL(vsum,&#32;vw1)));
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vsum&#32;=&#32;DRMP3_VADD(DRMP3_VMUL(vovl,&#32;vw1),&#32;DRMP3_VMUL(vsum,&#32;vw0));
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;14&#32;-&#32;i,&#32;DRMP3_VREV(vsum));
1670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1671 <emphasis role="preprocessor">#endif</emphasis>
1672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;9;&#32;i++)
1673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ovl&#32;&#32;=&#32;overlap[i];
1675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sum&#32;&#32;=&#32;co[i]*g_twid9[9&#32;+&#32;i]&#32;+&#32;si[i]*g_twid9[0&#32;+&#32;i];
1676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap[i]&#32;=&#32;co[i]*g_twid9[0&#32;+&#32;i]&#32;-&#32;si[i]*g_twid9[9&#32;+&#32;i];
1677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[i]&#32;&#32;&#32;&#32;&#32;&#32;=&#32;ovl*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[0&#32;+&#32;i]&#32;-&#32;sum*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[9&#32;+&#32;i];
1678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[17&#32;-&#32;i]&#32;=&#32;ovl*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[9&#32;+&#32;i]&#32;+&#32;sum*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[0&#32;+&#32;i];
1679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1680 &#32;&#32;&#32;&#32;}
1681 }
1682 
1683 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_idct3(<emphasis role="keywordtype">float</emphasis>&#32;x0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>)
1684 {
1685 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m1&#32;=&#32;x1*0.86602540f;
1686 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;a1&#32;=&#32;x0&#32;-&#32;x2*0.5f;
1687 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[1]&#32;=&#32;x0&#32;+&#32;x2;
1688 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[0]&#32;=&#32;a1&#32;+&#32;m1;
1689 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[2]&#32;=&#32;a1&#32;-&#32;m1;
1690 }
1691 
1692 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct12(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap)
1693 {
1694 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_twid3[6]&#32;=&#32;{&#32;0.79335334f,0.92387953f,0.99144486f,&#32;0.60876143f,0.38268343f,0.13052619f&#32;};
1695 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;co[3],&#32;si[3];
1696 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1697 
1698 &#32;&#32;&#32;&#32;drmp3_L3_idct3(-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[12]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[9],&#32;co);
1699 &#32;&#32;&#32;&#32;drmp3_L3_idct3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[15],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[12]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[9],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;si);
1700 &#32;&#32;&#32;&#32;si[1]&#32;=&#32;-si[1];
1701 
1702 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
1703 &#32;&#32;&#32;&#32;{
1704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ovl&#32;&#32;=&#32;overlap[i];
1705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sum&#32;&#32;=&#32;co[i]*g_twid3[3&#32;+&#32;i]&#32;+&#32;si[i]*g_twid3[0&#32;+&#32;i];
1706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap[i]&#32;=&#32;co[i]*g_twid3[0&#32;+&#32;i]&#32;-&#32;si[i]*g_twid3[3&#32;+&#32;i];
1707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i]&#32;&#32;&#32;&#32;&#32;=&#32;ovl*g_twid3[2&#32;-&#32;i]&#32;-&#32;sum*g_twid3[5&#32;-&#32;i];
1708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[5&#32;-&#32;i]&#32;=&#32;ovl*g_twid3[5&#32;-&#32;i]&#32;+&#32;sum*g_twid3[2&#32;-&#32;i];
1709 &#32;&#32;&#32;&#32;}
1710 }
1711 
1712 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct_short(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands)
1713 {
1714 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;nbands&#32;&gt;&#32;0;&#32;nbands--,&#32;overlap&#32;+=&#32;9,&#32;grbuf&#32;+=&#32;18)
1715 &#32;&#32;&#32;&#32;{
1716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp[18];
1717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(tmp,&#32;grbuf,&#32;<emphasis role="keyword">sizeof</emphasis>(tmp));
1718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(grbuf,&#32;overlap,&#32;6*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
1719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct12(tmp,&#32;grbuf&#32;+&#32;6,&#32;overlap&#32;+&#32;6);
1720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct12(tmp&#32;+&#32;1,&#32;grbuf&#32;+&#32;12,&#32;overlap&#32;+&#32;6);
1721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct12(tmp&#32;+&#32;2,&#32;overlap,&#32;overlap&#32;+&#32;6);
1722 &#32;&#32;&#32;&#32;}
1723 }
1724 
1725 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_change_sign(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf)
1726 {
1727 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;i;
1728 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;0,&#32;grbuf&#32;+=&#32;18;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;+=&#32;2,&#32;grbuf&#32;+=&#32;36)
1729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;1;&#32;i&#32;&lt;&#32;18;&#32;i&#32;+=&#32;2)
1730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[i]&#32;=&#32;-grbuf[i];
1731 }
1732 
1733 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct_gr(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;block_type,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;n_long_bands)
1734 {
1735 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_mdct_window[2][18]&#32;=&#32;{
1736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;0.99904822f,0.99144486f,0.97629601f,0.95371695f,0.92387953f,0.88701083f,0.84339145f,0.79335334f,0.73727734f,0.04361938f,0.13052619f,0.21643961f,0.30070580f,0.38268343f,0.46174861f,0.53729961f,0.60876143f,0.67559021f&#32;},
1737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;1,1,1,1,1,1,0.99144486f,0.92387953f,0.79335334f,0,0,0,0,0,0,0.13052619f,0.38268343f,0.60876143f&#32;}
1738 &#32;&#32;&#32;&#32;};
1739 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n_long_bands)
1740 &#32;&#32;&#32;&#32;{
1741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct36(grbuf,&#32;overlap,&#32;g_mdct_window[0],&#32;n_long_bands);
1742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf&#32;+=&#32;18*n_long_bands;
1743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap&#32;+=&#32;9*n_long_bands;
1744 &#32;&#32;&#32;&#32;}
1745 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(block_type&#32;==&#32;DRMP3_SHORT_BLOCK_TYPE)
1746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct_short(grbuf,&#32;overlap,&#32;32&#32;-&#32;n_long_bands);
1747 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct36(grbuf,&#32;overlap,&#32;g_mdct_window[block_type&#32;==&#32;DRMP3_STOP_BLOCK_TYPE],&#32;32&#32;-&#32;n_long_bands);
1749 }
1750 
1751 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_save_reservoir(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*h,&#32;drmp3dec_scratch&#32;*s)
1752 {
1753 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos&#32;=&#32;(s-&gt;bs.pos&#32;+&#32;7)/8u;
1754 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remains&#32;=&#32;s-&gt;bs.limit/8u&#32;-&#32;pos;
1755 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(remains&#32;&gt;&#32;DRMP3_MAX_BITRESERVOIR_BYTES)
1756 &#32;&#32;&#32;&#32;{
1757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos&#32;+=&#32;remains&#32;-&#32;DRMP3_MAX_BITRESERVOIR_BYTES;
1758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remains&#32;=&#32;DRMP3_MAX_BITRESERVOIR_BYTES;
1759 &#32;&#32;&#32;&#32;}
1760 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(remains&#32;&gt;&#32;0)
1761 &#32;&#32;&#32;&#32;{
1762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_MOVE_MEMORY(h-&gt;<link linkend="_structdrmp3dec_1a9d76d36f50e24ffc0c298db443fb8282">reserv_buf</link>,&#32;s-&gt;maindata&#32;+&#32;pos,&#32;remains);
1763 &#32;&#32;&#32;&#32;}
1764 &#32;&#32;&#32;&#32;h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>&#32;=&#32;remains;
1765 }
1766 
1767 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_L3_restore_reservoir(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*h,&#32;drmp3_bs&#32;*bs,&#32;drmp3dec_scratch&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;main_data_begin)
1768 {
1769 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes&#32;=&#32;(bs-&gt;limit&#32;-&#32;bs-&gt;pos)/8;
1770 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes_have&#32;=&#32;DRMP3_MIN(h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>,&#32;main_data_begin);
1771 &#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(s-&gt;maindata,&#32;h-&gt;<link linkend="_structdrmp3dec_1a9d76d36f50e24ffc0c298db443fb8282">reserv_buf</link>&#32;+&#32;DRMP3_MAX(0,&#32;h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>&#32;-&#32;main_data_begin),&#32;DRMP3_MIN(h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>,&#32;main_data_begin));
1772 &#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(s-&gt;maindata&#32;+&#32;bytes_have,&#32;bs-&gt;buf&#32;+&#32;bs-&gt;pos/8,&#32;frame_bytes);
1773 &#32;&#32;&#32;&#32;drmp3_bs_init(&amp;s-&gt;bs,&#32;s-&gt;maindata,&#32;bytes_have&#32;+&#32;frame_bytes);
1774 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>&#32;&gt;=&#32;main_data_begin;
1775 }
1776 
1777 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_decode(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*h,&#32;drmp3dec_scratch&#32;*s,&#32;drmp3_L3_gr_info&#32;*gr_info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch)
1778 {
1779 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch;
1780 
1781 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ch&#32;=&#32;0;&#32;ch&#32;&lt;&#32;nch;&#32;ch++)
1782 &#32;&#32;&#32;&#32;{
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer3gr_limit&#32;=&#32;s-&gt;bs.pos&#32;+&#32;gr_info[ch].part_23_length;
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_decode_scalefactors(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>,&#32;s-&gt;ist_pos[ch],&#32;&amp;s-&gt;bs,&#32;gr_info&#32;+&#32;ch,&#32;s-&gt;scf,&#32;ch);
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_huffman(s-&gt;grbuf[ch],&#32;&amp;s-&gt;bs,&#32;gr_info&#32;+&#32;ch,&#32;s-&gt;scf,&#32;layer3gr_limit);
1786 &#32;&#32;&#32;&#32;}
1787 
1788 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_I_STEREO(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>))
1789 &#32;&#32;&#32;&#32;{
1790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_intensity_stereo(s-&gt;grbuf[0],&#32;s-&gt;ist_pos[1],&#32;gr_info,&#32;h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
1791 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_MS_STEREO(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>))
1792 &#32;&#32;&#32;&#32;{
1793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_midside_stereo(s-&gt;grbuf[0],&#32;576);
1794 &#32;&#32;&#32;&#32;}
1795 
1796 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ch&#32;=&#32;0;&#32;ch&#32;&lt;&#32;nch;&#32;ch++,&#32;gr_info++)
1797 &#32;&#32;&#32;&#32;{
1798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;aa_bands&#32;=&#32;31;
1799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n_long_bands&#32;=&#32;(gr_info-&gt;mixed_block_flag&#32;?&#32;2&#32;:&#32;0)&#32;&lt;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)(DRMP3_HDR_GET_MY_SAMPLE_RATE(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>)&#32;==&#32;2);
1800 
1801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr_info-&gt;n_short_sfb)
1802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aa_bands&#32;=&#32;n_long_bands&#32;-&#32;1;
1804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_reorder(s-&gt;grbuf[ch]&#32;+&#32;n_long_bands*18,&#32;s-&gt;syn[0],&#32;gr_info-&gt;sfbtab&#32;+&#32;gr_info-&gt;n_long_sfb);
1805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1806 
1807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_antialias(s-&gt;grbuf[ch],&#32;aa_bands);
1808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct_gr(s-&gt;grbuf[ch],&#32;h-&gt;<link linkend="_structdrmp3dec_1afae3536c90ba792bfdf474b7f7816a75">mdct_overlap</link>[ch],&#32;gr_info-&gt;block_type,&#32;n_long_bands);
1809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_change_sign(s-&gt;grbuf[ch]);
1810 &#32;&#32;&#32;&#32;}
1811 }
1812 
1813 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_DCT_II(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1814 {
1815 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_sec[24]&#32;=&#32;{
1816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;10.19000816f,0.50060302f,0.50241929f,3.40760851f,0.50547093f,0.52249861f,2.05778098f,0.51544732f,0.56694406f,1.48416460f,0.53104258f,0.64682180f,1.16943991f,0.55310392f,0.78815460f,0.97256821f,0.58293498f,1.06067765f,0.83934963f,0.62250412f,1.72244716f,0.74453628f,0.67480832f,5.10114861f
1817 &#32;&#32;&#32;&#32;};
1818 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k&#32;=&#32;0;
1819 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1820 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&#32;&lt;&#32;n;&#32;k&#32;+=&#32;4)
1821 &#32;&#32;&#32;&#32;{
1822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t[4][8],&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;grbuf&#32;+&#32;k;
1824 
1825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>++)
1826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x0&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i*18]);
1828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x1&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(15&#32;-&#32;i)*18]);
1829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x2&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(16&#32;+&#32;i)*18]);
1830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x3&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(31&#32;-&#32;i)*18]);
1831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t0&#32;=&#32;DRMP3_VADD(x0,&#32;x3);
1832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t1&#32;=&#32;DRMP3_VADD(x1,&#32;x2);
1833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t2&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x1,&#32;x2),&#32;g_sec[3*i&#32;+&#32;0]);
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t3&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x0,&#32;x3),&#32;g_sec[3*i&#32;+&#32;1]);
1835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;DRMP3_VADD(t0,&#32;t1);
1836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[8]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(t0,&#32;t1),&#32;g_sec[3*i&#32;+&#32;2]);
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[16]&#32;=&#32;DRMP3_VADD(t3,&#32;t2);
1838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[24]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(t3,&#32;t2),&#32;g_sec[3*i&#32;+&#32;2]);
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;8)
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0],&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1],&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2],&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;x4&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4],&#32;x5&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5],&#32;x6&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6],&#32;x7&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7],&#32;xt;
1843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xt&#32;=&#32;DRMP3_VSUB(x0,&#32;x7);&#32;x0&#32;=&#32;DRMP3_VADD(x0,&#32;x7);
1844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;DRMP3_VSUB(x1,&#32;x6);&#32;x1&#32;=&#32;DRMP3_VADD(x1,&#32;x6);
1845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;DRMP3_VSUB(x2,&#32;x5);&#32;x2&#32;=&#32;DRMP3_VADD(x2,&#32;x5);
1846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VSUB(x3,&#32;x4);&#32;x3&#32;=&#32;DRMP3_VADD(x3,&#32;x4);
1847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x4&#32;=&#32;DRMP3_VSUB(x0,&#32;x3);&#32;x0&#32;=&#32;DRMP3_VADD(x0,&#32;x3);
1848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;DRMP3_VSUB(x1,&#32;x2);&#32;x1&#32;=&#32;DRMP3_VADD(x1,&#32;x2);
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;DRMP3_VADD(x0,&#32;x1);
1850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x0,&#32;x1),&#32;0.70710677f);
1851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VADD(x5,&#32;x6);
1852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x6,&#32;x7),&#32;0.70710677f);
1853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;DRMP3_VADD(x7,&#32;xt);
1854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x3,&#32;x4),&#32;0.70710677f);
1855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VSUB(x5,&#32;DRMP3_VMUL_S(x7,&#32;0.198912367f));&#32;<emphasis role="comment">/*&#32;rotate&#32;by&#32;PI/8&#32;*/</emphasis>
1856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;DRMP3_VADD(x7,&#32;DRMP3_VMUL_S(x5,&#32;0.382683432f));
1857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VSUB(x5,&#32;DRMP3_VMUL_S(x7,&#32;0.198912367f));
1858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;DRMP3_VSUB(xt,&#32;x6);&#32;xt&#32;=&#32;DRMP3_VADD(xt,&#32;x6);
1859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(xt,&#32;x7),&#32;0.50979561f);
1860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x4,&#32;x3),&#32;0.54119611f);
1861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x0,&#32;x5),&#32;0.60134488f);
1862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x0,&#32;x5),&#32;0.89997619f);
1863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x4,&#32;x3),&#32;1.30656302f);
1864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(xt,&#32;x7),&#32;2.56291556f);
1865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1866 
1867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;n&#32;-&#32;3)
1868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1869 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
1870 <emphasis role="preprocessor">#define&#32;DRMP3_VSAVE2(i,&#32;v)&#32;_mm_storel_pi((__m64&#32;*)(void*)&amp;y[i*18],&#32;v)</emphasis>
1871 <emphasis role="preprocessor">#else</emphasis>
1872 <emphasis role="preprocessor">#define&#32;DRMP3_VSAVE2(i,&#32;v)&#32;vst1_f32((float32_t&#32;*)&amp;y[(i)*18],&#32;&#32;vget_low_f32(v))</emphasis>
1873 <emphasis role="preprocessor">#endif</emphasis>
1874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;4*18)
1875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s&#32;=&#32;DRMP3_VADD(t[3][i],&#32;t[3][i&#32;+&#32;1]);
1877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(0,&#32;t[0][i]);
1878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(1,&#32;DRMP3_VADD(t[2][i],&#32;s));
1879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(2,&#32;DRMP3_VADD(t[1][i],&#32;t[1][i&#32;+&#32;1]));
1880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(3,&#32;DRMP3_VADD(t[2][1&#32;+&#32;i],&#32;s));
1881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(0,&#32;t[0][7]);
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(1,&#32;DRMP3_VADD(t[2][7],&#32;t[3][7]));
1884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(2,&#32;t[1][7]);
1885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(3,&#32;t[3][7]);
1886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1888 <emphasis role="preprocessor">#define&#32;DRMP3_VSAVE4(i,&#32;v)&#32;DRMP3_VSTORE(&amp;y[(i)*18],&#32;v)</emphasis>
1889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;4*18)
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s&#32;=&#32;DRMP3_VADD(t[3][i],&#32;t[3][i&#32;+&#32;1]);
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(0,&#32;t[0][i]);
1893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(1,&#32;DRMP3_VADD(t[2][i],&#32;s));
1894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(2,&#32;DRMP3_VADD(t[1][i],&#32;t[1][i&#32;+&#32;1]));
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(3,&#32;DRMP3_VADD(t[2][1&#32;+&#32;i],&#32;s));
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(0,&#32;t[0][7]);
1898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(1,&#32;DRMP3_VADD(t[2][7],&#32;t[3][7]));
1899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(2,&#32;t[1][7]);
1900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(3,&#32;t[3][7]);
1901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1902 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1903 <emphasis role="preprocessor">#endif</emphasis>
1904 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
1905 &#32;&#32;&#32;&#32;{}&#32;<emphasis role="comment">/*&#32;for&#32;HAVE_SIMD=1,&#32;MINIMP3_ONLY_SIMD=1&#32;case&#32;we&#32;do&#32;not&#32;need&#32;non-intrinsic&#32;&quot;else&quot;&#32;branch&#32;*/</emphasis>
1906 <emphasis role="preprocessor">#else</emphasis>
1907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&#32;&lt;&#32;n;&#32;k++)
1908 &#32;&#32;&#32;&#32;{
1909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t[4][8],&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;grbuf&#32;+&#32;k;
1910 
1911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>++)
1912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i*18];
1914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(15&#32;-&#32;i)*18];
1915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(16&#32;+&#32;i)*18];
1916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(31&#32;-&#32;i)*18];
1917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t0&#32;=&#32;x0&#32;+&#32;x3;
1918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t1&#32;=&#32;x1&#32;+&#32;x2;
1919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t2&#32;=&#32;(x1&#32;-&#32;x2)*g_sec[3*i&#32;+&#32;0];
1920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t3&#32;=&#32;(x0&#32;-&#32;x3)*g_sec[3*i&#32;+&#32;1];
1921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;t0&#32;+&#32;t1;
1922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[8]&#32;=&#32;(t0&#32;-&#32;t1)*g_sec[3*i&#32;+&#32;2];
1923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[16]&#32;=&#32;t3&#32;+&#32;t2;
1924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[24]&#32;=&#32;(t3&#32;-&#32;t2)*g_sec[3*i&#32;+&#32;2];
1925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;8)
1927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0],&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1],&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2],&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;x4&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4],&#32;x5&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5],&#32;x6&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6],&#32;x7&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7],&#32;xt;
1929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xt&#32;=&#32;x0&#32;-&#32;x7;&#32;x0&#32;+=&#32;x7;
1930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;x1&#32;-&#32;x6;&#32;x1&#32;+=&#32;x6;
1931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;x2&#32;-&#32;x5;&#32;x2&#32;+=&#32;x5;
1932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;x3&#32;-&#32;x4;&#32;x3&#32;+=&#32;x4;
1933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x4&#32;=&#32;x0&#32;-&#32;x3;&#32;x0&#32;+=&#32;x3;
1934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;x1&#32;-&#32;x2;&#32;x1&#32;+=&#32;x2;
1935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;x0&#32;+&#32;x1;
1936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4]&#32;=&#32;(x0&#32;-&#32;x1)*0.70710677f;
1937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;&#32;x5&#32;+&#32;x6;
1938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;(x6&#32;+&#32;x7)*0.70710677f;
1939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;&#32;x7&#32;+&#32;xt;
1940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;(x3&#32;+&#32;x4)*0.70710677f;
1941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;-=&#32;x7*0.198912367f;&#32;&#32;<emphasis role="comment">/*&#32;rotate&#32;by&#32;PI/8&#32;*/</emphasis>
1942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;+=&#32;x5*0.382683432f;
1943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;-=&#32;x7*0.198912367f;
1944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;xt&#32;-&#32;x6;&#32;xt&#32;+=&#32;x6;
1945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1]&#32;=&#32;(xt&#32;+&#32;x7)*0.50979561f;
1946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2]&#32;=&#32;(x4&#32;+&#32;x3)*0.54119611f;
1947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3]&#32;=&#32;(x0&#32;-&#32;x5)*0.60134488f;
1948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5]&#32;=&#32;(x0&#32;+&#32;x5)*0.89997619f;
1949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;=&#32;(x4&#32;-&#32;x3)*1.30656302f;
1950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7]&#32;=&#32;(xt&#32;-&#32;x7)*2.56291556f;
1951 
1952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;4*18)
1954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0*18]&#32;=&#32;t[0][i];
1956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1*18]&#32;=&#32;t[2][i]&#32;+&#32;t[3][i]&#32;+&#32;t[3][i&#32;+&#32;1];
1957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2*18]&#32;=&#32;t[1][i]&#32;+&#32;t[1][i&#32;+&#32;1];
1958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3*18]&#32;=&#32;t[2][i&#32;+&#32;1]&#32;+&#32;t[3][i]&#32;+&#32;t[3][i&#32;+&#32;1];
1959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0*18]&#32;=&#32;t[0][7];
1961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1*18]&#32;=&#32;t[2][7]&#32;+&#32;t[3][7];
1962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2*18]&#32;=&#32;t[1][7];
1963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3*18]&#32;=&#32;t[3][7];
1964 &#32;&#32;&#32;&#32;}
1965 <emphasis role="preprocessor">#endif</emphasis>
1966 }
1967 
1968 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_FLOAT_OUTPUT</emphasis>
1969 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;drmp3d_sample_t;
1970 
1971 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;drmp3d_scale_pcm(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>)
1972 {
1973 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;s;
1974 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_ARMV6</emphasis>
1975 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>&#32;s32&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>)(<link linkend="_structsample">sample</link>&#32;+&#32;.5f);
1976 &#32;&#32;&#32;&#32;s32&#32;-=&#32;(s32&#32;&lt;&#32;0);
1977 &#32;&#32;&#32;&#32;s&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)drmp3_clip_int16_arm(s32);
1978 <emphasis role="preprocessor">#else</emphasis>
1979 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&gt;=&#32;&#32;32766.5)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;32767;
1980 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&lt;=&#32;-32767.5)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)-32768;
1981 &#32;&#32;&#32;&#32;s&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)(<link linkend="_structsample">sample</link>&#32;+&#32;.5f);
1982 &#32;&#32;&#32;&#32;s&#32;-=&#32;(s&#32;&lt;&#32;0);&#32;&#32;&#32;<emphasis role="comment">/*&#32;away&#32;from&#32;zero,&#32;to&#32;be&#32;compliant&#32;*/</emphasis>
1983 <emphasis role="preprocessor">#endif</emphasis>
1984 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s;
1985 }
1986 <emphasis role="preprocessor">#else</emphasis>
1987 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3d_sample_t;
1988 
1989 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3d_scale_pcm(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>)
1990 {
1991 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structsample">sample</link>*(1.f/32768.f);
1992 }
1993 <emphasis role="preprocessor">#endif</emphasis>
1994 
1995 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_synth_pair(drmp3d_sample_t&#32;*pcm,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
1996 {
1997 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
1998 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[14*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;&#32;&#32;&#32;0])&#32;*&#32;29;
1999 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;1*64]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[13*64])&#32;*&#32;213;
2000 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[12*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;2*64])&#32;*&#32;459;
2001 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;3*64]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[11*64])&#32;*&#32;2037;
2002 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[10*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;4*64])&#32;*&#32;5153;
2003 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;5*64]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;9*64])&#32;*&#32;6574;
2004 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;8*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;6*64])&#32;*&#32;37489;
2005 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;7*64]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;75038;
2006 &#32;&#32;&#32;&#32;pcm[0]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
2007 
2008 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;+=&#32;2;
2009 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[14*64]&#32;*&#32;104;
2010 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[12*64]&#32;*&#32;1567;
2011 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[10*64]&#32;*&#32;9727;
2012 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;8*64]&#32;*&#32;64019;
2013 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;6*64]&#32;*&#32;-9975;
2014 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;4*64]&#32;*&#32;-45;
2015 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;2*64]&#32;*&#32;146;
2016 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;0*64]&#32;*&#32;-5;
2017 &#32;&#32;&#32;&#32;pcm[16*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
2018 }
2019 
2020 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_synth(<emphasis role="keywordtype">float</emphasis>&#32;*xl,&#32;drmp3d_sample_t&#32;*dstl,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*lins)
2021 {
2022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
2023 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*xr&#32;=&#32;xl&#32;+&#32;576*(nch&#32;-&#32;1);
2024 &#32;&#32;&#32;&#32;drmp3d_sample_t&#32;*dstr&#32;=&#32;dstl&#32;+&#32;(nch&#32;-&#32;1);
2025 
2026 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_win[]&#32;=&#32;{
2027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,26,-31,208,218,401,-519,2063,2000,4788,-5517,7134,5959,35640,-39336,74992,
2028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,24,-35,202,222,347,-581,2080,1952,4425,-5879,7640,5288,33791,-41176,74856,
2029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,21,-38,196,225,294,-645,2087,1893,4063,-6237,8092,4561,31947,-43006,74630,
2030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,19,-41,190,227,244,-711,2085,1822,3705,-6589,8492,3776,30112,-44821,74313,
2031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,17,-45,183,228,197,-779,2075,1739,3351,-6935,8840,2935,28289,-46617,73908,
2032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,16,-49,176,228,153,-848,2057,1644,3004,-7271,9139,2037,26482,-48390,73415,
2033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,14,-53,169,227,111,-919,2032,1535,2663,-7597,9389,1082,24694,-50137,72835,
2034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,13,-58,161,224,72,-991,2001,1414,2330,-7910,9592,70,22929,-51853,72169,
2035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,11,-63,154,221,36,-1064,1962,1280,2006,-8209,9750,-998,21189,-53534,71420,
2036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,10,-68,147,215,2,-1137,1919,1131,1692,-8491,9863,-2122,19478,-55178,70590,
2037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-3,9,-73,139,208,-29,-1210,1870,970,1388,-8755,9935,-3300,17799,-56778,69679,
2038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-3,8,-79,132,200,-57,-1283,1817,794,1095,-8998,9966,-4533,16155,-58333,68692,
2039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-4,7,-85,125,189,-83,-1356,1759,605,814,-9219,9959,-5818,14548,-59838,67629,
2040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-4,7,-91,117,177,-106,-1428,1698,402,545,-9416,9916,-7154,12980,-61289,66494,
2041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5,6,-97,111,163,-127,-1498,1634,185,288,-9585,9838,-8540,11455,-62684,65290
2042 &#32;&#32;&#32;&#32;};
2043 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*zlin&#32;=&#32;lins&#32;+&#32;15*64;
2044 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;g_win;
2045 
2046 &#32;&#32;&#32;&#32;zlin[4*15]&#32;&#32;&#32;&#32;&#32;=&#32;xl[18*16];
2047 &#32;&#32;&#32;&#32;zlin[4*15&#32;+&#32;1]&#32;=&#32;xr[18*16];
2048 &#32;&#32;&#32;&#32;zlin[4*15&#32;+&#32;2]&#32;=&#32;xl[0];
2049 &#32;&#32;&#32;&#32;zlin[4*15&#32;+&#32;3]&#32;=&#32;xr[0];
2050 
2051 &#32;&#32;&#32;&#32;zlin[4*31]&#32;&#32;&#32;&#32;&#32;=&#32;xl[1&#32;+&#32;18*16];
2052 &#32;&#32;&#32;&#32;zlin[4*31&#32;+&#32;1]&#32;=&#32;xr[1&#32;+&#32;18*16];
2053 &#32;&#32;&#32;&#32;zlin[4*31&#32;+&#32;2]&#32;=&#32;xl[1];
2054 &#32;&#32;&#32;&#32;zlin[4*31&#32;+&#32;3]&#32;=&#32;xr[1];
2055 
2056 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstr,&#32;nch,&#32;lins&#32;+&#32;4*15&#32;+&#32;1);
2057 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstr&#32;+&#32;32*nch,&#32;nch,&#32;lins&#32;+&#32;4*15&#32;+&#32;64&#32;+&#32;1);
2058 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstl,&#32;nch,&#32;lins&#32;+&#32;4*15);
2059 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstl&#32;+&#32;32*nch,&#32;nch,&#32;lins&#32;+&#32;4*15&#32;+&#32;64);
2060 
2061 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
2062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;14;&#32;i&#32;&gt;=&#32;0;&#32;i--)
2063 &#32;&#32;&#32;&#32;{
2064 <emphasis role="preprocessor">#define&#32;DRMP3_VLOAD(k)&#32;drmp3_f4&#32;w0&#32;=&#32;DRMP3_VSET(*w++);&#32;drmp3_f4&#32;w1&#32;=&#32;DRMP3_VSET(*w++);&#32;drmp3_f4&#32;vz&#32;=&#32;DRMP3_VLD(&amp;zlin[4*i&#32;-&#32;64*k]);&#32;drmp3_f4&#32;vy&#32;=&#32;DRMP3_VLD(&amp;zlin[4*i&#32;-&#32;64*(15&#32;-&#32;k)]);</emphasis>
2065 <emphasis role="preprocessor">#define&#32;DRMP3_V0(k)&#32;{&#32;DRMP3_VLOAD(k)&#32;b&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VADD(DRMP3_VMUL(vz,&#32;w1),&#32;DRMP3_VMUL(vy,&#32;w0))&#32;;&#32;a&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSUB(DRMP3_VMUL(vz,&#32;w0),&#32;DRMP3_VMUL(vy,&#32;w1));&#32;&#32;}</emphasis>
2066 <emphasis role="preprocessor">#define&#32;DRMP3_V1(k)&#32;{&#32;DRMP3_VLOAD(k)&#32;b&#32;=&#32;DRMP3_VADD(b,&#32;DRMP3_VADD(DRMP3_VMUL(vz,&#32;w1),&#32;DRMP3_VMUL(vy,&#32;w0)));&#32;a&#32;=&#32;DRMP3_VADD(a,&#32;DRMP3_VSUB(DRMP3_VMUL(vz,&#32;w0),&#32;DRMP3_VMUL(vy,&#32;w1)));&#32;}</emphasis>
2067 <emphasis role="preprocessor">#define&#32;DRMP3_V2(k)&#32;{&#32;DRMP3_VLOAD(k)&#32;b&#32;=&#32;DRMP3_VADD(b,&#32;DRMP3_VADD(DRMP3_VMUL(vz,&#32;w1),&#32;DRMP3_VMUL(vy,&#32;w0)));&#32;a&#32;=&#32;DRMP3_VADD(a,&#32;DRMP3_VSUB(DRMP3_VMUL(vy,&#32;w1),&#32;DRMP3_VMUL(vz,&#32;w0)));&#32;}</emphasis>
2068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
2069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i]&#32;&#32;&#32;&#32;&#32;=&#32;xl[18*(31&#32;-&#32;i)];
2070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;1]&#32;=&#32;xr[18*(31&#32;-&#32;i)];
2071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;2]&#32;=&#32;xl[1&#32;+&#32;18*(31&#32;-&#32;i)];
2072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;3]&#32;=&#32;xr[1&#32;+&#32;18*(31&#32;-&#32;i)];
2073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;64]&#32;=&#32;xl[1&#32;+&#32;18*(1&#32;+&#32;i)];
2074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;64&#32;+&#32;1]&#32;=&#32;xr[1&#32;+&#32;18*(1&#32;+&#32;i)];
2075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;-&#32;64&#32;+&#32;2]&#32;=&#32;xl[18*(1&#32;+&#32;i)];
2076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;-&#32;64&#32;+&#32;3]&#32;=&#32;xr[18*(1&#32;+&#32;i)];
2077 
2078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_V0(0)&#32;DRMP3_V2(1)&#32;DRMP3_V1(2)&#32;DRMP3_V2(3)&#32;DRMP3_V1(4)&#32;DRMP3_V2(5)&#32;DRMP3_V1(6)&#32;DRMP3_V2(7)
2079 
2080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2081 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_FLOAT_OUTPUT</emphasis>
2082 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
2083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_max&#32;=&#32;{&#32;32767.0f,&#32;32767.0f,&#32;32767.0f,&#32;32767.0f&#32;};
2084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_min&#32;=&#32;{&#32;-32768.0f,&#32;-32768.0f,&#32;-32768.0f,&#32;-32768.0f&#32;};
2085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;pcm8&#32;=&#32;_mm_packs_epi32(_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;g_max),&#32;g_min)),
2086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;g_max),&#32;g_min)));
2087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(15&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;1);
2088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(17&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;5);
2089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(15&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;0);
2090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(17&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;4);
2091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(47&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;3);
2092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(49&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;7);
2093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(47&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;2);
2094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(49&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;6);
2095 <emphasis role="preprocessor">#else</emphasis>
2096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x4_t&#32;pcma,&#32;pcmb;
2097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0.5f));
2098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0.5f));
2099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcma&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0)))));
2100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmb&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0)))));
2101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;pcma,&#32;1);
2102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;pcmb,&#32;1);
2103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;pcma,&#32;0);
2104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;pcmb,&#32;0);
2105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;pcma,&#32;3);
2106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;pcmb,&#32;3);
2107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;pcma,&#32;2);
2108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;pcmb,&#32;2);
2109 <emphasis role="preprocessor">#endif</emphasis>
2110 <emphasis role="preprocessor">#else</emphasis>
2111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;DRMP3_HAVE_SSE</emphasis>
2112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_scale&#32;=&#32;{&#32;1.0f/32768.0f,&#32;1.0f/32768.0f,&#32;1.0f/32768.0f,&#32;1.0f/32768.0f&#32;};
2113 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
2114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_scale&#32;=&#32;vdupq_n_f32(1.0f/32768.0f);
2115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
2116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VMUL(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;g_scale);
2117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VMUL(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;g_scale);
2118 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
2119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(1,&#32;1,&#32;1,&#32;1)));
2120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(1,&#32;1,&#32;1,&#32;1)));
2121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(0,&#32;0,&#32;0,&#32;0)));
2122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(0,&#32;0,&#32;0,&#32;0)));
2123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(3,&#32;3,&#32;3,&#32;3)));
2124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(3,&#32;3,&#32;3,&#32;3)));
2125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(2,&#32;2,&#32;2,&#32;2)));
2126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(2,&#32;2,&#32;2,&#32;2)));
2127 <emphasis role="preprocessor">#else</emphasis>
2128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;1);
2129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;1);
2130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;0);
2131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;0);
2132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;3);
2133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;3);
2134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;2);
2135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;2);
2136 <emphasis role="preprocessor">#endif</emphasis>
2137 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;DR_MP3_FLOAT_OUTPUT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2139 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
2140 <emphasis role="preprocessor">#endif</emphasis>
2141 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
2142 &#32;&#32;&#32;&#32;{}&#32;<emphasis role="comment">/*&#32;for&#32;HAVE_SIMD=1,&#32;MINIMP3_ONLY_SIMD=1&#32;case&#32;we&#32;do&#32;not&#32;need&#32;non-intrinsic&#32;&quot;else&quot;&#32;branch&#32;*/</emphasis>
2143 <emphasis role="preprocessor">#else</emphasis>
2144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;14;&#32;i&#32;&gt;=&#32;0;&#32;i--)
2145 &#32;&#32;&#32;&#32;{
2146 <emphasis role="preprocessor">#define&#32;DRMP3_LOAD(k)&#32;float&#32;w0&#32;=&#32;*w++;&#32;float&#32;w1&#32;=&#32;*w++;&#32;float&#32;*vz&#32;=&#32;&amp;zlin[4*i&#32;-&#32;k*64];&#32;float&#32;*vy&#32;=&#32;&amp;zlin[4*i&#32;-&#32;(15&#32;-&#32;k)*64];</emphasis>
2147 <emphasis role="preprocessor">#define&#32;DRMP3_S0(k)&#32;{&#32;int&#32;j;&#32;DRMP3_LOAD(k);&#32;for&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;b[j]&#32;&#32;=&#32;vz[j]*w1&#32;+&#32;vy[j]*w0,&#32;a[j]&#32;&#32;=&#32;vz[j]*w0&#32;-&#32;vy[j]*w1;&#32;}</emphasis>
2148 <emphasis role="preprocessor">#define&#32;DRMP3_S1(k)&#32;{&#32;int&#32;j;&#32;DRMP3_LOAD(k);&#32;for&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;b[j]&#32;+=&#32;vz[j]*w1&#32;+&#32;vy[j]*w0,&#32;a[j]&#32;+=&#32;vz[j]*w0&#32;-&#32;vy[j]*w1;&#32;}</emphasis>
2149 <emphasis role="preprocessor">#define&#32;DRMP3_S2(k)&#32;{&#32;int&#32;j;&#32;DRMP3_LOAD(k);&#32;for&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;b[j]&#32;+=&#32;vz[j]*w1&#32;+&#32;vy[j]*w0,&#32;a[j]&#32;+=&#32;vy[j]*w1&#32;-&#32;vz[j]*w0;&#32;}</emphasis>
2150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[4],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[4];
2151 
2152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i]&#32;&#32;&#32;&#32;&#32;=&#32;xl[18*(31&#32;-&#32;i)];
2153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;1]&#32;=&#32;xr[18*(31&#32;-&#32;i)];
2154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;2]&#32;=&#32;xl[1&#32;+&#32;18*(31&#32;-&#32;i)];
2155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;3]&#32;=&#32;xr[1&#32;+&#32;18*(31&#32;-&#32;i)];
2156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;+&#32;16)]&#32;&#32;&#32;=&#32;xl[1&#32;+&#32;18*(1&#32;+&#32;i)];
2157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;+&#32;16)&#32;+&#32;1]&#32;=&#32;xr[1&#32;+&#32;18*(1&#32;+&#32;i)];
2158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;-&#32;16)&#32;+&#32;2]&#32;=&#32;xl[18*(1&#32;+&#32;i)];
2159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;-&#32;16)&#32;+&#32;3]&#32;=&#32;xr[18*(1&#32;+&#32;i)];
2160 
2161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_S0(0)&#32;DRMP3_S2(1)&#32;DRMP3_S1(2)&#32;DRMP3_S2(3)&#32;DRMP3_S1(4)&#32;DRMP3_S2(5)&#32;DRMP3_S1(6)&#32;DRMP3_S2(7)
2162 
2163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(15&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[1]);
2164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(17&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[1]);
2165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(15&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[0]);
2166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(17&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[0]);
2167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(47&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[3]);
2168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(49&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[3]);
2169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(47&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[2]);
2170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(49&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[2]);
2171 &#32;&#32;&#32;&#32;}
2172 <emphasis role="preprocessor">#endif</emphasis>
2173 }
2174 
2175 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_synth_granule(<emphasis role="keywordtype">float</emphasis>&#32;*qmf_state,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch,&#32;drmp3d_sample_t&#32;*pcm,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*lins)
2176 {
2177 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
2178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nch;&#32;i++)
2179 &#32;&#32;&#32;&#32;{
2180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_DCT_II(grbuf&#32;+&#32;576*i,&#32;nbands);
2181 &#32;&#32;&#32;&#32;}
2182 
2183 &#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(lins,&#32;qmf_state,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)*15*64);
2184 
2185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nbands;&#32;i&#32;+=&#32;2)
2186 &#32;&#32;&#32;&#32;{
2187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_synth(grbuf&#32;+&#32;i,&#32;pcm&#32;+&#32;32*nch*i,&#32;nch,&#32;lins&#32;+&#32;i*64);
2188 &#32;&#32;&#32;&#32;}
2189 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NONSTANDARD_BUT_LOGICAL</emphasis>
2190 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nch&#32;==&#32;1)
2191 &#32;&#32;&#32;&#32;{
2192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;15*64;&#32;i&#32;+=&#32;2)
2193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qmf_state[i]&#32;=&#32;lins[nbands*64&#32;+&#32;i];
2195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2196 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
2197 <emphasis role="preprocessor">#endif</emphasis>
2198 &#32;&#32;&#32;&#32;{
2199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(qmf_state,&#32;lins&#32;+&#32;nbands*64,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)*15*64);
2200 &#32;&#32;&#32;&#32;}
2201 }
2202 
2203 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3d_match_frame(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes)
2204 {
2205 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;nmatch;
2206 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0,&#32;nmatch&#32;=&#32;0;&#32;nmatch&#32;&lt;&#32;DRMP3_MAX_FRAME_SYNC_MATCHES;&#32;nmatch++)
2207 &#32;&#32;&#32;&#32;{
2208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;drmp3_hdr_frame_bytes(hdr&#32;+&#32;i,&#32;frame_bytes)&#32;+&#32;drmp3_hdr_padding(hdr&#32;+&#32;i);
2209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;DRMP3_HDR_SIZE&#32;&gt;&#32;mp3_bytes)
2210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nmatch&#32;&gt;&#32;0;
2211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_hdr_compare(hdr,&#32;hdr&#32;+&#32;i))
2212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2213 &#32;&#32;&#32;&#32;}
2214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2215 }
2216 
2217 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3d_find_frame(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*mp3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*free_format_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ptr_frame_bytes)
2218 {
2219 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
2220 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;mp3_bytes&#32;-&#32;DRMP3_HDR_SIZE;&#32;i++,&#32;mp3++)
2221 &#32;&#32;&#32;&#32;{
2222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_hdr_valid(mp3))
2223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes&#32;=&#32;drmp3_hdr_frame_bytes(mp3,&#32;*free_format_bytes);
2225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_and_padding&#32;=&#32;frame_bytes&#32;+&#32;drmp3_hdr_padding(mp3);
2226 
2227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;DRMP3_HDR_SIZE;&#32;!frame_bytes&#32;&amp;&amp;&#32;k&#32;&lt;&#32;DRMP3_MAX_FREE_FORMAT_FRAME_SIZE&#32;&amp;&amp;&#32;i&#32;+&#32;2*k&#32;&lt;&#32;mp3_bytes&#32;-&#32;DRMP3_HDR_SIZE;&#32;k++)
2228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_hdr_compare(mp3,&#32;mp3&#32;+&#32;k))
2230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fb&#32;=&#32;k&#32;-&#32;drmp3_hdr_padding(mp3);
2232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextfb&#32;=&#32;fb&#32;+&#32;drmp3_hdr_padding(mp3&#32;+&#32;k);
2233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;k&#32;+&#32;nextfb&#32;+&#32;DRMP3_HDR_SIZE&#32;&gt;&#32;mp3_bytes&#32;||&#32;!drmp3_hdr_compare(mp3,&#32;mp3&#32;+&#32;k&#32;+&#32;nextfb))
2234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
2235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_and_padding&#32;=&#32;k;
2236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_bytes&#32;=&#32;fb;
2237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*free_format_bytes&#32;=&#32;fb;
2238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2240 
2241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((frame_bytes&#32;&amp;&amp;&#32;i&#32;+&#32;frame_and_padding&#32;&lt;=&#32;mp3_bytes&#32;&amp;&amp;
2242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_match_frame(mp3,&#32;mp3_bytes&#32;-&#32;i,&#32;frame_bytes))&#32;||
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(!i&#32;&amp;&amp;&#32;frame_and_padding&#32;==&#32;mp3_bytes))
2244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ptr_frame_bytes&#32;=&#32;frame_and_padding;
2246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
2247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*free_format_bytes&#32;=&#32;0;
2249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2250 &#32;&#32;&#32;&#32;}
2251 &#32;&#32;&#32;&#32;*ptr_frame_bytes&#32;=&#32;0;
2252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mp3_bytes;
2253 }
2254 
2255 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec)
2256 {
2257 &#32;&#32;&#32;&#32;dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>[0]&#32;=&#32;0;
2258 }
2259 
2260 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*mp3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pcm,&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;*info)
2261 {
2262 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;igr,&#32;frame_size&#32;=&#32;0,&#32;success&#32;=&#32;1;
2263 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr;
2264 &#32;&#32;&#32;&#32;drmp3_bs&#32;bs_frame[1];
2265 &#32;&#32;&#32;&#32;drmp3dec_scratch&#32;scratch;
2266 
2267 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mp3_bytes&#32;&gt;&#32;4&#32;&amp;&amp;&#32;dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>[0]&#32;==&#32;0xff&#32;&amp;&amp;&#32;drmp3_hdr_compare(dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>,&#32;mp3))
2268 &#32;&#32;&#32;&#32;{
2269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_size&#32;=&#32;drmp3_hdr_frame_bytes(mp3,&#32;dec-&gt;<link linkend="_structdrmp3dec_1a3d9913952fef5b67f9c064d56650cd1e">free_format_bytes</link>)&#32;+&#32;drmp3_hdr_padding(mp3);
2270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frame_size&#32;!=&#32;mp3_bytes&#32;&amp;&amp;&#32;(frame_size&#32;+&#32;DRMP3_HDR_SIZE&#32;&gt;&#32;mp3_bytes&#32;||&#32;!drmp3_hdr_compare(mp3,&#32;mp3&#32;+&#32;frame_size)))
2271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_size&#32;=&#32;0;
2273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2274 &#32;&#32;&#32;&#32;}
2275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frame_size)
2276 &#32;&#32;&#32;&#32;{
2277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_MEMORY(dec,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structdrmp3dec">drmp3dec</link>));
2278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;drmp3d_find_frame(mp3,&#32;mp3_bytes,&#32;&amp;dec-&gt;<link linkend="_structdrmp3dec_1a3d9913952fef5b67f9c064d56650cd1e">free_format_bytes</link>,&#32;&amp;frame_size);
2279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frame_size&#32;||&#32;i&#32;+&#32;frame_size&#32;&gt;&#32;mp3_bytes)
2280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;=&#32;i;
2282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2284 &#32;&#32;&#32;&#32;}
2285 
2286 &#32;&#32;&#32;&#32;hdr&#32;=&#32;mp3&#32;+&#32;i;
2287 &#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>,&#32;hdr,&#32;DRMP3_HDR_SIZE);
2288 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;=&#32;i&#32;+&#32;frame_size;
2289 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>&#32;=&#32;DRMP3_HDR_IS_MONO(hdr)&#32;?&#32;1&#32;:&#32;2;
2290 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1abe77517f4ee3765ba556faa60ea1cb05">hz</link>&#32;=&#32;drmp3_hdr_sample_rate_hz(hdr);
2291 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a91703350261bae1eb34df2e6a6e7661e">layer</link>&#32;=&#32;4&#32;-&#32;DRMP3_HDR_GET_LAYER(hdr);
2292 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1ac8b0b572f5d049f8520abdd0ca0f9c49">bitrate_kbps</link>&#32;=&#32;drmp3_hdr_bitrate_kbps(hdr);
2293 
2294 &#32;&#32;&#32;&#32;drmp3_bs_init(bs_frame,&#32;hdr&#32;+&#32;DRMP3_HDR_SIZE,&#32;frame_size&#32;-&#32;DRMP3_HDR_SIZE);
2295 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_CRC(hdr))
2296 &#32;&#32;&#32;&#32;{
2297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_bs_get_bits(bs_frame,&#32;16);
2298 &#32;&#32;&#32;&#32;}
2299 
2300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structdrmp3dec__frame__info_1a91703350261bae1eb34df2e6a6e7661e">layer</link>&#32;==&#32;3)
2301 &#32;&#32;&#32;&#32;{
2302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;main_data_begin&#32;=&#32;drmp3_L3_read_side_info(bs_frame,&#32;scratch.gr_info,&#32;hdr);
2303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(main_data_begin&#32;&lt;&#32;0&#32;||&#32;bs_frame-&gt;pos&#32;&gt;&#32;bs_frame-&gt;limit)
2304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(dec);
2306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success&#32;=&#32;drmp3_L3_restore_reservoir(dec,&#32;bs_frame,&#32;&amp;scratch,&#32;main_data_begin);
2309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(success&#32;&amp;&amp;&#32;pcm&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
2310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(igr&#32;=&#32;0;&#32;igr&#32;&lt;&#32;(DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;2&#32;:&#32;1);&#32;igr++,&#32;pcm&#32;=&#32;DRMP3_OFFSET_PTR(pcm,&#32;<emphasis role="keyword">sizeof</emphasis>(drmp3d_sample_t)*576*info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>))
2312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_MEMORY(scratch.grbuf[0],&#32;576*2*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_decode(dec,&#32;&amp;scratch,&#32;scratch.gr_info&#32;+&#32;igr*info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>);
2315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_synth_granule(dec-&gt;<link linkend="_structdrmp3dec_1a26ca95ae61c105a21cf326635af76ed2">qmf_state</link>,&#32;scratch.grbuf[0],&#32;18,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>,&#32;(drmp3d_sample_t*)pcm,&#32;scratch.syn[0]);
2316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_save_reservoir(dec,&#32;&amp;scratch);
2319 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
2320 &#32;&#32;&#32;&#32;{
2321 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_MP3</emphasis>
2322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2323 <emphasis role="preprocessor">#else</emphasis>
2324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L12_scale_info&#32;sci[1];
2325 
2326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcm&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_hdr_frame_samples(hdr);
2328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2329 
2330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L12_read_scale_info(hdr,&#32;bs_frame,&#32;sci);
2331 
2332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_MEMORY(scratch.grbuf[0],&#32;576*2*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0,&#32;igr&#32;=&#32;0;&#32;igr&#32;&lt;&#32;3;&#32;igr++)
2334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(12&#32;==&#32;(i&#32;+=&#32;drmp3_L12_dequantize_granule(scratch.grbuf[0]&#32;+&#32;i,&#32;bs_frame,&#32;sci,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a91703350261bae1eb34df2e6a6e7661e">layer</link>&#32;|&#32;1)))
2336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
2338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L12_apply_scf_384(sci,&#32;sci-&gt;scf&#32;+&#32;igr,&#32;scratch.grbuf[0]);
2339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_synth_granule(dec-&gt;<link linkend="_structdrmp3dec_1a26ca95ae61c105a21cf326635af76ed2">qmf_state</link>,&#32;scratch.grbuf[0],&#32;12,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>,&#32;(drmp3d_sample_t*)pcm,&#32;scratch.syn[0]);
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_MEMORY(scratch.grbuf[0],&#32;576*2*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcm&#32;=&#32;DRMP3_OFFSET_PTR(pcm,&#32;<emphasis role="keyword">sizeof</emphasis>(drmp3d_sample_t)*384*info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>);
2342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bs_frame-&gt;pos&#32;&gt;&#32;bs_frame-&gt;limit)
2344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(dec);
2346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2349 <emphasis role="preprocessor">#endif</emphasis>
2350 &#32;&#32;&#32;&#32;}
2351 
2352 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success*drmp3_hdr_frame_samples(dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
2353 }
2354 
2355 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1abe41d7ed1ca280315620335435a62c32">drmp3dec_f32_to_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;*out,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;num_samples)
2356 {
2357 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;
2358 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
2359 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;aligned_count&#32;=&#32;num_samples&#32;&amp;&#32;~7;
2360 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&#32;&lt;&#32;aligned_count;&#32;i+=8)
2361 &#32;&#32;&#32;&#32;{
2362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;DRMP3_VSET(32768.0f);
2363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VMUL(DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>[i&#32;&#32;]),&#32;scale);
2364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VMUL(DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>[i+4]),&#32;scale);
2365 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
2366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s16max&#32;=&#32;DRMP3_VSET(&#32;32767.0f);
2367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s16min&#32;=&#32;DRMP3_VSET(-32768.0f);
2368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;pcm8&#32;=&#32;_mm_packs_epi32(_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;s16max),&#32;s16min)),
2369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;s16max),&#32;s16min)));
2370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i&#32;&#32;]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;0);
2371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;1);
2372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;2);
2373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+3]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;3);
2374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+4]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;4);
2375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+5]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;5);
2376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+6]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;6);
2377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+7]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;7);
2378 <emphasis role="preprocessor">#else</emphasis>
2379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x4_t&#32;pcma,&#32;pcmb;
2380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0.5f));
2381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0.5f));
2382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcma&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0)))));
2383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmb&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0)))));
2384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i&#32;&#32;,&#32;pcma,&#32;0);
2385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+1,&#32;pcma,&#32;1);
2386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+2,&#32;pcma,&#32;2);
2387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+3,&#32;pcma,&#32;3);
2388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+4,&#32;pcmb,&#32;0);
2389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+5,&#32;pcmb,&#32;1);
2390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+6,&#32;pcmb,&#32;2);
2391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+7,&#32;pcmb,&#32;3);
2392 <emphasis role="preprocessor">#endif</emphasis>
2393 &#32;&#32;&#32;&#32;}
2394 <emphasis role="preprocessor">#endif</emphasis>
2395 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&#32;&lt;&#32;num_samples;&#32;i++)
2396 &#32;&#32;&#32;&#32;{
2397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>[i]&#32;*&#32;32768.0f;
2398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&gt;=&#32;&#32;32766.5)
2399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;32767;
2400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&lt;=&#32;-32767.5)
2401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)-32768;
2402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;s&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)(<link linkend="_structsample">sample</link>&#32;+&#32;.5f);
2405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;-=&#32;(s&#32;&lt;&#32;0);&#32;&#32;&#32;<emphasis role="comment">/*&#32;away&#32;from&#32;zero,&#32;to&#32;be&#32;compliant&#32;*/</emphasis>
2406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;s;
2407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2408 &#32;&#32;&#32;&#32;}
2409 }
2410 
2411 
2412 
2413 <emphasis role="comment">/************************************************************************************************************************************************************</emphasis>
2414 <emphasis role="comment"></emphasis>
2415 <emphasis role="comment">&#32;Main&#32;Public&#32;API</emphasis>
2416 <emphasis role="comment"></emphasis>
2417 <emphasis role="comment">&#32;************************************************************************************************************************************************************/</emphasis>
2418 <emphasis role="preprocessor">#if&#32;defined(SIZE_MAX)</emphasis>
2419 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;DRMP3_SIZE_MAX&#32;&#32;SIZE_MAX</emphasis>
2420 <emphasis role="preprocessor">#else</emphasis>
2421 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(_WIN64)&#32;||&#32;defined(_LP64)&#32;||&#32;defined(__LP64__)</emphasis>
2422 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_SIZE_MAX&#32;&#32;((drmp3_uint64)0xFFFFFFFFFFFFFFFF)</emphasis>
2423 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
2424 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_SIZE_MAX&#32;&#32;0xFFFFFFFF</emphasis>
2425 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2426 <emphasis role="preprocessor">#endif</emphasis>
2427 
2428 <emphasis role="comment">/*&#32;Options.&#32;*/</emphasis>
2429 <emphasis role="preprocessor">#ifndef&#32;DRMP3_SEEK_LEADING_MP3_FRAMES</emphasis>
2430 <emphasis role="preprocessor">#define&#32;DRMP3_SEEK_LEADING_MP3_FRAMES&#32;&#32;&#32;2</emphasis>
2431 <emphasis role="preprocessor">#endif</emphasis>
2432 
2433 <emphasis role="preprocessor">#define&#32;DRMP3_MIN_DATA_CHUNK_SIZE&#32;&#32;&#32;16384</emphasis>
2434 
2435 <emphasis role="comment">/*&#32;The&#32;size&#32;in&#32;bytes&#32;of&#32;each&#32;chunk&#32;of&#32;data&#32;to&#32;read&#32;from&#32;the&#32;MP3&#32;stream.&#32;minimp3&#32;recommends&#32;at&#32;least&#32;16K,&#32;but&#32;in&#32;an&#32;attempt&#32;to&#32;reduce&#32;data&#32;movement&#32;I&apos;m&#32;making&#32;this&#32;slightly&#32;larger.&#32;*/</emphasis>
2436 <emphasis role="preprocessor">#ifndef&#32;DRMP3_DATA_CHUNK_SIZE</emphasis>
2437 <emphasis role="preprocessor">#define&#32;DRMP3_DATA_CHUNK_SIZE&#32;&#32;(DRMP3_MIN_DATA_CHUNK_SIZE*4)</emphasis>
2438 <emphasis role="preprocessor">#endif</emphasis>
2439 
2440 
2441 <emphasis role="preprocessor">#define&#32;DRMP3_COUNTOF(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(sizeof(x)&#32;/&#32;sizeof(x[0]))</emphasis>
2442 <emphasis role="preprocessor">#define&#32;DRMP3_CLAMP(x,&#32;lo,&#32;hi)&#32;&#32;(DRMP3_MAX(lo,&#32;DRMP3_MIN(x,&#32;hi)))</emphasis>
2443 
2444 <emphasis role="preprocessor">#ifndef&#32;DRMP3_PI_D</emphasis>
2445 <emphasis role="preprocessor">#define&#32;DRMP3_PI_D&#32;&#32;&#32;&#32;3.14159265358979323846264</emphasis>
2446 <emphasis role="preprocessor">#endif</emphasis>
2447 
2448 <emphasis role="preprocessor">#define&#32;DRMP3_DEFAULT_RESAMPLER_LPF_ORDER&#32;&#32;&#32;2</emphasis>
2449 
2450 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af2197e726c5b054f15370dab95d161f3">DRMP3_INLINE</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_mix_f32(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
2451 {
2452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*(1-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
2453 }
2454 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af2197e726c5b054f15370dab95d161f3">DRMP3_INLINE</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_mix_f32_fast(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
2455 {
2456 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;r0&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
2457 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;r1&#32;=&#32;r0*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
2458 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;r1;
2459 &#32;&#32;&#32;&#32;<emphasis role="comment">/*return&#32;x&#32;+&#32;(y&#32;-&#32;x)*a;*/</emphasis>
2460 }
2461 
2462 
2463 <emphasis role="comment">/*</emphasis>
2464 <emphasis role="comment">Greatest&#32;common&#32;factor&#32;using&#32;Euclid&apos;s&#32;algorithm&#32;iteratively.</emphasis>
2465 <emphasis role="comment">*/</emphasis>
2466 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af2197e726c5b054f15370dab95d161f3">DRMP3_INLINE</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_gcf_u32(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
2467 {
2468 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
2469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;==&#32;0)&#32;{
2470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;t&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
2473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
2474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;t&#32;%&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
2475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2476 &#32;&#32;&#32;&#32;}
2477 
2478 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
2479 }
2480 
2481 
2482 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;drmp3__malloc_default(<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2483 {
2484 &#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)pUserData;
2485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raudio_8c_1abe2b0095a6f5db72e3dd0cab1bc10594">DRMP3_MALLOC</link>(sz);
2486 }
2487 
2488 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;drmp3__realloc_default(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2489 {
2490 &#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)pUserData;
2491 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raudio_8c_1a8cd916aeef2645868e73b09c8452b31c">DRMP3_REALLOC</link>(p,&#32;sz);
2492 }
2493 
2494 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3__free_default(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2495 {
2496 &#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)pUserData;
2497 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a0c7e6c3a95cf598fd459fe84e59ceea6">DRMP3_FREE</link>(p);
2498 }
2499 
2500 
2501 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;drmp3__malloc_from_callbacks(<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2502 {
2503 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2505 &#32;&#32;&#32;&#32;}
2506 
2507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1aae0ea78e8e0f630a1bbcf47f50d78cd7">onMalloc</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1aae0ea78e8e0f630a1bbcf47f50d78cd7">onMalloc</link>(sz,&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>);
2509 &#32;&#32;&#32;&#32;}
2510 
2511 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Try&#32;using&#32;realloc().&#32;*/</emphasis>
2512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1ab4f4f2262f3e7e431b66da490818aa65">onRealloc</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1ab4f4f2262f3e7e431b66da490818aa65">onRealloc</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;sz,&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>);
2514 &#32;&#32;&#32;&#32;}
2515 
2516 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2517 }
2518 
2519 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;drmp3__realloc_from_callbacks(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;szNew,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;szOld,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2520 {
2521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2523 &#32;&#32;&#32;&#32;}
2524 
2525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1ab4f4f2262f3e7e431b66da490818aa65">onRealloc</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1ab4f4f2262f3e7e431b66da490818aa65">onRealloc</link>(p,&#32;szNew,&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>);
2527 &#32;&#32;&#32;&#32;}
2528 
2529 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Try&#32;emulating&#32;realloc()&#32;in&#32;terms&#32;of&#32;malloc()/free().&#32;*/</emphasis>
2530 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1aae0ea78e8e0f630a1bbcf47f50d78cd7">onMalloc</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;&amp;&amp;&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1a8ad923b2c9487037c78102745ed65db8">onFree</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;p2;
2532 
2533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p2&#32;=&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1aae0ea78e8e0f630a1bbcf47f50d78cd7">onMalloc</link>(szNew,&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>);
2534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p2&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2537 
2538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(p2,&#32;p,&#32;szOld);
2540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1a8ad923b2c9487037c78102745ed65db8">onFree</link>(p,&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>);
2541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2542 
2543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p2;
2544 &#32;&#32;&#32;&#32;}
2545 
2546 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2547 }
2548 
2549 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3__free_from_callbacks(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2550 {
2551 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pAllocationCallbacks&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2553 &#32;&#32;&#32;&#32;}
2554 
2555 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1a8ad923b2c9487037c78102745ed65db8">onFree</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1a8ad923b2c9487037c78102745ed65db8">onFree</link>(p,&#32;pAllocationCallbacks-&gt;<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>);
2557 &#32;&#32;&#32;&#32;}
2558 }
2559 
2560 
2561 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>&#32;drmp3_copy_allocation_callbacks_or_defaults(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2562 {
2563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Copy.&#32;*/</emphasis>
2565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*pAllocationCallbacks;
2566 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Defaults.&#32;*/</emphasis>
2568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>&#32;allocationCallbacks;
2569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocationCallbacks.<link linkend="_structdrmp3__allocation__callbacks_1af8006d43364ab296fe493789b695ee18">pUserData</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocationCallbacks.<link linkend="_structdrmp3__allocation__callbacks_1aae0ea78e8e0f630a1bbcf47f50d78cd7">onMalloc</link>&#32;&#32;=&#32;drmp3__malloc_default;
2571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocationCallbacks.<link linkend="_structdrmp3__allocation__callbacks_1ab4f4f2262f3e7e431b66da490818aa65">onRealloc</link>&#32;=&#32;drmp3__realloc_default;
2572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocationCallbacks.<link linkend="_structdrmp3__allocation__callbacks_1a8ad923b2c9487037c78102745ed65db8">onFree</link>&#32;&#32;&#32;&#32;=&#32;drmp3__free_default;
2573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;allocationCallbacks;
2574 &#32;&#32;&#32;&#32;}
2575 }
2576 
2577 
2578 
2579 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drmp3__on_read(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
2580 {
2581 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>(pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>,&#32;pBufferOut,&#32;bytesToRead);
2582 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;+=&#32;bytesRead;
2583 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesRead;
2584 }
2585 
2586 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2587 {
2588 &#32;&#32;&#32;&#32;DRMP3_ASSERT(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;=&#32;0);
2589 
2590 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>(pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;origin))&#32;{
2591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2592 &#32;&#32;&#32;&#32;}
2593 
2594 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>)&#32;{
2595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
2596 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
2598 &#32;&#32;&#32;&#32;}
2599 
2600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2601 }
2602 
2603 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek_64(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2604 {
2605 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&lt;=&#32;0x7FFFFFFF)&#32;{
2606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__on_seek(pMP3,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;origin);
2607 &#32;&#32;&#32;&#32;}
2608 
2609 
2610 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Getting&#32;here&#32;&quot;offset&quot;&#32;is&#32;too&#32;large&#32;for&#32;a&#32;32-bit&#32;integer.&#32;We&#32;just&#32;keep&#32;seeking&#32;forward&#32;until&#32;we&#32;hit&#32;the&#32;offset.&#32;*/</emphasis>
2611 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>))&#32;{
2612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2613 &#32;&#32;&#32;&#32;}
2614 
2615 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;0x7FFFFFFF;
2616 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;0)&#32;{
2617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&lt;=&#32;0x7FFFFFFF)&#32;{
2618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>))&#32;{
2619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;0;
2622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>))&#32;{
2624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;0x7FFFFFFF;
2627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2628 &#32;&#32;&#32;&#32;}
2629 
2630 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2631 }
2632 
2633 
2634 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame_ex__callbacks(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;drmp3d_sample_t*&#32;pPCMFrames)
2635 {
2636 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRead&#32;=&#32;0;
2637 
2638 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2639 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2640 
2641 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>)&#32;{
2642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2643 &#32;&#32;&#32;&#32;}
2644 
2645 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
2646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;info;
2647 
2648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;minimp3&#32;recommends&#32;doing&#32;data&#32;submission&#32;in&#32;chunks&#32;of&#32;at&#32;least&#32;16K.&#32;If&#32;we&#32;don&apos;t&#32;have&#32;at&#32;least&#32;16K&#32;bytes&#32;available,&#32;get&#32;more.&#32;*/</emphasis>
2649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&lt;&#32;DRMP3_MIN_DATA_CHUNK_SIZE)&#32;{
2650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2651 
2652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;First&#32;we&#32;need&#32;to&#32;move&#32;the&#32;data&#32;down.&#32;*/</emphasis>
2653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_MOVE_MEMORY(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1a3439d84dab3fb458593e9bca81312942">dataConsumed</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>);
2655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2656 
2657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a3439d84dab3fb458593e9bca81312942">dataConsumed</link>&#32;=&#32;0;
2658 
2659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;&lt;&#32;DRMP3_DATA_CHUNK_SIZE)&#32;{
2660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pNewData;
2661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;newDataCap;
2662 
2663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newDataCap&#32;=&#32;DRMP3_DATA_CHUNK_SIZE;
2664 
2665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewData&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)drmp3__realloc_from_callbacks(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;newDataCap,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
2666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;Out&#32;of&#32;memory.&#32;*/</emphasis>
2668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2669 
2670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;=&#32;pNewData;
2671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;=&#32;newDataCap;
2672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2673 
2674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesRead&#32;=&#32;drmp3__on_read(pMP3,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>,&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>));
2675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesRead&#32;==&#32;0)&#32;{
2676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;==&#32;0)&#32;{
2677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;No&#32;data.&#32;*/</emphasis>
2679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2681 
2682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;+=&#32;bytesRead;
2683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2684 
2685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&gt;&#32;INT_MAX)&#32;{
2686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;File&#32;too&#32;big.&#32;*/</emphasis>
2688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2689 
2690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;&gt;&#32;0);
2692 
2693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1a3439d84dab3fb458593e9bca81312942">dataConsumed</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>,&#32;pPCMFrames,&#32;&amp;info);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;size_t&#32;-&gt;&#32;int&#32;conversion&#32;thanks&#32;to&#32;the&#32;check&#32;above.&#32;*/</emphasis>
2694 
2695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Consume&#32;the&#32;data.&#32;*/</emphasis>
2696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;&gt;&#32;0)&#32;{
2697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a3439d84dab3fb458593e9bca81312942">dataConsumed</link>&#32;+=&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>;
2698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&#32;&#32;&#32;&#32;-=&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>;
2699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2700 
2701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;pcmFramesRead&#32;will&#32;be&#32;equal&#32;to&#32;0&#32;if&#32;decoding&#32;failed.&#32;If&#32;it&#32;is&#32;zero&#32;and&#32;info.frame_bytes&#32;&gt;&#32;0&#32;then&#32;we&#32;have&#32;successfully&#32;decoded&#32;the&#32;frame.&#32;*/</emphasis>
2702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesRead&#32;&gt;&#32;0)&#32;{
2703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;drmp3_hdr_frame_samples(pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>.<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
2704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;=&#32;0;
2705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;pcmFramesRead;
2706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>;
2707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1abe77517f4ee3765ba556faa60ea1cb05">hz</link>;
2708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;==&#32;0)&#32;{
2710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Need&#32;more&#32;data.&#32;minimp3&#32;recommends&#32;doing&#32;data&#32;submission&#32;in&#32;16K&#32;chunks.&#32;*/</emphasis>
2711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2712 
2713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;First&#32;we&#32;need&#32;to&#32;move&#32;the&#32;data&#32;down.&#32;*/</emphasis>
2714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_MOVE_MEMORY(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1a3439d84dab3fb458593e9bca81312942">dataConsumed</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>);
2715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a3439d84dab3fb458593e9bca81312942">dataConsumed</link>&#32;=&#32;0;
2716 
2717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;==&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>)&#32;{
2718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;No&#32;room.&#32;Expand.&#32;*/</emphasis>
2719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pNewData;
2720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;newDataCap;
2721 
2722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newDataCap&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;+&#32;DRMP3_DATA_CHUNK_SIZE;
2723 
2724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewData&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)drmp3__realloc_from_callbacks(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;newDataCap,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
2725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;Out&#32;of&#32;memory.&#32;*/</emphasis>
2727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2728 
2729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;=&#32;pNewData;
2730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;=&#32;newDataCap;
2731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2732 
2733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;in&#32;a&#32;chunk.&#32;*/</emphasis>
2734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesRead&#32;=&#32;drmp3__on_read(pMP3,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>,&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>));
2735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesRead&#32;==&#32;0)&#32;{
2736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;Error&#32;reading&#32;more&#32;data.&#32;*/</emphasis>
2738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2739 
2740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;+=&#32;bytesRead;
2741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2742 &#32;&#32;&#32;&#32;};
2743 
2744 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pcmFramesRead;
2745 }
2746 
2747 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame_ex__memory(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;drmp3d_sample_t*&#32;pPCMFrames)
2748 {
2749 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRead&#32;=&#32;0;
2750 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;info;
2751 
2752 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2753 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2754 
2755 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>)&#32;{
2756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2757 &#32;&#32;&#32;&#32;}
2758 
2759 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
2760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>),&#32;pPCMFrames,&#32;&amp;info);
2761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesRead&#32;&gt;&#32;0)&#32;{
2762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;drmp3_hdr_frame_samples(pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>.<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
2763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;&#32;=&#32;0;
2764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;pcmFramesRead;
2765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>;
2766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1abe77517f4ee3765ba556faa60ea1cb05">hz</link>;
2767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;&gt;&#32;0)&#32;{
2769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;No&#32;frames&#32;were&#32;read,&#32;but&#32;it&#32;looks&#32;like&#32;we&#32;skipped&#32;past&#32;one.&#32;Read&#32;the&#32;next&#32;MP3&#32;frame.&#32;*/</emphasis>
2770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+=&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>;
2771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Nothing&#32;at&#32;all&#32;was&#32;read.&#32;Abort.&#32;*/</emphasis>
2773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2775 &#32;&#32;&#32;&#32;}
2776 
2777 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Consume&#32;the&#32;data.&#32;*/</emphasis>
2778 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+=&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>;
2779 
2780 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pcmFramesRead;
2781 }
2782 
2783 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame_ex(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;drmp3d_sample_t*&#32;pPCMFrames)
2784 {
2785 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;&amp;&amp;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&gt;&#32;0)&#32;{
2786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_decode_next_frame_ex__memory(pMP3,&#32;pPCMFrames);
2787 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_decode_next_frame_ex__callbacks(pMP3,&#32;pPCMFrames);
2789 &#32;&#32;&#32;&#32;}
2790 }
2791 
2792 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
2793 {
2794 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2795 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_decode_next_frame_ex(pMP3,&#32;(drmp3d_sample_t*)pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>);
2796 }
2797 
2798 <emphasis role="preprocessor">#if&#32;0</emphasis>
2799 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_seek_next_frame(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
2800 {
2801 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCount;
2802 
2803 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2804 
2805 &#32;&#32;&#32;&#32;pcmFrameCount&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2806 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFrameCount&#32;==&#32;0)&#32;{
2807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2808 &#32;&#32;&#32;&#32;}
2809 
2810 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;have&#32;essentially&#32;just&#32;skipped&#32;past&#32;the&#32;frame,&#32;so&#32;just&#32;set&#32;the&#32;remaining&#32;samples&#32;to&#32;0.&#32;*/</emphasis>
2811 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;pcmFrameCount;
2812 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;&#32;=&#32;pcmFrameCount;
2813 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;0;
2814 
2815 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pcmFrameCount;
2816 }
2817 <emphasis role="preprocessor">#endif</emphasis>
2818 
2819 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_init_internal(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2820 {
2821 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2822 &#32;&#32;&#32;&#32;DRMP3_ASSERT(onRead&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2823 
2824 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;assumes&#32;the&#32;output&#32;object&#32;has&#32;already&#32;been&#32;reset&#32;to&#32;0.&#32;Do&#32;not&#32;do&#32;that&#32;here,&#32;otherwise&#32;things&#32;will&#32;break.&#32;*/</emphasis>
2825 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>);
2826 
2827 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;=&#32;onRead;
2828 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;=&#32;onSeek;
2829 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>&#32;=&#32;pUserData;
2830 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>&#32;=&#32;drmp3_copy_allocation_callbacks_or_defaults(pAllocationCallbacks);
2831 
2832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>.<link linkend="_structdrmp3__allocation__callbacks_1a8ad923b2c9487037c78102745ed65db8">onFree</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;(pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>.<link linkend="_structdrmp3__allocation__callbacks_1aae0ea78e8e0f630a1bbcf47f50d78cd7">onMalloc</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;&amp;&amp;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>.<link linkend="_structdrmp3__allocation__callbacks_1ab4f4f2262f3e7e431b66da490818aa65">onRealloc</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;{
2833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Invalid&#32;allocation&#32;callbacks.&#32;*/</emphasis>
2834 &#32;&#32;&#32;&#32;}
2835 
2836 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Decode&#32;the&#32;first&#32;frame&#32;to&#32;confirm&#32;that&#32;it&#32;is&#32;indeed&#32;a&#32;valid&#32;MP3&#32;stream.&#32;*/</emphasis>
2837 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_decode_next_frame(pMP3)&#32;==&#32;0)&#32;{
2838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__free_from_callbacks(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;call&#32;above&#32;may&#32;have&#32;allocated&#32;memory.&#32;Need&#32;to&#32;make&#32;sure&#32;it&apos;s&#32;freed&#32;before&#32;aborting.&#32;*/</emphasis>
2839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Not&#32;a&#32;valid&#32;MP3&#32;stream.&#32;*/</emphasis>
2840 &#32;&#32;&#32;&#32;}
2841 
2842 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>;
2843 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>;
2844 
2845 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2846 }
2847 
2848 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2849 {
2850 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;onRead&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2852 &#32;&#32;&#32;&#32;}
2853 
2854 &#32;&#32;&#32;&#32;DRMP3_ZERO_OBJECT(pMP3);
2855 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_init_internal(pMP3,&#32;onRead,&#32;onSeek,&#32;pUserData,&#32;pAllocationCallbacks);
2856 }
2857 
2858 
2859 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drmp3__on_read_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
2860 {
2861 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3&#32;=&#32;(<link linkend="_structdrmp3">drmp3</link>*)pUserData;
2862 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRemaining;
2863 
2864 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2865 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&gt;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>);
2866 
2867 &#32;&#32;&#32;&#32;bytesRemaining&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>;
2868 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;bytesRemaining)&#32;{
2869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToRead&#32;=&#32;bytesRemaining;
2870 &#32;&#32;&#32;&#32;}
2871 
2872 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;0)&#32;{
2873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(pBufferOut,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>,&#32;bytesToRead);
2874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+=&#32;bytesToRead;
2875 &#32;&#32;&#32;&#32;}
2876 
2877 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesToRead;
2878 }
2879 
2880 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;byteOffset,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2881 {
2882 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3&#32;=&#32;(<link linkend="_structdrmp3">drmp3</link>*)pUserData;
2883 
2884 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2885 
2886 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>)&#32;{
2887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(byteOffset&#32;&gt;&#32;0)&#32;{
2888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+&#32;byteOffset&#32;&gt;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>)&#32;{
2889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteOffset&#32;=&#32;(int)(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>);&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
2890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;&lt;&#32;(<emphasis role="keywordtype">size_t</emphasis>)-byteOffset)&#32;{
2893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteOffset&#32;=&#32;-(int)pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>;&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;backwards.&#32;*/</emphasis>
2894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2896 
2897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;will&#32;never&#32;underflow&#32;thanks&#32;to&#32;the&#32;clamps&#32;above.&#32;*/</emphasis>
2898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+=&#32;byteOffset;
2899 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)byteOffset&#32;&lt;=&#32;pMP3-&gt;memory.dataSize)&#32;{
2901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;=&#32;byteOffset;
2902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>;&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
2904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2905 &#32;&#32;&#32;&#32;}
2906 
2907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2908 }
2909 
2910 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
2911 {
2912 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2914 &#32;&#32;&#32;&#32;}
2915 
2916 &#32;&#32;&#32;&#32;DRMP3_ZERO_OBJECT(pMP3);
2917 
2918 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>&#32;==&#32;0)&#32;{
2919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2920 &#32;&#32;&#32;&#32;}
2921 
2922 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)pData;
2923 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
2924 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;=&#32;0;
2925 
2926 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_init_internal(pMP3,&#32;drmp3__on_read_memory,&#32;drmp3__on_seek_memory,&#32;pMP3,&#32;pAllocationCallbacks);
2927 }
2928 
2929 
2930 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
2931 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
2932 <emphasis role="preprocessor">#include&#32;&lt;wchar.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;For&#32;wcslen(),&#32;wcsrtombs()&#32;*/</emphasis>
2933 
2934 <emphasis role="comment">/*&#32;drmp3_result_from_errno()&#32;is&#32;only&#32;used&#32;inside&#32;DR_MP3_NO_STDIO&#32;for&#32;now.&#32;Move&#32;this&#32;out&#32;if&#32;it&apos;s&#32;ever&#32;used&#32;elsewhere.&#32;*/</emphasis>
2935 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
2936 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a643c3af984b3685f5e325200be04bf23">drmp3_result</link>&#32;drmp3_result_from_errno(<emphasis role="keywordtype">int</emphasis>&#32;e)
2937 {
2938 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(e)
2939 &#32;&#32;&#32;&#32;{
2940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2faf1ad756c41ff46653002965907dbb">DRMP3_SUCCESS</link>;
2941 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EPERM</emphasis>
2942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EPERM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0269aa2a31c2bf4251bb6989d54aa5dc">DRMP3_INVALID_OPERATION</link>;
2943 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2944 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOENT</emphasis>
2945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOENT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0796b22998b0880b15d7d9fd75bd6bca">DRMP3_DOES_NOT_EXIST</link>;
2946 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2947 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESRCH</emphasis>
2948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESRCH:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0796b22998b0880b15d7d9fd75bd6bca">DRMP3_DOES_NOT_EXIST</link>;
2949 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2950 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EINTR</emphasis>
2951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EINTR:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4f6b4fc877d2760e4c25181d4d29cf7d">DRMP3_INTERRUPT</link>;
2952 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2953 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EIO</emphasis>
2954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EIO:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ab5effb97c8d8fda54bffe0e64684935d">DRMP3_IO_ERROR</link>;
2955 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2956 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENXIO</emphasis>
2957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENXIO:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0796b22998b0880b15d7d9fd75bd6bca">DRMP3_DOES_NOT_EXIST</link>;
2958 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2959 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;E2BIG</emphasis>
2960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;E2BIG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a439954866de73eaf00fbad0e681c509c">DRMP3_INVALID_ARGS</link>;
2961 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2962 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOEXEC</emphasis>
2963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOEXEC:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a68df2a60a2e0937b520d7ac26283b2b2">DRMP3_INVALID_FILE</link>;
2964 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2965 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADF</emphasis>
2966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADF:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a68df2a60a2e0937b520d7ac26283b2b2">DRMP3_INVALID_FILE</link>;
2967 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2968 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECHILD</emphasis>
2969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECHILD:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
2970 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2971 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EAGAIN</emphasis>
2972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EAGAIN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e5c0db0338dd3745ebdf9faf4e2fa14">DRMP3_UNAVAILABLE</link>;
2973 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2974 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOMEM</emphasis>
2975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOMEM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a570c8a81268a55a8bcf4392ee1d6b861">DRMP3_OUT_OF_MEMORY</link>;
2976 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2977 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EACCES</emphasis>
2978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EACCES:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb41b2cdb284f47d5ded78b5074711fb">DRMP3_ACCESS_DENIED</link>;
2979 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2980 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EFAULT</emphasis>
2981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EFAULT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a34ec124635fa19316e65c66a7c1ac2f6">DRMP3_BAD_ADDRESS</link>;
2982 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2983 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTBLK</emphasis>
2984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTBLK:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
2985 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2986 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBUSY</emphasis>
2987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBUSY:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4e94bd4d55b6155d9f453e55ac3e1b15">DRMP3_BUSY</link>;
2988 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2989 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EEXIST</emphasis>
2990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EEXIST:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a50d5a3e51f1eaecc4e7eecf22c5bcb30">DRMP3_ALREADY_EXISTS</link>;
2991 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2992 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EXDEV</emphasis>
2993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EXDEV:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
2994 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2995 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENODEV</emphasis>
2996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENODEV:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0796b22998b0880b15d7d9fd75bd6bca">DRMP3_DOES_NOT_EXIST</link>;
2997 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2998 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTDIR</emphasis>
2999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTDIR:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0fbe1bb55fa0c5dca1733ede92b7707d">DRMP3_NOT_DIRECTORY</link>;
3000 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3001 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EISDIR</emphasis>
3002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EISDIR:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a465251388c13cd1a67548fe1932374f2">DRMP3_IS_DIRECTORY</link>;
3003 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3004 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EINVAL</emphasis>
3005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EINVAL:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a439954866de73eaf00fbad0e681c509c">DRMP3_INVALID_ARGS</link>;
3006 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3007 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENFILE</emphasis>
3008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENFILE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae6f04585fa2149c3abc39696744b6aa6">DRMP3_TOO_MANY_OPEN_FILES</link>;
3009 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3010 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EMFILE</emphasis>
3011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EMFILE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae6f04585fa2149c3abc39696744b6aa6">DRMP3_TOO_MANY_OPEN_FILES</link>;
3012 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3013 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTTY</emphasis>
3014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTTY:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0269aa2a31c2bf4251bb6989d54aa5dc">DRMP3_INVALID_OPERATION</link>;
3015 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3016 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ETXTBSY</emphasis>
3017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ETXTBSY:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4e94bd4d55b6155d9f453e55ac3e1b15">DRMP3_BUSY</link>;
3018 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3019 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EFBIG</emphasis>
3020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EFBIG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af7cf55a0ad3a8adfc515d3b9df88cd3f">DRMP3_TOO_BIG</link>;
3021 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3022 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOSPC</emphasis>
3023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOSPC:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af28c51e48fcc953f3de221186cab5900">DRMP3_NO_SPACE</link>;
3024 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3025 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESPIPE</emphasis>
3026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESPIPE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3557e8e7611ed4bcbcd5990b6f9440b4">DRMP3_BAD_SEEK</link>;
3027 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3028 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EROFS</emphasis>
3029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EROFS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb41b2cdb284f47d5ded78b5074711fb">DRMP3_ACCESS_DENIED</link>;
3030 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3031 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EMLINK</emphasis>
3032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EMLINK:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aedd06a190419b7b5ac1e024afa5dae94">DRMP3_TOO_MANY_LINKS</link>;
3033 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3034 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EPIPE</emphasis>
3035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EPIPE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae1e909121baac8180a7de1004942ade5">DRMP3_BAD_PIPE</link>;
3036 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3037 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EDOM</emphasis>
3038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EDOM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af5ad3b7363bd36696264c7e71b502c50">DRMP3_OUT_OF_RANGE</link>;
3039 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3040 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ERANGE</emphasis>
3041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ERANGE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af5ad3b7363bd36696264c7e71b502c50">DRMP3_OUT_OF_RANGE</link>;
3042 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3043 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EDEADLK</emphasis>
3044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EDEADLK:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9aafe9a4e29105ce0e4fd9e6757ecd49">DRMP3_DEADLOCK</link>;
3045 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3046 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENAMETOOLONG</emphasis>
3047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENAMETOOLONG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2fcaffbe82d070ab2d54714f9ef04ffe">DRMP3_PATH_TOO_LONG</link>;
3048 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3049 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOLCK</emphasis>
3050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOLCK:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3051 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3052 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOSYS</emphasis>
3053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOSYS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af9894c179abb7767219a0a51a2d8a346">DRMP3_NOT_IMPLEMENTED</link>;
3054 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3055 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTEMPTY</emphasis>
3056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTEMPTY:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af2e963a313bb4191775423fba92e6bb7">DRMP3_DIRECTORY_NOT_EMPTY</link>;
3057 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELOOP</emphasis>
3059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELOOP:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aedd06a190419b7b5ac1e024afa5dae94">DRMP3_TOO_MANY_LINKS</link>;
3060 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3061 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOMSG</emphasis>
3062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOMSG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9152b7cdba493a7a2f2c9314c4535254">DRMP3_NO_MESSAGE</link>;
3063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3064 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EIDRM</emphasis>
3065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EIDRM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3066 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3067 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECHRNG</emphasis>
3068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECHRNG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3069 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3070 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EL2NSYNC</emphasis>
3071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EL2NSYNC:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3072 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3073 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EL3HLT</emphasis>
3074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EL3HLT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3075 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EL3RST</emphasis>
3077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EL3RST:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3079 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELNRNG</emphasis>
3080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELNRNG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af5ad3b7363bd36696264c7e71b502c50">DRMP3_OUT_OF_RANGE</link>;
3081 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3082 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EUNATCH</emphasis>
3083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EUNATCH:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3084 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3085 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOCSI</emphasis>
3086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOCSI:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3087 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3088 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EL2HLT</emphasis>
3089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EL2HLT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3090 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3091 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADE</emphasis>
3092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3094 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADR</emphasis>
3095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADR:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3096 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3097 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EXFULL</emphasis>
3098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EXFULL:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3099 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOANO</emphasis>
3101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOANO:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3103 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADRQC</emphasis>
3104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADRQC:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3105 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADSLT</emphasis>
3107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADSLT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3109 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBFONT</emphasis>
3110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBFONT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a68df2a60a2e0937b520d7ac26283b2b2">DRMP3_INVALID_FILE</link>;
3111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3112 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOSTR</emphasis>
3113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOSTR:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENODATA</emphasis>
3116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENODATA:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad5d524e72b0ce7506d8a7bfc9a018fee">DRMP3_NO_DATA_AVAILABLE</link>;
3117 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ETIME</emphasis>
3119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ETIME:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a61d4690d5fcd8cf58e4f18e28ae7be57">DRMP3_TIMEOUT</link>;
3120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3121 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOSR</emphasis>
3122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOSR:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad5d524e72b0ce7506d8a7bfc9a018fee">DRMP3_NO_DATA_AVAILABLE</link>;
3123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3124 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENONET</emphasis>
3125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENONET:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a45a1d833cc94b1c05dc16fbed708163c">DRMP3_NO_NETWORK</link>;
3126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3127 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOPKG</emphasis>
3128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOPKG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3129 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3130 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EREMOTE</emphasis>
3131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EREMOTE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3132 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3133 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOLINK</emphasis>
3134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOLINK:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3135 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EADV</emphasis>
3137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EADV:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3138 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3139 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESRMNT</emphasis>
3140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESRMNT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3141 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3142 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECOMM</emphasis>
3143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECOMM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3144 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EPROTO</emphasis>
3146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EPROTO:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3148 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EMULTIHOP</emphasis>
3149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EMULTIHOP:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3150 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3151 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EDOTDOT</emphasis>
3152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EDOTDOT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3153 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3154 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADMSG</emphasis>
3155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADMSG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e2e9ecbe3d5d4547d67b071294314be">DRMP3_BAD_MESSAGE</link>;
3156 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3157 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EOVERFLOW</emphasis>
3158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EOVERFLOW:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af7cf55a0ad3a8adfc515d3b9df88cd3f">DRMP3_TOO_BIG</link>;
3159 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3160 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTUNIQ</emphasis>
3161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTUNIQ:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a107cf65ceefffedd4d2f152229e9add7">DRMP3_NOT_UNIQUE</link>;
3162 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3163 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EBADFD</emphasis>
3164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EBADFD:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3165 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3166 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EREMCHG</emphasis>
3167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EREMCHG:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3168 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELIBACC</emphasis>
3170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELIBACC:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb41b2cdb284f47d5ded78b5074711fb">DRMP3_ACCESS_DENIED</link>;
3171 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3172 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELIBBAD</emphasis>
3173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELIBBAD:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a68df2a60a2e0937b520d7ac26283b2b2">DRMP3_INVALID_FILE</link>;
3174 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3175 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELIBSCN</emphasis>
3176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELIBSCN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a68df2a60a2e0937b520d7ac26283b2b2">DRMP3_INVALID_FILE</link>;
3177 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3178 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELIBMAX</emphasis>
3179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELIBMAX:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3181 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ELIBEXEC</emphasis>
3182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ELIBEXEC:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3183 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3184 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EILSEQ</emphasis>
3185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EILSEQ:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ab38a4c3a152e12ca4f62e7bfda2d539f">DRMP3_INVALID_DATA</link>;
3186 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3187 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ERESTART</emphasis>
3188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ERESTART:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3190 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESTRPIPE</emphasis>
3191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESTRPIPE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3192 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3193 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EUSERS</emphasis>
3194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EUSERS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3195 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3196 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTSOCK</emphasis>
3197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTSOCK:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aba25dca8db00f39d550d12595b62ebd6">DRMP3_NOT_SOCKET</link>;
3198 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3199 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EDESTADDRREQ</emphasis>
3200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EDESTADDRREQ:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ade04bdee6cfc365218dcd1194c6fbbbf">DRMP3_NO_ADDRESS</link>;
3201 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EMSGSIZE</emphasis>
3203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EMSGSIZE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af7cf55a0ad3a8adfc515d3b9df88cd3f">DRMP3_TOO_BIG</link>;
3204 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3205 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EPROTOTYPE</emphasis>
3206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EPROTOTYPE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1adb4930d5bead491c84ebe14d785a8c4e">DRMP3_BAD_PROTOCOL</link>;
3207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3208 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOPROTOOPT</emphasis>
3209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOPROTOOPT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3e83b01be9892e3449f070715059b32f">DRMP3_PROTOCOL_UNAVAILABLE</link>;
3210 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3211 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EPROTONOSUPPORT</emphasis>
3212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EPROTONOSUPPORT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4fd095b80e2f3be3de1c9ea7318dfbad">DRMP3_PROTOCOL_NOT_SUPPORTED</link>;
3213 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3214 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESOCKTNOSUPPORT</emphasis>
3215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESOCKTNOSUPPORT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aee70260e71abc9997a094a4bbd3c18fc">DRMP3_SOCKET_NOT_SUPPORTED</link>;
3216 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3217 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EOPNOTSUPP</emphasis>
3218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EOPNOTSUPP:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0269aa2a31c2bf4251bb6989d54aa5dc">DRMP3_INVALID_OPERATION</link>;
3219 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3220 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EPFNOSUPPORT</emphasis>
3221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EPFNOSUPPORT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2f1ce7a6c71236156bcb0a751d3c912d">DRMP3_PROTOCOL_FAMILY_NOT_SUPPORTED</link>;
3222 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3223 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EAFNOSUPPORT</emphasis>
3224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EAFNOSUPPORT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a76515443e0cb31334737c5587fea3266">DRMP3_ADDRESS_FAMILY_NOT_SUPPORTED</link>;
3225 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3226 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EADDRINUSE</emphasis>
3227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EADDRINUSE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1cb3191b092a03e738849d08c5d04ce5">DRMP3_ALREADY_IN_USE</link>;
3228 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3229 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EADDRNOTAVAIL</emphasis>
3230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EADDRNOTAVAIL:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3231 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3232 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENETDOWN</emphasis>
3233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENETDOWN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a45a1d833cc94b1c05dc16fbed708163c">DRMP3_NO_NETWORK</link>;
3234 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3235 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENETUNREACH</emphasis>
3236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENETUNREACH:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a45a1d833cc94b1c05dc16fbed708163c">DRMP3_NO_NETWORK</link>;
3237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3238 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENETRESET</emphasis>
3239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENETRESET:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a45a1d833cc94b1c05dc16fbed708163c">DRMP3_NO_NETWORK</link>;
3240 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3241 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECONNABORTED</emphasis>
3242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECONNABORTED:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a45a1d833cc94b1c05dc16fbed708163c">DRMP3_NO_NETWORK</link>;
3243 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECONNRESET</emphasis>
3245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECONNRESET:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4e9ac9e1af8ac5d2bacfe4b8081fcfb8">DRMP3_CONNECTION_RESET</link>;
3246 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3247 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOBUFS</emphasis>
3248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOBUFS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af28c51e48fcc953f3de221186cab5900">DRMP3_NO_SPACE</link>;
3249 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3250 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EISCONN</emphasis>
3251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EISCONN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a00597dc171625a49b7d8a7d2f8f1acfb">DRMP3_ALREADY_CONNECTED</link>;
3252 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3253 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTCONN</emphasis>
3254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTCONN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a603e0ddb3a3fa987e733d481cb16e842">DRMP3_NOT_CONNECTED</link>;
3255 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3256 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESHUTDOWN</emphasis>
3257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESHUTDOWN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3259 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ETOOMANYREFS</emphasis>
3260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ETOOMANYREFS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3261 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3262 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ETIMEDOUT</emphasis>
3263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2pthread_8h_1a597718e59a8fc9c4d4ab63f5a34e28b1">ETIMEDOUT</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a61d4690d5fcd8cf58e4f18e28ae7be57">DRMP3_TIMEOUT</link>;
3264 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3265 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECONNREFUSED</emphasis>
3266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECONNREFUSED:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac4307d38f905ee9faf8301cb493cb342">DRMP3_CONNECTION_REFUSED</link>;
3267 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3268 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EHOSTDOWN</emphasis>
3269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EHOSTDOWN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9a20dc21621424e1e778b66786e1cc96">DRMP3_NO_HOST</link>;
3270 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3271 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EHOSTUNREACH</emphasis>
3272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EHOSTUNREACH:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9a20dc21621424e1e778b66786e1cc96">DRMP3_NO_HOST</link>;
3273 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3274 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EALREADY</emphasis>
3275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EALREADY:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1f6dfa8a094efd1e7c16dbb21e89b21c">DRMP3_IN_PROGRESS</link>;
3276 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3277 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EINPROGRESS</emphasis>
3278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EINPROGRESS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1f6dfa8a094efd1e7c16dbb21e89b21c">DRMP3_IN_PROGRESS</link>;
3279 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3280 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ESTALE</emphasis>
3281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ESTALE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a68df2a60a2e0937b520d7ac26283b2b2">DRMP3_INVALID_FILE</link>;
3282 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3283 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EUCLEAN</emphasis>
3284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EUCLEAN:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3285 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3286 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTNAM</emphasis>
3287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTNAM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3288 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3289 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENAVAIL</emphasis>
3290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENAVAIL:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3291 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3292 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EISNAM</emphasis>
3293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EISNAM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3294 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3295 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EREMOTEIO</emphasis>
3296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EREMOTEIO:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ab5effb97c8d8fda54bffe0e64684935d">DRMP3_IO_ERROR</link>;
3297 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3298 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EDQUOT</emphasis>
3299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EDQUOT:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af28c51e48fcc953f3de221186cab5900">DRMP3_NO_SPACE</link>;
3300 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3301 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOMEDIUM</emphasis>
3302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOMEDIUM:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0796b22998b0880b15d7d9fd75bd6bca">DRMP3_DOES_NOT_EXIST</link>;
3303 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3304 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EMEDIUMTYPE</emphasis>
3305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EMEDIUMTYPE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3306 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3307 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ECANCELED</emphasis>
3308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ECANCELED:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9f6f0ce615263a01c073fe08f4442541">DRMP3_CANCELLED</link>;
3309 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3310 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOKEY</emphasis>
3311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOKEY:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3312 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3313 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EKEYEXPIRED</emphasis>
3314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EKEYEXPIRED:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3315 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3316 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EKEYREVOKED</emphasis>
3317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EKEYREVOKED:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3318 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3319 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EKEYREJECTED</emphasis>
3320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EKEYREJECTED:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3321 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3322 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EOWNERDEAD</emphasis>
3323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EOWNERDEAD:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3324 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3325 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ENOTRECOVERABLE</emphasis>
3326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOTRECOVERABLE:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3327 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3328 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;ERFKILL</emphasis>
3329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ERFKILL:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3330 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3331 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;EHWPOISON</emphasis>
3332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EHWPOISON:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3333 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3335 &#32;&#32;&#32;&#32;}
3336 }
3337 
3338 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a643c3af984b3685f5e325200be04bf23">drmp3_result</link>&#32;drmp3_fopen(FILE**&#32;ppFile,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pFilePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pOpenMode)
3339 {
3340 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
3341 &#32;&#32;&#32;&#32;errno_t&#32;err;
3342 <emphasis role="preprocessor">#endif</emphasis>
3343 
3344 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ppFile&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ppFile&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;<emphasis role="comment">/*&#32;Safety.&#32;*/</emphasis>
3346 &#32;&#32;&#32;&#32;}
3347 
3348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFilePath&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pOpenMode&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;ppFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a439954866de73eaf00fbad0e681c509c">DRMP3_INVALID_ARGS</link>;
3350 &#32;&#32;&#32;&#32;}
3351 
3352 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
3353 &#32;&#32;&#32;&#32;err&#32;=&#32;fopen_s(ppFile,&#32;pFilePath,&#32;pOpenMode);
3354 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err&#32;!=&#32;0)&#32;{
3355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_result_from_errno(err);
3356 &#32;&#32;&#32;&#32;}
3357 <emphasis role="preprocessor">#else</emphasis>
3358 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;||&#32;defined(__APPLE__)</emphasis>
3359 &#32;&#32;&#32;&#32;*ppFile&#32;=&#32;fopen(pFilePath,&#32;pOpenMode);
3360 <emphasis role="preprocessor">#else</emphasis>
3361 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(_FILE_OFFSET_BITS)&#32;&amp;&amp;&#32;_FILE_OFFSET_BITS&#32;==&#32;64&#32;&amp;&amp;&#32;defined(_LARGEFILE64_SOURCE)</emphasis>
3362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ppFile&#32;=&#32;fopen64(pFilePath,&#32;pOpenMode);
3363 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
3364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ppFile&#32;=&#32;fopen(pFilePath,&#32;pOpenMode);
3365 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3366 <emphasis role="preprocessor">#endif</emphasis>
3367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*ppFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a643c3af984b3685f5e325200be04bf23">drmp3_result</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;drmp3_result_from_errno(errno);
3369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2faf1ad756c41ff46653002965907dbb">DRMP3_SUCCESS</link>)&#32;{
3370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Just&#32;a&#32;safety&#32;check&#32;to&#32;make&#32;sure&#32;we&#32;never&#32;ever&#32;return&#32;success&#32;when&#32;pFile&#32;==&#32;NULL.&#32;*/</emphasis>
3371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3372 
3373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
3374 &#32;&#32;&#32;&#32;}
3375 <emphasis role="preprocessor">#endif</emphasis>
3376 
3377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2faf1ad756c41ff46653002965907dbb">DRMP3_SUCCESS</link>;
3378 }
3379 
3380 <emphasis role="comment">/*</emphasis>
3381 <emphasis role="comment">_wfopen()&#32;isn&apos;t&#32;always&#32;available&#32;in&#32;all&#32;compilation&#32;environments.</emphasis>
3382 <emphasis role="comment"></emphasis>
3383 <emphasis role="comment">&#32;&#32;&#32;&#32;*&#32;Windows&#32;only.</emphasis>
3384 <emphasis role="comment">&#32;&#32;&#32;&#32;*&#32;MSVC&#32;seems&#32;to&#32;support&#32;it&#32;universally&#32;as&#32;far&#32;back&#32;as&#32;VC6&#32;from&#32;what&#32;I&#32;can&#32;tell&#32;(haven&apos;t&#32;checked&#32;further&#32;back).</emphasis>
3385 <emphasis role="comment">&#32;&#32;&#32;&#32;*&#32;MinGW-64&#32;(both&#32;32-&#32;and&#32;64-bit)&#32;seems&#32;to&#32;support&#32;it.</emphasis>
3386 <emphasis role="comment">&#32;&#32;&#32;&#32;*&#32;MinGW&#32;wraps&#32;it&#32;in&#32;!defined(__STRICT_ANSI__).</emphasis>
3387 <emphasis role="comment">&#32;&#32;&#32;&#32;*&#32;OpenWatcom&#32;wraps&#32;it&#32;in&#32;!defined(_NO_EXT_KEYS).</emphasis>
3388 <emphasis role="comment"></emphasis>
3389 <emphasis role="comment">This&#32;can&#32;be&#32;reviewed&#32;as&#32;compatibility&#32;issues&#32;arise.&#32;The&#32;preference&#32;is&#32;to&#32;use&#32;_wfopen_s()&#32;and&#32;_wfopen()&#32;as&#32;opposed&#32;to&#32;the&#32;wcsrtombs()</emphasis>
3390 <emphasis role="comment">fallback,&#32;so&#32;if&#32;you&#32;notice&#32;your&#32;compiler&#32;not&#32;detecting&#32;this&#32;properly&#32;I&apos;m&#32;happy&#32;to&#32;look&#32;at&#32;adding&#32;support.</emphasis>
3391 <emphasis role="comment">*/</emphasis>
3392 <emphasis role="preprocessor">#if&#32;defined(_WIN32)</emphasis>
3393 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(_MSC_VER)&#32;||&#32;defined(__MINGW64__)&#32;||&#32;(!defined(__STRICT_ANSI__)&#32;&amp;&amp;&#32;!defined(_NO_EXT_KEYS))</emphasis>
3394 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_HAS_WFOPEN</emphasis>
3395 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3396 <emphasis role="preprocessor">#endif</emphasis>
3397 
3398 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a643c3af984b3685f5e325200be04bf23">drmp3_result</link>&#32;drmp3_wfopen(FILE**&#32;ppFile,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;pFilePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;pOpenMode,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
3399 {
3400 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ppFile&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ppFile&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;<emphasis role="comment">/*&#32;Safety.&#32;*/</emphasis>
3402 &#32;&#32;&#32;&#32;}
3403 
3404 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFilePath&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pOpenMode&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;ppFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a439954866de73eaf00fbad0e681c509c">DRMP3_INVALID_ARGS</link>;
3406 &#32;&#32;&#32;&#32;}
3407 
3408 <emphasis role="preprocessor">#if&#32;defined(DRMP3_HAS_WFOPEN)</emphasis>
3409 &#32;&#32;&#32;&#32;{
3410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Use&#32;_wfopen()&#32;on&#32;Windows.&#32;*/</emphasis>
3411 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
3412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errno_t&#32;err&#32;=&#32;_wfopen_s(ppFile,&#32;pFilePath,&#32;pOpenMode);
3413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err&#32;!=&#32;0)&#32;{
3414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_result_from_errno(err);
3415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3416 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
3417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ppFile&#32;=&#32;_wfopen(pFilePath,&#32;pOpenMode);
3418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*ppFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_result_from_errno(errno);
3420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3421 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)pAllocationCallbacks;
3423 &#32;&#32;&#32;&#32;}
3424 <emphasis role="preprocessor">#else</emphasis>
3425 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3426 <emphasis role="comment">&#32;&#32;&#32;&#32;Use&#32;fopen()&#32;on&#32;anything&#32;other&#32;than&#32;Windows.&#32;Requires&#32;a&#32;conversion.&#32;This&#32;is&#32;annoying&#32;because</emphasis>
3427 <emphasis role="comment">&#32;&#32;&#32;&#32;fopen()&#32;is&#32;locale&#32;specific.&#32;The&#32;only&#32;real&#32;way&#32;I&#32;can&#32;think&#32;of&#32;to&#32;do&#32;this&#32;is&#32;with&#32;wcsrtombs().&#32;Note</emphasis>
3428 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;wcstombs()&#32;is&#32;apparently&#32;not&#32;thread-safe&#32;because&#32;it&#32;uses&#32;a&#32;static&#32;global&#32;mbstate_t&#32;object&#32;for</emphasis>
3429 <emphasis role="comment">&#32;&#32;&#32;&#32;maintaining&#32;state.&#32;I&apos;ve&#32;checked&#32;this&#32;with&#32;-std=c89&#32;and&#32;it&#32;works,&#32;but&#32;if&#32;somebody&#32;get&apos;s&#32;a&#32;compiler</emphasis>
3430 <emphasis role="comment">&#32;&#32;&#32;&#32;error&#32;I&apos;ll&#32;look&#32;into&#32;improving&#32;compatibility.</emphasis>
3431 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3432 
3433 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3434 <emphasis role="comment">&#32;&#32;&#32;&#32;Some&#32;compilers&#32;don&apos;t&#32;support&#32;wchar_t&#32;or&#32;wcsrtombs()&#32;which&#32;we&apos;re&#32;using&#32;below.&#32;In&#32;this&#32;case&#32;we&#32;just</emphasis>
3435 <emphasis role="comment">&#32;&#32;&#32;&#32;need&#32;to&#32;abort&#32;with&#32;an&#32;error.&#32;If&#32;you&#32;encounter&#32;a&#32;compiler&#32;lacking&#32;such&#32;support,&#32;add&#32;it&#32;to&#32;this&#32;list</emphasis>
3436 <emphasis role="comment">&#32;&#32;&#32;&#32;and&#32;submit&#32;a&#32;bug&#32;report&#32;and&#32;it&apos;ll&#32;be&#32;added&#32;to&#32;the&#32;library&#32;upstream.</emphasis>
3437 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3438 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(__DJGPP__)</emphasis>
3439 &#32;&#32;&#32;&#32;{
3440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Nothing&#32;to&#32;do&#32;here.&#32;This&#32;will&#32;fall&#32;through&#32;to&#32;the&#32;error&#32;check&#32;below.&#32;*/</emphasis>
3441 &#32;&#32;&#32;&#32;}
3442 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
3443 &#32;&#32;&#32;&#32;{
3444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mbstate_t&#32;mbs;
3445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;lenMB;
3446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;pFilePathTemp&#32;=&#32;pFilePath;
3447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pFilePathMB&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;pOpenModeMB[32]&#32;=&#32;{0};
3449 
3450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Get&#32;the&#32;length&#32;first.&#32;*/</emphasis>
3451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_OBJECT(&amp;mbs);
3452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lenMB&#32;=&#32;wcsrtombs(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;&amp;pFilePathTemp,&#32;0,&#32;&amp;mbs);
3453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lenMB&#32;==&#32;(<emphasis role="keywordtype">size_t</emphasis>)-1)&#32;{
3454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_result_from_errno(errno);
3455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3456 
3457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFilePathMB&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>*)drmp3__malloc_from_callbacks(lenMB&#32;+&#32;1,&#32;pAllocationCallbacks);
3458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFilePathMB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a570c8a81268a55a8bcf4392ee1d6b861">DRMP3_OUT_OF_MEMORY</link>;
3460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3461 
3462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFilePathTemp&#32;=&#32;pFilePath;
3463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ZERO_OBJECT(&amp;mbs);
3464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wcsrtombs(pFilePathMB,&#32;&amp;pFilePathTemp,&#32;lenMB&#32;+&#32;1,&#32;&amp;mbs);
3465 
3466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;open&#32;mode&#32;should&#32;always&#32;consist&#32;of&#32;ASCII&#32;characters&#32;so&#32;we&#32;should&#32;be&#32;able&#32;to&#32;do&#32;a&#32;trivial&#32;conversion.&#32;*/</emphasis>
3467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;
3469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pOpenMode[i]&#32;==&#32;0)&#32;{
3471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOpenModeMB[i]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
3472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3474 
3475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOpenModeMB[i]&#32;=&#32;(char)pOpenMode[i];
3476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;1;
3477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3479 
3480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ppFile&#32;=&#32;fopen(pFilePathMB,&#32;pOpenModeMB);
3481 
3482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__free_from_callbacks(pFilePathMB,&#32;pAllocationCallbacks);
3483 &#32;&#32;&#32;&#32;}
3484 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
3485 
3486 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*ppFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9ccc0d2b259d24b25bb6eb3165c2b764">DRMP3_ERROR</link>;
3488 &#32;&#32;&#32;&#32;}
3489 <emphasis role="preprocessor">#endif</emphasis>
3490 
3491 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2faf1ad756c41ff46653002965907dbb">DRMP3_SUCCESS</link>;
3492 }
3493 
3494 
3495 
3496 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drmp3__on_read_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
3497 {
3498 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fread(pBufferOut,&#32;1,&#32;bytesToRead,&#32;(FILE*)pUserData);
3499 }
3500 
3501 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
3502 {
3503 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fseek((FILE*)pUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>)&#32;?&#32;SEEK_CUR&#32;:&#32;SEEK_SET)&#32;==&#32;0;
3504 }
3505 
3506 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;pFilePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
3507 {
3508 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
3509 &#32;&#32;&#32;&#32;FILE*&#32;pFile;
3510 
3511 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_fopen(&amp;pFile,&#32;pFilePath,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>)&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2faf1ad756c41ff46653002965907dbb">DRMP3_SUCCESS</link>)&#32;{
3512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3513 &#32;&#32;&#32;&#32;}
3514 
3515 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(pMP3,&#32;drmp3__on_read_stdio,&#32;drmp3__on_seek_stdio,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile,&#32;pAllocationCallbacks);
3516 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>)&#32;{
3517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose(pFile);
3518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
3519 &#32;&#32;&#32;&#32;}
3520 
3521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3522 }
3523 
3524 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac7a2e49a5e780cdc3d635143d8d6d5fa">drmp3_init_file_w</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;pFilePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
3525 {
3526 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
3527 &#32;&#32;&#32;&#32;FILE*&#32;pFile;
3528 
3529 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_wfopen(&amp;pFile,&#32;pFilePath,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;rb&quot;</emphasis>,&#32;pAllocationCallbacks)&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2faf1ad756c41ff46653002965907dbb">DRMP3_SUCCESS</link>)&#32;{
3530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3531 &#32;&#32;&#32;&#32;}
3532 
3533 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(pMP3,&#32;drmp3__on_read_stdio,&#32;drmp3__on_seek_stdio,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile,&#32;pAllocationCallbacks);
3534 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>)&#32;{
3535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose(pFile);
3536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
3537 &#32;&#32;&#32;&#32;}
3538 
3539 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3540 }
3541 <emphasis role="preprocessor">#endif</emphasis>
3542 
3543 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3544 {
3545 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3547 &#32;&#32;&#32;&#32;}
3548 &#32;&#32;&#32;&#32;
3549 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
3550 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;==&#32;drmp3__on_read_stdio)&#32;{
3551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FILE*&#32;pFile&#32;=&#32;(FILE*)pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>;
3552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose(pFile);
3554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;<emphasis role="comment">/*&#32;Make&#32;sure&#32;the&#32;file&#32;handle&#32;is&#32;cleared&#32;to&#32;NULL&#32;to&#32;we&#32;don&apos;t&#32;attempt&#32;to&#32;close&#32;it&#32;a&#32;second&#32;time.&#32;*/</emphasis>
3555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3556 &#32;&#32;&#32;&#32;}
3557 <emphasis role="preprocessor">#endif</emphasis>
3558 
3559 &#32;&#32;&#32;&#32;drmp3__free_from_callbacks(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
3560 }
3561 
3562 <emphasis role="preprocessor">#if&#32;defined(DR_MP3_FLOAT_OUTPUT)</emphasis>
3563 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_f32_to_s16(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;sampleCount)
3564 {
3565 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;i;
3566 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;i4;
3567 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;sampleCount4;
3568 
3569 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unrolled.&#32;*/</emphasis>
3570 &#32;&#32;&#32;&#32;i&#32;=&#32;0;
3571 &#32;&#32;&#32;&#32;sampleCount4&#32;=&#32;sampleCount&#32;&gt;&gt;&#32;2;
3572 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i4&#32;=&#32;0;&#32;i4&#32;&lt;&#32;sampleCount4;&#32;i4&#32;+=&#32;1)&#32;{
3573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i+0];
3574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i+1];
3575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i+2];
3576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i+3];
3577 
3578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;((x0&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((x0&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;x0));
3579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;((x1&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((x1&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;x1));
3580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2&#32;=&#32;((x2&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((x2&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;x2));
3581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;((x3&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((x3&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;x3));
3582 
3583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;x0&#32;*&#32;32767.0f;
3584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;x1&#32;*&#32;32767.0f;
3585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2&#32;=&#32;x2&#32;*&#32;32767.0f;
3586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;x3&#32;*&#32;32767.0f;
3587 
3588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i+0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)x0;
3589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i+1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)x1;
3590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i+2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)x2;
3591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i+3]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)x3;
3592 
3593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;4;
3594 &#32;&#32;&#32;&#32;}
3595 
3596 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Leftover.&#32;*/</emphasis>
3597 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;sampleCount;&#32;i&#32;+=&#32;1)&#32;{
3598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i];
3599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;-1)&#32;?&#32;-1&#32;:&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;1)&#32;?&#32;1&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>));&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;clip&#32;*/</emphasis>
3600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;32767.0f;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-1..1&#32;to&#32;-32767..32767&#32;*/</emphasis>
3601 
3602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3603 &#32;&#32;&#32;&#32;}
3604 }
3605 <emphasis role="preprocessor">#endif</emphasis>
3606 
3607 <emphasis role="preprocessor">#if&#32;!defined(DR_MP3_FLOAT_OUTPUT)</emphasis>
3608 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_s16_to_f32(<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;sampleCount)
3609 {
3610 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;i;
3611 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sampleCount;&#32;i&#32;+=&#32;1)&#32;{
3612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;(float)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i];
3613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;0.000030517578125f;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-32768..32767&#32;to&#32;-1..0.999969482421875&#32;*/</emphasis>
3614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3615 &#32;&#32;&#32;&#32;}
3616 }
3617 <emphasis role="preprocessor">#endif</emphasis>
3618 
3619 
3620 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_read_pcm_frames_raw(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut)
3621 {
3622 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
3623 
3624 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3625 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3626 
3627 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(framesToRead&#32;&gt;&#32;0)&#32;{
3628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;framesToConsume&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)DRMP3_MIN(pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>,&#32;framesToRead);
3629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pBufferOut&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3630 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(DR_MP3_FLOAT_OUTPUT)</emphasis>
3631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;f32&#32;*/</emphasis>
3632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pFramesOutF32&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>*)DRMP3_OFFSET_PTR(pBufferOut,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)&#32;*&#32;totalFramesRead&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>);
3633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pFramesInF32&#32;&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>*)DRMP3_OFFSET_PTR(&amp;pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>[0],&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>);
3634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(pFramesOutF32,&#32;pFramesInF32,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)&#32;*&#32;framesToConsume&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>);
3635 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
3636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;s16&#32;*/</emphasis>
3637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pFramesOutS16&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*)DRMP3_OFFSET_PTR(pBufferOut,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;*&#32;totalFramesRead&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>);
3638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pFramesInS16&#32;&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*)DRMP3_OFFSET_PTR(&amp;pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>[0],&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>);
3639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(pFramesOutS16,&#32;pFramesInS16,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;*&#32;framesToConsume&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>);
3640 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
3641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3642 
3643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;framesToConsume;
3644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;&#32;+=&#32;framesToConsume;
3645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;-=&#32;framesToConsume;
3646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;framesToConsume;
3647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToRead&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-=&#32;framesToConsume;
3648 
3649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToRead&#32;==&#32;0)&#32;{
3650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3652 
3653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;==&#32;0);
3654 
3655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3656 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;At&#32;this&#32;point&#32;we&#32;have&#32;exhausted&#32;our&#32;in-memory&#32;buffer&#32;so&#32;we&#32;need&#32;to&#32;re-fill.&#32;Note&#32;that&#32;the&#32;sample&#32;rate&#32;may&#32;have&#32;changed</emphasis>
3657 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;this&#32;point&#32;which&#32;means&#32;we&apos;ll&#32;also&#32;need&#32;to&#32;update&#32;our&#32;sample&#32;rate&#32;conversion&#32;pipeline.</emphasis>
3658 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_decode_next_frame(pMP3)&#32;==&#32;0)&#32;{
3660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3662 &#32;&#32;&#32;&#32;}
3663 
3664 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalFramesRead;
3665 }
3666 
3667 
3668 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3669 {
3670 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3672 &#32;&#32;&#32;&#32;}
3673 
3674 <emphasis role="preprocessor">#if&#32;defined(DR_MP3_FLOAT_OUTPUT)</emphasis>
3675 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fast&#32;path.&#32;No&#32;conversion&#32;required.&#32;*/</emphasis>
3676 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_read_pcm_frames_raw(pMP3,&#32;framesToRead,&#32;pBufferOut);
3677 <emphasis role="preprocessor">#else</emphasis>
3678 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Slow&#32;path.&#32;Convert&#32;from&#32;s16&#32;to&#32;f32.&#32;*/</emphasis>
3679 &#32;&#32;&#32;&#32;{
3680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;pTempS16[8192];
3681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFramesRead&#32;=&#32;0;
3682 
3683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(totalPCMFramesRead&#32;&lt;&#32;framesToRead)&#32;{
3684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead;
3685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRemaining&#32;=&#32;framesToRead&#32;-&#32;totalPCMFramesRead;
3686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadNow&#32;=&#32;DRMP3_COUNTOF(pTempS16)&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToReadNow&#32;&gt;&#32;framesRemaining)&#32;{
3688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadNow&#32;=&#32;framesRemaining;
3689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3690 
3691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesJustRead&#32;=&#32;drmp3_read_pcm_frames_raw(pMP3,&#32;framesToReadNow,&#32;pTempS16);
3692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
3693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3695 
3696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_s16_to_f32((<emphasis role="keywordtype">float</emphasis>*)DRMP3_OFFSET_PTR(pBufferOut,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)&#32;*&#32;totalPCMFramesRead&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>),&#32;pTempS16,&#32;framesJustRead&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>);
3697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalPCMFramesRead&#32;+=&#32;framesJustRead;
3698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3699 
3700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalPCMFramesRead;
3701 &#32;&#32;&#32;&#32;}
3702 <emphasis role="preprocessor">#endif</emphasis>
3703 }
3704 
3705 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pBufferOut)
3706 {
3707 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3709 &#32;&#32;&#32;&#32;}
3710 
3711 <emphasis role="preprocessor">#if&#32;!defined(DR_MP3_FLOAT_OUTPUT)</emphasis>
3712 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fast&#32;path.&#32;No&#32;conversion&#32;required.&#32;*/</emphasis>
3713 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_read_pcm_frames_raw(pMP3,&#32;framesToRead,&#32;pBufferOut);
3714 <emphasis role="preprocessor">#else</emphasis>
3715 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Slow&#32;path.&#32;Convert&#32;from&#32;f32&#32;to&#32;s16.&#32;*/</emphasis>
3716 &#32;&#32;&#32;&#32;{
3717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pTempF32[4096];
3718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFramesRead&#32;=&#32;0;
3719 
3720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(totalPCMFramesRead&#32;&lt;&#32;framesToRead)&#32;{
3721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead;
3722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRemaining&#32;=&#32;framesToRead&#32;-&#32;totalPCMFramesRead;
3723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadNow&#32;=&#32;DRMP3_COUNTOF(pTempF32)&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToReadNow&#32;&gt;&#32;framesRemaining)&#32;{
3725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadNow&#32;=&#32;framesRemaining;
3726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3727 
3728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesJustRead&#32;=&#32;drmp3_read_pcm_frames_raw(pMP3,&#32;framesToReadNow,&#32;pTempF32);
3729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
3730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3732 
3733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f32_to_s16((<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*)DRMP3_OFFSET_PTR(pBufferOut,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;*&#32;totalPCMFramesRead&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>),&#32;pTempF32,&#32;framesJustRead&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>);
3734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalPCMFramesRead&#32;+=&#32;framesJustRead;
3735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3736 
3737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalPCMFramesRead;
3738 &#32;&#32;&#32;&#32;}
3739 <emphasis role="preprocessor">#endif</emphasis>
3740 }
3741 
3742 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_reset(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3743 {
3744 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3745 
3746 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;=&#32;0;
3747 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;0;
3748 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;=&#32;0;
3749 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;=&#32;0;
3750 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3751 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>);
3752 }
3753 
3754 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_to_start_of_stream(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3755 {
3756 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3757 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3758 
3759 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Seek&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stream&#32;to&#32;begin&#32;with.&#32;*/</emphasis>
3760 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>))&#32;{
3761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3762 &#32;&#32;&#32;&#32;}
3763 
3764 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;any&#32;cached&#32;data.&#32;*/</emphasis>
3765 &#32;&#32;&#32;&#32;drmp3_reset(pMP3);
3766 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3767 }
3768 
3769 
3770 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_forward_by_pcm_frames__brute_force(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameOffset)
3771 {
3772 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRead;
3773 
3774 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3775 <emphasis role="comment">&#32;&#32;&#32;&#32;Just&#32;using&#32;a&#32;dumb&#32;read-and-discard&#32;for&#32;now.&#32;What&#32;would&#32;be&#32;nice&#32;is&#32;to&#32;parse&#32;only&#32;the&#32;header&#32;of&#32;the&#32;MP3&#32;frame,&#32;and&#32;then&#32;skip&#32;over&#32;leading</emphasis>
3776 <emphasis role="comment">&#32;&#32;&#32;&#32;frames&#32;without&#32;spending&#32;the&#32;time&#32;doing&#32;a&#32;full&#32;decode.&#32;I&#32;cannot&#32;see&#32;an&#32;easy&#32;way&#32;to&#32;do&#32;this&#32;in&#32;minimp3,&#32;however,&#32;so&#32;it&#32;may&#32;involve&#32;some</emphasis>
3777 <emphasis role="comment">&#32;&#32;&#32;&#32;kind&#32;of&#32;manual&#32;processing.</emphasis>
3778 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3779 <emphasis role="preprocessor">#if&#32;defined(DR_MP3_FLOAT_OUTPUT)</emphasis>
3780 &#32;&#32;&#32;&#32;framesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;frameOffset,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3781 <emphasis role="preprocessor">#else</emphasis>
3782 &#32;&#32;&#32;&#32;framesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(pMP3,&#32;frameOffset,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3783 <emphasis role="preprocessor">#endif</emphasis>
3784 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesRead&#32;!=&#32;frameOffset)&#32;{
3785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3786 &#32;&#32;&#32;&#32;}
3787 
3788 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3789 }
3790 
3791 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_to_pcm_frame__brute_force(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex)
3792 {
3793 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3794 
3795 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;==&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>)&#32;{
3796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3797 &#32;&#32;&#32;&#32;}
3798 
3799 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3800 <emphasis role="comment">&#32;&#32;&#32;&#32;If&#32;we&apos;re&#32;moving&#32;foward&#32;we&#32;just&#32;read&#32;from&#32;where&#32;we&apos;re&#32;at.&#32;Otherwise&#32;we&#32;need&#32;to&#32;move&#32;back&#32;to&#32;the&#32;start&#32;of</emphasis>
3801 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;stream&#32;and&#32;read&#32;from&#32;the&#32;beginning.</emphasis>
3802 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3803 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;&lt;&#32;pMP3-&gt;currentPCMFrame)&#32;{
3804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Moving&#32;backward.&#32;Move&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stream&#32;and&#32;then&#32;move&#32;forward.&#32;*/</emphasis>
3805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3808 &#32;&#32;&#32;&#32;}
3809 
3810 &#32;&#32;&#32;&#32;DRMP3_ASSERT(frameIndex&#32;&gt;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>);
3811 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_forward_by_pcm_frames__brute_force(pMP3,&#32;(frameIndex&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>));
3812 }
3813 
3814 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_find_closest_seek_point(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pSeekPointIndex)
3815 {
3816 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iSeekPoint;
3817 
3818 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pSeekPointIndex&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3819 
3820 &#32;&#32;&#32;&#32;*pSeekPointIndex&#32;=&#32;0;
3821 
3822 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;&lt;&#32;pMP3-&gt;pSeekPoints[0].pcmFrameIndex)&#32;{
3823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3824 &#32;&#32;&#32;&#32;}
3825 
3826 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Linear&#32;search&#32;for&#32;simplicity&#32;to&#32;begin&#32;with&#32;while&#32;I&apos;m&#32;getting&#32;this&#32;thing&#32;working.&#32;Once&#32;it&apos;s&#32;all&#32;working&#32;change&#32;this&#32;to&#32;a&#32;binary&#32;search.&#32;*/</emphasis>
3827 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iSeekPoint&#32;=&#32;0;&#32;iSeekPoint&#32;&lt;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>;&#32;++iSeekPoint)&#32;{
3828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&gt;&#32;frameIndex)&#32;{
3829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;Found&#32;it.&#32;*/</emphasis>
3830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3831 
3832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pSeekPointIndex&#32;=&#32;iSeekPoint;
3833 &#32;&#32;&#32;&#32;}
3834 
3835 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3836 }
3837 
3838 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_to_pcm_frame__seek_table(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex)
3839 {
3840 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>&#32;seekPoint;
3841 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;priorSeekPointIndex;
3842 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;iMP3Frame;
3843 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;leftoverFrames;
3844 
3845 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3846 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3847 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;&gt;&#32;0);
3848 
3849 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;is&#32;no&#32;prior&#32;seekpoint&#32;it&#32;means&#32;the&#32;target&#32;PCM&#32;frame&#32;comes&#32;before&#32;the&#32;first&#32;seek&#32;point.&#32;Just&#32;assume&#32;a&#32;seekpoint&#32;at&#32;the&#32;start&#32;of&#32;the&#32;file&#32;in&#32;this&#32;case.&#32;*/</emphasis>
3850 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_find_closest_seek_point(pMP3,&#32;frameIndex,&#32;&amp;priorSeekPointIndex))&#32;{
3851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>[priorSeekPointIndex];
3852 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
3854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
3855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;0;
3856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;0;
3857 &#32;&#32;&#32;&#32;}
3858 
3859 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;First&#32;thing&#32;to&#32;do&#32;is&#32;seek&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;relevant&#32;MP3&#32;frame.&#32;*/</emphasis>
3860 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek_64(pMP3,&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>))&#32;{
3861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Failed&#32;to&#32;seek.&#32;*/</emphasis>
3862 &#32;&#32;&#32;&#32;}
3863 
3864 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;any&#32;cached&#32;data.&#32;*/</emphasis>
3865 &#32;&#32;&#32;&#32;drmp3_reset(pMP3);
3866 
3867 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Whole&#32;MP3&#32;frames&#32;need&#32;to&#32;be&#32;discarded&#32;first.&#32;*/</emphasis>
3868 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iMP3Frame&#32;=&#32;0;&#32;iMP3Frame&#32;&lt;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>;&#32;++iMP3Frame)&#32;{
3869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRead;
3870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_sample_t*&#32;pPCMFrames;
3871 
3872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Pass&#32;in&#32;non-null&#32;for&#32;the&#32;last&#32;frame&#32;because&#32;we&#32;want&#32;to&#32;ensure&#32;the&#32;sample&#32;rate&#32;converter&#32;is&#32;preloaded&#32;correctly.&#32;*/</emphasis>
3873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pPCMFrames&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iMP3Frame&#32;==&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>-1)&#32;{
3875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pPCMFrames&#32;=&#32;(drmp3d_sample_t*)pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>;
3876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3877 
3878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;first&#32;need&#32;to&#32;decode&#32;the&#32;next&#32;frame.&#32;*/</emphasis>
3879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;pPCMFrames);
3880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesRead&#32;==&#32;0)&#32;{
3881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3883 &#32;&#32;&#32;&#32;}
3884 
3885 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;seeked&#32;to&#32;an&#32;MP3&#32;frame&#32;in&#32;the&#32;raw&#32;stream&#32;so&#32;we&#32;need&#32;to&#32;make&#32;sure&#32;the&#32;current&#32;PCM&#32;frame&#32;is&#32;set&#32;correctly.&#32;*/</emphasis>
3886 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;=&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;-&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>;
3887 
3888 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3889 <emphasis role="comment">&#32;&#32;&#32;&#32;Now&#32;at&#32;this&#32;point&#32;we&#32;can&#32;follow&#32;the&#32;same&#32;process&#32;as&#32;the&#32;brute&#32;force&#32;technique&#32;where&#32;we&#32;just&#32;skip&#32;over&#32;unnecessary&#32;MP3&#32;frames&#32;and&#32;then</emphasis>
3890 <emphasis role="comment">&#32;&#32;&#32;&#32;read-and-discard&#32;at&#32;least&#32;2&#32;whole&#32;MP3&#32;frames.</emphasis>
3891 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3892 &#32;&#32;&#32;&#32;leftoverFrames&#32;=&#32;frameIndex&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>;
3893 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_forward_by_pcm_frames__brute_force(pMP3,&#32;leftoverFrames);
3894 }
3895 
3896 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex)
3897 {
3898 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3900 &#32;&#32;&#32;&#32;}
3901 
3902 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;==&#32;0)&#32;{
3903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_to_start_of_stream(pMP3);
3904 &#32;&#32;&#32;&#32;}
3905 
3906 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Use&#32;the&#32;seek&#32;table&#32;if&#32;we&#32;have&#32;one.&#32;*/</emphasis>
3907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;&amp;&amp;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;&gt;&#32;0)&#32;{
3908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_to_pcm_frame__seek_table(pMP3,&#32;frameIndex);
3909 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_to_pcm_frame__brute_force(pMP3,&#32;frameIndex);
3911 &#32;&#32;&#32;&#32;}
3912 }
3913 
3914 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pMP3FrameCount,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pPCMFrameCount)
3915 {
3916 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;currentPCMFrame;
3917 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFrameCount;
3918 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalMP3FrameCount;
3919 
3920 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3922 &#32;&#32;&#32;&#32;}
3923 
3924 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3925 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;way&#32;this&#32;works&#32;is&#32;we&#32;move&#32;back&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stream,&#32;iterate&#32;over&#32;each&#32;MP3&#32;frame&#32;and&#32;calculate&#32;the&#32;frame&#32;count&#32;based</emphasis>
3926 <emphasis role="comment">&#32;&#32;&#32;&#32;on&#32;our&#32;output&#32;sample&#32;rate,&#32;the&#32;seek&#32;back&#32;to&#32;the&#32;PCM&#32;frame&#32;we&#32;were&#32;sitting&#32;on&#32;before&#32;calling&#32;this&#32;function.</emphasis>
3927 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3928 
3929 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;stream&#32;must&#32;support&#32;seeking&#32;for&#32;this&#32;to&#32;work.&#32;*/</emphasis>
3930 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3932 &#32;&#32;&#32;&#32;}
3933 
3934 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&apos;ll&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;where&#32;we&#32;were,&#32;so&#32;grab&#32;the&#32;PCM&#32;frame&#32;we&apos;re&#32;currently&#32;sitting&#32;on&#32;so&#32;we&#32;can&#32;restore&#32;later.&#32;*/</emphasis>
3935 &#32;&#32;&#32;&#32;currentPCMFrame&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>;
3936 &#32;&#32;&#32;&#32;
3937 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3939 &#32;&#32;&#32;&#32;}
3940 
3941 &#32;&#32;&#32;&#32;totalPCMFrameCount&#32;=&#32;0;
3942 &#32;&#32;&#32;&#32;totalMP3FrameCount&#32;=&#32;0;
3943 
3944 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3Frame;
3946 
3947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3Frame&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesInCurrentMP3Frame&#32;==&#32;0)&#32;{
3949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3951 
3952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalPCMFrameCount&#32;+=&#32;pcmFramesInCurrentMP3Frame;
3953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalMP3FrameCount&#32;+=&#32;1;
3954 &#32;&#32;&#32;&#32;}
3955 
3956 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Finally,&#32;we&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;where&#32;we&#32;were.&#32;*/</emphasis>
3957 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3959 &#32;&#32;&#32;&#32;}
3960 
3961 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(pMP3,&#32;currentPCMFrame))&#32;{
3962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3963 &#32;&#32;&#32;&#32;}
3964 
3965 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3FrameCount&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pMP3FrameCount&#32;=&#32;totalMP3FrameCount;
3967 &#32;&#32;&#32;&#32;}
3968 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pPCMFrameCount&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pPCMFrameCount&#32;=&#32;totalPCMFrameCount;
3970 &#32;&#32;&#32;&#32;}
3971 
3972 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3973 }
3974 
3975 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8da91a2c2b1659be7393d799fed77754">drmp3_get_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3976 {
3977 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFrameCount;
3978 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;&amp;totalPCMFrameCount))&#32;{
3979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3980 &#32;&#32;&#32;&#32;}
3981 
3982 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalPCMFrameCount;
3983 }
3984 
3985 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a51e6dda0eebdefceed1612f20133b765">drmp3_get_mp3_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3986 {
3987 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalMP3FrameCount;
3988 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(pMP3,&#32;&amp;totalMP3FrameCount,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;{
3989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3990 &#32;&#32;&#32;&#32;}
3991 
3992 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalMP3FrameCount;
3993 }
3994 
3995 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3__accumulate_running_pcm_frame_count(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCountIn,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pRunningPCMFrameCount,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pRunningPCMFrameCountFractionalPart)
3996 {
3997 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;srcRatio;
3998 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pcmFrameCountOutF;
3999 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCountOut;
4000 
4001 &#32;&#32;&#32;&#32;srcRatio&#32;=&#32;(float)pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>&#32;/&#32;(<emphasis role="keywordtype">float</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
4002 &#32;&#32;&#32;&#32;DRMP3_ASSERT(srcRatio&#32;&gt;&#32;0);
4003 
4004 &#32;&#32;&#32;&#32;pcmFrameCountOutF&#32;=&#32;*pRunningPCMFrameCountFractionalPart&#32;+&#32;(pcmFrameCountIn&#32;/&#32;srcRatio);
4005 &#32;&#32;&#32;&#32;pcmFrameCountOut&#32;&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)pcmFrameCountOutF;
4006 &#32;&#32;&#32;&#32;*pRunningPCMFrameCountFractionalPart&#32;=&#32;pcmFrameCountOutF&#32;-&#32;pcmFrameCountOut;
4007 &#32;&#32;&#32;&#32;*pRunningPCMFrameCount&#32;+=&#32;pcmFrameCountOut;
4008 }
4009 
4010 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
4011 {
4012 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;bytePos;
4013 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFrameIndex;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;After&#32;sample&#32;rate&#32;conversion.&#32;*/</emphasis>
4014 }&#32;drmp3__seeking_mp3_frame_info;
4015 
4016 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a31caabc58611fdd8d3849be909e0ebc8">drmp3_calculate_seek_points</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pSeekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints)
4017 {
4018 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount;
4019 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;currentPCMFrame;
4020 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalMP3FrameCount;
4021 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFrameCount;
4022 
4023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pSeekPointCount&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pSeekPoints&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Invalid&#32;args.&#32;*/</emphasis>
4025 &#32;&#32;&#32;&#32;}
4026 
4027 &#32;&#32;&#32;&#32;seekPointCount&#32;=&#32;*pSeekPointCount;
4028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seekPointCount&#32;==&#32;0)&#32;{
4029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;client&#32;has&#32;requested&#32;no&#32;seek&#32;points.&#32;Consider&#32;this&#32;to&#32;be&#32;invalid&#32;arguments&#32;since&#32;the&#32;client&#32;has&#32;probably&#32;not&#32;intended&#32;this.&#32;*/</emphasis>
4030 &#32;&#32;&#32;&#32;}
4031 
4032 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&apos;ll&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;the&#32;current&#32;sample&#32;after&#32;calculating&#32;the&#32;seekpoints&#32;so&#32;we&#32;need&#32;to&#32;go&#32;ahead&#32;and&#32;grab&#32;the&#32;current&#32;location&#32;at&#32;the&#32;top.&#32;*/</emphasis>
4033 &#32;&#32;&#32;&#32;currentPCMFrame&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>;
4034 &#32;&#32;&#32;&#32;
4035 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;never&#32;do&#32;more&#32;than&#32;the&#32;total&#32;number&#32;of&#32;MP3&#32;frames&#32;and&#32;we&#32;limit&#32;it&#32;to&#32;32-bits.&#32;*/</emphasis>
4036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(pMP3,&#32;&amp;totalMP3FrameCount,&#32;&amp;totalPCMFrameCount))&#32;{
4037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
4038 &#32;&#32;&#32;&#32;}
4039 
4040 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&apos;s&#32;less&#32;than&#32;DRMP3_SEEK_LEADING_MP3_FRAMES+1&#32;frames&#32;we&#32;just&#32;report&#32;1&#32;seek&#32;point&#32;which&#32;will&#32;be&#32;the&#32;very&#32;start&#32;of&#32;the&#32;stream.&#32;*/</emphasis>
4041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalMP3FrameCount&#32;&lt;&#32;DRMP3_SEEK_LEADING_MP3_FRAMES+1)&#32;{
4042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPointCount&#32;=&#32;1;
4043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
4044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
4045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;0;
4046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;0;
4047 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFramesBetweenSeekPoints;
4049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__seeking_mp3_frame_info&#32;mp3FrameInfo[DRMP3_SEEK_LEADING_MP3_FRAMES+1];
4050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;runningPCMFrameCount&#32;=&#32;0;
4051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;runningPCMFrameCountFractionalPart&#32;=&#32;0;
4052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;nextTargetPCMFrame;
4053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iMP3Frame;
4054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iSeekPoint;
4055 
4056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seekPointCount&#32;&gt;&#32;totalMP3FrameCount-1)&#32;{
4057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPointCount&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)totalMP3FrameCount-1;
4058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4059 
4060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesBetweenSeekPoints&#32;=&#32;totalPCMFrameCount&#32;/&#32;(seekPointCount+1);
4061 
4062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
4063 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Here&#32;is&#32;where&#32;we&#32;actually&#32;calculate&#32;the&#32;seek&#32;points.&#32;We&#32;need&#32;to&#32;start&#32;by&#32;moving&#32;the&#32;start&#32;of&#32;the&#32;stream.&#32;We&#32;then&#32;enumerate&#32;over&#32;each</emphasis>
4064 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MP3&#32;frame.</emphasis>
4065 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
4066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
4067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
4068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4069 
4070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
4071 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;We&#32;need&#32;to&#32;cache&#32;the&#32;byte&#32;positions&#32;of&#32;the&#32;previous&#32;MP3&#32;frames.&#32;As&#32;a&#32;new&#32;MP3&#32;frame&#32;is&#32;iterated,&#32;we&#32;cycle&#32;the&#32;byte&#32;positions&#32;in&#32;this</emphasis>
4072 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array.&#32;The&#32;value&#32;in&#32;the&#32;first&#32;item&#32;in&#32;this&#32;array&#32;is&#32;the&#32;byte&#32;position&#32;that&#32;will&#32;be&#32;reported&#32;in&#32;the&#32;next&#32;seek&#32;point.</emphasis>
4073 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
4074 
4075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;need&#32;to&#32;initialize&#32;the&#32;array&#32;of&#32;MP3&#32;byte&#32;positions&#32;for&#32;the&#32;leading&#32;MP3&#32;frames.&#32;*/</emphasis>
4076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iMP3Frame&#32;=&#32;0;&#32;iMP3Frame&#32;&lt;&#32;DRMP3_SEEK_LEADING_MP3_FRAMES+1;&#32;++iMP3Frame)&#32;{
4077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3FrameIn;
4078 
4079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;byte&#32;position&#32;of&#32;the&#32;next&#32;frame&#32;will&#32;be&#32;the&#32;stream&apos;s&#32;cursor&#32;position,&#32;minus&#32;whatever&#32;is&#32;sitting&#32;in&#32;the&#32;buffer.&#32;*/</emphasis>
4080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;&gt;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>);
4081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[iMP3Frame].bytePos&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>;
4082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[iMP3Frame].pcmFrameIndex&#32;=&#32;runningPCMFrameCount;
4083 
4084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;need&#32;to&#32;get&#32;information&#32;about&#32;this&#32;frame&#32;so&#32;we&#32;can&#32;know&#32;how&#32;many&#32;samples&#32;it&#32;contained.&#32;*/</emphasis>
4085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameIn&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesInCurrentMP3FrameIn&#32;==&#32;0)&#32;{
4087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;This&#32;should&#32;never&#32;happen.&#32;*/</emphasis>
4088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4089 
4090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__accumulate_running_pcm_frame_count(pMP3,&#32;pcmFramesInCurrentMP3FrameIn,&#32;&amp;runningPCMFrameCount,&#32;&amp;runningPCMFrameCountFractionalPart);
4091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4092 
4093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
4094 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;At&#32;this&#32;point&#32;we&#32;will&#32;have&#32;extracted&#32;the&#32;byte&#32;positions&#32;of&#32;the&#32;leading&#32;MP3&#32;frames.&#32;We&#32;can&#32;now&#32;start&#32;iterating&#32;over&#32;each&#32;seek&#32;point&#32;and</emphasis>
4095 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculate&#32;them.</emphasis>
4096 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
4097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTargetPCMFrame&#32;=&#32;0;
4098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iSeekPoint&#32;=&#32;0;&#32;iSeekPoint&#32;&lt;&#32;seekPointCount;&#32;++iSeekPoint)&#32;{
4099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTargetPCMFrame&#32;+=&#32;pcmFramesBetweenSeekPoints;
4100 
4101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
4102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nextTargetPCMFrame&#32;&lt;&#32;runningPCMFrameCount)&#32;{
4103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;next&#32;seek&#32;point&#32;is&#32;in&#32;the&#32;current&#32;MP3&#32;frame.&#32;*/</emphasis>
4104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;mp3FrameInfo[0].bytePos;
4105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;nextTargetPCMFrame;
4106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;DRMP3_SEEK_LEADING_MP3_FRAMES;
4107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)(nextTargetPCMFrame&#32;-&#32;mp3FrameInfo[DRMP3_SEEK_LEADING_MP3_FRAMES-1].pcmFrameIndex);
4108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
4111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3FrameIn;
4112 
4113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
4114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;next&#32;seek&#32;point&#32;is&#32;not&#32;in&#32;the&#32;current&#32;MP3&#32;frame,&#32;so&#32;continue&#32;on&#32;to&#32;the&#32;next&#32;one.&#32;The&#32;first&#32;thing&#32;to&#32;do&#32;is&#32;cycle&#32;the&#32;cached</emphasis>
4115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MP3&#32;frame&#32;info.</emphasis>
4116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
4117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;DRMP3_COUNTOF(mp3FrameInfo)-1;&#32;++i)&#32;{
4118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[i]&#32;=&#32;mp3FrameInfo[i+1];
4119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4120 
4121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cache&#32;previous&#32;MP3&#32;frame&#32;info.&#32;*/</emphasis>
4122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[DRMP3_COUNTOF(mp3FrameInfo)-1].bytePos&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>;
4123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[DRMP3_COUNTOF(mp3FrameInfo)-1].pcmFrameIndex&#32;=&#32;runningPCMFrameCount;
4124 
4125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
4126 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Go&#32;to&#32;the&#32;next&#32;MP3&#32;frame.&#32;This&#32;shouldn&apos;t&#32;ever&#32;fail,&#32;but&#32;just&#32;in&#32;case&#32;it&#32;does&#32;we&#32;just&#32;set&#32;the&#32;seek&#32;point&#32;and&#32;break.&#32;If&#32;it&#32;happens,&#32;it</emphasis>
4127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;should&#32;only&#32;ever&#32;do&#32;it&#32;for&#32;the&#32;last&#32;seek&#32;point.</emphasis>
4128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
4129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameIn&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesInCurrentMP3FrameIn&#32;==&#32;0)&#32;{
4131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;mp3FrameInfo[0].bytePos;
4132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;nextTargetPCMFrame;
4133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;DRMP3_SEEK_LEADING_MP3_FRAMES;
4134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)(nextTargetPCMFrame&#32;-&#32;mp3FrameInfo[DRMP3_SEEK_LEADING_MP3_FRAMES-1].pcmFrameIndex);
4135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4137 
4138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__accumulate_running_pcm_frame_count(pMP3,&#32;pcmFramesInCurrentMP3FrameIn,&#32;&amp;runningPCMFrameCount,&#32;&amp;runningPCMFrameCountFractionalPart);
4139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4142 
4143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Finally,&#32;we&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;where&#32;we&#32;were.&#32;*/</emphasis>
4144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
4145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
4146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(pMP3,&#32;currentPCMFrame))&#32;{
4148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
4149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4150 &#32;&#32;&#32;&#32;}
4151 
4152 &#32;&#32;&#32;&#32;*pSeekPointCount&#32;=&#32;seekPointCount;
4153 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
4154 }
4155 
4156 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a6fbf417308a71a006881246f9d9b579e">drmp3_bind_seek_table</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints)
4157 {
4158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
4160 &#32;&#32;&#32;&#32;}
4161 
4162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seekPointCount&#32;==&#32;0&#32;||&#32;pSeekPoints&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unbinding.&#32;*/</emphasis>
4164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;=&#32;0;
4165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4166 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Binding.&#32;*/</emphasis>
4168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;=&#32;seekPointCount;
4169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;=&#32;pSeekPoints;
4170 &#32;&#32;&#32;&#32;}
4171 
4172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
4173 }
4174 
4175 
4176 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;drmp3__full_read_and_close_f32(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
4177 {
4178 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
4179 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesCapacity&#32;=&#32;0;
4180 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pFrames&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4181 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;temp[4096];
4182 
4183 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4184 
4185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
4186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadRightNow&#32;=&#32;DRMP3_COUNTOF(temp)&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
4187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;framesToReadRightNow,&#32;temp);
4188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
4189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4191 
4192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reallocate&#32;the&#32;output&#32;buffer&#32;if&#32;there&apos;s&#32;not&#32;enough&#32;room.&#32;*/</emphasis>
4193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesCapacity&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
4194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;oldFramesBufferSize;
4195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;newFramesBufferSize;
4196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;newFramesCap;
4197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pNewFrames;
4198 
4199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesCap&#32;=&#32;framesCapacity&#32;*&#32;2;
4200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newFramesCap&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
4201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesCap&#32;=&#32;totalFramesRead&#32;+&#32;framesJustRead;
4202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4203 
4204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFramesBufferSize&#32;=&#32;framesCapacity&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(float);
4205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesBufferSize&#32;=&#32;newFramesCap&#32;&#32;&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(float);
4206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newFramesBufferSize&#32;&gt;&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>)DRMP3_SIZE_MAX)&#32;{
4207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4209 
4210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewFrames&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>*)drmp3__realloc_from_callbacks(pFrames,&#32;(<emphasis role="keywordtype">size_t</emphasis>)newFramesBufferSize,&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)oldFramesBufferSize,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
4211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewFrames&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__free_from_callbacks(pFrames,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
4213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4215 
4216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFrames&#32;=&#32;pNewFrames;
4217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesCapacity&#32;=&#32;newFramesCap;
4218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4219 
4220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(pFrames&#32;+&#32;totalFramesRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>,&#32;temp,&#32;(<emphasis role="keywordtype">size_t</emphasis>)(framesJustRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)));
4221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;framesJustRead;
4222 
4223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;number&#32;of&#32;frames&#32;we&#32;asked&#32;for&#32;is&#32;less&#32;that&#32;what&#32;we&#32;actually&#32;read&#32;it&#32;means&#32;we&apos;ve&#32;reached&#32;the&#32;end.&#32;*/</emphasis>
4224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;!=&#32;framesToReadRightNow)&#32;{
4225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4227 &#32;&#32;&#32;&#32;}
4228 
4229 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1aeba5ee4c2ca6c8b1d4a8174ddd19ac7c">channels</link>&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
4231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1a97b032abdec484103ad2c2ee74182eb1">sampleRate</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
4232 &#32;&#32;&#32;&#32;}
4233 
4234 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(pMP3);
4235 
4236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pTotalFrameCount)&#32;{
4237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pTotalFrameCount&#32;=&#32;totalFramesRead;
4238 &#32;&#32;&#32;&#32;}
4239 
4240 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pFrames;
4241 }
4242 
4243 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;drmp3__full_read_and_close_s16(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
4244 {
4245 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
4246 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesCapacity&#32;=&#32;0;
4247 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pFrames&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4248 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;temp[4096];
4249 
4250 &#32;&#32;&#32;&#32;DRMP3_ASSERT(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4251 
4252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
4253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadRightNow&#32;=&#32;DRMP3_COUNTOF(temp)&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
4254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(pMP3,&#32;framesToReadRightNow,&#32;temp);
4255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
4256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4258 
4259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reallocate&#32;the&#32;output&#32;buffer&#32;if&#32;there&apos;s&#32;not&#32;enough&#32;room.&#32;*/</emphasis>
4260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesCapacity&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
4261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;newFramesBufferSize;
4262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;oldFramesBufferSize;
4263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;newFramesCap;
4264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pNewFrames;
4265 
4266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesCap&#32;=&#32;framesCapacity&#32;*&#32;2;
4267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newFramesCap&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
4268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesCap&#32;=&#32;totalFramesRead&#32;+&#32;framesJustRead;
4269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4270 
4271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFramesBufferSize&#32;=&#32;framesCapacity&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>);
4272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesBufferSize&#32;=&#32;newFramesCap&#32;&#32;&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>);
4273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newFramesBufferSize&#32;&gt;&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>)DRMP3_SIZE_MAX)&#32;{
4274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4276 
4277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewFrames&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*)drmp3__realloc_from_callbacks(pFrames,&#32;(<emphasis role="keywordtype">size_t</emphasis>)newFramesBufferSize,&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)oldFramesBufferSize,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
4278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewFrames&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__free_from_callbacks(pFrames,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abd13e25085798cc56e1666ba42957298">allocationCallbacks</link>);
4280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4282 
4283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFrames&#32;=&#32;pNewFrames;
4284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesCapacity&#32;=&#32;newFramesCap;
4285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4286 
4287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_COPY_MEMORY(pFrames&#32;+&#32;totalFramesRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>,&#32;temp,&#32;(<emphasis role="keywordtype">size_t</emphasis>)(framesJustRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>*<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)));
4288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;framesJustRead;
4289 
4290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;number&#32;of&#32;frames&#32;we&#32;asked&#32;for&#32;is&#32;less&#32;that&#32;what&#32;we&#32;actually&#32;read&#32;it&#32;means&#32;we&apos;ve&#32;reached&#32;the&#32;end.&#32;*/</emphasis>
4291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;!=&#32;framesToReadRightNow)&#32;{
4292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4294 &#32;&#32;&#32;&#32;}
4295 
4296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1aeba5ee4c2ca6c8b1d4a8174ddd19ac7c">channels</link>&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
4298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1a97b032abdec484103ad2c2ee74182eb1">sampleRate</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
4299 &#32;&#32;&#32;&#32;}
4300 
4301 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(pMP3);
4302 
4303 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pTotalFrameCount)&#32;{
4304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pTotalFrameCount&#32;=&#32;totalFramesRead;
4305 &#32;&#32;&#32;&#32;}
4306 
4307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pFrames;
4308 }
4309 
4310 
4311 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a4747a2a6b8e2c01bfc4f49b879e1ed72">drmp3_open_and_read_pcm_frames_f32</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4312 {
4313 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
4314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(&amp;mp3,&#32;onRead,&#32;onSeek,&#32;pUserData,&#32;pAllocationCallbacks))&#32;{
4315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4316 &#32;&#32;&#32;&#32;}
4317 
4318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_f32(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
4319 }
4320 
4321 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaf9d7e42817f8ce7ca2ce1c74a5e7b51">drmp3_open_and_read_pcm_frames_s16</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4322 {
4323 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
4324 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(&amp;mp3,&#32;onRead,&#32;onSeek,&#32;pUserData,&#32;pAllocationCallbacks))&#32;{
4325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4326 &#32;&#32;&#32;&#32;}
4327 
4328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_s16(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
4329 }
4330 
4331 
4332 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a5fab2d5b1d2aadd2b2004682013e26b1">drmp3_open_memory_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4333 {
4334 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
4335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(&amp;mp3,&#32;pData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;pAllocationCallbacks))&#32;{
4336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4337 &#32;&#32;&#32;&#32;}
4338 
4339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_f32(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
4340 }
4341 
4342 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2f0ca09141bac061ebc7ba774605b90d">drmp3_open_memory_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4343 {
4344 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
4345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(&amp;mp3,&#32;pData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;pAllocationCallbacks))&#32;{
4346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4347 &#32;&#32;&#32;&#32;}
4348 
4349 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_s16(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
4350 }
4351 
4352 
4353 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
4354 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a5821e5a5c6590922e3b2380c33b2ff02">drmp3_open_file_and_read_pcm_frames_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4355 {
4356 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
4357 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(&amp;mp3,&#32;filePath,&#32;pAllocationCallbacks))&#32;{
4358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4359 &#32;&#32;&#32;&#32;}
4360 
4361 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_f32(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
4362 }
4363 
4364 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a31cae6872e81b24cb3950f96144dc3e9">drmp3_open_file_and_read_pcm_frames_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4365 {
4366 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
4367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(&amp;mp3,&#32;filePath,&#32;pAllocationCallbacks))&#32;{
4368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4369 &#32;&#32;&#32;&#32;}
4370 
4371 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_s16(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
4372 }
4373 <emphasis role="preprocessor">#endif</emphasis>
4374 
4375 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a7b7196f1d807c985efb2b02435206932">drmp3_malloc</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4376 {
4377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__malloc_from_callbacks(sz,&#32;pAllocationCallbacks);
4379 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__malloc_default(sz,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4381 &#32;&#32;&#32;&#32;}
4382 }
4383 
4384 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1a85e0ad47f8692ac7af842eb9eda65935">DRMP3_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(<emphasis role="keywordtype">void</emphasis>*&#32;p,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link>*&#32;pAllocationCallbacks)
4385 {
4386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pAllocationCallbacks&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
4387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__free_from_callbacks(p,&#32;pAllocationCallbacks);
4388 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__free_default(p,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
4390 &#32;&#32;&#32;&#32;}
4391 }
4392 
4393 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;dr_mp3_c&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
4394 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*DR_MP3_IMPLEMENTATION*/</emphasis><emphasis role="preprocessor"></emphasis>
4395 
4396 <emphasis role="comment">/*</emphasis>
4397 <emphasis role="comment">DIFFERENCES&#32;BETWEEN&#32;minimp3&#32;AND&#32;dr_mp3</emphasis>
4398 <emphasis role="comment">======================================</emphasis>
4399 <emphasis role="comment">-&#32;First,&#32;keep&#32;in&#32;mind&#32;that&#32;minimp3&#32;(https://github.com/lieff/minimp3)&#32;is&#32;where&#32;all&#32;the&#32;real&#32;work&#32;was&#32;done.&#32;All&#32;of&#32;the</emphasis>
4400 <emphasis role="comment">&#32;&#32;code&#32;relating&#32;to&#32;the&#32;actual&#32;decoding&#32;remains&#32;mostly&#32;unmodified,&#32;apart&#32;from&#32;some&#32;namespacing&#32;changes.</emphasis>
4401 <emphasis role="comment">-&#32;dr_mp3&#32;adds&#32;a&#32;pulling&#32;style&#32;API&#32;which&#32;allows&#32;you&#32;to&#32;deliver&#32;raw&#32;data&#32;via&#32;callbacks.&#32;So,&#32;rather&#32;than&#32;pushing&#32;data</emphasis>
4402 <emphasis role="comment">&#32;&#32;to&#32;the&#32;decoder,&#32;the&#32;decoder&#32;_pulls_&#32;data&#32;from&#32;your&#32;callbacks.</emphasis>
4403 <emphasis role="comment">-&#32;In&#32;addition&#32;to&#32;callbacks,&#32;a&#32;decoder&#32;can&#32;be&#32;initialized&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;and&#32;a&#32;file.</emphasis>
4404 <emphasis role="comment">-&#32;The&#32;dr_mp3&#32;pull&#32;API&#32;reads&#32;PCM&#32;frames&#32;rather&#32;than&#32;whole&#32;MP3&#32;frames.</emphasis>
4405 <emphasis role="comment">-&#32;dr_mp3&#32;adds&#32;convenience&#32;APIs&#32;for&#32;opening&#32;and&#32;decoding&#32;entire&#32;files&#32;in&#32;one&#32;go.</emphasis>
4406 <emphasis role="comment">-&#32;dr_mp3&#32;is&#32;fully&#32;namespaced,&#32;including&#32;the&#32;implementation&#32;section,&#32;which&#32;is&#32;more&#32;suitable&#32;when&#32;compiling&#32;projects</emphasis>
4407 <emphasis role="comment">&#32;&#32;as&#32;a&#32;single&#32;translation&#32;unit&#32;(aka&#32;unity&#32;builds).&#32;At&#32;the&#32;time&#32;of&#32;writing&#32;this,&#32;a&#32;unity&#32;build&#32;is&#32;not&#32;possible&#32;when</emphasis>
4408 <emphasis role="comment">&#32;&#32;using&#32;minimp3&#32;in&#32;conjunction&#32;with&#32;stb_vorbis.&#32;dr_mp3&#32;addresses&#32;this.</emphasis>
4409 <emphasis role="comment">*/</emphasis>
4410 
4411 <emphasis role="comment">/*</emphasis>
4412 <emphasis role="comment">RELEASE&#32;NOTES&#32;-&#32;v0.5.0</emphasis>
4413 <emphasis role="comment">=======================</emphasis>
4414 <emphasis role="comment">Version&#32;0.5.0&#32;has&#32;breaking&#32;API&#32;changes.</emphasis>
4415 <emphasis role="comment"></emphasis>
4416 <emphasis role="comment">Improved&#32;Client-Defined&#32;Memory&#32;Allocation</emphasis>
4417 <emphasis role="comment">-----------------------------------------</emphasis>
4418 <emphasis role="comment">The&#32;main&#32;change&#32;with&#32;this&#32;release&#32;is&#32;the&#32;addition&#32;of&#32;a&#32;more&#32;flexible&#32;way&#32;of&#32;implementing&#32;custom&#32;memory&#32;allocation&#32;routines.&#32;The</emphasis>
4419 <emphasis role="comment">existing&#32;system&#32;of&#32;DRMP3_MALLOC,&#32;DRMP3_REALLOC&#32;and&#32;DRMP3_FREE&#32;are&#32;still&#32;in&#32;place&#32;and&#32;will&#32;be&#32;used&#32;by&#32;default&#32;when&#32;no&#32;custom</emphasis>
4420 <emphasis role="comment">allocation&#32;callbacks&#32;are&#32;specified.</emphasis>
4421 <emphasis role="comment"></emphasis>
4422 <emphasis role="comment">To&#32;use&#32;the&#32;new&#32;system,&#32;you&#32;pass&#32;in&#32;a&#32;pointer&#32;to&#32;a&#32;drmp3_allocation_callbacks&#32;object&#32;to&#32;drmp3_init()&#32;and&#32;family,&#32;like&#32;this:</emphasis>
4423 <emphasis role="comment"></emphasis>
4424 <emphasis role="comment">&#32;&#32;&#32;&#32;void*&#32;my_malloc(size_t&#32;sz,&#32;void*&#32;pUserData)</emphasis>
4425 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
4426 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;malloc(sz);</emphasis>
4427 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
4428 <emphasis role="comment">&#32;&#32;&#32;&#32;void*&#32;my_realloc(void*&#32;p,&#32;size_t&#32;sz,&#32;void*&#32;pUserData)</emphasis>
4429 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
4430 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;realloc(p,&#32;sz);</emphasis>
4431 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
4432 <emphasis role="comment">&#32;&#32;&#32;&#32;void&#32;my_free(void*&#32;p,&#32;void*&#32;pUserData)</emphasis>
4433 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
4434 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(p);</emphasis>
4435 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
4436 <emphasis role="comment"></emphasis>
4437 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
4438 <emphasis role="comment"></emphasis>
4439 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_allocation_callbacks&#32;allocationCallbacks;</emphasis>
4440 <emphasis role="comment">&#32;&#32;&#32;&#32;allocationCallbacks.pUserData&#32;=&#32;&amp;myData;</emphasis>
4441 <emphasis role="comment">&#32;&#32;&#32;&#32;allocationCallbacks.onMalloc&#32;&#32;=&#32;my_malloc;</emphasis>
4442 <emphasis role="comment">&#32;&#32;&#32;&#32;allocationCallbacks.onRealloc&#32;=&#32;my_realloc;</emphasis>
4443 <emphasis role="comment">&#32;&#32;&#32;&#32;allocationCallbacks.onFree&#32;&#32;&#32;&#32;=&#32;my_free;</emphasis>
4444 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_init_file(&amp;mp3,&#32;&quot;my_file.mp3&quot;,&#32;NULL,&#32;&amp;allocationCallbacks);</emphasis>
4445 <emphasis role="comment"></emphasis>
4446 <emphasis role="comment">The&#32;advantage&#32;of&#32;this&#32;new&#32;system&#32;is&#32;that&#32;it&#32;allows&#32;you&#32;to&#32;specify&#32;user&#32;data&#32;which&#32;will&#32;be&#32;passed&#32;in&#32;to&#32;the&#32;allocation&#32;routines.</emphasis>
4447 <emphasis role="comment"></emphasis>
4448 <emphasis role="comment">Passing&#32;in&#32;null&#32;for&#32;the&#32;allocation&#32;callbacks&#32;object&#32;will&#32;cause&#32;dr_mp3&#32;to&#32;use&#32;defaults&#32;which&#32;is&#32;the&#32;same&#32;as&#32;DRMP3_MALLOC,</emphasis>
4449 <emphasis role="comment">DRMP3_REALLOC&#32;and&#32;DRMP3_FREE&#32;and&#32;the&#32;equivalent&#32;of&#32;how&#32;it&#32;worked&#32;in&#32;previous&#32;versions.</emphasis>
4450 <emphasis role="comment"></emphasis>
4451 <emphasis role="comment">Every&#32;API&#32;that&#32;opens&#32;a&#32;drmp3&#32;object&#32;now&#32;takes&#32;this&#32;extra&#32;parameter.&#32;These&#32;include&#32;the&#32;following:</emphasis>
4452 <emphasis role="comment"></emphasis>
4453 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_init()</emphasis>
4454 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_init_file()</emphasis>
4455 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_init_memory()</emphasis>
4456 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_and_read_pcm_frames_f32()</emphasis>
4457 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_and_read_pcm_frames_s16()</emphasis>
4458 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_memory_and_read_pcm_frames_f32()</emphasis>
4459 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_memory_and_read_pcm_frames_s16()</emphasis>
4460 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_file_and_read_pcm_frames_f32()</emphasis>
4461 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_file_and_read_pcm_frames_s16()</emphasis>
4462 <emphasis role="comment"></emphasis>
4463 <emphasis role="comment">Renamed&#32;APIs</emphasis>
4464 <emphasis role="comment">------------</emphasis>
4465 <emphasis role="comment">The&#32;following&#32;APIs&#32;have&#32;been&#32;renamed&#32;for&#32;consistency&#32;with&#32;other&#32;dr_*&#32;libraries&#32;and&#32;to&#32;make&#32;it&#32;clear&#32;that&#32;they&#32;return&#32;PCM&#32;frame</emphasis>
4466 <emphasis role="comment">counts&#32;rather&#32;than&#32;sample&#32;counts.</emphasis>
4467 <emphasis role="comment"></emphasis>
4468 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_and_read_f32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drmp3_open_and_read_pcm_frames_f32()</emphasis>
4469 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_and_read_s16()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drmp3_open_and_read_pcm_frames_s16()</emphasis>
4470 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_memory_and_read_f32()&#32;-&gt;&#32;drmp3_open_memory_and_read_pcm_frames_f32()</emphasis>
4471 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_memory_and_read_s16()&#32;-&gt;&#32;drmp3_open_memory_and_read_pcm_frames_s16()</emphasis>
4472 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_file_and_read_f32()&#32;&#32;&#32;-&gt;&#32;drmp3_open_file_and_read_pcm_frames_f32()</emphasis>
4473 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_open_file_and_read_s16()&#32;&#32;&#32;-&gt;&#32;drmp3_open_file_and_read_pcm_frames_s16()</emphasis>
4474 <emphasis role="comment">*/</emphasis>
4475 
4476 <emphasis role="comment">/*</emphasis>
4477 <emphasis role="comment">REVISION&#32;HISTORY</emphasis>
4478 <emphasis role="comment">================</emphasis>
4479 <emphasis role="comment">v0.6.34&#32;-&#32;2022-09-17</emphasis>
4480 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;with&#32;DJGPP.</emphasis>
4481 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;when&#32;compiling&#32;with&#32;x86&#32;with&#32;no&#32;SSE2.</emphasis>
4482 <emphasis role="comment">&#32;&#32;-&#32;Remove&#32;an&#32;unnecessary&#32;variable&#32;from&#32;the&#32;drmp3&#32;structure.</emphasis>
4483 <emphasis role="comment"></emphasis>
4484 <emphasis role="comment">v0.6.33&#32;-&#32;2022-04-10</emphasis>
4485 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;error&#32;with&#32;the&#32;MSVC&#32;ARM64&#32;build.</emphasis>
4486 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;error&#32;on&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
4487 <emphasis role="comment">&#32;&#32;-&#32;Remove&#32;some&#32;unused&#32;functions.</emphasis>
4488 <emphasis role="comment"></emphasis>
4489 <emphasis role="comment">v0.6.32&#32;-&#32;2021-12-11</emphasis>
4490 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning&#32;with&#32;Clang.</emphasis>
4491 <emphasis role="comment"></emphasis>
4492 <emphasis role="comment">v0.6.31&#32;-&#32;2021-08-22</emphasis>
4493 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;bug&#32;when&#32;loading&#32;from&#32;memory.</emphasis>
4494 <emphasis role="comment"></emphasis>
4495 <emphasis role="comment">v0.6.30&#32;-&#32;2021-08-16</emphasis>
4496 <emphasis role="comment">&#32;&#32;-&#32;Silence&#32;some&#32;warnings.</emphasis>
4497 <emphasis role="comment">&#32;&#32;-&#32;Replace&#32;memory&#32;operations&#32;with&#32;DRMP3_*&#32;macros.</emphasis>
4498 <emphasis role="comment"></emphasis>
4499 <emphasis role="comment">v0.6.29&#32;-&#32;2021-08-08</emphasis>
4500 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4501 <emphasis role="comment"></emphasis>
4502 <emphasis role="comment">v0.6.28&#32;-&#32;2021-07-31</emphasis>
4503 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;platform&#32;detection&#32;for&#32;ARM64.</emphasis>
4504 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compilation&#32;error&#32;with&#32;C89.</emphasis>
4505 <emphasis role="comment"></emphasis>
4506 <emphasis role="comment">v0.6.27&#32;-&#32;2021-02-21</emphasis>
4507 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning&#32;due&#32;to&#32;referencing&#32;_MSC_VER&#32;when&#32;it&#32;is&#32;undefined.</emphasis>
4508 <emphasis role="comment"></emphasis>
4509 <emphasis role="comment">v0.6.26&#32;-&#32;2021-01-31</emphasis>
4510 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4511 <emphasis role="comment"></emphasis>
4512 <emphasis role="comment">v0.6.25&#32;-&#32;2020-12-26</emphasis>
4513 <emphasis role="comment">&#32;&#32;-&#32;Remove&#32;DRMP3_DEFAULT_CHANNELS&#32;and&#32;DRMP3_DEFAULT_SAMPLE_RATE&#32;which&#32;are&#32;leftovers&#32;from&#32;some&#32;removed&#32;APIs.</emphasis>
4514 <emphasis role="comment"></emphasis>
4515 <emphasis role="comment">v0.6.24&#32;-&#32;2020-12-07</emphasis>
4516 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;typo&#32;in&#32;version&#32;date&#32;for&#32;0.6.23.</emphasis>
4517 <emphasis role="comment"></emphasis>
4518 <emphasis role="comment">v0.6.23&#32;-&#32;2020-12-03</emphasis>
4519 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;an&#32;error&#32;where&#32;a&#32;file&#32;can&#32;be&#32;closed&#32;twice&#32;when&#32;initialization&#32;of&#32;the&#32;decoder&#32;fails.</emphasis>
4520 <emphasis role="comment"></emphasis>
4521 <emphasis role="comment">v0.6.22&#32;-&#32;2020-12-02</emphasis>
4522 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;an&#32;error&#32;where&#32;it&apos;s&#32;possible&#32;for&#32;a&#32;file&#32;handle&#32;to&#32;be&#32;left&#32;open&#32;when&#32;initialization&#32;of&#32;the&#32;decoder&#32;fails.</emphasis>
4523 <emphasis role="comment"></emphasis>
4524 <emphasis role="comment">v0.6.21&#32;-&#32;2020-11-28</emphasis>
4525 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4526 <emphasis role="comment"></emphasis>
4527 <emphasis role="comment">v0.6.20&#32;-&#32;2020-11-21</emphasis>
4528 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;with&#32;OpenWatcom.</emphasis>
4529 <emphasis role="comment"></emphasis>
4530 <emphasis role="comment">v0.6.19&#32;-&#32;2020-11-13</emphasis>
4531 <emphasis role="comment">&#32;&#32;-&#32;Minor&#32;code&#32;clean&#32;up.</emphasis>
4532 <emphasis role="comment"></emphasis>
4533 <emphasis role="comment">v0.6.18&#32;-&#32;2020-11-01</emphasis>
4534 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;compiler&#32;support&#32;for&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
4535 <emphasis role="comment"></emphasis>
4536 <emphasis role="comment">v0.6.17&#32;-&#32;2020-09-28</emphasis>
4537 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4538 <emphasis role="comment"></emphasis>
4539 <emphasis role="comment">v0.6.16&#32;-&#32;2020-08-02</emphasis>
4540 <emphasis role="comment">&#32;&#32;-&#32;Simplify&#32;sized&#32;types.</emphasis>
4541 <emphasis role="comment"></emphasis>
4542 <emphasis role="comment">v0.6.15&#32;-&#32;2020-07-25</emphasis>
4543 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compilation&#32;warning.</emphasis>
4544 <emphasis role="comment"></emphasis>
4545 <emphasis role="comment">v0.6.14&#32;-&#32;2020-07-23</emphasis>
4546 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;undefined&#32;behaviour&#32;with&#32;memmove().</emphasis>
4547 <emphasis role="comment"></emphasis>
4548 <emphasis role="comment">v0.6.13&#32;-&#32;2020-07-06</emphasis>
4549 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;bug&#32;when&#32;converting&#32;from&#32;s16&#32;to&#32;f32&#32;in&#32;drmp3_read_pcm_frames_f32().</emphasis>
4550 <emphasis role="comment"></emphasis>
4551 <emphasis role="comment">v0.6.12&#32;-&#32;2020-06-23</emphasis>
4552 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;include&#32;guard&#32;for&#32;the&#32;implementation&#32;section.</emphasis>
4553 <emphasis role="comment"></emphasis>
4554 <emphasis role="comment">v0.6.11&#32;-&#32;2020-05-26</emphasis>
4555 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;use&#32;of&#32;uninitialized&#32;variable&#32;error.</emphasis>
4556 <emphasis role="comment"></emphasis>
4557 <emphasis role="comment">v0.6.10&#32;-&#32;2020-05-16</emphasis>
4558 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;compile-time&#32;and&#32;run-time&#32;version&#32;querying.</emphasis>
4559 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;DRMP3_VERSION_MINOR</emphasis>
4560 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;DRMP3_VERSION_MAJOR</emphasis>
4561 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;DRMP3_VERSION_REVISION</emphasis>
4562 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;DRMP3_VERSION_STRING</emphasis>
4563 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_version()</emphasis>
4564 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_version_string()</emphasis>
4565 <emphasis role="comment"></emphasis>
4566 <emphasis role="comment">v0.6.9&#32;-&#32;2020-04-30</emphasis>
4567 <emphasis role="comment">&#32;&#32;-&#32;Change&#32;the&#32;`pcm`&#32;parameter&#32;of&#32;drmp3dec_decode_frame()&#32;to&#32;a&#32;`const&#32;drmp3_uint8*`&#32;for&#32;consistency&#32;with&#32;internal&#32;APIs.</emphasis>
4568 <emphasis role="comment"></emphasis>
4569 <emphasis role="comment">v0.6.8&#32;-&#32;2020-04-26</emphasis>
4570 <emphasis role="comment">&#32;&#32;-&#32;Optimizations&#32;to&#32;decoding&#32;when&#32;initializing&#32;from&#32;memory.</emphasis>
4571 <emphasis role="comment"></emphasis>
4572 <emphasis role="comment">v0.6.7&#32;-&#32;2020-04-25</emphasis>
4573 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compilation&#32;error&#32;with&#32;DR_MP3_NO_STDIO</emphasis>
4574 <emphasis role="comment">&#32;&#32;-&#32;Optimization&#32;to&#32;decoding&#32;by&#32;reducing&#32;some&#32;data&#32;movement.</emphasis>
4575 <emphasis role="comment"></emphasis>
4576 <emphasis role="comment">v0.6.6&#32;-&#32;2020-04-23</emphasis>
4577 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;minor&#32;bug&#32;with&#32;the&#32;running&#32;PCM&#32;frame&#32;counter.</emphasis>
4578 <emphasis role="comment"></emphasis>
4579 <emphasis role="comment">v0.6.5&#32;-&#32;2020-04-19</emphasis>
4580 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;error&#32;on&#32;ARM&#32;builds.</emphasis>
4581 <emphasis role="comment"></emphasis>
4582 <emphasis role="comment">v0.6.4&#32;-&#32;2020-04-19</emphasis>
4583 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;changes&#32;to&#32;minimp3.</emphasis>
4584 <emphasis role="comment"></emphasis>
4585 <emphasis role="comment">v0.6.3&#32;-&#32;2020-04-13</emphasis>
4586 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;some&#32;pedantic&#32;warnings.</emphasis>
4587 <emphasis role="comment"></emphasis>
4588 <emphasis role="comment">v0.6.2&#32;-&#32;2020-04-10</emphasis>
4589 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;crash&#32;in&#32;drmp3_open_*_and_read_pcm_frames_*()&#32;if&#32;the&#32;output&#32;config&#32;object&#32;is&#32;NULL.</emphasis>
4590 <emphasis role="comment"></emphasis>
4591 <emphasis role="comment">v0.6.1&#32;-&#32;2020-04-05</emphasis>
4592 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;warnings.</emphasis>
4593 <emphasis role="comment"></emphasis>
4594 <emphasis role="comment">v0.6.0&#32;-&#32;2020-04-04</emphasis>
4595 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Remove&#32;the&#32;pConfig&#32;parameter&#32;from&#32;the&#32;following&#32;APIs:</emphasis>
4596 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_init()</emphasis>
4597 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_init_memory()</emphasis>
4598 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_init_file()</emphasis>
4599 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_init_file_w()&#32;for&#32;opening&#32;a&#32;file&#32;from&#32;a&#32;wchar_t&#32;encoded&#32;path.</emphasis>
4600 <emphasis role="comment"></emphasis>
4601 <emphasis role="comment">v0.5.6&#32;-&#32;2020-02-12</emphasis>
4602 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4603 <emphasis role="comment"></emphasis>
4604 <emphasis role="comment">v0.5.5&#32;-&#32;2020-01-29</emphasis>
4605 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;memory&#32;allocation&#32;bug&#32;in&#32;high&#32;level&#32;s16&#32;decoding&#32;APIs.</emphasis>
4606 <emphasis role="comment"></emphasis>
4607 <emphasis role="comment">v0.5.4&#32;-&#32;2019-12-02</emphasis>
4608 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;possible&#32;null&#32;pointer&#32;dereference&#32;when&#32;using&#32;custom&#32;memory&#32;allocators&#32;for&#32;realloc().</emphasis>
4609 <emphasis role="comment"></emphasis>
4610 <emphasis role="comment">v0.5.3&#32;-&#32;2019-11-14</emphasis>
4611 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;typos&#32;in&#32;documentation.</emphasis>
4612 <emphasis role="comment"></emphasis>
4613 <emphasis role="comment">v0.5.2&#32;-&#32;2019-11-02</emphasis>
4614 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4615 <emphasis role="comment"></emphasis>
4616 <emphasis role="comment">v0.5.1&#32;-&#32;2019-10-08</emphasis>
4617 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning&#32;with&#32;GCC.</emphasis>
4618 <emphasis role="comment"></emphasis>
4619 <emphasis role="comment">v0.5.0&#32;-&#32;2019-10-07</emphasis>
4620 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Add&#32;support&#32;for&#32;user&#32;defined&#32;memory&#32;allocation&#32;routines.&#32;This&#32;system&#32;allows&#32;the&#32;program&#32;to&#32;specify&#32;their&#32;own&#32;memory&#32;allocation</emphasis>
4621 <emphasis role="comment">&#32;&#32;&#32;&#32;routines&#32;with&#32;a&#32;user&#32;data&#32;pointer&#32;for&#32;client-specific&#32;contextual&#32;data.&#32;This&#32;adds&#32;an&#32;extra&#32;parameter&#32;to&#32;the&#32;end&#32;of&#32;the&#32;following&#32;APIs:</emphasis>
4622 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_init()</emphasis>
4623 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_init_file()</emphasis>
4624 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_init_memory()</emphasis>
4625 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_read_pcm_frames_f32()</emphasis>
4626 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_read_pcm_frames_s16()</emphasis>
4627 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_memory_and_read_pcm_frames_f32()</emphasis>
4628 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_memory_and_read_pcm_frames_s16()</emphasis>
4629 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_file_and_read_pcm_frames_f32()</emphasis>
4630 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_file_and_read_pcm_frames_s16()</emphasis>
4631 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Renamed&#32;the&#32;following&#32;APIs:</emphasis>
4632 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_read_f32()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drmp3_open_and_read_pcm_frames_f32()</emphasis>
4633 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_read_s16()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&gt;&#32;drmp3_open_and_read_pcm_frames_s16()</emphasis>
4634 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_memory_and_read_f32()&#32;-&gt;&#32;drmp3_open_memory_and_read_pcm_frames_f32()</emphasis>
4635 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_memory_and_read_s16()&#32;-&gt;&#32;drmp3_open_memory_and_read_pcm_frames_s16()</emphasis>
4636 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_file_and_read_f32()&#32;&#32;&#32;-&gt;&#32;drmp3_open_file_and_read_pcm_frames_f32()</emphasis>
4637 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_file_and_read_s16()&#32;&#32;&#32;-&gt;&#32;drmp3_open_file_and_read_pcm_frames_s16()</emphasis>
4638 <emphasis role="comment"></emphasis>
4639 <emphasis role="comment">v0.4.7&#32;-&#32;2019-07-28</emphasis>
4640 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compiler&#32;error.</emphasis>
4641 <emphasis role="comment"></emphasis>
4642 <emphasis role="comment">v0.4.6&#32;-&#32;2019-06-14</emphasis>
4643 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compiler&#32;error.</emphasis>
4644 <emphasis role="comment"></emphasis>
4645 <emphasis role="comment">v0.4.5&#32;-&#32;2019-06-06</emphasis>
4646 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4647 <emphasis role="comment"></emphasis>
4648 <emphasis role="comment">v0.4.4&#32;-&#32;2019-05-06</emphasis>
4649 <emphasis role="comment">&#32;&#32;-&#32;Fixes&#32;to&#32;the&#32;VC6&#32;build.</emphasis>
4650 <emphasis role="comment"></emphasis>
4651 <emphasis role="comment">v0.4.3&#32;-&#32;2019-05-05</emphasis>
4652 <emphasis role="comment">&#32;&#32;-&#32;Use&#32;the&#32;channel&#32;count&#32;and/or&#32;sample&#32;rate&#32;of&#32;the&#32;first&#32;MP3&#32;frame&#32;instead&#32;of&#32;DRMP3_DEFAULT_CHANNELS&#32;and</emphasis>
4653 <emphasis role="comment">&#32;&#32;&#32;&#32;DRMP3_DEFAULT_SAMPLE_RATE&#32;when&#32;they&#32;are&#32;set&#32;to&#32;0.&#32;To&#32;use&#32;the&#32;old&#32;behaviour,&#32;just&#32;set&#32;the&#32;relevant&#32;property&#32;to</emphasis>
4654 <emphasis role="comment">&#32;&#32;&#32;&#32;DRMP3_DEFAULT_CHANNELS&#32;or&#32;DRMP3_DEFAULT_SAMPLE_RATE.</emphasis>
4655 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;s16&#32;reading&#32;APIs</emphasis>
4656 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_read_pcm_frames_s16</emphasis>
4657 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_memory_and_read_pcm_frames_s16</emphasis>
4658 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_read_pcm_frames_s16</emphasis>
4659 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_file_and_read_pcm_frames_s16</emphasis>
4660 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_get_mp3_and_pcm_frame_count()&#32;to&#32;the&#32;public&#32;header&#32;section.</emphasis>
4661 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;C89.</emphasis>
4662 <emphasis role="comment">&#32;&#32;-&#32;Change&#32;license&#32;to&#32;choice&#32;of&#32;public&#32;domain&#32;or&#32;MIT-0.</emphasis>
4663 <emphasis role="comment"></emphasis>
4664 <emphasis role="comment">v0.4.2&#32;-&#32;2019-02-21</emphasis>
4665 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning.</emphasis>
4666 <emphasis role="comment"></emphasis>
4667 <emphasis role="comment">v0.4.1&#32;-&#32;2018-12-30</emphasis>
4668 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning.</emphasis>
4669 <emphasis role="comment"></emphasis>
4670 <emphasis role="comment">v0.4.0&#32;-&#32;2018-12-16</emphasis>
4671 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Rename&#32;some&#32;APIs:</emphasis>
4672 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_read_f32&#32;-&gt;&#32;to&#32;drmp3_read_pcm_frames_f32</emphasis>
4673 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_seek_to_frame&#32;-&gt;&#32;drmp3_seek_to_pcm_frame</emphasis>
4674 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_decode_f32&#32;-&gt;&#32;drmp3_open_and_read_pcm_frames_f32</emphasis>
4675 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_decode_memory_f32&#32;-&gt;&#32;drmp3_open_memory_and_read_pcm_frames_f32</emphasis>
4676 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_decode_file_f32&#32;-&gt;&#32;drmp3_open_file_and_read_pcm_frames_f32</emphasis>
4677 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_get_pcm_frame_count().</emphasis>
4678 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_get_mp3_frame_count().</emphasis>
4679 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;seeking&#32;performance.</emphasis>
4680 <emphasis role="comment"></emphasis>
4681 <emphasis role="comment">v0.3.2&#32;-&#32;2018-09-11</emphasis>
4682 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;couple&#32;of&#32;memory&#32;leaks.</emphasis>
4683 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4684 <emphasis role="comment"></emphasis>
4685 <emphasis role="comment">v0.3.1&#32;-&#32;2018-08-25</emphasis>
4686 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build.</emphasis>
4687 <emphasis role="comment"></emphasis>
4688 <emphasis role="comment">v0.3.0&#32;-&#32;2018-08-25</emphasis>
4689 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.&#32;This&#32;has&#32;a&#32;minor&#32;API&#32;change:&#32;the&#32;&quot;pcm&quot;&#32;parameter&#32;of&#32;drmp3dec_decode_frame()&#32;has</emphasis>
4690 <emphasis role="comment">&#32;&#32;&#32;&#32;been&#32;changed&#32;from&#32;short*&#32;to&#32;void*&#32;because&#32;it&#32;can&#32;now&#32;output&#32;both&#32;s16&#32;and&#32;f32&#32;samples,&#32;depending&#32;on&#32;whether&#32;or</emphasis>
4691 <emphasis role="comment">&#32;&#32;&#32;&#32;not&#32;the&#32;DR_MP3_FLOAT_OUTPUT&#32;option&#32;is&#32;set.</emphasis>
4692 <emphasis role="comment"></emphasis>
4693 <emphasis role="comment">v0.2.11&#32;-&#32;2018-08-08</emphasis>
4694 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;bug&#32;where&#32;the&#32;last&#32;part&#32;of&#32;a&#32;file&#32;is&#32;not&#32;read.</emphasis>
4695 <emphasis role="comment"></emphasis>
4696 <emphasis role="comment">v0.2.10&#32;-&#32;2018-08-07</emphasis>
4697 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;64-bit&#32;detection.</emphasis>
4698 <emphasis role="comment"></emphasis>
4699 <emphasis role="comment">v0.2.9&#32;-&#32;2018-08-05</emphasis>
4700 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build&#32;on&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
4701 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4702 <emphasis role="comment"></emphasis>
4703 <emphasis role="comment">v0.2.8&#32;-&#32;2018-08-02</emphasis>
4704 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;errors&#32;with&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
4705 <emphasis role="comment"></emphasis>
4706 <emphasis role="comment">v0.2.7&#32;-&#32;2018-07-13</emphasis>
4707 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4708 <emphasis role="comment"></emphasis>
4709 <emphasis role="comment">v0.2.6&#32;-&#32;2018-07-12</emphasis>
4710 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4711 <emphasis role="comment"></emphasis>
4712 <emphasis role="comment">v0.2.5&#32;-&#32;2018-06-22</emphasis>
4713 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4714 <emphasis role="comment"></emphasis>
4715 <emphasis role="comment">v0.2.4&#32;-&#32;2018-05-12</emphasis>
4716 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4717 <emphasis role="comment"></emphasis>
4718 <emphasis role="comment">v0.2.3&#32;-&#32;2018-04-29</emphasis>
4719 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;TCC&#32;build.</emphasis>
4720 <emphasis role="comment"></emphasis>
4721 <emphasis role="comment">v0.2.2&#32;-&#32;2018-04-28</emphasis>
4722 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;bug&#32;when&#32;opening&#32;a&#32;decoder&#32;from&#32;memory.</emphasis>
4723 <emphasis role="comment"></emphasis>
4724 <emphasis role="comment">v0.2.1&#32;-&#32;2018-04-27</emphasis>
4725 <emphasis role="comment">&#32;&#32;-&#32;Efficiency&#32;improvements&#32;when&#32;the&#32;decoder&#32;reaches&#32;the&#32;end&#32;of&#32;the&#32;stream.</emphasis>
4726 <emphasis role="comment"></emphasis>
4727 <emphasis role="comment">v0.2&#32;-&#32;2018-04-21</emphasis>
4728 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4729 <emphasis role="comment">&#32;&#32;-&#32;Start&#32;using&#32;major.minor.revision&#32;versioning.</emphasis>
4730 <emphasis role="comment"></emphasis>
4731 <emphasis role="comment">v0.1d&#32;-&#32;2018-03-30</emphasis>
4732 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4733 <emphasis role="comment"></emphasis>
4734 <emphasis role="comment">v0.1c&#32;-&#32;2018-03-11</emphasis>
4735 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build&#32;error.</emphasis>
4736 <emphasis role="comment"></emphasis>
4737 <emphasis role="comment">v0.1b&#32;-&#32;2018-03-07</emphasis>
4738 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
4739 <emphasis role="comment"></emphasis>
4740 <emphasis role="comment">v0.1a&#32;-&#32;2018-02-28</emphasis>
4741 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;error&#32;on&#32;GCC/Clang.</emphasis>
4742 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;some&#32;warnings.</emphasis>
4743 <emphasis role="comment"></emphasis>
4744 <emphasis role="comment">v0.1&#32;-&#32;2018-02-xx</emphasis>
4745 <emphasis role="comment">&#32;&#32;-&#32;Initial&#32;versioned&#32;release.</emphasis>
4746 <emphasis role="comment">*/</emphasis>
4747 
4748 <emphasis role="comment">/*</emphasis>
4749 <emphasis role="comment">This&#32;software&#32;is&#32;available&#32;as&#32;a&#32;choice&#32;of&#32;the&#32;following&#32;licenses.&#32;Choose</emphasis>
4750 <emphasis role="comment">whichever&#32;you&#32;prefer.</emphasis>
4751 <emphasis role="comment"></emphasis>
4752 <emphasis role="comment">===============================================================================</emphasis>
4753 <emphasis role="comment">ALTERNATIVE&#32;1&#32;-&#32;Public&#32;Domain&#32;(www.unlicense.org)</emphasis>
4754 <emphasis role="comment">===============================================================================</emphasis>
4755 <emphasis role="comment">This&#32;is&#32;free&#32;and&#32;unencumbered&#32;software&#32;released&#32;into&#32;the&#32;public&#32;domain.</emphasis>
4756 <emphasis role="comment"></emphasis>
4757 <emphasis role="comment">Anyone&#32;is&#32;free&#32;to&#32;copy,&#32;modify,&#32;publish,&#32;use,&#32;compile,&#32;sell,&#32;or&#32;distribute&#32;this</emphasis>
4758 <emphasis role="comment">software,&#32;either&#32;in&#32;source&#32;code&#32;form&#32;or&#32;as&#32;a&#32;compiled&#32;binary,&#32;for&#32;any&#32;purpose,</emphasis>
4759 <emphasis role="comment">commercial&#32;or&#32;non-commercial,&#32;and&#32;by&#32;any&#32;means.</emphasis>
4760 <emphasis role="comment"></emphasis>
4761 <emphasis role="comment">In&#32;jurisdictions&#32;that&#32;recognize&#32;copyright&#32;laws,&#32;the&#32;author&#32;or&#32;authors&#32;of&#32;this</emphasis>
4762 <emphasis role="comment">software&#32;dedicate&#32;any&#32;and&#32;all&#32;copyright&#32;interest&#32;in&#32;the&#32;software&#32;to&#32;the&#32;public</emphasis>
4763 <emphasis role="comment">domain.&#32;We&#32;make&#32;this&#32;dedication&#32;for&#32;the&#32;benefit&#32;of&#32;the&#32;public&#32;at&#32;large&#32;and&#32;to</emphasis>
4764 <emphasis role="comment">the&#32;detriment&#32;of&#32;our&#32;heirs&#32;and&#32;successors.&#32;We&#32;intend&#32;this&#32;dedication&#32;to&#32;be&#32;an</emphasis>
4765 <emphasis role="comment">overt&#32;act&#32;of&#32;relinquishment&#32;in&#32;perpetuity&#32;of&#32;all&#32;present&#32;and&#32;future&#32;rights&#32;to</emphasis>
4766 <emphasis role="comment">this&#32;software&#32;under&#32;copyright&#32;law.</emphasis>
4767 <emphasis role="comment"></emphasis>
4768 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
4769 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
4770 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
4771 <emphasis role="comment">AUTHORS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN</emphasis>
4772 <emphasis role="comment">ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION</emphasis>
4773 <emphasis role="comment">WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
4774 <emphasis role="comment"></emphasis>
4775 <emphasis role="comment">For&#32;more&#32;information,&#32;please&#32;refer&#32;to&#32;&lt;http://unlicense.org/&gt;</emphasis>
4776 <emphasis role="comment"></emphasis>
4777 <emphasis role="comment">===============================================================================</emphasis>
4778 <emphasis role="comment">ALTERNATIVE&#32;2&#32;-&#32;MIT&#32;No&#32;Attribution</emphasis>
4779 <emphasis role="comment">===============================================================================</emphasis>
4780 <emphasis role="comment">Copyright&#32;2020&#32;David&#32;Reid</emphasis>
4781 <emphasis role="comment"></emphasis>
4782 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
4783 <emphasis role="comment">this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
4784 <emphasis role="comment">the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
4785 <emphasis role="comment">use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies</emphasis>
4786 <emphasis role="comment">of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do</emphasis>
4787 <emphasis role="comment">so.</emphasis>
4788 <emphasis role="comment"></emphasis>
4789 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
4790 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
4791 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
4792 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
4793 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
4794 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
4795 <emphasis role="comment">SOFTWARE.</emphasis>
4796 <emphasis role="comment">*/</emphasis>
4797 
4798 <emphasis role="comment">/*</emphasis>
4799 <emphasis role="comment">&#32;&#32;&#32;&#32;https://github.com/lieff/minimp3</emphasis>
4800 <emphasis role="comment">&#32;&#32;&#32;&#32;To&#32;the&#32;extent&#32;possible&#32;under&#32;law,&#32;the&#32;author(s)&#32;have&#32;dedicated&#32;all&#32;copyright&#32;and&#32;related&#32;and&#32;neighboring&#32;rights&#32;to&#32;this&#32;software&#32;to&#32;the&#32;public&#32;domain&#32;worldwide.</emphasis>
4801 <emphasis role="comment">&#32;&#32;&#32;&#32;This&#32;software&#32;is&#32;distributed&#32;without&#32;any&#32;warranty.</emphasis>
4802 <emphasis role="comment">&#32;&#32;&#32;&#32;See&#32;&lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</emphasis>
4803 <emphasis role="comment">*/</emphasis>
</programlisting></section>
