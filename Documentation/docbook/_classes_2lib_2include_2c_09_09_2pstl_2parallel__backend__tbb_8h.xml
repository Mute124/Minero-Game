<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/parallel_backend_tbb.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/parallel_backend_tbb.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;algorithm&gt;<?linebreak?>#include &lt;type_traits&gt;<?linebreak?>#include &quot;parallel_backend_utils.h&quot;<?linebreak?>#include &lt;tbb/blocked_range.h&gt;<?linebreak?>#include &lt;tbb/parallel_for.h&gt;<?linebreak?>#include &lt;tbb/parallel_reduce.h&gt;<?linebreak?>#include &lt;tbb/parallel_scan.h&gt;<?linebreak?>#include &lt;tbb/parallel_invoke.h&gt;<?linebreak?>#include &lt;tbb/task_arena.h&gt;<?linebreak?>#include &lt;tbb/tbb_allocator.h&gt;<?linebreak?>#include &lt;tbb/task.h&gt;<?linebreak?></programlisting>Include dependency graph for parallel_backend_tbb.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____buffer">__pstl::__tbb_backend::__buffer&lt; _Tp &gt;</link></para>

<para>Raw memory buffer with automatic freeing and no exceptions. </para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____parallel__for__body">__pstl::__tbb_backend::__parallel_for_body&lt; _Index, _RealBody &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____tbb__backend_1_1____par__trans__red__body">__pstl::__tbb_backend::__par_trans_red_body&lt; _Index, _Up, _Tp, _Cp, _Rp &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____trans__scan__body">__pstl::__tbb_backend::__trans_scan_body&lt; _Index, _Up, _Tp, _Cp, _Rp, _Sp &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__pstl::__tbb_backend::__task</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____func__task">__pstl::__tbb_backend::__func_task&lt; _Func &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____root__task">__pstl::__tbb_backend::__root_task&lt; _Func &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func">__pstl::__tbb_backend::__merge_func&lt; _RandomAccessIterator1, _RandomAccessIterator2, _Compare, _Cleanup, _LeafMerge &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____stable__sort__func">__pstl::__tbb_backend::__stable_sort_func&lt; _RandomAccessIterator1, _RandomAccessIterator2, _Compare, _LeafSort &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____pstl">__pstl</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____pstl_1_1____tbb__backend">__pstl::__tbb_backend</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h_1af869ba400ecc0d93c30063ce85199f6c">_PSTL_MERGE_CUT_OFF</link>&#160;&#160;&#160;2000</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h_1a1919770db021e403acd6c1c6613a3285">_PSTL_STABLE_SORT_CUT_OFF</link>&#160;&#160;&#160;500</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a2ce0aab329490eb18c3aa27835c00cd2">__pstl::__tbb_backend::__cancel_execution</link> ()</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Fp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1afc697413a9bdd9d9e8e390827a960735">__pstl::__tbb_backend::__parallel_for</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, _Fp __f)</para>

<para>Evaluation of brick f[i,j) for each subrange [i,j) of [first,last) </para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Value , class _Index , typename _RealBody , typename _Reduction &gt; </para><para>_Value <link linkend="_namespace____pstl_1_1____tbb__backend_1a4a9dd8a02e3599cec8b430574551b661">__pstl::__tbb_backend::__parallel_reduce</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, const _Value &amp;__identity, const _RealBody &amp;__real_body, const _Reduction &amp;__reduction)</para>

<para>Evaluation of brick f[i,j) for each subrange [i,j) of [first,last) </para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Up , class _Tp , class _Cp , class _Rp &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____tbb__backend_1afcf54e45b118dd3af37bc3954d883625">__pstl::__tbb_backend::__parallel_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, _Up __u, _Tp __init, _Cp __combine, _Rp __brick_reduce)</para>
</listitem>
            <listitem><para>template&lt;typename _Index &gt; </para><para>_Index <link linkend="_namespace____pstl_1_1____tbb__backend_1a412bd21d61e578eab6a5afe510c8f07d">__pstl::__tbb_backend::__split</link> (_Index __m)</para>
</listitem>
            <listitem><para>template&lt;typename _Index , typename _Tp , typename _Rp , typename _Cp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1ac07922e1fd589396a2fa41616cdf6cc6">__pstl::__tbb_backend::__upsweep</link> (_Index __i, _Index __m, _Index __tilesize, _Tp *__r, _Index __lastsize, _Rp __reduce, _Cp __combine)</para>
</listitem>
            <listitem><para>template&lt;typename _Index , typename _Tp , typename _Cp , typename _Sp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1ac78e1043be34a9e5923c89e5af1eb37e">__pstl::__tbb_backend::__downsweep</link> (_Index __i, _Index __m, _Index __tilesize, _Tp *__r, _Index __lastsize, _Tp __initial, _Cp __combine, _Sp __scan)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _Index , typename _Tp , typename _Rp , typename _Cp , typename _Sp , typename _Ap &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1aad41a532e4a5fc9713ff8da06b89f6d1">__pstl::__tbb_backend::__parallel_strict_scan</link> (_ExecutionPolicy &amp;&amp;, _Index __n, _Tp __initial, _Rp __reduce, _Cp __combine, _Sp __scan, _Ap __apex)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Up , class _Tp , class _Cp , class _Rp , class _Sp &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____tbb__backend_1a35e5a2ca33d8474d4f761aefdc3c4b2e">__pstl::__tbb_backend::__parallel_transform_scan</link> (_ExecutionPolicy &amp;&amp;, _Index __n, _Up __u, _Tp __init, _Cp __combine, _Rp __brick_reduce, _Sp __scan)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator , typename _Compare , typename _LeafSort &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a967e2aaa88b561469b3205149bb05c23">__pstl::__tbb_backend::__parallel_stable_sort</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator __xs, _RandomAccessIterator __xe, _Compare __comp, _LeafSort __leaf_sort, std::size_t __nsort=0)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a973661d74ef06f105eadea08febc282f">__pstl::__tbb_backend::__parallel_merge</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _F1 , typename _F2 &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a6de9aba26ebb3d472746a63eca9ba1a9">__pstl::__tbb_backend::__parallel_invoke</link> (_ExecutionPolicy &amp;&amp;, _F1 &amp;&amp;__f1, _F2 &amp;&amp;__f2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h_1af869ba400ecc0d93c30063ce85199f6c"/><section>
    <title>_PSTL_MERGE_CUT_OFF</title>
<indexterm><primary>_PSTL_MERGE_CUT_OFF</primary><secondary>parallel_backend_tbb.h</secondary></indexterm>
<indexterm><primary>parallel_backend_tbb.h</primary><secondary>_PSTL_MERGE_CUT_OFF</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _PSTL_MERGE_CUT_OFF&#160;&#160;&#160;2000</computeroutput></para></section>
<anchor xml:id="__classes_2lib_2include_2c_09_09_2pstl_2parallel__backend__tbb_8h_1a1919770db021e403acd6c1c6613a3285"/><section>
    <title>_PSTL_STABLE_SORT_CUT_OFF</title>
<indexterm><primary>_PSTL_STABLE_SORT_CUT_OFF</primary><secondary>parallel_backend_tbb.h</secondary></indexterm>
<indexterm><primary>parallel_backend_tbb.h</primary><secondary>_PSTL_STABLE_SORT_CUT_OFF</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _PSTL_STABLE_SORT_CUT_OFF&#160;&#160;&#160;500</computeroutput></para></section>
</section>
</section>
