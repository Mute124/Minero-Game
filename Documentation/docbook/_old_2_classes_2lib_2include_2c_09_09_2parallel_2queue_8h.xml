<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2queue_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/queue.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/queue.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;parallel/types.h&gt;<?linebreak?>#include &lt;parallel/base.h&gt;<?linebreak?>#include &lt;parallel/compatibility.h&gt;<?linebreak?></programlisting>Include dependency graph for queue.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2parallel_2queue_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</link></para>

<para>Double-ended queue of bounded size, allowing lock-free atomic access. <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front()</link> and <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link> must not be called concurrently to each other, while <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back()</link> can be called concurrently at all times. <computeroutput>empty()</computeroutput>, <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size()</link></computeroutput>, and <computeroutput>top()</computeroutput> are intentionally not provided. Calling them would not make sense in a concurrent setting. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__parallel">__gnu_parallel</link></para>

<para>GNU parallel code for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2queue_8h_1a1c61e6ca8bdd220c11ec4b64f7539712">_GLIBCXX_VOLATILE</link>&#160;&#160;&#160;volatile</para>

<para>Decide whether to declare certain variable volatile in this file. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2queue_8h_1a1c61e6ca8bdd220c11ec4b64f7539712"/><section>
    <title>_GLIBCXX_VOLATILE</title>
<indexterm><primary>_GLIBCXX_VOLATILE</primary><secondary>queue.h</secondary></indexterm>
<indexterm><primary>queue.h</primary><secondary>_GLIBCXX_VOLATILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_VOLATILE&#160;&#160;&#160;volatile</computeroutput></para><para>

<para>Decide whether to declare certain variable volatile in this file. </para>
</para>
</section>
</section>
</section>
