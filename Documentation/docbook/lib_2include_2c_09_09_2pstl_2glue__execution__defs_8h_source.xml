<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2pstl_2glue__execution__defs_8h_source" xml:lang="en-US">
<title>glue_execution_defs.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/glue_execution_defs.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 <emphasis role="comment">//===--&#32;glue_execution_defs.h&#32;---------------------------------------------===//</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
5 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
6 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
9 
10 <emphasis role="preprocessor">#ifndef&#32;_PSTL_GLUE_EXECUTION_DEFS_H</emphasis>
11 <emphasis role="preprocessor">#define&#32;_PSTL_GLUE_EXECUTION_DEFS_H</emphasis>
12 
13 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
14 
15 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2execution__defs_8h">execution_defs.h</link>&quot;</emphasis>
16 
17 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>
18 {
19 <emphasis role="comment">//&#32;Type&#32;trait</emphasis>
20 <emphasis role="keyword">using&#32;</emphasis><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy">__pstl::execution::is_execution_policy</link>;
21 <emphasis role="preprocessor">#if&#32;_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT</emphasis>
22 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;if&#32;__INTEL_COMPILER</emphasis>
23 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
24 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_execution_policy_v&#32;=&#32;is_execution_policy&lt;T&gt;::value;
25 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;else</emphasis>
26 <emphasis role="keyword">using&#32;</emphasis>__pstl::execution::is_execution_policy_v;
27 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;endif</emphasis>
28 <emphasis role="preprocessor">#endif</emphasis>
29 
30 <emphasis role="keyword">namespace&#32;</emphasis>execution
31 {
32 <emphasis role="comment">//&#32;Standard&#32;C++&#32;policy&#32;classes</emphasis>
33 <emphasis role="keyword">using&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy">__pstl::execution::parallel_policy</link>;
34 <emphasis role="keyword">using&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">__pstl::execution::parallel_unsequenced_policy</link>;
35 <emphasis role="keyword">using&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy">__pstl::execution::sequenced_policy</link>;
36 
37 <emphasis role="comment">//&#32;Standard&#32;predefined&#32;policy&#32;instances</emphasis>
38 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace____pstl_1_1execution_1_1v1_1a30b3e8c3a90dbe114ed87cdb02894913">__pstl::execution::par</link>;
39 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace____pstl_1_1execution_1_1v1_1a6403400a4e506673c49db48893280fb7">__pstl::execution::par_unseq</link>;
40 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace____pstl_1_1execution_1_1v1_1a57e9230dd9a0325dea3df4b97422b98d">__pstl::execution::seq</link>;
41 
42 <emphasis role="comment">//&#32;Implementation-defined&#32;names</emphasis>
43 <emphasis role="comment">//&#32;Unsequenced&#32;policy&#32;is&#32;not&#32;yet&#32;standard,&#32;but&#32;for&#32;consistency</emphasis>
44 <emphasis role="comment">//&#32;we&#32;include&#32;it&#32;into&#32;namespace&#32;std::execution&#32;as&#32;well</emphasis>
45 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace____pstl_1_1execution_1_1v1_1a70c8bf16831e799e6d63e813e80cdd0e">__pstl::execution::unseq</link>;
46 <emphasis role="keyword">using&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy">__pstl::execution::unsequenced_policy</link>;
47 }&#32;<emphasis role="comment">//&#32;namespace&#32;execution</emphasis>
48 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
49 
50 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2algorithm__impl_8h">algorithm_impl.h</link>&quot;</emphasis>
51 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2numeric__impl_8h">numeric_impl.h</link>&quot;</emphasis>
52 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2parallel__backend_8h">parallel_backend.h</link>&quot;</emphasis>
53 
54 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_PSTL_GLUE_EXECUTION_DEFS_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
