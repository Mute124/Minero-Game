<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2detail_2func__matrix_8inl_source" xml:lang="en-US">
<title>func_matrix.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/detail/func_matrix.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&quot;../geometric.hpp&quot;</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
3 
4 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
5 <emphasis role="keyword">namespace&#32;</emphasis>detail
6 {
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
8 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_matrixCompMult
9 &#32;&#32;&#32;&#32;{
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;C, R, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__matrix_comp_mult_1a3309ab55dfc4cf9fe19590a29570468f">call</link>(<link linkend="_structglm_1_1mat">mat&lt;C, R, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_structglm_1_1mat">mat&lt;C, R, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;C, R, T, Q&gt;</link>&#32;Result;
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Result.length();&#32;++i)
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[i]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i];
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
17 &#32;&#32;&#32;&#32;};
18 
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose{};
21 
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
23 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;2,&#32;2,&#32;T,&#32;Q,&#32;Aligned&gt;
24 &#32;&#32;&#32;&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_012_00_012_00_01_t_00_01_q_00_01_aligned_01_4_1a826b0e82a7de5ee3ab3ce2d42c57f935">call</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;Result;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
34 &#32;&#32;&#32;&#32;};
35 
36 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
37 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;2,&#32;3,&#32;T,&#32;Q,&#32;Aligned&gt;
38 &#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 2, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_012_00_013_00_01_t_00_01_q_00_01_aligned_01_4_1aef23d013c7e0b8874191f7db8606b21d">call</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3,2, T, Q&gt;</link>&#32;Result;
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;m[0][2];
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;m[1][2];
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
50 &#32;&#32;&#32;&#32;};
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
53 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;2,&#32;4,&#32;T,&#32;Q,&#32;Aligned&gt;
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 2, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_012_00_014_00_01_t_00_01_q_00_01_aligned_01_4_1a98e0e56b53af7e327ad3806abd450255">call</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 2, T, Q&gt;</link>&#32;Result;
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;m[0][2];
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;m[1][2];
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][0]&#32;=&#32;m[0][3];
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][1]&#32;=&#32;m[1][3];
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
68 &#32;&#32;&#32;&#32;};
69 
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;3,&#32;2,&#32;T,&#32;Q,&#32;Aligned&gt;
72 &#32;&#32;&#32;&#32;{
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_013_00_012_00_01_t_00_01_q_00_01_aligned_01_4_1acf7acea4dcc621152dc7c1d2f807f62f">call</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 3, T, Q&gt;</link>&#32;Result;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;m[2][0];
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;m[2][1];
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
84 &#32;&#32;&#32;&#32;};
85 
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;3,&#32;3,&#32;T,&#32;Q,&#32;Aligned&gt;
88 &#32;&#32;&#32;&#32;{
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_013_00_013_00_01_t_00_01_q_00_01_aligned_01_4_1a02255894185b8d8872a10ef25dd0dbe3">call</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;Result;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;m[2][0];
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;m[2][1];
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;m[0][2];
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;m[1][2];
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;m[2][2];
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
105 &#32;&#32;&#32;&#32;};
106 
107 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;3,&#32;4,&#32;T,&#32;Q,&#32;Aligned&gt;
109 &#32;&#32;&#32;&#32;{
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_013_00_014_00_01_t_00_01_q_00_01_aligned_01_4_1aceedaa3752586a42cc0c42468af8b011">call</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;Result;
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;m[2][0];
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;m[2][1];
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;m[0][2];
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;m[1][2];
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;m[2][2];
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][0]&#32;=&#32;m[0][3];
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][1]&#32;=&#32;m[1][3];
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][2]&#32;=&#32;m[2][3];
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
127 &#32;&#32;&#32;&#32;};
128 
129 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;4,&#32;2,&#32;T,&#32;Q,&#32;Aligned&gt;
131 &#32;&#32;&#32;&#32;{
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_014_00_012_00_01_t_00_01_q_00_01_aligned_01_4_1a59670368bd624b4a108c08be5293313c">call</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 4, T, Q&gt;</link>&#32;Result;
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;m[2][0];
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][3]&#32;=&#32;m[3][0];
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;m[2][1];
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][3]&#32;=&#32;m[3][1];
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
145 &#32;&#32;&#32;&#32;};
146 
147 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
148 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;4,&#32;3,&#32;T,&#32;Q,&#32;Aligned&gt;
149 &#32;&#32;&#32;&#32;{
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_014_00_013_00_01_t_00_01_q_00_01_aligned_01_4_1a4a65f7b68298e862653f958da601b70a">call</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 4, T, Q&gt;</link>&#32;Result;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;m[2][0];
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][3]&#32;=&#32;m[3][0];
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;m[2][1];
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][3]&#32;=&#32;m[3][1];
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;m[0][2];
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;m[1][2];
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;m[2][2];
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][3]&#32;=&#32;m[3][2];
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
167 &#32;&#32;&#32;&#32;};
168 
169 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
170 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_transpose&lt;4,&#32;4,&#32;T,&#32;Q,&#32;Aligned&gt;
171 &#32;&#32;&#32;&#32;{
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__transpose_3_014_00_014_00_01_t_00_01_q_00_01_aligned_01_4_1af11f79171116cbe7d08554f6c3525251">call</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Result;
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;m[0][0];
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;m[1][0];
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;m[2][0];
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][3]&#32;=&#32;m[3][0];
179 
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;m[0][1];
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;m[1][1];
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;m[2][1];
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][3]&#32;=&#32;m[3][1];
184 
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;m[0][2];
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;m[1][2];
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;m[2][2];
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][3]&#32;=&#32;m[3][2];
189 
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][0]&#32;=&#32;m[0][3];
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][1]&#32;=&#32;m[1][3];
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][2]&#32;=&#32;m[2][3];
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3][3]&#32;=&#32;m[3][3];
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
196 &#32;&#32;&#32;&#32;};
197 
198 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
199 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_determinant{};
200 
201 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
202 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_determinant&lt;2,&#32;2,&#32;T,&#32;Q,&#32;Aligned&gt;
203 &#32;&#32;&#32;&#32;{
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;T&#32;<link linkend="_structglm_1_1detail_1_1compute__determinant_3_012_00_012_00_01_t_00_01_q_00_01_aligned_01_4_1a850cf8b2da3cde11c2b1c3c972927d6d">call</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m[0][0]&#32;*&#32;m[1][1]&#32;-&#32;m[1][0]&#32;*&#32;m[0][1];
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
208 &#32;&#32;&#32;&#32;};
209 
210 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
211 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_determinant&lt;3,&#32;3,&#32;T,&#32;Q,&#32;Aligned&gt;
212 &#32;&#32;&#32;&#32;{
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;T&#32;<link linkend="_structglm_1_1detail_1_1compute__determinant_3_013_00_013_00_01_t_00_01_q_00_01_aligned_01_4_1a768a144449ee7bbf69cdefe9896f1ceb">call</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;*&#32;(m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[1][2])
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[1][0]&#32;*&#32;(m[0][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[0][2])
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[2][0]&#32;*&#32;(m[0][1]&#32;*&#32;m[1][2]&#32;-&#32;m[1][1]&#32;*&#32;m[0][2]);
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
220 &#32;&#32;&#32;&#32;};
221 
222 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
223 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_determinant&lt;4,&#32;4,&#32;T,&#32;Q,&#32;Aligned&gt;
224 &#32;&#32;&#32;&#32;{
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;T&#32;<link linkend="_structglm_1_1detail_1_1compute__determinant_3_014_00_014_00_01_t_00_01_q_00_01_aligned_01_4_1aa3ac8758c4b0477657d8df5061017f2e">call</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor00&#32;=&#32;m[2][2]&#32;*&#32;m[3][3]&#32;-&#32;m[3][2]&#32;*&#32;m[2][3];
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor01&#32;=&#32;m[2][1]&#32;*&#32;m[3][3]&#32;-&#32;m[3][1]&#32;*&#32;m[2][3];
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor02&#32;=&#32;m[2][1]&#32;*&#32;m[3][2]&#32;-&#32;m[3][1]&#32;*&#32;m[2][2];
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor03&#32;=&#32;m[2][0]&#32;*&#32;m[3][3]&#32;-&#32;m[3][0]&#32;*&#32;m[2][3];
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor04&#32;=&#32;m[2][0]&#32;*&#32;m[3][2]&#32;-&#32;m[3][0]&#32;*&#32;m[2][2];
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor05&#32;=&#32;m[2][0]&#32;*&#32;m[3][1]&#32;-&#32;m[3][0]&#32;*&#32;m[2][1];
233 
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;DetCof(
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(m[1][1]&#32;*&#32;SubFactor00&#32;-&#32;m[1][2]&#32;*&#32;SubFactor01&#32;+&#32;m[1][3]&#32;*&#32;SubFactor02),
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(m[1][0]&#32;*&#32;SubFactor00&#32;-&#32;m[1][2]&#32;*&#32;SubFactor03&#32;+&#32;m[1][3]&#32;*&#32;SubFactor04),
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(m[1][0]&#32;*&#32;SubFactor01&#32;-&#32;m[1][1]&#32;*&#32;SubFactor03&#32;+&#32;m[1][3]&#32;*&#32;SubFactor05),
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(m[1][0]&#32;*&#32;SubFactor02&#32;-&#32;m[1][1]&#32;*&#32;SubFactor04&#32;+&#32;m[1][2]&#32;*&#32;SubFactor05));
239 
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;DetCof[0]&#32;+&#32;m[0][1]&#32;*&#32;DetCof[1]&#32;+
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][2]&#32;*&#32;DetCof[2]&#32;+&#32;m[0][3]&#32;*&#32;DetCof[3];
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
244 &#32;&#32;&#32;&#32;};
245 
246 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
247 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_inverse{};
248 
249 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
250 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_inverse&lt;2,&#32;2,&#32;T,&#32;Q,&#32;Aligned&gt;
251 &#32;&#32;&#32;&#32;{
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__inverse_3_012_00_012_00_01_t_00_01_q_00_01_aligned_01_4_1a23ae20313bfc50028f75f3f08136a683">call</link>(<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;OneOverDeterminant&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;(
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;*&#32;m[1][1]
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[1][0]&#32;*&#32;m[0][1]);
257 
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;2, 2, T, Q&gt;</link>&#32;Inverse(
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[1][1]&#32;*&#32;OneOverDeterminant,
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[0][1]&#32;*&#32;OneOverDeterminant,
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[1][0]&#32;*&#32;OneOverDeterminant,
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;*&#32;OneOverDeterminant);
263 
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Inverse;
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
266 &#32;&#32;&#32;&#32;};
267 
268 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
269 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_inverse&lt;3,&#32;3,&#32;T,&#32;Q,&#32;Aligned&gt;
270 &#32;&#32;&#32;&#32;{
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__inverse_3_013_00_013_00_01_t_00_01_q_00_01_aligned_01_4_1a32eae3c7f1b3435408a85c5459cd8f66">call</link>(<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;OneOverDeterminant&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;(
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;*&#32;(m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[1][2])
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[1][0]&#32;*&#32;(m[0][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[0][2])
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[2][0]&#32;*&#32;(m[0][1]&#32;*&#32;m[1][2]&#32;-&#32;m[1][1]&#32;*&#32;m[0][2]));
277 
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;3, 3, T, Q&gt;</link>&#32;Inverse;
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][0]&#32;=&#32;+&#32;(m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[1][2])&#32;*&#32;OneOverDeterminant;
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][0]&#32;=&#32;-&#32;(m[1][0]&#32;*&#32;m[2][2]&#32;-&#32;m[2][0]&#32;*&#32;m[1][2])&#32;*&#32;OneOverDeterminant;
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][0]&#32;=&#32;+&#32;(m[1][0]&#32;*&#32;m[2][1]&#32;-&#32;m[2][0]&#32;*&#32;m[1][1])&#32;*&#32;OneOverDeterminant;
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][1]&#32;=&#32;-&#32;(m[0][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[0][2])&#32;*&#32;OneOverDeterminant;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][1]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;m[2][2]&#32;-&#32;m[2][0]&#32;*&#32;m[0][2])&#32;*&#32;OneOverDeterminant;
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][1]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;m[2][1]&#32;-&#32;m[2][0]&#32;*&#32;m[0][1])&#32;*&#32;OneOverDeterminant;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][2]&#32;=&#32;+&#32;(m[0][1]&#32;*&#32;m[1][2]&#32;-&#32;m[1][1]&#32;*&#32;m[0][2])&#32;*&#32;OneOverDeterminant;
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][2]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;m[1][2]&#32;-&#32;m[1][0]&#32;*&#32;m[0][2])&#32;*&#32;OneOverDeterminant;
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][2]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;m[1][1]&#32;-&#32;m[1][0]&#32;*&#32;m[0][1])&#32;*&#32;OneOverDeterminant;
288 
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Inverse;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
291 &#32;&#32;&#32;&#32;};
292 
293 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
294 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_inverse&lt;4,&#32;4,&#32;T,&#32;Q,&#32;Aligned&gt;
295 &#32;&#32;&#32;&#32;{
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__inverse_3_014_00_014_00_01_t_00_01_q_00_01_aligned_01_4_1a5dbeb9d7210e13dea79d309c8509a121">call</link>(<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef00&#32;=&#32;m[2][2]&#32;*&#32;m[3][3]&#32;-&#32;m[3][2]&#32;*&#32;m[2][3];
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef02&#32;=&#32;m[1][2]&#32;*&#32;m[3][3]&#32;-&#32;m[3][2]&#32;*&#32;m[1][3];
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef03&#32;=&#32;m[1][2]&#32;*&#32;m[2][3]&#32;-&#32;m[2][2]&#32;*&#32;m[1][3];
301 
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef04&#32;=&#32;m[2][1]&#32;*&#32;m[3][3]&#32;-&#32;m[3][1]&#32;*&#32;m[2][3];
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef06&#32;=&#32;m[1][1]&#32;*&#32;m[3][3]&#32;-&#32;m[3][1]&#32;*&#32;m[1][3];
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef07&#32;=&#32;m[1][1]&#32;*&#32;m[2][3]&#32;-&#32;m[2][1]&#32;*&#32;m[1][3];
305 
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef08&#32;=&#32;m[2][1]&#32;*&#32;m[3][2]&#32;-&#32;m[3][1]&#32;*&#32;m[2][2];
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef10&#32;=&#32;m[1][1]&#32;*&#32;m[3][2]&#32;-&#32;m[3][1]&#32;*&#32;m[1][2];
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef11&#32;=&#32;m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[1][2];
309 
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef12&#32;=&#32;m[2][0]&#32;*&#32;m[3][3]&#32;-&#32;m[3][0]&#32;*&#32;m[2][3];
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef14&#32;=&#32;m[1][0]&#32;*&#32;m[3][3]&#32;-&#32;m[3][0]&#32;*&#32;m[1][3];
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef15&#32;=&#32;m[1][0]&#32;*&#32;m[2][3]&#32;-&#32;m[2][0]&#32;*&#32;m[1][3];
313 
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef16&#32;=&#32;m[2][0]&#32;*&#32;m[3][2]&#32;-&#32;m[3][0]&#32;*&#32;m[2][2];
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef18&#32;=&#32;m[1][0]&#32;*&#32;m[3][2]&#32;-&#32;m[3][0]&#32;*&#32;m[1][2];
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef19&#32;=&#32;m[1][0]&#32;*&#32;m[2][2]&#32;-&#32;m[2][0]&#32;*&#32;m[1][2];
317 
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef20&#32;=&#32;m[2][0]&#32;*&#32;m[3][1]&#32;-&#32;m[3][0]&#32;*&#32;m[2][1];
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef22&#32;=&#32;m[1][0]&#32;*&#32;m[3][1]&#32;-&#32;m[3][0]&#32;*&#32;m[1][1];
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Coef23&#32;=&#32;m[1][0]&#32;*&#32;m[2][1]&#32;-&#32;m[2][0]&#32;*&#32;m[1][1];
321 
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Fac0(Coef00,&#32;Coef00,&#32;Coef02,&#32;Coef03);
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Fac1(Coef04,&#32;Coef04,&#32;Coef06,&#32;Coef07);
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Fac2(Coef08,&#32;Coef08,&#32;Coef10,&#32;Coef11);
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Fac3(Coef12,&#32;Coef12,&#32;Coef14,&#32;Coef15);
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Fac4(Coef16,&#32;Coef16,&#32;Coef18,&#32;Coef19);
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Fac5(Coef20,&#32;Coef20,&#32;Coef22,&#32;Coef23);
328 
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Vec0(m[1][0],&#32;m[0][0],&#32;m[0][0],&#32;m[0][0]);
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Vec1(m[1][1],&#32;m[0][1],&#32;m[0][1],&#32;m[0][1]);
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Vec2(m[1][2],&#32;m[0][2],&#32;m[0][2],&#32;m[0][2]);
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Vec3(m[1][3],&#32;m[0][3],&#32;m[0][3],&#32;m[0][3]);
333 
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Inv0(Vec1&#32;*&#32;Fac0&#32;-&#32;Vec2&#32;*&#32;Fac1&#32;+&#32;Vec3&#32;*&#32;Fac2);
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Inv1(Vec0&#32;*&#32;Fac0&#32;-&#32;Vec2&#32;*&#32;Fac3&#32;+&#32;Vec3&#32;*&#32;Fac4);
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Inv2(Vec0&#32;*&#32;Fac1&#32;-&#32;Vec1&#32;*&#32;Fac3&#32;+&#32;Vec3&#32;*&#32;Fac5);
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Inv3(Vec0&#32;*&#32;Fac2&#32;-&#32;Vec1&#32;*&#32;Fac4&#32;+&#32;Vec2&#32;*&#32;Fac5);
338 
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;SignA(+1,&#32;-1,&#32;+1,&#32;-1);
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;SignB(-1,&#32;+1,&#32;-1,&#32;+1);
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Inverse(Inv0&#32;*&#32;SignA,&#32;Inv1&#32;*&#32;SignB,&#32;Inv2&#32;*&#32;SignA,&#32;Inv3&#32;*&#32;SignB);
342 
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Row0(Inverse[0][0],&#32;Inverse[1][0],&#32;Inverse[2][0],&#32;Inverse[3][0]);
344 
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;Dot0(m[0]&#32;*&#32;Row0);
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Dot1&#32;=&#32;(Dot0.x&#32;+&#32;Dot0.y)&#32;+&#32;(Dot0.z&#32;+&#32;Dot0.w);
347 
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;OneOverDeterminant&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;Dot1;
349 
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Inverse&#32;*&#32;OneOverDeterminant;
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
352 &#32;&#32;&#32;&#32;};
353 }<emphasis role="comment">//namespace&#32;detail</emphasis>
354 
355 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
356 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e">matrixCompMult</link>(mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
357 &#32;&#32;&#32;&#32;{
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;&apos;matrixCompMult&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_matrixCompMult&lt;C,&#32;R,&#32;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
360 &#32;&#32;&#32;&#32;}
361 
362 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;DA,&#32;length_t&#32;DB,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
363 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;detail::outerProduct_trait&lt;DA,&#32;DB,&#32;T,&#32;Q&gt;::type&#32;<link linkend="_namespaceglm_1a6f7199140605e146e4f573b72e619187">outerProduct</link>(vec&lt;DA,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;c,&#32;vec&lt;DB,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)
364 &#32;&#32;&#32;&#32;{
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;&apos;outerProduct&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
366 
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;detail::outerProduct_trait&lt;DA,&#32;DB,&#32;T,&#32;Q&gt;::type&#32;m;
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m.length();&#32;++i)
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[i]&#32;=&#32;c&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>[i];
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
371 &#32;&#32;&#32;&#32;}
372 
373 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
374 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;::transpose_type&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1abddae8e27995e1aa57df4d93edd33803">transpose</link>(mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
375 &#32;&#32;&#32;&#32;{
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;&apos;transpose&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_transpose&lt;C,&#32;R,&#32;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(m);
378 &#32;&#32;&#32;&#32;}
379 
380 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
381 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;T&#32;<link linkend="_group__core__func__matrix_1gad7928795124768e058f99dce270f5c8d">determinant</link>(mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
382 &#32;&#32;&#32;&#32;{
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;&apos;determinant&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_determinant&lt;C,&#32;R,&#32;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(m);
385 &#32;&#32;&#32;&#32;}
386 
387 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;C,&#32;length_t&#32;R,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
388 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(mat&lt;C,&#32;R,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
389 &#32;&#32;&#32;&#32;{
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_iec559&#32;||&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1adfb40fae63c98b85b15b63c8e42970b8">GLM_CONFIG_UNRESTRICTED_GENTYPE</link>,&#32;<emphasis role="stringliteral">&quot;&apos;inverse&apos;&#32;only&#32;accept&#32;floating-point&#32;inputs&quot;</emphasis>);
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_inverse&lt;C,&#32;R,&#32;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(m);
392 &#32;&#32;&#32;&#32;}
393 }<emphasis role="comment">//namespace&#32;glm</emphasis>
394 
395 <emphasis role="preprocessor">#if&#32;GLM_CONFIG_SIMD&#32;==&#32;GLM_ENABLE</emphasis>
396 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&quot;func_matrix_simd.inl&quot;</emphasis>
397 <emphasis role="preprocessor">#endif</emphasis>
398 
</programlisting></section>
