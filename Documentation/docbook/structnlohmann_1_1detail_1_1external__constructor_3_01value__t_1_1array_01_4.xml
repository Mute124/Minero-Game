<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4" xml:lang="en-US">
<title>nlohmann::detail::external_constructor&lt; value_t::array &gt; Struct Reference</title>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename BasicJsonType &gt; </para><para>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1abfb2a6eec0bc21e8a7438546aebc55d8">construct</link> (BasicJsonType &amp;j, const typename BasicJsonType::array_t &amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType &gt; </para><para>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a50474d6624957a630a1d398cac1e7bfa">construct</link> (BasicJsonType &amp;j, typename BasicJsonType::array_t &amp;&amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType , typename CompatibleArrayType , <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; !std::is_same&lt; CompatibleArrayType, typename BasicJsonType::array_t &gt;<link linkend="_classvalue">::value</link>, int &gt;  = 0&gt; </para><para>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a110f50fd5378da876d9a6d6a8d945e37">construct</link> (BasicJsonType &amp;j, const CompatibleArrayType &amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType &gt; </para><para>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a4ebb19b1cb84b4cb224a4c5322e16f14">construct</link> (BasicJsonType &amp;j, const std::vector&lt; <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &gt; &amp;arr)</para>
</listitem>
            <listitem><para>template&lt;typename BasicJsonType , typename T , <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_convertible&lt; T, BasicJsonType &gt;<link linkend="_classvalue">::value</link>, int &gt;  = 0&gt; </para><para>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a1b9226304e6492141080b4ebf228ddac">construct</link> (BasicJsonType &amp;j, const std::valarray&lt; T &gt; &amp;arr)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a110f50fd5378da876d9a6d6a8d945e37"/><section>
    <title>construct()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename CompatibleArrayType , <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; !std::is_same&lt; CompatibleArrayType, typename BasicJsonType::array_t &gt;<link linkend="_classvalue">::value</link>, int &gt;  = 0&gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const CompatibleArrayType &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a1b9226304e6492141080b4ebf228ddac"/><section>
    <title>construct()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename T , <link linkend="_namespacenlohmann_1_1detail_1a02bcbc878bee413f25b985ada771aa9c">enable_if_t</link>&lt; std::is_convertible&lt; T, BasicJsonType &gt;<link linkend="_classvalue">::value</link>, int &gt;  = 0&gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const std::valarray&lt; T &gt; &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_a1b9226304e6492141080b4ebf228ddac_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a4ebb19b1cb84b4cb224a4c5322e16f14"/><section>
    <title>construct()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const std::vector&lt; <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &gt; &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1abfb2a6eec0bc21e8a7438546aebc55d8"/><section>
    <title>construct()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, const typename BasicJsonType::array_t &amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_1a50474d6624957a630a1d398cac1e7bfa"/><section>
    <title>construct()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>construct</primary><secondary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::detail::external_constructor&lt; value_t::array &gt;</primary><secondary>construct</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType &gt; </computeroutput><para><computeroutput>static <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor</link>&lt; <link linkend="_namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">value_t::array</link> &gt;::construct (BasicJsonType &amp; j, typename BasicJsonType::array_t &amp;&amp; arr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4_a50474d6624957a630a1d398cac1e7bfa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_json_8hpp">json.hpp</link></section>
</section>
