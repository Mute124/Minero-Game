<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__ext__scalar__common" xml:lang="en-US">
<title>GLM_EXT_scalar_common</title>
<indexterm><primary>GLM_EXT_scalar_common</primary></indexterm>
Collaboration diagram for GLM_EXT_scalar_common:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga420b37cbd98c395b93dab0278305cd46">glm::min</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T c)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga0d24a9acb8178df77e4aff90cbb2010d">glm::min</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T c, T d)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1gaa20839d9ab14514f8966f69877ea0de8">glm::max</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T c)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga2274b5e75ed84b0b1e50d8d22f1f2f67">glm::max</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T c, T d)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga7b2b438a765e2a62098c79eb212f28f0">glm::fmin</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga1a95fe4cf5437e8133f1093fe9726a64">glm::fmin</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T c)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga3d6f9c6c16bfd6f38f2c4f8076e8b661">glm::fmin</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T c, T d)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga36920478565cf608e93064283ce06421">glm::fmax</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga0007bba71ca451ac70e99d28dfbeaab9">glm::fmax</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T <link linkend="_group__ext__scalar__common_1ga27e260b1ff4d04c3ad4b864d26cbaf08">glm::fmax</link> (T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, T <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>, T D)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType <link linkend="_group__ext__scalar__common_1ga1e28539d3a46965ed9ef92ec7cb3b18a">glm::fclamp</link> (genType <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, genType minVal, genType maxVal)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType <link linkend="_group__ext__scalar__common_1ga6c0cc6bd1d67ea1008d2592e998bad33">glm::clamp</link> (genType const &amp;Texcoord)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType <link linkend="_group__ext__scalar__common_1ga809650c6310ea7c42666e918c117fb6f">glm::repeat</link> (genType const &amp;Texcoord)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType <link linkend="_group__ext__scalar__common_1gaa6856a0a048d2749252848da35e10c8b">glm::mirrorClamp</link> (genType const &amp;Texcoord)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType <link linkend="_group__ext__scalar__common_1ga16a89b0661b60d5bea85137bbae74d73">glm::mirrorRepeat</link> (genType const &amp;Texcoord)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Exposes min and max functions for 3 to 4 scalar parameters.</para>

<para>Include &lt;glm/ext/scalar_common.hpp&gt; to use the features of this extension.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__core__func__common">Common functions</link> </para>

<para><link linkend="_group__ext__vector__common">GLM_EXT_vector_common</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__ext__scalar__common_1ga6c0cc6bd1d67ea1008d2592e998bad33"/><section>
    <title>clamp()</title>
<indexterm><primary>clamp</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>clamp</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType glm::clamp (genType const &amp; Texcoord)</computeroutput></para>
<para>Simulate GL_CLAMP OpenGL wrap mode</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genType</entry><entry>
<para>Floating-point scalar types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> extension. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga6c0cc6bd1d67ea1008d2592e998bad33_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga1e28539d3a46965ed9ef92ec7cb3b18a"/><section>
    <title>fclamp()</title>
<indexterm><primary>fclamp</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fclamp</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType glm::fclamp (genType x, genType minVal, genType maxVal)</computeroutput></para>
<para>Returns min(max(x, minVal), maxVal) for each component in x. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genType</entry><entry>
<para>Floating-point scalar types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga36920478565cf608e93064283ce06421"/><section>
    <title>fmax()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>fmax</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fmax</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::fmax (T a, T b)</computeroutput></para>
<para>Returns the maximum component-wise values of 2 inputs. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://en.cppreference.com/w/cpp/numeric/math/fmax">std::fmax documentation</link> </para>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga36920478565cf608e93064283ce06421_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga0007bba71ca451ac70e99d28dfbeaab9"/><section>
    <title>fmax()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>fmax</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fmax</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::fmax (T a, T b, T C)</computeroutput></para>
<para>Returns the maximum component-wise values of 3 inputs. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://en.cppreference.com/w/cpp/numeric/math/fmax">std::fmax documentation</link> </para>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga0007bba71ca451ac70e99d28dfbeaab9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga27e260b1ff4d04c3ad4b864d26cbaf08"/><section>
    <title>fmax()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>fmax</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fmax</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::fmax (T a, T b, T C, T D)</computeroutput></para>
<para>Returns the maximum component-wise values of 4 inputs. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://en.cppreference.com/w/cpp/numeric/math/fmax">std::fmax documentation</link> </para>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga27e260b1ff4d04c3ad4b864d26cbaf08_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga7b2b438a765e2a62098c79eb212f28f0"/><section>
    <title>fmin()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>fmin</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fmin</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::fmin (T a, T b)</computeroutput></para>
<para>Returns the minimum component-wise values of 2 inputs. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://en.cppreference.com/w/cpp/numeric/math/fmin">std::fmin documentation</link> </para>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga7b2b438a765e2a62098c79eb212f28f0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga1a95fe4cf5437e8133f1093fe9726a64"/><section>
    <title>fmin()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>fmin</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fmin</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::fmin (T a, T b, T c)</computeroutput></para>
<para>Returns the minimum component-wise values of 3 inputs. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://en.cppreference.com/w/cpp/numeric/math/fmin">std::fmin documentation</link> </para>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga1a95fe4cf5437e8133f1093fe9726a64_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga3d6f9c6c16bfd6f38f2c4f8076e8b661"/><section>
    <title>fmin()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>fmin</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>fmin</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::fmin (T a, T b, T c, T d)</computeroutput></para>
<para>Returns the minimum component-wise values of 4 inputs. If one of the two arguments is NaN, the value of the other argument is returned.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="http://en.cppreference.com/w/cpp/numeric/math/fmin">std::fmin documentation</link> </para>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga3d6f9c6c16bfd6f38f2c4f8076e8b661_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1gaa20839d9ab14514f8966f69877ea0de8"/><section>
    <title>max()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>max</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>max</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::max (T a, T b, T c)</computeroutput></para>
<para>Returns the maximum component-wise values of 3 inputs</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_gaa20839d9ab14514f8966f69877ea0de8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga2274b5e75ed84b0b1e50d8d22f1f2f67"/><section>
    <title>max()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>max</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>max</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::max (T a, T b, T c, T d)</computeroutput></para>
<para>Returns the maximum component-wise values of 4 inputs</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga2274b5e75ed84b0b1e50d8d22f1f2f67_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga420b37cbd98c395b93dab0278305cd46"/><section>
    <title>min()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>min</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>min</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::min (T a, T b, T c)</computeroutput></para>
<para>Returns the minimum component-wise values of 3 inputs</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga420b37cbd98c395b93dab0278305cd46_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga0d24a9acb8178df77e4aff90cbb2010d"/><section>
    <title>min()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>min</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>min</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> T glm::min (T a, T b, T c, T d)</computeroutput></para>
<para>Returns the minimum component-wise values of 4 inputs</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga0d24a9acb8178df77e4aff90cbb2010d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1gaa6856a0a048d2749252848da35e10c8b"/><section>
    <title>mirrorClamp()</title>
<indexterm><primary>mirrorClamp</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>mirrorClamp</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType glm::mirrorClamp (genType const &amp; Texcoord)</computeroutput></para>
<para>Simulate GL_MIRRORED_REPEAT OpenGL wrap mode</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genType</entry><entry>
<para>Floating-point scalar types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> extension. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_gaa6856a0a048d2749252848da35e10c8b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_gaa6856a0a048d2749252848da35e10c8b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga16a89b0661b60d5bea85137bbae74d73"/><section>
    <title>mirrorRepeat()</title>
<indexterm><primary>mirrorRepeat</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>mirrorRepeat</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType glm::mirrorRepeat (genType const &amp; Texcoord)</computeroutput></para>
<para>Simulate GL_MIRROR_REPEAT OpenGL wrap mode</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genType</entry><entry>
<para>Floating-point scalar types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> extension. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga16a89b0661b60d5bea85137bbae74d73_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga16a89b0661b60d5bea85137bbae74d73_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__scalar__common_1ga809650c6310ea7c42666e918c117fb6f"/><section>
    <title>repeat()</title>
<indexterm><primary>repeat</primary><secondary>GLM_EXT_scalar_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_scalar_common</primary><secondary>repeat</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genType glm::repeat (genType const &amp; Texcoord)</computeroutput></para>
<para>Simulate GL_REPEAT OpenGL wrap mode</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>genType</entry><entry>
<para>Floating-point scalar types.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> extension. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga809650c6310ea7c42666e918c117fb6f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__scalar__common_ga809650c6310ea7c42666e918c117fb6f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
