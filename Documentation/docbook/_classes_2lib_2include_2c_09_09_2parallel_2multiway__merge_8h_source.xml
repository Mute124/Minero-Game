<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_source" xml:lang="en-US">
<title>multiway_merge.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/multiway_merge.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
37 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler&#32;and&#32;Manuel&#32;Holtgrewe.</emphasis>
38 
39 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H</emphasis>
40 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H</emphasis>
41 
42 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algo.h&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;parallel/features.h&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;parallel/parallel.h&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;parallel/losertree.h&gt;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;parallel/multiseq_selection.h&gt;</emphasis>
49 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
50 <emphasis role="preprocessor">#include&#32;&lt;parallel/checkers.h&gt;</emphasis>
51 <emphasis role="preprocessor">#endif</emphasis>
52 
54 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_LENGTH(__s)&#32;((__s).second&#32;-&#32;(__s).first)</emphasis>
55 
56 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
57 {
58 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter2,&#32;<emphasis role="keyword">typename</emphasis>&#32;_OutputIterator,
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
60 &#32;&#32;&#32;&#32;_OutputIterator
61 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a0059cd13cc6ab70692f8309ad92cb548">__merge_advance</link>(_RAIter1&amp;,&#32;_RAIter1,&#32;_RAIter2&amp;,&#32;_RAIter2,
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_OutputIterator,&#32;_DifferenceTp,&#32;_Compare);
63 
72 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___guarded_iterator">_GuardedIterator</link>
74 &#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
77 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;_M_current;
78 
80 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;_M_end;
81 
83 &#32;&#32;&#32;&#32;&#32;&#32;_Compare&amp;&#32;__comp;
84 
85 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
91 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator_1ae5f70394d5c15f471216c6483d846b1c">_GuardedIterator</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,&#32;_Compare&amp;&#32;__comp)
92 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_current(__begin),&#32;_M_end(__end),&#32;__comp(__comp)
93 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
94 
97 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator">_GuardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;
98 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator_1aefb83b31e44fcec1cd5d1d67afa655b5">operator++</link>()
99 &#32;&#32;&#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;++_M_current;
101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
102 &#32;&#32;&#32;&#32;&#32;&#32;}
103 
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;::value_type&amp;
107 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator_1ae84ba2402d72c4f44b43be3ed0233b0a">operator*</link>()<emphasis role="keyword">&#32;const</emphasis>
108 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*_M_current;&#32;}
109 
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;_RAIter()<emphasis role="keyword">&#32;const</emphasis>
113 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_current;&#32;}
114 
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
120 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator_1add45fe71fffb29eec52f41491314ba80">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator">_GuardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi1,
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator">_GuardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi2)
122 &#32;&#32;&#32;&#32;&#32;&#32;{
123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__bi1._M_current&#32;==&#32;__bi1._M_end)&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__bi1&#32;is&#32;sup</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__bi2._M_current&#32;==&#32;__bi2._M_end;&#32;&#32;<emphasis role="comment">//&#32;__bi2&#32;is&#32;not&#32;sup</emphasis>
125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__bi2._M_current&#32;==&#32;__bi2._M_end)&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__bi2&#32;is&#32;sup</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__bi1.__comp)(*__bi1,&#32;*__bi2);&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;normal&#32;compare</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;}
129 
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator_1a378e624544fa9de7390e16a82f3aa2f9">operator&lt;=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator">_GuardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi1,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___guarded_iterator">_GuardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi2)
137 &#32;&#32;&#32;&#32;&#32;&#32;{
138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__bi2._M_current&#32;==&#32;__bi2._M_end)&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__bi1&#32;is&#32;sup</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__bi1._M_current&#32;!=&#32;__bi1._M_end;&#32;&#32;<emphasis role="comment">//&#32;__bi2&#32;is&#32;not&#32;sup</emphasis>
140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__bi1._M_current&#32;==&#32;__bi1._M_end)&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__bi2&#32;is&#32;sup</emphasis>
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(__bi1.__comp)(*__bi2,&#32;*__bi1);&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;normal&#32;compare</emphasis>
143 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;
144 &#32;&#32;&#32;&#32;};
145 
146 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
147 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>
148 &#32;&#32;&#32;&#32;{
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
151 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;_M_current;
153 &#32;&#32;&#32;&#32;&#32;&#32;_Compare&amp;&#32;__comp;
154 
155 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
160 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c">_UnguardedIterator</link>(_RAIter&#32;__begin,
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;<emphasis role="comment">/*&#32;__end&#32;*/</emphasis>,&#32;_Compare&amp;&#32;__comp)
162 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_current(__begin),&#32;__comp(__comp)
163 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
164 
167 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;
168 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287">operator++</link>()
169 &#32;&#32;&#32;&#32;&#32;&#32;{
170 &#32;&#32;&#32;&#32;++_M_current;
171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
172 &#32;&#32;&#32;&#32;&#32;&#32;}
173 
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;::value_type&amp;
177 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32">operator*</link>()<emphasis role="keyword">&#32;const</emphasis>
178 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*_M_current;&#32;}
179 
182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;_RAIter()<emphasis role="keyword">&#32;const</emphasis>
183 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_current;&#32;}
184 
189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
190 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi1,
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi2)
192 &#32;&#32;&#32;&#32;&#32;&#32;{
193 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normal&#32;compare.</emphasis>
194 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__bi1.__comp)(*__bi1,&#32;*__bi2);
195 &#32;&#32;&#32;&#32;&#32;&#32;}
196 
201 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982">operator&lt;=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi1,
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator&lt;_RAIter, _Compare&gt;</link>&amp;&#32;__bi2)
204 &#32;&#32;&#32;&#32;&#32;&#32;{
205 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normal&#32;compare.</emphasis>
206 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(__bi1.__comp)(*__bi2,&#32;*__bi1);
207 &#32;&#32;&#32;&#32;&#32;&#32;}
208 &#32;&#32;&#32;&#32;};
209 
235 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAI,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Cp&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>iterator,
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
240 &#32;&#32;&#32;&#32;_RAIter3
241 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a7ee9d79b73a6f85ae97e472312ba411e">multiway_merge_3_variant</link>(_RAIterIterator&#32;__seqs_begin,
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
245 &#32;&#32;&#32;&#32;{
246 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length);
247 
248 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
251 &#32;&#32;&#32;&#32;::value_type::first_type
252 &#32;&#32;&#32;&#32;_RAIter1;
253 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
254 &#32;&#32;&#32;&#32;_ValueType;
255 
256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__length&#32;==&#32;0)
257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
258 
259 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
260 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__orig_length&#32;=&#32;__length;
261 <emphasis role="preprocessor">#endif</emphasis>
262 
263 &#32;&#32;&#32;&#32;&#32;&#32;iterator&lt;_RAIter1,&#32;_Compare&gt;
264 &#32;&#32;&#32;&#32;__seq0(__seqs_begin[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[0].second,&#32;__comp),
265 &#32;&#32;&#32;&#32;__seq1(__seqs_begin[1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[1].second,&#32;__comp),
266 &#32;&#32;&#32;&#32;__seq2(__seqs_begin[2].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[2].second,&#32;__comp);
267 
268 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq0&#32;&lt;=&#32;__seq1)
269 &#32;&#32;&#32;&#32;{
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq1&#32;&lt;=&#32;__seq2)
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s012;
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq2&#32;&lt;&#32;&#32;__seq0)
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s201;
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s021;
277 &#32;&#32;&#32;&#32;}
278 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
279 &#32;&#32;&#32;&#32;{
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq1&#32;&lt;=&#32;__seq2)
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq0&#32;&lt;=&#32;__seq2)
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s102;
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s120;
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;__s210;
289 &#32;&#32;&#32;&#32;}
290 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_MERGE_3_CASE(__a,&#32;__b,&#32;__c,&#32;__c0,&#32;__c1)&#32;\</emphasis>
291 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
292 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;*__target&#32;=&#32;*__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
293 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;++__target;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
294 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;--__length;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
295 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;++__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
296 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__length&#32;==&#32;0)&#32;goto&#32;__finish;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
297 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c0&#32;__seq&#32;##&#32;__b)&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c;&#32;\</emphasis>
298 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c1&#32;__seq&#32;##&#32;__c)&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__a&#32;##&#32;__c;&#32;\</emphasis>
299 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__a;</emphasis>
300 
301 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(0,&#32;1,&#32;2,&#32;&lt;=,&#32;&lt;=);
302 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(1,&#32;2,&#32;0,&#32;&lt;=,&#32;&lt;&#32;);
303 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(2,&#32;0,&#32;1,&#32;&lt;&#32;,&#32;&lt;&#32;);
304 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(1,&#32;0,&#32;2,&#32;&lt;&#32;,&#32;&lt;=);
305 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(0,&#32;2,&#32;1,&#32;&lt;=,&#32;&lt;=);
306 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a26e0cd0d18c4a7d12f3824dc1c9126e2">_GLIBCXX_PARALLEL_MERGE_3_CASE</link>(2,&#32;1,&#32;0,&#32;&lt;&#32;,&#32;&lt;&#32;);
307 
308 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_PARALLEL_MERGE_3_CASE</emphasis>
309 
310 &#32;&#32;&#32;&#32;__finish:
311 &#32;&#32;&#32;&#32;&#32;&#32;;
312 
313 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
314 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(
315 &#32;&#32;&#32;&#32;((_RAIter1)__seq0&#32;-&#32;__seqs_begin[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;+
316 &#32;&#32;&#32;&#32;((_RAIter1)__seq1&#32;-&#32;__seqs_begin[1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;+
317 &#32;&#32;&#32;&#32;((_RAIter1)__seq2&#32;-&#32;__seqs_begin[2].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)
318 &#32;&#32;&#32;&#32;==&#32;__orig_length);
319 <emphasis role="preprocessor">#endif</emphasis>
320 
321 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[0].first&#32;=&#32;__seq0;
322 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[1].first&#32;=&#32;__seq1;
323 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[2].first&#32;=&#32;__seq2;
324 
325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
326 &#32;&#32;&#32;&#32;}
327 
354 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAI,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Cp&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>iterator,
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
359 &#32;&#32;&#32;&#32;_RAIter3
360 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ac4af8f9977aa36823357bce35be6c946">multiway_merge_4_variant</link>(_RAIterIterator&#32;__seqs_begin,
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
364 &#32;&#32;&#32;&#32;{
365 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length);
366 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
367 
368 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
369 &#32;&#32;&#32;&#32;::value_type::first_type
370 &#32;&#32;&#32;&#32;_RAIter1;
371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
372 &#32;&#32;&#32;&#32;_ValueType;
373 
374 &#32;&#32;&#32;&#32;&#32;&#32;iterator&lt;_RAIter1,&#32;_Compare&gt;
375 &#32;&#32;&#32;&#32;__seq0(__seqs_begin[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[0].second,&#32;__comp),
376 &#32;&#32;&#32;&#32;__seq1(__seqs_begin[1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[1].second,&#32;__comp),
377 &#32;&#32;&#32;&#32;__seq2(__seqs_begin[2].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[2].second,&#32;__comp),
378 &#32;&#32;&#32;&#32;__seq3(__seqs_begin[3].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[3].second,&#32;__comp);
379 
380 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_DECISION(__a,&#32;__b,&#32;__c,&#32;__d)&#32;{&#32;&#32;\</emphasis>
381 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__d&#32;&lt;&#32;__seq&#32;##&#32;__a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
382 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__d&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
383 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__d&#32;&lt;&#32;__seq&#32;##&#32;__b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
384 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__d&#32;##&#32;__b&#32;##&#32;__c;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
385 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__d&#32;&lt;&#32;__seq&#32;##&#32;__c)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
386 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__d&#32;##&#32;__c;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
387 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d;&#32;&#32;}</emphasis>
388 
389 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq0&#32;&lt;=&#32;__seq1)
390 &#32;&#32;&#32;&#32;{
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq1&#32;&lt;=&#32;__seq2)
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(0,1,2,3)
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq2&#32;&lt;&#32;__seq0)
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(2,0,1,3)
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(0,2,1,3)
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
399 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
400 &#32;&#32;&#32;&#32;{
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq1&#32;&lt;=&#32;__seq2)
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seq0&#32;&lt;=&#32;__seq2)
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(1,0,2,3)
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(1,2,0,3)
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1affedcc6f03d294b53bfdc8df857754ba">_GLIBCXX_PARALLEL_DECISION</link>(2,1,0,3)
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
411 
412 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_MERGE_4_CASE(__a,&#32;__b,&#32;__c,&#32;__d,&#32;&#32;\</emphasis>
413 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__c0,&#32;__c1,&#32;__c2)&#32;&#32;&#32;&#32;\</emphasis>
414 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
415 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__length&#32;==&#32;0)&#32;goto&#32;__finish;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
416 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;*__target&#32;=&#32;*__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
417 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;++__target;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
418 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;--__length;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
419 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;++__seq&#32;##&#32;__a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
420 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c0&#32;__seq&#32;##&#32;__b)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
421 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__a&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d;&#32;&#32;\</emphasis>
422 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c1&#32;__seq&#32;##&#32;__c)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
423 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__a&#32;##&#32;__c&#32;##&#32;__d;&#32;&#32;\</emphasis>
424 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(__seq&#32;##&#32;__a&#32;__c2&#32;__seq&#32;##&#32;__d)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
425 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__a&#32;##&#32;__d;&#32;&#32;\</emphasis>
426 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;__s&#32;##&#32;__b&#32;##&#32;__c&#32;##&#32;__d&#32;##&#32;__a;</emphasis>
427 
428 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(0,&#32;1,&#32;2,&#32;3,&#32;&lt;=,&#32;&lt;=,&#32;&lt;=);
429 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(0,&#32;1,&#32;3,&#32;2,&#32;&lt;=,&#32;&lt;=,&#32;&lt;=);
430 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(0,&#32;2,&#32;1,&#32;3,&#32;&lt;=,&#32;&lt;=,&#32;&lt;=);
431 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(0,&#32;2,&#32;3,&#32;1,&#32;&lt;=,&#32;&lt;=,&#32;&lt;=);
432 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(0,&#32;3,&#32;1,&#32;2,&#32;&lt;=,&#32;&lt;=,&#32;&lt;=);
433 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(0,&#32;3,&#32;2,&#32;1,&#32;&lt;=,&#32;&lt;=,&#32;&lt;=);
434 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(1,&#32;0,&#32;2,&#32;3,&#32;&lt;&#32;,&#32;&lt;=,&#32;&lt;=);
435 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(1,&#32;0,&#32;3,&#32;2,&#32;&lt;&#32;,&#32;&lt;=,&#32;&lt;=);
436 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(1,&#32;2,&#32;0,&#32;3,&#32;&lt;=,&#32;&lt;&#32;,&#32;&lt;=);
437 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(1,&#32;2,&#32;3,&#32;0,&#32;&lt;=,&#32;&lt;=,&#32;&lt;&#32;);
438 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(1,&#32;3,&#32;0,&#32;2,&#32;&lt;=,&#32;&lt;&#32;,&#32;&lt;=);
439 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(1,&#32;3,&#32;2,&#32;0,&#32;&lt;=,&#32;&lt;=,&#32;&lt;&#32;);
440 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(2,&#32;0,&#32;1,&#32;3,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;=);
441 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(2,&#32;0,&#32;3,&#32;1,&#32;&lt;&#32;,&#32;&lt;=,&#32;&lt;&#32;);
442 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(2,&#32;1,&#32;0,&#32;3,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;=);
443 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(2,&#32;1,&#32;3,&#32;0,&#32;&lt;&#32;,&#32;&lt;=,&#32;&lt;&#32;);
444 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(2,&#32;3,&#32;0,&#32;1,&#32;&lt;=,&#32;&lt;&#32;,&#32;&lt;&#32;);
445 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(2,&#32;3,&#32;1,&#32;0,&#32;&lt;=,&#32;&lt;&#32;,&#32;&lt;&#32;);
446 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(3,&#32;0,&#32;1,&#32;2,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;&#32;);
447 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(3,&#32;0,&#32;2,&#32;1,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;&#32;);
448 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(3,&#32;1,&#32;0,&#32;2,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;&#32;);
449 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(3,&#32;1,&#32;2,&#32;0,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;&#32;);
450 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(3,&#32;2,&#32;0,&#32;1,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;&#32;);
451 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1adf30b910ece749d99a7d174511f0b6f6">_GLIBCXX_PARALLEL_MERGE_4_CASE</link>(3,&#32;2,&#32;1,&#32;0,&#32;&lt;&#32;,&#32;&lt;&#32;,&#32;&lt;&#32;);
452 
453 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_PARALLEL_MERGE_4_CASE</emphasis>
454 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_PARALLEL_DECISION</emphasis>
455 
456 &#32;&#32;&#32;&#32;__finish:
457 &#32;&#32;&#32;&#32;&#32;&#32;;
458 
459 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[0].first&#32;=&#32;__seq0;
460 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[1].first&#32;=&#32;__seq1;
461 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[2].first&#32;=&#32;__seq2;
462 &#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[3].first&#32;=&#32;__seq3;
463 
464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
465 &#32;&#32;&#32;&#32;}
466 
485 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_LT,
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
490 &#32;&#32;&#32;&#32;_RAIter3
491 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a150b06a4da2cf1cff673d1b6242c27fa">multiway_merge_loser_tree</link>(_RAIterIterator&#32;__seqs_begin,
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
495 &#32;&#32;&#32;&#32;{
496 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length)
497 
498 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
500 &#32;&#32;&#32;&#32;::difference_type&#32;_SeqNumber;
501 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
502 &#32;&#32;&#32;&#32;::value_type::first_type
503 &#32;&#32;&#32;&#32;_RAIter1;
504 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
505 &#32;&#32;&#32;&#32;_ValueType;
506 
507 &#32;&#32;&#32;&#32;&#32;&#32;_SeqNumber&#32;__k&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_SeqNumber<emphasis role="keyword">&gt;</emphasis>(__seqs_end&#32;-&#32;__seqs_begin);
508 
509 &#32;&#32;&#32;&#32;&#32;&#32;_LT&#32;__lt(__k,&#32;__comp);
510 
511 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Default&#32;value&#32;for&#32;potentially&#32;non-default-constructible&#32;types.</emphasis>
512 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType*&#32;__arbitrary_element&#32;=&#32;0;
513 
514 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__t&#32;=&#32;0;&#32;__t&#32;&lt;&#32;__k;&#32;++__t)
515 &#32;&#32;&#32;&#32;{
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!__arbitrary_element
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(__seqs_begin[__t])&#32;&gt;&#32;0)
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__arbitrary_element&#32;=&#32;&amp;(*__seqs_begin[__t].first);
519 &#32;&#32;&#32;&#32;}
520 
521 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__t&#32;=&#32;0;&#32;__t&#32;&lt;&#32;__k;&#32;++__t)
522 &#32;&#32;&#32;&#32;{
523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin[__t].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;==&#32;__seqs_begin[__t].second)
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lt.__insert_start(*__arbitrary_element,&#32;__t,&#32;<emphasis role="keyword">true</emphasis>);
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lt.__insert_start(*__seqs_begin[__t].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__t,&#32;<emphasis role="keyword">false</emphasis>);
527 &#32;&#32;&#32;&#32;}
528 
529 &#32;&#32;&#32;&#32;&#32;&#32;__lt.__init();
530 
531 &#32;&#32;&#32;&#32;&#32;&#32;_SeqNumber&#32;__source;
532 
533 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;__length;&#32;++__i)
534 &#32;&#32;&#32;&#32;{
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//take&#32;out</emphasis>
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__source&#32;=&#32;__lt.__get_min_source();
537 
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__target++)&#32;=&#32;*(__seqs_begin[__source].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>++);
539 
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Feed.</emphasis>
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin[__source].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;==&#32;__seqs_begin[__source].second)
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lt.__delete_min_insert(*__arbitrary_element,&#32;<emphasis role="keyword">true</emphasis>);
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Replace&#32;from&#32;same&#32;__source.</emphasis>
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lt.__delete_min_insert(*__seqs_begin[__source].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;<emphasis role="keyword">false</emphasis>);
546 &#32;&#32;&#32;&#32;}
547 
548 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
549 &#32;&#32;&#32;&#32;}
550 
569 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_LT,
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
573 &#32;&#32;&#32;&#32;_RAIter3
574 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a3ffd0c9da50da6118291d38f95d44b52">multiway_merge_loser_tree_unguarded</link>(_RAIterIterator&#32;__seqs_begin,
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;
578 &#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&gt;::value_type::first_type&gt;::value_type&amp;
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sentinel,
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp)
582 &#32;&#32;&#32;&#32;{
583 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length)
584 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
585 
586 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
587 &#32;&#32;&#32;&#32;::difference_type&#32;_SeqNumber;
588 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
589 &#32;&#32;&#32;&#32;::value_type::first_type
590 &#32;&#32;&#32;&#32;_RAIter1;
591 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
592 &#32;&#32;&#32;&#32;_ValueType;
593 
594 &#32;&#32;&#32;&#32;&#32;&#32;_SeqNumber&#32;__k&#32;=&#32;__seqs_end&#32;-&#32;__seqs_begin;
595 
596 &#32;&#32;&#32;&#32;&#32;&#32;_LT&#32;__lt(__k,&#32;__sentinel,&#32;__comp);
597 
598 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__t&#32;=&#32;0;&#32;__t&#32;&lt;&#32;__k;&#32;++__t)
599 &#32;&#32;&#32;&#32;{
600 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__seqs_begin[__t].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;__seqs_begin[__t].second);
603 <emphasis role="preprocessor">#endif</emphasis>
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lt.__insert_start(*__seqs_begin[__t].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__t,&#32;<emphasis role="keyword">false</emphasis>);
605 &#32;&#32;&#32;&#32;}
606 
607 &#32;&#32;&#32;&#32;&#32;&#32;__lt.__init();
608 
609 &#32;&#32;&#32;&#32;&#32;&#32;_SeqNumber&#32;__source;
610 
611 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
612 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__i&#32;=&#32;0;
613 <emphasis role="preprocessor">#endif</emphasis>
614 
615 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target_end&#32;=&#32;__target&#32;+&#32;__length;
616 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__target&#32;&lt;&#32;__target_end)
617 &#32;&#32;&#32;&#32;{
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Take&#32;out.</emphasis>
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__source&#32;=&#32;__lt.__get_min_source();
620 
621 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(0&#32;&lt;=&#32;__source&#32;&amp;&amp;&#32;__source&#32;&lt;&#32;__k);
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__i&#32;==&#32;0
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;!__comp(*(__seqs_begin[__source].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>),&#32;*(__target&#32;-&#32;1)));
625 <emphasis role="preprocessor">#endif</emphasis>
626 
627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Feed.</emphasis>
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__target++)&#32;=&#32;*(__seqs_begin[__source].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>++);
629 
630 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__i;
632 <emphasis role="preprocessor">#endif</emphasis>
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Replace&#32;from&#32;same&#32;__source.</emphasis>
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lt.__delete_min_insert(*__seqs_begin[__source].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;<emphasis role="keyword">false</emphasis>);
635 &#32;&#32;&#32;&#32;}
636 
637 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
638 &#32;&#32;&#32;&#32;}
639 
640 
656 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_UnguardedLoserTree,
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
661 &#32;&#32;&#32;&#32;_RAIter3
662 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a686704fa4da0a4fdbc6800fe46048366">multiway_merge_loser_tree_sentinel</link>(_RAIterIterator&#32;__seqs_begin,
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
665 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;
666 &#32;&#32;&#32;&#32;_RAIterIterator&gt;::value_type::first_type&gt;::value_type&amp;
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sentinel,
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp)
670 &#32;&#32;&#32;&#32;{
671 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length)
672 
673 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
674 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;&#32;_TraitsType;
675 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
676 &#32;&#32;&#32;&#32;::value_type::first_type
677 &#32;&#32;&#32;&#32;_RAIter1;
678 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
679 &#32;&#32;&#32;&#32;_ValueType;
680 
681 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target_end;
682 
683 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_RAIterIterator&#32;__s&#32;=&#32;__seqs_begin;&#32;__s&#32;!=&#32;__seqs_end;&#32;++__s)
684 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;the&#32;sequence&#32;ends&#32;to&#32;the&#32;sentinel.&#32;&#32;This&#32;has&#32;the</emphasis>
685 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;effect&#32;that&#32;the&#32;sentinel&#32;appears&#32;to&#32;be&#32;within&#32;the&#32;sequence.&#32;Then,</emphasis>
686 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;can&#32;use&#32;the&#32;unguarded&#32;variant&#32;if&#32;we&#32;merge&#32;out&#32;as&#32;many</emphasis>
687 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;non-sentinel&#32;elements&#32;as&#32;we&#32;have.</emphasis>
688 &#32;&#32;&#32;&#32;++((*__s).second);
689 
690 &#32;&#32;&#32;&#32;&#32;&#32;__target_end&#32;=&#32;multiway_merge_loser_tree_unguarded&lt;_UnguardedLoserTree&gt;
691 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__sentinel,&#32;__length,&#32;__comp);
692 
693 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
694 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__target_end&#32;==&#32;__target&#32;+&#32;__length);
695 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(<link linkend="_namespace____gnu__parallel_1a34e76513fa46ae5c7bc8c45677289112">__is_sorted</link>(__target,&#32;__target_end,&#32;__comp));
696 <emphasis role="preprocessor">#endif</emphasis>
697 
698 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Restore&#32;the&#32;sequence&#32;ends&#32;so&#32;the&#32;sentinels&#32;are&#32;not&#32;contained&#32;in&#32;the</emphasis>
699 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sequence&#32;any&#32;more&#32;(see&#32;comment&#32;in&#32;loop&#32;above).</emphasis>
700 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_RAIterIterator&#32;__s&#32;=&#32;__seqs_begin;&#32;__s&#32;!=&#32;__seqs_end;&#32;++__s)
701 &#32;&#32;&#32;&#32;--((*__s).second);
702 
703 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target_end;
704 &#32;&#32;&#32;&#32;}
705 
730 &#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
731 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1___loser_tree_traits">_LoserTreeTraits</link>
732 &#32;&#32;&#32;&#32;{
739 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_traits_1aba55ef01ca41c6ab1ece199d76604e2d">_M_use_pointer</link>&#32;=&#32;(<emphasis role="keyword">sizeof</emphasis>(_Tp)&#32;&gt;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(_Tp*));
740 &#32;&#32;&#32;&#32;};
741 
747 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__sentinels&#32;<emphasis role="comment">/*default&#32;==&#32;false*/</emphasis>,
748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
752 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch">__multiway_merge_3_variant_sentinel_switch</link>
753 &#32;&#32;&#32;&#32;{
754 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3
755 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch_1aeeab7537788b4d7ec3d9037975ab2380">operator()</link>(_RAIterIterator&#32;__seqs_begin,
756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
759 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;multiway_merge_3_variant&lt;_GuardedIterator&gt;
760 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);&#32;}
761 &#32;&#32;&#32;&#32;};
762 
768 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
772 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch">__multiway_merge_3_variant_sentinel_switch</link>&lt;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>,&#32;_RAIterIterator,
773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3,&#32;_DifferenceTp,
774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&gt;
775 &#32;&#32;&#32;&#32;{
776 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3
777 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch_3_01true_00_01___r_ac490d6391875988d944af0889050584_1a607b117e33666f87952b1843b1fed9f5">operator()</link>(_RAIterIterator&#32;__seqs_begin,
778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
781 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;multiway_merge_3_variant&lt;_UnguardedIterator&gt;
782 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);&#32;}
783 &#32;&#32;&#32;&#32;};
784 
790 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__sentinels&#32;<emphasis role="comment">/*default&#32;==&#32;false*/</emphasis>,
791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
795 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch">__multiway_merge_4_variant_sentinel_switch</link>
796 &#32;&#32;&#32;&#32;{
797 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3
798 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch_1a625b2c0240338fe22402a4b65050ef95">operator()</link>(_RAIterIterator&#32;__seqs_begin,
799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
802 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;multiway_merge_4_variant&lt;_GuardedIterator&gt;
803 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);&#32;}
804 &#32;&#32;&#32;&#32;};
805 
811 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
815 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch">__multiway_merge_4_variant_sentinel_switch</link>&lt;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>,&#32;_RAIterIterator,
816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3,&#32;_DifferenceTp,
817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&gt;
818 &#32;&#32;&#32;&#32;{
819 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3
820 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch_3_01true_00_01___r_29263920f3b19b06bcc0641dbe166144_1a0c0fff4ec33b85bb550c643c87ee838e">operator()</link>(_RAIterIterator&#32;__seqs_begin,
821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
824 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;multiway_merge_4_variant&lt;_UnguardedIterator&gt;
825 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);&#32;}
826 &#32;&#32;&#32;&#32;};
827 
831 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__sentinels,
832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,
833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
837 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch">__multiway_merge_k_variant_sentinel_switch</link>
838 &#32;&#32;&#32;&#32;{
839 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3
840 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch_1aafce13f5586014cc8ce515e662777e78">operator()</link>(_RAIterIterator&#32;__seqs_begin,
841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
843 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;
844 &#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&gt;::value_type::first_type&gt;::value_type&amp;
845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sentinel,
846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
847 &#32;&#32;&#32;&#32;&#32;&#32;{
848 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
849 &#32;&#32;&#32;&#32;&#32;&#32;::value_type::first_type
850 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter1;
851 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
852 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType;
853 
854 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a686704fa4da0a4fdbc6800fe46048366">multiway_merge_loser_tree_sentinel</link>&lt;
855 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__conditional_type&lt;
856 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_traits">_LoserTreeTraits&lt;_ValueType&gt;::_M_use_pointer</link>,
857 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded">_LoserTreePointerUnguarded&lt;__stable, _ValueType, _Compare&gt;</link>,
858 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded">_LoserTreeUnguarded&lt;__stable, _ValueType, _Compare&gt;</link>
859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;::__type&gt;
860 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__sentinel,&#32;__length,&#32;__comp);
861 &#32;&#32;&#32;&#32;&#32;&#32;}
862 &#32;&#32;&#32;&#32;};
863 
867 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,
868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
872 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch">__multiway_merge_k_variant_sentinel_switch</link>&lt;<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>,&#32;__stable,
873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator,
874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3,&#32;_DifferenceTp,
875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&gt;
876 &#32;&#32;&#32;&#32;{
877 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3
878 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch_3_01false_00_01____93150e0a1bf1e3fb3017cac94cf50485_1a80d94ff0b4c1102dd94663d8b2dd9445">operator()</link>(_RAIterIterator&#32;__seqs_begin,
879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;
882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&gt;::value_type::first_type&gt;::value_type&amp;
883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sentinel,
884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
885 &#32;&#32;&#32;&#32;&#32;&#32;{
886 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
887 &#32;&#32;&#32;&#32;&#32;&#32;::value_type::first_type
888 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter1;
889 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
890 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType;
891 
892 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a150b06a4da2cf1cff673d1b6242c27fa">multiway_merge_loser_tree</link>&lt;
893 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;__gnu_cxx::__conditional_type&lt;
894 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___loser_tree_traits">_LoserTreeTraits&lt;_ValueType&gt;::_M_use_pointer</link>,
895 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer">_LoserTreePointer&lt;__stable, _ValueType, _Compare&gt;</link>,
896 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree&lt;__stable, _ValueType, _Compare&gt;</link>
897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;::__type&#32;&gt;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);
898 &#32;&#32;&#32;&#32;&#32;&#32;}
899 &#32;&#32;&#32;&#32;};
900 
913 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sentinels,
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
919 &#32;&#32;&#32;&#32;_RAIter3
920 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>(_RAIterIterator&#32;__seqs_begin,
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
923 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;
924 &#32;&#32;&#32;&#32;_RAIterIterator&gt;::value_type::first_type&gt;::value_type&amp;
925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sentinel,
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp)
927 &#32;&#32;&#32;&#32;{
928 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length)
929 
930 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
931 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
932 &#32;&#32;&#32;&#32;::difference_type&#32;_SeqNumber;
933 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
934 &#32;&#32;&#32;&#32;::value_type::first_type
935 &#32;&#32;&#32;&#32;_RAIter1;
936 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
937 &#32;&#32;&#32;&#32;_ValueType;
938 
939 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
940 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_RAIterIterator&#32;__s&#32;=&#32;__seqs_begin;&#32;__s&#32;!=&#32;__seqs_end;&#32;++__s)
941 &#32;&#32;&#32;&#32;{
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(<link linkend="_namespace____gnu__parallel_1a34e76513fa46ae5c7bc8c45677289112">__is_sorted</link>((*__s).first,
943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*__s).second,&#32;__comp));
944 &#32;&#32;&#32;&#32;}
945 <emphasis role="preprocessor">#endif</emphasis>
946 
947 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__total_length&#32;=&#32;0;
948 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_RAIterIterator&#32;__s&#32;=&#32;__seqs_begin;&#32;__s&#32;!=&#32;__seqs_end;&#32;++__s)
949 &#32;&#32;&#32;&#32;__total_length&#32;+=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(*__s);
950 
951 &#32;&#32;&#32;&#32;&#32;&#32;__length&#32;=&#32;std::min&lt;_DifferenceTp&gt;(__length,&#32;__total_length);
952 
953 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(__length&#32;==&#32;0)
954 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
955 
956 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__return_target&#32;=&#32;__target;
957 &#32;&#32;&#32;&#32;&#32;&#32;_SeqNumber&#32;__k&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_SeqNumber<emphasis role="keyword">&gt;</emphasis>(__seqs_end&#32;-&#32;__seqs_begin);
958 
959 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(__k)
960 &#32;&#32;&#32;&#32;{
961 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
963 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__return_target&#32;=&#32;<link linkend="_namespacestd_1a4e3366cc5ea1e47fac759952b877ed0d">std::copy</link>(__seqs_begin[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,
965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;+&#32;__length,
966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target);
967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[0].first&#32;+=&#32;__length;
968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
969 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__return_target&#32;=&#32;<link linkend="_namespace____gnu__parallel_1a0059cd13cc6ab70692f8309ad92cb548">__merge_advance</link>(__seqs_begin[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,
971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[0].second,
972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,
973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin[1].second,
974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target,&#32;__length,&#32;__comp);
975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
976 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__return_target&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch">__multiway_merge_3_variant_sentinel_switch</link>
978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;__sentinels,&#32;_RAIterIterator,&#32;_RAIter3,&#32;_DifferenceTp,&#32;_Compare&gt;()
979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);
980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
981 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__return_target&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch">__multiway_merge_4_variant_sentinel_switch</link>
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;__sentinels,&#32;_RAIterIterator,&#32;_RAIter3,&#32;_DifferenceTp,&#32;_Compare&gt;()
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp);
985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
986 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
987 &#32;&#32;&#32;&#32;&#32;&#32;__return_target&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch">__multiway_merge_k_variant_sentinel_switch</link>
988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;__sentinels,&#32;__stable,&#32;_RAIterIterator,&#32;_RAIter3,&#32;_DifferenceTp,
989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&gt;()
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__sentinel,&#32;__length,&#32;__comp);
991 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
992 &#32;&#32;&#32;&#32;}
993 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
994 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(
995 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a34e76513fa46ae5c7bc8c45677289112">__is_sorted</link>(__target,&#32;__target&#32;+&#32;__length,&#32;__comp));
996 <emphasis role="preprocessor">#endif</emphasis>
997 
998 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__return_target;
999 &#32;&#32;&#32;&#32;}
1000 
1006 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,&#32;<emphasis role="keyword">class</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">class</emphasis>&#32;_StrictWeakOrdering&gt;
1007 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1___sampling_sorter">_SamplingSorter</link>
1008 &#32;&#32;&#32;&#32;{
1009 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1010 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___sampling_sorter_1a31984be4c48353b305c072d6fc4f54c7">operator()</link>(_RAIter&#32;__first,&#32;_RAIter&#32;__last,&#32;_StrictWeakOrdering&#32;__comp)
1011 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacestd_1ac4ae475114c7f06297db807234405f8a">__gnu_sequential::stable_sort</link>(__first,&#32;__last,&#32;__comp);&#32;}
1012 &#32;&#32;&#32;&#32;};
1013 
1019 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">class</emphasis>&#32;_StrictWeakOrdering&gt;
1020 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__parallel_1_1___sampling_sorter">_SamplingSorter</link>&lt;<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>,&#32;_RAIter,&#32;_StrictWeakOrdering&gt;
1021 &#32;&#32;&#32;&#32;{
1022 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1023 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___sampling_sorter_3_01false_00_01___r_a_iter_00_01___strict_weak_ordering_01_4_1adb121ae31638c7566662fcceb544df26">operator()</link>(_RAIter&#32;__first,&#32;_RAIter&#32;__last,&#32;_StrictWeakOrdering&#32;__comp)
1024 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacestd_1a73a397864aa701b5bd48fae555f4f935">__gnu_sequential::sort</link>(__first,&#32;__last,&#32;__comp);&#32;}
1025 &#32;&#32;&#32;&#32;};
1026 
1030 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,
1031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
1032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare,
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceType&gt;
1034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1035 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a0e39d3891745fd0e244fb125bf34ce8b">multiway_merge_sampling_splitting</link>(_RAIterIterator&#32;__seqs_begin,
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__length,
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__total_length,
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
1040 &#32;&#32;&#32;&#32;&#32;std::vector&lt;std::pair&lt;_DifferenceType,&#32;_DifferenceType&gt;&#32;&gt;&#32;*__pieces)
1041 &#32;&#32;&#32;&#32;{
1042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
1043 &#32;&#32;&#32;&#32;::difference_type&#32;_SeqNumber;
1044 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
1045 &#32;&#32;&#32;&#32;::value_type::first_type
1046 &#32;&#32;&#32;&#32;_RAIter1;
1047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type
1048 &#32;&#32;&#32;&#32;_ValueType;
1049 
1050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__k&#32;sequences.</emphasis>
1051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_SeqNumber&#32;__k
1052 &#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_SeqNumber<emphasis role="keyword">&gt;</emphasis>(__seqs_end&#32;-&#32;__seqs_begin);
1053 
1054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__num_threads&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ac42ead04531fd33507e3d3a6f648b200">omp_get_num_threads</link>();
1055 
1056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_DifferenceType&#32;__num_samples&#32;=
1057 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().<link linkend="_struct____gnu__parallel_1_1___settings_1a14ded8ea54764e899f1d24ef1fe12b19">merge_oversampling</link>&#32;*&#32;__num_threads;
1058 
1059 &#32;&#32;&#32;&#32;&#32;&#32;_ValueType*&#32;__samples&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_ValueType*<emphasis role="keyword">&gt;</emphasis>
1060 &#32;&#32;&#32;&#32;(::operator&#32;<emphasis role="keyword">new</emphasis>(<emphasis role="keyword">sizeof</emphasis>(_ValueType)&#32;*&#32;__k&#32;*&#32;__num_samples));
1061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sample.</emphasis>
1062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__s&#32;=&#32;0;&#32;__s&#32;&lt;&#32;__k;&#32;++__s)
1063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;__num_samples;&#32;++__i)
1064 &#32;&#32;&#32;&#32;&#32;&#32;{
1065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;sample_index&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>
1066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(__seqs_begin[__s])
1067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;(double(__i&#32;+&#32;1)&#32;/&#32;(__num_samples&#32;+&#32;1))
1068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;(double(__length)&#32;/&#32;__total_length));
1069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>(&amp;(__samples[__s&#32;*&#32;__num_samples&#32;+&#32;__i]))
1070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType(__seqs_begin[__s].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>[sample_index]);
1071 &#32;&#32;&#32;&#32;&#32;&#32;}
1072 
1073 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sort&#32;stable&#32;or&#32;non-stable,&#32;depending&#32;on&#32;value&#32;of&#32;template&#32;parameter</emphasis>
1074 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;__stable&quot;.</emphasis>
1075 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___sampling_sorter">_SamplingSorter&lt;__stable, _ValueType*, _Compare&gt;</link>()
1076 &#32;&#32;&#32;&#32;(__samples,&#32;__samples&#32;+&#32;(__num_samples&#32;*&#32;__k),&#32;__comp);
1077 
1078 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__slab&#32;=&#32;0;&#32;__slab&#32;&lt;&#32;__num_threads;&#32;++__slab)
1079 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;each&#32;slab&#32;/&#32;processor.</emphasis>
1080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__seq&#32;=&#32;0;&#32;__seq&#32;&lt;&#32;__k;&#32;++__seq)
1081 &#32;&#32;&#32;&#32;&#32;&#32;{
1082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;each&#32;sequence.</emphasis>
1083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__slab&#32;&gt;&#32;0)
1084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].first&#32;=&#32;std::upper_bound
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin[__seq].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[__seq].second,
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__samples[__num_samples&#32;*&#32;__k&#32;*&#32;__slab&#32;/&#32;__num_threads],
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__comp)
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;__seqs_begin[__seq].first;
1089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Absolute&#32;beginning.</emphasis>
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].first&#32;=&#32;0;
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__slab&#32;+&#32;1)&#32;&lt;&#32;__num_threads)
1093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].second&#32;=&#32;std::upper_bound
1094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin[__seq].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,&#32;__seqs_begin[__seq].second,
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__samples[__num_samples&#32;*&#32;__k&#32;*&#32;(__slab&#32;+&#32;1)&#32;/&#32;__num_threads],
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__comp)
1097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;__seqs_begin[__seq].first;
1098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Absolute&#32;end.</emphasis>
1100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].second&#32;=
1101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(__seqs_begin[__seq]);
1102 &#32;&#32;&#32;&#32;&#32;&#32;}
1103 
1104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__s&#32;=&#32;0;&#32;__s&#32;&lt;&#32;__k;&#32;++__s)
1105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;__num_samples;&#32;++__i)
1106 &#32;&#32;&#32;&#32;&#32;&#32;__samples[__s&#32;*&#32;__num_samples&#32;+&#32;__i].~_ValueType();
1107 &#32;&#32;&#32;&#32;&#32;&#32;::operator&#32;<emphasis role="keyword">delete</emphasis>(__samples);
1108 &#32;&#32;&#32;&#32;}
1109 
1115 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,
1116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
1117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare,
1118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceType&gt;
1119 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1120 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>(_RAIterIterator&#32;__seqs_begin,
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__length,
1123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__total_length,
1124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
1125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::pair&lt;_DifferenceType,&#32;_DifferenceType&gt;&#32;&gt;&#32;*__pieces)
1126 &#32;&#32;&#32;&#32;{
1127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
1128 &#32;&#32;&#32;&#32;::difference_type&#32;_SeqNumber;
1129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
1130 &#32;&#32;&#32;&#32;::value_type::first_type
1131 &#32;&#32;&#32;&#32;_RAIter1;
1132 
1133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__tight&#32;=&#32;(__total_length&#32;==&#32;__length);
1134 
1135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__k&#32;sequences.</emphasis>
1136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_SeqNumber&#32;__k&#32;=&#32;__seqs_end&#32;-&#32;__seqs_begin;
1137 
1138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__num_threads&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ac42ead04531fd33507e3d3a6f648b200">omp_get_num_threads</link>();
1139 
1140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(Settings::multiway_merge_splitting</emphasis>
1141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;==&#32;__gnu_parallel::_Settings::EXACT).</emphasis>
1142 &#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;_RAIter1&gt;*&#32;__offsets&#32;=&#32;
1143 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;std::vector&lt;_RAIter1&gt;[__num_threads];
1144 &#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::pair&lt;_RAIter1,&#32;_RAIter1&gt;&#32;&gt;&#32;__se(__k);
1145 
1146 &#32;&#32;&#32;&#32;&#32;&#32;copy(__seqs_begin,&#32;__seqs_end,&#32;__se.begin());
1147 
1148 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType*&#32;__borders&#32;=
1149 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;_DifferenceType[__num_threads&#32;+&#32;1];
1150 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ac799255921e70b0378d145924d673f9c">__equally_split</link>(__length,&#32;__num_threads,&#32;__borders);
1151 
1152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__s&#32;=&#32;0;&#32;__s&#32;&lt;&#32;(__num_threads&#32;-&#32;1);&#32;++__s)
1153 &#32;&#32;&#32;&#32;{
1154 &#32;&#32;&#32;&#32;&#32;&#32;__offsets[__s].resize(__k);
1155 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ade1f4c5da0794c4f1a09465d4aee6c1d">multiseq_partition</link>(__se.begin(),&#32;__se.end(),&#32;__borders[__s&#32;+&#32;1],
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__offsets[__s].begin(),&#32;__comp);
1157 
1158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Last&#32;one&#32;also&#32;needed&#32;and&#32;available.</emphasis>
1159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__tight)
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__offsets[__num_threads&#32;-&#32;1].resize(__k);
1162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ade1f4c5da0794c4f1a09465d4aee6c1d">multiseq_partition</link>(__se.begin(),&#32;__se.end(),
1163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType(__length),
1164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__offsets[__num_threads&#32;-&#32;1].begin(),
1165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__comp);
1166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1167 &#32;&#32;&#32;&#32;}
1168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__borders;
1169 
1170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__slab&#32;=&#32;0;&#32;__slab&#32;&lt;&#32;__num_threads;&#32;++__slab)
1171 &#32;&#32;&#32;&#32;{
1172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;each&#32;slab&#32;/&#32;processor.</emphasis>
1173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__seq&#32;=&#32;0;&#32;__seq&#32;&lt;&#32;__k;&#32;++__seq)
1174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;each&#32;sequence.</emphasis>
1176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__slab&#32;==&#32;0)
1177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Absolute&#32;beginning.</emphasis>
1179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].first&#32;=&#32;0;
1180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].first&#32;=
1183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab&#32;-&#32;1][__seq].second;
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__tight&#32;||&#32;__slab&#32;&lt;&#32;(__num_threads&#32;-&#32;1))
1185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].second&#32;=
1186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__offsets[__slab][__seq]&#32;-&#32;__seqs_begin[__seq].first;
1187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__slab&#32;==&#32;__num_threads&#32;-&#32;1</emphasis>
1190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__slab][__seq].second&#32;=
1191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(__seqs_begin[__seq]);
1192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1194 &#32;&#32;&#32;&#32;}
1195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__offsets;
1196 &#32;&#32;&#32;&#32;}
1197 
1217 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">bool</emphasis>&#32;__stable,
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__sentinels,
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterIterator,
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIter3,
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Splitter,
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1224 &#32;&#32;&#32;&#32;_RAIter3
1225 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>(_RAIterIterator&#32;__seqs_begin,
1226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterIterator&#32;__seqs_end,
1227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter3&#32;__target,
1228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Splitter&#32;__splitter,
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__num_threads)
1232 &#32;&#32;&#32;&#32;&#32;&#32;{
1233 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
1234 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1);
1235 <emphasis role="preprocessor">#endif</emphasis>
1236 
1237 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__length)
1238 
1239 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
1241 &#32;&#32;&#32;&#32;&#32;&#32;::difference_type&#32;_SeqNumber;
1242 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterIterator&gt;
1243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type::first_type
1244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter1;
1245 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>
1246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iterator_traits&lt;_RAIter1&gt;::value_type&#32;_ValueType;
1247 
1248 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Leave&#32;only&#32;non-empty&#32;sequences.</emphasis>
1249 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::pair&lt;_RAIter1,&#32;_RAIter1&gt;&#32;seq_type;
1250 &#32;&#32;&#32;&#32;seq_type*&#32;__ne_seqs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;seq_type[__seqs_end&#32;-&#32;__seqs_begin];
1251 &#32;&#32;&#32;&#32;_SeqNumber&#32;__k&#32;=&#32;0;
1252 &#32;&#32;&#32;&#32;_DifferenceType&#32;__total_length&#32;=&#32;0;
1253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_RAIterIterator&#32;__raii&#32;=&#32;__seqs_begin;
1254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__raii&#32;!=&#32;__seqs_end;&#32;++__raii)
1255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__seq_length&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(*__raii);
1257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(__seq_length&#32;&gt;&#32;0)
1258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__total_length&#32;+=&#32;__seq_length;
1260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ne_seqs[__k++]&#32;=&#32;*__raii;
1261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1263 
1264 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__total_length)
1265 
1266 &#32;&#32;&#32;&#32;__length&#32;=&#32;std::min&lt;_DifferenceTp&gt;(__length,&#32;__total_length);
1267 
1268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__total_length&#32;==&#32;0&#32;||&#32;__k&#32;==&#32;0)
1269 &#32;&#32;&#32;&#32;&#32;&#32;{
1270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__ne_seqs;
1271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1272 &#32;&#32;&#32;&#32;&#32;&#32;}
1273 
1274 &#32;&#32;&#32;&#32;std::vector&lt;std::pair&lt;_DifferenceType,&#32;_DifferenceType&gt;&#32;&gt;*&#32;__pieces;
1275 
1276 &#32;&#32;&#32;&#32;__num_threads&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link><emphasis role="keyword">&gt;</emphasis>
1277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(std::min&lt;_DifferenceType&gt;(__num_threads,&#32;__total_length));
1278 
1279 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;parallel&#32;num_threads&#32;(__num_threads)</emphasis>
1280 &#32;&#32;&#32;&#32;{
1281 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;single</emphasis>
1282 &#32;&#32;&#32;&#32;&#32;&#32;{
1283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__num_threads&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ac42ead04531fd33507e3d3a6f648b200">omp_get_num_threads</link>();
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Thread&#32;__t&#32;will&#32;have&#32;to&#32;merge&#32;pieces[__iam][0..__k&#32;-&#32;1]</emphasis>
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;std::vector&lt;
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::pair&lt;_DifferenceType,&#32;_DifferenceType&gt;&#32;&gt;[__num_threads];
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__s&#32;=&#32;0;&#32;__s&#32;&lt;&#32;__num_threads;&#32;++__s)
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pieces[__s].resize(__k);
1289 
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__num_samples&#32;=
1291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().<link linkend="_struct____gnu__parallel_1_1___settings_1a14ded8ea54764e899f1d24ef1fe12b19">merge_oversampling</link>
1292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;__num_threads;
1293 
1294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__splitter(__ne_seqs,&#32;__ne_seqs&#32;+&#32;__k,&#32;__length,&#32;__total_length,
1295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__comp,&#32;__pieces);
1296 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//single</emphasis>
1297 
1298 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__iam&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1aa03cf372d8266eef024262a68d304e1b">omp_get_thread_num</link>();
1299 
1300 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__target_position&#32;=&#32;0;
1301 
1302 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__c&#32;=&#32;0;&#32;__c&#32;&lt;&#32;__k;&#32;++__c)
1303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target_position&#32;+=&#32;__pieces[__iam][__c].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>;
1304 
1305 &#32;&#32;&#32;&#32;&#32;&#32;seq_type*&#32;__chunks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;seq_type[__k];
1306 
1307 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_SeqNumber&#32;__s&#32;=&#32;0;&#32;__s&#32;&lt;&#32;__k;&#32;++__s)
1308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__chunks[__s]&#32;=&#32;std::make_pair(__ne_seqs[__s].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>
1309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__pieces[__iam][__s].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>,
1310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ne_seqs[__s].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>
1311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__pieces[__iam][__s].second);
1312 
1313 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(__length&#32;&gt;&#32;__target_position)
1314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__sequential_multiway_merge&lt;__stable,&#32;__sentinels&gt;
1315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__chunks,&#32;__chunks&#32;+&#32;__k,&#32;__target&#32;+&#32;__target_position,
1316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length&#32;-&#32;__target_position,&#32;__comp);
1317 
1318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__chunks;
1319 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;parallel</emphasis>
1320 
1321 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
1322 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(
1323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a34e76513fa46ae5c7bc8c45677289112">__is_sorted</link>(__target,&#32;__target&#32;+&#32;__length,&#32;__comp));
1324 <emphasis role="preprocessor">#endif</emphasis>
1325 
1326 &#32;&#32;&#32;&#32;__k&#32;=&#32;0;
1327 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;ends&#32;of&#32;sequences.</emphasis>
1328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_RAIterIterator&#32;__raii&#32;=&#32;__seqs_begin;
1329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__raii&#32;!=&#32;__seqs_end;&#32;++__raii)
1330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h_1a2693f6e2ecfb03bdb564ca578f60b085">_GLIBCXX_PARALLEL_LENGTH</link>(*__raii);
1332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(__length&#32;&gt;&#32;0)
1333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*__raii).first&#32;+=&#32;__pieces[__num_threads&#32;-&#32;1][__k++].second;
1334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1335 
1336 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__pieces;
1337 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__ne_seqs;
1338 
1339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target&#32;+&#32;__length;
1340 &#32;&#32;&#32;&#32;&#32;&#32;}
1341 
1411 &#32;&#32;<emphasis role="comment">//&#32;multiway_merge</emphasis>
1412 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1413 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1417 &#32;&#32;&#32;&#32;_RAIterOut
1418 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)
1423 &#32;&#32;&#32;&#32;{
1424 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1425 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1426 
1427 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1428 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1429 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1430 
1431 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;multiway&#32;merge&#32;*sequentially*.</emphasis>
1432 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1433 &#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1434 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1435 &#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1436 &#32;&#32;&#32;&#32;}
1437 
1438 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1439 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1443 &#32;&#32;&#32;&#32;_RAIterOut
1444 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link>&#32;__tag)
1449 &#32;&#32;&#32;&#32;{
1450 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1451 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1452 
1453 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1454 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1455 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1456 
1457 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1458 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1459 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1460 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1461 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1466 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1467 &#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1468 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,
1470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1474 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1476 &#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1477 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1479 &#32;&#32;&#32;&#32;}
1480 
1481 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1482 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1486 &#32;&#32;&#32;&#32;_RAIterOut
1487 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sampling__tag">__gnu_parallel::sampling_tag</link>&#32;__tag)
1492 &#32;&#32;&#32;&#32;{
1493 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1494 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1495 
1496 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1497 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1498 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1499 
1500 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1501 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1502 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1503 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1504 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1510 &#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1511 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,
1513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1517 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1518 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1519 &#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1520 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1522 &#32;&#32;&#32;&#32;}
1523 
1524 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1525 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1529 &#32;&#32;&#32;&#32;_RAIterOut
1530 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>&#32;__tag&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))
1535 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,
1536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__comp,&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.__get_num_threads()));&#32;}
1537 
1538 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1539 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1543 &#32;&#32;&#32;&#32;_RAIterOut
1544 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link>&#32;__tag)
1549 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a25294b0a47406aefa9ebc5e0c151d0ce">multiway_merge</link>(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__comp,&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>()));&#32;}
1551 
1552 &#32;&#32;<emphasis role="comment">//&#32;stable_multiway_merge</emphasis>
1553 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1554 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1558 &#32;&#32;&#32;&#32;_RAIterOut
1559 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)
1564 &#32;&#32;&#32;&#32;{
1565 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1566 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1567 
1568 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1569 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1571 
1572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;multiway&#32;merge&#32;*sequentially*.</emphasis>
1573 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1574 &#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1577 &#32;&#32;&#32;&#32;}
1578 
1579 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1580 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1584 &#32;&#32;&#32;&#32;_RAIterOut
1585 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link>&#32;__tag)
1590 &#32;&#32;&#32;&#32;{
1591 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1592 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1593 
1594 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1595 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1596 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1597 
1598 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1599 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1600 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1601 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1602 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1607 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1609 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,
1611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1615 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1616 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1617 &#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1618 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1620 &#32;&#32;&#32;&#32;}
1621 
1622 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1623 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1627 &#32;&#32;&#32;&#32;_RAIterOut
1628 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sampling__tag">sampling_tag</link>&#32;__tag)
1633 &#32;&#32;&#32;&#32;{
1634 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1635 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1636 
1637 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1638 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1639 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1640 
1641 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1642 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1643 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1644 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1645 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1650 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1652 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a0e39d3891745fd0e244fb125bf34ce8b">multiway_merge_sampling_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,
1654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1658 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1659 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>&gt;
1661 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1663 &#32;&#32;&#32;&#32;}
1664 
1665 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1666 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1670 &#32;&#32;&#32;&#32;_RAIterOut
1671 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>&#32;__tag&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))
1676 &#32;&#32;&#32;&#32;{
1677 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>
1678 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp,
1679 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.__get_num_threads()));
1680 &#32;&#32;&#32;&#32;}
1681 
1682 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1683 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1687 &#32;&#32;&#32;&#32;_RAIterOut
1688 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>(_RAIterPairIterator&#32;__seqs_begin,
1689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link>&#32;__tag)
1693 &#32;&#32;&#32;&#32;{
1694 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a27f5da3fdd4d5f56eecd6a078ec7bae2">stable_multiway_merge</link>
1695 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp,
1696 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>()));
1697 &#32;&#32;&#32;&#32;}
1698 
1775 &#32;&#32;<emphasis role="comment">//&#32;multiway_merge_sentinels</emphasis>
1776 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1777 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1781 &#32;&#32;&#32;&#32;_RAIterOut
1782 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)
1787 &#32;&#32;&#32;&#32;{
1788 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1789 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1790 
1791 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1792 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1793 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1794 
1795 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;multiway&#32;merge&#32;*sequentially*.</emphasis>
1796 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1797 &#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,
1799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__target,&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1800 &#32;&#32;&#32;&#32;}
1801 
1802 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1803 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1807 &#32;&#32;&#32;&#32;_RAIterOut
1808 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link>&#32;__tag)
1813 &#32;&#32;&#32;&#32;{
1814 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1815 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1816 
1817 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1818 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1819 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1820 
1821 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1822 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1823 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1824 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1825 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1830 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1832 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1838 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1839 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1841 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1843 &#32;&#32;&#32;&#32;}
1844 
1845 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1846 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1850 &#32;&#32;&#32;&#32;_RAIterOut
1851 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sampling__tag">sampling_tag</link>&#32;__tag)
1856 &#32;&#32;&#32;&#32;{
1857 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1858 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1859 
1860 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1861 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1862 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1863 
1864 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1865 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1866 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1867 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1868 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1873 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1875 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a0e39d3891745fd0e244fb125bf34ce8b">multiway_merge_sampling_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">false</emphasis>,
1877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1881 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1882 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis><emphasis role="keyword">false</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;(
1884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__seqs_begin,&#32;__seqs_end,&#32;__target,
1885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1886 &#32;&#32;&#32;&#32;}
1887 
1888 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1889 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1893 &#32;&#32;&#32;&#32;_RAIterOut
1894 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>&#32;__tag&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))
1899 &#32;&#32;&#32;&#32;{
1900 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>
1901 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp,
1902 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.__get_num_threads()));
1903 &#32;&#32;&#32;&#32;}
1904 
1905 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1906 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1910 &#32;&#32;&#32;&#32;_RAIterOut
1911 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link>&#32;__tag)
1916 &#32;&#32;&#32;&#32;{
1917 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a4d6e76ac42b48f0033139352dcb0418f">multiway_merge_sentinels</link>
1918 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp,
1919 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>()));
1920 &#32;&#32;&#32;&#32;}
1921 
1922 &#32;&#32;<emphasis role="comment">//&#32;stable_multiway_merge_sentinels</emphasis>
1923 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1924 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1928 &#32;&#32;&#32;&#32;_RAIterOut
1929 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>)
1934 &#32;&#32;&#32;&#32;{
1935 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1936 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1937 
1938 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1939 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1940 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1941 
1942 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;multiway&#32;merge&#32;*sequentially*.</emphasis>
1943 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1944 &#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1945 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1946 &#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1947 &#32;&#32;&#32;&#32;}
1948 
1949 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1950 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1954 &#32;&#32;&#32;&#32;_RAIterOut
1955 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
1957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
1958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
1959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link>&#32;__tag)
1960 &#32;&#32;&#32;&#32;{
1961 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
1962 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
1963 
1964 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
1965 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
1966 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
1967 
1968 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
1969 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
1970 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
1971 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
1972 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
1973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
1974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
1975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
1976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
1977 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
1978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1979 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a567621588e461a8759651e29cd964ab9">multiway_merge_exact_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,
1981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
1982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
1983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
1984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
1985 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1986 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
1987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
1988 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
1989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
1990 &#32;&#32;&#32;&#32;}
1991 
1992 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
1993 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
1994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
1996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
1997 &#32;&#32;&#32;&#32;_RAIterOut
1998 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
1999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
2000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
2001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,
2002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
2003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1sampling__tag">sampling_tag</link>&#32;__tag)
2004 &#32;&#32;&#32;&#32;{
2005 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
2006 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__seqs_end&#32;-&#32;__seqs_begin)
2007 
2008 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch&#32;special&#32;case:&#32;no&#32;sequences</emphasis>
2009 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__seqs_begin&#32;==&#32;__seqs_end)
2010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__target;
2011 
2012 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;merge;&#32;maybe&#32;parallel,&#32;depending&#32;on&#32;the&#32;number&#32;of&#32;merged</emphasis>
2013 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;and&#32;the&#32;number&#32;of&#32;sequences&#32;and&#32;global&#32;thresholds&#32;in</emphasis>
2014 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Settings.</emphasis>
2015 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__seqs_end&#32;-&#32;__seqs_begin&#32;&gt;&#32;1)
2016 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2settings_8h_1ad816e8f52b933c9300598977cada7d18">_GLIBCXX_PARALLEL_CONDITION</link>(
2017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__seqs_end&#32;-&#32;__seqs_begin)&#32;&gt;=
2018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_k)
2019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;((<link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link>)__length&#32;&gt;=
2020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">__gnu_parallel::_Settings::get</link>().multiway_merge_minimal_n)))
2021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a14c854d00d1321cf1ee7f6d12fb955c4">parallel_multiway_merge</link>
2022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
2023 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
2024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a0e39d3891745fd0e244fb125bf34ce8b">multiway_merge_sampling_splitting</link>&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,
2025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIterPairIterator&gt;
2026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;::value_type*,&#32;_Compare,&#32;_DifferenceTp&gt;,
2027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_DifferenceType<emphasis role="keyword">&gt;</emphasis>(__length),&#32;__comp,
2028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>());
2029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a5ccf0d17d06a0cdd449939227e55bd9d">__sequential_multiway_merge</link>
2031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;<emphasis role="comment">/*&#32;__stable&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="comment">/*&#32;__sentinels&#32;=&#32;*/</emphasis>&#32;<emphasis role="keyword">true</emphasis>&gt;
2032 &#32;&#32;&#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,
2033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*(__seqs_begin-&gt;second),&#32;__length,&#32;__comp);
2034 &#32;&#32;&#32;&#32;}
2035 
2036 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
2037 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
2038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
2039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
2040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
2041 &#32;&#32;&#32;&#32;_RAIterOut
2042 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
2043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
2044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
2045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,
2046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Compare&#32;__comp,
2047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>&#32;__tag&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1parallel__tag">parallel_tag</link>(0))
2048 &#32;&#32;&#32;&#32;{
2049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>
2050 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp,
2051 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.__get_num_threads()));
2052 &#32;&#32;&#32;&#32;}
2053 
2054 &#32;&#32;<emphasis role="comment">//&#32;public&#32;interface</emphasis>
2055 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIterPairIterator,
2056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_RAIterOut,
2057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp,
2058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
2059 &#32;&#32;&#32;&#32;_RAIterOut
2060 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>(_RAIterPairIterator&#32;__seqs_begin,
2061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterPairIterator&#32;__seqs_end,
2062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIterOut&#32;__target,
2063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp&#32;__length,&#32;_Compare&#32;__comp,
2064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1default__parallel__tag">default_parallel_tag</link>&#32;__tag)
2065 &#32;&#32;&#32;&#32;{
2066 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace____gnu__parallel_1a907b298f67ecf4627e9db5d8e1e8d8a5">stable_multiway_merge_sentinels</link>
2067 &#32;&#32;&#32;&#32;(__seqs_begin,&#32;__seqs_end,&#32;__target,&#32;__length,&#32;__comp,
2068 &#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__parallel_1_1exact__tag">exact_tag</link>(__tag.<link linkend="_struct____gnu__parallel_1_1parallel__tag_1a18b32829b31b902699690b750e190e59">__get_num_threads</link>()));
2069 &#32;&#32;&#32;&#32;}
2070 };&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_parallel</emphasis>
2071 
2072 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
