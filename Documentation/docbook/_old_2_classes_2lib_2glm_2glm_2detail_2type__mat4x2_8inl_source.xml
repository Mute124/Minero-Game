<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2detail_2type__mat4x2_8inl_source" xml:lang="en-US">
<title>type_mat4x2.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/detail/type_mat4x2.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
2 {
3 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Constructors&#32;--</emphasis>
4 
5 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat()
8 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALIZER_LIST</emphasis>
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(1,&#32;0),&#32;col_type(0,&#32;1),&#32;col_type(0,&#32;0),&#32;col_type(0,&#32;0)}
10 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
12 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALISATION</emphasis>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(1,&#32;0);
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;1);
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0);
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0);
17 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
19 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
20 
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
23 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;2,&#32;T,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
24 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(m[3])}
26 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
27 &#32;&#32;&#32;&#32;{
28 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;m[3];
33 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
34 &#32;&#32;&#32;&#32;}
35 
36 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
37 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(T&#32;s)
38 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(s,&#32;0),&#32;col_type(0,&#32;s),&#32;col_type(0,&#32;0),&#32;col_type(0,&#32;0)}
40 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
41 &#32;&#32;&#32;&#32;{
42 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(s,&#32;0);
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;s);
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0,&#32;0);
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0,&#32;0);
47 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
48 &#32;&#32;&#32;&#32;}
49 
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
51 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat
52 &#32;&#32;&#32;&#32;(
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x0,&#32;T&#32;y0,
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x1,&#32;T&#32;y1,
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x2,&#32;T&#32;y2,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x3,&#32;T&#32;y3
57 &#32;&#32;&#32;&#32;)
58 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(x0,&#32;y0),&#32;col_type(x1,&#32;y1),&#32;col_type(x2,&#32;y2),&#32;col_type(x3,&#32;y3)}
60 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
61 &#32;&#32;&#32;&#32;{
62 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1);
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2);
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(x3,&#32;y3);
67 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
68 &#32;&#32;&#32;&#32;}
69 
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
71 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)
72 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)}
74 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
75 &#32;&#32;&#32;&#32;{
76 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>;
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>;
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>;
81 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
82 &#32;&#32;&#32;&#32;}
83 
84 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;constructors&#32;--</emphasis>
85 
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X0,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y0,
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y1,
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y2,
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X3,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y3&gt;
92 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat
93 &#32;&#32;&#32;&#32;(
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X0&#32;x0,&#32;Y0&#32;y0,
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;x1,&#32;Y1&#32;y1,
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;x2,&#32;Y2&#32;y2,
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X3&#32;x3,&#32;Y3&#32;y3
98 &#32;&#32;&#32;&#32;)
99 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(x0,&#32;y0),&#32;col_type(x1,&#32;y1),&#32;col_type(x2,&#32;y2),&#32;col_type(x3,&#32;y3)}
101 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
102 &#32;&#32;&#32;&#32;{
103 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0);
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1);
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(x2,&#32;y2);
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(x3,&#32;y3);
108 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
109 &#32;&#32;&#32;&#32;}
110 
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
112 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;V0,&#32;<emphasis role="keyword">typename</emphasis>&#32;V1,&#32;<emphasis role="keyword">typename</emphasis>&#32;V2,&#32;<emphasis role="keyword">typename</emphasis>&#32;V3&gt;
113 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(vec&lt;2,&#32;V0,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;vec&lt;2,&#32;V1,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;vec&lt;2,&#32;V2,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;vec&lt;2,&#32;V3,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)
114 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)}
116 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
117 &#32;&#32;&#32;&#32;{
118 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>);
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>);
123 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
124 &#32;&#32;&#32;&#32;}
125 
126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;--</emphasis>
127 
128 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
129 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
130 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;2,&#32;U,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
131 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(m[3])}
133 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
134 &#32;&#32;&#32;&#32;{
135 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(m[3]);
140 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
141 &#32;&#32;&#32;&#32;}
142 
143 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
144 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
145 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(0),&#32;col_type(0)}
147 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
148 &#32;&#32;&#32;&#32;{
149 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0);
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0);
154 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
155 &#32;&#32;&#32;&#32;}
156 
157 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
158 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
159 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(0)}
161 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
162 &#32;&#32;&#32;&#32;{
163 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0);
168 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
169 &#32;&#32;&#32;&#32;}
170 
171 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
172 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
173 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(m[3])}
175 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
176 &#32;&#32;&#32;&#32;{
177 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(m[3]);
182 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
183 &#32;&#32;&#32;&#32;}
184 
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
186 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
187 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(0),&#32;col_type(0)}
189 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
190 &#32;&#32;&#32;&#32;{
191 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0);
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0);
196 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
197 &#32;&#32;&#32;&#32;}
198 
199 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
200 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
201 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(0)}
203 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
204 &#32;&#32;&#32;&#32;{
205 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0);
210 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
211 &#32;&#32;&#32;&#32;}
212 
213 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
214 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
215 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(0),&#32;col_type(0)}
217 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
218 &#32;&#32;&#32;&#32;{
219 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(0);
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0);
224 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
225 &#32;&#32;&#32;&#32;}
226 
227 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
228 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
229 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(m[3])}
231 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
232 &#32;&#32;&#32;&#32;{
233 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(m[3]);
238 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
239 &#32;&#32;&#32;&#32;}
240 
241 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
242 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
243 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1]),&#32;col_type(m[2]),&#32;col_type(0)}
245 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
246 &#32;&#32;&#32;&#32;{
247 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;col_type(m[2]);
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;col_type(0);
252 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
253 &#32;&#32;&#32;&#32;}
254 
255 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Accesses&#32;--</emphasis>
256 
257 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
258 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::length_type&#32;i)
259 &#32;&#32;&#32;&#32;{
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
262 &#32;&#32;&#32;&#32;}
263 
264 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
265 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::length_type&#32;i)<emphasis role="keyword">&#32;const</emphasis>
266 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
269 &#32;&#32;&#32;&#32;}
270 
271 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;updatable&#32;operators&#32;--</emphasis>
272 
273 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
274 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
275 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator=(mat&lt;4,&#32;2,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
276 &#32;&#32;&#32;&#32;{
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;=&#32;m[2];
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;=&#32;m[3];
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
282 &#32;&#32;&#32;&#32;}
283 
284 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
285 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
286 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator+=(U&#32;s)
287 &#32;&#32;&#32;&#32;{
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;s;
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;s;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;s;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;+=&#32;s;
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
293 &#32;&#32;&#32;&#32;}
294 
295 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
296 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
297 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator+=(mat&lt;4,&#32;2,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
298 &#32;&#32;&#32;&#32;{
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;m[0];
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;m[1];
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;+=&#32;m[2];
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;+=&#32;m[3];
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
304 &#32;&#32;&#32;&#32;}
305 
306 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
307 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
308 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator-=(U&#32;s)
309 &#32;&#32;&#32;&#32;{
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;s;
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;s;
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;s;
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;-=&#32;s;
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
315 &#32;&#32;&#32;&#32;}
316 
317 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
318 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
319 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator-=(mat&lt;4,&#32;2,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
320 &#32;&#32;&#32;&#32;{
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;m[0];
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;m[1];
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;-=&#32;m[2];
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;-=&#32;m[3];
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
326 &#32;&#32;&#32;&#32;}
327 
328 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
329 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
330 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator*=(U&#32;s)
331 &#32;&#32;&#32;&#32;{
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;*=&#32;s;
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;*=&#32;s;
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;*=&#32;s;
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;*=&#32;s;
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
337 &#32;&#32;&#32;&#32;}
338 
339 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
340 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
341 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator/=(U&#32;s)
342 &#32;&#32;&#32;&#32;{
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;/=&#32;s;
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;/=&#32;s;
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[2]&#32;/=&#32;s;
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[3]&#32;/=&#32;s;
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
348 &#32;&#32;&#32;&#32;}
349 
350 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Increment&#32;and&#32;decrement&#32;operators&#32;--</emphasis>
351 
352 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
353 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator++()
354 &#32;&#32;&#32;&#32;{
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[0];
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[1];
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[2];
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[3];
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
360 &#32;&#32;&#32;&#32;}
361 
362 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
363 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator--()
364 &#32;&#32;&#32;&#32;{
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[0];
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[1];
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[2];
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[3];
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
370 &#32;&#32;&#32;&#32;}
371 
372 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
373 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator++(<emphasis role="keywordtype">int</emphasis>)
374 &#32;&#32;&#32;&#32;{
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;Result(*<emphasis role="keyword">this</emphasis>);
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++*<emphasis role="keyword">this</emphasis>;
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
378 &#32;&#32;&#32;&#32;}
379 
380 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
381 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::operator--(<emphasis role="keywordtype">int</emphasis>)
382 &#32;&#32;&#32;&#32;{
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;Result(*<emphasis role="keyword">this</emphasis>);
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--*<emphasis role="keyword">this</emphasis>;
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
386 &#32;&#32;&#32;&#32;}
387 
388 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
389 
390 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
391 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
392 &#32;&#32;&#32;&#32;{
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
394 &#32;&#32;&#32;&#32;}
395 
396 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
397 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
398 &#32;&#32;&#32;&#32;{
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[0],
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[1],
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[2],
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[3]);
404 &#32;&#32;&#32;&#32;}
405 
406 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;arithmetic&#32;operators&#32;--</emphasis>
407 
408 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
409 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
410 &#32;&#32;&#32;&#32;{
411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;scalar,
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;scalar,
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;+&#32;scalar,
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;+&#32;scalar);
416 &#32;&#32;&#32;&#32;}
417 
418 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
419 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
420 &#32;&#32;&#32;&#32;{
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;+&#32;m2[0],
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;+&#32;m2[1],
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;+&#32;m2[2],
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[3]&#32;+&#32;m2[3]);
426 &#32;&#32;&#32;&#32;}
427 
428 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
429 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
430 &#32;&#32;&#32;&#32;{
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;-&#32;scalar,
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;-&#32;scalar,
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;-&#32;scalar,
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;-&#32;scalar);
436 &#32;&#32;&#32;&#32;}
437 
438 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
439 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
440 &#32;&#32;&#32;&#32;{
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;-&#32;m2[0],
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;-&#32;m2[1],
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[2]&#32;-&#32;m2[2],
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[3]&#32;-&#32;m2[3]);
446 &#32;&#32;&#32;&#32;}
447 
448 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
449 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
450 &#32;&#32;&#32;&#32;{
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar,
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;*&#32;scalar);
456 &#32;&#32;&#32;&#32;}
457 
458 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
459 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;scalar,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
460 &#32;&#32;&#32;&#32;{
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar,
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;*&#32;scalar,
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;*&#32;scalar);
466 &#32;&#32;&#32;&#32;}
467 
468 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
469 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::row_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
470 &#32;&#32;&#32;&#32;{
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::col_type(
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;+&#32;m[3][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w,
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;+&#32;m[2][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;+&#32;m[3][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w);
474 &#32;&#32;&#32;&#32;}
475 
476 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
477 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::row_type&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
478 &#32;&#32;&#32;&#32;{
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;::row_type(
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[0][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[0][1],
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[1][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[1][1],
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[2][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[2][1],
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[3][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[3][1]);
484 &#32;&#32;&#32;&#32;}
485 
486 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
487 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
488 &#32;&#32;&#32;&#32;{
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA00&#32;=&#32;m1[0][0];
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA01&#32;=&#32;m1[0][1];
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA10&#32;=&#32;m1[1][0];
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA11&#32;=&#32;m1[1][1];
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA20&#32;=&#32;m1[2][0];
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA21&#32;=&#32;m1[2][1];
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA30&#32;=&#32;m1[3][0];
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcA31&#32;=&#32;m1[3][1];
497 
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB00&#32;=&#32;m2[0][0];
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB01&#32;=&#32;m2[0][1];
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB02&#32;=&#32;m2[0][2];
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB03&#32;=&#32;m2[0][3];
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB10&#32;=&#32;m2[1][0];
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB11&#32;=&#32;m2[1][1];
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB12&#32;=&#32;m2[1][2];
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;SrcB13&#32;=&#32;m2[1][3];
506 
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;Result;
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB00&#32;+&#32;SrcA10&#32;*&#32;SrcB01&#32;+&#32;SrcA20&#32;*&#32;SrcB02&#32;+&#32;SrcA30&#32;*&#32;SrcB03;
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB00&#32;+&#32;SrcA11&#32;*&#32;SrcB01&#32;+&#32;SrcA21&#32;*&#32;SrcB02&#32;+&#32;SrcA31&#32;*&#32;SrcB03;
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB10&#32;+&#32;SrcA10&#32;*&#32;SrcB11&#32;+&#32;SrcA20&#32;*&#32;SrcB12&#32;+&#32;SrcA30&#32;*&#32;SrcB13;
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB10&#32;+&#32;SrcA11&#32;*&#32;SrcB11&#32;+&#32;SrcA21&#32;*&#32;SrcB12&#32;+&#32;SrcA31&#32;*&#32;SrcB13;
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
513 &#32;&#32;&#32;&#32;}
514 
515 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
516 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
517 &#32;&#32;&#32;&#32;{
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;(
519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[0][3],
520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[0][3],
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[1][3],
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[1][3],
523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[2][3],
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[2][3]);
525 &#32;&#32;&#32;&#32;}
526 
527 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
528 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
529 &#32;&#32;&#32;&#32;{
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[0][3],
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[0][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[0][3],
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[1][3],
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[1][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[1][3],
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[2][3],
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[2][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[2][3],
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][0]&#32;*&#32;m2[3][2]&#32;+&#32;m1[3][0]&#32;*&#32;m2[3][3],
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[3][1]&#32;+&#32;m1[2][1]&#32;*&#32;m2[3][2]&#32;+&#32;m1[3][1]&#32;*&#32;m2[3][3]);
539 &#32;&#32;&#32;&#32;}
540 
541 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
542 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
543 &#32;&#32;&#32;&#32;{
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;/&#32;scalar,
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;/&#32;scalar,
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[2]&#32;/&#32;scalar,
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[3]&#32;/&#32;scalar);
549 &#32;&#32;&#32;&#32;}
550 
551 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
552 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(T&#32;scalar,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
553 &#32;&#32;&#32;&#32;{
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;(
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[0],
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[1],
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[2],
558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[3]);
559 &#32;&#32;&#32;&#32;}
560 
561 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
562 
563 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
564 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
565 &#32;&#32;&#32;&#32;{
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;==&#32;m2[0])&#32;&amp;&amp;&#32;(m1[1]&#32;==&#32;m2[1])&#32;&amp;&amp;&#32;(m1[2]&#32;==&#32;m2[2])&#32;&amp;&amp;&#32;(m1[3]&#32;==&#32;m2[3]);
567 &#32;&#32;&#32;&#32;}
568 
569 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
570 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
571 &#32;&#32;&#32;&#32;{
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;!=&#32;m2[0])&#32;||&#32;(m1[1]&#32;!=&#32;m2[1])&#32;||&#32;(m1[2]&#32;!=&#32;m2[2])&#32;||&#32;(m1[3]&#32;!=&#32;m2[3]);
573 &#32;&#32;&#32;&#32;}
574 }&#32;<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
