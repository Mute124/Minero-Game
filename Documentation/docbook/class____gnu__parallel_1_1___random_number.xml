<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___random_number" xml:lang="en-US">
<title>__gnu_parallel::_RandomNumber Class Reference</title>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary></indexterm>
<para>

<para>Random number generator, based on the Mersenne twister. </para>
 
</para>
<para>
<computeroutput>#include &lt;random_number.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966">_RandomNumber</link> ()</para>

<para>Default constructor. Seed with 0. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4">_RandomNumber</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __seed, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _M_supremum=0x100000000ULL)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39">operator()</link> ()</para>

<para>Generate unsigned random 32-bit integer. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c">operator()</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> local_supremum)</para>

<para>Generate unsigned random 32-bit integer in the interval <computeroutput></computeroutput>[0,local_supremum). </para>
</listitem>
            <listitem><para>unsigned long <link linkend="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b">__genrand_bits</link> (int __bits)</para>

<para>Generate a number of random bits, run-time parameter. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966">_RandomNumber</link> ()</para>

<para>Default constructor. Seed with 0. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4">_RandomNumber</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __seed, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _M_supremum=0x100000000ULL)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39">operator()</link> ()</para>

<para>Generate unsigned random 32-bit integer. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c">operator()</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> local_supremum)</para>

<para>Generate unsigned random 32-bit integer in the interval <computeroutput></computeroutput>[0,local_supremum). </para>
</listitem>
            <listitem><para>unsigned long <link linkend="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b">__genrand_bits</link> (int __bits)</para>

<para>Generate a number of random bits, run-time parameter. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966">_RandomNumber</link> ()</para>

<para>Default constructor. Seed with 0. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4">_RandomNumber</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __seed, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _M_supremum=0x100000000ULL)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39">operator()</link> ()</para>

<para>Generate unsigned random 32-bit integer. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c">operator()</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> local_supremum)</para>

<para>Generate unsigned random 32-bit integer in the interval <computeroutput></computeroutput>[0,local_supremum). </para>
</listitem>
            <listitem><para>unsigned long <link linkend="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b">__genrand_bits</link> (int __bits)</para>

<para>Generate a number of random bits, run-time parameter. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Random number generator, based on the Mersenne twister. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966"/><section>
    <title>_RandomNumber()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_RandomNumber</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>_RandomNumber</secondary></indexterm>
<para><computeroutput>__gnu_parallel::_RandomNumber::_RandomNumber ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. Seed with 0. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4"/><section>
    <title>_RandomNumber()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_RandomNumber</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>_RandomNumber</secondary></indexterm>
<para><computeroutput>__gnu_parallel::_RandomNumber::_RandomNumber (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __seed, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _M_supremum = <computeroutput>0x100000000ULL</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__seed</entry><entry>
<para>Random __seed. </para>
</entry>
                            </row>
                            <row>
<entry>_M_supremum</entry><entry>
<para>Generate integer random numbers in the interval <computeroutput></computeroutput>[0,_M_supremum). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966"/><section>
    <title>_RandomNumber()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_RandomNumber</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>_RandomNumber</secondary></indexterm>
<para><computeroutput>__gnu_parallel::_RandomNumber::_RandomNumber ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. Seed with 0. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4"/><section>
    <title>_RandomNumber()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_RandomNumber</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>_RandomNumber</secondary></indexterm>
<para><computeroutput>__gnu_parallel::_RandomNumber::_RandomNumber (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __seed, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _M_supremum = <computeroutput>0x100000000ULL</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__seed</entry><entry>
<para>Random __seed. </para>
</entry>
                            </row>
                            <row>
<entry>_M_supremum</entry><entry>
<para>Generate integer random numbers in the interval <computeroutput></computeroutput>[0,_M_supremum). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966"/><section>
    <title>_RandomNumber()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_RandomNumber</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>_RandomNumber</secondary></indexterm>
<para><computeroutput>__gnu_parallel::_RandomNumber::_RandomNumber ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. Seed with 0. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4"/><section>
    <title>_RandomNumber()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_RandomNumber</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>_RandomNumber</secondary></indexterm>
<para><computeroutput>__gnu_parallel::_RandomNumber::_RandomNumber (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __seed, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _M_supremum = <computeroutput>0x100000000ULL</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__seed</entry><entry>
<para>Random __seed. </para>
</entry>
                            </row>
                            <row>
<entry>_M_supremum</entry><entry>
<para>Generate integer random numbers in the interval <computeroutput></computeroutput>[0,_M_supremum). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b"/><section>
    <title>__genrand_bits()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__genrand_bits</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>__genrand_bits</secondary></indexterm>
<para><computeroutput>unsigned long __gnu_parallel::_RandomNumber::__genrand_bits (int __bits)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate a number of random bits, run-time parameter. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bits</entry><entry>
<para>Number of bits to generate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b"/><section>
    <title>__genrand_bits()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__genrand_bits</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>__genrand_bits</secondary></indexterm>
<para><computeroutput>unsigned long __gnu_parallel::_RandomNumber::__genrand_bits (int __bits)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate a number of random bits, run-time parameter. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bits</entry><entry>
<para>Number of bits to generate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b"/><section>
    <title>__genrand_bits()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__genrand_bits</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>__genrand_bits</secondary></indexterm>
<para><computeroutput>unsigned long __gnu_parallel::_RandomNumber::__genrand_bits (int __bits)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate a number of random bits, run-time parameter. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bits</entry><entry>
<para>Number of bits to generate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39"/><section>
    <title>operator()()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __gnu_parallel::_RandomNumber::operator() ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate unsigned random 32-bit integer. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39"/><section>
    <title>operator()()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __gnu_parallel::_RandomNumber::operator() ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate unsigned random 32-bit integer. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39"/><section>
    <title>operator()()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __gnu_parallel::_RandomNumber::operator() ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate unsigned random 32-bit integer. </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c"/><section>
    <title>operator()()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __gnu_parallel::_RandomNumber::operator() (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> local_supremum)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate unsigned random 32-bit integer in the interval <computeroutput></computeroutput>[0,local_supremum). </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c"/><section>
    <title>operator()()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __gnu_parallel::_RandomNumber::operator() (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> local_supremum)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate unsigned random 32-bit integer in the interval <computeroutput></computeroutput>[0,local_supremum). </para>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c"/><section>
    <title>operator()()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_RandomNumber</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_RandomNumber</primary><secondary>operator()</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> __gnu_parallel::_RandomNumber::operator() (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> local_supremum)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Generate unsigned random 32-bit integer in the interval <computeroutput></computeroutput>[0,local_supremum). </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2random__number_8h">random_number.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2random__number_8h">random_number.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2random__number_8h">random_number.h</link></section>
</section>
