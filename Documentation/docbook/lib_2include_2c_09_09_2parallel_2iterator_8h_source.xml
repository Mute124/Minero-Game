<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2parallel_2iterator_8h_source" xml:lang="en-US">
<title>iterator.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/iterator.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler.</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_ITERATOR_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_ITERATOR_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;parallel/basic_iterator.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_pair.h&gt;</emphasis>
37 
38 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
39 {
43 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Iterator2,
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_IteratorCategory&gt;
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IteratorPair&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;std::pair&lt;_Iterator1,&#32;_Iterator2&gt;
46 &#32;&#32;&#32;&#32;{
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
48 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::pair&lt;_Iterator1,&#32;_Iterator2&gt;&#32;_Base;
49 
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
51 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_IteratorCategory&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439">iterator_category</link>;
52 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7">value_type</link>;
53 
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;_Iterator1&gt;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356">_TraitsType</link>;
55 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::difference_type&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link>;
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>*&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44">pointer</link>;
57 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88">reference</link>;
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link>()&#32;{&#32;}
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1">_IteratorPair</link>(<emphasis role="keyword">const</emphasis>&#32;_Iterator1&amp;&#32;__first,&#32;<emphasis role="keyword">const</emphasis>&#32;_Iterator2&amp;&#32;__second)
62 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Base(__first,&#32;__second)&#32;{&#32;}
63 
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pre-increment&#32;operator.</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp;
66 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9">operator++</link>()
67 &#32;&#32;&#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++_Base::first;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++_Base::second;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
71 &#32;&#32;&#32;&#32;&#32;&#32;}
72 
73 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Post-increment&#32;operator.</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>
75 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d">operator++</link>(<emphasis role="keywordtype">int</emphasis>)
76 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link>(_Base::first++,&#32;_Base::second++);&#32;}
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pre-decrement&#32;operator.</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp;
80 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4">operator--</link>()
81 &#32;&#32;&#32;&#32;&#32;&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--_Base::first;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--_Base::second;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
85 &#32;&#32;&#32;&#32;&#32;&#32;}
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Post-decrement&#32;operator.</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>
89 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b">operator--</link>(<emphasis role="keywordtype">int</emphasis>)
90 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link>(_Base::first--,&#32;_Base::second--);&#32;}
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Type&#32;conversion.</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;_Iterator2()<emphasis role="keyword">&#32;const</emphasis>
94 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Base::second;&#32;}
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp;
97 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp;&#32;__other)
98 &#32;&#32;&#32;&#32;&#32;&#32;{
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Base::first&#32;=&#32;__other.first;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Base::second&#32;=&#32;__other.second;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
102 &#32;&#32;&#32;&#32;&#32;&#32;}
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>
105 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253">operator+</link>(<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link>&#32;__delta)<emphasis role="keyword">&#32;const</emphasis>
106 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link>(_Base::first&#32;+&#32;__delta,&#32;_Base::second&#32;+&#32;__delta);
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
108 
109 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link>
110 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b">operator-</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp;&#32;__other)<emphasis role="keyword">&#32;const</emphasis>
111 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Base::first&#32;-&#32;__other.first;&#32;}
112 &#32;&#32;};
113 
114 
118 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator1,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Iterator2,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Iterator3,
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_IteratorCategory&gt;
120 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IteratorTriple
121 &#32;&#32;&#32;&#32;{
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_IteratorCategory&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a7447553a02270e80de602f2b467ae21d">iterator_category</link>;
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a299b9913b7a0929dc3fee40746c71371">value_type</link>;
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_Iterator1&gt;::difference_type
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link>;
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>*&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a942a30e6ae16a1493752a4e207bbbe7e">pointer</link>;
128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a175113ad8488080b5444a206d9a6ca6b">reference</link>;
129 
130 &#32;&#32;&#32;&#32;&#32;&#32;_Iterator1&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>;
131 &#32;&#32;&#32;&#32;&#32;&#32;_Iterator2&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>;
132 &#32;&#32;&#32;&#32;&#32;&#32;_Iterator3&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>;
133 
134 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link>()&#32;{&#32;}
135 
136 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a2b6de5323021c01c1ffe0a3d6c0807ef">_IteratorTriple</link>(<emphasis role="keyword">const</emphasis>&#32;_Iterator1&amp;&#32;__first,&#32;<emphasis role="keyword">const</emphasis>&#32;_Iterator2&amp;&#32;__second,
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Iterator3&amp;&#32;__third)
138 &#32;&#32;&#32;&#32;&#32;&#32;{
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>&#32;=&#32;__first;
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>&#32;=&#32;__second;
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>&#32;=&#32;__third;
142 &#32;&#32;&#32;&#32;&#32;&#32;}
143 
144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pre-increment&#32;operator.</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp;
146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a75499765e3a8d4747d3936e0d28eb491">operator++</link>()
147 &#32;&#32;&#32;&#32;&#32;&#32;{
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>;
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>;
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>;
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
152 &#32;&#32;&#32;&#32;&#32;&#32;}
153 
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Post-increment&#32;operator.</emphasis>
155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>
156 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a1606fc8d794e5dd3f39d0eb67d62e680">operator++</link>(<emphasis role="keywordtype">int</emphasis>)
157 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link>(<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>++,&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>++,&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>++);&#32;}
158 
159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pre-decrement&#32;operator.</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp;
161 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ab4bf54bcf7738adc8c9962ec0fd53715">operator--</link>()
162 &#32;&#32;&#32;&#32;&#32;&#32;{
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>;
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>;
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
167 &#32;&#32;&#32;&#32;&#32;&#32;}
168 
169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Post-decrement&#32;operator.</emphasis>
170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>
171 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ae706a3c4500dc3747f14b749680054ab">operator--</link>(<emphasis role="keywordtype">int</emphasis>)
172 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link>(<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>--,&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>--,&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>--);&#32;}
173 
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Type&#32;conversion.</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;_Iterator3()<emphasis role="keyword">&#32;const</emphasis>
176 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>;&#32;}
177 
178 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp;
179 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a48a3fe0d78794ca3c0d0142496e93f34">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp;&#32;__other)
180 &#32;&#32;&#32;&#32;&#32;&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>&#32;=&#32;__other._M_first;
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>&#32;=&#32;__other._M_second;
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>&#32;=&#32;__other._M_third;
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
185 &#32;&#32;&#32;&#32;&#32;&#32;}
186 
187 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>
188 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a46e88744a6187314624458fd98b03cb3">operator+</link>(<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link>&#32;__delta)<emphasis role="keyword">&#32;const</emphasis>
189 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a908cf171e1c24b2fe78259cabee751a5">_IteratorTriple</link>(<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>&#32;+&#32;__delta,&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1af71a214a2b943ed562bd6323e6173550">_M_second</link>&#32;+&#32;__delta,
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a65ac6cfa4c191857638a5c09e6d60b2c">_M_third</link>&#32;+&#32;__delta);&#32;}
191 
192 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a8dfd4ae9fbf1a018130aae6b974c8dff">difference_type</link>
193 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1a64de2d0bdc1a1cfb8440da7a9ffc4206">operator-</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple">_IteratorTriple</link>&amp;&#32;__other)<emphasis role="keyword">&#32;const</emphasis>
194 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__parallel_1_1___iterator_triple_1ad0516f821ad05282ad8cb9cf314d500d">_M_first</link>&#32;-&#32;__other._M_first;&#32;}
195 &#32;&#32;};
196 }
197 
198 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_ITERATOR_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
