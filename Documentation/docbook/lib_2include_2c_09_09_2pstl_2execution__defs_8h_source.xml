<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2pstl_2execution__defs_8h_source" xml:lang="en-US">
<title>execution_defs.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/execution_defs.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 <emphasis role="comment">//===--&#32;execution_defs.h&#32;--------------------------------------------------===//</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
5 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
6 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
9 
10 <emphasis role="preprocessor">#ifndef&#32;_PSTL_EXECUTION_POLICY_DEFS_H</emphasis>
11 <emphasis role="preprocessor">#define&#32;_PSTL_EXECUTION_POLICY_DEFS_H</emphasis>
12 
13 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
14 
15 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____pstl">__pstl</link>
16 {
17 <emphasis role="keyword">namespace&#32;</emphasis>execution
18 {
19 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">namespace&#32;</emphasis><link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>
20 {
21 
22 <emphasis role="comment">//&#32;2.4,&#32;Sequential&#32;execution&#32;policy</emphasis>
23 <emphasis role="keyword">class&#32;</emphasis>sequenced_policy
24 {
25 &#32;&#32;<emphasis role="keyword">public</emphasis>:
26 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;internal&#32;use&#32;only</emphasis>
27 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::false_type
28 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy_1af7ae115497f808f01fb1c778ee40bade">__allow_unsequenced</link>()
29 &#32;&#32;&#32;&#32;{
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::false_type{};
31 &#32;&#32;&#32;&#32;}
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::false_type
33 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy_1a8fef3a5bb614ad9ee1b4251f2d575948">__allow_vector</link>()
34 &#32;&#32;&#32;&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::false_type{};
36 &#32;&#32;&#32;&#32;}
37 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::false_type
38 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy_1a0bb873713b025b429d3b4710696d6ebe">__allow_parallel</link>()
39 &#32;&#32;&#32;&#32;{
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::false_type{};
41 &#32;&#32;&#32;&#32;}
42 };
43 
44 <emphasis role="comment">//&#32;2.5,&#32;Parallel&#32;execution&#32;policy</emphasis>
45 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy">parallel_policy</link>
46 {
47 &#32;&#32;<emphasis role="keyword">public</emphasis>:
48 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;internal&#32;use&#32;only</emphasis>
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::false_type
50 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy_1a3e7a37045659637a41ab865176b3b80a">__allow_unsequenced</link>()
51 &#32;&#32;&#32;&#32;{
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::false_type{};
53 &#32;&#32;&#32;&#32;}
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::false_type
55 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy_1a1cdd8096ae75c9e7e723e308de86c2d2">__allow_vector</link>()
56 &#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::false_type{};
58 &#32;&#32;&#32;&#32;}
59 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::true_type
60 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy_1ab8ab104c827c30fa84c408b93f7ab982">__allow_parallel</link>()
61 &#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::true_type{};
63 &#32;&#32;&#32;&#32;}
64 };
65 
66 <emphasis role="comment">//&#32;2.6,&#32;Parallel+Vector&#32;execution&#32;policy</emphasis>
67 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">parallel_unsequenced_policy</link>
68 {
69 &#32;&#32;<emphasis role="keyword">public</emphasis>:
70 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;internal&#32;use&#32;only</emphasis>
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::true_type
72 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1a3a34b077aa66bbd44d5745d205378ee7">__allow_unsequenced</link>()
73 &#32;&#32;&#32;&#32;{
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::true_type{};
75 &#32;&#32;&#32;&#32;}
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::true_type
77 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ab1a9d4daa4bab789ad6153c57b357630">__allow_vector</link>()
78 &#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::true_type{};
80 &#32;&#32;&#32;&#32;}
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::true_type
82 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy_1ad7a582c6b5bce4518a8d78c3730b4064">__allow_parallel</link>()
83 &#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::true_type{};
85 &#32;&#32;&#32;&#32;}
86 };
87 
88 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy">unsequenced_policy</link>
89 {
90 &#32;&#32;<emphasis role="keyword">public</emphasis>:
91 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;internal&#32;use&#32;only</emphasis>
92 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::true_type
93 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy_1afd258a966943111504bcf800ef2a5367">__allow_unsequenced</link>()
94 &#32;&#32;&#32;&#32;{
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::true_type{};
96 &#32;&#32;&#32;&#32;}
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::true_type
98 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy_1a168bd7c004123e020b053ee86bd5f6cc">__allow_vector</link>()
99 &#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::true_type{};
101 &#32;&#32;&#32;&#32;}
102 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::false_type
103 &#32;&#32;&#32;&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy_1a4e3ab6d5adfdfbf490d2f7d24cc40028">__allow_parallel</link>()
104 &#32;&#32;&#32;&#32;{
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::false_type{};
106 &#32;&#32;&#32;&#32;}
107 };
108 
109 <emphasis role="comment">//&#32;2.8,&#32;Execution&#32;policy&#32;objects</emphasis>
110 <emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy">sequenced_policy</link>&#32;<link linkend="_namespace____pstl_1_1execution_1_1v1_1a57e9230dd9a0325dea3df4b97422b98d">seq</link>{};
111 <emphasis role="keyword">constexpr</emphasis>&#32;parallel_policy&#32;<link linkend="_namespace____pstl_1_1execution_1_1v1_1a30b3e8c3a90dbe114ed87cdb02894913">par</link>{};
112 <emphasis role="keyword">constexpr</emphasis>&#32;parallel_unsequenced_policy&#32;<link linkend="_namespace____pstl_1_1execution_1_1v1_1a6403400a4e506673c49db48893280fb7">par_unseq</link>{};
113 <emphasis role="keyword">constexpr</emphasis>&#32;unsequenced_policy&#32;<link linkend="_namespace____pstl_1_1execution_1_1v1_1a70c8bf16831e799e6d63e813e80cdd0e">unseq</link>{};
114 
115 <emphasis role="comment">//&#32;2.3,&#32;Execution&#32;policy&#32;type&#32;trait</emphasis>
116 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_Tp&gt;
117 <emphasis role="keyword">struct&#32;</emphasis>is_execution_policy&#32;:&#32;std::false_type
118 {
119 };
120 
121 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
122 <emphasis role="keyword">struct&#32;</emphasis>is_execution_policy&lt;<link linkend="_namespace____pstl">__pstl</link>::execution::sequenced_policy&gt;&#32;:&#32;std::true_type
123 {
124 };
125 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
126 <emphasis role="keyword">struct&#32;</emphasis>is_execution_policy&lt;<link linkend="_namespace____pstl">__pstl</link>::execution::parallel_policy&gt;&#32;:&#32;std::true_type
127 {
128 };
129 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
130 <emphasis role="keyword">struct&#32;</emphasis>is_execution_policy&lt;<link linkend="_namespace____pstl">__pstl</link>::execution::parallel_unsequenced_policy&gt;&#32;:&#32;std::true_type
131 {
132 };
133 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
134 <emphasis role="keyword">struct&#32;</emphasis>is_execution_policy&lt;<link linkend="_namespace____pstl">__pstl</link>::execution::unsequenced_policy&gt;&#32;:&#32;std::true_type
135 {
136 };
137 
138 <emphasis role="preprocessor">#if&#32;_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT</emphasis>
139 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_Tp&gt;
140 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_execution_policy_v&#32;=&#32;<link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy">__pstl::execution::is_execution_policy&lt;_Tp&gt;::value</link>;
141 <emphasis role="preprocessor">#endif</emphasis>
142 
143 }&#32;<emphasis role="comment">//&#32;namespace&#32;v1</emphasis>
144 }&#32;<emphasis role="comment">//&#32;namespace&#32;execution</emphasis>
145 
146 <emphasis role="keyword">namespace&#32;</emphasis>__internal
147 {
148 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ExecPolicy,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp&gt;
149 <emphasis role="preprocessor">#if&#32;_GLIBCXX_RELEASE&#32;&gt;=&#32;9</emphasis>
150 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__enable_if_execution_policy</link>&#32;=
151 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::enable_if&lt;__pstl::execution::is_execution_policy&lt;std::__remove_cvref_t&lt;_ExecPolicy&gt;&gt;<link linkend="_classvalue">::value</link>,
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Tp&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>;
153 <emphasis role="preprocessor">#else</emphasis>
154 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace____pstl_1_1____internal_1a6955c3b3eeac7ccfa9a8ae5da85b9f2a">__enable_if_execution_policy</link>&#32;=
155 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::enable_if&lt;__pstl::execution::is_execution_policy&lt;typename&#32;std::decay&lt;_ExecPolicy&gt;::type&gt;<link linkend="_classvalue">::value</link>,
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Tp&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>;
157 <emphasis role="preprocessor">#endif</emphasis>
158 }&#32;<emphasis role="comment">//&#32;namespace&#32;__internal</emphasis>
159 
160 }&#32;<emphasis role="comment">//&#32;namespace&#32;__pstl</emphasis>
161 
162 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_PSTL_EXECUTION_POLICY_DEFS_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
