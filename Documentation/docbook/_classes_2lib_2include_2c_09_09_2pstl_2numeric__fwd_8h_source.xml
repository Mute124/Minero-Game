<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2pstl_2numeric__fwd_8h_source" xml:lang="en-US">
<title>numeric_fwd.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/numeric_fwd.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 <emphasis role="comment">//===--&#32;numeric_fwd.h&#32;--------------------------------------------------===//</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
5 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
6 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
9 
10 <emphasis role="preprocessor">#ifndef&#32;_PSTL_NUMERIC_FWD_H</emphasis>
11 <emphasis role="preprocessor">#define&#32;_PSTL_NUMERIC_FWD_H</emphasis>
12 
13 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
15 
16 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____pstl">__pstl</link>
17 {
18 <emphasis role="keyword">namespace&#32;</emphasis>__internal
19 {
20 
21 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
22 <emphasis role="comment">//&#32;transform_reduce&#32;(version&#32;with&#32;two&#32;binary&#32;functions,&#32;according&#32;to&#32;draft&#32;N4659)</emphasis>
23 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
24 
25 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator1,&#32;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator2,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation1,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation2&gt;
26 _Tp&#32;<link linkend="_namespace____pstl_1_1____internal_1acd4482d348cefeae69173c5b0ba19c22">__brick_transform_reduce</link>(_ForwardIterator1,&#32;_ForwardIterator1,&#32;_ForwardIterator2,&#32;_Tp,&#32;_BinaryOperation1,
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation2,
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*__is_vector=*/</emphasis>std::true_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
29 
30 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator1,&#32;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator2,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation1,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation2&gt;
31 _Tp&#32;<link linkend="_namespace____pstl_1_1____internal_1acd4482d348cefeae69173c5b0ba19c22">__brick_transform_reduce</link>(_ForwardIterator1,&#32;_ForwardIterator1,&#32;_ForwardIterator2,&#32;_Tp,&#32;_BinaryOperation1,
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation2,
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*__is_vector=*/</emphasis>std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
34 
35 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator1,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator2,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation1,
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation2,&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
37 _Tp
38 <link linkend="_namespace____pstl_1_1____internal_1adc9b1a1468736ba57bfa4bbbc56a0440">__pattern_transform_reduce</link>(_ExecutionPolicy&amp;&amp;,&#32;_ForwardIterator1,&#32;_ForwardIterator1,&#32;_ForwardIterator2,&#32;_Tp,
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation1,&#32;_BinaryOperation2,&#32;_IsVector,
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
41 
42 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_RandomAccessIterator1,&#32;<emphasis role="keyword">class&#32;</emphasis>_RandomAccessIterator2,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation1,&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation2,&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
44 _Tp
45 <link linkend="_namespace____pstl_1_1____internal_1adc9b1a1468736ba57bfa4bbbc56a0440">__pattern_transform_reduce</link>(_ExecutionPolicy&amp;&amp;,&#32;_RandomAccessIterator1,&#32;_RandomAccessIterator1,&#32;_RandomAccessIterator2,
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Tp,&#32;_BinaryOperation1,&#32;_BinaryOperation2,&#32;_IsVector&#32;__is_vector,
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::true_type);
48 
49 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
50 <emphasis role="comment">//&#32;transform_reduce&#32;(version&#32;with&#32;unary&#32;and&#32;binary&#32;functions)</emphasis>
51 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
52 
53 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">class</emphasis>&#32;_UnaryOperation,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation&gt;
54 _Tp&#32;<link linkend="_namespace____pstl_1_1____internal_1acd4482d348cefeae69173c5b0ba19c22">__brick_transform_reduce</link>(_ForwardIterator,&#32;_ForwardIterator,&#32;_Tp,&#32;_BinaryOperation,&#32;_UnaryOperation,
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_vector=*/</emphasis>std::true_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
56 
57 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation,&#32;<emphasis role="keyword">class</emphasis>&#32;_UnaryOperation&gt;
58 _Tp&#32;<link linkend="_namespace____pstl_1_1____internal_1acd4482d348cefeae69173c5b0ba19c22">__brick_transform_reduce</link>(_ForwardIterator,&#32;_ForwardIterator,&#32;_Tp,&#32;_BinaryOperation,&#32;_UnaryOperation,
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_vector=*/</emphasis>std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
60 
61 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_UnaryOperation,
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
63 _Tp
64 <link linkend="_namespace____pstl_1_1____internal_1adc9b1a1468736ba57bfa4bbbc56a0440">__pattern_transform_reduce</link>(_ExecutionPolicy&amp;&amp;,&#32;_ForwardIterator,&#32;_ForwardIterator,&#32;_Tp,&#32;_BinaryOperation,
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UnaryOperation,&#32;_IsVector,
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
67 
68 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_UnaryOperation,
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
70 _Tp
71 <link linkend="_namespace____pstl_1_1____internal_1adc9b1a1468736ba57bfa4bbbc56a0440">__pattern_transform_reduce</link>(_ExecutionPolicy&amp;&amp;,&#32;_ForwardIterator,&#32;_ForwardIterator,&#32;_Tp,&#32;_BinaryOperation,
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UnaryOperation,&#32;_IsVector,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::true_type);
74 
75 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
76 <emphasis role="comment">//&#32;transform_exclusive_scan</emphasis>
77 <emphasis role="comment">//</emphasis>
78 <emphasis role="comment">//&#32;walk3&#32;evaluates&#32;f(x,y,z)&#32;for&#32;(x,y,z)&#32;drawn&#32;from&#32;[first1,last1),&#32;[first2,...),&#32;[first3,...)</emphasis>
79 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
80 
81 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_UnaryOperation,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation&gt;
82 std::pair&lt;_OutputIterator,&#32;_Tp&gt;&#32;<link linkend="_namespace____pstl_1_1____internal_1a6ceb558910155d72c76e56455e8acba7">__brick_transform_scan</link>(_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UnaryOperation,&#32;_Tp,&#32;_BinaryOperation,
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Inclusive*/</emphasis>&#32;std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
85 
86 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_UnaryOperation,&#32;<emphasis role="keyword">class</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation&gt;
87 std::pair&lt;_OutputIterator,&#32;_Tp&gt;&#32;<link linkend="_namespace____pstl_1_1____internal_1a6ceb558910155d72c76e56455e8acba7">__brick_transform_scan</link>(_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UnaryOperation,&#32;_Tp,&#32;_BinaryOperation,
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Inclusive*/</emphasis>&#32;std::true_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
90 
91 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_OutputIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_UnaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_Inclusive,&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
93 _OutputIterator
94 <link linkend="_namespace____pstl_1_1____internal_1a8b1fafa95881c18c8c209a63b817198d">__pattern_transform_scan</link>(_ExecutionPolicy&amp;&amp;,&#32;_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,&#32;_UnaryOperation,&#32;_Tp,
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_BinaryOperation,&#32;_Inclusive,&#32;_IsVector,
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
97 
98 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_RandomAccessIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_OutputIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_UnaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_Inclusive,&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
100 <emphasis role="keyword">typename</emphasis>&#32;std::enable_if&lt;!std::is_floating_point&lt;_Tp&gt;::value,&#32;_OutputIterator&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>
101 <link linkend="_namespace____pstl_1_1____internal_1a8b1fafa95881c18c8c209a63b817198d">__pattern_transform_scan</link>(_ExecutionPolicy&amp;&amp;,&#32;_RandomAccessIterator,&#32;_RandomAccessIterator,&#32;_OutputIterator,
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UnaryOperation,&#32;_Tp,&#32;_BinaryOperation,&#32;_Inclusive,&#32;_IsVector,&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::true_type);
103 
104 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_RandomAccessIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_OutputIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_UnaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_Tp,
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,&#32;<emphasis role="keyword">class&#32;</emphasis>_Inclusive,&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
106 <emphasis role="keyword">typename</emphasis>&#32;std::enable_if&lt;std::is_floating_point&lt;_Tp&gt;::value,&#32;_OutputIterator&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>
107 <link linkend="_namespace____pstl_1_1____internal_1a8b1fafa95881c18c8c209a63b817198d">__pattern_transform_scan</link>(_ExecutionPolicy&amp;&amp;,&#32;_RandomAccessIterator,&#32;_RandomAccessIterator,&#32;_OutputIterator,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UnaryOperation,&#32;_Tp,&#32;_BinaryOperation,&#32;_Inclusive,&#32;_IsVector,&#32;<emphasis role="comment">/*is_parallel=*/</emphasis>std::true_type);
109 
110 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
111 <emphasis role="comment">//&#32;adjacent_difference</emphasis>
112 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
113 
114 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation&gt;
115 _OutputIterator&#32;<link linkend="_namespace____pstl_1_1____internal_1a90a33e151b2c88ee9555294dfff168ae">__brick_adjacent_difference</link>(_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,&#32;_BinaryOperation,
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_vector*/</emphasis>&#32;std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
117 
118 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ForwardIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_OutputIterator,&#32;<emphasis role="keyword">class</emphasis>&#32;_BinaryOperation&gt;
119 _OutputIterator&#32;<link linkend="_namespace____pstl_1_1____internal_1a90a33e151b2c88ee9555294dfff168ae">__brick_adjacent_difference</link>(_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,&#32;_BinaryOperation,
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*is_vector*/</emphasis>&#32;std::true_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
121 
122 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_OutputIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
124 _OutputIterator
125 <link linkend="_namespace____pstl_1_1____internal_1a06ab524ac584392677a2d3002e998d89">__pattern_adjacent_difference</link>(_ExecutionPolicy&amp;&amp;,&#32;_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,&#32;_BinaryOperation,
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_IsVector,&#32;<emphasis role="comment">/*is_parallel*/</emphasis>&#32;std::false_type)&#32;<emphasis role="keyword">noexcept</emphasis>;
127 
128 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class&#32;</emphasis>_ExecutionPolicy,&#32;<emphasis role="keyword">class&#32;</emphasis>_ForwardIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_OutputIterator,&#32;<emphasis role="keyword">class&#32;</emphasis>_BinaryOperation,
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IsVector&gt;
130 _OutputIterator
131 <link linkend="_namespace____pstl_1_1____internal_1a06ab524ac584392677a2d3002e998d89">__pattern_adjacent_difference</link>(_ExecutionPolicy&amp;&amp;,&#32;_ForwardIterator,&#32;_ForwardIterator,&#32;_OutputIterator,&#32;_BinaryOperation,
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_IsVector,&#32;<emphasis role="comment">/*is_parallel*/</emphasis>&#32;std::true_type);
133 
134 }&#32;<emphasis role="comment">//&#32;namespace&#32;__internal</emphasis>
135 }&#32;<emphasis role="comment">//&#32;namespace&#32;__pstl</emphasis>
136 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_PSTL_NUMERIC_FWD_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
