<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classnlohmann_1_1json__pointer" xml:lang="en-US">
<title>nlohmann::json_pointer&lt; RefStringType &gt; Class Template Reference</title>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary></indexterm>
<para>

<para>JSON Pointer defines a string syntax for identifying a specific value within a JSON document. </para>
 
</para>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> = typename string_t_helper&lt; RefStringType &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer_1ae43313ad1469e4d47cc39ad52d1b82bd">json_pointer</link> (const <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp;s=&quot;&quot;)</para>

<para>create JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> <link linkend="_classnlohmann_1_1json__pointer_1ab2c6132c50ff78bedc3d8ab6db6f23a1">to_string</link> () const</para>

<para>return a string representation of the JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer_1ae4569ce4df07a10a45dffe0cdabe65d9">operator string_t</link> () const</para>

<para>return a string representation of the JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp; <link linkend="_classnlohmann_1_1json__pointer_1a8f02bdad016c1272ef8e2ef3ec28136e">operator/=</link> (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp;ptr)</para>

<para>append another JSON pointer at the end of this JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp; <link linkend="_classnlohmann_1_1json__pointer_1adf64bf6e57ffed9e3bb4d90f3e9549da">operator/=</link> (<link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> token)</para>

<para>append an unescaped reference token at the end of this JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp; <link linkend="_classnlohmann_1_1json__pointer_1a57646ebbf9b0cfd13b2a462db3cbd5df">operator/=</link> (std::size_t array_idx)</para>

<para>append an array index at the end of this JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> <link linkend="_classnlohmann_1_1json__pointer_1a39505b2d151e4360460ad588d66c5640">parent_pointer</link> () const</para>

<para>returns the parent of this JSON pointer </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classnlohmann_1_1json__pointer_1a23ec0f3f5d976a81cf387287375be57e">pop_back</link> ()</para>

<para>remove last reference token </para>
</listitem>
            <listitem><para>const <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp; <link linkend="_classnlohmann_1_1json__pointer_1abbc006b3be9df020d85bd3c645080bca">back</link> () const</para>

<para>return last reference token </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classnlohmann_1_1json__pointer_1a81331ad76bfafea2cb35c561443d66bc">push_back</link> (const <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp;token)</para>

<para>append an unescaped token at the end of the reference pointer </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classnlohmann_1_1json__pointer_1af10dea6483c3c8f743970c789ae01644">push_back</link> (<link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp;&amp;token)</para>

<para>append an unescaped token at the end of the reference pointer </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classnlohmann_1_1json__pointer_1a4c881fe3be1eecbeb3a5a27494d8c77b">empty</link> () const noexcept</para>

<para>return whether pointer points to the root document </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classnlohmann_1_1json__pointer_1ada3100cdb8700566051828f1355fa745">basic_json</link></para>
</listitem>
            <listitem><para>template&lt;typename &gt; </para><para>class <link linkend="_classnlohmann_1_1json__pointer_1ab0a623288bc1272870149ad50f799a73">json_pointer</link></para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> <link linkend="_classnlohmann_1_1json__pointer_1a90a11fe6c7f37b1746a3ff9cb24b0d53">operator/</link> (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp;lhs, const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp;rhs)</para>

<para>create a new JSON pointer by appending the right JSON pointer at the end of the left JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> <link linkend="_classnlohmann_1_1json__pointer_1a116956f4487af44732dd685e970679b0">operator/</link> (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp;lhs, <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> token)</para>

<para>create a new JSON pointer by appending the unescaped token at the end of the JSON pointer </para>
</listitem>
            <listitem><para><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> <link linkend="_classnlohmann_1_1json__pointer_1a29f6d4b492e784b9d196b05a4048c289">operator/</link> (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp;lhs, std::size_t array_idx)</para>

<para>create a new JSON pointer by appending the array-index-token at the end of the JSON pointer </para>
</listitem>
            <listitem><para>template&lt;typename RefStringTypeLhs , typename RefStringTypeRhs &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classnlohmann_1_1json__pointer_1ab8bab91a8ddca2e69ea824f72cd78c8b">operator==</link> (<link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeLhs &gt; const &amp;lhs, <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeRhs &gt; const &amp;rhs) noexcept</para>

<para>compares two JSON pointers for equality </para>
</listitem>
            <listitem><para>template&lt;typename RefStringTypeLhs , typename RefStringTypeRhs &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classnlohmann_1_1json__pointer_1ac79f820b128fa05762fc148cf890a7f5">operator!=</link> (<link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeLhs &gt; const &amp;lhs, <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeRhs &gt; const &amp;rhs) noexcept</para>

<para>compares two JSON pointers for inequality </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename RefStringType&gt;<?linebreak?>class nlohmann::json_pointer&lt; RefStringType &gt;</title></simplesect>

<para>JSON Pointer defines a string syntax for identifying a specific value within a JSON document. </para>



<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/">https://json.nlohmann.me/api/json_pointer/</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30"/><section>
    <title>string_t</title>
<indexterm><primary>string_t</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>string_t</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput>using <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::string_t =  typename string_t_helper&lt;RefStringType&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ae43313ad1469e4d47cc39ad52d1b82bd"/><section>
    <title>json_pointer()</title>
<indexterm><primary>json_pointer</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>json_pointer</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::json_pointer (const <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp; s = <computeroutput>&quot;&quot;</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>create JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/json_pointer/">https://json.nlohmann.me/api/json_pointer/json_pointer/</link> </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classnlohmann_1_1json__pointer_1abbc006b3be9df020d85bd3c645080bca"/><section>
    <title>back()</title>
<indexterm><primary>back</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>back</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput>const <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp; <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::back ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>return last reference token </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/back/">https://json.nlohmann.me/api/json_pointer/back/</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_abbc006b3be9df020d85bd3c645080bca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_abbc006b3be9df020d85bd3c645080bca_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a4c881fe3be1eecbeb3a5a27494d8c77b"/><section>
    <title>empty()</title>
<indexterm><primary>empty</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>empty</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::empty ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>return whether pointer points to the root document </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/empty/">https://json.nlohmann.me/api/json_pointer/empty/</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_a4c881fe3be1eecbeb3a5a27494d8c77b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ae4569ce4df07a10a45dffe0cdabe65d9"/><section>
    <title>operator string_t()</title>
<indexterm><primary>operator string_t</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator string_t</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::operator <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>return a string representation of the JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_string/">https://json.nlohmann.me/api/json_pointer/operator_string/</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_ae4569ce4df07a10a45dffe0cdabe65d9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a8f02bdad016c1272ef8e2ef3ec28136e"/><section>
    <title>operator/=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator/=</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp; <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::operator/= (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringType &gt; &amp; ptr)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>append another JSON pointer at the end of this JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_slasheq/">https://json.nlohmann.me/api/json_pointer/operator_slasheq/</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a57646ebbf9b0cfd13b2a462db3cbd5df"/><section>
    <title>operator/=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator/=</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp; <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::operator/= (std::size_t array_idx)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>append an array index at the end of this JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_slasheq/">https://json.nlohmann.me/api/json_pointer/operator_slasheq/</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1adf64bf6e57ffed9e3bb4d90f3e9549da"/><section>
    <title>operator/=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator/=</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> &amp; <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::operator/= (<link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> token)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>append an unescaped reference token at the end of this JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_slasheq/">https://json.nlohmann.me/api/json_pointer/operator_slasheq/</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_adf64bf6e57ffed9e3bb4d90f3e9549da_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a39505b2d151e4360460ad588d66c5640"/><section>
    <title>parent_pointer()</title>
<indexterm><primary>parent_pointer</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>parent_pointer</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::parent_pointer ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>returns the parent of this JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/parent_pointer/">https://json.nlohmann.me/api/json_pointer/parent_pointer/</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_a39505b2d151e4360460ad588d66c5640_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a23ec0f3f5d976a81cf387287375be57e"/><section>
    <title>pop_back()</title>
<indexterm><primary>pop_back</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>pop_back</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::pop_back ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>remove last reference token </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/pop_back/">https://json.nlohmann.me/api/json_pointer/pop_back/</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_a23ec0f3f5d976a81cf387287375be57e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_a23ec0f3f5d976a81cf387287375be57e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a81331ad76bfafea2cb35c561443d66bc"/><section>
    <title>push_back()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>push_back</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>push_back</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::push_back (const <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp; token)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>append an unescaped token at the end of the reference pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/push_back/">https://json.nlohmann.me/api/json_pointer/push_back/</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_a81331ad76bfafea2cb35c561443d66bc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1af10dea6483c3c8f743970c789ae01644"/><section>
    <title>push_back()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>push_back</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>push_back</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::push_back (<link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> &amp;&amp; token)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>append an unescaped token at the end of the reference pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/push_back/">https://json.nlohmann.me/api/json_pointer/push_back/</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_af10dea6483c3c8f743970c789ae01644_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ab2c6132c50ff78bedc3d8ab6db6f23a1"/><section>
    <title>to_string()</title>
<indexterm><primary>to_string</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>to_string</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> <link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer</link>&lt; RefStringType &gt;::to_string ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>return a string representation of the JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/to_string/">https://json.nlohmann.me/api/json_pointer/to_string/</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classnlohmann_1_1json__pointer_ab2c6132c50ff78bedc3d8ab6db6f23a1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ada3100cdb8700566051828f1355fa745"/><section>
    <title>basic_json</title>
<indexterm><primary>basic_json</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>basic_json</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput>friend class <link linkend="_classnlohmann_1_1basic__json">basic_json</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ab0a623288bc1272870149ad50f799a73"/><section>
    <title>json_pointer</title>
<indexterm><primary>json_pointer</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>json_pointer</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><computeroutput>template&lt;typename &gt; </computeroutput><para><computeroutput>friend class <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ac79f820b128fa05762fc148cf890a7f5"/><section>
    <title>operator!=</title>
<indexterm><primary>operator!=</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><computeroutput>template&lt;typename RefStringTypeLhs , typename RefStringTypeRhs &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (<link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeLhs &gt; const &amp; lhs, <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeRhs &gt; const &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>compares two JSON pointers for inequality </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>lhs</entry><entry>
<para>JSON pointer to compare </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>rhs</entry><entry>
<para>JSON pointer to compare </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether <emphasis>lhs</emphasis> is not equal <emphasis>rhs</emphasis> </para>
</formalpara>
@complexity Linear in the length of the JSON pointer</para>

<para>@exceptionsafety No-throw guarantee: this function never throws exceptions. </para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a90a11fe6c7f37b1746a3ff9cb24b0d53"/><section>
    <title>operator/<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> operator/ (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringType &gt; &amp; lhs, const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringType &gt; &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>create a new JSON pointer by appending the right JSON pointer at the end of the left JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_slash/">https://json.nlohmann.me/api/json_pointer/operator_slash/</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a29f6d4b492e784b9d196b05a4048c289"/><section>
    <title>operator/<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> operator/ (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringType &gt; &amp; lhs, std::size_t array_idx)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>create a new JSON pointer by appending the array-index-token at the end of the JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_slash/">https://json.nlohmann.me/api/json_pointer/operator_slash/</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1a116956f4487af44732dd685e970679b0"/><section>
    <title>operator/<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><para><computeroutput><link linkend="_classnlohmann_1_1json__pointer">json_pointer</link> operator/ (const <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringType &gt; &amp; lhs, <link linkend="_classnlohmann_1_1json__pointer_1a826c0f3ce730d635ad97de664fda6e30">string_t</link> token)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>create a new JSON pointer by appending the unescaped token at the end of the JSON pointer </para>
</para>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://json.nlohmann.me/api/json_pointer/operator_slash/">https://json.nlohmann.me/api/json_pointer/operator_slash/</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classnlohmann_1_1json__pointer_1ab8bab91a8ddca2e69ea824f72cd78c8b"/><section>
    <title>operator==</title>
<indexterm><primary>operator==</primary><secondary>nlohmann::json_pointer&lt; RefStringType &gt;</secondary></indexterm>
<indexterm><primary>nlohmann::json_pointer&lt; RefStringType &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename RefStringType &gt; </computeroutput><computeroutput>template&lt;typename RefStringTypeLhs , typename RefStringTypeRhs &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (<link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeLhs &gt; const &amp; lhs, <link linkend="_classnlohmann_1_1json__pointer">json_pointer</link>&lt; RefStringTypeRhs &gt; const &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>compares two JSON pointers for equality </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>lhs</entry><entry>
<para>JSON pointer to compare </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>rhs</entry><entry>
<para>JSON pointer to compare </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>whether <emphasis>lhs</emphasis> is equal to <emphasis>rhs</emphasis> </para>
</formalpara>
@complexity Linear in the length of the JSON pointer</para>

<para>@exceptionsafety No-throw guarantee: this function never throws exceptions. </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_json_8hpp">json.hpp</link></section>
</section>
