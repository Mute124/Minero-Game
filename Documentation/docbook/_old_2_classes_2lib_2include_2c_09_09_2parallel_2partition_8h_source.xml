<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2partition_8h_source" xml:lang="en-US">
<title>partition.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/partition.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
31 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler&#32;and&#32;Felix&#32;Putze.</emphasis>
32 
33 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_PARTITION_H</emphasis>
34 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_PARTITION_H&#32;1</emphasis>
35 
36 <emphasis role="preprocessor">#include&#32;&lt;parallel/basic_iterator.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;parallel/sort.h&gt;</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;parallel/random_number.h&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algo.h&gt;</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;parallel/parallel.h&gt;</emphasis>
41 
43 <emphasis role="preprocessor">#define&#32;_GLIBCXX_VOLATILE&#32;volatile</emphasis>
44 
45 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
46 {
54 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Predicate&gt;
55 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;::difference_type
56 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ac870af1d69405f2f53cd7a96e1d92348">__parallel_partition</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__end,
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Predicate&#32;__pred,&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__num_threads)
58 &#32;&#32;&#32;&#32;{
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;&#32;_TraitsType;
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::value_type&#32;_ValueType;
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::difference_type&#32;_DifferenceType;
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__n&#32;=&#32;__end&#32;-&#32;__begin;
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__n)
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Settings&amp;&#32;__s&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>();
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shared</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2partition_8h_1a1c61e6ca8bdd220c11ec4b64f7539712">_GLIBCXX_VOLATILE</link>&#32;_DifferenceType&#32;__left&#32;=&#32;0,&#32;__right&#32;=&#32;__n&#32;-&#32;1,
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__dist&#32;=&#32;__n,
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__leftover_left,&#32;__leftover_right,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__leftnew,&#32;__rightnew;
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;just&#32;0&#32;or&#32;1,&#32;but&#32;int&#32;to&#32;allow&#32;atomic&#32;operations</emphasis>
76 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>*&#32;__reserved_left&#32;=&#32;0,&#32;*&#32;__reserved_right&#32;=&#32;0;
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__chunk_size&#32;=&#32;__s.partition_chunk_size;
79 
80 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//at&#32;least&#32;two&#32;chunks&#32;per&#32;thread</emphasis>
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__dist&#32;&gt;=&#32;2&#32;*&#32;__num_threads&#32;*&#32;__chunk_size)
82 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;parallel&#32;num_threads(__num_threads)</emphasis>
83 &#32;&#32;&#32;&#32;{
84 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;single</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;{
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__num_threads&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ac42ead04531fd33507e3d3a6f648b200">omp_get_num_threads</link>();
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reserved_left&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[__num_threads];
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reserved_right&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[__num_threads];
89 
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__s.partition_chunk_share&#32;&gt;&#32;0.0)
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__chunk_size&#32;=&#32;std::max&lt;_DifferenceType&gt;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__s.partition_chunk_size,&#32;(<emphasis role="keywordtype">double</emphasis>)__n&#32;
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;__s.partition_chunk_share&#32;/&#32;(<emphasis role="keywordtype">double</emphasis>)__num_threads);
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__chunk_size&#32;=&#32;__s.partition_chunk_size;
96 &#32;&#32;&#32;&#32;&#32;&#32;}
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__dist&#32;&gt;=&#32;2&#32;*&#32;__num_threads&#32;*&#32;__chunk_size)
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
100 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;single</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__num_chunks&#32;=&#32;__dist&#32;/&#32;__chunk_size;
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__r&#32;=&#32;0;&#32;__r&#32;&lt;&#32;__num_threads;&#32;++__r)
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reserved_left&#32;[__r]&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;false</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reserved_right[__r]&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;false</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__leftover_left&#32;=&#32;0;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__leftover_right&#32;=&#32;0;
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//implicit&#32;barrier</emphasis>
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Private.</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__thread_left,&#32;__thread_left_border,
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_right,&#32;__thread_right_border;
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_left&#32;=&#32;__left&#32;+&#32;1;
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Just&#32;to&#32;satisfy&#32;the&#32;condition&#32;below.</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_left_border&#32;=&#32;__thread_left&#32;-&#32;1;
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_right&#32;=&#32;__n&#32;-&#32;1;
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Just&#32;to&#32;satisfy&#32;the&#32;condition&#32;below.</emphasis>
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_right_border&#32;=&#32;__thread_right&#32;+&#32;1;
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__iam_finished&#32;=&#32;<emphasis role="keyword">false</emphasis>;
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!__iam_finished)
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_left&#32;&gt;&#32;__thread_left_border)
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__former_dist&#32;=
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;__dist,&#32;-__chunk_size);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__former_dist&#32;&lt;&#32;__chunk_size)
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;__dist,&#32;__chunk_size);
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__iam_finished&#32;=&#32;<emphasis role="keyword">true</emphasis>;
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_left&#32;=
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;__left,&#32;__chunk_size);
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_left_border&#32;=
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_left&#32;+&#32;(__chunk_size&#32;-&#32;1);
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_right&#32;&lt;&#32;__thread_right_border)
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__former_dist&#32;=
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;__dist,&#32;-__chunk_size);
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__former_dist&#32;&lt;&#32;__chunk_size)
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;__dist,&#32;__chunk_size);
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__iam_finished&#32;=&#32;<emphasis role="keyword">true</emphasis>;
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_right&#32;=
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a56a5a84c8a6049cd3cc83968c6eae088">__fetch_and_add</link>(&amp;__right,&#32;-__chunk_size);
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_right_border&#32;=
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread_right&#32;-&#32;(__chunk_size&#32;-&#32;1);
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
165 
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Swap&#32;as&#32;usual.</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__thread_left&#32;&lt;&#32;__thread_right)
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__pred(__begin[__thread_left])
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__thread_left&#32;&lt;=&#32;__thread_left_border)
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__thread_left;
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!__pred(__begin[__thread_right])
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__thread_right&#32;&gt;=&#32;__thread_right_border)
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--__thread_right;
175 
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_left&#32;&gt;&#32;__thread_left_border
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;__thread_right&#32;&lt;&#32;__thread_right_border)
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fetch&#32;new&#32;chunk(__s).</emphasis>
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
180 
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iter_swap(__begin&#32;+&#32;__thread_left,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin&#32;+&#32;__thread_right);
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__thread_left;
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--__thread_right;
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;swap&#32;the&#32;leftover&#32;chunks&#32;to&#32;the&#32;right&#32;places.</emphasis>
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_left&#32;&lt;=&#32;__thread_left_border)
190 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;atomic</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__leftover_left;
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_right&#32;&gt;=&#32;__thread_right_border)
193 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;atomic</emphasis>
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__leftover_right;
195 
196 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;barrier</emphasis>
197 
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__leftold&#32;=&#32;__left,
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__leftnew&#32;=&#32;__left&#32;-&#32;__leftover_left&#32;*&#32;__chunk_size,
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rightold&#32;=&#32;__right,
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rightnew&#32;=&#32;__right&#32;+&#32;__leftover_right&#32;*&#32;__chunk_size;
203 
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&lt;=&gt;&#32;__thread_left_border&#32;+&#32;(__chunk_size&#32;-&#32;1)&#32;&gt;=&#32;__leftnew</emphasis>
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_left&#32;&lt;=&#32;__thread_left_border
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__thread_left_border&#32;&gt;=&#32;__leftnew)
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Chunk&#32;already&#32;in&#32;place,&#32;reserve&#32;spot.</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reserved_left[(__left&#32;-&#32;(__thread_left_border&#32;+&#32;1))
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;__chunk_size]&#32;=&#32;1;
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
212 
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&lt;=&gt;&#32;__thread_right_border&#32;-&#32;(__chunk_size&#32;-&#32;1)&#32;&lt;=&#32;__rightnew</emphasis>
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_right&#32;&gt;=&#32;__thread_right_border
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__thread_right_border&#32;&lt;=&#32;__rightnew)
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Chunk&#32;already&#32;in&#32;place,&#32;reserve&#32;spot.</emphasis>
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__reserved_right[((__thread_right_border&#32;-&#32;1)&#32;-&#32;__right)
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;__chunk_size]&#32;=&#32;1;
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
221 
222 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;barrier</emphasis>
223 
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_left&#32;&lt;=&#32;__thread_left_border
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__thread_left_border&#32;&lt;&#32;__leftnew)
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;spot&#32;and&#32;swap.</emphasis>
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__swapstart&#32;=&#32;-1;
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;__r&#32;=&#32;0;&#32;__r&#32;&lt;&#32;__leftover_left;&#32;++__r)
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__reserved_left[__r]&#32;==&#32;0
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_namespace____gnu__parallel_1accd4441e0f846fee44966195a91e9e68">__compare_and_swap</link>(&amp;(__reserved_left[__r]),&#32;0,&#32;1))
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__swapstart&#32;=&#32;__leftold&#32;-&#32;(__r&#32;+&#32;1)&#32;*&#32;__chunk_size;
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
236 
237 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__swapstart&#32;!=&#32;-1);
239 <emphasis role="preprocessor">#endif</emphasis>
240 
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ab5c0ba367019a22e04563f7ecbf2f200">std::swap_ranges</link>(__begin&#32;+&#32;__thread_left_border
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(__chunk_size&#32;-&#32;1),
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin&#32;+&#32;__thread_left_border&#32;+&#32;1,
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin&#32;+&#32;__swapstart);
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__thread_right&#32;&gt;=&#32;__thread_right_border
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__thread_right_border&#32;&gt;&#32;__rightnew)
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;spot&#32;and&#32;swap</emphasis>
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__swapstart&#32;=&#32;-1;
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;__r&#32;=&#32;0;&#32;__r&#32;&lt;&#32;__leftover_right;&#32;++__r)
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__reserved_right[__r]&#32;==&#32;0
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_namespace____gnu__parallel_1accd4441e0f846fee44966195a91e9e68">__compare_and_swap</link>(&amp;(__reserved_right[__r]),&#32;0,&#32;1))
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__swapstart&#32;=&#32;__rightold&#32;+&#32;__r&#32;*&#32;__chunk_size&#32;+&#32;1;
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
259 
260 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__swapstart&#32;!=&#32;-1);
262 <emphasis role="preprocessor">#endif</emphasis>
263 
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ab5c0ba367019a22e04563f7ecbf2f200">std::swap_ranges</link>(__begin&#32;+&#32;__thread_right_border,
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin&#32;+&#32;__thread_right_border
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__chunk_size,&#32;__begin&#32;+&#32;__swapstart);
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
268 <emphasis role="preprocessor">#if&#32;_GLIBCXX_PARALLEL_ASSERTIONS</emphasis>
269 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;barrier</emphasis>
270 
271 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;single</emphasis>
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__r&#32;=&#32;0;&#32;__r&#32;&lt;&#32;__leftover_left;&#32;++__r)
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__reserved_left[__r]&#32;==&#32;1);
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__r&#32;=&#32;0;&#32;__r&#32;&lt;&#32;__leftover_right;&#32;++__r)
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h_1acff27ea0a7532ee31661cbd47a95d3de">_GLIBCXX_PARALLEL_ASSERT</link>(__reserved_right[__r]&#32;==&#32;1);
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
278 <emphasis role="preprocessor">#endif</emphasis>
279 
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__left&#32;=&#32;__leftnew;
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__right&#32;=&#32;__rightnew;
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__dist&#32;=&#32;__right&#32;-&#32;__left&#32;+&#32;1;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
284 
285 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;flush(__left,&#32;__right)</emphasis>
286 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;end&#32;&quot;recursion&quot;&#32;//parallel</emphasis>
287 
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__final_left&#32;=&#32;__left,&#32;__final_right&#32;=&#32;__right;
289 
290 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__final_left&#32;&lt;&#32;__final_right)
291 &#32;&#32;&#32;&#32;&#32;&#32;{
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Go&#32;right&#32;until&#32;key&#32;is&#32;geq&#32;than&#32;pivot.</emphasis>
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__pred(__begin[__final_left])
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__final_left&#32;&lt;&#32;__final_right)
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__final_left;
296 
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Go&#32;left&#32;until&#32;key&#32;is&#32;less&#32;than&#32;pivot.</emphasis>
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!__pred(__begin[__final_right])
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__final_left&#32;&lt;&#32;__final_right)
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--__final_right;
301 
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__final_left&#32;==&#32;__final_right)
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iter_swap(__begin&#32;+&#32;__final_left,&#32;__begin&#32;+&#32;__final_right);
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__final_left;
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--__final_right;
307 &#32;&#32;&#32;&#32;&#32;&#32;}
308 
309 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;All&#32;elements&#32;on&#32;the&#32;left&#32;side&#32;are&#32;&lt;&#32;piv,&#32;all&#32;elements&#32;on&#32;the</emphasis>
310 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;right&#32;are&#32;&gt;=&#32;piv</emphasis>
311 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__reserved_left;
312 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__reserved_right;
313 
314 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Element&#32;&quot;between&quot;&#32;__final_left&#32;and&#32;__final_right&#32;might&#32;not&#32;have</emphasis>
315 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;been&#32;regarded&#32;yet</emphasis>
316 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__final_left&#32;&lt;&#32;__n&#32;&amp;&amp;&#32;!__pred(__begin[__final_left]))
317 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Really&#32;swapped.</emphasis>
318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__final_left;
319 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
320 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__final_left&#32;+&#32;1;
321 &#32;&#32;&#32;&#32;}
322 
330 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
331 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;
332 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a1567c37a7562eaee17d13ebda1172586">__parallel_nth_element</link>(_RAIter&#32;__begin,&#32;_RAIter&#32;__nth,&#32;
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;__end,&#32;_Compare&#32;__comp)
334 &#32;&#32;&#32;&#32;{
335 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;_RAIter&gt;&#32;_TraitsType;
336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::value_type&#32;_ValueType;
337 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::difference_type&#32;_DifferenceType;
338 
339 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>(__end&#32;-&#32;__begin)
340 
341 &#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;__split;
342 &#32;&#32;&#32;&#32;&#32;&#32;_RandomNumber&#32;__rng;
343 
344 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Settings&amp;&#32;__s&#32;=&#32;<link linkend="_struct____gnu__parallel_1_1___settings_1adf11d9453707f1145a9e221ab7630bd3">_Settings::get</link>();
345 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__minimum_length&#32;=&#32;std::max&lt;_DifferenceType&gt;(2,
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::max(__s.nth_element_minimal_n,&#32;__s.partition_minimal_n));
347 
348 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Break&#32;if&#32;input&#32;range&#32;to&#32;small.</emphasis>
349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace____gnu__parallel_1a1cbb61a4863a306daa23823d89f9bef1">_SequenceIndex</link><emphasis role="keyword">&gt;</emphasis>(__end&#32;-&#32;__begin)&#32;&gt;=&#32;__minimum_length)
350 &#32;&#32;&#32;&#32;{
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__n&#32;=&#32;__end&#32;-&#32;__begin;
352 
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;__pivot_pos&#32;=&#32;__begin&#32;+&#32;__rng(__n);
354 
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Swap&#32;__pivot_pos&#32;value&#32;to&#32;end.</emphasis>
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__pivot_pos&#32;!=&#32;(__end&#32;-&#32;1))
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iter_swap(__pivot_pos,&#32;__end&#32;-&#32;1);
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pivot_pos&#32;=&#32;__end&#32;-&#32;1;
359 
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_Compare&#32;must&#32;have&#32;first_value_type,&#32;second_value_type,</emphasis>
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;result_type</emphasis>
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_Compare&#32;==</emphasis>
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__gnu_parallel::_Lexicographic&lt;S,&#32;int,</emphasis>
364 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__gnu_parallel::_Less&lt;S,&#32;S&gt;&#32;&gt;</emphasis>
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;__pivot_pos&#32;==&#32;std::pair&lt;S,&#32;int&gt;*</emphasis>
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1____binder2nd">__gnu_parallel::__binder2nd&lt;_Compare, _ValueType, _ValueType, bool&gt;</link>
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pred(__comp,&#32;*__pivot_pos);
368 
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Divide,&#32;leave&#32;pivot&#32;unchanged&#32;in&#32;last&#32;place.</emphasis>
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;__split_pos1,&#32;__split_pos2;
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__split_pos1&#32;=&#32;__begin&#32;+&#32;<link linkend="_namespace____gnu__parallel_1ac870af1d69405f2f53cd7a96e1d92348">__parallel_partition</link>(__begin,&#32;__end&#32;-&#32;1,
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pred,
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa72851b809c2b314bc09580c3512f281">__get_max_threads</link>());
374 
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Left&#32;side:&#32;&lt;&#32;__pivot_pos;&#32;__right&#32;side:&#32;&gt;=&#32;__pivot_pos</emphasis>
376 
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Swap&#32;pivot&#32;back&#32;to&#32;middle.</emphasis>
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__split_pos1&#32;!=&#32;__pivot_pos)
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::iter_swap(__split_pos1,&#32;__pivot_pos);
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pivot_pos&#32;=&#32;__split_pos1;
381 
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In&#32;case&#32;all&#32;elements&#32;are&#32;equal,&#32;__split_pos1&#32;==&#32;0</emphasis>
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__split_pos1&#32;+&#32;1&#32;-&#32;__begin)&#32;&lt;&#32;(__n&#32;&gt;&gt;&#32;7)
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(__end&#32;-&#32;__split_pos1)&#32;&lt;&#32;(__n&#32;&gt;&gt;&#32;7))
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Very&#32;unequal&#32;split,&#32;one&#32;part&#32;smaller&#32;than&#32;one&#32;128th</emphasis>
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;elements&#32;not&#32;strictly&#32;larger&#32;than&#32;the&#32;pivot.</emphasis>
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate</link>&lt;__gnu_parallel::
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__binder1st&lt;_Compare,&#32;_ValueType,
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType,&#32;<emphasis role="keywordtype">bool</emphasis>&gt;,&#32;_ValueType&gt;
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pred(<link linkend="_class____gnu__parallel_1_1____binder1st">__gnu_parallel::__binder1st</link>&lt;_Compare,&#32;_ValueType,
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ValueType,&#32;<emphasis role="keywordtype">bool</emphasis>&gt;(__comp,&#32;*__pivot_pos));
393 
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;other&#32;end&#32;of&#32;pivot-equal&#32;range.</emphasis>
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__split_pos2&#32;=&#32;<link linkend="_namespacestd_1a7dde62cf155d6b5bde1a1c0577a9a57f">__gnu_sequential::partition</link>(__split_pos1&#32;+&#32;1,
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__end,&#32;__pred);
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;skip&#32;the&#32;pivot.</emphasis>
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__split_pos2&#32;=&#32;__split_pos1&#32;+&#32;1;
401 
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compare&#32;iterators.</emphasis>
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__split_pos2&#32;&lt;=&#32;__nth)
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin&#32;=&#32;__split_pos2;
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__nth&#32;&lt;&#32;__split_pos1)
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__end&#32;=&#32;__split_pos1;
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
409 &#32;&#32;&#32;&#32;}
410 
411 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;at&#32;most&#32;_Settings::partition_minimal_n&#32;__elements&#32;__left.</emphasis>
412 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a9aedeebce40e8d85738b1e6f9ba8c919">__gnu_sequential::nth_element</link>(__begin,&#32;__nth,&#32;__end,&#32;__comp);
413 &#32;&#32;&#32;&#32;}
414 
420 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Compare&gt;
421 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
422 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1abe60c5cc3788e1b1602175af0057d3f8">__parallel_partial_sort</link>(_RAIter&#32;__begin,
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;__middle,
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_RAIter&#32;__end,&#32;_Compare&#32;__comp)
425 &#32;&#32;&#32;&#32;{
426 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a1567c37a7562eaee17d13ebda1172586">__parallel_nth_element</link>(__begin,&#32;__middle,&#32;__end,&#32;__comp);
427 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a73a397864aa701b5bd48fae555f4f935">std::sort</link>(__begin,&#32;__middle,&#32;__comp);
428 &#32;&#32;&#32;&#32;}
429 
430 }&#32;<emphasis role="comment">//namespace&#32;__gnu_parallel</emphasis>
431 
432 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_VOLATILE</emphasis>
433 
434 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_PARTITION_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
