<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2raylib_2src_2external_2dr__mp3_8h_source" xml:lang="en-US">
<title>dr_mp3.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/raylib/src/external/dr_mp3.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">MP3&#32;audio&#32;decoder.&#32;Choice&#32;of&#32;public&#32;domain&#32;or&#32;MIT-0.&#32;See&#32;license&#32;statements&#32;at&#32;the&#32;end&#32;of&#32;this&#32;file.</emphasis>
3 <emphasis role="comment">dr_mp3&#32;-&#32;v0.4.7&#32;-&#32;2019-07-28</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">David&#32;Reid&#32;-&#32;mackron@gmail.com</emphasis>
6 <emphasis role="comment"></emphasis>
7 <emphasis role="comment">Based&#32;off&#32;minimp3&#32;(https://github.com/lieff/minimp3)&#32;which&#32;is&#32;where&#32;the&#32;real&#32;work&#32;was&#32;done.&#32;See&#32;the&#32;bottom&#32;of&#32;this&#32;file&#32;for</emphasis>
8 <emphasis role="comment">differences&#32;between&#32;minimp3&#32;and&#32;dr_mp3.</emphasis>
9 <emphasis role="comment">*/</emphasis>
10 
11 <emphasis role="comment">/*</emphasis>
12 <emphasis role="comment">USAGE</emphasis>
13 <emphasis role="comment">=====</emphasis>
14 <emphasis role="comment">dr_mp3&#32;is&#32;a&#32;single-file&#32;library.&#32;To&#32;use&#32;it,&#32;do&#32;something&#32;like&#32;the&#32;following&#32;in&#32;one&#32;.c&#32;file.</emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;&#32;#define&#32;DR_MP3_IMPLEMENTATION</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;&#32;#include&#32;&quot;dr_mp3.h&quot;</emphasis>
17 <emphasis role="comment"></emphasis>
18 <emphasis role="comment">You&#32;can&#32;then&#32;#include&#32;this&#32;file&#32;in&#32;other&#32;parts&#32;of&#32;the&#32;program&#32;as&#32;you&#32;would&#32;with&#32;any&#32;other&#32;header&#32;file.&#32;To&#32;decode&#32;audio&#32;data,</emphasis>
19 <emphasis role="comment">do&#32;something&#32;like&#32;the&#32;following:</emphasis>
20 <emphasis role="comment"></emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3&#32;mp3;</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(!drmp3_init_file(&amp;mp3,&#32;&quot;MySong.mp3&quot;,&#32;NULL))&#32;{</emphasis>
23 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Failed&#32;to&#32;open&#32;file</emphasis>
24 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
25 <emphasis role="comment"></emphasis>
26 <emphasis role="comment">&#32;&#32;&#32;&#32;...</emphasis>
27 <emphasis role="comment"></emphasis>
28 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_uint64&#32;framesRead&#32;=&#32;drmp3_read_pcm_frames_f32(pMP3,&#32;framesToRead,&#32;pFrames);</emphasis>
29 <emphasis role="comment"></emphasis>
30 <emphasis role="comment">The&#32;drmp3&#32;object&#32;is&#32;transparent&#32;so&#32;you&#32;can&#32;get&#32;access&#32;to&#32;the&#32;channel&#32;count&#32;and&#32;sample&#32;rate&#32;like&#32;so:</emphasis>
31 <emphasis role="comment"></emphasis>
32 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_uint32&#32;channels&#32;=&#32;mp3.channels;</emphasis>
33 <emphasis role="comment">&#32;&#32;&#32;&#32;drmp3_uint32&#32;sampleRate&#32;=&#32;mp3.sampleRate;</emphasis>
34 <emphasis role="comment"></emphasis>
35 <emphasis role="comment">The&#32;third&#32;parameter&#32;of&#32;drmp3_init_file()&#32;in&#32;the&#32;example&#32;above&#32;allows&#32;you&#32;to&#32;control&#32;the&#32;output&#32;channel&#32;count&#32;and&#32;sample&#32;rate.&#32;It</emphasis>
36 <emphasis role="comment">is&#32;a&#32;pointer&#32;to&#32;a&#32;drmp3_config&#32;object.&#32;Setting&#32;any&#32;of&#32;the&#32;variables&#32;of&#32;this&#32;object&#32;to&#32;0&#32;will&#32;cause&#32;dr_mp3&#32;to&#32;use&#32;defaults.</emphasis>
37 <emphasis role="comment"></emphasis>
38 <emphasis role="comment">The&#32;example&#32;above&#32;initializes&#32;a&#32;decoder&#32;from&#32;a&#32;file,&#32;but&#32;you&#32;can&#32;also&#32;initialize&#32;it&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;and&#32;read&#32;and&#32;seek</emphasis>
39 <emphasis role="comment">callbacks&#32;with&#32;drmp3_init_memory()&#32;and&#32;drmp3_init()&#32;respectively.</emphasis>
40 <emphasis role="comment"></emphasis>
41 <emphasis role="comment">You&#32;do&#32;not&#32;need&#32;to&#32;do&#32;any&#32;annoying&#32;memory&#32;management&#32;when&#32;reading&#32;PCM&#32;frames&#32;-&#32;this&#32;is&#32;all&#32;managed&#32;internally.&#32;You&#32;can&#32;request</emphasis>
42 <emphasis role="comment">any&#32;number&#32;of&#32;PCM&#32;frames&#32;in&#32;each&#32;call&#32;to&#32;drmp3_read_pcm_frames_f32()&#32;and&#32;it&#32;will&#32;return&#32;as&#32;many&#32;PCM&#32;frames&#32;as&#32;it&#32;can,&#32;up&#32;to&#32;the</emphasis>
43 <emphasis role="comment">requested&#32;amount.</emphasis>
44 <emphasis role="comment"></emphasis>
45 <emphasis role="comment">You&#32;can&#32;also&#32;decode&#32;an&#32;entire&#32;file&#32;in&#32;one&#32;go&#32;with&#32;drmp3_open_and_read_f32(),&#32;drmp3_open_memory_and_read_f32()&#32;and</emphasis>
46 <emphasis role="comment">drmp3_open_file_and_read_f32().</emphasis>
47 <emphasis role="comment"></emphasis>
48 <emphasis role="comment"></emphasis>
49 <emphasis role="comment">OPTIONS</emphasis>
50 <emphasis role="comment">=======</emphasis>
51 <emphasis role="comment">#define&#32;these&#32;options&#32;before&#32;including&#32;this&#32;file.</emphasis>
52 <emphasis role="comment"></emphasis>
53 <emphasis role="comment">#define&#32;DR_MP3_NO_STDIO</emphasis>
54 <emphasis role="comment">&#32;&#32;Disable&#32;drmp3_init_file(),&#32;etc.</emphasis>
55 <emphasis role="comment"></emphasis>
56 <emphasis role="comment">#define&#32;DR_MP3_NO_SIMD</emphasis>
57 <emphasis role="comment">&#32;&#32;Disable&#32;SIMD&#32;optimizations.</emphasis>
58 <emphasis role="comment">*/</emphasis>
59 
60 <emphasis role="preprocessor">#ifndef&#32;dr_mp3_h</emphasis>
61 <emphasis role="preprocessor">#define&#32;dr_mp3_h</emphasis>
62 
63 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
64 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
65 <emphasis role="preprocessor">#endif</emphasis>
66 
67 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
68 
69 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&lt;&#32;1600</emphasis>
70 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2fe2d0be80c5655718c7e481db502507">drmp3_int8</link>;
71 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>;
72 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>;
73 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>;
74 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>;
75 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>;
76 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;__int64&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad097358cee4d2778ab515253fcf26dbc">drmp3_int64</link>;
77 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;__int64&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>;
78 <emphasis role="preprocessor">#else</emphasis>
79 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
80 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aef44329758059c91c76d334e8fc09700">int8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2fe2d0be80c5655718c7e481db502507">drmp3_int8</link>;
81 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>;
82 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a269259c924dce846340ddbb810db2e3c">int16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>;
83 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>;
84 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>;
85 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>;
86 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad097358cee4d2778ab515253fcf26dbc">drmp3_int64</link>;
87 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>;
88 <emphasis role="preprocessor">#endif</emphasis>
89 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a9cfa15ddd9b04c15cd974691768a3b01">drmp3_bool8</link>;
90 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>;
91 <emphasis role="preprocessor">#define&#32;DRMP3_TRUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
92 <emphasis role="preprocessor">#define&#32;DRMP3_FALSE&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
93 
94 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME&#32;&#32;1152</emphasis>
95 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_SAMPLES_PER_FRAME&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME*2)</emphasis>
96 
97 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
98 <emphasis role="preprocessor">#define&#32;DRMP3_INLINE&#32;__forceinline</emphasis>
99 <emphasis role="preprocessor">#else</emphasis>
100 <emphasis role="preprocessor">#ifdef&#32;__GNUC__</emphasis>
101 <emphasis role="preprocessor">#define&#32;DRMP3_INLINE&#32;__inline__&#32;__attribute__((always_inline))</emphasis>
102 <emphasis role="preprocessor">#else</emphasis>
103 <emphasis role="preprocessor">#define&#32;DRMP3_INLINE</emphasis>
104 <emphasis role="preprocessor">#endif</emphasis>
105 <emphasis role="preprocessor">#endif</emphasis>
106 
107 <emphasis role="comment">/*</emphasis>
108 <emphasis role="comment">Low&#32;Level&#32;Push&#32;API</emphasis>
109 <emphasis role="comment">==================</emphasis>
110 <emphasis role="comment">*/</emphasis>
111 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
112 {
113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes,&#32;channels,&#32;hz,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;bitrate_kbps;
114 }&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>;
115 
116 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
117 {
118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mdct_overlap[2][9*32],&#32;qmf_state[15*2*32];
119 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;reserv,&#32;free_format_bytes;
120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;header[4],&#32;reserv_buf[511];
121 }&#32;<link linkend="_structdrmp3dec">drmp3dec</link>;
122 
123 <emphasis role="comment">/*&#32;Initializes&#32;a&#32;low&#32;level&#32;decoder.&#32;*/</emphasis>
124 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec);
125 
126 <emphasis role="comment">/*&#32;Reads&#32;a&#32;frame&#32;from&#32;a&#32;low&#32;level&#32;decoder.&#32;*/</emphasis>
127 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*mp3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pcm,&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;*info);
128 
129 <emphasis role="comment">/*&#32;Helper&#32;for&#32;converting&#32;between&#32;f32&#32;and&#32;s16.&#32;*/</emphasis>
130 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1abe41d7ed1ca280315620335435a62c32">drmp3dec_f32_to_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_samples);
131 
132 
133 
134 <emphasis role="comment">/*</emphasis>
135 <emphasis role="comment">Main&#32;API&#32;(Pull&#32;API)</emphasis>
136 <emphasis role="comment">===================</emphasis>
137 <emphasis role="comment">*/</emphasis>
138 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_DEFAULT_CHANNELS</emphasis>
139 <emphasis role="preprocessor">#define&#32;DR_MP3_DEFAULT_CHANNELS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2</emphasis>
140 <emphasis role="preprocessor">#endif</emphasis>
141 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_DEFAULT_SAMPLE_RATE</emphasis>
142 <emphasis role="preprocessor">#define&#32;DR_MP3_DEFAULT_SAMPLE_RATE&#32;&#32;&#32;&#32;&#32;&#32;44100</emphasis>
143 <emphasis role="preprocessor">#endif</emphasis>
144 
145 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structdrmp3__src">drmp3_src</link>&#32;<link linkend="_structdrmp3__src">drmp3_src</link>;
146 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;(*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1ae95043c5da00d21eb88d7cac6f65426c">drmp3_src_read_proc</link>)(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_structdrmp3__src_1afddcfd380c27d286ce319436e56d60b4">pUserData</link>);&#32;<emphasis role="comment">/*&#32;Returns&#32;the&#32;number&#32;of&#32;frames&#32;that&#32;were&#32;read.&#32;*/</emphasis>
147 
148 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
149 {
150 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434a09177d8335c207946f702b52b93eb327">drmp3_src_algorithm_none</link>,
151 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434a2debd8b888639f1fb5ebb36432b23ee0">drmp3_src_algorithm_linear</link>
152 }&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434">drmp3_src_algorithm</link>;
153 
154 <emphasis role="preprocessor">#define&#32;DRMP3_SRC_CACHE_SIZE_IN_FRAMES&#32;&#32;&#32;&#32;512</emphasis>
155 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
156 {
157 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC;
158 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pCachedFrames[2&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a75493ea556f352c50f2faab324c0893d">DRMP3_SRC_CACHE_SIZE_IN_FRAMES</link>];
159 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;cachedFrameCount;
160 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iNextFrame;
161 }&#32;<link linkend="_structdrmp3__src__cache">drmp3_src_cache</link>;
162 
163 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
164 {
165 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRateIn;
166 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRateOut;
167 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;channels;
168 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434">drmp3_src_algorithm</link>&#32;algorithm;
169 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;cacheSizeInFrames;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;frames&#32;to&#32;read&#32;from&#32;the&#32;client&#32;at&#32;a&#32;time.&#32;*/</emphasis>
170 }&#32;<link linkend="_structdrmp3__src__config">drmp3_src_config</link>;
171 
172 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structdrmp3__src">drmp3_src</link>
173 {
174 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__src__config">drmp3_src_config</link>&#32;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>;
175 &#32;&#32;&#32;&#32;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1ae95043c5da00d21eb88d7cac6f65426c">drmp3_src_read_proc</link>&#32;<link linkend="_structdrmp3__src_1af2cdb6236330db903def504c2a1681ba">onRead</link>;
176 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_structdrmp3__src_1afddcfd380c27d286ce319436e56d60b4">pUserData</link>;
177 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>[256];
178 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__src__cache">drmp3_src_cache</link>&#32;<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;For&#32;simplifying&#32;and&#32;optimizing&#32;client&#32;-&gt;&#32;memory&#32;reading.&#32;*/</emphasis>
179 &#32;&#32;&#32;&#32;<emphasis role="keyword">union</emphasis>
180 &#32;&#32;&#32;&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>;
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>&#32;:&#32;1;
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>&#32;:&#32;1;
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>;
187 &#32;&#32;&#32;&#32;}&#32;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>;
188 };
189 
190 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
191 {
192 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>,
193 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>
194 }&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>;
195 
196 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
197 {
198 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;seekPosInBytes;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Points&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;an&#32;MP3&#32;frame.&#32;*/</emphasis>
199 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFrameIndex;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;index&#32;of&#32;the&#32;PCM&#32;frame&#32;this&#32;seek&#32;point&#32;targets.&#32;*/</emphasis>
200 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;mp3FramesToDiscard;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;whole&#32;MP3&#32;frames&#32;to&#32;be&#32;discarded&#32;before&#32;pcmFramesToDiscard.&#32;*/</emphasis>
201 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;pcmFramesToDiscard;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;leading&#32;samples&#32;to&#32;read&#32;and&#32;discard.&#32;These&#32;are&#32;discarded&#32;after&#32;mp3FramesToDiscard.&#32;*/</emphasis>
202 }&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>;
203 
204 <emphasis role="comment">/*</emphasis>
205 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;is&#32;read.&#32;Return&#32;value&#32;is&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
206 <emphasis role="comment"></emphasis>
207 <emphasis role="comment">pUserData&#32;&#32;&#32;[in]&#32;&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drmp3_init(),&#32;drmp3_open()&#32;and&#32;family.</emphasis>
208 <emphasis role="comment">pBufferOut&#32;&#32;[out]&#32;The&#32;output&#32;buffer.</emphasis>
209 <emphasis role="comment">bytesToRead&#32;[in]&#32;&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;read.</emphasis>
210 <emphasis role="comment"></emphasis>
211 <emphasis role="comment">Returns&#32;the&#32;number&#32;of&#32;bytes&#32;actually&#32;read.</emphasis>
212 <emphasis role="comment"></emphasis>
213 <emphasis role="comment">A&#32;return&#32;value&#32;of&#32;less&#32;than&#32;bytesToRead&#32;indicates&#32;the&#32;end&#32;of&#32;the&#32;stream.&#32;Do&#32;_not_&#32;return&#32;from&#32;this&#32;callback&#32;until</emphasis>
214 <emphasis role="comment">either&#32;the&#32;entire&#32;bytesToRead&#32;is&#32;filled&#32;or&#32;you&#32;have&#32;reached&#32;the&#32;end&#32;of&#32;the&#32;stream.</emphasis>
215 <emphasis role="comment">*/</emphasis>
216 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead);
217 
218 <emphasis role="comment">/*</emphasis>
219 <emphasis role="comment">Callback&#32;for&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;seeked.</emphasis>
220 <emphasis role="comment"></emphasis>
221 <emphasis role="comment">pUserData&#32;[in]&#32;The&#32;user&#32;data&#32;that&#32;was&#32;passed&#32;to&#32;drmp3_init(),&#32;drmp3_open()&#32;and&#32;family.</emphasis>
222 <emphasis role="comment">offset&#32;&#32;&#32;&#32;[in]&#32;The&#32;number&#32;of&#32;bytes&#32;to&#32;move,&#32;relative&#32;to&#32;the&#32;origin.&#32;Will&#32;never&#32;be&#32;negative.</emphasis>
223 <emphasis role="comment">origin&#32;&#32;&#32;&#32;[in]&#32;The&#32;origin&#32;of&#32;the&#32;seek&#32;-&#32;the&#32;current&#32;position&#32;or&#32;the&#32;start&#32;of&#32;the&#32;stream.</emphasis>
224 <emphasis role="comment"></emphasis>
225 <emphasis role="comment">Returns&#32;whether&#32;or&#32;not&#32;the&#32;seek&#32;was&#32;successful.</emphasis>
226 <emphasis role="comment"></emphasis>
227 <emphasis role="comment">Whether&#32;or&#32;not&#32;it&#32;is&#32;relative&#32;to&#32;the&#32;beginning&#32;or&#32;current&#32;position&#32;is&#32;determined&#32;by&#32;the&#32;&quot;origin&quot;&#32;parameter&#32;which</emphasis>
228 <emphasis role="comment">will&#32;be&#32;either&#32;drmp3_seek_origin_start&#32;or&#32;drmp3_seek_origin_current.</emphasis>
229 <emphasis role="comment">*/</emphasis>
230 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;(*&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>)(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin);
231 
232 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
233 {
234 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;outputChannels;
235 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;outputSampleRate;
236 }&#32;<link linkend="_structdrmp3__config">drmp3_config</link>;
237 
238 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
239 {
240 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3dec">drmp3dec</link>&#32;decoder;
241 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;frameInfo;
242 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;channels;
243 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRate;
244 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead;
245 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek;
246 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData;
247 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;mp3FrameChannels;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;channels&#32;in&#32;the&#32;currently&#32;loaded&#32;MP3&#32;frame.&#32;Internal&#32;use&#32;only.&#32;*/</emphasis>
248 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;mp3FrameSampleRate;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;sample&#32;rate&#32;of&#32;the&#32;currently&#32;loaded&#32;MP3&#32;frame.&#32;Internal&#32;use&#32;only.&#32;*/</emphasis>
249 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesConsumedInMP3Frame;
250 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRemainingInMP3Frame;
251 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;pcmFrames[<emphasis role="keyword">sizeof</emphasis>(float)*<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a7bc707cf672a7623b621d19047cc8584">DRMP3_MAX_SAMPLES_PER_FRAME</link>];&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Multipled&#32;by&#32;sizeof(float)&#32;to&#32;ensure&#32;there&apos;s&#32;enough&#32;room&#32;for&#32;DR_MP3_FLOAT_OUTPUT.&#32;*/</emphasis>
252 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;currentPCMFrame;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;current&#32;PCM&#32;frame,&#32;globally,&#32;based&#32;on&#32;the&#32;output&#32;sample&#32;rate.&#32;Mainly&#32;used&#32;for&#32;seeking.&#32;*/</emphasis>
253 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;streamCursor;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;current&#32;byte&#32;the&#32;decoder&#32;is&#32;sitting&#32;on&#32;in&#32;the&#32;raw&#32;stream.&#32;*/</emphasis>
254 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__src">drmp3_src</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>;
255 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;NULL&#32;by&#32;default.&#32;Set&#32;with&#32;drmp3_bind_seek_table().&#32;Memory&#32;is&#32;owned&#32;by&#32;the&#32;client.&#32;dr_mp3&#32;will&#32;never&#32;attempt&#32;to&#32;free&#32;this&#32;pointer.&#32;*/</emphasis>
256 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;items&#32;in&#32;pSeekPoints.&#32;When&#32;set&#32;to&#32;0&#32;assumes&#32;to&#32;no&#32;seek&#32;table.&#32;Defaults&#32;to&#32;zero.&#32;*/</emphasis>
257 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
258 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;dataCapacity;
259 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pData;
260 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;atEnd&#32;:&#32;1;
261 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
262 &#32;&#32;&#32;&#32;{
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pData;
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;currentReadPos;
266 &#32;&#32;&#32;&#32;}&#32;memory;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;used&#32;for&#32;decoders&#32;that&#32;were&#32;opened&#32;against&#32;a&#32;block&#32;of&#32;memory.&#32;*/</emphasis>
267 }&#32;<link linkend="_structdrmp3">drmp3</link>;
268 
269 <emphasis role="comment">/*</emphasis>
270 <emphasis role="comment">Initializes&#32;an&#32;MP3&#32;decoder.</emphasis>
271 <emphasis role="comment"></emphasis>
272 <emphasis role="comment">onRead&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;data&#32;needs&#32;to&#32;be&#32;read&#32;from&#32;the&#32;client.</emphasis>
273 <emphasis role="comment">onSeek&#32;&#32;&#32;&#32;[in]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;to&#32;call&#32;when&#32;the&#32;read&#32;position&#32;of&#32;the&#32;client&#32;data&#32;needs&#32;to&#32;move.</emphasis>
274 <emphasis role="comment">pUserData&#32;[in,&#32;optional]&#32;A&#32;pointer&#32;to&#32;application&#32;defined&#32;data&#32;that&#32;will&#32;be&#32;passed&#32;to&#32;onRead&#32;and&#32;onSeek.</emphasis>
275 <emphasis role="comment"></emphasis>
276 <emphasis role="comment">Returns&#32;true&#32;if&#32;successful;&#32;false&#32;otherwise.</emphasis>
277 <emphasis role="comment"></emphasis>
278 <emphasis role="comment">Close&#32;the&#32;loader&#32;with&#32;drmp3_uninit().</emphasis>
279 <emphasis role="comment"></emphasis>
280 <emphasis role="comment">See&#32;also:&#32;drmp3_init_file(),&#32;drmp3_init_memory(),&#32;drmp3_uninit()</emphasis>
281 <emphasis role="comment">*/</emphasis>
282 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig);
283 
284 <emphasis role="comment">/*</emphasis>
285 <emphasis role="comment">Initializes&#32;an&#32;MP3&#32;decoder&#32;from&#32;a&#32;block&#32;of&#32;memory.</emphasis>
286 <emphasis role="comment"></emphasis>
287 <emphasis role="comment">This&#32;does&#32;not&#32;create&#32;a&#32;copy&#32;of&#32;the&#32;data.&#32;It&#32;is&#32;up&#32;to&#32;the&#32;application&#32;to&#32;ensure&#32;the&#32;buffer&#32;remains&#32;valid&#32;for</emphasis>
288 <emphasis role="comment">the&#32;lifetime&#32;of&#32;the&#32;drmp3&#32;object.</emphasis>
289 <emphasis role="comment"></emphasis>
290 <emphasis role="comment">The&#32;buffer&#32;should&#32;contain&#32;the&#32;contents&#32;of&#32;the&#32;entire&#32;MP3&#32;file.</emphasis>
291 <emphasis role="comment">*/</emphasis>
292 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig);
293 
294 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
295 <emphasis role="comment">/*</emphasis>
296 <emphasis role="comment">Initializes&#32;an&#32;MP3&#32;decoder&#32;from&#32;a&#32;file.</emphasis>
297 <emphasis role="comment"></emphasis>
298 <emphasis role="comment">This&#32;holds&#32;the&#32;internal&#32;FILE&#32;object&#32;until&#32;drmp3_uninit()&#32;is&#32;called.&#32;Keep&#32;this&#32;in&#32;mind&#32;if&#32;you&apos;re&#32;caching&#32;drmp3</emphasis>
299 <emphasis role="comment">objects&#32;because&#32;the&#32;operating&#32;system&#32;may&#32;restrict&#32;the&#32;number&#32;of&#32;file&#32;handles&#32;an&#32;application&#32;can&#32;have&#32;open&#32;at</emphasis>
300 <emphasis role="comment">any&#32;given&#32;time.</emphasis>
301 <emphasis role="comment">*/</emphasis>
302 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig);
303 <emphasis role="preprocessor">#endif</emphasis>
304 
305 <emphasis role="comment">/*</emphasis>
306 <emphasis role="comment">Uninitializes&#32;an&#32;MP3&#32;decoder.</emphasis>
307 <emphasis role="comment">*/</emphasis>
308 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
309 
310 <emphasis role="comment">/*</emphasis>
311 <emphasis role="comment">Reads&#32;PCM&#32;frames&#32;as&#32;interleaved&#32;32-bit&#32;IEEE&#32;floating&#32;point&#32;PCM.</emphasis>
312 <emphasis role="comment"></emphasis>
313 <emphasis role="comment">Note&#32;that&#32;framesToRead&#32;specifies&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;to&#32;read,&#32;_not_&#32;the&#32;number&#32;of&#32;MP3&#32;frames.</emphasis>
314 <emphasis role="comment">*/</emphasis>
315 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut);
316 
317 <emphasis role="comment">/*</emphasis>
318 <emphasis role="comment">Reads&#32;PCM&#32;frames&#32;as&#32;interleaved&#32;signed&#32;16-bit&#32;integer&#32;PCM.</emphasis>
319 <emphasis role="comment"></emphasis>
320 <emphasis role="comment">Note&#32;that&#32;framesToRead&#32;specifies&#32;the&#32;number&#32;of&#32;PCM&#32;frames&#32;to&#32;read,&#32;_not_&#32;the&#32;number&#32;of&#32;MP3&#32;frames.</emphasis>
321 <emphasis role="comment">*/</emphasis>
322 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pBufferOut);
323 
324 <emphasis role="comment">/*</emphasis>
325 <emphasis role="comment">Seeks&#32;to&#32;a&#32;specific&#32;frame.</emphasis>
326 <emphasis role="comment"></emphasis>
327 <emphasis role="comment">Note&#32;that&#32;this&#32;is&#32;_not_&#32;an&#32;MP3&#32;frame,&#32;but&#32;rather&#32;a&#32;PCM&#32;frame.</emphasis>
328 <emphasis role="comment">*/</emphasis>
329 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex);
330 
331 <emphasis role="comment">/*</emphasis>
332 <emphasis role="comment">Calculates&#32;the&#32;total&#32;number&#32;of&#32;PCM&#32;frames&#32;in&#32;the&#32;MP3&#32;stream.&#32;Cannot&#32;be&#32;used&#32;for&#32;infinite&#32;streams&#32;such&#32;as&#32;internet</emphasis>
333 <emphasis role="comment">radio.&#32;Runs&#32;in&#32;linear&#32;time.&#32;Returns&#32;0&#32;on&#32;error.</emphasis>
334 <emphasis role="comment">*/</emphasis>
335 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8da91a2c2b1659be7393d799fed77754">drmp3_get_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
336 
337 <emphasis role="comment">/*</emphasis>
338 <emphasis role="comment">Calculates&#32;the&#32;total&#32;number&#32;of&#32;MP3&#32;frames&#32;in&#32;the&#32;MP3&#32;stream.&#32;Cannot&#32;be&#32;used&#32;for&#32;infinite&#32;streams&#32;such&#32;as&#32;internet</emphasis>
339 <emphasis role="comment">radio.&#32;Runs&#32;in&#32;linear&#32;time.&#32;Returns&#32;0&#32;on&#32;error.</emphasis>
340 <emphasis role="comment">*/</emphasis>
341 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a51e6dda0eebdefceed1612f20133b765">drmp3_get_mp3_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
342 
343 <emphasis role="comment">/*</emphasis>
344 <emphasis role="comment">Calculates&#32;the&#32;total&#32;number&#32;of&#32;MP3&#32;and&#32;PCM&#32;frames&#32;in&#32;the&#32;MP3&#32;stream.&#32;Cannot&#32;be&#32;used&#32;for&#32;infinite&#32;streams&#32;such&#32;as&#32;internet</emphasis>
345 <emphasis role="comment">radio.&#32;Runs&#32;in&#32;linear&#32;time.&#32;Returns&#32;0&#32;on&#32;error.</emphasis>
346 <emphasis role="comment"></emphasis>
347 <emphasis role="comment">This&#32;is&#32;equivalent&#32;to&#32;calling&#32;drmp3_get_mp3_frame_count()&#32;and&#32;drmp3_get_pcm_frame_count()&#32;except&#32;that&#32;it&apos;s&#32;more&#32;efficient.</emphasis>
348 <emphasis role="comment">*/</emphasis>
349 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pMP3FrameCount,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pPCMFrameCount);
350 
351 <emphasis role="comment">/*</emphasis>
352 <emphasis role="comment">Calculates&#32;the&#32;seekpoints&#32;based&#32;on&#32;PCM&#32;frames.&#32;This&#32;is&#32;slow.</emphasis>
353 <emphasis role="comment"></emphasis>
354 <emphasis role="comment">pSeekpoint&#32;count&#32;is&#32;a&#32;pointer&#32;to&#32;a&#32;uint32&#32;containing&#32;the&#32;seekpoint&#32;count.&#32;On&#32;input&#32;it&#32;contains&#32;the&#32;desired&#32;count.</emphasis>
355 <emphasis role="comment">On&#32;output&#32;it&#32;contains&#32;the&#32;actual&#32;count.&#32;The&#32;reason&#32;for&#32;this&#32;design&#32;is&#32;that&#32;the&#32;client&#32;may&#32;request&#32;too&#32;many</emphasis>
356 <emphasis role="comment">seekpoints,&#32;in&#32;which&#32;case&#32;dr_mp3&#32;will&#32;return&#32;a&#32;corrected&#32;count.</emphasis>
357 <emphasis role="comment"></emphasis>
358 <emphasis role="comment">Note&#32;that&#32;seektable&#32;seeking&#32;is&#32;not&#32;quite&#32;sample&#32;exact&#32;when&#32;the&#32;MP3&#32;stream&#32;contains&#32;inconsistent&#32;sample&#32;rates.</emphasis>
359 <emphasis role="comment">*/</emphasis>
360 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a31caabc58611fdd8d3849be909e0ebc8">drmp3_calculate_seek_points</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pSeekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints);
361 
362 <emphasis role="comment">/*</emphasis>
363 <emphasis role="comment">Binds&#32;a&#32;seek&#32;table&#32;to&#32;the&#32;decoder.</emphasis>
364 <emphasis role="comment"></emphasis>
365 <emphasis role="comment">This&#32;does&#32;_not_&#32;make&#32;a&#32;copy&#32;of&#32;pSeekPoints&#32;-&#32;it&#32;only&#32;references&#32;it.&#32;It&#32;is&#32;up&#32;to&#32;the&#32;application&#32;to&#32;ensure&#32;this</emphasis>
366 <emphasis role="comment">remains&#32;valid&#32;while&#32;it&#32;is&#32;bound&#32;to&#32;the&#32;decoder.</emphasis>
367 <emphasis role="comment"></emphasis>
368 <emphasis role="comment">Use&#32;drmp3_calculate_seek_points()&#32;to&#32;calculate&#32;the&#32;seek&#32;points.</emphasis>
369 <emphasis role="comment">*/</emphasis>
370 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a6fbf417308a71a006881246f9d9b579e">drmp3_bind_seek_table</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints);
371 
372 
373 <emphasis role="comment">/*</emphasis>
374 <emphasis role="comment">Opens&#32;an&#32;decodes&#32;an&#32;entire&#32;MP3&#32;stream&#32;as&#32;a&#32;single&#32;operation.</emphasis>
375 <emphasis role="comment"></emphasis>
376 <emphasis role="comment">pConfig&#32;is&#32;both&#32;an&#32;input&#32;and&#32;output.&#32;On&#32;input&#32;it&#32;contains&#32;what&#32;you&#32;want.&#32;On&#32;output&#32;it&#32;contains&#32;what&#32;you&#32;got.</emphasis>
377 <emphasis role="comment"></emphasis>
378 <emphasis role="comment">Free&#32;the&#32;returned&#32;pointer&#32;with&#32;drmp3_free().</emphasis>
379 <emphasis role="comment">*/</emphasis>
380 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1ac70adaa3017dfb3a860d68f4fcd1f138">drmp3_open_and_read_f32</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount);
381 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1af88b13919f419b7c6a2d1f900d5ec00b">drmp3_open_and_read_s16</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount);
382 
383 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a6b706e9ac5335a488c9712f9ad6cc557">drmp3_open_memory_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount);
384 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1aefc6fde08c26b739097e28cb29962820">drmp3_open_memory_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount);
385 
386 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
387 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a5ad2b2ab69e3e5db02558dc8e4de78a7">drmp3_open_file_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount);
388 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a6c76ae053ea079d20ffd2a8e27eeadef">drmp3_open_file_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount);
389 <emphasis role="preprocessor">#endif</emphasis>
390 
391 <emphasis role="comment">/*</emphasis>
392 <emphasis role="comment">Frees&#32;any&#32;memory&#32;that&#32;was&#32;allocated&#32;by&#32;a&#32;public&#32;drmp3&#32;API.</emphasis>
393 <emphasis role="comment">*/</emphasis>
394 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(<emphasis role="keywordtype">void</emphasis>*&#32;p);
395 
396 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
397 }
398 <emphasis role="preprocessor">#endif</emphasis>
399 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;dr_mp3_h&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
400 
401 
402 <emphasis role="comment">/************************************************************************************************************************************************************</emphasis>
403 <emphasis role="comment">&#32;************************************************************************************************************************************************************</emphasis>
404 <emphasis role="comment"></emphasis>
405 <emphasis role="comment">&#32;IMPLEMENTATION</emphasis>
406 <emphasis role="comment"></emphasis>
407 <emphasis role="comment">&#32;************************************************************************************************************************************************************</emphasis>
408 <emphasis role="comment">&#32;************************************************************************************************************************************************************/</emphasis>
409 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_IMPLEMENTATION</emphasis>
410 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
411 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
412 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>&#32;<emphasis role="comment">/*&#32;For&#32;INT_MAX&#32;*/</emphasis>
413 
414 <emphasis role="comment">/*&#32;Disable&#32;SIMD&#32;when&#32;compiling&#32;with&#32;TCC&#32;for&#32;now.&#32;*/</emphasis>
415 <emphasis role="preprocessor">#if&#32;defined(__TINYC__)</emphasis>
416 <emphasis role="preprocessor">#define&#32;DR_MP3_NO_SIMD</emphasis>
417 <emphasis role="preprocessor">#endif</emphasis>
418 
419 <emphasis role="preprocessor">#define&#32;DRMP3_OFFSET_PTR(p,&#32;offset)&#32;((void*)((drmp3_uint8*)(p)&#32;+&#32;(offset)))</emphasis>
420 
421 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_FREE_FORMAT_FRAME_SIZE&#32;&#32;2304&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;more&#32;than&#32;ISO&#32;spec&apos;s&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
422 <emphasis role="preprocessor">#ifndef&#32;DRMP3_MAX_FRAME_SYNC_MATCHES</emphasis>
423 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_FRAME_SYNC_MATCHES&#32;&#32;&#32;&#32;&#32;&#32;10</emphasis>
424 <emphasis role="preprocessor">#endif</emphasis>
425 
426 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES&#32;&#32;DRMP3_MAX_FREE_FORMAT_FRAME_SIZE&#32;</emphasis><emphasis role="comment">/*&#32;MUST&#32;be&#32;&gt;=&#32;320000/8/32000*1152&#32;=&#32;1440&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
427 
428 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_BITRESERVOIR_BYTES&#32;&#32;&#32;&#32;&#32;&#32;511</emphasis>
429 <emphasis role="preprocessor">#define&#32;DRMP3_SHORT_BLOCK_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2</emphasis>
430 <emphasis role="preprocessor">#define&#32;DRMP3_STOP_BLOCK_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3</emphasis>
431 <emphasis role="preprocessor">#define&#32;DRMP3_MODE_MONO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3</emphasis>
432 <emphasis role="preprocessor">#define&#32;DRMP3_MODE_JOINT_STEREO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
433 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4</emphasis>
434 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_MONO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[3])&#32;&amp;&#32;0xC0)&#32;==&#32;0xC0)</emphasis>
435 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_MS_STEREO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[3])&#32;&amp;&#32;0xE0)&#32;==&#32;0x60)</emphasis>
436 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_FREE_FORMAT(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[2])&#32;&amp;&#32;0xF0)&#32;==&#32;0)</emphasis>
437 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_CRC(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(!((h[1])&#32;&amp;&#32;1))</emphasis>
438 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_PADDING(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[2])&#32;&amp;&#32;0x2)</emphasis>
439 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_MPEG1(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1])&#32;&amp;&#32;0x8)</emphasis>
440 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_NOT_MPEG25(h)&#32;&#32;&#32;&#32;&#32;&#32;((h[1])&#32;&amp;&#32;0x10)</emphasis>
441 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_I_STEREO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[3])&#32;&amp;&#32;0x10)</emphasis>
442 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_TEST_MS_STEREO(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[3])&#32;&amp;&#32;0x20)</emphasis>
443 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_STEREO_MODE(h)&#32;&#32;&#32;&#32;&#32;&#32;(((h[3])&#32;&gt;&gt;&#32;6)&#32;&amp;&#32;3)</emphasis>
444 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_STEREO_MODE_EXT(h)&#32;&#32;(((h[3])&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;3)</emphasis>
445 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_LAYER(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((h[1])&#32;&gt;&gt;&#32;1)&#32;&amp;&#32;3)</emphasis>
446 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_BITRATE(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[2])&#32;&gt;&gt;&#32;4)</emphasis>
447 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_SAMPLE_RATE(h)&#32;&#32;&#32;&#32;&#32;&#32;(((h[2])&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;3)</emphasis>
448 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_GET_MY_SAMPLE_RATE(h)&#32;&#32;&#32;(DRMP3_HDR_GET_SAMPLE_RATE(h)&#32;+&#32;(((h[1]&#32;&gt;&gt;&#32;3)&#32;&amp;&#32;1)&#32;+&#32;((h[1]&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;1))*3)</emphasis>
449 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_FRAME_576(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1]&#32;&amp;&#32;14)&#32;==&#32;2)</emphasis>
450 <emphasis role="preprocessor">#define&#32;DRMP3_HDR_IS_LAYER_1(h)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1]&#32;&amp;&#32;6)&#32;==&#32;6)</emphasis>
451 
452 <emphasis role="preprocessor">#define&#32;DRMP3_BITS_DEQUANTIZER_OUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1</emphasis>
453 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_SCF&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(255&#32;+&#32;DRMP3_BITS_DEQUANTIZER_OUT*4&#32;-&#32;210)</emphasis>
454 <emphasis role="preprocessor">#define&#32;DRMP3_MAX_SCFI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((DRMP3_MAX_SCF&#32;+&#32;3)&#32;&amp;&#32;~3)</emphasis>
455 
456 <emphasis role="preprocessor">#define&#32;DRMP3_MIN(a,&#32;b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((a)&#32;&gt;&#32;(b)&#32;?&#32;(b)&#32;:&#32;(a))</emphasis>
457 <emphasis role="preprocessor">#define&#32;DRMP3_MAX(a,&#32;b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((a)&#32;&lt;&#32;(b)&#32;?&#32;(b)&#32;:&#32;(a))</emphasis>
458 
459 <emphasis role="preprocessor">#if&#32;!defined(DR_MP3_NO_SIMD)</emphasis>
460 
461 <emphasis role="preprocessor">#if&#32;!defined(DR_MP3_ONLY_SIMD)&#32;&amp;&amp;&#32;(defined(_M_X64)&#32;||&#32;defined(_M_ARM64)&#32;||&#32;defined(__x86_64__)&#32;||&#32;defined(__aarch64__))</emphasis>
462 <emphasis role="comment">/*&#32;x64&#32;always&#32;have&#32;SSE2,&#32;arm64&#32;always&#32;have&#32;neon,&#32;no&#32;need&#32;for&#32;generic&#32;code&#32;*/</emphasis>
463 <emphasis role="preprocessor">#define&#32;DR_MP3_ONLY_SIMD</emphasis>
464 <emphasis role="preprocessor">#endif</emphasis>
465 
466 <emphasis role="preprocessor">#if&#32;((defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400)&#32;&amp;&amp;&#32;(defined(_M_IX86)&#32;||&#32;defined(_M_X64)))&#32;||&#32;((defined(__i386__)&#32;||&#32;defined(__x86_64__))&#32;&amp;&amp;&#32;defined(__SSE2__))</emphasis>
467 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
468 <emphasis role="preprocessor">#include&#32;&lt;intrin.h&gt;</emphasis>
469 <emphasis role="preprocessor">#endif</emphasis>
470 <emphasis role="preprocessor">#include&#32;&lt;emmintrin.h&gt;</emphasis>
471 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SSE&#32;1</emphasis>
472 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;1</emphasis>
473 <emphasis role="preprocessor">#define&#32;DRMP3_VSTORE&#32;_mm_storeu_ps</emphasis>
474 <emphasis role="preprocessor">#define&#32;DRMP3_VLD&#32;_mm_loadu_ps</emphasis>
475 <emphasis role="preprocessor">#define&#32;DRMP3_VSET&#32;_mm_set1_ps</emphasis>
476 <emphasis role="preprocessor">#define&#32;DRMP3_VADD&#32;_mm_add_ps</emphasis>
477 <emphasis role="preprocessor">#define&#32;DRMP3_VSUB&#32;_mm_sub_ps</emphasis>
478 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL&#32;_mm_mul_ps</emphasis>
479 <emphasis role="preprocessor">#define&#32;DRMP3_VMAC(a,&#32;x,&#32;y)&#32;_mm_add_ps(a,&#32;_mm_mul_ps(x,&#32;y))</emphasis>
480 <emphasis role="preprocessor">#define&#32;DRMP3_VMSB(a,&#32;x,&#32;y)&#32;_mm_sub_ps(a,&#32;_mm_mul_ps(x,&#32;y))</emphasis>
481 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL_S(x,&#32;s)&#32;&#32;_mm_mul_ps(x,&#32;_mm_set1_ps(s))</emphasis>
482 <emphasis role="preprocessor">#define&#32;DRMP3_VREV(x)&#32;_mm_shuffle_ps(x,&#32;x,&#32;_MM_SHUFFLE(0,&#32;1,&#32;2,&#32;3))</emphasis>
483 <emphasis role="keyword">typedef</emphasis>&#32;__m128&#32;drmp3_f4;
484 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;||&#32;defined(DR_MP3_ONLY_SIMD)</emphasis>
485 <emphasis role="preprocessor">#define&#32;drmp3_cpuid&#32;__cpuid</emphasis>
486 <emphasis role="preprocessor">#else</emphasis>
487 <emphasis role="keyword">static</emphasis>&#32;__inline__&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((always_inline))&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_cpuid(<emphasis role="keywordtype">int</emphasis>&#32;CPUInfo[],&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;InfoType)
488 {
489 <emphasis role="preprocessor">#if&#32;defined(__PIC__)</emphasis>
490 &#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
491 #<emphasis role="keywordflow">if</emphasis>&#32;defined(__x86_64__)
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;push&#32;%%rbx\n&quot;</emphasis>
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;cpuid\n&quot;</emphasis>
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;xchgl&#32;%%ebx,&#32;%1\n&quot;</emphasis>
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;pop&#32;&#32;%%rbx\n&quot;</emphasis>
496 #<emphasis role="keywordflow">else</emphasis>
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;xchgl&#32;%%ebx,&#32;%1\n&quot;</emphasis>
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;cpuid\n&quot;</emphasis>
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;xchgl&#32;%%ebx,&#32;%1\n&quot;</emphasis>
500 #endif
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=a&quot;</emphasis>&#32;(CPUInfo[0]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(CPUInfo[1]),&#32;<emphasis role="stringliteral">&quot;=c&quot;</emphasis>&#32;(CPUInfo[2]),&#32;<emphasis role="stringliteral">&quot;=d&quot;</emphasis>&#32;(CPUInfo[3])
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>&#32;(InfoType));
503 <emphasis role="preprocessor">#else</emphasis>
504 &#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;cpuid&quot;</emphasis>
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=a&quot;</emphasis>&#32;(CPUInfo[0]),&#32;<emphasis role="stringliteral">&quot;=b&quot;</emphasis>&#32;(CPUInfo[1]),&#32;<emphasis role="stringliteral">&quot;=c&quot;</emphasis>&#32;(CPUInfo[2]),&#32;<emphasis role="stringliteral">&quot;=d&quot;</emphasis>&#32;(CPUInfo[3])
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>&#32;(InfoType));
508 <emphasis role="preprocessor">#endif</emphasis>
509 }
510 <emphasis role="preprocessor">#endif</emphasis>
511 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_have_simd()
512 {
513 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
514 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
515 <emphasis role="preprocessor">#else</emphasis>
516 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;g_have_simd;
517 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;CPUInfo[4];
518 <emphasis role="preprocessor">#ifdef&#32;MINIMP3_TEST</emphasis>
519 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;g_counter;
520 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(g_counter++&#32;&gt;&#32;100)
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
522 <emphasis role="preprocessor">#endif</emphasis>
523 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(g_have_simd)
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>;
525 &#32;&#32;&#32;&#32;drmp3_cpuid(CPUInfo,&#32;0);
526 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CPUInfo[0]&#32;&gt;&#32;0)
527 &#32;&#32;&#32;&#32;{
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_cpuid(CPUInfo,&#32;1);
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g_have_simd&#32;=&#32;(CPUInfo[3]&#32;&amp;&#32;(1&#32;&lt;&lt;&#32;26))&#32;+&#32;1;&#32;<emphasis role="comment">/*&#32;SSE2&#32;*/</emphasis>
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_have_simd&#32;-&#32;1;
531 &#32;&#32;&#32;&#32;}
532 
533 <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>:
534 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_have_simd&#32;-&#32;1;
535 <emphasis role="preprocessor">#endif</emphasis>
536 }
537 <emphasis role="preprocessor">#elif&#32;defined(__ARM_NEON)&#32;||&#32;defined(__aarch64__)</emphasis>
538 <emphasis role="preprocessor">#include&#32;&lt;arm_neon.h&gt;</emphasis>
539 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;1</emphasis>
540 <emphasis role="preprocessor">#define&#32;DRMP3_VSTORE&#32;vst1q_f32</emphasis>
541 <emphasis role="preprocessor">#define&#32;DRMP3_VLD&#32;vld1q_f32</emphasis>
542 <emphasis role="preprocessor">#define&#32;DRMP3_VSET&#32;vmovq_n_f32</emphasis>
543 <emphasis role="preprocessor">#define&#32;DRMP3_VADD&#32;vaddq_f32</emphasis>
544 <emphasis role="preprocessor">#define&#32;DRMP3_VSUB&#32;vsubq_f32</emphasis>
545 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL&#32;vmulq_f32</emphasis>
546 <emphasis role="preprocessor">#define&#32;DRMP3_VMAC(a,&#32;x,&#32;y)&#32;vmlaq_f32(a,&#32;x,&#32;y)</emphasis>
547 <emphasis role="preprocessor">#define&#32;DRMP3_VMSB(a,&#32;x,&#32;y)&#32;vmlsq_f32(a,&#32;x,&#32;y)</emphasis>
548 <emphasis role="preprocessor">#define&#32;DRMP3_VMUL_S(x,&#32;s)&#32;&#32;vmulq_f32(x,&#32;vmovq_n_f32(s))</emphasis>
549 <emphasis role="preprocessor">#define&#32;DRMP3_VREV(x)&#32;vcombine_f32(vget_high_f32(vrev64q_f32(x)),&#32;vget_low_f32(vrev64q_f32(x)))</emphasis>
550 <emphasis role="keyword">typedef</emphasis>&#32;float32x4_t&#32;drmp3_f4;
551 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_have_simd()
552 {&#32;&#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;detect&#32;neon&#32;for&#32;!DR_MP3_ONLY_SIMD&#32;*/</emphasis>
553 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
554 }
555 <emphasis role="preprocessor">#else</emphasis>
556 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;0</emphasis>
557 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
558 <emphasis role="preprocessor">#error&#32;DR_MP3_ONLY_SIMD&#32;used,&#32;but&#32;SSE/NEON&#32;not&#32;enabled</emphasis>
559 <emphasis role="preprocessor">#endif</emphasis>
560 <emphasis role="preprocessor">#endif</emphasis>
561 
562 <emphasis role="preprocessor">#else</emphasis>
563 
564 <emphasis role="preprocessor">#define&#32;DRMP3_HAVE_SIMD&#32;0</emphasis>
565 
566 <emphasis role="preprocessor">#endif</emphasis>
567 
568 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
569 {
570 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ad8a8baf08bc0399738960c9259571911">buf</link>;
571 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos,&#32;limit;
572 }&#32;drmp3_bs;
573 
574 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
575 {
576 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scf[3*64];
577 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;total_bands,&#32;stereo_bands,&#32;bitalloc[64],&#32;scfcod[64];
578 }&#32;drmp3_L12_scale_info;
579 
580 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
581 {
582 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;tab_offset,&#32;code_tab_width,&#32;band_count;
583 }&#32;drmp3_L12_subband_alloc;
584 
585 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
586 {
587 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfbtab;
588 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;part_23_length,&#32;big_values,&#32;scalefac_compress;
589 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;global_gain,&#32;block_type,&#32;mixed_block_flag,&#32;n_long_sfb,&#32;n_short_sfb;
590 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;table_select[3],&#32;region_count[3],&#32;subblock_gain[3];
591 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;preflag,&#32;scalefac_scale,&#32;count1_table,&#32;scfsi;
592 }&#32;drmp3_L3_gr_info;
593 
594 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
595 {
596 &#32;&#32;&#32;&#32;drmp3_bs&#32;bs;
597 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;maindata[DRMP3_MAX_BITRESERVOIR_BYTES&#32;+&#32;DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES];
598 &#32;&#32;&#32;&#32;drmp3_L3_gr_info&#32;gr_info[4];
599 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;grbuf[2][576],&#32;scf[40],&#32;syn[18&#32;+&#32;15][2*32];
600 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;ist_pos[2][39];
601 }&#32;drmp3dec_scratch;
602 
603 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_bs_init(drmp3_bs&#32;*bs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes)
604 {
605 &#32;&#32;&#32;&#32;bs-&gt;buf&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
606 &#32;&#32;&#32;&#32;bs-&gt;pos&#32;&#32;&#32;=&#32;0;
607 &#32;&#32;&#32;&#32;bs-&gt;limit&#32;=&#32;bytes*8;
608 }
609 
610 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_bs_get_bits(drmp3_bs&#32;*bs,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
611 {
612 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;next,&#32;cache&#32;=&#32;0,&#32;s&#32;=&#32;bs-&gt;pos&#32;&amp;&#32;7;
613 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;shl&#32;=&#32;n&#32;+&#32;s;
614 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*p&#32;=&#32;bs-&gt;buf&#32;+&#32;(bs-&gt;pos&#32;&gt;&gt;&#32;3);
615 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bs-&gt;pos&#32;+=&#32;n)&#32;&gt;&#32;bs-&gt;limit)
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
617 &#32;&#32;&#32;&#32;next&#32;=&#32;*p++&#32;&amp;&#32;(255&#32;&gt;&gt;&#32;s);
618 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((shl&#32;-=&#32;8)&#32;&gt;&#32;0)
619 &#32;&#32;&#32;&#32;{
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache&#32;|=&#32;next&#32;&lt;&lt;&#32;shl;
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next&#32;=&#32;*p++;
622 &#32;&#32;&#32;&#32;}
623 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cache&#32;|&#32;(next&#32;&gt;&gt;&#32;-shl);
624 }
625 
626 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_valid(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
627 {
628 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h[0]&#32;==&#32;0xff&#32;&amp;&amp;
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h[1]&#32;&amp;&#32;0xF0)&#32;==&#32;0xf0&#32;||&#32;(h[1]&#32;&amp;&#32;0xFE)&#32;==&#32;0xe2)&#32;&amp;&amp;
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_HDR_GET_LAYER(h)&#32;!=&#32;0)&#32;&amp;&amp;
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_HDR_GET_BITRATE(h)&#32;!=&#32;15)&#32;&amp;&amp;
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(DRMP3_HDR_GET_SAMPLE_RATE(h)&#32;!=&#32;3);
633 }
634 
635 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_compare(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h2)
636 {
637 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_hdr_valid(h2)&#32;&amp;&amp;
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h1[1]&#32;^&#32;h2[1])&#32;&amp;&#32;0xFE)&#32;==&#32;0&#32;&amp;&amp;
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((h1[2]&#32;^&#32;h2[2])&#32;&amp;&#32;0x0C)&#32;==&#32;0&#32;&amp;&amp;
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!(DRMP3_HDR_IS_FREE_FORMAT(h1)&#32;^&#32;DRMP3_HDR_IS_FREE_FORMAT(h2));
641 }
642 
643 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;drmp3_hdr_bitrate_kbps(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
644 {
645 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;halfrate[2][3][15]&#32;=&#32;{
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;{&#32;0,4,8,12,16,20,24,28,32,40,48,56,64,72,80&#32;},&#32;{&#32;0,4,8,12,16,20,24,28,32,40,48,56,64,72,80&#32;},&#32;{&#32;0,16,24,28,32,40,48,56,64,72,80,88,96,112,128&#32;}&#32;},
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;{&#32;0,16,20,24,28,32,40,48,56,64,80,96,112,128,160&#32;},&#32;{&#32;0,16,24,28,32,40,48,56,64,80,96,112,128,160,192&#32;},&#32;{&#32;0,16,32,48,64,80,96,112,128,144,160,176,192,208,224&#32;}&#32;},
648 &#32;&#32;&#32;&#32;};
649 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2*halfrate[!!DRMP3_HDR_TEST_MPEG1(h)][DRMP3_HDR_GET_LAYER(h)&#32;-&#32;1][DRMP3_HDR_GET_BITRATE(h)];
650 }
651 
652 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;drmp3_hdr_sample_rate_hz(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
653 {
654 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;g_hz[3]&#32;=&#32;{&#32;44100,&#32;48000,&#32;32000&#32;};
655 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_hz[DRMP3_HDR_GET_SAMPLE_RATE(h)]&#32;&gt;&gt;&#32;(int)!DRMP3_HDR_TEST_MPEG1(h)&#32;&gt;&gt;&#32;(int)!DRMP3_HDR_TEST_NOT_MPEG25(h);
656 }
657 
658 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;drmp3_hdr_frame_samples(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
659 {
660 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DRMP3_HDR_IS_LAYER_1(h)&#32;?&#32;384&#32;:&#32;(1152&#32;&gt;&gt;&#32;(int)DRMP3_HDR_IS_FRAME_576(h));
661 }
662 
663 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_frame_bytes(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;free_format_size)
664 {
665 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes&#32;=&#32;drmp3_hdr_frame_samples(h)*drmp3_hdr_bitrate_kbps(h)*125/drmp3_hdr_sample_rate_hz(h);
666 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_LAYER_1(h))
667 &#32;&#32;&#32;&#32;{
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_bytes&#32;&amp;=&#32;~3;&#32;<emphasis role="comment">/*&#32;slot&#32;align&#32;*/</emphasis>
669 &#32;&#32;&#32;&#32;}
670 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frame_bytes&#32;?&#32;frame_bytes&#32;:&#32;free_format_size;
671 }
672 
673 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_hdr_padding(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*h)
674 {
675 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DRMP3_HDR_TEST_PADDING(h)&#32;?&#32;(DRMP3_HDR_IS_LAYER_1(h)&#32;?&#32;4&#32;:&#32;1)&#32;:&#32;0;
676 }
677 
678 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_ONLY_MP3</emphasis>
679 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;*drmp3_L12_subband_alloc_table(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;drmp3_L12_scale_info&#32;*sci)
680 {
681 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;*alloc;
682 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;DRMP3_HDR_GET_STEREO_MODE(hdr);
683 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands,&#32;stereo_bands&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;DRMP3_MODE_MONO)&#32;?&#32;0&#32;:&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;DRMP3_MODE_JOINT_STEREO)&#32;?&#32;(DRMP3_HDR_GET_STEREO_MODE_EXT(hdr)&#32;&lt;&lt;&#32;2)&#32;+&#32;4&#32;:&#32;32;
684 
685 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_LAYER_1(hdr))
686 &#32;&#32;&#32;&#32;{
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L1[]&#32;=&#32;{&#32;{&#32;76,&#32;4,&#32;32&#32;}&#32;};
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L1;
689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;32;
690 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!DRMP3_HDR_TEST_MPEG1(hdr))
691 &#32;&#32;&#32;&#32;{
692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L2M2[]&#32;=&#32;{&#32;{&#32;60,&#32;4,&#32;4&#32;},&#32;{&#32;44,&#32;3,&#32;7&#32;},&#32;{&#32;44,&#32;2,&#32;19&#32;}&#32;};
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L2M2;
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;30;
695 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
696 &#32;&#32;&#32;&#32;{
697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L2M1[]&#32;=&#32;{&#32;{&#32;0,&#32;4,&#32;3&#32;},&#32;{&#32;16,&#32;4,&#32;8&#32;},&#32;{&#32;32,&#32;3,&#32;12&#32;},&#32;{&#32;40,&#32;2,&#32;7&#32;}&#32;};
698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sample_rate_idx&#32;=&#32;DRMP3_HDR_GET_SAMPLE_RATE(hdr);
699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;kbps&#32;=&#32;drmp3_hdr_bitrate_kbps(hdr)&#32;&gt;&gt;&#32;(int)(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;!=&#32;DRMP3_MODE_MONO);
700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!kbps)&#32;<emphasis role="comment">/*&#32;free-format&#32;*/</emphasis>
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kbps&#32;=&#32;192;
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
704 
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L2M1;
706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;27;
707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kbps&#32;&lt;&#32;56)
708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;g_alloc_L2M1_lowrate[]&#32;=&#32;{&#32;{&#32;44,&#32;4,&#32;2&#32;},&#32;{&#32;44,&#32;3,&#32;10&#32;}&#32;};
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alloc&#32;=&#32;g_alloc_L2M1_lowrate;
711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;sample_rate_idx&#32;==&#32;2&#32;?&#32;12&#32;:&#32;8;
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kbps&#32;&gt;=&#32;96&#32;&amp;&amp;&#32;sample_rate_idx&#32;!=&#32;1)
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbands&#32;=&#32;30;
715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
716 &#32;&#32;&#32;&#32;}
717 
718 &#32;&#32;&#32;&#32;sci-&gt;total_bands&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)nbands;
719 &#32;&#32;&#32;&#32;sci-&gt;stereo_bands&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)DRMP3_MIN(stereo_bands,&#32;nbands);
720 
721 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;alloc;
722 }
723 
724 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L12_read_scalefactors(drmp3_bs&#32;*bs,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*pba,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scfcod,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bands,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf)
725 {
726 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_deq_L12[18*3]&#32;=&#32;{
727 <emphasis role="preprocessor">#define&#32;DRMP3_DQ(x)&#32;9.53674316e-07f/x,&#32;7.56931807e-07f/x,&#32;6.00777173e-07f/x</emphasis>
728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DQ(3),DRMP3_DQ(7),DRMP3_DQ(15),DRMP3_DQ(31),DRMP3_DQ(63),DRMP3_DQ(127),DRMP3_DQ(255),DRMP3_DQ(511),DRMP3_DQ(1023),DRMP3_DQ(2047),DRMP3_DQ(4095),DRMP3_DQ(8191),DRMP3_DQ(16383),DRMP3_DQ(32767),DRMP3_DQ(65535),DRMP3_DQ(3),DRMP3_DQ(5),DRMP3_DQ(9)
729 &#32;&#32;&#32;&#32;};
730 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;m;
731 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bands;&#32;i++)
732 &#32;&#32;&#32;&#32;{
733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s&#32;=&#32;0;
734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ba&#32;=&#32;*pba++;
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacemask">mask</link>&#32;=&#32;ba&#32;?&#32;4&#32;+&#32;((19&#32;&gt;&gt;&#32;scfcod[i])&#32;&amp;&#32;3)&#32;:&#32;0;
736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(m&#32;=&#32;4;&#32;m;&#32;m&#32;&gt;&gt;=&#32;1)
737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacemask">mask</link>&#32;&amp;&#32;m)
739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;drmp3_bs_get_bits(bs,&#32;6);
741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;g_deq_L12[ba*3&#32;-&#32;6&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;%&#32;3]*(1&#32;&lt;&lt;&#32;21&#32;&gt;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>/3);
742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*scf++&#32;=&#32;s;
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
745 &#32;&#32;&#32;&#32;}
746 }
747 
748 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L12_read_scale_info(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;drmp3_bs&#32;*bs,&#32;drmp3_L12_scale_info&#32;*sci)
749 {
750 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_bitalloc_code_tab[]&#32;=&#32;{
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,&#32;3,&#32;4,&#32;5,6,7,&#32;8,9,10,11,12,13,14,15,16,
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,&#32;3,19,4,5,&#32;6,7,&#32;8,&#32;9,10,11,12,13,16,
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,&#32;3,19,4,5,16,
754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,16,
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,19,&#32;4,5,6,&#32;7,8,&#32;9,10,11,12,13,14,15,
756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,17,18,&#32;3,19,4,5,&#32;6,7,&#32;8,&#32;9,10,11,12,13,14,
757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;2,&#32;3,&#32;4,&#32;5,6,7,&#32;8,9,10,11,12,13,14,15,16
758 &#32;&#32;&#32;&#32;};
759 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L12_subband_alloc&#32;*subband_alloc&#32;=&#32;drmp3_L12_subband_alloc_table(hdr,&#32;sci);
760 
761 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k&#32;=&#32;0,&#32;ba_bits&#32;=&#32;0;
762 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ba_code_tab&#32;=&#32;g_bitalloc_code_tab;
763 
764 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sci-&gt;total_bands;&#32;i++)
765 &#32;&#32;&#32;&#32;{
766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;ba;
767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;k)
768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;subband_alloc-&gt;band_count;
770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba_bits&#32;=&#32;subband_alloc-&gt;code_tab_width;
771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba_code_tab&#32;=&#32;g_bitalloc_code_tab&#32;+&#32;subband_alloc-&gt;tab_offset;
772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subband_alloc++;
773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba&#32;=&#32;ba_code_tab[drmp3_bs_get_bits(bs,&#32;ba_bits)];
775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;bitalloc[2*i]&#32;=&#32;ba;
776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;sci-&gt;stereo_bands)
777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ba&#32;=&#32;ba_code_tab[drmp3_bs_get_bits(bs,&#32;ba_bits)];
779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;bitalloc[2*i&#32;+&#32;1]&#32;=&#32;sci-&gt;stereo_bands&#32;?&#32;ba&#32;:&#32;0;
781 &#32;&#32;&#32;&#32;}
782 
783 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2*sci-&gt;total_bands;&#32;i++)
784 &#32;&#32;&#32;&#32;{
785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;scfcod[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(sci-&gt;bitalloc[i]&#32;?&#32;DRMP3_HDR_IS_LAYER_1(hdr)&#32;?&#32;2&#32;:&#32;drmp3_bs_get_bits(bs,&#32;2)&#32;:&#32;6);
786 &#32;&#32;&#32;&#32;}
787 
788 &#32;&#32;&#32;&#32;drmp3_L12_read_scalefactors(bs,&#32;sci-&gt;bitalloc,&#32;sci-&gt;scfcod,&#32;sci-&gt;total_bands*2,&#32;sci-&gt;scf);
789 
790 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;sci-&gt;stereo_bands;&#32;i&#32;&lt;&#32;sci-&gt;total_bands;&#32;i++)
791 &#32;&#32;&#32;&#32;{
792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci-&gt;bitalloc[2*i&#32;+&#32;1]&#32;=&#32;0;
793 &#32;&#32;&#32;&#32;}
794 }
795 
796 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_L12_dequantize_granule(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;drmp3_bs&#32;*bs,&#32;drmp3_L12_scale_info&#32;*sci,&#32;<emphasis role="keywordtype">int</emphasis>&#32;group_size)
797 {
798 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j,&#32;k,&#32;choff&#32;=&#32;576;
799 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)
800 &#32;&#32;&#32;&#32;{
801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;grbuf&#32;+&#32;group_size*j;
802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2*sci-&gt;total_bands;&#32;i++)
803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ba&#32;=&#32;sci-&gt;bitalloc[i];
805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ba&#32;!=&#32;0)
806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ba&#32;&lt;&#32;17)
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;half&#32;=&#32;(1&#32;&lt;&lt;&#32;(ba&#32;-&#32;1))&#32;-&#32;1;
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;group_size;&#32;k++)
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k]&#32;=&#32;(float)((<emphasis role="keywordtype">int</emphasis>)drmp3_bs_get_bits(bs,&#32;ba)&#32;-&#32;half);
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>&#32;=&#32;(2&#32;&lt;&lt;&#32;(ba&#32;-&#32;17))&#32;+&#32;1;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;3,&#32;5,&#32;9&#32;*/</emphasis>
817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;code&#32;=&#32;drmp3_bs_get_bits(bs,&#32;mod&#32;+&#32;2&#32;-&#32;(mod&#32;&gt;&gt;&#32;3));&#32;&#32;<emphasis role="comment">/*&#32;5,&#32;7,&#32;10&#32;*/</emphasis>
818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;group_size;&#32;k++,&#32;code&#32;/=&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>)
819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k]&#32;=&#32;(float)((<emphasis role="keywordtype">int</emphasis>)(code&#32;%&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>&#32;-&#32;<link linkend="_group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1">mod</link>/2));
821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+=&#32;choff;
825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;choff&#32;=&#32;18&#32;-&#32;choff;
826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
827 &#32;&#32;&#32;&#32;}
828 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;group_size*4;
829 }
830 
831 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L12_apply_scf_384(drmp3_L12_scale_info&#32;*sci,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>)
832 {
833 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
834 &#32;&#32;&#32;&#32;memcpy(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+&#32;576&#32;+&#32;sci-&gt;stereo_bands*18,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+&#32;sci-&gt;stereo_bands*18,&#32;(sci-&gt;total_bands&#32;-&#32;sci-&gt;stereo_bands)*18*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
835 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;sci-&gt;total_bands;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+=&#32;18,&#32;scf&#32;+=&#32;6)
836 &#32;&#32;&#32;&#32;{
837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;12;&#32;k++)
838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k&#32;+&#32;0]&#32;&#32;&#32;*=&#32;scf[0];
840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[k&#32;+&#32;576]&#32;*=&#32;scf[3];
841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
842 &#32;&#32;&#32;&#32;}
843 }
844 <emphasis role="preprocessor">#endif</emphasis>
845 
846 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_L3_read_side_info(drmp3_bs&#32;*bs,&#32;drmp3_L3_gr_info&#32;*gr,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr)
847 {
848 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_long[8][23]&#32;=&#32;{
849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54,0&#32;},
850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;12,12,12,12,12,12,16,20,24,28,32,40,48,56,64,76,90,2,2,2,2,2,0&#32;},
851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54,0&#32;},
852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,18,22,26,32,38,46,54,62,70,76,36,0&#32;},
853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54,0&#32;},
854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,8,8,10,12,16,20,24,28,34,42,50,54,76,158,0&#32;},
855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,6,8,10,12,16,18,22,28,34,40,46,54,54,192,0&#32;},
856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,8,10,12,16,20,24,30,38,46,56,68,84,102,26,0&#32;}
857 &#32;&#32;&#32;&#32;};
858 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_short[8][40]&#32;=&#32;{
859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;8,8,8,8,8,8,8,8,8,12,12,12,16,16,16,20,20,20,24,24,24,28,28,28,36,36,36,2,2,2,2,2,2,2,2,2,26,26,26,0&#32;},
861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,8,8,8,10,10,10,14,14,14,18,18,18,26,26,26,32,32,32,42,42,42,18,18,18,0&#32;},
862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,32,32,32,44,44,44,12,12,12,0&#32;},
863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,22,22,22,30,30,30,56,56,56,0&#32;},
865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,10,10,10,12,12,12,14,14,14,16,16,16,20,20,20,26,26,26,66,66,66,0&#32;},
866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,8,8,8,12,12,12,16,16,16,20,20,20,26,26,26,34,34,34,42,42,42,12,12,12,0&#32;}
867 &#32;&#32;&#32;&#32;};
868 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_mixed[8][40]&#32;=&#32;{
869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;12,12,12,4,4,4,8,8,8,12,12,12,16,16,16,20,20,20,24,24,24,28,28,28,36,36,36,2,2,2,2,2,2,2,2,2,26,26,26,0&#32;},
871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,14,14,14,18,18,18,26,26,26,32,32,32,42,42,42,18,18,18,0&#32;},
872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,32,32,32,44,44,44,12,12,12,0&#32;},
873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,6,6,6,6,6,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,24,24,24,30,30,30,40,40,40,18,18,18,0&#32;},
874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,18,18,18,22,22,22,30,30,30,56,56,56,0&#32;},
875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,4,4,4,6,6,6,6,6,6,10,10,10,12,12,12,14,14,14,16,16,16,20,20,20,26,26,26,66,66,66,0&#32;},
876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;4,4,4,4,4,4,6,6,4,4,4,6,6,6,8,8,8,12,12,12,16,16,16,20,20,20,26,26,26,34,34,34,42,42,42,12,12,12,0&#32;}
877 &#32;&#32;&#32;&#32;};
878 
879 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;tables,&#32;scfsi&#32;=&#32;0;
880 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;main_data_begin,&#32;part_23_sum&#32;=&#32;0;
881 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;gr_count&#32;=&#32;DRMP3_HDR_IS_MONO(hdr)&#32;?&#32;1&#32;:&#32;2;
882 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sr_idx&#32;=&#32;DRMP3_HDR_GET_MY_SAMPLE_RATE(hdr);&#32;sr_idx&#32;-=&#32;(sr_idx&#32;!=&#32;0);
883 
884 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MPEG1(hdr))
885 &#32;&#32;&#32;&#32;{
886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr_count&#32;*=&#32;2;
887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;main_data_begin&#32;=&#32;drmp3_bs_get_bits(bs,&#32;9);
888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;=&#32;drmp3_bs_get_bits(bs,&#32;7&#32;+&#32;gr_count);
889 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
890 &#32;&#32;&#32;&#32;{
891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;main_data_begin&#32;=&#32;drmp3_bs_get_bits(bs,&#32;8&#32;+&#32;gr_count)&#32;&gt;&gt;&#32;gr_count;
892 &#32;&#32;&#32;&#32;}
893 
894 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
895 &#32;&#32;&#32;&#32;{
896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_MONO(hdr))
897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;&lt;&lt;=&#32;4;
899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;part_23_length&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)drmp3_bs_get_bits(bs,&#32;12);
901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;part_23_sum&#32;+=&#32;gr-&gt;part_23_length;
902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;big_values&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)drmp3_bs_get_bits(bs,&#32;&#32;9);
903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;big_values&#32;&gt;&#32;288)
904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;global_gain&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;8);
908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;scalefac_compress&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)drmp3_bs_get_bits(bs,&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;4&#32;:&#32;9);
909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;sfbtab&#32;=&#32;g_scf_long[sr_idx];
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_long_sfb&#32;&#32;=&#32;22;
911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_short_sfb&#32;=&#32;0;
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_bs_get_bits(bs,&#32;1))
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;block_type&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;2);
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!gr-&gt;block_type)
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;mixed_block_flag&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;1);
920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[0]&#32;=&#32;7;
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[1]&#32;=&#32;255;
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;block_type&#32;==&#32;DRMP3_SHORT_BLOCK_TYPE)
923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;&amp;=&#32;0x0F0F;
925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!gr-&gt;mixed_block_flag)
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[0]&#32;=&#32;8;
928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;sfbtab&#32;=&#32;g_scf_short[sr_idx];
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_long_sfb&#32;=&#32;0;
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_short_sfb&#32;=&#32;39;
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;sfbtab&#32;=&#32;g_scf_mixed[sr_idx];
934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_long_sfb&#32;=&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;8&#32;:&#32;6;
935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;n_short_sfb&#32;=&#32;30;
936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tables&#32;=&#32;drmp3_bs_get_bits(bs,&#32;10);
939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tables&#32;&lt;&lt;=&#32;5;
940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;subblock_gain[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;subblock_gain[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;subblock_gain[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;block_type&#32;=&#32;0;
946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;mixed_block_flag&#32;=&#32;0;
947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tables&#32;=&#32;drmp3_bs_get_bits(bs,&#32;15);
948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;4);
949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;3);
950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;region_count[2]&#32;=&#32;255;
951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;table_select[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(tables&#32;&gt;&gt;&#32;10);
953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;table_select[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)((tables&#32;&gt;&gt;&#32;5)&#32;&amp;&#32;31);
954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;table_select[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)((tables)&#32;&amp;&#32;31);
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;preflag&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;drmp3_bs_get_bits(bs,&#32;1)&#32;:&#32;(gr-&gt;scalefac_compress&#32;&gt;=&#32;500));
956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;scalefac_scale&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;1);
957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;count1_table&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)drmp3_bs_get_bits(bs,&#32;1);
958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr-&gt;scfsi&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)((scfsi&#32;&gt;&gt;&#32;12)&#32;&amp;&#32;15);
959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;&lt;&lt;=&#32;4;
960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gr++;
961 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(--gr_count);
962 
963 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(part_23_sum&#32;+&#32;bs-&gt;pos&#32;&gt;&#32;bs-&gt;limit&#32;+&#32;main_data_begin*8)
964 &#32;&#32;&#32;&#32;{
965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
966 &#32;&#32;&#32;&#32;}
967 
968 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;main_data_begin;
969 }
970 
971 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_read_scalefactors(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf_size,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf_count,&#32;drmp3_bs&#32;*bitbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scfsi)
972 {
973 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
974 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4&#32;&amp;&amp;&#32;scf_count[i];&#32;i++,&#32;scfsi&#32;*=&#32;2)
975 &#32;&#32;&#32;&#32;{
976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;scf_count[i];
977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scfsi&#32;&amp;&#32;8)
978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(scf,&#32;ist_pos,&#32;cnt);
980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;scf_size[i];
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bits)
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(scf,&#32;0,&#32;cnt);
986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(ist_pos,&#32;0,&#32;cnt);
987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_scf&#32;=&#32;(scfsi&#32;&lt;&#32;0)&#32;?&#32;(1&#32;&lt;&lt;&#32;bits)&#32;-&#32;1&#32;:&#32;-1;
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;cnt;&#32;k++)
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;drmp3_bs_get_bits(bitbuf,&#32;bits);
993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ist_pos[k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(s&#32;==&#32;max_scf&#32;?&#32;-1&#32;:&#32;s);
994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf[k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)s;
995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ist_pos&#32;+=&#32;cnt;
999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf&#32;+=&#32;cnt;
1000 &#32;&#32;&#32;&#32;}
1001 &#32;&#32;&#32;&#32;scf[0]&#32;=&#32;scf[1]&#32;=&#32;scf[2]&#32;=&#32;0;
1002 }
1003 
1004 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_L3_ldexp_q2(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;exp_q2)
1005 {
1006 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_expfrac[4]&#32;=&#32;{&#32;9.31322575e-10f,7.83145814e-10f,6.58544508e-10f,5.53767716e-10f&#32;};
1007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>;
1008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1009 &#32;&#32;&#32;&#32;{
1010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;DRMP3_MIN(30*4,&#32;exp_q2);
1011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;*=&#32;g_expfrac[<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&amp;&#32;3]*(1&#32;&lt;&lt;&#32;30&#32;&gt;&gt;&#32;(<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;&gt;&gt;&#32;2));
1012 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((exp_q2&#32;-=&#32;e)&#32;&gt;&#32;0);
1013 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1014 }
1015 
1016 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_decode_scalefactors(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;drmp3_bs&#32;*bs,&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L3_gr_info&#32;*gr,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch)
1017 {
1018 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scf_partitions[3][28]&#32;=&#32;{
1019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;6,5,5,&#32;5,6,5,5,5,6,5,&#32;7,3,11,10,0,0,&#32;7,&#32;7,&#32;7,0,&#32;6,&#32;6,6,3,&#32;8,&#32;8,5,0&#32;},
1020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;8,9,6,12,6,9,9,9,6,9,12,6,15,18,0,0,&#32;6,15,12,0,&#32;6,12,9,6,&#32;6,18,9,0&#32;},
1021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;9,9,6,12,9,9,9,9,9,9,12,6,18,18,0,0,12,12,12,0,12,&#32;9,9,6,15,12,9,0&#32;}
1022 &#32;&#32;&#32;&#32;};
1023 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*scf_partition&#32;=&#32;g_scf_partitions[!!gr-&gt;n_short_sfb&#32;+&#32;!gr-&gt;n_long_sfb];
1024 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;scf_size[4],&#32;iscf[40];
1025 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;scf_shift&#32;=&#32;gr-&gt;scalefac_scale&#32;+&#32;1,&#32;gain_exp,&#32;scfsi&#32;=&#32;gr-&gt;scfsi;
1026 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;gain;
1027 
1028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MPEG1(hdr))
1029 &#32;&#32;&#32;&#32;{
1030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_scfc_decode[16]&#32;=&#32;{&#32;0,1,2,3,&#32;12,5,6,7,&#32;9,10,11,13,&#32;14,15,18,19&#32;};
1031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;part&#32;=&#32;g_scfc_decode[gr-&gt;scalefac_compress];
1032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_size[1]&#32;=&#32;scf_size[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(part&#32;&gt;&gt;&#32;2);
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_size[3]&#32;=&#32;scf_size[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(part&#32;&amp;&#32;3);
1034 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1035 &#32;&#32;&#32;&#32;{
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_mod[6*4]&#32;=&#32;{&#32;5,5,4,4,5,5,4,1,4,3,1,1,5,6,6,1,4,4,4,1,4,3,1,1&#32;};
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;modprod,&#32;sfc,&#32;ist&#32;=&#32;DRMP3_HDR_TEST_I_STEREO(hdr)&#32;&amp;&amp;&#32;ch;
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sfc&#32;=&#32;gr-&gt;scalefac_compress&#32;&gt;&gt;&#32;ist;
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;ist*3*4;&#32;sfc&#32;&gt;=&#32;0;&#32;sfc&#32;-=&#32;modprod,&#32;k&#32;+=&#32;4)
1040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(modprod&#32;=&#32;1,&#32;i&#32;=&#32;3;&#32;i&#32;&gt;=&#32;0;&#32;i--)
1042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_size[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(sfc&#32;/&#32;modprod&#32;%&#32;g_mod[k&#32;+&#32;i]);
1044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modprod&#32;*=&#32;g_mod[k&#32;+&#32;i];
1045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf_partition&#32;+=&#32;k;
1048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scfsi&#32;=&#32;-16;
1049 &#32;&#32;&#32;&#32;}
1050 &#32;&#32;&#32;&#32;drmp3_L3_read_scalefactors(iscf,&#32;ist_pos,&#32;scf_size,&#32;scf_partition,&#32;bs,&#32;scfsi);
1051 
1052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;n_short_sfb)
1053 &#32;&#32;&#32;&#32;{
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sh&#32;=&#32;3&#32;-&#32;scf_shift;
1055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;gr-&gt;n_short_sfb;&#32;i&#32;+=&#32;3)
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;0]&#32;+=&#32;gr-&gt;subblock_gain[0]&#32;&lt;&lt;&#32;sh;
1058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;1]&#32;+=&#32;gr-&gt;subblock_gain[1]&#32;&lt;&lt;&#32;sh;
1059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[gr-&gt;n_long_sfb&#32;+&#32;i&#32;+&#32;2]&#32;+=&#32;gr-&gt;subblock_gain[2]&#32;&lt;&lt;&#32;sh;
1060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1061 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;preflag)
1062 &#32;&#32;&#32;&#32;{
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_preamp[10]&#32;=&#32;{&#32;1,1,1,1,2,2,3,3,3,2&#32;};
1064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;i++)
1065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iscf[11&#32;+&#32;i]&#32;+=&#32;g_preamp[i];
1067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1068 &#32;&#32;&#32;&#32;}
1069 
1070 &#32;&#32;&#32;&#32;gain_exp&#32;=&#32;gr-&gt;global_gain&#32;+&#32;DRMP3_BITS_DEQUANTIZER_OUT*4&#32;-&#32;210&#32;-&#32;(DRMP3_HDR_IS_MS_STEREO(hdr)&#32;?&#32;2&#32;:&#32;0);
1071 &#32;&#32;&#32;&#32;gain&#32;=&#32;drmp3_L3_ldexp_q2(1&#32;&lt;&lt;&#32;(DRMP3_MAX_SCFI/4),&#32;&#32;DRMP3_MAX_SCFI&#32;-&#32;gain_exp);
1072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;(int)(gr-&gt;n_long_sfb&#32;+&#32;gr-&gt;n_short_sfb);&#32;i++)
1073 &#32;&#32;&#32;&#32;{
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scf[i]&#32;=&#32;drmp3_L3_ldexp_q2(gain,&#32;iscf[i]&#32;&lt;&lt;&#32;scf_shift);
1075 &#32;&#32;&#32;&#32;}
1076 }
1077 
1078 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_drmp3_pow43[129&#32;+&#32;16]&#32;=&#32;{
1079 &#32;&#32;&#32;&#32;0,-1,-2.519842f,-4.326749f,-6.349604f,-8.549880f,-10.902724f,-13.390518f,-16.000000f,-18.720754f,-21.544347f,-24.463781f,-27.473142f,-30.567351f,-33.741992f,-36.993181f,
1080 &#32;&#32;&#32;&#32;0,1,2.519842f,4.326749f,6.349604f,8.549880f,10.902724f,13.390518f,16.000000f,18.720754f,21.544347f,24.463781f,27.473142f,30.567351f,33.741992f,36.993181f,40.317474f,43.711787f,47.173345f,50.699631f,54.288352f,57.937408f,61.644865f,65.408941f,69.227979f,73.100443f,77.024898f,81.000000f,85.024491f,89.097188f,93.216975f,97.382800f,101.593667f,105.848633f,110.146801f,114.487321f,118.869381f,123.292209f,127.755065f,132.257246f,136.798076f,141.376907f,145.993119f,150.646117f,155.335327f,160.060199f,164.820202f,169.614826f,174.443577f,179.305980f,184.201575f,189.129918f,194.090580f,199.083145f,204.107210f,209.162385f,214.248292f,219.364564f,224.510845f,229.686789f,234.892058f,240.126328f,245.389280f,250.680604f,256.000000f,261.347174f,266.721841f,272.123723f,277.552547f,283.008049f,288.489971f,293.998060f,299.532071f,305.091761f,310.676898f,316.287249f,321.922592f,327.582707f,333.267377f,338.976394f,344.709550f,350.466646f,356.247482f,362.051866f,367.879608f,373.730522f,379.604427f,385.501143f,391.420496f,397.362314f,403.326427f,409.312672f,415.320884f,421.350905f,427.402579f,433.475750f,439.570269f,445.685987f,451.822757f,457.980436f,464.158883f,470.357960f,476.577530f,482.817459f,489.077615f,495.357868f,501.658090f,507.978156f,514.317941f,520.677324f,527.056184f,533.454404f,539.871867f,546.308458f,552.764065f,559.238575f,565.731879f,572.243870f,578.774440f,585.323483f,591.890898f,598.476581f,605.080431f,611.702349f,618.342238f,625.000000f,631.675540f,638.368763f,645.079578f
1081 };
1082 
1083 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_L3_pow_43(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
1084 {
1085 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;frac;
1086 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacesign">sign</link>,&#32;mult&#32;=&#32;256;
1087 
1088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;129)
1089 &#32;&#32;&#32;&#32;{
1090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_drmp3_pow43[16&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>];
1091 &#32;&#32;&#32;&#32;}
1092 
1093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;1024)
1094 &#32;&#32;&#32;&#32;{
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mult&#32;=&#32;16;
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&lt;=&#32;3;
1097 &#32;&#32;&#32;&#32;}
1098 
1099 &#32;&#32;&#32;&#32;<link linkend="_namespacesign">sign</link>&#32;=&#32;2*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&#32;64;
1100 &#32;&#32;&#32;&#32;frac&#32;=&#32;(float)((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&#32;63)&#32;-&#32;<link linkend="_namespacesign">sign</link>)&#32;/&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&#32;~63)&#32;+&#32;<link linkend="_namespacesign">sign</link>);
1101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g_drmp3_pow43[16&#32;+&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="_namespacesign">sign</link>)&#32;&gt;&gt;&#32;6)]*(1.f&#32;+&#32;frac*((4.f/3)&#32;+&#32;frac*(2.f/9)))*mult;
1102 }
1103 
1104 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_huffman(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>,&#32;drmp3_bs&#32;*bs,&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L3_gr_info&#32;*gr_info,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer3gr_limit)
1105 {
1106 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;tabs[]&#32;=&#32;{&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,
1107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;785,785,785,785,784,784,784,784,513,513,513,513,513,513,513,513,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,
1108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-255,1313,1298,1282,785,785,785,785,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,290,288,
1109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-255,1313,1298,1282,769,769,769,769,529,529,529,529,529,529,529,529,528,528,528,528,528,528,528,528,512,512,512,512,512,512,512,512,290,288,
1110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-253,-318,-351,-367,785,785,785,785,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,819,818,547,547,275,275,275,275,561,560,515,546,289,274,288,258,
1111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-254,-287,1329,1299,1314,1312,1057,1057,1042,1042,1026,1026,784,784,784,784,529,529,529,529,529,529,529,529,769,769,769,769,768,768,768,768,563,560,306,306,291,259,
1112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-252,-413,-477,-542,1298,-575,1041,1041,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-383,-399,1107,1092,1106,1061,849,849,789,789,1104,1091,773,773,1076,1075,341,340,325,309,834,804,577,577,532,532,516,516,832,818,803,816,561,561,531,531,515,546,289,289,288,258,
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-252,-429,-493,-559,1057,1057,1042,1042,529,529,529,529,529,529,529,529,784,784,784,784,769,769,769,769,512,512,512,512,512,512,512,512,-382,1077,-415,1106,1061,1104,849,849,789,789,1091,1076,1029,1075,834,834,597,581,340,340,339,324,804,833,532,532,832,772,818,803,817,787,816,771,290,290,290,290,288,258,
1114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-253,-349,-414,-447,-463,1329,1299,-479,1314,1312,1057,1057,1042,1042,1026,1026,785,785,785,785,784,784,784,784,769,769,769,769,768,768,768,768,-319,851,821,-335,836,850,805,849,341,340,325,336,533,533,579,579,564,564,773,832,578,548,563,516,321,276,306,291,304,259,
1115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-251,-572,-733,-830,-863,-879,1041,1041,784,784,784,784,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-511,-527,-543,1396,1351,1381,1366,1395,1335,1380,-559,1334,1138,1138,1063,1063,1350,1392,1031,1031,1062,1062,1364,1363,1120,1120,1333,1348,881,881,881,881,375,374,359,373,343,358,341,325,791,791,1123,1122,-703,1105,1045,-719,865,865,790,790,774,774,1104,1029,338,293,323,308,-799,-815,833,788,772,818,803,816,322,292,307,320,561,531,515,546,289,274,288,258,
1116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-251,-525,-605,-685,-765,-831,-846,1298,1057,1057,1312,1282,785,785,785,785,784,784,784,784,769,769,769,769,512,512,512,512,512,512,512,512,1399,1398,1383,1367,1382,1396,1351,-511,1381,1366,1139,1139,1079,1079,1124,1124,1364,1349,1363,1333,882,882,882,882,807,807,807,807,1094,1094,1136,1136,373,341,535,535,881,775,867,822,774,-591,324,338,-671,849,550,550,866,864,609,609,293,336,534,534,789,835,773,-751,834,804,308,307,833,788,832,772,562,562,547,547,305,275,560,515,290,290,
1117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-252,-397,-477,-557,-622,-653,-719,-735,-750,1329,1299,1314,1057,1057,1042,1042,1312,1282,1024,1024,785,785,785,785,784,784,784,784,769,769,769,769,-383,1127,1141,1111,1126,1140,1095,1110,869,869,883,883,1079,1109,882,882,375,374,807,868,838,881,791,-463,867,822,368,263,852,837,836,-543,610,610,550,550,352,336,534,534,865,774,851,821,850,805,593,533,579,564,773,832,578,578,548,548,577,577,307,276,306,291,516,560,259,259,
1118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-250,-2107,-2507,-2764,-2909,-2974,-3007,-3023,1041,1041,1040,1040,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-767,-1052,-1213,-1277,-1358,-1405,-1469,-1535,-1550,-1582,-1614,-1647,-1662,-1694,-1726,-1759,-1774,-1807,-1822,-1854,-1886,1565,-1919,-1935,-1951,-1967,1731,1730,1580,1717,-1983,1729,1564,-1999,1548,-2015,-2031,1715,1595,-2047,1714,-2063,1610,-2079,1609,-2095,1323,1323,1457,1457,1307,1307,1712,1547,1641,1700,1699,1594,1685,1625,1442,1442,1322,1322,-780,-973,-910,1279,1278,1277,1262,1276,1261,1275,1215,1260,1229,-959,974,974,989,989,-943,735,478,478,495,463,506,414,-1039,1003,958,1017,927,942,987,957,431,476,1272,1167,1228,-1183,1256,-1199,895,895,941,941,1242,1227,1212,1135,1014,1014,490,489,503,487,910,1013,985,925,863,894,970,955,1012,847,-1343,831,755,755,984,909,428,366,754,559,-1391,752,486,457,924,997,698,698,983,893,740,740,908,877,739,739,667,667,953,938,497,287,271,271,683,606,590,712,726,574,302,302,738,736,481,286,526,725,605,711,636,724,696,651,589,681,666,710,364,467,573,695,466,466,301,465,379,379,709,604,665,679,316,316,634,633,436,436,464,269,424,394,452,332,438,363,347,408,393,448,331,422,362,407,392,421,346,406,391,376,375,359,1441,1306,-2367,1290,-2383,1337,-2399,-2415,1426,1321,-2431,1411,1336,-2447,-2463,-2479,1169,1169,1049,1049,1424,1289,1412,1352,1319,-2495,1154,1154,1064,1064,1153,1153,416,390,360,404,403,389,344,374,373,343,358,372,327,357,342,311,356,326,1395,1394,1137,1137,1047,1047,1365,1392,1287,1379,1334,1364,1349,1378,1318,1363,792,792,792,792,1152,1152,1032,1032,1121,1121,1046,1046,1120,1120,1030,1030,-2895,1106,1061,1104,849,849,789,789,1091,1076,1029,1090,1060,1075,833,833,309,324,532,532,832,772,818,803,561,561,531,560,515,546,289,274,288,258,
1119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-250,-1179,-1579,-1836,-1996,-2124,-2253,-2333,-2413,-2477,-2542,-2574,-2607,-2622,-2655,1314,1313,1298,1312,1282,785,785,785,785,1040,1040,1025,1025,768,768,768,768,-766,-798,-830,-862,-895,-911,-927,-943,-959,-975,-991,-1007,-1023,-1039,-1055,-1070,1724,1647,-1103,-1119,1631,1767,1662,1738,1708,1723,-1135,1780,1615,1779,1599,1677,1646,1778,1583,-1151,1777,1567,1737,1692,1765,1722,1707,1630,1751,1661,1764,1614,1736,1676,1763,1750,1645,1598,1721,1691,1762,1706,1582,1761,1566,-1167,1749,1629,767,766,751,765,494,494,735,764,719,749,734,763,447,447,748,718,477,506,431,491,446,476,461,505,415,430,475,445,504,399,460,489,414,503,383,474,429,459,502,502,746,752,488,398,501,473,413,472,486,271,480,270,-1439,-1455,1357,-1471,-1487,-1503,1341,1325,-1519,1489,1463,1403,1309,-1535,1372,1448,1418,1476,1356,1462,1387,-1551,1475,1340,1447,1402,1386,-1567,1068,1068,1474,1461,455,380,468,440,395,425,410,454,364,467,466,464,453,269,409,448,268,432,1371,1473,1432,1417,1308,1460,1355,1446,1459,1431,1083,1083,1401,1416,1458,1445,1067,1067,1370,1457,1051,1051,1291,1430,1385,1444,1354,1415,1400,1443,1082,1082,1173,1113,1186,1066,1185,1050,-1967,1158,1128,1172,1097,1171,1081,-1983,1157,1112,416,266,375,400,1170,1142,1127,1065,793,793,1169,1033,1156,1096,1141,1111,1155,1080,1126,1140,898,898,808,808,897,897,792,792,1095,1152,1032,1125,1110,1139,1079,1124,882,807,838,881,853,791,-2319,867,368,263,822,852,837,866,806,865,-2399,851,352,262,534,534,821,836,594,594,549,549,593,593,533,533,848,773,579,579,564,578,548,563,276,276,577,576,306,291,516,560,305,305,275,259,
1120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-251,-892,-2058,-2620,-2828,-2957,-3023,-3039,1041,1041,1040,1040,769,769,769,769,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,-511,-527,-543,-559,1530,-575,-591,1528,1527,1407,1526,1391,1023,1023,1023,1023,1525,1375,1268,1268,1103,1103,1087,1087,1039,1039,1523,-604,815,815,815,815,510,495,509,479,508,463,507,447,431,505,415,399,-734,-782,1262,-815,1259,1244,-831,1258,1228,-847,-863,1196,-879,1253,987,987,748,-767,493,493,462,477,414,414,686,669,478,446,461,445,474,429,487,458,412,471,1266,1264,1009,1009,799,799,-1019,-1276,-1452,-1581,-1677,-1757,-1821,-1886,-1933,-1997,1257,1257,1483,1468,1512,1422,1497,1406,1467,1496,1421,1510,1134,1134,1225,1225,1466,1451,1374,1405,1252,1252,1358,1480,1164,1164,1251,1251,1238,1238,1389,1465,-1407,1054,1101,-1423,1207,-1439,830,830,1248,1038,1237,1117,1223,1148,1236,1208,411,426,395,410,379,269,1193,1222,1132,1235,1221,1116,976,976,1192,1162,1177,1220,1131,1191,963,963,-1647,961,780,-1663,558,558,994,993,437,408,393,407,829,978,813,797,947,-1743,721,721,377,392,844,950,828,890,706,706,812,859,796,960,948,843,934,874,571,571,-1919,690,555,689,421,346,539,539,944,779,918,873,932,842,903,888,570,570,931,917,674,674,-2575,1562,-2591,1609,-2607,1654,1322,1322,1441,1441,1696,1546,1683,1593,1669,1624,1426,1426,1321,1321,1639,1680,1425,1425,1305,1305,1545,1668,1608,1623,1667,1592,1638,1666,1320,1320,1652,1607,1409,1409,1304,1304,1288,1288,1664,1637,1395,1395,1335,1335,1622,1636,1394,1394,1319,1319,1606,1621,1392,1392,1137,1137,1137,1137,345,390,360,375,404,373,1047,-2751,-2767,-2783,1062,1121,1046,-2799,1077,-2815,1106,1061,789,789,1105,1104,263,355,310,340,325,354,352,262,339,324,1091,1076,1029,1090,1060,1075,833,833,788,788,1088,1028,818,818,803,803,561,561,531,531,816,771,546,546,289,274,288,258,
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-253,-317,-381,-446,-478,-509,1279,1279,-811,-1179,-1451,-1756,-1900,-2028,-2189,-2253,-2333,-2414,-2445,-2511,-2526,1313,1298,-2559,1041,1041,1040,1040,1025,1025,1024,1024,1022,1007,1021,991,1020,975,1019,959,687,687,1018,1017,671,671,655,655,1016,1015,639,639,758,758,623,623,757,607,756,591,755,575,754,559,543,543,1009,783,-575,-621,-685,-749,496,-590,750,749,734,748,974,989,1003,958,988,973,1002,942,987,957,972,1001,926,986,941,971,956,1000,910,985,925,999,894,970,-1071,-1087,-1102,1390,-1135,1436,1509,1451,1374,-1151,1405,1358,1480,1420,-1167,1507,1494,1389,1342,1465,1435,1450,1326,1505,1310,1493,1373,1479,1404,1492,1464,1419,428,443,472,397,736,526,464,464,486,457,442,471,484,482,1357,1449,1434,1478,1388,1491,1341,1490,1325,1489,1463,1403,1309,1477,1372,1448,1418,1433,1476,1356,1462,1387,-1439,1475,1340,1447,1402,1474,1324,1461,1371,1473,269,448,1432,1417,1308,1460,-1711,1459,-1727,1441,1099,1099,1446,1386,1431,1401,-1743,1289,1083,1083,1160,1160,1458,1445,1067,1067,1370,1457,1307,1430,1129,1129,1098,1098,268,432,267,416,266,400,-1887,1144,1187,1082,1173,1113,1186,1066,1050,1158,1128,1143,1172,1097,1171,1081,420,391,1157,1112,1170,1142,1127,1065,1169,1049,1156,1096,1141,1111,1155,1080,1126,1154,1064,1153,1140,1095,1048,-2159,1125,1110,1137,-2175,823,823,1139,1138,807,807,384,264,368,263,868,838,853,791,867,822,852,837,866,806,865,790,-2319,851,821,836,352,262,850,805,849,-2399,533,533,835,820,336,261,578,548,563,577,532,532,832,772,562,562,547,547,305,275,560,515,290,290,288,258&#32;};
1122 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;tab32[]&#32;=&#32;{&#32;130,162,193,209,44,28,76,140,9,9,9,9,9,9,9,9,190,254,222,238,126,94,157,157,109,61,173,205};
1123 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;tab33[]&#32;=&#32;{&#32;252,236,220,204,188,172,156,140,124,108,92,76,60,44,28,12&#32;};
1124 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;tabindex[2*16]&#32;=&#32;{&#32;0,32,64,98,0,132,180,218,292,364,426,538,648,746,0,1126,1460,1460,1460,1460,1460,1460,1460,1460,1842,1842,1842,1842,1842,1842,1842,1842&#32;};
1125 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;g_linbits[]&#32;=&#32;&#32;{&#32;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,6,8,10,13,4,5,6,7,8,9,11,13&#32;};
1126 
1127 <emphasis role="preprocessor">#define&#32;DRMP3_PEEK_BITS(n)&#32;&#32;&#32;&#32;(bs_cache&#32;&gt;&gt;&#32;(32&#32;-&#32;n))</emphasis>
1128 <emphasis role="preprocessor">#define&#32;DRMP3_FLUSH_BITS(n)&#32;&#32;&#32;{&#32;bs_cache&#32;&lt;&lt;=&#32;(n);&#32;bs_sh&#32;+=&#32;(n);&#32;}</emphasis>
1129 <emphasis role="preprocessor">#define&#32;DRMP3_CHECK_BITS&#32;&#32;&#32;&#32;&#32;&#32;while&#32;(bs_sh&#32;&gt;=&#32;0)&#32;{&#32;bs_cache&#32;|=&#32;(drmp3_uint32)*bs_next_ptr++&#32;&lt;&lt;&#32;bs_sh;&#32;bs_sh&#32;-=&#32;8;&#32;}</emphasis>
1130 <emphasis role="preprocessor">#define&#32;DRMP3_BSPOS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((bs_next_ptr&#32;-&#32;bs-&gt;buf)*8&#32;-&#32;24&#32;+&#32;bs_sh)</emphasis>
1131 
1132 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>&#32;=&#32;0.0f;
1133 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ireg&#32;=&#32;0,&#32;big_val_cnt&#32;=&#32;gr_info-&gt;big_values;
1134 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb&#32;=&#32;gr_info-&gt;sfbtab;
1135 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*bs_next_ptr&#32;=&#32;bs-&gt;buf&#32;+&#32;bs-&gt;pos/8;
1136 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;bs_cache&#32;=&#32;(((bs_next_ptr[0]*256u&#32;+&#32;bs_next_ptr[1])*256u&#32;+&#32;bs_next_ptr[2])*256u&#32;+&#32;bs_next_ptr[3])&#32;&lt;&lt;&#32;(bs-&gt;pos&#32;&amp;&#32;7);
1137 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pairs_to_decode,&#32;np,&#32;bs_sh&#32;=&#32;(bs-&gt;pos&#32;&amp;&#32;7)&#32;-&#32;8;
1138 &#32;&#32;&#32;&#32;bs_next_ptr&#32;+=&#32;4;
1139 
1140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(big_val_cnt&#32;&gt;&#32;0)
1141 &#32;&#32;&#32;&#32;{
1142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tab_num&#32;=&#32;gr_info-&gt;table_select[ireg];
1143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sfb_cnt&#32;=&#32;gr_info-&gt;region_count[ireg++];
1144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;*codebook&#32;=&#32;tabs&#32;+&#32;tabindex[tab_num];
1145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;linbits&#32;=&#32;g_linbits[tab_num];
1146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(linbits)
1147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np&#32;=&#32;*sfb++&#32;/&#32;2;
1151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pairs_to_decode&#32;=&#32;DRMP3_MIN(big_val_cnt,&#32;np);
1152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>&#32;=&#32;*scf++;
1153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;5;
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)];
1157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(leaf&#32;&lt;&#32;0)
1158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;leaf&#32;&amp;&#32;7;
1161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)&#32;-&#32;(leaf&#32;&gt;&gt;&#32;3)];
1162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(leaf&#32;&gt;&gt;&#32;8);
1164 
1165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++,&#32;dst++,&#32;leaf&#32;&gt;&gt;=&#32;4)
1166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lsb&#32;=&#32;leaf&#32;&amp;&#32;0x0F;
1168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lsb&#32;==&#32;15)
1169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lsb&#32;+=&#32;DRMP3_PEEK_BITS(linbits);
1171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(linbits);
1172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>*drmp3_L3_pow_43(lsb)*((<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a28ae81cc3df6b63ad5069efb27780420">drmp3_int32</link>)bs_cache&#32;&lt;&#32;0&#32;?&#32;-1:&#32;1);
1174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;g_drmp3_pow43[16&#32;+&#32;lsb&#32;-&#32;16*(bs_cache&#32;&gt;&gt;&#32;31)]*one;
1177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(lsb&#32;?&#32;1&#32;:&#32;0);
1179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--pairs_to_decode);
1182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((big_val_cnt&#32;-=&#32;np)&#32;&gt;&#32;0&#32;&amp;&amp;&#32;--sfb_cnt&#32;&gt;=&#32;0);
1183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np&#32;=&#32;*sfb++&#32;/&#32;2;
1188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pairs_to_decode&#32;=&#32;DRMP3_MIN(big_val_cnt,&#32;np);
1189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5">one</link>&#32;=&#32;*scf++;
1190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
1191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;5;
1193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)];
1194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(leaf&#32;&lt;&#32;0)
1195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
1197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;leaf&#32;&amp;&#32;7;
1198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leaf&#32;=&#32;codebook[DRMP3_PEEK_BITS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)&#32;-&#32;(leaf&#32;&gt;&gt;&#32;3)];
1199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(leaf&#32;&gt;&gt;&#32;8);
1201 
1202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++,&#32;dst++,&#32;leaf&#32;&gt;&gt;=&#32;4)
1203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lsb&#32;=&#32;leaf&#32;&amp;&#32;0x0F;
1205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;g_drmp3_pow43[16&#32;+&#32;lsb&#32;-&#32;16*(bs_cache&#32;&gt;&gt;&#32;31)]*one;
1206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(lsb&#32;?&#32;1&#32;:&#32;0);
1207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--pairs_to_decode);
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((big_val_cnt&#32;-=&#32;np)&#32;&gt;&#32;0&#32;&amp;&amp;&#32;--sfb_cnt&#32;&gt;=&#32;0);
1211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1212 &#32;&#32;&#32;&#32;}
1213 
1214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(np&#32;=&#32;1&#32;-&#32;big_val_cnt;;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;+=&#32;4)
1215 &#32;&#32;&#32;&#32;{
1216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*codebook_count1&#32;=&#32;(gr_info-&gt;count1_table)&#32;?&#32;tab33&#32;:&#32;tab32;
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf&#32;=&#32;codebook_count1[DRMP3_PEEK_BITS(4)];
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(leaf&#32;&amp;&#32;8))
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leaf&#32;=&#32;codebook_count1[(leaf&#32;&gt;&gt;&#32;3)&#32;+&#32;(bs_cache&#32;&lt;&lt;&#32;4&#32;&gt;&gt;&#32;(32&#32;-&#32;(leaf&#32;&amp;&#32;3)))];
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_FLUSH_BITS(leaf&#32;&amp;&#32;7);
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_BSPOS&#32;&gt;&#32;layer3gr_limit)
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1227 <emphasis role="preprocessor">#define&#32;DRMP3_RELOAD_SCALEFACTOR&#32;&#32;if&#32;(!--np)&#32;{&#32;np&#32;=&#32;*sfb++/2;&#32;if&#32;(!np)&#32;break;&#32;one&#32;=&#32;*scf++;&#32;}</emphasis>
1228 <emphasis role="preprocessor">#define&#32;DRMP3_DEQ_COUNT1(s)&#32;if&#32;(leaf&#32;&amp;&#32;(128&#32;&gt;&gt;&#32;s))&#32;{&#32;dst[s]&#32;=&#32;((drmp3_int32)bs_cache&#32;&lt;&#32;0)&#32;?&#32;-one&#32;:&#32;one;&#32;DRMP3_FLUSH_BITS(1)&#32;}</emphasis>
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_RELOAD_SCALEFACTOR;
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(0);
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(1);
1232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_RELOAD_SCALEFACTOR;
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(2);
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_DEQ_COUNT1(3);
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_CHECK_BITS;
1236 &#32;&#32;&#32;&#32;}
1237 
1238 &#32;&#32;&#32;&#32;bs-&gt;pos&#32;=&#32;layer3gr_limit;
1239 }
1240 
1241 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_midside_stereo(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1242 {
1243 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
1244 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*right&#32;=&#32;left&#32;+&#32;576;
1245 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;n&#32;-&#32;3;&#32;i&#32;+=&#32;4)
1247 &#32;&#32;&#32;&#32;{
1248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vl&#32;=&#32;DRMP3_VLD(left&#32;+&#32;i);
1249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vr&#32;=&#32;DRMP3_VLD(right&#32;+&#32;i);
1250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(left&#32;+&#32;i,&#32;DRMP3_VADD(vl,&#32;vr));
1251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(right&#32;+&#32;i,&#32;DRMP3_VSUB(vl,&#32;vr));
1252 &#32;&#32;&#32;&#32;}
1253 <emphasis role="preprocessor">#endif</emphasis>
1254 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;n;&#32;i++)
1255 &#32;&#32;&#32;&#32;{
1256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;left[i];
1257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;right[i];
1258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1260 &#32;&#32;&#32;&#32;}
1261 }
1262 
1263 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_intensity_stereo_band(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">float</emphasis>&#32;kl,&#32;<emphasis role="keywordtype">float</emphasis>&#32;kr)
1264 {
1265 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1266 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
1267 &#32;&#32;&#32;&#32;{
1268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left[i&#32;+&#32;576]&#32;=&#32;left[i]*kr;
1269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left[i]&#32;=&#32;left[i]*kl;
1270 &#32;&#32;&#32;&#32;}
1271 }
1272 
1273 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_stereo_top_band(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*right,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_band[3])
1274 {
1275 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
1276 
1277 &#32;&#32;&#32;&#32;max_band[0]&#32;=&#32;max_band[1]&#32;=&#32;max_band[2]&#32;=&#32;-1;
1278 
1279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nbands;&#32;i++)
1280 &#32;&#32;&#32;&#32;{
1281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;sfb[i];&#32;k&#32;+=&#32;2)
1282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(right[k]&#32;!=&#32;0&#32;||&#32;right[k&#32;+&#32;1]&#32;!=&#32;0)
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_band[i&#32;%&#32;3]&#32;=&#32;i;
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right&#32;+=&#32;sfb[i];
1290 &#32;&#32;&#32;&#32;}
1291 }
1292 
1293 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_stereo_process(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_band[3],&#32;<emphasis role="keywordtype">int</emphasis>&#32;mpeg2_sh)
1294 {
1295 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_pan[7*2]&#32;=&#32;{&#32;0,1,0.21132487f,0.78867513f,0.36602540f,0.63397460f,0.5f,0.5f,0.63397460f,0.36602540f,0.78867513f,0.21132487f,1,0&#32;};
1296 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;i,&#32;max_pos&#32;=&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;7&#32;:&#32;64;
1297 
1298 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;sfb[i];&#32;i++)
1299 &#32;&#32;&#32;&#32;{
1300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;ipos&#32;=&#32;ist_pos[i];
1301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)i&#32;&gt;&#32;max_band[i&#32;%&#32;3]&#32;&amp;&amp;&#32;ipos&#32;&lt;&#32;max_pos)
1302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;kl,&#32;kr,&#32;s&#32;=&#32;DRMP3_HDR_TEST_MS_STEREO(hdr)&#32;?&#32;1.41421356f&#32;:&#32;1;
1304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MPEG1(hdr))
1305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kl&#32;=&#32;g_pan[2*ipos];
1307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;g_pan[2*ipos&#32;+&#32;1];
1308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kl&#32;=&#32;1;
1311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;drmp3_L3_ldexp_q2(1,&#32;(ipos&#32;+&#32;1)&#32;&gt;&gt;&#32;1&#32;&lt;&lt;&#32;mpeg2_sh);
1312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ipos&#32;&amp;&#32;1)
1313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kl&#32;=&#32;kr;
1315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;1;
1316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_intensity_stereo_band(left,&#32;sfb[i],&#32;kl*s,&#32;kr*s);
1319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_MS_STEREO(hdr))
1320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_midside_stereo(left,&#32;sfb[i]);
1322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;+=&#32;sfb[i];
1324 &#32;&#32;&#32;&#32;}
1325 }
1326 
1327 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_intensity_stereo(<emphasis role="keywordtype">float</emphasis>&#32;*left,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*ist_pos,&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_L3_gr_info&#32;*gr,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr)
1328 {
1329 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_band[3],&#32;n_sfb&#32;=&#32;gr-&gt;n_long_sfb&#32;+&#32;gr-&gt;n_short_sfb;
1330 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;max_blocks&#32;=&#32;gr-&gt;n_short_sfb&#32;?&#32;3&#32;:&#32;1;
1331 
1332 &#32;&#32;&#32;&#32;drmp3_L3_stereo_top_band(left&#32;+&#32;576,&#32;gr-&gt;sfbtab,&#32;n_sfb,&#32;max_band);
1333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr-&gt;n_long_sfb)
1334 &#32;&#32;&#32;&#32;{
1335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_band[0]&#32;=&#32;max_band[1]&#32;=&#32;max_band[2]&#32;=&#32;DRMP3_MAX(DRMP3_MAX(max_band[0],&#32;max_band[1]),&#32;max_band[2]);
1336 &#32;&#32;&#32;&#32;}
1337 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;max_blocks;&#32;i++)
1338 &#32;&#32;&#32;&#32;{
1339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;default_pos&#32;=&#32;DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;3&#32;:&#32;0;
1340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;itop&#32;=&#32;n_sfb&#32;-&#32;max_blocks&#32;+&#32;i;
1341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prev&#32;=&#32;itop&#32;-&#32;max_blocks;
1342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ist_pos[itop]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>)(max_band[i]&#32;&gt;=&#32;prev&#32;?&#32;default_pos&#32;:&#32;ist_pos[prev]);
1343 &#32;&#32;&#32;&#32;}
1344 &#32;&#32;&#32;&#32;drmp3_L3_stereo_process(left,&#32;ist_pos,&#32;gr-&gt;sfbtab,&#32;hdr,&#32;max_band,&#32;gr[1].scalefac_compress&#32;&amp;&#32;1);
1345 }
1346 
1347 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_reorder(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scratch,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*sfb)
1348 {
1349 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
1350 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;=&#32;grbuf,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;=&#32;scratch;
1351 
1352 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;0&#32;!=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;*sfb);&#32;sfb&#32;+=&#32;3,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;+=&#32;2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
1353 &#32;&#32;&#32;&#32;{
1354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>++)
1355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>];
1357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>];
1358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>];
1359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1360 &#32;&#32;&#32;&#32;}
1361 &#32;&#32;&#32;&#32;memcpy(grbuf,&#32;scratch,&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>&#32;-&#32;scratch)*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
1362 }
1363 
1364 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_antialias(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands)
1365 {
1366 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_aa[2][8]&#32;=&#32;{
1367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0.85749293f,0.88174200f,0.94962865f,0.98331459f,0.99551782f,0.99916056f,0.99989920f,0.99999316f},
1368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{0.51449576f,0.47173197f,0.31337745f,0.18191320f,0.09457419f,0.04096558f,0.01419856f,0.00369997f}
1369 &#32;&#32;&#32;&#32;};
1370 
1371 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;nbands&#32;&gt;&#32;0;&#32;nbands--,&#32;grbuf&#32;+=&#32;18)
1372 &#32;&#32;&#32;&#32;{
1373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
1374 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;8;&#32;i&#32;+=&#32;4)
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vu&#32;=&#32;DRMP3_VLD(grbuf&#32;+&#32;18&#32;+&#32;i);
1378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vd&#32;=&#32;DRMP3_VLD(grbuf&#32;+&#32;14&#32;-&#32;i);
1379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vc0&#32;=&#32;DRMP3_VLD(g_aa[0]&#32;+&#32;i);
1380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vc1&#32;=&#32;DRMP3_VLD(g_aa[1]&#32;+&#32;i);
1381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vd&#32;=&#32;DRMP3_VREV(vd);
1382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;18&#32;+&#32;i,&#32;DRMP3_VSUB(DRMP3_VMUL(vu,&#32;vc0),&#32;DRMP3_VMUL(vd,&#32;vc1)));
1383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vd&#32;=&#32;DRMP3_VADD(DRMP3_VMUL(vu,&#32;vc1),&#32;DRMP3_VMUL(vd,&#32;vc0));
1384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;14&#32;-&#32;i,&#32;DRMP3_VREV(vd));
1385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1386 <emphasis role="preprocessor">#endif</emphasis>
1387 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_ONLY_SIMD</emphasis>
1388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&#32;&lt;&#32;8;&#32;i++)
1389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;grbuf[18&#32;+&#32;i];
1391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d&#32;=&#32;grbuf[17&#32;-&#32;i];
1392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[18&#32;+&#32;i]&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>*g_aa[0][i]&#32;-&#32;d*g_aa[1][i];
1393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[17&#32;-&#32;i]&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>*g_aa[1][i]&#32;+&#32;d*g_aa[0][i];
1394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1395 <emphasis role="preprocessor">#endif</emphasis>
1396 &#32;&#32;&#32;&#32;}
1397 }
1398 
1399 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_dct3_9(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
1400 {
1401 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s0,&#32;s1,&#32;s2,&#32;s3,&#32;s4,&#32;s5,&#32;s6,&#32;s7,&#32;s8,&#32;t0,&#32;t2,&#32;t4;
1402 
1403 &#32;&#32;&#32;&#32;s0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0];&#32;s2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2];&#32;s4&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[4];&#32;s6&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[6];&#32;s8&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[8];
1404 &#32;&#32;&#32;&#32;t0&#32;=&#32;s0&#32;+&#32;s6*0.5f;
1405 &#32;&#32;&#32;&#32;s0&#32;-=&#32;s6;
1406 &#32;&#32;&#32;&#32;t4&#32;=&#32;(s4&#32;+&#32;s2)*0.93969262f;
1407 &#32;&#32;&#32;&#32;t2&#32;=&#32;(s8&#32;+&#32;s2)*0.76604444f;
1408 &#32;&#32;&#32;&#32;s6&#32;=&#32;(s4&#32;-&#32;s8)*0.17364818f;
1409 &#32;&#32;&#32;&#32;s4&#32;+=&#32;s8&#32;-&#32;s2;
1410 
1411 &#32;&#32;&#32;&#32;s2&#32;=&#32;s0&#32;-&#32;s4*0.5f;
1412 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[4]&#32;=&#32;s4&#32;+&#32;s0;
1413 &#32;&#32;&#32;&#32;s8&#32;=&#32;t0&#32;-&#32;t2&#32;+&#32;s6;
1414 &#32;&#32;&#32;&#32;s0&#32;=&#32;t0&#32;-&#32;t4&#32;+&#32;t2;
1415 &#32;&#32;&#32;&#32;s4&#32;=&#32;t0&#32;+&#32;t4&#32;-&#32;s6;
1416 
1417 &#32;&#32;&#32;&#32;s1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1];&#32;s3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3];&#32;s5&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[5];&#32;s7&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[7];
1418 
1419 &#32;&#32;&#32;&#32;s3&#32;*=&#32;0.86602540f;
1420 &#32;&#32;&#32;&#32;t0&#32;=&#32;(s5&#32;+&#32;s1)*0.98480775f;
1421 &#32;&#32;&#32;&#32;t4&#32;=&#32;(s5&#32;-&#32;s7)*0.34202014f;
1422 &#32;&#32;&#32;&#32;t2&#32;=&#32;(s1&#32;+&#32;s7)*0.64278761f;
1423 &#32;&#32;&#32;&#32;s1&#32;=&#32;(s1&#32;-&#32;s5&#32;-&#32;s7)*0.86602540f;
1424 
1425 &#32;&#32;&#32;&#32;s5&#32;=&#32;t0&#32;-&#32;s3&#32;-&#32;t2;
1426 &#32;&#32;&#32;&#32;s7&#32;=&#32;t4&#32;-&#32;s3&#32;-&#32;t0;
1427 &#32;&#32;&#32;&#32;s3&#32;=&#32;t4&#32;+&#32;s3&#32;-&#32;t2;
1428 
1429 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0]&#32;=&#32;s4&#32;-&#32;s7;
1430 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1]&#32;=&#32;s2&#32;+&#32;s1;
1431 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2]&#32;=&#32;s0&#32;-&#32;s3;
1432 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3]&#32;=&#32;s8&#32;+&#32;s5;
1433 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[5]&#32;=&#32;s8&#32;-&#32;s5;
1434 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[6]&#32;=&#32;s0&#32;+&#32;s3;
1435 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[7]&#32;=&#32;s2&#32;-&#32;s1;
1436 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[8]&#32;=&#32;s4&#32;+&#32;s7;
1437 }
1438 
1439 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct36(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands)
1440 {
1441 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
1442 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_twid9[18]&#32;=&#32;{
1443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.73727734f,0.79335334f,0.84339145f,0.88701083f,0.92387953f,0.95371695f,0.97629601f,0.99144486f,0.99904822f,0.67559021f,0.60876143f,0.53729961f,0.46174861f,0.38268343f,0.30070580f,0.21643961f,0.13052619f,0.04361938f
1444 &#32;&#32;&#32;&#32;};
1445 
1446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;nbands;&#32;j++,&#32;grbuf&#32;+=&#32;18,&#32;overlap&#32;+=&#32;9)
1447 &#32;&#32;&#32;&#32;{
1448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;co[9],&#32;si[9];
1449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co[0]&#32;=&#32;-grbuf[0];
1450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[0]&#32;=&#32;grbuf[17];
1451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)
1452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[8&#32;-&#32;2*i]&#32;=&#32;&#32;&#32;grbuf[4*i&#32;+&#32;1]&#32;-&#32;grbuf[4*i&#32;+&#32;2];
1454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co[1&#32;+&#32;2*i]&#32;=&#32;&#32;&#32;grbuf[4*i&#32;+&#32;1]&#32;+&#32;grbuf[4*i&#32;+&#32;2];
1455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[7&#32;-&#32;2*i]&#32;=&#32;&#32;&#32;grbuf[4*i&#32;+&#32;4]&#32;-&#32;grbuf[4*i&#32;+&#32;3];
1456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co[2&#32;+&#32;2*i]&#32;=&#32;-(grbuf[4*i&#32;+&#32;3]&#32;+&#32;grbuf[4*i&#32;+&#32;4]);
1457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_dct3_9(co);
1459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_dct3_9(si);
1460 
1461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[1]&#32;=&#32;-si[1];
1462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[3]&#32;=&#32;-si[3];
1463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[5]&#32;=&#32;-si[5];
1464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si[7]&#32;=&#32;-si[7];
1465 
1466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
1467 
1468 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;8;&#32;i&#32;+=&#32;4)
1470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vovl&#32;=&#32;DRMP3_VLD(overlap&#32;+&#32;i);
1472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vc&#32;=&#32;DRMP3_VLD(co&#32;+&#32;i);
1473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vs&#32;=&#32;DRMP3_VLD(si&#32;+&#32;i);
1474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vr0&#32;=&#32;DRMP3_VLD(g_twid9&#32;+&#32;i);
1475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vr1&#32;=&#32;DRMP3_VLD(g_twid9&#32;+&#32;9&#32;+&#32;i);
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vw0&#32;=&#32;DRMP3_VLD(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>&#32;+&#32;i);
1477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vw1&#32;=&#32;DRMP3_VLD(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>&#32;+&#32;9&#32;+&#32;i);
1478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;vsum&#32;=&#32;DRMP3_VADD(DRMP3_VMUL(vc,&#32;vr1),&#32;DRMP3_VMUL(vs,&#32;vr0));
1479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(overlap&#32;+&#32;i,&#32;DRMP3_VSUB(DRMP3_VMUL(vc,&#32;vr0),&#32;DRMP3_VMUL(vs,&#32;vr1)));
1480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;i,&#32;DRMP3_VSUB(DRMP3_VMUL(vovl,&#32;vw0),&#32;DRMP3_VMUL(vsum,&#32;vw1)));
1481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vsum&#32;=&#32;DRMP3_VADD(DRMP3_VMUL(vovl,&#32;vw1),&#32;DRMP3_VMUL(vsum,&#32;vw0));
1482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSTORE(grbuf&#32;+&#32;14&#32;-&#32;i,&#32;DRMP3_VREV(vsum));
1483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1484 <emphasis role="preprocessor">#endif</emphasis>
1485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;9;&#32;i++)
1486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ovl&#32;&#32;=&#32;overlap[i];
1488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sum&#32;&#32;=&#32;co[i]*g_twid9[9&#32;+&#32;i]&#32;+&#32;si[i]*g_twid9[0&#32;+&#32;i];
1489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap[i]&#32;=&#32;co[i]*g_twid9[0&#32;+&#32;i]&#32;-&#32;si[i]*g_twid9[9&#32;+&#32;i];
1490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[i]&#32;&#32;&#32;&#32;&#32;&#32;=&#32;ovl*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[0&#32;+&#32;i]&#32;-&#32;sum*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[9&#32;+&#32;i];
1491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[17&#32;-&#32;i]&#32;=&#32;ovl*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[9&#32;+&#32;i]&#32;+&#32;sum*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>[0&#32;+&#32;i];
1492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1493 &#32;&#32;&#32;&#32;}
1494 }
1495 
1496 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_idct3(<emphasis role="keywordtype">float</emphasis>&#32;x0,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>)
1497 {
1498 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m1&#32;=&#32;x1*0.86602540f;
1499 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;a1&#32;=&#32;x0&#32;-&#32;x2*0.5f;
1500 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[1]&#32;=&#32;x0&#32;+&#32;x2;
1501 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[0]&#32;=&#32;a1&#32;+&#32;m1;
1502 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[2]&#32;=&#32;a1&#32;-&#32;m1;
1503 }
1504 
1505 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct12(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap)
1506 {
1507 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_twid3[6]&#32;=&#32;{&#32;0.79335334f,0.92387953f,0.99144486f,&#32;0.60876143f,0.38268343f,0.13052619f&#32;};
1508 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;co[3],&#32;si[3];
1509 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1510 
1511 &#32;&#32;&#32;&#32;drmp3_L3_idct3(-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[12]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[9],&#32;co);
1512 &#32;&#32;&#32;&#32;drmp3_L3_idct3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[15],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[12]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[9],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;si);
1513 &#32;&#32;&#32;&#32;si[1]&#32;=&#32;-si[1];
1514 
1515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
1516 &#32;&#32;&#32;&#32;{
1517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ovl&#32;&#32;=&#32;overlap[i];
1518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sum&#32;&#32;=&#32;co[i]*g_twid3[3&#32;+&#32;i]&#32;+&#32;si[i]*g_twid3[0&#32;+&#32;i];
1519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap[i]&#32;=&#32;co[i]*g_twid3[0&#32;+&#32;i]&#32;-&#32;si[i]*g_twid3[3&#32;+&#32;i];
1520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[i]&#32;&#32;&#32;&#32;&#32;=&#32;ovl*g_twid3[2&#32;-&#32;i]&#32;-&#32;sum*g_twid3[5&#32;-&#32;i];
1521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>[5&#32;-&#32;i]&#32;=&#32;ovl*g_twid3[5&#32;-&#32;i]&#32;+&#32;sum*g_twid3[2&#32;-&#32;i];
1522 &#32;&#32;&#32;&#32;}
1523 }
1524 
1525 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct_short(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands)
1526 {
1527 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;nbands&#32;&gt;&#32;0;&#32;nbands--,&#32;overlap&#32;+=&#32;9,&#32;grbuf&#32;+=&#32;18)
1528 &#32;&#32;&#32;&#32;{
1529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp[18];
1530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(tmp,&#32;grbuf,&#32;<emphasis role="keyword">sizeof</emphasis>(tmp));
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(grbuf,&#32;overlap,&#32;6*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
1532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct12(tmp,&#32;grbuf&#32;+&#32;6,&#32;overlap&#32;+&#32;6);
1533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct12(tmp&#32;+&#32;1,&#32;grbuf&#32;+&#32;12,&#32;overlap&#32;+&#32;6);
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct12(tmp&#32;+&#32;2,&#32;overlap,&#32;overlap&#32;+&#32;6);
1535 &#32;&#32;&#32;&#32;}
1536 }
1537 
1538 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_change_sign(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf)
1539 {
1540 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;i;
1541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;0,&#32;grbuf&#32;+=&#32;18;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;+=&#32;2,&#32;grbuf&#32;+=&#32;36)
1542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;1;&#32;i&#32;&lt;&#32;18;&#32;i&#32;+=&#32;2)
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf[i]&#32;=&#32;-grbuf[i];
1544 }
1545 
1546 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_imdct_gr(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*overlap,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;block_type,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;n_long_bands)
1547 {
1548 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_mdct_window[2][18]&#32;=&#32;{
1549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;0.99904822f,0.99144486f,0.97629601f,0.95371695f,0.92387953f,0.88701083f,0.84339145f,0.79335334f,0.73727734f,0.04361938f,0.13052619f,0.21643961f,0.30070580f,0.38268343f,0.46174861f,0.53729961f,0.60876143f,0.67559021f&#32;},
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;1,1,1,1,1,1,0.99144486f,0.92387953f,0.79335334f,0,0,0,0,0,0,0.13052619f,0.38268343f,0.60876143f&#32;}
1551 &#32;&#32;&#32;&#32;};
1552 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n_long_bands)
1553 &#32;&#32;&#32;&#32;{
1554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct36(grbuf,&#32;overlap,&#32;g_mdct_window[0],&#32;n_long_bands);
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grbuf&#32;+=&#32;18*n_long_bands;
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap&#32;+=&#32;9*n_long_bands;
1557 &#32;&#32;&#32;&#32;}
1558 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(block_type&#32;==&#32;DRMP3_SHORT_BLOCK_TYPE)
1559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct_short(grbuf,&#32;overlap,&#32;32&#32;-&#32;n_long_bands);
1560 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct36(grbuf,&#32;overlap,&#32;g_mdct_window[block_type&#32;==&#32;DRMP3_STOP_BLOCK_TYPE],&#32;32&#32;-&#32;n_long_bands);
1562 }
1563 
1564 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_save_reservoir(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*h,&#32;drmp3dec_scratch&#32;*s)
1565 {
1566 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos&#32;=&#32;(s-&gt;bs.pos&#32;+&#32;7)/8u;
1567 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remains&#32;=&#32;s-&gt;bs.limit/8u&#32;-&#32;pos;
1568 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(remains&#32;&gt;&#32;DRMP3_MAX_BITRESERVOIR_BYTES)
1569 &#32;&#32;&#32;&#32;{
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos&#32;+=&#32;remains&#32;-&#32;DRMP3_MAX_BITRESERVOIR_BYTES;
1571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remains&#32;=&#32;DRMP3_MAX_BITRESERVOIR_BYTES;
1572 &#32;&#32;&#32;&#32;}
1573 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(remains&#32;&gt;&#32;0)
1574 &#32;&#32;&#32;&#32;{
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memmove(h-&gt;<link linkend="_structdrmp3dec_1a9d76d36f50e24ffc0c298db443fb8282">reserv_buf</link>,&#32;s-&gt;maindata&#32;+&#32;pos,&#32;remains);
1576 &#32;&#32;&#32;&#32;}
1577 &#32;&#32;&#32;&#32;h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>&#32;=&#32;remains;
1578 }
1579 
1580 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3_L3_restore_reservoir(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*h,&#32;drmp3_bs&#32;*bs,&#32;drmp3dec_scratch&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;main_data_begin)
1581 {
1582 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes&#32;=&#32;(bs-&gt;limit&#32;-&#32;bs-&gt;pos)/8;
1583 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes_have&#32;=&#32;DRMP3_MIN(h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>,&#32;main_data_begin);
1584 &#32;&#32;&#32;&#32;memcpy(s-&gt;maindata,&#32;h-&gt;<link linkend="_structdrmp3dec_1a9d76d36f50e24ffc0c298db443fb8282">reserv_buf</link>&#32;+&#32;DRMP3_MAX(0,&#32;h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>&#32;-&#32;main_data_begin),&#32;DRMP3_MIN(h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>,&#32;main_data_begin));
1585 &#32;&#32;&#32;&#32;memcpy(s-&gt;maindata&#32;+&#32;bytes_have,&#32;bs-&gt;buf&#32;+&#32;bs-&gt;pos/8,&#32;frame_bytes);
1586 &#32;&#32;&#32;&#32;drmp3_bs_init(&amp;s-&gt;bs,&#32;s-&gt;maindata,&#32;bytes_have&#32;+&#32;frame_bytes);
1587 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h-&gt;<link linkend="_structdrmp3dec_1a81df7d1c59e3ce43b7512fe06f4a7630">reserv</link>&#32;&gt;=&#32;main_data_begin;
1588 }
1589 
1590 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_L3_decode(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*h,&#32;drmp3dec_scratch&#32;*s,&#32;drmp3_L3_gr_info&#32;*gr_info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch)
1591 {
1592 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch;
1593 
1594 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ch&#32;=&#32;0;&#32;ch&#32;&lt;&#32;nch;&#32;ch++)
1595 &#32;&#32;&#32;&#32;{
1596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer3gr_limit&#32;=&#32;s-&gt;bs.pos&#32;+&#32;gr_info[ch].part_23_length;
1597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_decode_scalefactors(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>,&#32;s-&gt;ist_pos[ch],&#32;&amp;s-&gt;bs,&#32;gr_info&#32;+&#32;ch,&#32;s-&gt;scf,&#32;ch);
1598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_huffman(s-&gt;grbuf[ch],&#32;&amp;s-&gt;bs,&#32;gr_info&#32;+&#32;ch,&#32;s-&gt;scf,&#32;layer3gr_limit);
1599 &#32;&#32;&#32;&#32;}
1600 
1601 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_TEST_I_STEREO(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>))
1602 &#32;&#32;&#32;&#32;{
1603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_intensity_stereo(s-&gt;grbuf[0],&#32;s-&gt;ist_pos[1],&#32;gr_info,&#32;h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
1604 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_MS_STEREO(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>))
1605 &#32;&#32;&#32;&#32;{
1606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_midside_stereo(s-&gt;grbuf[0],&#32;576);
1607 &#32;&#32;&#32;&#32;}
1608 
1609 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ch&#32;=&#32;0;&#32;ch&#32;&lt;&#32;nch;&#32;ch++,&#32;gr_info++)
1610 &#32;&#32;&#32;&#32;{
1611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;aa_bands&#32;=&#32;31;
1612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n_long_bands&#32;=&#32;(gr_info-&gt;mixed_block_flag&#32;?&#32;2&#32;:&#32;0)&#32;&lt;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)(DRMP3_HDR_GET_MY_SAMPLE_RATE(h-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>)&#32;==&#32;2);
1613 
1614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gr_info-&gt;n_short_sfb)
1615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aa_bands&#32;=&#32;n_long_bands&#32;-&#32;1;
1617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_reorder(s-&gt;grbuf[ch]&#32;+&#32;n_long_bands*18,&#32;s-&gt;syn[0],&#32;gr_info-&gt;sfbtab&#32;+&#32;gr_info-&gt;n_long_sfb);
1618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1619 
1620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_antialias(s-&gt;grbuf[ch],&#32;aa_bands);
1621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_imdct_gr(s-&gt;grbuf[ch],&#32;h-&gt;<link linkend="_structdrmp3dec_1afae3536c90ba792bfdf474b7f7816a75">mdct_overlap</link>[ch],&#32;gr_info-&gt;block_type,&#32;n_long_bands);
1622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_change_sign(s-&gt;grbuf[ch]);
1623 &#32;&#32;&#32;&#32;}
1624 }
1625 
1626 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_DCT_II(<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1627 {
1628 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_sec[24]&#32;=&#32;{
1629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;10.19000816f,0.50060302f,0.50241929f,3.40760851f,0.50547093f,0.52249861f,2.05778098f,0.51544732f,0.56694406f,1.48416460f,0.53104258f,0.64682180f,1.16943991f,0.55310392f,0.78815460f,0.97256821f,0.58293498f,1.06067765f,0.83934963f,0.62250412f,1.72244716f,0.74453628f,0.67480832f,5.10114861f
1630 &#32;&#32;&#32;&#32;};
1631 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k&#32;=&#32;0;
1632 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1633 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&#32;&lt;&#32;n;&#32;k&#32;+=&#32;4)
1634 &#32;&#32;&#32;&#32;{
1635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t[4][8],&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;grbuf&#32;+&#32;k;
1637 
1638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>++)
1639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x0&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i*18]);
1641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x1&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(15&#32;-&#32;i)*18]);
1642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x2&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(16&#32;+&#32;i)*18]);
1643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x3&#32;=&#32;DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(31&#32;-&#32;i)*18]);
1644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t0&#32;=&#32;DRMP3_VADD(x0,&#32;x3);
1645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t1&#32;=&#32;DRMP3_VADD(x1,&#32;x2);
1646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t2&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x1,&#32;x2),&#32;g_sec[3*i&#32;+&#32;0]);
1647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;t3&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x0,&#32;x3),&#32;g_sec[3*i&#32;+&#32;1]);
1648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;DRMP3_VADD(t0,&#32;t1);
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[8]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(t0,&#32;t1),&#32;g_sec[3*i&#32;+&#32;2]);
1650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[16]&#32;=&#32;DRMP3_VADD(t3,&#32;t2);
1651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[24]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(t3,&#32;t2),&#32;g_sec[3*i&#32;+&#32;2]);
1652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;8)
1654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0],&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1],&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2],&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;x4&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4],&#32;x5&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5],&#32;x6&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6],&#32;x7&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7],&#32;xt;
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xt&#32;=&#32;DRMP3_VSUB(x0,&#32;x7);&#32;x0&#32;=&#32;DRMP3_VADD(x0,&#32;x7);
1657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;DRMP3_VSUB(x1,&#32;x6);&#32;x1&#32;=&#32;DRMP3_VADD(x1,&#32;x6);
1658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;DRMP3_VSUB(x2,&#32;x5);&#32;x2&#32;=&#32;DRMP3_VADD(x2,&#32;x5);
1659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VSUB(x3,&#32;x4);&#32;x3&#32;=&#32;DRMP3_VADD(x3,&#32;x4);
1660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x4&#32;=&#32;DRMP3_VSUB(x0,&#32;x3);&#32;x0&#32;=&#32;DRMP3_VADD(x0,&#32;x3);
1661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;DRMP3_VSUB(x1,&#32;x2);&#32;x1&#32;=&#32;DRMP3_VADD(x1,&#32;x2);
1662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;DRMP3_VADD(x0,&#32;x1);
1663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x0,&#32;x1),&#32;0.70710677f);
1664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VADD(x5,&#32;x6);
1665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x6,&#32;x7),&#32;0.70710677f);
1666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;DRMP3_VADD(x7,&#32;xt);
1667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x3,&#32;x4),&#32;0.70710677f);
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VSUB(x5,&#32;DRMP3_VMUL_S(x7,&#32;0.198912367f));&#32;<emphasis role="comment">/*&#32;rotate&#32;by&#32;PI/8&#32;*/</emphasis>
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;DRMP3_VADD(x7,&#32;DRMP3_VMUL_S(x5,&#32;0.382683432f));
1670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;DRMP3_VSUB(x5,&#32;DRMP3_VMUL_S(x7,&#32;0.198912367f));
1671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;DRMP3_VSUB(xt,&#32;x6);&#32;xt&#32;=&#32;DRMP3_VADD(xt,&#32;x6);
1672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(xt,&#32;x7),&#32;0.50979561f);
1673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x4,&#32;x3),&#32;0.54119611f);
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x0,&#32;x5),&#32;0.60134488f);
1675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VADD(x0,&#32;x5),&#32;0.89997619f);
1676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(x4,&#32;x3),&#32;1.30656302f);
1677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7]&#32;=&#32;DRMP3_VMUL_S(DRMP3_VSUB(xt,&#32;x7),&#32;2.56291556f);
1678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1679 
1680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;n&#32;-&#32;3)
1681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1682 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
1683 <emphasis role="preprocessor">#define&#32;DRMP3_VSAVE2(i,&#32;v)&#32;_mm_storel_pi((__m64&#32;*)(void*)&amp;y[i*18],&#32;v)</emphasis>
1684 <emphasis role="preprocessor">#else</emphasis>
1685 <emphasis role="preprocessor">#define&#32;DRMP3_VSAVE2(i,&#32;v)&#32;vst1_f32((float32_t&#32;*)&amp;y[i*18],&#32;&#32;vget_low_f32(v))</emphasis>
1686 <emphasis role="preprocessor">#endif</emphasis>
1687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;4*18)
1688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s&#32;=&#32;DRMP3_VADD(t[3][i],&#32;t[3][i&#32;+&#32;1]);
1690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(0,&#32;t[0][i]);
1691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(1,&#32;DRMP3_VADD(t[2][i],&#32;s));
1692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(2,&#32;DRMP3_VADD(t[1][i],&#32;t[1][i&#32;+&#32;1]));
1693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(3,&#32;DRMP3_VADD(t[2][1&#32;+&#32;i],&#32;s));
1694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(0,&#32;t[0][7]);
1696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(1,&#32;DRMP3_VADD(t[2][7],&#32;t[3][7]));
1697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(2,&#32;t[1][7]);
1698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE2(3,&#32;t[3][7]);
1699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1701 <emphasis role="preprocessor">#define&#32;DRMP3_VSAVE4(i,&#32;v)&#32;DRMP3_VSTORE(&amp;y[i*18],&#32;v)</emphasis>
1702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;4*18)
1703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s&#32;=&#32;DRMP3_VADD(t[3][i],&#32;t[3][i&#32;+&#32;1]);
1705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(0,&#32;t[0][i]);
1706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(1,&#32;DRMP3_VADD(t[2][i],&#32;s));
1707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(2,&#32;DRMP3_VADD(t[1][i],&#32;t[1][i&#32;+&#32;1]));
1708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(3,&#32;DRMP3_VADD(t[2][1&#32;+&#32;i],&#32;s));
1709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(0,&#32;t[0][7]);
1711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(1,&#32;DRMP3_VADD(t[2][7],&#32;t[3][7]));
1712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(2,&#32;t[1][7]);
1713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSAVE4(3,&#32;t[3][7]);
1714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1715 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1716 <emphasis role="preprocessor">#endif</emphasis>
1717 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
1718 &#32;&#32;&#32;&#32;{}
1719 <emphasis role="preprocessor">#else</emphasis>
1720 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&#32;&lt;&#32;n;&#32;k++)
1721 &#32;&#32;&#32;&#32;{
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t[4][8],&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;grbuf&#32;+&#32;k;
1723 
1724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>++)
1725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i*18];
1727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(15&#32;-&#32;i)*18];
1728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(16&#32;+&#32;i)*18];
1729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[(31&#32;-&#32;i)*18];
1730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t0&#32;=&#32;x0&#32;+&#32;x3;
1731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t1&#32;=&#32;x1&#32;+&#32;x2;
1732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t2&#32;=&#32;(x1&#32;-&#32;x2)*g_sec[3*i&#32;+&#32;0];
1733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t3&#32;=&#32;(x0&#32;-&#32;x3)*g_sec[3*i&#32;+&#32;1];
1734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;t0&#32;+&#32;t1;
1735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[8]&#32;=&#32;(t0&#32;-&#32;t1)*g_sec[3*i&#32;+&#32;2];
1736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[16]&#32;=&#32;t3&#32;+&#32;t2;
1737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[24]&#32;=&#32;(t3&#32;-&#32;t2)*g_sec[3*i&#32;+&#32;2];
1738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;t[0],&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;8)
1740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0],&#32;x1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1],&#32;x2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2],&#32;x3&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3],&#32;x4&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4],&#32;x5&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5],&#32;x6&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6],&#32;x7&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7],&#32;xt;
1742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xt&#32;=&#32;x0&#32;-&#32;x7;&#32;x0&#32;+=&#32;x7;
1743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;x1&#32;-&#32;x6;&#32;x1&#32;+=&#32;x6;
1744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;x2&#32;-&#32;x5;&#32;x2&#32;+=&#32;x5;
1745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;x3&#32;-&#32;x4;&#32;x3&#32;+=&#32;x4;
1746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x4&#32;=&#32;x0&#32;-&#32;x3;&#32;x0&#32;+=&#32;x3;
1747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;x1&#32;-&#32;x2;&#32;x1&#32;+=&#32;x2;
1748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[0]&#32;=&#32;x0&#32;+&#32;x1;
1749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[4]&#32;=&#32;(x0&#32;-&#32;x1)*0.70710677f;
1750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;=&#32;&#32;x5&#32;+&#32;x6;
1751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x6&#32;=&#32;(x6&#32;+&#32;x7)*0.70710677f;
1752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;=&#32;&#32;x7&#32;+&#32;xt;
1753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x3&#32;=&#32;(x3&#32;+&#32;x4)*0.70710677f;
1754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;-=&#32;x7*0.198912367f;&#32;&#32;<emphasis role="comment">/*&#32;rotate&#32;by&#32;PI/8&#32;*/</emphasis>
1755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x7&#32;+=&#32;x5*0.382683432f;
1756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x5&#32;-=&#32;x7*0.198912367f;
1757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;xt&#32;-&#32;x6;&#32;xt&#32;+=&#32;x6;
1758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[1]&#32;=&#32;(xt&#32;+&#32;x7)*0.50979561f;
1759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[2]&#32;=&#32;(x4&#32;+&#32;x3)*0.54119611f;
1760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[3]&#32;=&#32;(x0&#32;-&#32;x5)*0.60134488f;
1761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[5]&#32;=&#32;(x0&#32;+&#32;x5)*0.89997619f;
1762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[6]&#32;=&#32;(x4&#32;-&#32;x3)*1.30656302f;
1763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>[7]&#32;=&#32;(xt&#32;-&#32;x7)*2.56291556f;
1764 
1765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;4*18)
1767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0*18]&#32;=&#32;t[0][i];
1769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1*18]&#32;=&#32;t[2][i]&#32;+&#32;t[3][i]&#32;+&#32;t[3][i&#32;+&#32;1];
1770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2*18]&#32;=&#32;t[1][i]&#32;+&#32;t[1][i&#32;+&#32;1];
1771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3*18]&#32;=&#32;t[2][i&#32;+&#32;1]&#32;+&#32;t[3][i]&#32;+&#32;t[3][i&#32;+&#32;1];
1772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[0*18]&#32;=&#32;t[0][7];
1774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[1*18]&#32;=&#32;t[2][7]&#32;+&#32;t[3][7];
1775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[2*18]&#32;=&#32;t[1][7];
1776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[3*18]&#32;=&#32;t[3][7];
1777 &#32;&#32;&#32;&#32;}
1778 <emphasis role="preprocessor">#endif</emphasis>
1779 }
1780 
1781 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_FLOAT_OUTPUT</emphasis>
1782 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;drmp3d_sample_t;
1783 
1784 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;drmp3d_scale_pcm(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>)
1785 {
1786 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;s;
1787 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&gt;=&#32;&#32;32766.5)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;32767;
1788 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&lt;=&#32;-32767.5)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)-32768;
1789 &#32;&#32;&#32;&#32;s&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)(<link linkend="_structsample">sample</link>&#32;+&#32;.5f);
1790 &#32;&#32;&#32;&#32;s&#32;-=&#32;(s&#32;&lt;&#32;0);&#32;&#32;&#32;<emphasis role="comment">/*&#32;away&#32;from&#32;zero,&#32;to&#32;be&#32;compliant&#32;*/</emphasis>
1791 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)s;
1792 }
1793 <emphasis role="preprocessor">#else</emphasis>
1794 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3d_sample_t;
1795 
1796 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3d_scale_pcm(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>)
1797 {
1798 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structsample">sample</link>*(1.f/32768.f);
1799 }
1800 <emphasis role="preprocessor">#endif</emphasis>
1801 
1802 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_synth_pair(drmp3d_sample_t&#32;*pcm,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
1803 {
1804 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
1805 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[14*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;&#32;&#32;&#32;0])&#32;*&#32;29;
1806 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;1*64]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[13*64])&#32;*&#32;213;
1807 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[12*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;2*64])&#32;*&#32;459;
1808 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;3*64]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[11*64])&#32;*&#32;2037;
1809 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[10*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;4*64])&#32;*&#32;5153;
1810 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;5*64]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;9*64])&#32;*&#32;6574;
1811 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;8*64]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;6*64])&#32;*&#32;37489;
1812 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;7*64]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;75038;
1813 &#32;&#32;&#32;&#32;pcm[0]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
1814 
1815 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;+=&#32;2;
1816 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[14*64]&#32;*&#32;104;
1817 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[12*64]&#32;*&#32;1567;
1818 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[10*64]&#32;*&#32;9727;
1819 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;8*64]&#32;*&#32;64019;
1820 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;6*64]&#32;*&#32;-9975;
1821 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;4*64]&#32;*&#32;-45;
1822 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;2*64]&#32;*&#32;146;
1823 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[&#32;0*64]&#32;*&#32;-5;
1824 &#32;&#32;&#32;&#32;pcm[16*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
1825 }
1826 
1827 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_synth(<emphasis role="keywordtype">float</emphasis>&#32;*xl,&#32;drmp3d_sample_t&#32;*dstl,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*lins)
1828 {
1829 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1830 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*xr&#32;=&#32;xl&#32;+&#32;576*(nch&#32;-&#32;1);
1831 &#32;&#32;&#32;&#32;drmp3d_sample_t&#32;*dstr&#32;=&#32;dstl&#32;+&#32;(nch&#32;-&#32;1);
1832 
1833 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;g_win[]&#32;=&#32;{
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,26,-31,208,218,401,-519,2063,2000,4788,-5517,7134,5959,35640,-39336,74992,
1835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,24,-35,202,222,347,-581,2080,1952,4425,-5879,7640,5288,33791,-41176,74856,
1836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,21,-38,196,225,294,-645,2087,1893,4063,-6237,8092,4561,31947,-43006,74630,
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,19,-41,190,227,244,-711,2085,1822,3705,-6589,8492,3776,30112,-44821,74313,
1838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,17,-45,183,228,197,-779,2075,1739,3351,-6935,8840,2935,28289,-46617,73908,
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,16,-49,176,228,153,-848,2057,1644,3004,-7271,9139,2037,26482,-48390,73415,
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,14,-53,169,227,111,-919,2032,1535,2663,-7597,9389,1082,24694,-50137,72835,
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,13,-58,161,224,72,-991,2001,1414,2330,-7910,9592,70,22929,-51853,72169,
1842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,11,-63,154,221,36,-1064,1962,1280,2006,-8209,9750,-998,21189,-53534,71420,
1843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2,10,-68,147,215,2,-1137,1919,1131,1692,-8491,9863,-2122,19478,-55178,70590,
1844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-3,9,-73,139,208,-29,-1210,1870,970,1388,-8755,9935,-3300,17799,-56778,69679,
1845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-3,8,-79,132,200,-57,-1283,1817,794,1095,-8998,9966,-4533,16155,-58333,68692,
1846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-4,7,-85,125,189,-83,-1356,1759,605,814,-9219,9959,-5818,14548,-59838,67629,
1847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-4,7,-91,117,177,-106,-1428,1698,402,545,-9416,9916,-7154,12980,-61289,66494,
1848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5,6,-97,111,163,-127,-1498,1634,185,288,-9585,9838,-8540,11455,-62684,65290
1849 &#32;&#32;&#32;&#32;};
1850 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*zlin&#32;=&#32;lins&#32;+&#32;15*64;
1851 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;g_win;
1852 
1853 &#32;&#32;&#32;&#32;zlin[4*15]&#32;&#32;&#32;&#32;&#32;=&#32;xl[18*16];
1854 &#32;&#32;&#32;&#32;zlin[4*15&#32;+&#32;1]&#32;=&#32;xr[18*16];
1855 &#32;&#32;&#32;&#32;zlin[4*15&#32;+&#32;2]&#32;=&#32;xl[0];
1856 &#32;&#32;&#32;&#32;zlin[4*15&#32;+&#32;3]&#32;=&#32;xr[0];
1857 
1858 &#32;&#32;&#32;&#32;zlin[4*31]&#32;&#32;&#32;&#32;&#32;=&#32;xl[1&#32;+&#32;18*16];
1859 &#32;&#32;&#32;&#32;zlin[4*31&#32;+&#32;1]&#32;=&#32;xr[1&#32;+&#32;18*16];
1860 &#32;&#32;&#32;&#32;zlin[4*31&#32;+&#32;2]&#32;=&#32;xl[1];
1861 &#32;&#32;&#32;&#32;zlin[4*31&#32;+&#32;3]&#32;=&#32;xr[1];
1862 
1863 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstr,&#32;nch,&#32;lins&#32;+&#32;4*15&#32;+&#32;1);
1864 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstr&#32;+&#32;32*nch,&#32;nch,&#32;lins&#32;+&#32;4*15&#32;+&#32;64&#32;+&#32;1);
1865 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstl,&#32;nch,&#32;lins&#32;+&#32;4*15);
1866 &#32;&#32;&#32;&#32;drmp3d_synth_pair(dstl&#32;+&#32;32*nch,&#32;nch,&#32;lins&#32;+&#32;4*15&#32;+&#32;64);
1867 
1868 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
1869 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_have_simd())&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;14;&#32;i&#32;&gt;=&#32;0;&#32;i--)
1870 &#32;&#32;&#32;&#32;{
1871 <emphasis role="preprocessor">#define&#32;DRMP3_VLOAD(k)&#32;drmp3_f4&#32;w0&#32;=&#32;DRMP3_VSET(*w++);&#32;drmp3_f4&#32;w1&#32;=&#32;DRMP3_VSET(*w++);&#32;drmp3_f4&#32;vz&#32;=&#32;DRMP3_VLD(&amp;zlin[4*i&#32;-&#32;64*k]);&#32;drmp3_f4&#32;vy&#32;=&#32;DRMP3_VLD(&amp;zlin[4*i&#32;-&#32;64*(15&#32;-&#32;k)]);</emphasis>
1872 <emphasis role="preprocessor">#define&#32;DRMP3_V0(k)&#32;{&#32;DRMP3_VLOAD(k)&#32;b&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VADD(DRMP3_VMUL(vz,&#32;w1),&#32;DRMP3_VMUL(vy,&#32;w0))&#32;;&#32;a&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_VSUB(DRMP3_VMUL(vz,&#32;w0),&#32;DRMP3_VMUL(vy,&#32;w1));&#32;&#32;}</emphasis>
1873 <emphasis role="preprocessor">#define&#32;DRMP3_V1(k)&#32;{&#32;DRMP3_VLOAD(k)&#32;b&#32;=&#32;DRMP3_VADD(b,&#32;DRMP3_VADD(DRMP3_VMUL(vz,&#32;w1),&#32;DRMP3_VMUL(vy,&#32;w0)));&#32;a&#32;=&#32;DRMP3_VADD(a,&#32;DRMP3_VSUB(DRMP3_VMUL(vz,&#32;w0),&#32;DRMP3_VMUL(vy,&#32;w1)));&#32;}</emphasis>
1874 <emphasis role="preprocessor">#define&#32;DRMP3_V2(k)&#32;{&#32;DRMP3_VLOAD(k)&#32;b&#32;=&#32;DRMP3_VADD(b,&#32;DRMP3_VADD(DRMP3_VMUL(vz,&#32;w1),&#32;DRMP3_VMUL(vy,&#32;w0)));&#32;a&#32;=&#32;DRMP3_VADD(a,&#32;DRMP3_VSUB(DRMP3_VMUL(vy,&#32;w1),&#32;DRMP3_VMUL(vz,&#32;w0)));&#32;}</emphasis>
1875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i]&#32;&#32;&#32;&#32;&#32;=&#32;xl[18*(31&#32;-&#32;i)];
1877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;1]&#32;=&#32;xr[18*(31&#32;-&#32;i)];
1878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;2]&#32;=&#32;xl[1&#32;+&#32;18*(31&#32;-&#32;i)];
1879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;3]&#32;=&#32;xr[1&#32;+&#32;18*(31&#32;-&#32;i)];
1880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;64]&#32;=&#32;xl[1&#32;+&#32;18*(1&#32;+&#32;i)];
1881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;64&#32;+&#32;1]&#32;=&#32;xr[1&#32;+&#32;18*(1&#32;+&#32;i)];
1882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;-&#32;64&#32;+&#32;2]&#32;=&#32;xl[18*(1&#32;+&#32;i)];
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;-&#32;64&#32;+&#32;3]&#32;=&#32;xr[18*(1&#32;+&#32;i)];
1884 
1885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_V0(0)&#32;DRMP3_V2(1)&#32;DRMP3_V1(2)&#32;DRMP3_V2(3)&#32;DRMP3_V1(4)&#32;DRMP3_V2(5)&#32;DRMP3_V1(6)&#32;DRMP3_V2(7)
1886 
1887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1888 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_FLOAT_OUTPUT</emphasis>
1889 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_max&#32;=&#32;{&#32;32767.0f,&#32;32767.0f,&#32;32767.0f,&#32;32767.0f&#32;};
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_min&#32;=&#32;{&#32;-32768.0f,&#32;-32768.0f,&#32;-32768.0f,&#32;-32768.0f&#32;};
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;pcm8&#32;=&#32;_mm_packs_epi32(_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;g_max),&#32;g_min)),
1893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;g_max),&#32;g_min)));
1894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(15&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;1);
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(17&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;5);
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(15&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;0);
1897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(17&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;4);
1898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(47&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;3);
1899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(49&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;7);
1900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(47&#32;-&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;2);
1901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(49&#32;+&#32;i)*nch]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;6);
1902 <emphasis role="preprocessor">#else</emphasis>
1903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x4_t&#32;pcma,&#32;pcmb;
1904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0.5f));
1905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0.5f));
1906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcma&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0)))));
1907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmb&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0)))));
1908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;pcma,&#32;1);
1909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;pcmb,&#32;1);
1910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;pcma,&#32;0);
1911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;pcmb,&#32;0);
1912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;pcma,&#32;3);
1913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstr&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;pcmb,&#32;3);
1914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;pcma,&#32;2);
1915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(dstl&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;pcmb,&#32;2);
1916 <emphasis role="preprocessor">#endif</emphasis>
1917 <emphasis role="preprocessor">#else</emphasis>
1918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;drmp3_f4&#32;g_scale&#32;=&#32;{&#32;1.0f/32768.0f,&#32;1.0f/32768.0f,&#32;1.0f/32768.0f,&#32;1.0f/32768.0f&#32;};
1919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VMUL(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;g_scale);
1920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VMUL(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;g_scale);
1921 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
1922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(1,&#32;1,&#32;1,&#32;1)));
1923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(1,&#32;1,&#32;1,&#32;1)));
1924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(0,&#32;0,&#32;0,&#32;0)));
1925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(0,&#32;0,&#32;0,&#32;0)));
1926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(3,&#32;3,&#32;3,&#32;3)));
1927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstr&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(3,&#32;3,&#32;3,&#32;3)));
1928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(2,&#32;2,&#32;2,&#32;2)));
1929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_store_ss(dstl&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1aee5c5734217b10ca090b1d449a653d73">_mm_shuffle_ps</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1adf4da55ebbb167407ecb8a9f89909254">_MM_SHUFFLE</link>(2,&#32;2,&#32;2,&#32;2)));
1930 <emphasis role="preprocessor">#else</emphasis>
1931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;1);
1932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;1);
1933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(15&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;0);
1934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(17&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;0);
1935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;3);
1936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstr&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;3);
1937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(47&#32;-&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;2);
1938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1q_lane_f32(dstl&#32;+&#32;(49&#32;+&#32;i)*nch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;2);
1939 <emphasis role="preprocessor">#endif</emphasis>
1940 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;DR_MP3_FLOAT_OUTPUT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1942 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1943 <emphasis role="preprocessor">#endif</emphasis>
1944 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_SIMD</emphasis>
1945 &#32;&#32;&#32;&#32;{}
1946 <emphasis role="preprocessor">#else</emphasis>
1947 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;14;&#32;i&#32;&gt;=&#32;0;&#32;i--)
1948 &#32;&#32;&#32;&#32;{
1949 <emphasis role="preprocessor">#define&#32;DRMP3_LOAD(k)&#32;float&#32;w0&#32;=&#32;*w++;&#32;float&#32;w1&#32;=&#32;*w++;&#32;float&#32;*vz&#32;=&#32;&amp;zlin[4*i&#32;-&#32;k*64];&#32;float&#32;*vy&#32;=&#32;&amp;zlin[4*i&#32;-&#32;(15&#32;-&#32;k)*64];</emphasis>
1950 <emphasis role="preprocessor">#define&#32;DRMP3_S0(k)&#32;{&#32;int&#32;j;&#32;DRMP3_LOAD(k);&#32;for&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;b[j]&#32;&#32;=&#32;vz[j]*w1&#32;+&#32;vy[j]*w0,&#32;a[j]&#32;&#32;=&#32;vz[j]*w0&#32;-&#32;vy[j]*w1;&#32;}</emphasis>
1951 <emphasis role="preprocessor">#define&#32;DRMP3_S1(k)&#32;{&#32;int&#32;j;&#32;DRMP3_LOAD(k);&#32;for&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;b[j]&#32;+=&#32;vz[j]*w1&#32;+&#32;vy[j]*w0,&#32;a[j]&#32;+=&#32;vz[j]*w0&#32;-&#32;vy[j]*w1;&#32;}</emphasis>
1952 <emphasis role="preprocessor">#define&#32;DRMP3_S2(k)&#32;{&#32;int&#32;j;&#32;DRMP3_LOAD(k);&#32;for&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;b[j]&#32;+=&#32;vz[j]*w1&#32;+&#32;vy[j]*w0,&#32;a[j]&#32;+=&#32;vy[j]*w1&#32;-&#32;vz[j]*w0;&#32;}</emphasis>
1953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[4],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[4];
1954 
1955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i]&#32;&#32;&#32;&#32;&#32;=&#32;xl[18*(31&#32;-&#32;i)];
1956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;1]&#32;=&#32;xr[18*(31&#32;-&#32;i)];
1957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;2]&#32;=&#32;xl[1&#32;+&#32;18*(31&#32;-&#32;i)];
1958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*i&#32;+&#32;3]&#32;=&#32;xr[1&#32;+&#32;18*(31&#32;-&#32;i)];
1959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;+&#32;16)]&#32;&#32;&#32;=&#32;xl[1&#32;+&#32;18*(1&#32;+&#32;i)];
1960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;+&#32;16)&#32;+&#32;1]&#32;=&#32;xr[1&#32;+&#32;18*(1&#32;+&#32;i)];
1961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;-&#32;16)&#32;+&#32;2]&#32;=&#32;xl[18*(1&#32;+&#32;i)];
1962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlin[4*(i&#32;-&#32;16)&#32;+&#32;3]&#32;=&#32;xr[18*(1&#32;+&#32;i)];
1963 
1964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_S0(0)&#32;DRMP3_S2(1)&#32;DRMP3_S1(2)&#32;DRMP3_S2(3)&#32;DRMP3_S1(4)&#32;DRMP3_S2(5)&#32;DRMP3_S1(6)&#32;DRMP3_S2(7)
1965 
1966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(15&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[1]);
1967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(17&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[1]);
1968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(15&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[0]);
1969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(17&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[0]);
1970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(47&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[3]);
1971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstr[(49&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[3]);
1972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(47&#32;-&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[2]);
1973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstl[(49&#32;+&#32;i)*nch]&#32;=&#32;drmp3d_scale_pcm(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[2]);
1974 &#32;&#32;&#32;&#32;}
1975 <emphasis role="preprocessor">#endif</emphasis>
1976 }
1977 
1978 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3d_synth_granule(<emphasis role="keywordtype">float</emphasis>&#32;*qmf_state,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*grbuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbands,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nch,&#32;drmp3d_sample_t&#32;*pcm,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*lins)
1979 {
1980 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1981 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nch;&#32;i++)
1982 &#32;&#32;&#32;&#32;{
1983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_DCT_II(grbuf&#32;+&#32;576*i,&#32;nbands);
1984 &#32;&#32;&#32;&#32;}
1985 
1986 &#32;&#32;&#32;&#32;memcpy(lins,&#32;qmf_state,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)*15*64);
1987 
1988 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nbands;&#32;i&#32;+=&#32;2)
1989 &#32;&#32;&#32;&#32;{
1990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_synth(grbuf&#32;+&#32;i,&#32;pcm&#32;+&#32;32*nch*i,&#32;nch,&#32;lins&#32;+&#32;i*64);
1991 &#32;&#32;&#32;&#32;}
1992 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NONSTANDARD_BUT_LOGICAL</emphasis>
1993 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nch&#32;==&#32;1)
1994 &#32;&#32;&#32;&#32;{
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;15*64;&#32;i&#32;+=&#32;2)
1996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qmf_state[i]&#32;=&#32;lins[nbands*64&#32;+&#32;i];
1998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1999 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
2000 <emphasis role="preprocessor">#endif</emphasis>
2001 &#32;&#32;&#32;&#32;{
2002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(qmf_state,&#32;lins&#32;+&#32;nbands*64,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)*15*64);
2003 &#32;&#32;&#32;&#32;}
2004 }
2005 
2006 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3d_match_frame(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes)
2007 {
2008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;nmatch;
2009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0,&#32;nmatch&#32;=&#32;0;&#32;nmatch&#32;&lt;&#32;DRMP3_MAX_FRAME_SYNC_MATCHES;&#32;nmatch++)
2010 &#32;&#32;&#32;&#32;{
2011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;drmp3_hdr_frame_bytes(hdr&#32;+&#32;i,&#32;frame_bytes)&#32;+&#32;drmp3_hdr_padding(hdr&#32;+&#32;i);
2012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;DRMP3_HDR_SIZE&#32;&gt;&#32;mp3_bytes)
2013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nmatch&#32;&gt;&#32;0;
2014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_hdr_compare(hdr,&#32;hdr&#32;+&#32;i))
2015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2016 &#32;&#32;&#32;&#32;}
2017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2018 }
2019 
2020 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;drmp3d_find_frame(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*mp3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*free_format_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*ptr_frame_bytes)
2021 {
2022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;k;
2023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;mp3_bytes&#32;-&#32;DRMP3_HDR_SIZE;&#32;i++,&#32;mp3++)
2024 &#32;&#32;&#32;&#32;{
2025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_hdr_valid(mp3))
2026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_bytes&#32;=&#32;drmp3_hdr_frame_bytes(mp3,&#32;*free_format_bytes);
2028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame_and_padding&#32;=&#32;frame_bytes&#32;+&#32;drmp3_hdr_padding(mp3);
2029 
2030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;DRMP3_HDR_SIZE;&#32;!frame_bytes&#32;&amp;&amp;&#32;k&#32;&lt;&#32;DRMP3_MAX_FREE_FORMAT_FRAME_SIZE&#32;&amp;&amp;&#32;i&#32;+&#32;2*k&#32;&lt;&#32;mp3_bytes&#32;-&#32;DRMP3_HDR_SIZE;&#32;k++)
2031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_hdr_compare(mp3,&#32;mp3&#32;+&#32;k))
2033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fb&#32;=&#32;k&#32;-&#32;drmp3_hdr_padding(mp3);
2035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextfb&#32;=&#32;fb&#32;+&#32;drmp3_hdr_padding(mp3&#32;+&#32;k);
2036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;k&#32;+&#32;nextfb&#32;+&#32;DRMP3_HDR_SIZE&#32;&gt;&#32;mp3_bytes&#32;||&#32;!drmp3_hdr_compare(mp3,&#32;mp3&#32;+&#32;k&#32;+&#32;nextfb))
2037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
2038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_and_padding&#32;=&#32;k;
2039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_bytes&#32;=&#32;fb;
2040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*free_format_bytes&#32;=&#32;fb;
2041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2043 
2044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((frame_bytes&#32;&amp;&amp;&#32;i&#32;+&#32;frame_and_padding&#32;&lt;=&#32;mp3_bytes&#32;&amp;&amp;
2045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_match_frame(mp3,&#32;mp3_bytes&#32;-&#32;i,&#32;frame_bytes))&#32;||
2046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(!i&#32;&amp;&amp;&#32;frame_and_padding&#32;==&#32;mp3_bytes))
2047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ptr_frame_bytes&#32;=&#32;frame_and_padding;
2049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
2050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*free_format_bytes&#32;=&#32;0;
2052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2053 &#32;&#32;&#32;&#32;}
2054 &#32;&#32;&#32;&#32;*ptr_frame_bytes&#32;=&#32;0;
2055 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
2056 }
2057 
2058 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec)
2059 {
2060 &#32;&#32;&#32;&#32;dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>[0]&#32;=&#32;0;
2061 }
2062 
2063 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(<link linkend="_structdrmp3dec">drmp3dec</link>&#32;*dec,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*mp3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mp3_bytes,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pcm,&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;*info)
2064 {
2065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;igr,&#32;frame_size&#32;=&#32;0,&#32;success&#32;=&#32;1;
2066 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>&#32;*hdr;
2067 &#32;&#32;&#32;&#32;drmp3_bs&#32;bs_frame[1];
2068 &#32;&#32;&#32;&#32;drmp3dec_scratch&#32;scratch;
2069 
2070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mp3_bytes&#32;&gt;&#32;4&#32;&amp;&amp;&#32;dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>[0]&#32;==&#32;0xff&#32;&amp;&amp;&#32;drmp3_hdr_compare(dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>,&#32;mp3))
2071 &#32;&#32;&#32;&#32;{
2072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_size&#32;=&#32;drmp3_hdr_frame_bytes(mp3,&#32;dec-&gt;<link linkend="_structdrmp3dec_1a3d9913952fef5b67f9c064d56650cd1e">free_format_bytes</link>)&#32;+&#32;drmp3_hdr_padding(mp3);
2073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frame_size&#32;!=&#32;mp3_bytes&#32;&amp;&amp;&#32;(frame_size&#32;+&#32;DRMP3_HDR_SIZE&#32;&gt;&#32;mp3_bytes&#32;||&#32;!drmp3_hdr_compare(mp3,&#32;mp3&#32;+&#32;frame_size)))
2074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_size&#32;=&#32;0;
2076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2077 &#32;&#32;&#32;&#32;}
2078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frame_size)
2079 &#32;&#32;&#32;&#32;{
2080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(dec,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structdrmp3dec">drmp3dec</link>));
2081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;drmp3d_find_frame(mp3,&#32;mp3_bytes,&#32;&amp;dec-&gt;<link linkend="_structdrmp3dec_1a3d9913952fef5b67f9c064d56650cd1e">free_format_bytes</link>,&#32;&amp;frame_size);
2082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frame_size&#32;||&#32;i&#32;+&#32;frame_size&#32;&gt;&#32;mp3_bytes)
2083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;=&#32;i;
2085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2087 &#32;&#32;&#32;&#32;}
2088 
2089 &#32;&#32;&#32;&#32;hdr&#32;=&#32;mp3&#32;+&#32;i;
2090 &#32;&#32;&#32;&#32;memcpy(dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>,&#32;hdr,&#32;DRMP3_HDR_SIZE);
2091 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;=&#32;i&#32;+&#32;frame_size;
2092 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>&#32;=&#32;DRMP3_HDR_IS_MONO(hdr)&#32;?&#32;1&#32;:&#32;2;
2093 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1abe77517f4ee3765ba556faa60ea1cb05">hz</link>&#32;=&#32;drmp3_hdr_sample_rate_hz(hdr);
2094 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a91703350261bae1eb34df2e6a6e7661e">layer</link>&#32;=&#32;4&#32;-&#32;DRMP3_HDR_GET_LAYER(hdr);
2095 &#32;&#32;&#32;&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1ac8b0b572f5d049f8520abdd0ca0f9c49">bitrate_kbps</link>&#32;=&#32;drmp3_hdr_bitrate_kbps(hdr);
2096 
2097 &#32;&#32;&#32;&#32;drmp3_bs_init(bs_frame,&#32;hdr&#32;+&#32;DRMP3_HDR_SIZE,&#32;frame_size&#32;-&#32;DRMP3_HDR_SIZE);
2098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DRMP3_HDR_IS_CRC(hdr))
2099 &#32;&#32;&#32;&#32;{
2100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_bs_get_bits(bs_frame,&#32;16);
2101 &#32;&#32;&#32;&#32;}
2102 
2103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;<link linkend="_structdrmp3dec__frame__info_1a91703350261bae1eb34df2e6a6e7661e">layer</link>&#32;==&#32;3)
2104 &#32;&#32;&#32;&#32;{
2105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;main_data_begin&#32;=&#32;drmp3_L3_read_side_info(bs_frame,&#32;scratch.gr_info,&#32;hdr);
2106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(main_data_begin&#32;&lt;&#32;0&#32;||&#32;bs_frame-&gt;pos&#32;&gt;&#32;bs_frame-&gt;limit)
2107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(dec);
2109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success&#32;=&#32;drmp3_L3_restore_reservoir(dec,&#32;bs_frame,&#32;&amp;scratch,&#32;main_data_begin);
2112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(success&#32;&amp;&amp;&#32;pcm&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
2113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(igr&#32;=&#32;0;&#32;igr&#32;&lt;&#32;(DRMP3_HDR_TEST_MPEG1(hdr)&#32;?&#32;2&#32;:&#32;1);&#32;igr++,&#32;pcm&#32;=&#32;DRMP3_OFFSET_PTR(pcm,&#32;<emphasis role="keyword">sizeof</emphasis>(drmp3d_sample_t)*576*info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>))
2115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(scratch.grbuf[0],&#32;0,&#32;576*2*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_decode(dec,&#32;&amp;scratch,&#32;scratch.gr_info&#32;+&#32;igr*info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>);
2118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_synth_granule(dec-&gt;<link linkend="_structdrmp3dec_1a26ca95ae61c105a21cf326635af76ed2">qmf_state</link>,&#32;scratch.grbuf[0],&#32;18,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>,&#32;(drmp3d_sample_t*)pcm,&#32;scratch.syn[0]);
2119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L3_save_reservoir(dec,&#32;&amp;scratch);
2122 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
2123 &#32;&#32;&#32;&#32;{
2124 <emphasis role="preprocessor">#ifdef&#32;DR_MP3_ONLY_MP3</emphasis>
2125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2126 <emphasis role="preprocessor">#else</emphasis>
2127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L12_scale_info&#32;sci[1];
2128 
2129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcm&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_hdr_frame_samples(hdr);
2131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2132 
2133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L12_read_scale_info(hdr,&#32;bs_frame,&#32;sci);
2134 
2135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(scratch.grbuf[0],&#32;0,&#32;576*2*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0,&#32;igr&#32;=&#32;0;&#32;igr&#32;&lt;&#32;3;&#32;igr++)
2137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(12&#32;==&#32;(i&#32;+=&#32;drmp3_L12_dequantize_granule(scratch.grbuf[0]&#32;+&#32;i,&#32;bs_frame,&#32;sci,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a91703350261bae1eb34df2e6a6e7661e">layer</link>&#32;|&#32;1)))
2139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
2141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_L12_apply_scf_384(sci,&#32;sci-&gt;scf&#32;+&#32;igr,&#32;scratch.grbuf[0]);
2142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_synth_granule(dec-&gt;<link linkend="_structdrmp3dec_1a26ca95ae61c105a21cf326635af76ed2">qmf_state</link>,&#32;scratch.grbuf[0],&#32;12,&#32;info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>,&#32;(drmp3d_sample_t*)pcm,&#32;scratch.syn[0]);
2143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(scratch.grbuf[0],&#32;0,&#32;576*2*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcm&#32;=&#32;DRMP3_OFFSET_PTR(pcm,&#32;<emphasis role="keyword">sizeof</emphasis>(drmp3d_sample_t)*384*info-&gt;<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>);
2145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bs_frame-&gt;pos&#32;&gt;&#32;bs_frame-&gt;limit)
2147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(dec);
2149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2152 <emphasis role="preprocessor">#endif</emphasis>
2153 &#32;&#32;&#32;&#32;}
2154 
2155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success*drmp3_hdr_frame_samples(dec-&gt;<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
2156 }
2157 
2158 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1abe41d7ed1ca280315620335435a62c32">drmp3dec_f32_to_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_samples)
2159 {
2160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(num_samples&#32;&gt;&#32;0)
2161 &#32;&#32;&#32;&#32;{
2162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
2163 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SIMD</emphasis>
2164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;aligned_count&#32;=&#32;num_samples&#32;&amp;&#32;~7;
2165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&#32;&lt;&#32;aligned_count;&#32;i+=8)
2166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;DRMP3_VSET(32768.0f);
2168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VMUL(DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>[i&#32;&#32;]),&#32;scale);
2169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VMUL(DRMP3_VLD(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>[i+4]),&#32;scale);
2170 <emphasis role="preprocessor">#if&#32;DRMP3_HAVE_SSE</emphasis>
2171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s16max&#32;=&#32;DRMP3_VSET(&#32;32767.0f);
2172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_f4&#32;s16min&#32;=&#32;DRMP3_VSET(-32768.0f);
2173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;pcm8&#32;=&#32;_mm_packs_epi32(_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;s16max),&#32;s16min)),
2174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cvtps_epi32(_mm_max_ps(_mm_min_ps(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;s16max),&#32;s16min)));
2175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i&#32;&#32;]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;0);
2176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;1);
2177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;2);
2178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+3]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;3);
2179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+4]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;4);
2180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+5]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;5);
2181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+6]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;6);
2182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i+7]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>(pcm8,&#32;7);
2183 <emphasis role="preprocessor">#else</emphasis>
2184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x4_t&#32;pcma,&#32;pcmb;
2185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0.5f));
2186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;DRMP3_VADD(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0.5f));
2187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcma&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;DRMP3_VSET(0)))));
2188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmb&#32;=&#32;vqmovn_s32(vqaddq_s32(vcvtq_s32_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>),&#32;vreinterpretq_s32_u32(vcltq_f32(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;DRMP3_VSET(0)))));
2189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i&#32;&#32;,&#32;pcma,&#32;0);
2190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+1,&#32;pcma,&#32;1);
2191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+2,&#32;pcma,&#32;2);
2192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+3,&#32;pcma,&#32;3);
2193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+4,&#32;pcmb,&#32;0);
2194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+5,&#32;pcmb,&#32;1);
2195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+6,&#32;pcmb,&#32;2);
2196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst1_lane_s16(out+i+7,&#32;pcmb,&#32;3);
2197 <emphasis role="preprocessor">#endif</emphasis>
2198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2199 <emphasis role="preprocessor">#endif</emphasis>
2200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&#32;&lt;&#32;num_samples;&#32;i++)
2201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>[i]&#32;*&#32;32768.0f;
2203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&gt;=&#32;&#32;32766.5)
2204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)&#32;32767;
2205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structsample">sample</link>&#32;&lt;=&#32;-32767.5)
2206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)-32768;
2207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;s&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)(<link linkend="_structsample">sample</link>&#32;+&#32;.5f);
2210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;-=&#32;(s&#32;&lt;&#32;0);&#32;&#32;&#32;<emphasis role="comment">/*&#32;away&#32;from&#32;zero,&#32;to&#32;be&#32;compliant&#32;*/</emphasis>
2211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;s;
2212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2214 &#32;&#32;&#32;&#32;}
2215 }
2216 
2217 
2218 
2219 <emphasis role="comment">/************************************************************************************************************************************************************</emphasis>
2220 <emphasis role="comment"></emphasis>
2221 <emphasis role="comment">&#32;Main&#32;Public&#32;API</emphasis>
2222 <emphasis role="comment"></emphasis>
2223 <emphasis role="comment">&#32;************************************************************************************************************************************************************/</emphasis>
2224 
2225 <emphasis role="preprocessor">#if&#32;defined(SIZE_MAX)</emphasis>
2226 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;DRMP3_SIZE_MAX&#32;&#32;SIZE_MAX</emphasis>
2227 <emphasis role="preprocessor">#else</emphasis>
2228 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(_WIN64)&#32;||&#32;defined(_LP64)&#32;||&#32;defined(__LP64__)</emphasis>
2229 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_SIZE_MAX&#32;&#32;((drmp3_uint64)0xFFFFFFFFFFFFFFFF)</emphasis>
2230 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
2231 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;DRMP3_SIZE_MAX&#32;&#32;0xFFFFFFFF</emphasis>
2232 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
2233 <emphasis role="preprocessor">#endif</emphasis>
2234 
2235 <emphasis role="comment">/*&#32;Options.&#32;*/</emphasis>
2236 <emphasis role="preprocessor">#ifndef&#32;DRMP3_SEEK_LEADING_MP3_FRAMES</emphasis>
2237 <emphasis role="preprocessor">#define&#32;DRMP3_SEEK_LEADING_MP3_FRAMES&#32;&#32;&#32;2</emphasis>
2238 <emphasis role="preprocessor">#endif</emphasis>
2239 
2240 
2241 <emphasis role="comment">/*&#32;Standard&#32;library&#32;stuff.&#32;*/</emphasis>
2242 <emphasis role="preprocessor">#ifndef&#32;DRMP3_ASSERT</emphasis>
2243 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
2244 <emphasis role="preprocessor">#define&#32;DRMP3_ASSERT(expression)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(expression)</emphasis>
2245 <emphasis role="preprocessor">#endif</emphasis>
2246 <emphasis role="preprocessor">#ifndef&#32;DRMP3_COPY_MEMORY</emphasis>
2247 <emphasis role="preprocessor">#define&#32;DRMP3_COPY_MEMORY(dst,&#32;src,&#32;sz)&#32;memcpy((dst),&#32;(src),&#32;(sz))</emphasis>
2248 <emphasis role="preprocessor">#endif</emphasis>
2249 <emphasis role="preprocessor">#ifndef&#32;DRMP3_ZERO_MEMORY</emphasis>
2250 <emphasis role="preprocessor">#define&#32;DRMP3_ZERO_MEMORY(p,&#32;sz)&#32;memset((p),&#32;0,&#32;(sz))</emphasis>
2251 <emphasis role="preprocessor">#endif</emphasis>
2252 <emphasis role="preprocessor">#define&#32;DRMP3_ZERO_OBJECT(p)&#32;DRMP3_ZERO_MEMORY((p),&#32;sizeof(*(p)))</emphasis>
2253 <emphasis role="preprocessor">#ifndef&#32;DRMP3_MALLOC</emphasis>
2254 <emphasis role="preprocessor">#define&#32;DRMP3_MALLOC(sz)&#32;malloc((sz))</emphasis>
2255 <emphasis role="preprocessor">#endif</emphasis>
2256 <emphasis role="preprocessor">#ifndef&#32;DRMP3_REALLOC</emphasis>
2257 <emphasis role="preprocessor">#define&#32;DRMP3_REALLOC(p,&#32;sz)&#32;realloc((p),&#32;(sz))</emphasis>
2258 <emphasis role="preprocessor">#endif</emphasis>
2259 <emphasis role="preprocessor">#ifndef&#32;DRMP3_FREE</emphasis>
2260 <emphasis role="preprocessor">#define&#32;DRMP3_FREE(p)&#32;free((p))</emphasis>
2261 <emphasis role="preprocessor">#endif</emphasis>
2262 
2263 <emphasis role="preprocessor">#define&#32;drmp3_assert&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_ASSERT</emphasis>
2264 <emphasis role="preprocessor">#define&#32;drmp3_copy_memory&#32;&#32;&#32;DRMP3_COPY_MEMORY</emphasis>
2265 <emphasis role="preprocessor">#define&#32;drmp3_zero_memory&#32;&#32;&#32;DRMP3_ZERO_MEMORY</emphasis>
2266 <emphasis role="preprocessor">#define&#32;drmp3_zero_object&#32;&#32;&#32;DRMP3_ZERO_OBJECT</emphasis>
2267 <emphasis role="preprocessor">#define&#32;drmp3_malloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_MALLOC</emphasis>
2268 <emphasis role="preprocessor">#define&#32;drmp3_realloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;DRMP3_REALLOC</emphasis>
2269 
2270 <emphasis role="preprocessor">#define&#32;drmp3_countof(x)&#32;&#32;(sizeof(x)&#32;/&#32;sizeof(x[0]))</emphasis>
2271 <emphasis role="preprocessor">#define&#32;drmp3_max(x,&#32;y)&#32;&#32;&#32;(((x)&#32;&gt;&#32;(y))&#32;?&#32;(x)&#32;:&#32;(y))</emphasis>
2272 <emphasis role="preprocessor">#define&#32;drmp3_min(x,&#32;y)&#32;&#32;&#32;(((x)&#32;&lt;&#32;(y))&#32;?&#32;(x)&#32;:&#32;(y))</emphasis>
2273 
2274 <emphasis role="preprocessor">#define&#32;DRMP3_DATA_CHUNK_SIZE&#32;&#32;16384&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;The&#32;size&#32;in&#32;bytes&#32;of&#32;each&#32;chunk&#32;of&#32;data&#32;to&#32;read&#32;from&#32;the&#32;MP3&#32;stream.&#32;minimp3&#32;recommends&#32;16K.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2275 
2276 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af2197e726c5b054f15370dab95d161f3">DRMP3_INLINE</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;drmp3_mix_f32(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
2277 {
2278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*(1-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
2279 }
2280 
2281 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drmp3_blend_f32(<emphasis role="keywordtype">float</emphasis>*&#32;pOut,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pInA,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pInB,&#32;<emphasis role="keywordtype">float</emphasis>&#32;factor,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;channels)
2282 {
2283 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;i;
2284 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;channels;&#32;++i)&#32;{
2285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pOut[i]&#32;=&#32;drmp3_mix_f32(pInA[i],&#32;pInB[i],&#32;factor);
2286 &#32;&#32;&#32;&#32;}
2287 }
2288 
2289 <emphasis role="keywordtype">void</emphasis>&#32;drmp3_src_cache_init(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="_structdrmp3__src__cache">drmp3_src_cache</link>*&#32;pCache)
2290 {
2291 &#32;&#32;&#32;&#32;drmp3_assert(pSRC&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2292 &#32;&#32;&#32;&#32;drmp3_assert(pCache&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2293 
2294 &#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>&#32;=&#32;pSRC;
2295 &#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;=&#32;0;
2296 &#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>&#32;=&#32;0;
2297 }
2298 
2299 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_cache_read_frames(<link linkend="_structdrmp3__src__cache">drmp3_src_cache</link>*&#32;pCache,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pFramesOut)
2300 {
2301 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;channels;
2302 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
2303 
2304 &#32;&#32;&#32;&#32;drmp3_assert(pCache&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2305 &#32;&#32;&#32;&#32;drmp3_assert(pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2306 &#32;&#32;&#32;&#32;drmp3_assert(pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1af2cdb6236330db903def504c2a1681ba">onRead</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2307 &#32;&#32;&#32;&#32;drmp3_assert(frameCount&#32;&gt;&#32;0);
2308 &#32;&#32;&#32;&#32;drmp3_assert(pFramesOut&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2309 
2310 &#32;&#32;&#32;&#32;channels&#32;=&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>;
2311 
2312 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(frameCount&#32;&gt;&#32;0)&#32;{
2313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&apos;s&#32;anything&#32;in&#32;memory&#32;go&#32;ahead&#32;and&#32;copy&#32;that&#32;over&#32;first.&#32;*/</emphasis>
2314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;framesToReadFromClient;
2315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRemainingInMemory&#32;=&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;-&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>;
2316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadFromMemory&#32;=&#32;frameCount;
2317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToReadFromMemory&#32;&gt;&#32;framesRemainingInMemory)&#32;{
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadFromMemory&#32;=&#32;framesRemainingInMemory;
2319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2320 
2321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_copy_memory(pFramesOut,&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a2284088fc1d545911ea59950fb40f46d">pCachedFrames</link>&#32;+&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>*channels,&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)(framesToReadFromMemory&#32;*&#32;channels&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)));
2322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>&#32;+=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)framesToReadFromMemory;
2323 
2324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;framesToReadFromMemory;
2325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameCount&#32;-=&#32;framesToReadFromMemory;
2326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameCount&#32;==&#32;0)&#32;{
2327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2329 
2330 
2331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;At&#32;this&#32;point&#32;there&#32;are&#32;still&#32;more&#32;frames&#32;to&#32;read&#32;from&#32;the&#32;client,&#32;so&#32;we&apos;ll&#32;need&#32;to&#32;reload&#32;the&#32;cache&#32;with&#32;fresh&#32;data.&#32;*/</emphasis>
2332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_assert(frameCount&#32;&gt;&#32;0);
2333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOut&#32;+=&#32;framesToReadFromMemory&#32;*&#32;channels;
2334 
2335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>&#32;=&#32;0;
2336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;=&#32;0;
2337 
2338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadFromClient&#32;=&#32;drmp3_countof(pCache-&gt;<link linkend="_structdrmp3__src__cache_1a2284088fc1d545911ea59950fb40f46d">pCachedFrames</link>)&#32;/&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>;
2339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToReadFromClient&#32;&gt;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1afa3c413208e1fced054265709366c688">cacheSizeInFrames</link>)&#32;{
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadFromClient&#32;=&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1afa3c413208e1fced054265709366c688">cacheSizeInFrames</link>;
2341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2342 
2343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1af2cdb6236330db903def504c2a1681ba">onRead</link>(pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>,&#32;framesToReadFromClient,&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1a2284088fc1d545911ea59950fb40f46d">pCachedFrames</link>,&#32;pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad33b6462a5d0e4f0554ea4c31cf4c011">pSRC</link>-&gt;<link linkend="_structdrmp3__src_1afddcfd380c27d286ce319436e56d60b4">pUserData</link>);
2344 
2345 
2346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Get&#32;out&#32;of&#32;this&#32;loop&#32;if&#32;nothing&#32;was&#32;able&#32;to&#32;be&#32;retrieved.&#32;*/</emphasis>
2347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pCache-&gt;<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;==&#32;0)&#32;{
2348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2350 &#32;&#32;&#32;&#32;}
2351 
2352 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalFramesRead;
2353 }
2354 
2355 
2356 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_read_frames_passthrough(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;flush);
2357 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_read_frames_linear(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;flush);
2358 
2359 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_src_init(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__src__config">drmp3_src_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1ae95043c5da00d21eb88d7cac6f65426c">drmp3_src_read_proc</link>&#32;onRead,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC)
2360 {
2361 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2363 &#32;&#32;&#32;&#32;}
2364 
2365 &#32;&#32;&#32;&#32;drmp3_zero_object(pSRC);
2366 
2367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;onRead&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2369 &#32;&#32;&#32;&#32;}
2370 
2371 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig-&gt;<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>&#32;==&#32;0&#32;||&#32;pConfig-&gt;<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>&#32;&gt;&#32;2)&#32;{
2372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2373 &#32;&#32;&#32;&#32;}
2374 
2375 &#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>&#32;=&#32;*pConfig;
2376 &#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1af2cdb6236330db903def504c2a1681ba">onRead</link>&#32;=&#32;onRead;
2377 &#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1afddcfd380c27d286ce319436e56d60b4">pUserData</link>&#32;=&#32;pUserData;
2378 
2379 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1afa3c413208e1fced054265709366c688">cacheSizeInFrames</link>&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a75493ea556f352c50f2faab324c0893d">DRMP3_SRC_CACHE_SIZE_IN_FRAMES</link>&#32;||&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1afa3c413208e1fced054265709366c688">cacheSizeInFrames</link>&#32;==&#32;0)&#32;{
2380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1afa3c413208e1fced054265709366c688">cacheSizeInFrames</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a75493ea556f352c50f2faab324c0893d">DRMP3_SRC_CACHE_SIZE_IN_FRAMES</link>;
2381 &#32;&#32;&#32;&#32;}
2382 
2383 &#32;&#32;&#32;&#32;drmp3_src_cache_init(pSRC,&#32;&amp;pSRC-&gt;<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>);
2384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2385 }
2386 
2387 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_src_set_input_sample_rate(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRateIn)
2388 {
2389 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2391 &#32;&#32;&#32;&#32;}
2392 
2393 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Must&#32;have&#32;a&#32;sample&#32;rate&#32;of&#32;&gt;&#32;0.&#32;*/</emphasis>
2394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateIn&#32;==&#32;0)&#32;{
2395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2396 &#32;&#32;&#32;&#32;}
2397 
2398 &#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>&#32;=&#32;sampleRateIn;
2399 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2400 }
2401 
2402 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_src_set_output_sample_rate(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;sampleRateOut)
2403 {
2404 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2406 &#32;&#32;&#32;&#32;}
2407 
2408 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Must&#32;have&#32;a&#32;sample&#32;rate&#32;of&#32;&gt;&#32;0.&#32;*/</emphasis>
2409 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRateOut&#32;==&#32;0)&#32;{
2410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2411 &#32;&#32;&#32;&#32;}
2412 
2413 &#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>&#32;=&#32;sampleRateOut;
2414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2415 }
2416 
2417 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_read_frames_ex(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;flush)
2418 {
2419 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434">drmp3_src_algorithm</link>&#32;algorithm;
2420 
2421 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;frameCount&#32;==&#32;0&#32;||&#32;pFramesOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2423 &#32;&#32;&#32;&#32;}
2424 
2425 &#32;&#32;&#32;&#32;algorithm&#32;=&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a9a8c9b83950a124c67381d52dc00915d">algorithm</link>;
2426 
2427 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Always&#32;use&#32;passthrough&#32;if&#32;the&#32;sample&#32;rates&#32;are&#32;the&#32;same.&#32;*/</emphasis>
2428 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>&#32;==&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>)&#32;{
2429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434a09177d8335c207946f702b52b93eb327">drmp3_src_algorithm_none</link>;
2430 &#32;&#32;&#32;&#32;}
2431 
2432 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Could&#32;just&#32;use&#32;a&#32;function&#32;pointer&#32;instead&#32;of&#32;a&#32;switch&#32;for&#32;this...&#32;*/</emphasis>
2433 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(algorithm)
2434 &#32;&#32;&#32;&#32;{
2435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434a09177d8335c207946f702b52b93eb327">drmp3_src_algorithm_none</link>:&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_src_read_frames_passthrough(pSRC,&#32;frameCount,&#32;pFramesOut,&#32;flush);
2436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434a2debd8b888639f1fb5ebb36432b23ee0">drmp3_src_algorithm_linear</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_src_read_frames_linear(pSRC,&#32;frameCount,&#32;pFramesOut,&#32;flush);
2437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2438 &#32;&#32;&#32;&#32;}
2439 }
2440 
2441 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_read_frames(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut)
2442 {
2443 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_src_read_frames_ex(pSRC,&#32;frameCount,&#32;pFramesOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>);
2444 }
2445 
2446 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_read_frames_passthrough(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;flush)
2447 {
2448 &#32;&#32;&#32;&#32;drmp3_assert(pSRC&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2449 &#32;&#32;&#32;&#32;drmp3_assert(frameCount&#32;&gt;&#32;0);
2450 &#32;&#32;&#32;&#32;drmp3_assert(pFramesOut&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2451 
2452 &#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)flush;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Passthrough&#32;need&#32;not&#32;care&#32;about&#32;flushing.&#32;*/</emphasis>
2453 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1af2cdb6236330db903def504c2a1681ba">onRead</link>(pSRC,&#32;frameCount,&#32;pFramesOut,&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1afddcfd380c27d286ce319436e56d60b4">pUserData</link>);
2454 }
2455 
2456 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_src_read_frames_linear(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;flush)
2457 {
2458 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor;
2459 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead;
2460 
2461 &#32;&#32;&#32;&#32;drmp3_assert(pSRC&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2462 &#32;&#32;&#32;&#32;drmp3_assert(frameCount&#32;&gt;&#32;0);
2463 &#32;&#32;&#32;&#32;drmp3_assert(pFramesOut&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2464 
2465 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;For&#32;linear&#32;SRC,&#32;the&#32;bin&#32;is&#32;only&#32;2&#32;frames:&#32;1&#32;prior,&#32;1&#32;future.&#32;*/</emphasis>
2466 
2467 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Load&#32;the&#32;bin&#32;if&#32;necessary.&#32;*/</emphasis>
2468 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>)&#32;{
2469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRead&#32;=&#32;drmp3_src_cache_read_frames(&amp;pSRC-&gt;<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>,&#32;1,&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>);
2470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesRead&#32;==&#32;0)&#32;{
2471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2474 &#32;&#32;&#32;&#32;}
2475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>)&#32;{
2476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRead&#32;=&#32;drmp3_src_cache_read_frames(&amp;pSRC-&gt;<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>,&#32;1,&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>&#32;+&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>);
2477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesRead&#32;==&#32;0)&#32;{
2478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2481 &#32;&#32;&#32;&#32;}
2482 
2483 &#32;&#32;&#32;&#32;factor&#32;=&#32;(double)pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>&#32;/&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>;
2484 
2485 &#32;&#32;&#32;&#32;totalFramesRead&#32;=&#32;0;
2486 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(frameCount&#32;&gt;&#32;0)&#32;{
2487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;i;
2488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;framesToReadFromClient;
2489 
2490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;bin&#32;is&#32;where&#32;the&#32;previous&#32;and&#32;next&#32;frames&#32;are&#32;located.&#32;*/</emphasis>
2491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pPrevFrame&#32;=&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>;
2492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pNextFrame&#32;=&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>&#32;+&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>;
2493 
2494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_blend_f32((<emphasis role="keywordtype">float</emphasis>*)pFramesOut,&#32;pPrevFrame,&#32;pNextFrame,&#32;(<emphasis role="keywordtype">float</emphasis>)pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>,&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>);
2495 
2496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;+=&#32;factor;
2497 
2498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;new&#32;alpha&#32;value&#32;is&#32;how&#32;we&#32;determine&#32;whether&#32;or&#32;not&#32;we&#32;need&#32;to&#32;read&#32;fresh&#32;frames.&#32;*/</emphasis>
2499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadFromClient&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>;
2500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;=&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;-&#32;framesToReadFromClient;
2501 
2502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;framesToReadFromClient;&#32;++i)&#32;{
2503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRead;
2504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;j;
2505 
2506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>;&#32;++j)&#32;{
2507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pPrevFrame[j]&#32;=&#32;pNextFrame[j];
2508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2509 
2510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesRead&#32;=&#32;drmp3_src_cache_read_frames(&amp;pSRC-&gt;<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>,&#32;1,&#32;pNextFrame);
2511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesRead&#32;==&#32;0)&#32;{
2512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;k;
2513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>;&#32;++k)&#32;{
2514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNextFrame[k]&#32;=&#32;0;
2515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2516 
2517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>)&#32;{
2518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flush)&#32;{
2521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2524 
2525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2528 
2529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOut&#32;&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)pFramesOut&#32;+&#32;(1&#32;*&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
2530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameCount&#32;-=&#32;1;
2531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;1;
2532 
2533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&apos;s&#32;no&#32;frames&#32;available&#32;we&#32;need&#32;to&#32;get&#32;out&#32;of&#32;this&#32;loop.&#32;*/</emphasis>
2534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>&#32;&amp;&amp;&#32;(!flush&#32;||&#32;!pSRC-&gt;<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>))&#32;{
2535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2537 &#32;&#32;&#32;&#32;}
2538 
2539 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalFramesRead;
2540 }
2541 
2542 
2543 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drmp3__on_read(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
2544 {
2545 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>(pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>,&#32;pBufferOut,&#32;bytesToRead);
2546 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;+=&#32;bytesRead;
2547 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesRead;
2548 }
2549 
2550 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2551 {
2552 &#32;&#32;&#32;&#32;drmp3_assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;=&#32;0);
2553 
2554 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>(pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;origin))&#32;{
2555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2556 &#32;&#32;&#32;&#32;}
2557 
2558 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>)&#32;{
2559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
2560 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>;
2562 &#32;&#32;&#32;&#32;}
2563 
2564 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2565 }
2566 
2567 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek_64(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2568 {
2569 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&lt;=&#32;0x7FFFFFFF)&#32;{
2570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__on_seek(pMP3,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;origin);
2571 &#32;&#32;&#32;&#32;}
2572 
2573 
2574 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Getting&#32;here&#32;&quot;offset&quot;&#32;is&#32;too&#32;large&#32;for&#32;a&#32;32-bit&#32;integer.&#32;We&#32;just&#32;keep&#32;seeking&#32;forward&#32;until&#32;we&#32;hit&#32;the&#32;offset.&#32;*/</emphasis>
2575 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>))&#32;{
2576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2577 &#32;&#32;&#32;&#32;}
2578 
2579 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;0x7FFFFFFF;
2580 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&gt;&#32;0)&#32;{
2581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;&lt;=&#32;0x7FFFFFFF)&#32;{
2582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>))&#32;{
2583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;0;
2586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;0x7FFFFFFF,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>))&#32;{
2588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;-=&#32;0x7FFFFFFF;
2591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2592 &#32;&#32;&#32;&#32;}
2593 
2594 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2595 }
2596 
2597 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame_ex(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;drmp3d_sample_t*&#32;pPCMFrames,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;discard);
2598 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3);
2599 
2600 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;drmp3_read_src(<link linkend="_structdrmp3__src">drmp3_src</link>*&#32;pSRC,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameCount,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pFramesOut,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData)
2601 {
2602 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3&#32;=&#32;(<link linkend="_structdrmp3">drmp3</link>*)pUserData;
2603 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pFramesOutF&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>*)pFramesOut;
2604 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
2605 
2606 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2607 &#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2608 
2609 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(frameCount&#32;&gt;&#32;0)&#32;{
2610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Read&#32;from&#32;the&#32;in-memory&#32;buffer&#32;first.&#32;*/</emphasis>
2611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;frameCount&#32;&gt;&#32;0)&#32;{
2612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_sample_t*&#32;frames&#32;=&#32;(drmp3d_sample_t*)pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>;
2613 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_FLOAT_OUTPUT</emphasis>
2614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>&#32;==&#32;1)&#32;{
2615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;==&#32;1)&#32;{
2616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono&#32;-&gt;&#32;Mono.&#32;*/</emphasis>
2617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;frames[pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>]&#32;/&#32;32768.0f;
2618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono&#32;-&gt;&#32;Stereo.&#32;*/</emphasis>
2620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;frames[pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>]&#32;/&#32;32768.0f;
2621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[1]&#32;=&#32;frames[pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>]&#32;/&#32;32768.0f;
2622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;==&#32;1)&#32;{
2625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo&#32;-&gt;&#32;Mono&#32;*/</emphasis>
2626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;0;
2627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;+=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+0]&#32;/&#32;32768.0f;
2628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;+=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+1]&#32;/&#32;32768.0f;
2629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;<link linkend="_structsample">sample</link>&#32;*&#32;0.5f;
2630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo&#32;-&gt;&#32;Stereo&#32;*/</emphasis>
2632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+0]&#32;/&#32;32768.0f;
2633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[1]&#32;=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+1]&#32;/&#32;32768.0f;
2634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2636 <emphasis role="preprocessor">#else</emphasis>
2637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>&#32;==&#32;1)&#32;{
2638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;==&#32;1)&#32;{
2639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono&#32;-&gt;&#32;Mono.&#32;*/</emphasis>
2640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;frames[pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>];
2641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mono&#32;-&gt;&#32;Stereo.&#32;*/</emphasis>
2643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;frames[pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>];
2644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[1]&#32;=&#32;frames[pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>];
2645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;==&#32;1)&#32;{
2648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo&#32;-&gt;&#32;Mono&#32;*/</emphasis>
2649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structsample">sample</link>&#32;=&#32;0;
2650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;+=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+0];
2651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsample">sample</link>&#32;+=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+1];
2652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;<link linkend="_structsample">sample</link>&#32;*&#32;0.5f;
2653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stereo&#32;-&gt;&#32;Stereo&#32;*/</emphasis>
2655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[0]&#32;=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+0];
2656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF[1]&#32;=&#32;frames[(pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>*pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>)+1];
2657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2659 <emphasis role="preprocessor">#endif</emphasis>
2660 
2661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;+=&#32;1;
2662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;-=&#32;1;
2663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;1;
2664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameCount&#32;-=&#32;1;
2665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFramesOutF&#32;+=&#32;pSRC-&gt;<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>;
2666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2667 
2668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameCount&#32;==&#32;0)&#32;{
2669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2671 
2672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;==&#32;0);
2673 
2674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2675 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;At&#32;this&#32;point&#32;we&#32;have&#32;exhausted&#32;our&#32;in-memory&#32;buffer&#32;so&#32;we&#32;need&#32;to&#32;re-fill.&#32;Note&#32;that&#32;the&#32;sample&#32;rate&#32;may&#32;have&#32;changed</emphasis>
2676 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;this&#32;point&#32;which&#32;means&#32;we&apos;ll&#32;also&#32;need&#32;to&#32;update&#32;our&#32;sample&#32;rate&#32;conversion&#32;pipeline.</emphasis>
2677 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_decode_next_frame(pMP3)&#32;==&#32;0)&#32;{
2679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2681 &#32;&#32;&#32;&#32;}
2682 
2683 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalFramesRead;
2684 }
2685 
2686 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_init_src(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
2687 {
2688 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__src__config">drmp3_src_config</link>&#32;srcConfig;
2689 &#32;&#32;&#32;&#32;drmp3_zero_object(&amp;srcConfig);
2690 &#32;&#32;&#32;&#32;srcConfig.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a3b2e8776a406a3234ec9a840c507f752">DR_MP3_DEFAULT_SAMPLE_RATE</link>;
2691 &#32;&#32;&#32;&#32;srcConfig.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
2692 &#32;&#32;&#32;&#32;srcConfig.<link linkend="_structdrmp3__src__config_1a82ccbbdc492d67e1f80c0add73ccdf5c">channels</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
2693 &#32;&#32;&#32;&#32;srcConfig.<link linkend="_structdrmp3__src__config_1a9a8c9b83950a124c67381d52dc00915d">algorithm</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a12bc987117fc8b14fe2e18180fdf8434a2debd8b888639f1fb5ebb36432b23ee0">drmp3_src_algorithm_linear</link>;
2694 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_src_init(&amp;srcConfig,&#32;drmp3_read_src,&#32;pMP3,&#32;&amp;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>))&#32;{
2695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(pMP3);
2696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2697 &#32;&#32;&#32;&#32;}
2698 
2699 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2700 }
2701 
2702 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame_ex(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;drmp3d_sample_t*&#32;pPCMFrames,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;discard)
2703 {
2704 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRead&#32;=&#32;0;
2705 
2706 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2707 &#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2708 
2709 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>)&#32;{
2710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2711 &#32;&#32;&#32;&#32;}
2712 
2713 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
2714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link>&#32;info;
2715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;leftoverDataSize;
2716 
2717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;minimp3&#32;recommends&#32;doing&#32;data&#32;submission&#32;in&#32;16K&#32;chunks.&#32;If&#32;we&#32;don&apos;t&#32;have&#32;at&#32;least&#32;16K&#32;bytes&#32;available,&#32;get&#32;more.&#32;*/</emphasis>
2718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&lt;&#32;DRMP3_DATA_CHUNK_SIZE)&#32;{
2719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2720 
2721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;&lt;&#32;DRMP3_DATA_CHUNK_SIZE)&#32;{
2722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pNewData;
2723 
2724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;=&#32;DRMP3_DATA_CHUNK_SIZE;
2725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewData&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)drmp3_realloc(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>);
2726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;Out&#32;of&#32;memory.&#32;*/</emphasis>
2728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2729 
2730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;=&#32;pNewData;
2731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2732 
2733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesRead&#32;=&#32;drmp3__on_read(pMP3,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>,&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>));
2734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesRead&#32;==&#32;0)&#32;{
2735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;==&#32;0)&#32;{
2736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;No&#32;data.&#32;*/</emphasis>
2738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2740 
2741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;+=&#32;bytesRead;
2742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2743 
2744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&gt;&#32;INT_MAX)&#32;{
2745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;File&#32;too&#32;big.&#32;*/</emphasis>
2747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2748 
2749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a2e0ca96a4c0d5f2642d1a218895af048">drmp3dec_decode_frame</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>,&#32;pPCMFrames,&#32;&amp;info);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;size_t&#32;-&gt;&#32;int&#32;conversion&#32;thanks&#32;to&#32;the&#32;check&#32;above.&#32;*/</emphasis>
2750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
2751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Consume&#32;the&#32;data.&#32;*/</emphasis>
2752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftoverDataSize&#32;=&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;-&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>);
2753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;&gt;&#32;0)&#32;{
2754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memmove(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>,&#32;leftoverDataSize);
2755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;=&#32;leftoverDataSize;
2756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2757 
2758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2759 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;will&#32;be&#32;equal&#32;to&#32;0&#32;if&#32;decoding&#32;failed.&#32;If&#32;it&#32;is&#32;zero&#32;and&#32;info.frame_bytes&#32;&gt;&#32;0&#32;then&#32;we&#32;have&#32;successfully</emphasis>
2760 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decoded&#32;the&#32;frame.&#32;A&#32;special&#32;case&#32;is&#32;if&#32;we&#32;are&#32;wanting&#32;to&#32;discard&#32;the&#32;frame,&#32;in&#32;which&#32;case&#32;we&#32;return&#32;successfully.</emphasis>
2761 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
2762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesRead&#32;&gt;&#32;0&#32;||&#32;(info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;discard))&#32;{
2763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRead&#32;=&#32;drmp3_hdr_frame_samples(pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>.<link linkend="_structdrmp3dec_1a3130d09cdcc734d7246a6bcb49879b3f">header</link>);
2764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;=&#32;0;
2765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;pcmFramesRead;
2766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec49fe9de2778f11bb2013957fc12029">mp3FrameChannels</link>&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>;
2767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1abe77517f4ee3765ba556faa60ea1cb05">hz</link>;
2768 
2769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;need&#32;to&#32;initialize&#32;the&#32;resampler&#32;if&#32;we&#32;don&apos;t&#32;yet&#32;have&#32;the&#32;channel&#32;count&#32;or&#32;sample&#32;rate.&#32;*/</emphasis>
2770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;==&#32;0&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>&#32;==&#32;0)&#32;{
2771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;==&#32;0)&#32;{
2772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1a3ac661a8ab7ea40df55a07d4c4d8646c">channels</link>;
2773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>&#32;==&#32;0)&#32;{
2775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>&#32;=&#32;info.<link linkend="_structdrmp3dec__frame__info_1abe77517f4ee3765ba556faa60ea1cb05">hz</link>;
2776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_init_src(pMP3);
2778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2779 
2780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_src_set_input_sample_rate(&amp;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>);
2781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.<link linkend="_structdrmp3dec__frame__info_1a723116fb9098d6299bb6b39082d5d46f">frame_bytes</link>&#32;==&#32;0)&#32;{
2783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRead;
2784 
2785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Need&#32;more&#32;data.&#32;minimp3&#32;recommends&#32;doing&#32;data&#32;submission&#32;in&#32;16K&#32;chunks.&#32;*/</emphasis>
2786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;==&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>)&#32;{
2787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*&#32;pNewData;
2788 
2789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;No&#32;room.&#32;Expand.&#32;*/</emphasis>
2790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;+=&#32;DRMP3_DATA_CHUNK_SIZE;
2791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewData&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)drmp3_realloc(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>,&#32;pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>);
2792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;Out&#32;of&#32;memory.&#32;*/</emphasis>
2794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2795 
2796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;=&#32;pNewData;
2797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2798 
2799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;in&#32;a&#32;chunk.&#32;*/</emphasis>
2800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesRead&#32;=&#32;drmp3__on_read(pMP3,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>,&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ac76c099fa2b2d5746a53114cdcb2404d">dataCapacity</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>));
2801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesRead&#32;==&#32;0)&#32;{
2802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">/*&#32;Error&#32;reading&#32;more&#32;data.&#32;*/</emphasis>
2804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2805 
2806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;+=&#32;bytesRead;
2807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2808 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>);
2809 
2810 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pcmFramesRead;
2811 }
2812 
2813 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_decode_next_frame(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
2814 {
2815 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2816 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_decode_next_frame_ex(pMP3,&#32;(drmp3d_sample_t*)pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>);
2817 }
2818 
2819 <emphasis role="preprocessor">#if&#32;0</emphasis>
2820 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;drmp3_seek_next_frame(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
2821 {
2822 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCount;
2823 
2824 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2825 
2826 &#32;&#32;&#32;&#32;pcmFrameCount&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2827 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFrameCount&#32;==&#32;0)&#32;{
2828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2829 &#32;&#32;&#32;&#32;}
2830 
2831 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;have&#32;essentially&#32;just&#32;skipped&#32;past&#32;the&#32;frame,&#32;so&#32;just&#32;set&#32;the&#32;remaining&#32;samples&#32;to&#32;0.&#32;*/</emphasis>
2832 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;pcmFrameCount;
2833 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;&#32;=&#32;pcmFrameCount;
2834 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;0;
2835 
2836 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pcmFrameCount;
2837 }
2838 <emphasis role="preprocessor">#endif</emphasis>
2839 
2840 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_init_internal(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig)
2841 {
2842 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__config">drmp3_config</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a13b3686016f6a1889a75cd91a854514a">config</link>;
2843 
2844 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2845 &#32;&#32;&#32;&#32;drmp3_assert(onRead&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2846 
2847 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;assumes&#32;the&#32;output&#32;object&#32;has&#32;already&#32;been&#32;reset&#32;to&#32;0.&#32;Do&#32;not&#32;do&#32;that&#32;here,&#32;otherwise&#32;things&#32;will&#32;break.&#32;*/</emphasis>
2848 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>);
2849 
2850 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;config&#32;can&#32;be&#32;null&#32;in&#32;which&#32;case&#32;we&#32;use&#32;defaults.&#32;*/</emphasis>
2851 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a13b3686016f6a1889a75cd91a854514a">config</link>&#32;=&#32;*pConfig;
2853 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_zero_object(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a13b3686016f6a1889a75cd91a854514a">config</link>);
2855 &#32;&#32;&#32;&#32;}
2856 
2857 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a13b3686016f6a1889a75cd91a854514a">config</link>.outputChannels;
2858 
2859 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;have&#32;more&#32;than&#32;2&#32;channels.&#32;*/</emphasis>
2860 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;&gt;&#32;2)&#32;{
2861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;=&#32;2;
2862 &#32;&#32;&#32;&#32;}
2863 
2864 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a13b3686016f6a1889a75cd91a854514a">config</link>.outputSampleRate;
2865 
2866 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;=&#32;onRead;
2867 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;=&#32;onSeek;
2868 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>&#32;=&#32;pUserData;
2869 
2870 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
2871 <emphasis role="comment">&#32;&#32;&#32;&#32;We&#32;need&#32;a&#32;sample&#32;rate&#32;converter&#32;for&#32;converting&#32;the&#32;sample&#32;rate&#32;from&#32;the&#32;MP3&#32;frames&#32;to&#32;the&#32;requested&#32;output&#32;sample&#32;rate.&#32;Note&#32;that&#32;if</emphasis>
2872 <emphasis role="comment">&#32;&#32;&#32;&#32;we&#32;don&apos;t&#32;yet&#32;know&#32;the&#32;channel&#32;count&#32;or&#32;sample&#32;rate&#32;we&#32;defer&#32;this&#32;until&#32;the&#32;first&#32;frame&#32;is&#32;read.</emphasis>
2873 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
2874 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>&#32;!=&#32;0&#32;&amp;&amp;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>&#32;!=&#32;0)&#32;{
2875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_init_src(pMP3);
2876 &#32;&#32;&#32;&#32;}
2877 &#32;&#32;&#32;&#32;
2878 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Decode&#32;the&#32;first&#32;frame&#32;to&#32;confirm&#32;that&#32;it&#32;is&#32;indeed&#32;a&#32;valid&#32;MP3&#32;stream.&#32;*/</emphasis>
2879 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_decode_next_frame(pMP3))&#32;{
2880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(pMP3);
2881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Not&#32;a&#32;valid&#32;MP3&#32;stream.&#32;*/</emphasis>
2882 &#32;&#32;&#32;&#32;}
2883 
2884 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2885 }
2886 
2887 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig)
2888 {
2889 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;onRead&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2891 &#32;&#32;&#32;&#32;}
2892 
2893 &#32;&#32;&#32;&#32;drmp3_zero_object(pMP3);
2894 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_init_internal(pMP3,&#32;onRead,&#32;onSeek,&#32;pUserData,&#32;pConfig);
2895 }
2896 
2897 
2898 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drmp3__on_read_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
2899 {
2900 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3&#32;=&#32;(<link linkend="_structdrmp3">drmp3</link>*)pUserData;
2901 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesRemaining;
2902 
2903 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2904 &#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;&gt;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>);
2905 
2906 &#32;&#32;&#32;&#32;bytesRemaining&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>;
2907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;bytesRemaining)&#32;{
2908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToRead&#32;=&#32;bytesRemaining;
2909 &#32;&#32;&#32;&#32;}
2910 
2911 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToRead&#32;&gt;&#32;0)&#32;{
2912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_copy_memory(pBufferOut,&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>,&#32;bytesToRead);
2913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+=&#32;bytesToRead;
2914 &#32;&#32;&#32;&#32;}
2915 
2916 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytesToRead;
2917 }
2918 
2919 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek_memory(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;byteOffset,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2920 {
2921 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3&#32;=&#32;(<link linkend="_structdrmp3">drmp3</link>*)pUserData;
2922 
2923 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2924 
2925 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>)&#32;{
2926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(byteOffset&#32;&gt;&#32;0)&#32;{
2927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+&#32;byteOffset&#32;&gt;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>)&#32;{
2928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteOffset&#32;=&#32;(int)(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>);&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
2929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;&lt;&#32;(<emphasis role="keywordtype">size_t</emphasis>)-byteOffset)&#32;{
2932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteOffset&#32;=&#32;-(int)pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>;&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;backwards.&#32;*/</emphasis>
2933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2935 
2936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;will&#32;never&#32;underflow&#32;thanks&#32;to&#32;the&#32;clamps&#32;above.&#32;*/</emphasis>
2937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;+=&#32;byteOffset;
2938 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)byteOffset&#32;&lt;=&#32;pMP3-&gt;memory.dataSize)&#32;{
2940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;=&#32;byteOffset;
2941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>;&#32;&#32;<emphasis role="comment">/*&#32;Trying&#32;to&#32;seek&#32;too&#32;far&#32;forward.&#32;*/</emphasis>
2943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2944 &#32;&#32;&#32;&#32;}
2945 
2946 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
2947 }
2948 
2949 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig)
2950 {
2951 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2953 &#32;&#32;&#32;&#32;}
2954 
2955 &#32;&#32;&#32;&#32;drmp3_zero_object(pMP3);
2956 
2957 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pData&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>&#32;==&#32;0)&#32;{
2958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2959 &#32;&#32;&#32;&#32;}
2960 
2961 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a022600a580c00ea389b02f35175d3117">drmp3_uint8</link>*)pData;
2962 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>;
2963 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a51139856cb092dc1464b9215c7bda8e5">memory</link>.<link linkend="_structdrmp3_1ac12020a4a574c20bc6940edb465ce385">currentReadPos</link>&#32;=&#32;0;
2964 
2965 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_init_internal(pMP3,&#32;drmp3__on_read_memory,&#32;drmp3__on_seek_memory,&#32;pMP3,&#32;pConfig);
2966 }
2967 
2968 
2969 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
2970 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
2971 
2972 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;drmp3__on_read_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pBufferOut,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytesToRead)
2973 {
2974 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fread(pBufferOut,&#32;1,&#32;bytesToRead,&#32;(FILE*)pUserData);
2975 }
2976 
2977 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3__on_seek_stdio(<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550">drmp3_seek_origin</link>&#32;origin)
2978 {
2979 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fseek((FILE*)pUserData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;(origin&#32;==&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abd460b6d4565bbc04f5e6a1a78dda9b8">drmp3_seek_origin_current</link>)&#32;?&#32;SEEK_CUR&#32;:&#32;SEEK_SET)&#32;==&#32;0;
2980 }
2981 
2982 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig)
2983 {
2984 &#32;&#32;&#32;&#32;FILE*&#32;pFile;
2985 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
2986 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fopen_s(&amp;pFile,&#32;filePath,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>)&#32;!=&#32;0)&#32;{
2987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2988 &#32;&#32;&#32;&#32;}
2989 <emphasis role="preprocessor">#else</emphasis>
2990 &#32;&#32;&#32;&#32;pFile&#32;=&#32;fopen(filePath,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
2991 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pFile&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
2992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
2993 &#32;&#32;&#32;&#32;}
2994 <emphasis role="preprocessor">#endif</emphasis>
2995 
2996 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(pMP3,&#32;drmp3__on_read_stdio,&#32;drmp3__on_seek_stdio,&#32;(<emphasis role="keywordtype">void</emphasis>*)pFile,&#32;pConfig);
2997 }
2998 <emphasis role="preprocessor">#endif</emphasis>
2999 
3000 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3001 {
3002 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3004 &#32;&#32;&#32;&#32;}
3005 &#32;&#32;&#32;&#32;
3006 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
3007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;==&#32;drmp3__on_read_stdio)&#32;{
3008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose((FILE*)pMP3-&gt;<link linkend="_structdrmp3_1a35a1754a83174c7cc31213f3699428b6">pUserData</link>);
3009 &#32;&#32;&#32;&#32;}
3010 <emphasis role="preprocessor">#endif</emphasis>
3011 
3012 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(pMP3-&gt;<link linkend="_structdrmp3_1a26b8b51bca250adfe8a934835dcaaecc">pData</link>);
3013 }
3014 
3015 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pBufferOut)
3016 {
3017 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
3018 
3019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3021 &#32;&#32;&#32;&#32;}
3022 
3023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pBufferOut&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;temp[4096];
3025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(framesToRead&#32;&gt;&#32;0)&#32;{
3026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead;
3027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadRightNow&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(temp)/<emphasis role="keyword">sizeof</emphasis>(temp[0])&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesToReadRightNow&#32;&gt;&#32;framesToRead)&#32;{
3029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToReadRightNow&#32;=&#32;framesToRead;
3030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3031 
3032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesJustRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;framesToReadRightNow,&#32;temp);
3033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
3034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3036 
3037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesToRead&#32;-=&#32;framesJustRead;
3038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;framesJustRead;
3039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3040 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;=&#32;drmp3_src_read_frames_ex(&amp;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>,&#32;framesToRead,&#32;pBufferOut,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>);
3042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;+=&#32;totalFramesRead;
3043 &#32;&#32;&#32;&#32;}
3044 
3045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalFramesRead;
3046 }
3047 
3048 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pBufferOut)
3049 {
3050 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tempF32[4096];
3051 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFramesJustRead;
3052 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFramesRead&#32;=&#32;0;
3053 
3054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1aba375c193b3077addacb4ec3b7907752">onRead</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3056 &#32;&#32;&#32;&#32;}
3057 
3058 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Naive&#32;implementation:&#32;read&#32;into&#32;a&#32;temp&#32;f32&#32;buffer,&#32;then&#32;convert.&#32;*/</emphasis>
3059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFramesToReadThisIteration&#32;=&#32;(framesToRead&#32;-&#32;totalPCMFramesRead);
3061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesToReadThisIteration&#32;&gt;&#32;drmp3_countof(tempF32)/pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>)&#32;{
3062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesToReadThisIteration&#32;=&#32;drmp3_countof(tempF32)/pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3064 
3065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesJustRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;pcmFramesToReadThisIteration,&#32;tempF32);
3066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesJustRead&#32;==&#32;0)&#32;{
3067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3069 
3070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1abe41d7ed1ca280315620335435a62c32">drmp3dec_f32_to_s16</link>(tempF32,&#32;pBufferOut,&#32;(<emphasis role="keywordtype">int</emphasis>)(pcmFramesJustRead&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>));&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Safe&#32;cast&#32;since&#32;pcmFramesJustRead&#32;will&#32;be&#32;clamped&#32;based&#32;on&#32;the&#32;size&#32;of&#32;tempF32&#32;which&#32;is&#32;always&#32;small.&#32;*/</emphasis>
3071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pBufferOut&#32;+=&#32;pcmFramesJustRead&#32;*&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3072 
3073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalPCMFramesRead&#32;+=&#32;pcmFramesJustRead;
3074 
3075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesJustRead&#32;&lt;&#32;pcmFramesToReadThisIteration)&#32;{
3076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3078 &#32;&#32;&#32;&#32;}
3079 
3080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalPCMFramesRead;
3081 }
3082 
3083 <emphasis role="keywordtype">void</emphasis>&#32;drmp3_reset(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3084 {
3085 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3086 
3087 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;=&#32;0;
3088 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;0;
3089 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;=&#32;0;
3090 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>&#32;=&#32;0;
3091 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1aec144001a290a012c3976112deeaa025">atEnd</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3092 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>[0]&#32;=&#32;0;
3093 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>[1]&#32;=&#32;0;
3094 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>[2]&#32;=&#32;0;
3095 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1a85a2945a8112b04adeb67d56ad739312">bin</link>[3]&#32;=&#32;0;
3096 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>.<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;=&#32;0;
3097 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>.<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>&#32;=&#32;0;
3098 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;=&#32;0;
3099 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a7ccc1436add2c03ff3f897b2285869e0">isNextFramesLoaded</link>&#32;=&#32;0;
3100 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>&#32;=&#32;0;
3101 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8f9d090643ae6b5b0416888700e90fc3">drmp3dec_init</link>(&amp;pMP3-&gt;<link linkend="_structdrmp3_1aff4724123bbdf3b8e3071601c1f73ff7">decoder</link>);
3102 }
3103 
3104 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_to_start_of_stream(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3105 {
3106 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3107 &#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3108 
3109 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Seek&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stream&#32;to&#32;begin&#32;with.&#32;*/</emphasis>
3110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek(pMP3,&#32;0,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>))&#32;{
3111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3112 &#32;&#32;&#32;&#32;}
3113 
3114 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;any&#32;cached&#32;data.&#32;*/</emphasis>
3115 &#32;&#32;&#32;&#32;drmp3_reset(pMP3);
3116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3117 }
3118 
3119 <emphasis role="keywordtype">float</emphasis>&#32;drmp3_get_cached_pcm_frame_count_from_src(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3120 {
3121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>.<link linkend="_structdrmp3__src__cache_1ad87fdd76d67fff7043cbd76aabf84c73">cachedFrameCount</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1aa8e4b0725633f13c0c79e77ee1a161ae">cache</link>.<link linkend="_structdrmp3__src__cache_1a74dd8ca23787bfaef35cd7d1f8cd592c">iNextFrame</link>)&#32;+&#32;(float)pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>;
3122 }
3123 
3124 <emphasis role="keywordtype">float</emphasis>&#32;drmp3_get_pcm_frames_remaining_in_mp3_frame(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3125 {
3126 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;factor&#32;=&#32;(float)pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>&#32;/&#32;(<emphasis role="keywordtype">float</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>;
3127 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;frameCountPreSRC&#32;=&#32;drmp3_get_cached_pcm_frame_count_from_src(pMP3)&#32;+&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>;
3128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frameCountPreSRC&#32;*&#32;factor;
3129 }
3130 
3131 <emphasis role="comment">/*</emphasis>
3132 <emphasis role="comment">NOTE&#32;ON&#32;SEEKING</emphasis>
3133 <emphasis role="comment">===============</emphasis>
3134 <emphasis role="comment">The&#32;seeking&#32;code&#32;below&#32;is&#32;a&#32;complete&#32;mess&#32;and&#32;is&#32;broken&#32;for&#32;cases&#32;when&#32;the&#32;sample&#32;rate&#32;changes.&#32;The&#32;problem</emphasis>
3135 <emphasis role="comment">is&#32;with&#32;the&#32;resampling&#32;and&#32;the&#32;crappy&#32;resampler&#32;used&#32;by&#32;dr_mp3.&#32;What&#32;needs&#32;to&#32;happen&#32;is&#32;the&#32;following:</emphasis>
3136 <emphasis role="comment"></emphasis>
3137 <emphasis role="comment">1)&#32;The&#32;resampler&#32;needs&#32;to&#32;be&#32;replaced.</emphasis>
3138 <emphasis role="comment">2)&#32;The&#32;resampler&#32;has&#32;state&#32;which&#32;needs&#32;to&#32;be&#32;updated&#32;whenever&#32;an&#32;MP3&#32;frame&#32;is&#32;decoded&#32;outside&#32;of</emphasis>
3139 <emphasis role="comment">&#32;&#32;&#32;drmp3_read_pcm_frames_f32().&#32;The&#32;resampler&#32;needs&#32;an&#32;API&#32;to&#32;&quot;flush&quot;&#32;some&#32;imaginary&#32;input&#32;so&#32;that&#32;it&apos;s</emphasis>
3140 <emphasis role="comment">&#32;&#32;&#32;state&#32;is&#32;updated&#32;accordingly.</emphasis>
3141 <emphasis role="comment">*/</emphasis>
3142 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_forward_by_pcm_frames__brute_force(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameOffset)
3143 {
3144 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesRead;
3145 
3146 <emphasis role="preprocessor">#if&#32;0</emphasis>
3147 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3148 <emphasis role="comment">&#32;&#32;&#32;&#32;MP3&#32;is&#32;a&#32;bit&#32;annoying&#32;when&#32;it&#32;comes&#32;to&#32;seeking&#32;because&#32;of&#32;the&#32;bit&#32;reservoir.&#32;It&#32;basically&#32;means&#32;that&#32;an&#32;MP3&#32;frame&#32;can&#32;possibly</emphasis>
3149 <emphasis role="comment">&#32;&#32;&#32;&#32;depend&#32;on&#32;some&#32;of&#32;the&#32;data&#32;of&#32;prior&#32;frames.&#32;This&#32;means&#32;it&apos;s&#32;not&#32;as&#32;simple&#32;as&#32;seeking&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;MP3&#32;frame&#32;that</emphasis>
3150 <emphasis role="comment">&#32;&#32;&#32;&#32;contains&#32;the&#32;sample&#32;because&#32;that&#32;MP3&#32;frame&#32;will&#32;need&#32;the&#32;data&#32;from&#32;the&#32;previous&#32;MP3&#32;frame&#32;(which&#32;we&#32;just&#32;seeked&#32;past!).&#32;To</emphasis>
3151 <emphasis role="comment">&#32;&#32;&#32;&#32;resolve&#32;this&#32;we&#32;seek&#32;past&#32;a&#32;number&#32;of&#32;MP3&#32;frames&#32;up&#32;to&#32;a&#32;point,&#32;and&#32;then&#32;read-and-discard&#32;the&#32;remainder.</emphasis>
3152 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3153 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;maxFramesToReadAndDiscard&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>)(<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1aaa7c21fb6ee3ac5d6ebc8c45137324ff">DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME</link>&#32;*&#32;3&#32;*&#32;((<emphasis role="keywordtype">float</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>&#32;/&#32;(<emphasis role="keywordtype">float</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>));
3154 
3155 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Now&#32;get&#32;rid&#32;of&#32;leading&#32;whole&#32;frames.&#32;*/</emphasis>
3156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(frameOffset&#32;&gt;&#32;maxFramesToReadAndDiscard)&#32;{
3157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesRemainingInCurrentMP3FrameF&#32;=&#32;drmp3_get_pcm_frames_remaining_in_mp3_frame(pMP3);
3158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesRemainingInCurrentMP3Frame&#32;&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)pcmFramesRemainingInCurrentMP3FrameF;
3159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameOffset&#32;&gt;&#32;pcmFramesRemainingInCurrentMP3Frame)&#32;{
3160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameOffset&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-=&#32;pcmFramesRemainingInCurrentMP3Frame;
3161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;pcmFramesRemainingInCurrentMP3Frame;
3162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a57052dc84770d6a2789b40388101af39">pcmFramesConsumedInMP3Frame</link>&#32;+=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>;
3163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae3017f4bdc17a2df39c4f635bbc875d6">pcmFramesRemainingInMP3Frame</link>&#32;=&#32;0;
3164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3167 
3168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCount&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>);
3169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFrameCount&#32;==&#32;0)&#32;{
3170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3172 &#32;&#32;&#32;&#32;}
3173 
3174 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;last&#32;step&#32;is&#32;to&#32;read-and-discard&#32;any&#32;remaining&#32;PCM&#32;frames&#32;to&#32;make&#32;it&#32;sample-exact.&#32;*/</emphasis>
3175 &#32;&#32;&#32;&#32;framesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;frameOffset,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3176 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesRead&#32;!=&#32;frameOffset)&#32;{
3177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3178 &#32;&#32;&#32;&#32;}
3179 <emphasis role="preprocessor">#else</emphasis>
3180 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Just&#32;using&#32;a&#32;dumb&#32;read-and-discard&#32;for&#32;now&#32;pending&#32;updates&#32;to&#32;the&#32;resampler.&#32;*/</emphasis>
3181 &#32;&#32;&#32;&#32;framesRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;frameOffset,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesRead&#32;!=&#32;frameOffset)&#32;{
3183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3184 &#32;&#32;&#32;&#32;}
3185 <emphasis role="preprocessor">#endif</emphasis>
3186 
3187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3188 }
3189 
3190 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_to_pcm_frame__brute_force(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex)
3191 {
3192 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3193 
3194 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;==&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>)&#32;{
3195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3196 &#32;&#32;&#32;&#32;}
3197 
3198 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3199 <emphasis role="comment">&#32;&#32;&#32;&#32;If&#32;we&apos;re&#32;moving&#32;foward&#32;we&#32;just&#32;read&#32;from&#32;where&#32;we&apos;re&#32;at.&#32;Otherwise&#32;we&#32;need&#32;to&#32;move&#32;back&#32;to&#32;the&#32;start&#32;of</emphasis>
3200 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;stream&#32;and&#32;read&#32;from&#32;the&#32;beginning.</emphasis>
3201 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;&lt;&#32;pMP3-&gt;currentPCMFrame)&#32;{
3203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Moving&#32;backward.&#32;Move&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stream&#32;and&#32;then&#32;move&#32;forward.&#32;*/</emphasis>
3204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3207 &#32;&#32;&#32;&#32;}
3208 
3209 &#32;&#32;&#32;&#32;drmp3_assert(frameIndex&#32;&gt;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>);
3210 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_forward_by_pcm_frames__brute_force(pMP3,&#32;(frameIndex&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>));
3211 }
3212 
3213 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_find_closest_seek_point(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pSeekPointIndex)
3214 {
3215 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iSeekPoint;
3216 
3217 &#32;&#32;&#32;&#32;drmp3_assert(pSeekPointIndex&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3218 
3219 &#32;&#32;&#32;&#32;*pSeekPointIndex&#32;=&#32;0;
3220 
3221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;&lt;&#32;pMP3-&gt;pSeekPoints[0].pcmFrameIndex)&#32;{
3222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3223 &#32;&#32;&#32;&#32;}
3224 
3225 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Linear&#32;search&#32;for&#32;simplicity&#32;to&#32;begin&#32;with&#32;while&#32;I&apos;m&#32;getting&#32;this&#32;thing&#32;working.&#32;Once&#32;it&apos;s&#32;all&#32;working&#32;change&#32;this&#32;to&#32;a&#32;binary&#32;search.&#32;*/</emphasis>
3226 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iSeekPoint&#32;=&#32;0;&#32;iSeekPoint&#32;&lt;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>;&#32;++iSeekPoint)&#32;{
3227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&gt;&#32;frameIndex)&#32;{
3228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;Found&#32;it.&#32;*/</emphasis>
3229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3230 
3231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pSeekPointIndex&#32;=&#32;iSeekPoint;
3232 &#32;&#32;&#32;&#32;}
3233 
3234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3235 }
3236 
3237 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;drmp3_seek_to_pcm_frame__seek_table(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex)
3238 {
3239 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>&#32;seekPoint;
3240 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;priorSeekPointIndex;
3241 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>&#32;iMP3Frame;
3242 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;leftoverFrames;
3243 
3244 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3245 &#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3246 &#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;&gt;&#32;0);
3247 
3248 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;is&#32;no&#32;prior&#32;seekpoint&#32;it&#32;means&#32;the&#32;target&#32;PCM&#32;frame&#32;comes&#32;before&#32;the&#32;first&#32;seek&#32;point.&#32;Just&#32;assume&#32;a&#32;seekpoint&#32;at&#32;the&#32;start&#32;of&#32;the&#32;file&#32;in&#32;this&#32;case.&#32;*/</emphasis>
3249 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drmp3_find_closest_seek_point(pMP3,&#32;frameIndex,&#32;&amp;priorSeekPointIndex))&#32;{
3250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>[priorSeekPointIndex];
3251 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
3253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
3254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;0;
3255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;0;
3256 &#32;&#32;&#32;&#32;}
3257 
3258 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;First&#32;thing&#32;to&#32;do&#32;is&#32;seek&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;relevant&#32;MP3&#32;frame.&#32;*/</emphasis>
3259 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3__on_seek_64(pMP3,&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a09c24b549f31048ce551a25ee2418550abc88c9d91266c52ccc47d58929f4a89a">drmp3_seek_origin_start</link>))&#32;{
3260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Failed&#32;to&#32;seek.&#32;*/</emphasis>
3261 &#32;&#32;&#32;&#32;}
3262 
3263 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;any&#32;cached&#32;data.&#32;*/</emphasis>
3264 &#32;&#32;&#32;&#32;drmp3_reset(pMP3);
3265 
3266 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Whole&#32;MP3&#32;frames&#32;need&#32;to&#32;be&#32;discarded&#32;first.&#32;*/</emphasis>
3267 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iMP3Frame&#32;=&#32;0;&#32;iMP3Frame&#32;&lt;&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>;&#32;++iMP3Frame)&#32;{
3268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesReadPreSRC;
3269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3d_sample_t*&#32;pPCMFrames;
3270 
3271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Pass&#32;in&#32;non-null&#32;for&#32;the&#32;last&#32;frame&#32;because&#32;we&#32;want&#32;to&#32;ensure&#32;the&#32;sample&#32;rate&#32;converter&#32;is&#32;preloaded&#32;correctly.&#32;*/</emphasis>
3272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pPCMFrames&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iMP3Frame&#32;==&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>-1)&#32;{
3274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pPCMFrames&#32;=&#32;(drmp3d_sample_t*)pMP3-&gt;<link linkend="_structdrmp3_1abdf8b4dd777e39349e9884e309059070">pcmFrames</link>;
3275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3276 
3277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;first&#32;need&#32;to&#32;decode&#32;the&#32;next&#32;frame,&#32;and&#32;then&#32;we&#32;need&#32;to&#32;flush&#32;the&#32;resampler.&#32;*/</emphasis>
3278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesReadPreSRC&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;pPCMFrames,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>);
3279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesReadPreSRC&#32;==&#32;0)&#32;{
3280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3282 &#32;&#32;&#32;&#32;}
3283 
3284 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;seeked&#32;to&#32;an&#32;MP3&#32;frame&#32;in&#32;the&#32;raw&#32;stream&#32;so&#32;we&#32;need&#32;to&#32;make&#32;sure&#32;the&#32;current&#32;PCM&#32;frame&#32;is&#32;set&#32;correctly.&#32;*/</emphasis>
3285 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;=&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;-&#32;seekPoint.<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>;
3286 
3287 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3288 <emphasis role="comment">&#32;&#32;&#32;&#32;Update&#32;resampler.&#32;This&#32;is&#32;wrong.&#32;Need&#32;to&#32;instead&#32;update&#32;it&#32;on&#32;a&#32;per&#32;MP3&#32;frame&#32;basis.&#32;Also&#32;broken&#32;for&#32;cases&#32;when</emphasis>
3289 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;sample&#32;rate&#32;is&#32;being&#32;reduced&#32;in&#32;my&#32;testing.&#32;Should&#32;work&#32;fine&#32;when&#32;the&#32;input&#32;and&#32;output&#32;sample&#32;rate&#32;is&#32;the&#32;same</emphasis>
3290 <emphasis role="comment">&#32;&#32;&#32;&#32;or&#32;a&#32;clean&#32;multiple.</emphasis>
3291 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3292 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ad097358cee4d2778ab515253fcf26dbc">drmp3_int64</link>)pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>&#32;*&#32;((<emphasis role="keywordtype">double</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a0ce2b4d2d4261c13e95c3d4ce30528ab">sampleRateIn</link>&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1adae4e2e98280180c76c52c6147b3433c">config</link>.<link linkend="_structdrmp3__src__config_1a5e5fa107151bf047c2ef4c7d01c5ab17">sampleRateOut</link>);&#32;<emphasis role="comment">/*&#32;&lt;--&#32;Cast&#32;to&#32;int64&#32;is&#32;required&#32;for&#32;VC6.&#32;*/</emphasis>
3293 &#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;-&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)(pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>);
3294 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1aedf941b3da9336f33a106ff4d7b50810">alpha</link>&#32;&gt;&#32;0)&#32;{
3295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1abca1d417df91139e0973195b23c8b1e7">src</link>.<link linkend="_structdrmp3__src_1ac272ad6e5e5c6abdad7ccf9fec40e7f5">algo</link>.<link linkend="_structdrmp3__src_1a63aa284abc9a888f49ee031e4e6720cf">linear</link>.<link linkend="_structdrmp3__src_1a4f03315c2f2012b9b5928778490a01d4">isPrevFramesLoaded</link>&#32;=&#32;1;
3296 &#32;&#32;&#32;&#32;}
3297 
3298 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3299 <emphasis role="comment">&#32;&#32;&#32;&#32;Now&#32;at&#32;this&#32;point&#32;we&#32;can&#32;follow&#32;the&#32;same&#32;process&#32;as&#32;the&#32;brute&#32;force&#32;technique&#32;where&#32;we&#32;just&#32;skip&#32;over&#32;unnecessary&#32;MP3&#32;frames&#32;and&#32;then</emphasis>
3300 <emphasis role="comment">&#32;&#32;&#32;&#32;read-and-discard&#32;at&#32;least&#32;2&#32;whole&#32;MP3&#32;frames.</emphasis>
3301 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3302 &#32;&#32;&#32;&#32;leftoverFrames&#32;=&#32;frameIndex&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>;
3303 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_forward_by_pcm_frames__brute_force(pMP3,&#32;leftoverFrames);
3304 }
3305 
3306 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;frameIndex)
3307 {
3308 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3310 &#32;&#32;&#32;&#32;}
3311 
3312 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameIndex&#32;==&#32;0)&#32;{
3313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_to_start_of_stream(pMP3);
3314 &#32;&#32;&#32;&#32;}
3315 
3316 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Use&#32;the&#32;seek&#32;table&#32;if&#32;we&#32;have&#32;one.&#32;*/</emphasis>
3317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;&amp;&amp;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;&gt;&#32;0)&#32;{
3318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_to_pcm_frame__seek_table(pMP3,&#32;frameIndex);
3319 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3_seek_to_pcm_frame__brute_force(pMP3,&#32;frameIndex);
3321 &#32;&#32;&#32;&#32;}
3322 }
3323 
3324 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pMP3FrameCount,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pPCMFrameCount)
3325 {
3326 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;currentPCMFrame;
3327 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFrameCount;
3328 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalMP3FrameCount;
3329 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;totalPCMFrameCountFractionalPart;
3330 
3331 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3333 &#32;&#32;&#32;&#32;}
3334 
3335 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3336 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;way&#32;this&#32;works&#32;is&#32;we&#32;move&#32;back&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stream,&#32;iterate&#32;over&#32;each&#32;MP3&#32;frame&#32;and&#32;calculate&#32;the&#32;frame&#32;count&#32;based</emphasis>
3337 <emphasis role="comment">&#32;&#32;&#32;&#32;on&#32;our&#32;output&#32;sample&#32;rate,&#32;the&#32;seek&#32;back&#32;to&#32;the&#32;PCM&#32;frame&#32;we&#32;were&#32;sitting&#32;on&#32;before&#32;calling&#32;this&#32;function.</emphasis>
3338 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
3339 
3340 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;stream&#32;must&#32;support&#32;seeking&#32;for&#32;this&#32;to&#32;work.&#32;*/</emphasis>
3341 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3-&gt;<link linkend="_structdrmp3_1ab40a369b3de3d2991076a566570a459b">onSeek</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3343 &#32;&#32;&#32;&#32;}
3344 
3345 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&apos;ll&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;where&#32;we&#32;were,&#32;so&#32;grab&#32;the&#32;PCM&#32;frame&#32;we&apos;re&#32;currently&#32;sitting&#32;on&#32;so&#32;we&#32;can&#32;restore&#32;later.&#32;*/</emphasis>
3346 &#32;&#32;&#32;&#32;currentPCMFrame&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>;
3347 &#32;&#32;&#32;&#32;
3348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3350 &#32;&#32;&#32;&#32;}
3351 
3352 &#32;&#32;&#32;&#32;totalPCMFrameCount&#32;=&#32;0;
3353 &#32;&#32;&#32;&#32;totalMP3FrameCount&#32;=&#32;0;
3354 
3355 &#32;&#32;&#32;&#32;totalPCMFrameCountFractionalPart&#32;=&#32;0;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;With&#32;resampling&#32;there&#32;will&#32;be&#32;a&#32;fractional&#32;part&#32;to&#32;each&#32;MP3&#32;frame&#32;that&#32;we&#32;need&#32;to&#32;accumulate.&#32;*/</emphasis>
3356 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3FrameIn;
3358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;srcRatio;
3359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pcmFramesInCurrentMP3FrameOutF;
3360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3FrameOut;
3361 
3362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameIn&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>);
3363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesInCurrentMP3FrameIn&#32;==&#32;0)&#32;{
3364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3366 
3367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcRatio&#32;=&#32;(float)pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>&#32;/&#32;(<emphasis role="keywordtype">float</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
3368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_assert(srcRatio&#32;&gt;&#32;0);
3369 
3370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameOutF&#32;=&#32;totalPCMFrameCountFractionalPart&#32;+&#32;(pcmFramesInCurrentMP3FrameIn&#32;/&#32;srcRatio);
3371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameOut&#32;&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)pcmFramesInCurrentMP3FrameOutF;
3372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalPCMFrameCountFractionalPart&#32;=&#32;pcmFramesInCurrentMP3FrameOutF&#32;-&#32;pcmFramesInCurrentMP3FrameOut;
3373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalPCMFrameCount&#32;+=&#32;pcmFramesInCurrentMP3FrameOut;
3374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalMP3FrameCount&#32;+=&#32;1;
3375 &#32;&#32;&#32;&#32;}
3376 
3377 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Finally,&#32;we&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;where&#32;we&#32;were.&#32;*/</emphasis>
3378 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3380 &#32;&#32;&#32;&#32;}
3381 
3382 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(pMP3,&#32;currentPCMFrame))&#32;{
3383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3384 &#32;&#32;&#32;&#32;}
3385 
3386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3FrameCount&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pMP3FrameCount&#32;=&#32;totalMP3FrameCount;
3388 &#32;&#32;&#32;&#32;}
3389 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pPCMFrameCount&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pPCMFrameCount&#32;=&#32;totalPCMFrameCount;
3391 &#32;&#32;&#32;&#32;}
3392 
3393 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3394 }
3395 
3396 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8da91a2c2b1659be7393d799fed77754">drmp3_get_pcm_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3397 {
3398 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFrameCount;
3399 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;&amp;totalPCMFrameCount))&#32;{
3400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3401 &#32;&#32;&#32;&#32;}
3402 
3403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalPCMFrameCount;
3404 }
3405 
3406 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a51e6dda0eebdefceed1612f20133b765">drmp3_get_mp3_frame_count</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3)
3407 {
3408 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalMP3FrameCount;
3409 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(pMP3,&#32;&amp;totalMP3FrameCount,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;{
3410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3411 &#32;&#32;&#32;&#32;}
3412 
3413 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;totalMP3FrameCount;
3414 }
3415 
3416 <emphasis role="keywordtype">void</emphasis>&#32;drmp3__accumulate_running_pcm_frame_count(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCountIn,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pRunningPCMFrameCount,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pRunningPCMFrameCountFractionalPart)
3417 {
3418 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;srcRatio;
3419 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;pcmFrameCountOutF;
3420 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFrameCountOut;
3421 
3422 &#32;&#32;&#32;&#32;srcRatio&#32;=&#32;(float)pMP3-&gt;<link linkend="_structdrmp3_1ade76fd0c402a551a22c0a06a0b8eb5dc">mp3FrameSampleRate</link>&#32;/&#32;(<emphasis role="keywordtype">float</emphasis>)pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
3423 &#32;&#32;&#32;&#32;drmp3_assert(srcRatio&#32;&gt;&#32;0);
3424 
3425 &#32;&#32;&#32;&#32;pcmFrameCountOutF&#32;=&#32;*pRunningPCMFrameCountFractionalPart&#32;+&#32;(pcmFrameCountIn&#32;/&#32;srcRatio);
3426 &#32;&#32;&#32;&#32;pcmFrameCountOut&#32;&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)pcmFrameCountOutF;
3427 &#32;&#32;&#32;&#32;*pRunningPCMFrameCountFractionalPart&#32;=&#32;pcmFrameCountOutF&#32;-&#32;pcmFrameCountOut;
3428 &#32;&#32;&#32;&#32;*pRunningPCMFrameCount&#32;+=&#32;pcmFrameCountOut;
3429 }
3430 
3431 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
3432 {
3433 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;bytePos;
3434 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFrameIndex;&#32;<emphasis role="comment">/*&#32;&lt;--&#32;After&#32;sample&#32;rate&#32;conversion.&#32;*/</emphasis>
3435 }&#32;drmp3__seeking_mp3_frame_info;
3436 
3437 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a31caabc58611fdd8d3849be909e0ebc8">drmp3_calculate_seek_points</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>*&#32;pSeekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints)
3438 {
3439 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount;
3440 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;currentPCMFrame;
3441 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalMP3FrameCount;
3442 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalPCMFrameCount;
3443 
3444 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pSeekPointCount&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;pSeekPoints&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;Invalid&#32;args.&#32;*/</emphasis>
3446 &#32;&#32;&#32;&#32;}
3447 
3448 &#32;&#32;&#32;&#32;seekPointCount&#32;=&#32;*pSeekPointCount;
3449 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seekPointCount&#32;==&#32;0)&#32;{
3450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;client&#32;has&#32;requested&#32;no&#32;seek&#32;points.&#32;Consider&#32;this&#32;to&#32;be&#32;invalid&#32;arguments&#32;since&#32;the&#32;client&#32;has&#32;probably&#32;not&#32;intended&#32;this.&#32;*/</emphasis>
3451 &#32;&#32;&#32;&#32;}
3452 
3453 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&apos;ll&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;the&#32;current&#32;sample&#32;after&#32;calculating&#32;the&#32;seekpoints&#32;so&#32;we&#32;need&#32;to&#32;go&#32;ahead&#32;and&#32;grab&#32;the&#32;current&#32;location&#32;at&#32;the&#32;top.&#32;*/</emphasis>
3454 &#32;&#32;&#32;&#32;currentPCMFrame&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a6500ce0ed15aa4b63622ca9f10b8011e">currentPCMFrame</link>;
3455 &#32;&#32;&#32;&#32;
3456 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;never&#32;do&#32;more&#32;than&#32;the&#32;total&#32;number&#32;of&#32;MP3&#32;frames&#32;and&#32;we&#32;limit&#32;it&#32;to&#32;32-bits.&#32;*/</emphasis>
3457 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a683eb8376212c588201e2fc8075a4876">drmp3_get_mp3_and_pcm_frame_count</link>(pMP3,&#32;&amp;totalMP3FrameCount,&#32;&amp;totalPCMFrameCount))&#32;{
3458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3459 &#32;&#32;&#32;&#32;}
3460 
3461 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&apos;s&#32;less&#32;than&#32;DRMP3_SEEK_LEADING_MP3_FRAMES+1&#32;frames&#32;we&#32;just&#32;report&#32;1&#32;seek&#32;point&#32;which&#32;will&#32;be&#32;the&#32;very&#32;start&#32;of&#32;the&#32;stream.&#32;*/</emphasis>
3462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalMP3FrameCount&#32;&lt;&#32;DRMP3_SEEK_LEADING_MP3_FRAMES+1)&#32;{
3463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPointCount&#32;=&#32;1;
3464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
3465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
3466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;0;
3467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[0].<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;0;
3468 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;pcmFramesBetweenSeekPoints;
3470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__seeking_mp3_frame_info&#32;mp3FrameInfo[DRMP3_SEEK_LEADING_MP3_FRAMES+1];
3471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;runningPCMFrameCount&#32;=&#32;0;
3472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;runningPCMFrameCountFractionalPart&#32;=&#32;0;
3473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;nextTargetPCMFrame;
3474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iMP3Frame;
3475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;iSeekPoint;
3476 
3477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seekPointCount&#32;&gt;&#32;totalMP3FrameCount-1)&#32;{
3478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seekPointCount&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>)totalMP3FrameCount-1;
3479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3480 
3481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesBetweenSeekPoints&#32;=&#32;totalPCMFrameCount&#32;/&#32;(seekPointCount+1);
3482 
3483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3484 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Here&#32;is&#32;where&#32;we&#32;actually&#32;calculate&#32;the&#32;seek&#32;points.&#32;We&#32;need&#32;to&#32;start&#32;by&#32;moving&#32;the&#32;start&#32;of&#32;the&#32;stream.&#32;We&#32;then&#32;enumerate&#32;over&#32;each</emphasis>
3485 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MP3&#32;frame.</emphasis>
3486 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3490 
3491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3492 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;We&#32;need&#32;to&#32;cache&#32;the&#32;byte&#32;positions&#32;of&#32;the&#32;previous&#32;MP3&#32;frames.&#32;As&#32;a&#32;new&#32;MP3&#32;frame&#32;is&#32;iterated,&#32;we&#32;cycle&#32;the&#32;byte&#32;positions&#32;in&#32;this</emphasis>
3493 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array.&#32;The&#32;value&#32;in&#32;the&#32;first&#32;item&#32;in&#32;this&#32;array&#32;is&#32;the&#32;byte&#32;position&#32;that&#32;will&#32;be&#32;reported&#32;in&#32;the&#32;next&#32;seek&#32;point.</emphasis>
3494 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3495 
3496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;need&#32;to&#32;initialize&#32;the&#32;array&#32;of&#32;MP3&#32;byte&#32;positions&#32;for&#32;the&#32;leading&#32;MP3&#32;frames.&#32;*/</emphasis>
3497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iMP3Frame&#32;=&#32;0;&#32;iMP3Frame&#32;&lt;&#32;DRMP3_SEEK_LEADING_MP3_FRAMES+1;&#32;++iMP3Frame)&#32;{
3498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3FrameIn;
3499 
3500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;byte&#32;position&#32;of&#32;the&#32;next&#32;frame&#32;will&#32;be&#32;the&#32;stream&apos;s&#32;cursor&#32;position,&#32;minus&#32;whatever&#32;is&#32;sitting&#32;in&#32;the&#32;buffer.&#32;*/</emphasis>
3501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_assert(pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;&gt;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>);
3502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[iMP3Frame].bytePos&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>;
3503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[iMP3Frame].pcmFrameIndex&#32;=&#32;runningPCMFrameCount;
3504 
3505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;need&#32;to&#32;get&#32;information&#32;about&#32;this&#32;frame&#32;so&#32;we&#32;can&#32;know&#32;how&#32;many&#32;samples&#32;it&#32;contained.&#32;*/</emphasis>
3506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameIn&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>);
3507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesInCurrentMP3FrameIn&#32;==&#32;0)&#32;{
3508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;&#32;<emphasis role="comment">/*&#32;This&#32;should&#32;never&#32;happen.&#32;*/</emphasis>
3509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3510 
3511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__accumulate_running_pcm_frame_count(pMP3,&#32;pcmFramesInCurrentMP3FrameIn,&#32;&amp;runningPCMFrameCount,&#32;&amp;runningPCMFrameCountFractionalPart);
3512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3513 
3514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3515 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;At&#32;this&#32;point&#32;we&#32;will&#32;have&#32;extracted&#32;the&#32;byte&#32;positions&#32;of&#32;the&#32;leading&#32;MP3&#32;frames.&#32;We&#32;can&#32;now&#32;start&#32;iterating&#32;over&#32;each&#32;seek&#32;point&#32;and</emphasis>
3516 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculate&#32;them.</emphasis>
3517 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTargetPCMFrame&#32;=&#32;0;
3519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(iSeekPoint&#32;=&#32;0;&#32;iSeekPoint&#32;&lt;&#32;seekPointCount;&#32;++iSeekPoint)&#32;{
3520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTargetPCMFrame&#32;+=&#32;pcmFramesBetweenSeekPoints;
3521 
3522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nextTargetPCMFrame&#32;&lt;&#32;runningPCMFrameCount)&#32;{
3524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;next&#32;seek&#32;point&#32;is&#32;in&#32;the&#32;current&#32;MP3&#32;frame.&#32;*/</emphasis>
3525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;mp3FrameInfo[0].bytePos;
3526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;nextTargetPCMFrame;
3527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;DRMP3_SEEK_LEADING_MP3_FRAMES;
3528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)(nextTargetPCMFrame&#32;-&#32;mp3FrameInfo[DRMP3_SEEK_LEADING_MP3_FRAMES-1].pcmFrameIndex);
3529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
3532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;pcmFramesInCurrentMP3FrameIn;
3533 
3534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3535 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;next&#32;seek&#32;point&#32;is&#32;not&#32;in&#32;the&#32;current&#32;MP3&#32;frame,&#32;so&#32;continue&#32;on&#32;to&#32;the&#32;next&#32;one.&#32;The&#32;first&#32;thing&#32;to&#32;do&#32;is&#32;cycle&#32;the&#32;cached</emphasis>
3536 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MP3&#32;frame&#32;info.</emphasis>
3537 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;drmp3_countof(mp3FrameInfo)-1;&#32;++i)&#32;{
3539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[i]&#32;=&#32;mp3FrameInfo[i+1];
3540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3541 
3542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cache&#32;previous&#32;MP3&#32;frame&#32;info.&#32;*/</emphasis>
3543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[drmp3_countof(mp3FrameInfo)-1].bytePos&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a89971e4af6f62c59f99a1c908690efe3">streamCursor</link>&#32;-&#32;pMP3-&gt;<link linkend="_structdrmp3_1ad1d4cb4cb6209977963313a27f34c3bd">dataSize</link>;
3544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mp3FrameInfo[drmp3_countof(mp3FrameInfo)-1].pcmFrameIndex&#32;=&#32;runningPCMFrameCount;
3545 
3546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
3547 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Go&#32;to&#32;the&#32;next&#32;MP3&#32;frame.&#32;This&#32;shouldn&apos;t&#32;ever&#32;fail,&#32;but&#32;just&#32;in&#32;case&#32;it&#32;does&#32;we&#32;just&#32;set&#32;the&#32;seek&#32;point&#32;and&#32;break.&#32;If&#32;it&#32;happens,&#32;it</emphasis>
3548 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;should&#32;only&#32;ever&#32;do&#32;it&#32;for&#32;the&#32;last&#32;seek&#32;point.</emphasis>
3549 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcmFramesInCurrentMP3FrameIn&#32;=&#32;drmp3_decode_next_frame_ex(pMP3,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>);
3551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcmFramesInCurrentMP3FrameIn&#32;==&#32;0)&#32;{
3552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a5398f0b18f7fe2641fb711811c113ee4">seekPosInBytes</link>&#32;&#32;&#32;&#32;&#32;=&#32;mp3FrameInfo[0].bytePos;
3553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1a66ef89cbe38ffcc98e90ca129eaa610c">pcmFrameIndex</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;nextTargetPCMFrame;
3554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1aa34353c7d85e13d6a7e2eb5e96b1c831">mp3FramesToDiscard</link>&#32;=&#32;DRMP3_SEEK_LEADING_MP3_FRAMES;
3555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pSeekPoints[iSeekPoint].<link linkend="_structdrmp3__seek__point_1ac4c6056504bcca1852715936035c1a31">pcmFramesToDiscard</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0f793b82421f9da719fcab59c8bcab53">drmp3_uint16</link>)(nextTargetPCMFrame&#32;-&#32;mp3FrameInfo[DRMP3_SEEK_LEADING_MP3_FRAMES-1].pcmFrameIndex);
3556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3558 
3559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3__accumulate_running_pcm_frame_count(pMP3,&#32;pcmFramesInCurrentMP3FrameIn,&#32;&amp;runningPCMFrameCount,&#32;&amp;runningPCMFrameCountFractionalPart);
3560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3563 
3564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Finally,&#32;we&#32;need&#32;to&#32;seek&#32;back&#32;to&#32;where&#32;we&#32;were.&#32;*/</emphasis>
3565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drmp3_seek_to_start_of_stream(pMP3))&#32;{
3566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1afe83739ea72e957aa63026c842b61e4d">drmp3_seek_to_pcm_frame</link>(pMP3,&#32;currentPCMFrame))&#32;{
3569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3571 &#32;&#32;&#32;&#32;}
3572 
3573 &#32;&#32;&#32;&#32;*pSeekPointCount&#32;=&#32;seekPointCount;
3574 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3575 }
3576 
3577 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1af83487abc315b9bf3f15bdd348d9dfe3">drmp3_bool32</link>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a6fbf417308a71a006881246f9d9b579e">drmp3_bind_seek_table</link>(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aaaff0113dacbe1c3f8323c6915bf247f">drmp3_uint32</link>&#32;seekPointCount,&#32;<link linkend="_structdrmp3__seek__point">drmp3_seek_point</link>*&#32;pSeekPoints)
3578 {
3579 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pMP3&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ac79b35cfd6aa8152bfe93160a6914003">DRMP3_FALSE</link>;
3581 &#32;&#32;&#32;&#32;}
3582 
3583 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seekPointCount&#32;==&#32;0&#32;||&#32;pSeekPoints&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unbinding.&#32;*/</emphasis>
3585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;=&#32;0;
3586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3587 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Binding.&#32;*/</emphasis>
3589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1ae9095cc4be150c2ed98c9a4f53041f19">seekPointCount</link>&#32;=&#32;seekPointCount;
3590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pMP3-&gt;<link linkend="_structdrmp3_1a2acf98278c0b2ad412965b9d02987c5e">pSeekPoints</link>&#32;=&#32;pSeekPoints;
3591 &#32;&#32;&#32;&#32;}
3592 
3593 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aeb2d2121c93cb7953b109504d977e67e">DRMP3_TRUE</link>;
3594 }
3595 
3596 
3597 <emphasis role="keywordtype">float</emphasis>*&#32;drmp3__full_read_and_close_f32(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3598 {
3599 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
3600 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesCapacity&#32;=&#32;0;
3601 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pFrames&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3602 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;temp[4096];
3603 
3604 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3605 
3606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadRightNow&#32;=&#32;drmp3_countof(temp)&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a0e588ddd6de55091a74063afecd8d56b">drmp3_read_pcm_frames_f32</link>(pMP3,&#32;framesToReadRightNow,&#32;temp);
3609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
3610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3612 
3613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reallocate&#32;the&#32;output&#32;buffer&#32;if&#32;there&apos;s&#32;not&#32;enough&#32;room.&#32;*/</emphasis>
3614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesCapacity&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
3615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;newFramesBufferSize;
3616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;pNewFrames;
3617 
3618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesCapacity&#32;*=&#32;2;
3619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesCapacity&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
3620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesCapacity&#32;=&#32;totalFramesRead&#32;+&#32;framesJustRead;
3621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3622 
3623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesBufferSize&#32;=&#32;framesCapacity*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>*<emphasis role="keyword">sizeof</emphasis>(float);
3624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newFramesBufferSize&#32;&gt;&#32;DRMP3_SIZE_MAX)&#32;{
3625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3627 
3628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewFrames&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>*)drmp3_realloc(pFrames,&#32;(<emphasis role="keywordtype">size_t</emphasis>)newFramesBufferSize);
3629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewFrames&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(pFrames);
3631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3633 
3634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFrames&#32;=&#32;pNewFrames;
3635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3636 
3637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_copy_memory(pFrames&#32;+&#32;totalFramesRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>,&#32;temp,&#32;(<emphasis role="keywordtype">size_t</emphasis>)(framesJustRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>*<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>)));
3638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;framesJustRead;
3639 
3640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;number&#32;of&#32;frames&#32;we&#32;asked&#32;for&#32;is&#32;less&#32;that&#32;what&#32;we&#32;actually&#32;read&#32;it&#32;means&#32;we&apos;ve&#32;reached&#32;the&#32;end.&#32;*/</emphasis>
3641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;!=&#32;framesToReadRightNow)&#32;{
3642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3644 &#32;&#32;&#32;&#32;}
3645 
3646 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1a414dc46beae254b791c6d8ab3b8263c3">outputChannels</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1a1a01591ac7fa6a9a0f570e69e7b97755">outputSampleRate</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
3649 &#32;&#32;&#32;&#32;}
3650 
3651 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(pMP3);
3652 
3653 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pTotalFrameCount)&#32;{
3654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pTotalFrameCount&#32;=&#32;totalFramesRead;
3655 &#32;&#32;&#32;&#32;}
3656 
3657 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pFrames;
3658 }
3659 
3660 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;drmp3__full_read_and_close_s16(<link linkend="_structdrmp3">drmp3</link>*&#32;pMP3,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3661 {
3662 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;totalFramesRead&#32;=&#32;0;
3663 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesCapacity&#32;=&#32;0;
3664 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pFrames&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3665 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>&#32;temp[4096];
3666 
3667 &#32;&#32;&#32;&#32;drmp3_assert(pMP3&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3668 
3669 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
3670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesToReadRightNow&#32;=&#32;drmp3_countof(temp)&#32;/&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;framesJustRead&#32;=&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a70055f4a3c02863990dfb3b2f5168a10">drmp3_read_pcm_frames_s16</link>(pMP3,&#32;framesToReadRightNow,&#32;temp);
3672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;==&#32;0)&#32;{
3673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3675 
3676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reallocate&#32;the&#32;output&#32;buffer&#32;if&#32;there&apos;s&#32;not&#32;enough&#32;room.&#32;*/</emphasis>
3677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesCapacity&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
3678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>&#32;newFramesBufferSize;
3679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;pNewFrames;
3680 
3681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesCapacity&#32;*=&#32;2;
3682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesCapacity&#32;&lt;&#32;totalFramesRead&#32;+&#32;framesJustRead)&#32;{
3683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framesCapacity&#32;=&#32;totalFramesRead&#32;+&#32;framesJustRead;
3684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3685 
3686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newFramesBufferSize&#32;=&#32;framesCapacity*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>*<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>);
3687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newFramesBufferSize&#32;&gt;&#32;DRMP3_SIZE_MAX)&#32;{
3688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3690 
3691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pNewFrames&#32;=&#32;(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*)drmp3_realloc(pFrames,&#32;(<emphasis role="keywordtype">size_t</emphasis>)newFramesBufferSize);
3692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pNewFrames&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(pFrames);
3694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3696 
3697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pFrames&#32;=&#32;pNewFrames;
3698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3699 
3700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drmp3_copy_memory(pFrames&#32;+&#32;totalFramesRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>,&#32;temp,&#32;(<emphasis role="keywordtype">size_t</emphasis>)(framesJustRead*pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>*<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>)));
3701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalFramesRead&#32;+=&#32;framesJustRead;
3702 
3703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;number&#32;of&#32;frames&#32;we&#32;asked&#32;for&#32;is&#32;less&#32;that&#32;what&#32;we&#32;actually&#32;read&#32;it&#32;means&#32;we&apos;ve&#32;reached&#32;the&#32;end.&#32;*/</emphasis>
3704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(framesJustRead&#32;!=&#32;framesToReadRightNow)&#32;{
3705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3707 &#32;&#32;&#32;&#32;}
3708 
3709 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pConfig&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
3710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1a414dc46beae254b791c6d8ab3b8263c3">outputChannels</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1ade030203edf619566625bd278421d4e7">channels</link>;
3711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pConfig-&gt;<link linkend="_structdrmp3__config_1a1a01591ac7fa6a9a0f570e69e7b97755">outputSampleRate</link>&#32;=&#32;pMP3-&gt;<link linkend="_structdrmp3_1a125a69b581af18055b9aced80a68ddea">sampleRate</link>;
3712 &#32;&#32;&#32;&#32;}
3713 
3714 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a3a9812142141572d246f3233302c17fd">drmp3_uninit</link>(pMP3);
3715 
3716 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pTotalFrameCount)&#32;{
3717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pTotalFrameCount&#32;=&#32;totalFramesRead;
3718 &#32;&#32;&#32;&#32;}
3719 
3720 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pFrames;
3721 }
3722 
3723 
3724 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1ac70adaa3017dfb3a860d68f4fcd1f138">drmp3_open_and_read_f32</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3725 {
3726 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
3727 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(&amp;mp3,&#32;onRead,&#32;onSeek,&#32;pUserData,&#32;pConfig))&#32;{
3728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3729 &#32;&#32;&#32;&#32;}
3730 
3731 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_f32(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
3732 }
3733 
3734 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1af88b13919f419b7c6a2d1f900d5ec00b">drmp3_open_and_read_s16</link>(<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8d518e74045cca06d5e9398bf919130c">drmp3_read_proc</link>&#32;onRead,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a421a67ffd75b8c16b5870b68033b7a9b">drmp3_seek_proc</link>&#32;onSeek,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pUserData,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3735 {
3736 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
3737 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a114add48ed93bfe191aadfb4da4315a9">drmp3_init</link>(&amp;mp3,&#32;onRead,&#32;onSeek,&#32;pUserData,&#32;pConfig))&#32;{
3738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3739 &#32;&#32;&#32;&#32;}
3740 
3741 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_s16(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
3742 }
3743 
3744 
3745 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a6b706e9ac5335a488c9712f9ad6cc557">drmp3_open_memory_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3746 {
3747 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
3748 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(&amp;mp3,&#32;pData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;pConfig))&#32;{
3749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3750 &#32;&#32;&#32;&#32;}
3751 
3752 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_f32(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
3753 }
3754 
3755 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1aefc6fde08c26b739097e28cb29962820">drmp3_open_memory_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;pData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3756 {
3757 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
3758 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a8bfd3fe758338cbb89cabde457d82c1c">drmp3_init_memory</link>(&amp;mp3,&#32;pData,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a9ea2ddb297818884b1942bf375e45da4">dataSize</link>,&#32;pConfig))&#32;{
3759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3760 &#32;&#32;&#32;&#32;}
3761 
3762 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_s16(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
3763 }
3764 
3765 
3766 <emphasis role="preprocessor">#ifndef&#32;DR_MP3_NO_STDIO</emphasis>
3767 <emphasis role="keywordtype">float</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a5ad2b2ab69e3e5db02558dc8e4de78a7">drmp3_open_file_and_read_f32</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3768 {
3769 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
3770 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(&amp;mp3,&#32;filePath,&#32;pConfig))&#32;{
3771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3772 &#32;&#32;&#32;&#32;}
3773 
3774 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_f32(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
3775 }
3776 
3777 <link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae3e89a5a13e19d8a3951c99666d97334">drmp3_int16</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2dr__mp3_8h_1a6c76ae053ea079d20ffd2a8e27eeadef">drmp3_open_file_and_read_s16</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filePath,&#32;<link linkend="_structdrmp3__config">drmp3_config</link>*&#32;pConfig,&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1ae8b9dce3662c113d9e33c7946bcef558">drmp3_uint64</link>*&#32;pTotalFrameCount)
3778 {
3779 &#32;&#32;&#32;&#32;<link linkend="_structdrmp3">drmp3</link>&#32;mp3;
3780 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2dr__mp3_8h_1a1b79af2fdeeb2125a09b6d9303df613e">drmp3_init_file</link>(&amp;mp3,&#32;filePath,&#32;pConfig))&#32;{
3781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3782 &#32;&#32;&#32;&#32;}
3783 
3784 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drmp3__full_read_and_close_s16(&amp;mp3,&#32;pConfig,&#32;pTotalFrameCount);
3785 }
3786 <emphasis role="preprocessor">#endif</emphasis>
3787 
3788 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2dr__mp3_8h_1aa0ed33063a74124208b81cb9b2168f74">drmp3_free</link>(<emphasis role="keywordtype">void</emphasis>*&#32;p)
3789 {
3790 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raudio_8c_1a0c7e6c3a95cf598fd459fe84e59ceea6">DRMP3_FREE</link>(p);
3791 }
3792 
3793 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*DR_MP3_IMPLEMENTATION*/</emphasis><emphasis role="preprocessor"></emphasis>
3794 
3795 <emphasis role="comment">/*</emphasis>
3796 <emphasis role="comment">DIFFERENCES&#32;BETWEEN&#32;minimp3&#32;AND&#32;dr_mp3</emphasis>
3797 <emphasis role="comment">======================================</emphasis>
3798 <emphasis role="comment">-&#32;First,&#32;keep&#32;in&#32;mind&#32;that&#32;minimp3&#32;(https://github.com/lieff/minimp3)&#32;is&#32;where&#32;all&#32;the&#32;real&#32;work&#32;was&#32;done.&#32;All&#32;of&#32;the</emphasis>
3799 <emphasis role="comment">&#32;&#32;code&#32;relating&#32;to&#32;the&#32;actual&#32;decoding&#32;remains&#32;mostly&#32;unmodified,&#32;apart&#32;from&#32;some&#32;namespacing&#32;changes.</emphasis>
3800 <emphasis role="comment">-&#32;dr_mp3&#32;adds&#32;a&#32;pulling&#32;style&#32;API&#32;which&#32;allows&#32;you&#32;to&#32;deliver&#32;raw&#32;data&#32;via&#32;callbacks.&#32;So,&#32;rather&#32;than&#32;pushing&#32;data</emphasis>
3801 <emphasis role="comment">&#32;&#32;to&#32;the&#32;decoder,&#32;the&#32;decoder&#32;_pulls_&#32;data&#32;from&#32;your&#32;callbacks.</emphasis>
3802 <emphasis role="comment">-&#32;In&#32;addition&#32;to&#32;callbacks,&#32;a&#32;decoder&#32;can&#32;be&#32;initialized&#32;from&#32;a&#32;block&#32;of&#32;memory&#32;and&#32;a&#32;file.</emphasis>
3803 <emphasis role="comment">-&#32;The&#32;dr_mp3&#32;pull&#32;API&#32;reads&#32;PCM&#32;frames&#32;rather&#32;than&#32;whole&#32;MP3&#32;frames.</emphasis>
3804 <emphasis role="comment">-&#32;dr_mp3&#32;adds&#32;convenience&#32;APIs&#32;for&#32;opening&#32;and&#32;decoding&#32;entire&#32;files&#32;in&#32;one&#32;go.</emphasis>
3805 <emphasis role="comment">-&#32;dr_mp3&#32;is&#32;fully&#32;namespaced,&#32;including&#32;the&#32;implementation&#32;section,&#32;which&#32;is&#32;more&#32;suitable&#32;when&#32;compiling&#32;projects</emphasis>
3806 <emphasis role="comment">&#32;&#32;as&#32;a&#32;single&#32;translation&#32;unit&#32;(aka&#32;unity&#32;builds).&#32;At&#32;the&#32;time&#32;of&#32;writing&#32;this,&#32;a&#32;unity&#32;build&#32;is&#32;not&#32;possible&#32;when</emphasis>
3807 <emphasis role="comment">&#32;&#32;using&#32;minimp3&#32;in&#32;conjunction&#32;with&#32;stb_vorbis.&#32;dr_mp3&#32;addresses&#32;this.</emphasis>
3808 <emphasis role="comment">*/</emphasis>
3809 
3810 <emphasis role="comment">/*</emphasis>
3811 <emphasis role="comment">REVISION&#32;HISTORY</emphasis>
3812 <emphasis role="comment">================</emphasis>
3813 <emphasis role="comment">v0.4.7&#32;-&#32;2019-07-28</emphasis>
3814 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compiler&#32;error.</emphasis>
3815 <emphasis role="comment"></emphasis>
3816 <emphasis role="comment">v0.4.6&#32;-&#32;2019-06-14</emphasis>
3817 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;compiler&#32;error.</emphasis>
3818 <emphasis role="comment"></emphasis>
3819 <emphasis role="comment">v0.4.5&#32;-&#32;2019-06-06</emphasis>
3820 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3821 <emphasis role="comment"></emphasis>
3822 <emphasis role="comment">v0.4.4&#32;-&#32;2019-05-06</emphasis>
3823 <emphasis role="comment">&#32;&#32;-&#32;Fixes&#32;to&#32;the&#32;VC6&#32;build.</emphasis>
3824 <emphasis role="comment"></emphasis>
3825 <emphasis role="comment">v0.4.3&#32;-&#32;2019-05-05</emphasis>
3826 <emphasis role="comment">&#32;&#32;-&#32;Use&#32;the&#32;channel&#32;count&#32;and/or&#32;sample&#32;rate&#32;of&#32;the&#32;first&#32;MP3&#32;frame&#32;instead&#32;of&#32;DR_MP3_DEFAULT_CHANNELS&#32;and</emphasis>
3827 <emphasis role="comment">&#32;&#32;&#32;&#32;DR_MP3_DEFAULT_SAMPLE_RATE&#32;when&#32;they&#32;are&#32;set&#32;to&#32;0.&#32;To&#32;use&#32;the&#32;old&#32;behaviour,&#32;just&#32;set&#32;the&#32;relevant&#32;property&#32;to</emphasis>
3828 <emphasis role="comment">&#32;&#32;&#32;&#32;DR_MP3_DEFAULT_CHANNELS&#32;or&#32;DR_MP3_DEFAULT_SAMPLE_RATE.</emphasis>
3829 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;s16&#32;reading&#32;APIs</emphasis>
3830 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_read_pcm_frames_s16</emphasis>
3831 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_memory_and_read_s16</emphasis>
3832 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_read_s16</emphasis>
3833 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_file_and_read_s16</emphasis>
3834 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_get_mp3_and_pcm_frame_count()&#32;to&#32;the&#32;public&#32;header&#32;section.</emphasis>
3835 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;support&#32;for&#32;C89.</emphasis>
3836 <emphasis role="comment">&#32;&#32;-&#32;Change&#32;license&#32;to&#32;choice&#32;of&#32;public&#32;domain&#32;or&#32;MIT-0.</emphasis>
3837 <emphasis role="comment"></emphasis>
3838 <emphasis role="comment">v0.4.2&#32;-&#32;2019-02-21</emphasis>
3839 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning.</emphasis>
3840 <emphasis role="comment"></emphasis>
3841 <emphasis role="comment">v0.4.1&#32;-&#32;2018-12-30</emphasis>
3842 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;warning.</emphasis>
3843 <emphasis role="comment"></emphasis>
3844 <emphasis role="comment">v0.4.0&#32;-&#32;2018-12-16</emphasis>
3845 <emphasis role="comment">&#32;&#32;-&#32;API&#32;CHANGE:&#32;Rename&#32;some&#32;APIs:</emphasis>
3846 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_read_f32&#32;-&gt;&#32;to&#32;drmp3_read_pcm_frames_f32</emphasis>
3847 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_seek_to_frame&#32;-&gt;&#32;drmp3_seek_to_pcm_frame</emphasis>
3848 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_decode_f32&#32;-&gt;&#32;drmp3_open_and_read_f32</emphasis>
3849 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_decode_memory_f32&#32;-&gt;&#32;drmp3_open_memory_and_read_f32</emphasis>
3850 <emphasis role="comment">&#32;&#32;&#32;&#32;-&#32;drmp3_open_and_decode_file_f32&#32;-&gt;&#32;drmp3_open_file_and_read_f32</emphasis>
3851 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_get_pcm_frame_count().</emphasis>
3852 <emphasis role="comment">&#32;&#32;-&#32;Add&#32;drmp3_get_mp3_frame_count().</emphasis>
3853 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;seeking&#32;performance.</emphasis>
3854 <emphasis role="comment"></emphasis>
3855 <emphasis role="comment">v0.3.2&#32;-&#32;2018-09-11</emphasis>
3856 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;couple&#32;of&#32;memory&#32;leaks.</emphasis>
3857 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3858 <emphasis role="comment"></emphasis>
3859 <emphasis role="comment">v0.3.1&#32;-&#32;2018-08-25</emphasis>
3860 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build.</emphasis>
3861 <emphasis role="comment"></emphasis>
3862 <emphasis role="comment">v0.3.0&#32;-&#32;2018-08-25</emphasis>
3863 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.&#32;This&#32;has&#32;a&#32;minor&#32;API&#32;change:&#32;the&#32;&quot;pcm&quot;&#32;parameter&#32;of&#32;drmp3dec_decode_frame()&#32;has</emphasis>
3864 <emphasis role="comment">&#32;&#32;&#32;&#32;been&#32;changed&#32;from&#32;short*&#32;to&#32;void*&#32;because&#32;it&#32;can&#32;now&#32;output&#32;both&#32;s16&#32;and&#32;f32&#32;samples,&#32;depending&#32;on&#32;whether&#32;or</emphasis>
3865 <emphasis role="comment">&#32;&#32;&#32;&#32;not&#32;the&#32;DR_MP3_FLOAT_OUTPUT&#32;option&#32;is&#32;set.</emphasis>
3866 <emphasis role="comment"></emphasis>
3867 <emphasis role="comment">v0.2.11&#32;-&#32;2018-08-08</emphasis>
3868 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;a&#32;bug&#32;where&#32;the&#32;last&#32;part&#32;of&#32;a&#32;file&#32;is&#32;not&#32;read.</emphasis>
3869 <emphasis role="comment"></emphasis>
3870 <emphasis role="comment">v0.2.10&#32;-&#32;2018-08-07</emphasis>
3871 <emphasis role="comment">&#32;&#32;-&#32;Improve&#32;64-bit&#32;detection.</emphasis>
3872 <emphasis role="comment"></emphasis>
3873 <emphasis role="comment">v0.2.9&#32;-&#32;2018-08-05</emphasis>
3874 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build&#32;on&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
3875 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3876 <emphasis role="comment"></emphasis>
3877 <emphasis role="comment">v0.2.8&#32;-&#32;2018-08-02</emphasis>
3878 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;errors&#32;with&#32;older&#32;versions&#32;of&#32;GCC.</emphasis>
3879 <emphasis role="comment"></emphasis>
3880 <emphasis role="comment">v0.2.7&#32;-&#32;2018-07-13</emphasis>
3881 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3882 <emphasis role="comment"></emphasis>
3883 <emphasis role="comment">v0.2.6&#32;-&#32;2018-07-12</emphasis>
3884 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3885 <emphasis role="comment"></emphasis>
3886 <emphasis role="comment">v0.2.5&#32;-&#32;2018-06-22</emphasis>
3887 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3888 <emphasis role="comment"></emphasis>
3889 <emphasis role="comment">v0.2.4&#32;-&#32;2018-05-12</emphasis>
3890 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3891 <emphasis role="comment"></emphasis>
3892 <emphasis role="comment">v0.2.3&#32;-&#32;2018-04-29</emphasis>
3893 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;TCC&#32;build.</emphasis>
3894 <emphasis role="comment"></emphasis>
3895 <emphasis role="comment">v0.2.2&#32;-&#32;2018-04-28</emphasis>
3896 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;bug&#32;when&#32;opening&#32;a&#32;decoder&#32;from&#32;memory.</emphasis>
3897 <emphasis role="comment"></emphasis>
3898 <emphasis role="comment">v0.2.1&#32;-&#32;2018-04-27</emphasis>
3899 <emphasis role="comment">&#32;&#32;-&#32;Efficiency&#32;improvements&#32;when&#32;the&#32;decoder&#32;reaches&#32;the&#32;end&#32;of&#32;the&#32;stream.</emphasis>
3900 <emphasis role="comment"></emphasis>
3901 <emphasis role="comment">v0.2&#32;-&#32;2018-04-21</emphasis>
3902 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3903 <emphasis role="comment">&#32;&#32;-&#32;Start&#32;using&#32;major.minor.revision&#32;versioning.</emphasis>
3904 <emphasis role="comment"></emphasis>
3905 <emphasis role="comment">v0.1d&#32;-&#32;2018-03-30</emphasis>
3906 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3907 <emphasis role="comment"></emphasis>
3908 <emphasis role="comment">v0.1c&#32;-&#32;2018-03-11</emphasis>
3909 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;C++&#32;build&#32;error.</emphasis>
3910 <emphasis role="comment"></emphasis>
3911 <emphasis role="comment">v0.1b&#32;-&#32;2018-03-07</emphasis>
3912 <emphasis role="comment">&#32;&#32;-&#32;Bring&#32;up&#32;to&#32;date&#32;with&#32;minimp3.</emphasis>
3913 <emphasis role="comment"></emphasis>
3914 <emphasis role="comment">v0.1a&#32;-&#32;2018-02-28</emphasis>
3915 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;compilation&#32;error&#32;on&#32;GCC/Clang.</emphasis>
3916 <emphasis role="comment">&#32;&#32;-&#32;Fix&#32;some&#32;warnings.</emphasis>
3917 <emphasis role="comment"></emphasis>
3918 <emphasis role="comment">v0.1&#32;-&#32;2018-02-xx</emphasis>
3919 <emphasis role="comment">&#32;&#32;-&#32;Initial&#32;versioned&#32;release.</emphasis>
3920 <emphasis role="comment">*/</emphasis>
3921 
3922 <emphasis role="comment">/*</emphasis>
3923 <emphasis role="comment">This&#32;software&#32;is&#32;available&#32;as&#32;a&#32;choice&#32;of&#32;the&#32;following&#32;licenses.&#32;Choose</emphasis>
3924 <emphasis role="comment">whichever&#32;you&#32;prefer.</emphasis>
3925 <emphasis role="comment"></emphasis>
3926 <emphasis role="comment">===============================================================================</emphasis>
3927 <emphasis role="comment">ALTERNATIVE&#32;1&#32;-&#32;Public&#32;Domain&#32;(www.unlicense.org)</emphasis>
3928 <emphasis role="comment">===============================================================================</emphasis>
3929 <emphasis role="comment">This&#32;is&#32;free&#32;and&#32;unencumbered&#32;software&#32;released&#32;into&#32;the&#32;public&#32;domain.</emphasis>
3930 <emphasis role="comment"></emphasis>
3931 <emphasis role="comment">Anyone&#32;is&#32;free&#32;to&#32;copy,&#32;modify,&#32;publish,&#32;use,&#32;compile,&#32;sell,&#32;or&#32;distribute&#32;this</emphasis>
3932 <emphasis role="comment">software,&#32;either&#32;in&#32;source&#32;code&#32;form&#32;or&#32;as&#32;a&#32;compiled&#32;binary,&#32;for&#32;any&#32;purpose,</emphasis>
3933 <emphasis role="comment">commercial&#32;or&#32;non-commercial,&#32;and&#32;by&#32;any&#32;means.</emphasis>
3934 <emphasis role="comment"></emphasis>
3935 <emphasis role="comment">In&#32;jurisdictions&#32;that&#32;recognize&#32;copyright&#32;laws,&#32;the&#32;author&#32;or&#32;authors&#32;of&#32;this</emphasis>
3936 <emphasis role="comment">software&#32;dedicate&#32;any&#32;and&#32;all&#32;copyright&#32;interest&#32;in&#32;the&#32;software&#32;to&#32;the&#32;public</emphasis>
3937 <emphasis role="comment">domain.&#32;We&#32;make&#32;this&#32;dedication&#32;for&#32;the&#32;benefit&#32;of&#32;the&#32;public&#32;at&#32;large&#32;and&#32;to</emphasis>
3938 <emphasis role="comment">the&#32;detriment&#32;of&#32;our&#32;heirs&#32;and&#32;successors.&#32;We&#32;intend&#32;this&#32;dedication&#32;to&#32;be&#32;an</emphasis>
3939 <emphasis role="comment">overt&#32;act&#32;of&#32;relinquishment&#32;in&#32;perpetuity&#32;of&#32;all&#32;present&#32;and&#32;future&#32;rights&#32;to</emphasis>
3940 <emphasis role="comment">this&#32;software&#32;under&#32;copyright&#32;law.</emphasis>
3941 <emphasis role="comment"></emphasis>
3942 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
3943 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
3944 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
3945 <emphasis role="comment">AUTHORS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN</emphasis>
3946 <emphasis role="comment">ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION</emphasis>
3947 <emphasis role="comment">WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
3948 <emphasis role="comment"></emphasis>
3949 <emphasis role="comment">For&#32;more&#32;information,&#32;please&#32;refer&#32;to&#32;&lt;http://unlicense.org/&gt;</emphasis>
3950 <emphasis role="comment"></emphasis>
3951 <emphasis role="comment">===============================================================================</emphasis>
3952 <emphasis role="comment">ALTERNATIVE&#32;2&#32;-&#32;MIT&#32;No&#32;Attribution</emphasis>
3953 <emphasis role="comment">===============================================================================</emphasis>
3954 <emphasis role="comment">Copyright&#32;2018&#32;David&#32;Reid</emphasis>
3955 <emphasis role="comment"></emphasis>
3956 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
3957 <emphasis role="comment">this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
3958 <emphasis role="comment">the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
3959 <emphasis role="comment">use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies</emphasis>
3960 <emphasis role="comment">of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do</emphasis>
3961 <emphasis role="comment">so.</emphasis>
3962 <emphasis role="comment"></emphasis>
3963 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
3964 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
3965 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
3966 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
3967 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
3968 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
3969 <emphasis role="comment">SOFTWARE.</emphasis>
3970 <emphasis role="comment">*/</emphasis>
3971 
3972 <emphasis role="comment">/*</emphasis>
3973 <emphasis role="comment">&#32;&#32;&#32;&#32;https://github.com/lieff/minimp3</emphasis>
3974 <emphasis role="comment">&#32;&#32;&#32;&#32;To&#32;the&#32;extent&#32;possible&#32;under&#32;law,&#32;the&#32;author(s)&#32;have&#32;dedicated&#32;all&#32;copyright&#32;and&#32;related&#32;and&#32;neighboring&#32;rights&#32;to&#32;this&#32;software&#32;to&#32;the&#32;public&#32;domain&#32;worldwide.</emphasis>
3975 <emphasis role="comment">&#32;&#32;&#32;&#32;This&#32;software&#32;is&#32;distributed&#32;without&#32;any&#32;warranty.</emphasis>
3976 <emphasis role="comment">&#32;&#32;&#32;&#32;See&#32;&lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</emphasis>
3977 <emphasis role="comment">*/</emphasis>
</programlisting></section>
