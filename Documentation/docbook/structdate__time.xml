<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structdate__time" xml:lang="en-US">
<title>date_time Struct Reference</title>
<indexterm><primary>date_time</primary></indexterm>
<para>

<para>A date-time. </para>
 
</para>
<para>
<computeroutput>#include &lt;date_time.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_structdate__time_1a79f7461304efaf559893495fb1f2ad1b">date_time</link> () noexcept=default</para>

<para>Default constructor. Does not initialize the members. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1a66cc0afeb90eb1bdec56ccc4fbc28ace">date_time</link> (const toml::date &amp;d, const toml::time &amp;t) noexcept</para>

<para>Constructs a local date-time. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1a1e661ff41f89accf42283719880523cf">date_time</link> (const toml::date &amp;d) noexcept</para>

<para>Constructs a local date-time. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1af30b39e0cd336adc49196329f2a38ba9">date_time</link> (const toml::time &amp;t) noexcept</para>

<para>Constructs a local date-time. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1adaaa9f1ae45614a97207bf3663068240">date_time</link> (const toml::date &amp;d, const toml::time &amp;t, const toml::time_offset &amp;off) noexcept</para>

<para>Constructs an offset date-time. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a9056032bb0e8f92a5009fb6e53f943e3">is_local</link> () const noexcept</para>

<para>Returns true if this <link linkend="_structdate__time">date_time</link> does not contain timezone offset information. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> <link linkend="_structdate__time_1a79f7461304efaf559893495fb1f2ad1b">date_time</link> () noexcept=default</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1a66cc0afeb90eb1bdec56ccc4fbc28ace">date_time</link> (const toml::date &amp;d, const toml::time &amp;t) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1a1e661ff41f89accf42283719880523cf">date_time</link> (const toml::date &amp;d) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1af30b39e0cd336adc49196329f2a38ba9">date_time</link> (const toml::time &amp;t) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr <link linkend="_structdate__time_1adaaa9f1ae45614a97207bf3663068240">date_time</link> (const toml::date &amp;d, const toml::time &amp;t, const toml::time_offset &amp;off) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a9056032bb0e8f92a5009fb6e53f943e3">is_local</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>toml::date <link linkend="_structdate__time_1a2060f3fbddcdf9a95d040ef847b3077b">date</link></para>

<para>The date component. </para>
</listitem>
            <listitem><para>toml::time <link linkend="_structdate__time_1a41c1a6580adadd5d1bcb206cd801b42a">time</link></para>

<para>The time component. </para>
</listitem>
            <listitem><para>optional&lt; toml::time_offset &gt; <link linkend="_structdate__time_1a1402dc3f43aab1b74cec5ef4f11087fd">offset</link></para>

<para>The timezone offset component. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a38c66565292f0caffe111a10a654690b">operator==</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>

<para>Equality operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a2c6be102d18ce9e09068af8dfd04ece6">operator!=</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>

<para>Inequality operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a5fb1aba93d6fb3355f6993f033fa0a69">operator&lt;</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>

<para>Less-than operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a66bb2da2653c1512df0a3f796326fd02">operator&lt;=</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>

<para>Less-than-or-equal-to operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a2482fb5a2b13f18b7589a627855529af">operator&gt;</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>

<para>Greater-than operator. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1ab7c914ad3875581f9fbe90cba68cade9">operator&gt;=</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>

<para>Greater-than-or-equal-to operator. </para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_structdate__time_1ada883abc2927d0dc77c81e4f48e719bb">operator&lt;&lt;</link> (std::ostream &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs)</para>

<para>Prints a <link linkend="_structdate__time">date_time</link> out to a stream in RFC 3339 format. \detail \cpp std::cout &lt;&lt; toml::date_time{ { 1987, 3, 16 }, { 10, 20, 34 } } &lt;&lt; &quot;\n&quot;; std::cout &lt;&lt; toml::date_time{ { 1987, 3, 16 }, { 10, 20, 34 }, { -2, -30 } } &lt;&lt; &quot;\n&quot;; std::cout &lt;&lt; toml::date_time{ { 1987, 3, 16 }, { 10, 20, 34 }, {} } &lt;&lt; &quot;\n&quot;; \ecpp. </para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a38c66565292f0caffe111a10a654690b">operator==</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a2c6be102d18ce9e09068af8dfd04ece6">operator!=</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a5fb1aba93d6fb3355f6993f033fa0a69">operator&lt;</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a66bb2da2653c1512df0a3f796326fd02">operator&lt;=</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1a2482fb5a2b13f18b7589a627855529af">operator&gt;</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structdate__time_1ab7c914ad3875581f9fbe90cba68cade9">operator&gt;=</link> (const <link linkend="_structdate__time">date_time</link> &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs) noexcept</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_structdate__time_1ada883abc2927d0dc77c81e4f48e719bb">operator&lt;&lt;</link> (std::ostream &amp;lhs, const <link linkend="_structdate__time">date_time</link> &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A date-time. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structdate__time_1a79f7461304efaf559893495fb1f2ad1b"/><section>
    <title>date_time()<computeroutput>[1/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> date_time::date_time ( )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Default constructor. Does not initialize the members. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a66cc0afeb90eb1bdec56ccc4fbc28ace"/><section>
    <title>date_time()<computeroutput>[2/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::date &amp; d, const toml::time &amp; t)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructs a local date-time. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>d</entry><entry>
<para>The date component. </para>
</entry>
                            </row>
                            <row>
<entry>t</entry><entry>
<para>The time component. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_structdate__time_1a1e661ff41f89accf42283719880523cf"/><section>
    <title>date_time()<computeroutput>[3/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::date &amp; d)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructs a local date-time. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>d</entry><entry>
<para>The date component. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_structdate__time_1af30b39e0cd336adc49196329f2a38ba9"/><section>
    <title>date_time()<computeroutput>[4/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::time &amp; t)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructs a local date-time. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>t</entry><entry>
<para>The time component. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_structdate__time_1adaaa9f1ae45614a97207bf3663068240"/><section>
    <title>date_time()<computeroutput>[5/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::date &amp; d, const toml::time &amp; t, const toml::time_offset &amp; off)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructs an offset date-time. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>d</entry><entry>
<para>The date component. </para>
</entry>
                            </row>
                            <row>
<entry>t</entry><entry>
<para>The time component. </para>
</entry>
                            </row>
                            <row>
<entry>off</entry><entry>
<para>The timezone offset. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_structdate__time_1a79f7461304efaf559893495fb1f2ad1b"/><section>
    <title>date_time()<computeroutput>[6/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> date_time::date_time ( )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1a66cc0afeb90eb1bdec56ccc4fbc28ace"/><section>
    <title>date_time()<computeroutput>[7/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::date &amp; d, const toml::time &amp; t)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1a1e661ff41f89accf42283719880523cf"/><section>
    <title>date_time()<computeroutput>[8/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::date &amp; d)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1af30b39e0cd336adc49196329f2a38ba9"/><section>
    <title>date_time()<computeroutput>[9/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::time &amp; t)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1adaaa9f1ae45614a97207bf3663068240"/><section>
    <title>date_time()<computeroutput>[10/10]</computeroutput></title>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date_time</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link> constexpr date_time::date_time (const toml::date &amp; d, const toml::time &amp; t, const toml::time_offset &amp; off)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structdate__time_1a9056032bb0e8f92a5009fb6e53f943e3"/><section>
    <title>is_local()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>is_local</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>is_local</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> date_time::is_local ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns true if this <link linkend="_structdate__time">date_time</link> does not contain timezone offset information. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a9056032bb0e8f92a5009fb6e53f943e3"/><section>
    <title>is_local()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>is_local</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>is_local</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> date_time::is_local ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_structdate__time_1a2c6be102d18ce9e09068af8dfd04ece6"/><section>
    <title>operator!=<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Inequality operator. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a2c6be102d18ce9e09068af8dfd04ece6"/><section>
    <title>operator!=<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator!= (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1a5fb1aba93d6fb3355f6993f033fa0a69"/><section>
    <title>operator&lt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Less-than operator. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a5fb1aba93d6fb3355f6993f033fa0a69"/><section>
    <title>operator&lt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1ada883abc2927d0dc77c81e4f48e719bb"/><section>
    <title>operator&lt;&lt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Prints a <link linkend="_structdate__time">date_time</link> out to a stream in RFC 3339 format. \detail \cpp std::cout &lt;&lt; toml::date_time{ { 1987, 3, 16 }, { 10, 20, 34 } } &lt;&lt; &quot;\n&quot;; std::cout &lt;&lt; toml::date_time{ { 1987, 3, 16 }, { 10, 20, 34 }, { -2, -30 } } &lt;&lt; &quot;\n&quot;; std::cout &lt;&lt; toml::date_time{ { 1987, 3, 16 }, { 10, 20, 34 }, {} } &lt;&lt; &quot;\n&quot;; \ecpp. </para>
</para>

<para>\out 1987-03-16T10:20:34 1987-03-16T10:20:34-02:30 1987-03-16T10:20:34Z \eout </para>
</section>
<anchor xml:id="_structdate__time_1ada883abc2927d0dc77c81e4f48e719bb"/><section>
    <title>operator&lt;&lt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1a66bb2da2653c1512df0a3f796326fd02"/><section>
    <title>operator&lt;=<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Less-than-or-equal-to operator. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a66bb2da2653c1512df0a3f796326fd02"/><section>
    <title>operator&lt;=<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1a38c66565292f0caffe111a10a654690b"/><section>
    <title>operator==<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Equality operator. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a38c66565292f0caffe111a10a654690b"/><section>
    <title>operator==<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator== (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1a2482fb5a2b13f18b7589a627855529af"/><section>
    <title>operator&gt;<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&gt;</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt; (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Greater-than operator. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a2482fb5a2b13f18b7589a627855529af"/><section>
    <title>operator&gt;<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&gt;</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt; (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structdate__time_1ab7c914ad3875581f9fbe90cba68cade9"/><section>
    <title>operator&gt;=<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&gt;=</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt;= (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Greater-than-or-equal-to operator. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1ab7c914ad3875581f9fbe90cba68cade9"/><section>
    <title>operator&gt;=<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&gt;=</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> friend constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&gt;= (const <link linkend="_structdate__time">date_time</link> &amp; lhs, const <link linkend="_structdate__time">date_time</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structdate__time_1a2060f3fbddcdf9a95d040ef847b3077b"/><section>
    <title>date</title>
<indexterm><primary>date</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>date</secondary></indexterm>
<para><computeroutput>toml::date date_time::date</computeroutput></para><para>

<para>The date component. </para>
</para>
</section>
<anchor xml:id="_structdate__time_1a1402dc3f43aab1b74cec5ef4f11087fd"/><section>
    <title>offset</title>
<indexterm><primary>offset</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>offset</secondary></indexterm>
<para><computeroutput>optional&lt; toml::time_offset &gt; date_time::offset</computeroutput></para><para>

<para>The timezone offset component. </para>
</para>

<para><formalpara><title>Remarks</title>

<para>The <link linkend="_structdate__time">date_time</link> is said to be &apos;local&apos; if the offset is empty. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_structdate__time_1a41c1a6580adadd5d1bcb206cd801b42a"/><section>
    <title>time</title>
<indexterm><primary>time</primary><secondary>date_time</secondary></indexterm>
<indexterm><primary>date_time</primary><secondary>time</secondary></indexterm>
<para><computeroutput>toml::time date_time::time</computeroutput></para><para>

<para>The time component. </para>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/<link linkend="_date__time_8h">date_time.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
