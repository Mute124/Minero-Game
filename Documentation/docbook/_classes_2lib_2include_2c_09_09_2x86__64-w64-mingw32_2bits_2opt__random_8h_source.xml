<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2opt__random_8h_source" xml:lang="en-US">
<title>opt_random.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/x86_64-w64-mingw32/bits/opt_random.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Optimizations&#32;for&#32;random&#32;number&#32;functions,&#32;x86&#32;version&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2012-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_BITS_OPT_RANDOM_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_BITS_OPT_RANDOM_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#ifdef&#32;__SSE3__</emphasis>
34 <emphasis role="preprocessor">#include&#32;&lt;pmmintrin.h&gt;</emphasis>
35 <emphasis role="preprocessor">#endif</emphasis>
36 
37 
38 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
39 
40 
41 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
42 {
43 _GLIBCXX_BEGIN_NAMESPACE_VERSION
44 
45 <emphasis role="preprocessor">#ifdef&#32;__SSE3__</emphasis>
46 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_UniformRandomNumberGenerator&gt;
48 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
49 &#32;&#32;&#32;&#32;&#32;&#32;normal_distribution&lt;double&gt;::
50 &#32;&#32;&#32;&#32;&#32;&#32;__generate(<emphasis role="keyword">typename</emphasis>&#32;normal_distribution&lt;double&gt;::result_type*&#32;__f,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;normal_distribution&lt;double&gt;::result_type*&#32;__t,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_UniformRandomNumberGenerator&amp;&#32;__urng,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;param_type&amp;&#32;__param)
54 &#32;&#32;&#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__uctype;
56 
57 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__f&#32;==&#32;__t)
58 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
59 
60 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_saved_available)
61 &#32;&#32;&#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_saved_available&#32;=&#32;<emphasis role="keyword">false</emphasis>;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*__f++&#32;=&#32;_M_saved&#32;*&#32;__param.stddev()&#32;+&#32;__param.mean();
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__f&#32;==&#32;__t)
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
67 &#32;&#32;&#32;&#32;&#32;&#32;}
68 
69 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__maskval&#32;=&#32;0xfffffffffffffull;
70 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;__mask&#32;=&#32;_mm_set1_epi64x(__maskval);
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;__two&#32;=&#32;_mm_set1_epi64x(0x4000000000000000ull);
72 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;__m128d&#32;__three&#32;=&#32;_mm_set1_pd(3.0);
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__m128d&#32;__av&#32;=&#32;_mm_set1_pd(__param.mean());
74 
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__urngmin&#32;=&#32;__urng.min();
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__urngmax&#32;=&#32;__urng.max();
77 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__urngrange&#32;=&#32;__urngmax&#32;-&#32;__urngmin;
78 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__uerngrange&#32;=&#32;__urngrange&#32;+&#32;1;
79 
80 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__f&#32;+&#32;1&#32;&lt;&#32;__t)
81 &#32;&#32;&#32;&#32;&#32;&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;__le;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128d&#32;__x;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union</emphasis>
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__i;
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128d&#32;__d;
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;__v;
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__urngrange&#32;&gt;&#32;__maskval)
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__detail::_Power_of_2(__uerngrange))
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v.__i&#32;=&#32;_mm_and_si128(_mm_set_epi64x(__urng(),
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__urng()),
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask);
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__uerange&#32;=&#32;__maskval&#32;+&#32;1;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__scaling&#32;=&#32;__urngrange&#32;/&#32;__uerange;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__past&#32;=&#32;__uerange&#32;*&#32;__scaling;
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__v1;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v1&#32;=&#32;__uctype(__urng())&#32;-&#32;__urngmin;
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__v1&#32;&gt;=&#32;__past);
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v1&#32;/=&#32;__scaling;
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__v2;
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v2&#32;=&#32;__uctype(__urng())&#32;-&#32;__urngmin;
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__v2&#32;&gt;=&#32;__past);
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v2&#32;/=&#32;__scaling;
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v.__i&#32;=&#32;_mm_set_epi64x(__v1,&#32;__v2);
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__urngrange&#32;==&#32;__maskval)
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v.__i&#32;=&#32;_mm_set_epi64x(__urng(),&#32;__urng());
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((__urngrange&#32;+&#32;2)&#32;*&#32;__urngrange&#32;&gt;=&#32;__maskval
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__detail::_Power_of_2(__uerngrange))
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__v1&#32;=&#32;__urng()&#32;*&#32;__uerngrange&#32;+&#32;__urng();
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__v2&#32;=&#32;__urng()&#32;*&#32;__uerngrange&#32;+&#32;__urng();
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v.__i&#32;=&#32;_mm_and_si128(_mm_set_epi64x(__v1,&#32;__v2),
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__nrng&#32;=&#32;2;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__uctype&#32;__high&#32;=&#32;__maskval&#32;/&#32;__uerngrange&#32;/&#32;__uerngrange;
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__high&#32;&gt;&#32;__uerngrange)
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__nrng;
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__high&#32;/=&#32;__uerngrange;
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__highrange&#32;=&#32;__high&#32;+&#32;1;
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__scaling&#32;=&#32;__urngrange&#32;/&#32;__highrange;
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__uctype&#32;__past&#32;=&#32;__highrange&#32;*&#32;__scaling;
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__uctype&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>;
141 
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__v1;
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;__uctype(__urng())&#32;-&#32;__urngmin;
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;&gt;=&#32;__past);
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v1&#32;=&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;/&#32;__scaling;
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__cnt&#32;=&#32;0;&#32;__cnt&#32;&lt;&#32;__nrng;&#32;++__cnt)
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;__v1;
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v1&#32;*=&#32;__uerngrange;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v1&#32;+=&#32;__uctype(__urng())&#32;-&#32;__urngmin;
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__v1&#32;&gt;&#32;__maskval&#32;||&#32;__v1&#32;&lt;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>);
157 
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__v2;
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;__uctype(__urng())&#32;-&#32;__urngmin;
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;&gt;=&#32;__past);
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v2&#32;=&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;/&#32;__scaling;
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__cnt&#32;=&#32;0;&#32;__cnt&#32;&lt;&#32;__nrng;&#32;++__cnt)
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;__v2;
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v2&#32;*=&#32;__uerngrange;
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v2&#32;+=&#32;__uctype(__urng())&#32;-&#32;__urngmin;
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__v2&#32;&gt;&#32;__maskval&#32;||&#32;__v2&#32;&lt;&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>);
173 
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v.__i&#32;=&#32;_mm_set_epi64x(__v1,&#32;__v2);
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
176 
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__v.__i&#32;=&#32;_mm_or_si128(__v.__i,&#32;__two);
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__x&#32;=&#32;_mm_sub_pd(__v.__d,&#32;__three);
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128d&#32;__m&#32;=&#32;_mm_mul_pd(__x,&#32;__x);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__le&#32;=&#32;_mm_cvtsd_f64(_mm_hadd_pd&#32;(__m,&#32;__m));
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__le&#32;==&#32;0.0&#32;||&#32;__le&#32;&gt;=&#32;1.0);
183 
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;__mult&#32;=&#32;(std::sqrt(-2.0&#32;*&#32;std::log(__le)&#32;/&#32;__le)
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;__param.stddev());
186 
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__x&#32;=&#32;_mm_add_pd(_mm_mul_pd(__x,&#32;_mm_set1_pd(__mult)),&#32;__av);
188 
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a414198ff4d6ca353abca6299ba208bfe">_mm_storeu_pd</link>(__f,&#32;__x);
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__f&#32;+=&#32;2;
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
192 
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__f&#32;!=&#32;__t)
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result_type&#32;__x,&#32;__y,&#32;__r2;
196 
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__detail::_Adaptor&lt;_UniformRandomNumberGenerator,&#32;result_type&gt;
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__aurng(__urng);
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__x&#32;=&#32;result_type(2.0)&#32;*&#32;__aurng()&#32;-&#32;1.0;
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__y&#32;=&#32;result_type(2.0)&#32;*&#32;__aurng()&#32;-&#32;1.0;
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__r2&#32;=&#32;__x&#32;*&#32;__x&#32;+&#32;__y&#32;*&#32;__y;
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__r2&#32;&gt;&#32;1.0&#32;||&#32;__r2&#32;==&#32;0.0);
207 
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;result_type&#32;__mult&#32;=&#32;std::sqrt(-2&#32;*&#32;std::log(__r2)&#32;/&#32;__r2);
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_saved&#32;=&#32;__x&#32;*&#32;__mult;
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_saved_available&#32;=&#32;<emphasis role="keyword">true</emphasis>;
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*__f&#32;=&#32;__y&#32;*&#32;__mult&#32;*&#32;__param.stddev()&#32;+&#32;__param.mean();
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
213 &#32;&#32;&#32;&#32;&#32;&#32;}
214 <emphasis role="preprocessor">#endif</emphasis>
215 
216 
217 _GLIBCXX_END_NAMESPACE_VERSION
218 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
219 
220 
221 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_BITS_OPT_RANDOM_H</emphasis>
</programlisting></section>
