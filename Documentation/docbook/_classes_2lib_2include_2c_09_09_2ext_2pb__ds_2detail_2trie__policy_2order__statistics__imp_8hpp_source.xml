<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2order__statistics__imp_8hpp_source" xml:lang="en-US">
<title>order_statistics_imp.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
44 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::iterator
45 PB_DS_CLASS_C_DEC::
46 find_by_order(size_type&#32;order)
47 {
48 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(empty())
49 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>();
50 
51 &#32;&#32;++order;
52 &#32;&#32;node_iterator&#32;nd_it&#32;=&#32;node_begin();
53 
54 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
55 &#32;&#32;&#32;&#32;{
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&gt;&#32;nd_it.get_metadata())
57 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;++base_type::rightmost_it(nd_it);
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;num_children&#32;=&#32;nd_it.num_children();
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_children&#32;==&#32;0)
61 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*nd_it;
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;num_children;&#32;++i)
64 &#32;&#32;&#32;&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;node_iterator&#32;child_nd_it&#32;=&#32;nd_it.get_child(i);
66 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&lt;=&#32;child_nd_it.get_metadata())
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;num_children;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nd_it&#32;=&#32;child_nd_it;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;order&#32;-=&#32;child_nd_it.get_metadata();
73 &#32;&#32;&#32;&#32;}
74 &#32;&#32;&#32;&#32;}
75 }
76 
77 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
78 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::const_iterator
79 PB_DS_CLASS_C_DEC::
80 find_by_order(size_type&#32;order)<emphasis role="keyword">&#32;const</emphasis>
81 <emphasis role="keyword"></emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>)-&gt;find_by_order(order);&#32;}
82 
83 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
84 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::size_type
85 PB_DS_CLASS_C_DEC::
86 order_of_key(key_const_reference&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
87 <emphasis role="keyword"></emphasis>{
88 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_ATraits&amp;&#32;r_traits&#32;=
89 &#32;&#32;&#32;&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>*&#32;<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>)-&gt;get_access_traits();
90 
91 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;order_of_prefix(r_traits.begin(r_key),&#32;r_traits.end(r_key));
92 }
93 
94 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
95 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::size_type
96 PB_DS_CLASS_C_DEC::
97 order_of_prefix(<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;e)<emphasis role="keyword">&#32;const</emphasis>
99 <emphasis role="keyword"></emphasis>{
100 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(empty())
101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
102 
103 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_ATraits&amp;&#32;r_traits&#32;=
104 &#32;&#32;&#32;&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>)-&gt;get_access_traits();
105 
106 &#32;&#32;node_const_iterator&#32;nd_it&#32;=&#32;node_begin();
107 &#32;&#32;node_const_iterator&#32;end_nd_it&#32;=&#32;node_end();
108 &#32;&#32;size_type&#32;ord&#32;=&#32;0;
109 
110 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
111 &#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;num_children&#32;=&#32;nd_it.num_children();
113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_children&#32;==&#32;0)
114 &#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;key_const_reference&#32;r_key&#32;=&#32;base_type::extract_key(*(*nd_it));
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;key_b&#32;=
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_traits.begin(r_key);
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;key_e&#32;=
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_traits.end(r_key);
121 
122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(base_type::less(key_b,&#32;key_e,&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;e,&#32;&#32;r_traits))&#32;?
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ord&#32;+&#32;1&#32;:&#32;ord;
124 &#32;&#32;&#32;&#32;}
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;node_const_iterator&#32;next_nd_it&#32;=&#32;end_nd_it;
127 &#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;i&#32;=&#32;num_children&#32;-&#32;1;
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
130 &#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;&#32;&#32;node_const_iterator&#32;child_nd_it&#32;=&#32;nd_it.get_child(i);
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(next_nd_it&#32;!=&#32;end_nd_it)
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ord&#32;+=&#32;child_nd_it.get_metadata();
135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!base_type::less(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;e,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;child_nd_it.valid_prefix().first,
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;child_nd_it.valid_prefix().second,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_traits))
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next_nd_it&#32;=&#32;child_nd_it;
140 &#32;&#32;&#32;&#32;}
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(i--&#32;&gt;&#32;0);
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(next_nd_it&#32;==&#32;end_nd_it)
144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ord;
145 
146 &#32;&#32;&#32;&#32;&#32;&#32;nd_it&#32;=&#32;next_nd_it;
147 &#32;&#32;&#32;&#32;}
148 }
149 
150 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
151 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
152 PB_DS_CLASS_C_DEC::
153 operator()(node_iterator&#32;nd_it,&#32;node_const_iterator&#32;<emphasis role="comment">/*end_nd_it*/</emphasis>)<emphasis role="keyword">&#32;const</emphasis>
154 <emphasis role="keyword"></emphasis>{
155 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;num_children&#32;=&#32;nd_it.num_children();
156 &#32;&#32;size_type&#32;children_rank&#32;=&#32;0;
157 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;num_children;&#32;++i)
158 &#32;&#32;&#32;&#32;children_rank&#32;+=&#32;nd_it.get_child(i).get_metadata();
159 
160 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;=&#32;(num_children&#32;==&#32;0)&#32;?&#32;1&#32;:&#32;children_rank;
161 &#32;&#32;<emphasis role="keyword">const_cast&lt;</emphasis>size_type&amp;<emphasis role="keyword">&gt;</emphasis>(nd_it.get_metadata())&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
162 }
163 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
