<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2gtx_2bit_8inl_source" xml:lang="en-US">
<title>bit.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/gtx/bit.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
4 {
6 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;highestBitValue</emphasis>
7 
8 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIUType&gt;
9 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIUType&#32;<link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">highestBitValue</link>(genIUType&#32;Value)
10 &#32;&#32;&#32;&#32;{
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genIUType&#32;tmp&#32;=&#32;Value;
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genIUType&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;genIUType(0);
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(tmp)
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;(tmp&#32;&amp;&#32;(~tmp&#32;+&#32;1));&#32;<emphasis role="comment">//&#32;grab&#32;lowest&#32;bit</emphasis>
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;&amp;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">~result</link>;&#32;<emphasis role="comment">//&#32;clear&#32;lowest&#32;bit</emphasis>
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
19 &#32;&#32;&#32;&#32;}
20 
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
22 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">highestBitValue</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
23 &#32;&#32;&#32;&#32;{
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(<link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">highestBitValue</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
25 &#32;&#32;&#32;&#32;}
26 
28 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;lowestBitValue</emphasis>
29 
30 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIUType&gt;
31 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIUType&#32;<link linkend="_group__gtx__bit_1ga2ff6568089f3a9b67f5c30918855fc6f">lowestBitValue</link>(genIUType&#32;Value)
32 &#32;&#32;&#32;&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Value&#32;&amp;&#32;(~Value&#32;+&#32;1));
34 &#32;&#32;&#32;&#32;}
35 
36 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
37 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_group__gtx__bit_1ga2ff6568089f3a9b67f5c30918855fc6f">lowestBitValue</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
38 &#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(<link linkend="_group__gtx__bit_1ga2ff6568089f3a9b67f5c30918855fc6f">lowestBitValue</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
40 &#32;&#32;&#32;&#32;}
41 
43 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;powerOfTwoAbove</emphasis>
44 
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
46 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__bit_1ga8cda2459871f574a0aecbe702ac93291">powerOfTwoAbove</link>(genType&#32;<link linkend="_classvalue">value</link>)
47 &#32;&#32;&#32;&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceis_power_of_two">isPowerOfTwo</link>(<link linkend="_classvalue">value</link>)&#32;?&#32;<link linkend="_classvalue">value</link>&#32;:&#32;<link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">highestBitValue</link>(<link linkend="_classvalue">value</link>)&#32;&lt;&lt;&#32;1;
49 &#32;&#32;&#32;&#32;}
50 
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
52 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_group__gtx__bit_1ga8cda2459871f574a0aecbe702ac93291">powerOfTwoAbove</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(<link linkend="_group__gtx__bit_1ga8cda2459871f574a0aecbe702ac93291">powerOfTwoAbove</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
55 &#32;&#32;&#32;&#32;}
56 
58 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;powerOfTwoBelow</emphasis>
59 
60 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
61 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__bit_1ga3de7df63c589325101a2817a56f8e29d">powerOfTwoBelow</link>(genType&#32;<link linkend="_classvalue">value</link>)
62 &#32;&#32;&#32;&#32;{
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceis_power_of_two">isPowerOfTwo</link>(<link linkend="_classvalue">value</link>)&#32;?&#32;<link linkend="_classvalue">value</link>&#32;:&#32;<link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">highestBitValue</link>(<link linkend="_classvalue">value</link>);
64 &#32;&#32;&#32;&#32;}
65 
66 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
67 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_group__gtx__bit_1ga3de7df63c589325101a2817a56f8e29d">powerOfTwoBelow</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
68 &#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(<link linkend="_group__gtx__bit_1ga3de7df63c589325101a2817a56f8e29d">powerOfTwoBelow</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
70 &#32;&#32;&#32;&#32;}
71 
73 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;powerOfTwoNearest</emphasis>
74 
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
76 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtx__bit_1ga5f65973a5d2ea38c719e6a663149ead9">powerOfTwoNearest</link>(genType&#32;<link linkend="_classvalue">value</link>)
77 &#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespaceis_power_of_two">isPowerOfTwo</link>(<link linkend="_classvalue">value</link>))
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classvalue">value</link>;
80 
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;prev&#32;=&#32;<link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">highestBitValue</link>(<link linkend="_classvalue">value</link>);
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<emphasis role="keyword">const</emphasis>&#32;next&#32;=&#32;prev&#32;&lt;&lt;&#32;1;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(next&#32;-&#32;<link linkend="_classvalue">value</link>)&#32;&lt;&#32;(<link linkend="_classvalue">value</link>&#32;-&#32;prev)&#32;?&#32;next&#32;:&#32;prev;
84 &#32;&#32;&#32;&#32;}
85 
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
87 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_group__gtx__bit_1ga5f65973a5d2ea38c719e6a663149ead9">powerOfTwoNearest</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
88 &#32;&#32;&#32;&#32;{
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1functor1">detail::functor1&lt;vec, L, T, T, Q&gt;::call</link>(<link linkend="_group__gtx__bit_1ga5f65973a5d2ea38c719e6a663149ead9">powerOfTwoNearest</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
90 &#32;&#32;&#32;&#32;}
91 
92 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
