<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy" xml:lang="en-US">
<title>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;hash_policy.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1hash__exponential__size__policy__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9">hash_exponential_size_policy</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size=8, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor=2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9">hash_exponential_size_policy</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size=8, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor=2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9">hash_exponential_size_policy</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size=8, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor=2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60">get_nearest_larger_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216">get_nearest_smaller_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60">get_nearest_larger_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216">get_nearest_smaller_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60">get_nearest_larger_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216">get_nearest_smaller_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Size_Type = std::size_t&gt;<?linebreak?>class __gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</title></simplesect>

<para>A size policy whose sequence of sizes form an exponential sequence (typically powers of 2. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::size_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9"/><section>
    <title>hash_exponential_size_policy()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>hash_exponential_size_policy</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>hash_exponential_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::hash_exponential_size_policy (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size = <computeroutput>8</computeroutput>
, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor = <computeroutput>2</computeroutput>
)</computeroutput></para>
<para>Default constructor, or onstructor taking a start_size, or constructor taking a start size and grow_factor. The policy will use the sequence of sizes start_size, start_size* grow_factor, start_size* grow_factor^2, ... </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9"/><section>
    <title>hash_exponential_size_policy()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>hash_exponential_size_policy</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>hash_exponential_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::hash_exponential_size_policy (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size = <computeroutput>8</computeroutput>
, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor = <computeroutput>2</computeroutput>
)</computeroutput></para>
<para>Default constructor, or onstructor taking a start_size, or constructor taking a start size and grow_factor. The policy will use the sequence of sizes start_size, start_size* grow_factor, start_size* grow_factor^2, ... </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9"/><section>
    <title>hash_exponential_size_policy()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>hash_exponential_size_policy</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>hash_exponential_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::hash_exponential_size_policy (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size = <computeroutput>8</computeroutput>
, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor = <computeroutput>2</computeroutput>
)</computeroutput></para>
<para>Default constructor, or onstructor taking a start_size, or constructor taking a start size and grow_factor. The policy will use the sequence of sizes start_size, start_size* grow_factor, start_size* grow_factor^2, ... </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60"/><section>
    <title>get_nearest_larger_size()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_nearest_larger_size</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>get_nearest_larger_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::get_nearest_larger_size (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> size) const<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60"/><section>
    <title>get_nearest_larger_size()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_nearest_larger_size</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>get_nearest_larger_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::get_nearest_larger_size (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> size) const<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60"/><section>
    <title>get_nearest_larger_size()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_nearest_larger_size</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>get_nearest_larger_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::get_nearest_larger_size (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> size) const<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216"/><section>
    <title>get_nearest_smaller_size()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_nearest_smaller_size</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>get_nearest_smaller_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::get_nearest_smaller_size (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> size) const<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216"/><section>
    <title>get_nearest_smaller_size()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_nearest_smaller_size</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>get_nearest_smaller_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::get_nearest_smaller_size (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> size) const<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216"/><section>
    <title>get_nearest_smaller_size()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_nearest_smaller_size</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>get_nearest_smaller_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::get_nearest_smaller_size (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> size) const<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy</link>&lt; Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link></section>
</section>
