<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2unordered__iterator_2point__iterator_8hpp_source" xml:lang="en-US">
<title>point_iterator.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
45 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
47 <emphasis role="keyword">class&#32;</emphasis>point_iterator_
48 {
49 <emphasis role="keyword">public</emphasis>:
51 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;trivial_iterator_tag&#32;iterator_category;
52 
54 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link>&#32;difference_type;
55 
57 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;value_type_&#32;value_type;
58 
60 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;pointer_&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>;
61 
63 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;const_pointer_&#32;const_pointer;
64 
66 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;reference_&#32;reference;
67 
69 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;const_reference_&#32;const_reference;
70 
72 &#32;&#32;<emphasis role="keyword">inline</emphasis>
73 &#32;&#32;point_iterator_()
74 &#32;&#32;:&#32;m_p_value(0)
75 &#32;&#32;{&#32;}
76 
78 &#32;&#32;<emphasis role="keyword">inline</emphasis>
79 &#32;&#32;point_iterator_(<emphasis role="keyword">const</emphasis>&#32;point_iterator_&amp;&#32;other)
80 &#32;&#32;:&#32;m_p_value(other.m_p_value)
81 &#32;&#32;{&#32;}
82 
84 &#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>
85 &#32;&#32;operator-&gt;()<emphasis role="keyword">&#32;const</emphasis>
86 <emphasis role="keyword">&#32;&#32;</emphasis>{
87 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_p_value&#32;!=&#32;0);
88 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_p_value);
89 &#32;&#32;}
90 
92 &#32;&#32;reference
93 &#32;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>()<emphasis role="keyword">&#32;const</emphasis>
94 <emphasis role="keyword">&#32;&#32;</emphasis>{
95 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_p_value&#32;!=&#32;0);
96 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*m_p_value);
97 &#32;&#32;}
98 
100 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>
101 &#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;point_iterator_&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
102 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_p_value&#32;==&#32;other.m_p_value;&#32;}
103 
105 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>
106 &#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;point_const_iterator_&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
107 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_p_value&#32;==&#32;other.m_p_value;&#32;}
108 
110 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>
111 &#32;&#32;<link linkend="_namespacenlohmann_1aa9fe6e8e15f1b1b242d291e7703f1b8d">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;point_iterator_&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
112 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_p_value&#32;!=&#32;other.m_p_value;&#32;}
113 
115 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>
116 &#32;&#32;<link linkend="_namespacenlohmann_1aa9fe6e8e15f1b1b242d291e7703f1b8d">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;point_const_iterator_&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
117 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_p_value&#32;!=&#32;other.m_p_value;&#32;}
118 
119 &#32;&#32;<emphasis role="keyword">inline</emphasis>
120 &#32;&#32;point_iterator_(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&#32;p_value)&#32;:&#32;m_p_value(p_value)
121 &#32;&#32;{&#32;}
122 
123 <emphasis role="keyword">protected</emphasis>:
124 &#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>point_const_iterator_;
125 
126 &#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>;
127 
128 <emphasis role="keyword">protected</emphasis>:
129 &#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&#32;m_p_value;
130 };
131 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
