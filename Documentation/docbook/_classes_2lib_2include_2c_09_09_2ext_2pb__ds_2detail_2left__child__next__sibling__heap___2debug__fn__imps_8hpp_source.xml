<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2debug__fn__imps_8hpp_source" xml:lang="en-US">
<title>debug_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
44 
45 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
46 <emphasis role="keywordtype">void</emphasis>
47 PB_DS_CLASS_C_DEC::
48 assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
49 <emphasis role="keyword"></emphasis>{
50 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_p_root&#32;==&#32;0&#32;||&#32;m_p_root-&gt;m_p_prev_or_parent&#32;==&#32;0);
51 
52 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p_root&#32;!=&#32;0)
53 &#32;&#32;&#32;&#32;assert_node_consistent(m_p_root,&#32;Single_Link_Roots,&#32;__file,&#32;__line);
54 &#32;&#32;assert_size(__file,&#32;__line);
55 &#32;&#32;assert_iterators(__file,&#32;__line);
56 }
57 
58 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
59 <emphasis role="keywordtype">void</emphasis>
60 PB_DS_CLASS_C_DEC::
61 assert_node_consistent(node_const_pointer&#32;p_nd,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;single_link,
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
63 <emphasis role="keyword"></emphasis>{
64 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd&#32;==&#32;0)
65 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
66 
67 &#32;&#32;assert_node_consistent(p_nd-&gt;m_p_l_child,&#32;<emphasis role="keyword">false</emphasis>,&#32;__file,&#32;__line);
68 &#32;&#32;assert_node_consistent(p_nd-&gt;m_p_next_sibling,&#32;single_link,&#32;__file,&#32;__line);
69 
70 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(single_link)
71 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(p_nd-&gt;m_p_prev_or_parent&#32;==&#32;0);
72 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd-&gt;m_p_next_sibling&#32;!=&#32;0)
73 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(p_nd-&gt;m_p_next_sibling-&gt;m_p_prev_or_parent&#32;==&#32;p_nd);
74 
75 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd-&gt;m_p_l_child&#32;==&#32;0)
76 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
77 
78 &#32;&#32;node_const_pointer&#32;p_child&#32;=&#32;p_nd-&gt;m_p_l_child;
79 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_child&#32;!=&#32;0)
80 &#32;&#32;&#32;&#32;{
81 &#32;&#32;&#32;&#32;&#32;&#32;node_const_pointer&#32;p_next_child&#32;=&#32;p_child-&gt;m_p_next_sibling;
82 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(!Cmp_Fn::operator()(p_nd-&gt;m_value,&#32;p_child-&gt;m_value));
83 &#32;&#32;&#32;&#32;&#32;&#32;p_child&#32;=&#32;p_next_child;
84 &#32;&#32;&#32;&#32;}
85 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(p_nd-&gt;m_p_l_child-&gt;m_p_prev_or_parent&#32;==&#32;p_nd);
86 }
87 
88 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
89 <emphasis role="keywordtype">void</emphasis>
90 PB_DS_CLASS_C_DEC::
91 assert_iterators(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
92 <emphasis role="keyword"></emphasis>{
93 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(std::distance(<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>())&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
94 }
95 
96 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
97 <emphasis role="keywordtype">void</emphasis>
98 PB_DS_CLASS_C_DEC::
99 assert_size(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
100 <emphasis role="keyword"></emphasis>{
101 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(size_from_node(m_p_root)&#32;==&#32;m_size);
102 }
103 
104 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
105 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::size_type
106 PB_DS_CLASS_C_DEC::
107 size_under_node(node_const_pointer&#32;p_nd)
108 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;1&#32;+&#32;size_from_node(p_nd-&gt;m_p_l_child);&#32;}
109 
110 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
111 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::size_type
112 PB_DS_CLASS_C_DEC::
113 size_from_node(node_const_pointer&#32;p_nd)
114 {
115 &#32;&#32;size_type&#32;ret&#32;=&#32;0;
116 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_nd&#32;!=&#32;0)
117 &#32;&#32;&#32;&#32;{
118 &#32;&#32;&#32;&#32;&#32;&#32;ret&#32;+=&#32;1&#32;+&#32;size_from_node(p_nd-&gt;m_p_l_child);
119 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_next_sibling;
120 &#32;&#32;&#32;&#32;}
121 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
122 }
123 
124 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
125 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::size_type
126 PB_DS_CLASS_C_DEC::
127 degree(node_const_pointer&#32;p_nd)
128 {
129 &#32;&#32;size_type&#32;ret&#32;=&#32;0;
130 &#32;&#32;node_const_pointer&#32;p_child&#32;=&#32;p_nd-&gt;m_p_l_child;
131 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_child&#32;!=&#32;0)
132 &#32;&#32;&#32;&#32;{
133 &#32;&#32;&#32;&#32;&#32;&#32;++ret;
134 &#32;&#32;&#32;&#32;&#32;&#32;p_child&#32;=&#32;p_child-&gt;m_p_next_sibling;
135 &#32;&#32;&#32;&#32;}
136 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
137 }
138 
139 <emphasis role="preprocessor">#endif&#32;</emphasis>
140 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
