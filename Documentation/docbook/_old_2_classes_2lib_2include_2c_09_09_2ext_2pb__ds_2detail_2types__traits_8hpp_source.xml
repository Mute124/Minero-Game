<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2types__traits_8hpp_source" xml:lang="en-US">
<title>types_traits.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/types_traits.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_TYPES_TRAITS_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_TYPES_TRAITS_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
49 
50 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
51 {
52 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
53 &#32;&#32;{
60 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped&gt;
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>no_throw_copies
62 &#32;&#32;&#32;&#32;&#32;&#32;{
63 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a25b2d5e6d82a193f8d1f154d26b326c6">__simple</link>&#32;=&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple_1a57e23962107f7c928c070e96bc8a8a7ea0d2938822c5ab155c10d2c75b4b9a9fe">is_simple&lt;Key&gt;::value</link>
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple_1a57e23962107f7c928c070e96bc8a8a7ea0d2938822c5ab155c10d2c75b4b9a9fe">is_simple&lt;Mapped&gt;::value</link>;
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;integral_constant&lt;int,&#32;__simple&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">indicator</link>;
66 &#32;&#32;&#32;&#32;&#32;&#32;};
67 
69 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key&gt;
70 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies">no_throw_copies</link>&lt;Key,&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&gt;
71 &#32;&#32;&#32;&#32;&#32;&#32;{
72 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;integral_constant&lt;int,&#32;is_simple&lt;Key&gt;::value&gt;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_3_01_key_00_01null__type_01_4_1a1b2670c3813a498cfb9be28a1a912d5c">indicator</link>;
73 &#32;&#32;&#32;&#32;&#32;&#32;};
74 
75 
77 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tv&gt;
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value">stored_value</link>
79 &#32;&#32;&#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Tv&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value_1af855ad424a2d4d74caf2dd750c2697b3">value_type</link>;
81 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value_1af855ad424a2d4d74caf2dd750c2697b3">value_type</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value_1a2c97177d496c6ac9be4bdca5231968e0">m_value</link>;
82 &#32;&#32;&#32;&#32;&#32;&#32;};
83 
85 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Th&gt;
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash">stored_hash</link>
87 &#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Th&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash_1a9406665edc4d39341cb7eaa1a3609658">hash_type</link>;
89 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash_1a9406665edc4d39341cb7eaa1a3609658">hash_type</link>&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash_1a23f47962ea4c59dcbe2199ec61d16d38">m_hash</link>;
90 &#32;&#32;&#32;&#32;&#32;&#32;};
91 
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tv,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Th,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash&gt;
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>
96 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value">stored_value</link>&lt;_Tv&gt;,&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash">stored_hash</link>&lt;_Th&gt;
97 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;};
98 
100 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tv,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Th&gt;
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stored_data&lt;_Tv,&#32;_Th,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>&gt;
102 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;stored_value&lt;_Tv&gt;
103 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;};
104 
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped&gt;
107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>select_value_type
108 &#32;&#32;&#32;&#32;&#32;&#32;{
109 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::pair&lt;const&#32;Key,&#32;Mapped&gt;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type_1a6fd3a10a840720e76687605b19df0651">type</link>;
110 &#32;&#32;&#32;&#32;&#32;&#32;};
111 
113 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key&gt;
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt;Key,&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&gt;
115 &#32;&#32;&#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Key&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type_3_01_key_00_01null__type_01_4_1af97a60739bd2b24291bacaee8104c759">type</link>;
117 &#32;&#32;&#32;&#32;&#32;&#32;};
118 
120 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash&gt;
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type">maybe_null_type</link>
122 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;};
123 
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash&gt;
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>maybe_null_type&lt;Key,&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>,&#32;_Alloc,&#32;Store_Hash&gt;
127 &#32;&#32;&#32;&#32;&#32;&#32;{
128 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;s_null_type;
129 &#32;&#32;&#32;&#32;&#32;&#32;};
130 
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash&gt;
132 &#32;&#32;&#32;&#32;&#32;&#32;null_type
133 &#32;&#32;&#32;&#32;&#32;&#32;maybe_null_type&lt;Key,&#32;null_type,&#32;_Alloc,&#32;Store_Hash&gt;::s_null_type;
134 
136 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>rebind_traits
138 #<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;__cplusplus&#32;&gt;=&#32;201103L
139 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;std::allocator_traits&lt;_Alloc&gt;::template&#32;rebind_traits&lt;T&gt;
140 &#32;&#32;&#32;&#32;&#32;&#32;{
141 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>reference&#32;=&#32;T&amp;;
142 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>const_reference&#32;=&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;;
143 &#32;&#32;&#32;&#32;&#32;&#32;};
144 <emphasis role="preprocessor">#else</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Alloc::template&#32;rebind&lt;T&gt;::other
146 &#32;&#32;&#32;&#32;&#32;&#32;{
147 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::template&#32;rebind&lt;T&gt;::other&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">allocator_type</link>;
148 &#32;&#32;&#32;&#32;&#32;&#32;};
149 <emphasis role="preprocessor">#endif</emphasis>
150 
151 
153 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash&gt;
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">types_traits</link>
155 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type">maybe_null_type</link>&lt;Key,&#32;Mapped,&#32;_Alloc,&#32;Store_Hash&gt;
156 &#32;&#32;&#32;&#32;&#32;&#32;{
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
158 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>;
159 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type_1a6fd3a10a840720e76687605b19df0651">select_value_type&lt;Key, Mapped&gt;::type</link>&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>;
160 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Key&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1">key_type</link>;
161 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Mapped&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a">mapped_type</link>;
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
164 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, value_type&gt;</link>&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">__rebind_va</link>;
165 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, key_type&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">__rebind_ka</link>;
166 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, mapped_type&gt;</link>&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">__rebind_ma</link>;
167 
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies">no_throw_copies&lt;Key, Mapped&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies">__nothrowcopy</link>;
169 
170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
171 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ma::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b">mapped_pointer</link>;
172 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ma::const_pointer&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c">mapped_const_pointer</link>;
173 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ma::reference&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822">mapped_reference</link>;
174 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ma::const_reference&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9">mapped_const_reference</link>;
175 
176 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_va::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696">pointer</link>;
177 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_va::const_pointer&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865">const_pointer</link>;
178 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_va::reference&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac">reference</link>;
179 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_va::const_reference&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5">const_reference</link>;
180 
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data&lt;value_type, size_type, Store_Hash&gt;</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97">stored_data_type</link>;
182 
183 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ka::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317">key_pointer</link>;
184 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ka::const_pointer&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f">key_const_pointer</link>;
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ka::reference&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8">key_reference</link>;
186 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ka::const_reference&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b">key_const_reference</link>;
187 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::pair&lt;size_type,&#32;size_type&gt;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12">comp_hash</link>;
188 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;integral_constant&lt;int,&#32;Store_Hash&gt;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link>;
189 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link>&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link>;
190 
191 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1ac4e3debe972638accf65af610836e2ce">m_store_extra_indicator</link>;
192 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1ae2ece2ba8144262a9baa0d188a48b0ae">m_no_throw_copies_indicator</link>;
193 &#32;&#32;&#32;&#32;};
195 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
196 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
197 
198 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
