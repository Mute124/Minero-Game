<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/external/glfw/src/vulkan.c File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/external/glfw/src/vulkan.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;internal.h&quot;<?linebreak?>#include &lt;assert.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?></programlisting>Include dependency graph for vulkan.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a1957ac3a217eea28a55ae80431d5a41f">_GLFW_FIND_LOADER</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1ab21616814a41512460caa5b301776c77">_GLFW_REQUIRE_LOADER</link>&#160;&#160;&#160;2</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a3e82e6d9f82e3052943978e803bccef5">_glfwInitVulkan</link> (int <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a7e9f009f4edffd3f2c938045981f13f1">_glfwTerminateVulkan</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1ab14639f4be2f5aff158fe8a0b8e76bd1">_glfwGetVulkanResultString</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int <link linkend="_group__vulkan_1ga72e7c3757d9ff2333181a5569bb7c403">glfwVulkanSupported</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>

<para>Returns whether the Vulkan loader and an ICD have been found. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> const char ** <link linkend="_group__vulkan_1gada152edc5bbbd0c2138728878632fd9c">glfwGetRequiredInstanceExtensions</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>

<para>Returns the Vulkan instance extensions required by GLFW. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__vulkan_1ga70c01918dc9d233a4fbe0681a43018af">GLFWvkproc</link> <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1ab1fbd7c0ba5c40c91c6b85b897364039">glfwGetInstanceProcAddress</link> (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, const char *procname)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a6a7033429666ac6b31d4250aeb5b37d1">glfwGetPhysicalDevicePresentationSupport</link> (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a5a47c783767442b8b8e9ab3cf2e4959b">glfwCreateWindowSurface</link> (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *allocator, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0720952aa1caded45b5bcdce589663a9">surface</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a1957ac3a217eea28a55ae80431d5a41f"/><section>
    <title>_GLFW_FIND_LOADER</title>
<indexterm><primary>_GLFW_FIND_LOADER</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>_GLFW_FIND_LOADER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLFW_FIND_LOADER&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1ab21616814a41512460caa5b301776c77"/><section>
    <title>_GLFW_REQUIRE_LOADER</title>
<indexterm><primary>_GLFW_REQUIRE_LOADER</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>_GLFW_REQUIRE_LOADER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLFW_REQUIRE_LOADER&#160;&#160;&#160;2</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1ab14639f4be2f5aff158fe8a0b8e76bd1"/><section>
    <title>_glfwGetVulkanResultString()</title>
<indexterm><primary>_glfwGetVulkanResultString</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>_glfwGetVulkanResultString</secondary></indexterm>
<para><computeroutput>const char * _glfwGetVulkanResultString (<link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> result)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c_ab14639f4be2f5aff158fe8a0b8e76bd1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a3e82e6d9f82e3052943978e803bccef5"/><section>
    <title>_glfwInitVulkan()</title>
<indexterm><primary>_glfwInitVulkan</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>_glfwInitVulkan</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwInitVulkan (int mode)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c_a3e82e6d9f82e3052943978e803bccef5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a7e9f009f4edffd3f2c938045981f13f1"/><section>
    <title>_glfwTerminateVulkan()</title>
<indexterm><primary>_glfwTerminateVulkan</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>_glfwTerminateVulkan</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> _glfwTerminateVulkan (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c_a7e9f009f4edffd3f2c938045981f13f1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a5a47c783767442b8b8e9ab3cf2e4959b"/><section>
    <title>glfwCreateWindowSurface()</title>
<indexterm><primary>glfwCreateWindowSurface</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>glfwCreateWindowSurface</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="__classes_2lib_2external_2glfw_2deps_2glad_2vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> glfwCreateWindowSurface (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * handle, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> * allocator, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> * surface)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c_a5a47c783767442b8b8e9ab3cf2e4959b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1ab1fbd7c0ba5c40c91c6b85b897364039"/><section>
    <title>glfwGetInstanceProcAddress()</title>
<indexterm><primary>glfwGetInstanceProcAddress</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>glfwGetInstanceProcAddress</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__vulkan_1ga70c01918dc9d233a4fbe0681a43018af">GLFWvkproc</link> glfwGetInstanceProcAddress (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, const char * procname)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c_ab1fbd7c0ba5c40c91c6b85b897364039_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__classes_2lib_2external_2glfw_2src_2vulkan_8c_1a6a7033429666ac6b31d4250aeb5b37d1"/><section>
    <title>glfwGetPhysicalDevicePresentationSupport()</title>
<indexterm><primary>glfwGetPhysicalDevicePresentationSupport</primary><secondary>vulkan.c</secondary></indexterm>
<indexterm><primary>vulkan.c</primary><secondary>glfwGetPhysicalDevicePresentationSupport</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int glfwGetPhysicalDevicePresentationSupport (<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2external_2glfw_2src_2vulkan_8c_a6a7033429666ac6b31d4250aeb5b37d1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
