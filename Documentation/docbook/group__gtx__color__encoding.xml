<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__color__encoding" xml:lang="en-US">
<title>GLM_GTX_color_encoding</title>
<indexterm><primary>GLM_GTX_color_encoding</primary></indexterm>
<para>

<para>Allow to perform bit operations on integer values. </para>
 
</para>
Collaboration diagram for GLM_GTX_color_encoding:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__color__encoding.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__color__encoding_1ga37f5eaaeb128648b478cf24c93762c69">glm::convertLinearSRGBToD65XYZ</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;ColorLinearSRGB)</para>

<para>Convert a linear sRGB color to D65 YUV. </para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__color__encoding_1ga2d19075cf7dea4ad9bc00a5b43641503">glm::convertLinearSRGBToD50XYZ</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;ColorLinearSRGB)</para>

<para>Convert a linear sRGB color to D50 YUV. </para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__color__encoding_1ga9b380a35eb3c23e894f871aa7b0e7de3">glm::convertD65XYZToLinearSRGB</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;ColorD65XYZ)</para>

<para>Convert a D65 YUV color to linear sRGB. </para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; <link linkend="_group__gtx__color__encoding_1ga54cdc6987cf38aa229568d10ccacca98">glm::convertD65XYZToD50XYZ</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;ColorD65XYZ)</para>

<para>Convert a D65 YUV color to D50 YUV. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Allow to perform bit operations on integer values. </para>

<para>Include &lt;glm/gtx/color_encoding.hpp&gt; to use the features of this extension. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__color__encoding_1ga54cdc6987cf38aa229568d10ccacca98"/><section>
    <title>convertD65XYZToD50XYZ()</title>
<indexterm><primary>convertD65XYZToD50XYZ</primary><secondary>GLM_GTX_color_encoding</secondary></indexterm>
<indexterm><primary>GLM_GTX_color_encoding</primary><secondary>convertD65XYZToD50XYZ</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::convertD65XYZToD50XYZ (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; ColorD65XYZ)</computeroutput></para><para>

<para>Convert a D65 YUV color to D50 YUV. </para>
</para>
</section>
<anchor xml:id="_group__gtx__color__encoding_1ga9b380a35eb3c23e894f871aa7b0e7de3"/><section>
    <title>convertD65XYZToLinearSRGB()</title>
<indexterm><primary>convertD65XYZToLinearSRGB</primary><secondary>GLM_GTX_color_encoding</secondary></indexterm>
<indexterm><primary>GLM_GTX_color_encoding</primary><secondary>convertD65XYZToLinearSRGB</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::convertD65XYZToLinearSRGB (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; ColorD65XYZ)</computeroutput></para><para>

<para>Convert a D65 YUV color to linear sRGB. </para>
</para>
</section>
<anchor xml:id="_group__gtx__color__encoding_1ga2d19075cf7dea4ad9bc00a5b43641503"/><section>
    <title>convertLinearSRGBToD50XYZ()</title>
<indexterm><primary>convertLinearSRGBToD50XYZ</primary><secondary>GLM_GTX_color_encoding</secondary></indexterm>
<indexterm><primary>GLM_GTX_color_encoding</primary><secondary>convertLinearSRGBToD50XYZ</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::convertLinearSRGBToD50XYZ (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; ColorLinearSRGB)</computeroutput></para><para>

<para>Convert a linear sRGB color to D50 YUV. </para>
</para>
</section>
<anchor xml:id="_group__gtx__color__encoding_1ga37f5eaaeb128648b478cf24c93762c69"/><section>
    <title>convertLinearSRGBToD65XYZ()</title>
<indexterm><primary>convertLinearSRGBToD65XYZ</primary><secondary>GLM_GTX_color_encoding</secondary></indexterm>
<indexterm><primary>GLM_GTX_color_encoding</primary><secondary>convertLinearSRGBToD65XYZ</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; glm::convertLinearSRGBToD65XYZ (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; ColorLinearSRGB)</computeroutput></para><para>

<para>Convert a linear sRGB color to D65 YUV. </para>
</para>
</section>
</section>
</section>
