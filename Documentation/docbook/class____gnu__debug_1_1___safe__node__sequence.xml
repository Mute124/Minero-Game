<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__debug_1_1___safe__node__sequence" xml:lang="en-US">
<title>__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt; Class Template Reference</title>
<indexterm><primary>__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;safe_sequence.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__debug_1_1___safe__node__sequence__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__debug_1_1___safe__node__sequence__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__node__sequence_1ae94b138660c94714a79326f8fa5e6b4f">_M_invalidate_all</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__node__sequence_1ae94b138660c94714a79326f8fa5e6b4f">_M_invalidate_all</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Member Functions inherited from <link linkend="_class____gnu__debug_1_1___safe__sequence__base">__gnu_debug::_Safe_sequence_base</link>        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link> () _GLIBCXX_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a9061ce48f8c5627d61a2e4a72a43f479">~_Safe_sequence_base</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1acebac46f833f903deb7c094fc26cbea1">_M_detach_all</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1aadde2fc883be085fc4588c1ef442cd3d">_M_detach_singular</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a75f6eb02cd1721b550bd5eb205ed6920">_M_revalidate_singular</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a8782fb392e549945fd9e910caf3b1c23">_M_swap</link> (<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link> &amp;__x) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para>__gnu_cxx::__mutex &amp; <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a688ceccbb7f5cfb2b4e95f569df4191d">_M_get_mutex</link> ()  throw ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a58a4c8925457fcf371457ec9f071a31f">_M_invalidate_all</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ab37172446e16eca63620c13465558341">_Safe_sequence_base</link> () _GLIBCXX_NOEXCEPT</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a9061ce48f8c5627d61a2e4a72a43f479">~_Safe_sequence_base</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1acebac46f833f903deb7c094fc26cbea1">_M_detach_all</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1aadde2fc883be085fc4588c1ef442cd3d">_M_detach_singular</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a75f6eb02cd1721b550bd5eb205ed6920">_M_revalidate_singular</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a8782fb392e549945fd9e910caf3b1c23">_M_swap</link> (<link linkend="_class____gnu__debug_1_1___safe__sequence__base">_Safe_sequence_base</link> &amp;__x) _GLIBCXX_USE_NOEXCEPT</para>
</listitem>
            <listitem><para>__gnu_cxx::__mutex &amp; <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a688ceccbb7f5cfb2b4e95f569df4191d">_M_get_mutex</link> ()  throw ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a58a4c8925457fcf371457ec9f071a31f">_M_invalidate_all</link> () const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Public Member Functions inherited from <link linkend="_class____gnu__debug_1_1___safe__sequence">__gnu_debug::_Safe_sequence&lt; _Sequence &gt;</link>        <itemizedlist>
            <listitem><para>template&lt;typename _Predicate &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence_1a9526e7688edd9c4e6f343340d833dfcf">_M_invalidate_if</link> (_Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _Predicate &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence_1ad1f86e4e83069486342ba7b53e095c42">_M_transfer_from_if</link> (<link linkend="_class____gnu__debug_1_1___safe__sequence">_Safe_sequence</link> &amp;__from, _Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _Predicate &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence_1a9526e7688edd9c4e6f343340d833dfcf">_M_invalidate_if</link> (_Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _Predicate &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__sequence_1ad1f86e4e83069486342ba7b53e095c42">_M_transfer_from_if</link> (<link linkend="_class____gnu__debug_1_1___safe__sequence">_Safe_sequence</link> &amp;__from, _Predicate __pred)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_class____gnu__debug_1_1___safe__sequence__base">__gnu_debug::_Safe_sequence_base</link>        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link> * <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1a715ed592a623b3bc625d773347216c32">_M_iterators</link></para>

<para>The list of mutable iterators that reference this container. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__debug_1_1___safe__iterator__base">_Safe_iterator_base</link> * <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1ad9e21ce9e18f4d060195458d3c197112">_M_const_iterators</link></para>

<para>The list of constant iterators that reference this container. </para>
</listitem>
            <listitem><para>unsigned int <link linkend="_class____gnu__debug_1_1___safe__sequence__base_1af796b1fd115ea27cd078eeb7e4909bd5">_M_version</link></para>

<para>The container version number. This number may never be 0. </para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Sequence&gt;<?linebreak?>class __gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</title></simplesect>

<para>Like <link linkend="_class____gnu__debug_1_1___safe__sequence">_Safe_sequence</link> but with a special _M_invalidate_all implementation not invalidating past-the-end iterators. Used by node based sequence. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__debug_1_1___safe__node__sequence_1ae94b138660c94714a79326f8fa5e6b4f"/><section>
    <title>_M_invalidate_all()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>_M_invalidate_all</primary><secondary>__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</secondary></indexterm>
<indexterm><primary>__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</primary><secondary>_M_invalidate_all</secondary></indexterm>
<computeroutput>template&lt;typename _Sequence &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__node__sequence">__gnu_debug::_Safe_node_sequence</link>&lt; _Sequence &gt;::_M_invalidate_all ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__debug_1_1___safe__node__sequence_ae94b138660c94714a79326f8fa5e6b4f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__debug_1_1___safe__node__sequence_1ae94b138660c94714a79326f8fa5e6b4f"/><section>
    <title>_M_invalidate_all()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>_M_invalidate_all</primary><secondary>__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</secondary></indexterm>
<indexterm><primary>__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</primary><secondary>_M_invalidate_all</secondary></indexterm>
<computeroutput>template&lt;typename _Sequence &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__debug_1_1___safe__node__sequence">__gnu_debug::_Safe_node_sequence</link>&lt; _Sequence &gt;::_M_invalidate_all ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__debug_1_1___safe__node__sequence_ae94b138660c94714a79326f8fa5e6b4f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/debug/<link linkend="_lib_2include_2c_09_09_2debug_2safe__sequence_8h">safe_sequence.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/debug/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2debug_2safe__sequence_8h">safe_sequence.h</link></section>
</section>
