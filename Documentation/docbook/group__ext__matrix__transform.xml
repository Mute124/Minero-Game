<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__ext__matrix__transform" xml:lang="en-US">
<title>GLM_EXT_matrix_transform</title>
<indexterm><primary>GLM_EXT_matrix_transform</primary></indexterm>
Collaboration diagram for GLM_EXT_matrix_transform:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> genType <link linkend="_group__ext__matrix__transform_1ga81696f2b8d1db02ea1aff8da8f269314">glm::identity</link> ()</para>

<para>Builds an identity matrix. </para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__ext__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab">glm::translate</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__ext__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950">glm::rotate</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T <link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">glm::scale</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__ext__matrix__transform_1ga55e33da75ea7e0f877059cc6f181cd2b">glm::lookAtRH</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;eye, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;center, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;up)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__ext__matrix__transform_1gab2850421652778eeef6830e4fb1ea346">glm::lookAtLH</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;eye, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;center, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;up)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__ext__matrix__transform_1ga894735fbf8f3d25628c127712d0285f7">glm::lookAt</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;eye, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;center, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;up)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Defines functions that generate common transformation matrices.</para>

<para>The matrices generated by this extension use standard OpenGL fixed-function conventions. For example, the lookAt function generates a transform from world space into the specific eye space that the projective matrix functions (perspective, ortho, etc) are designed to expect. The OpenGL compatibility specifications defines the particular layout of this eye space.</para>

<para>Include &lt;glm/ext/matrix_transform.hpp&gt; to use the features of this extension.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__matrix__projection">GLM_EXT_matrix_projection</link> </para>

<para><link linkend="_group__ext__matrix__clip__space">GLM_EXT_matrix_clip_space</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__ext__matrix__transform_1ga81696f2b8d1db02ea1aff8da8f269314"/><section>
    <title>identity()</title>
<indexterm><primary>identity</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>identity</secondary></indexterm>
<computeroutput>template&lt;typename genType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link> genType glm::identity ( )</computeroutput></para><para>

<para>Builds an identity matrix. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga81696f2b8d1db02ea1aff8da8f269314_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga81696f2b8d1db02ea1aff8da8f269314_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__matrix__transform_1ga894735fbf8f3d25628c127712d0285f7"/><section>
    <title>lookAt()</title>
<indexterm><primary>lookAt</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>lookAt</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::lookAt (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; eye, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; center, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; up)</computeroutput></para>
<para>Build a look at view matrix based on the default handedness.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>eye</entry><entry>
<para>Position of the camera </para>
</entry>
                            </row>
                            <row>
<entry>center</entry><entry>
<para>Position where the camera is looking at </para>
</entry>
                            </row>
                            <row>
<entry>up</entry><entry>
<para>Normalized up vector, how the camera is oriented. Typically (0, 0, 1)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>- frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) </para>

<para><link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluLookAt.xml">gluLookAt man page</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga894735fbf8f3d25628c127712d0285f7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__matrix__transform_1gab2850421652778eeef6830e4fb1ea346"/><section>
    <title>lookAtLH()</title>
<indexterm><primary>lookAtLH</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>lookAtLH</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::lookAtLH (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; eye, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; center, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; up)</computeroutput></para>
<para>Build a left handed look at view matrix.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>eye</entry><entry>
<para>Position of the camera </para>
</entry>
                            </row>
                            <row>
<entry>center</entry><entry>
<para>Position where the camera is looking at </para>
</entry>
                            </row>
                            <row>
<entry>up</entry><entry>
<para>Normalized up vector, how the camera is oriented. Typically (0, 0, 1)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>- frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_gab2850421652778eeef6830e4fb1ea346_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__matrix__transform_1ga55e33da75ea7e0f877059cc6f181cd2b"/><section>
    <title>lookAtRH()</title>
<indexterm><primary>lookAtRH</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>lookAtRH</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::lookAtRH (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; eye, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; center, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; up)</computeroutput></para>
<para>Build a right handed look at view matrix.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>eye</entry><entry>
<para>Position of the camera </para>
</entry>
                            </row>
                            <row>
<entry>center</entry><entry>
<para>Position where the camera is looking at </para>
</entry>
                            </row>
                            <row>
<entry>up</entry><entry>
<para>Normalized up vector, how the camera is oriented. Typically (0, 0, 1)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>- frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga55e33da75ea7e0f877059cc6f181cd2b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950"/><section>
    <title>rotate()</title>
<indexterm><primary>rotate</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>rotate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::rotate (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T angle, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; axis)</computeroutput></para>
<para>Builds a rotation 4 * 4 matrix created from an axis vector and an angle.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>m</entry><entry>
<para>Input matrix multiplied by this rotation matrix. </para>
</entry>
                            </row>
                            <row>
<entry>angle</entry><entry>
<para>Rotation angle expressed in radians. </para>
</entry>
                            </row>
                            <row>
<entry>axis</entry><entry>
<para>Rotation axis, recommended to be normalized.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>- rotate(mat&lt;4, 4, T, Q&gt; const&amp; m, T angle, T x, T y, T z) </para>

<para>- <link linkend="_group__gtx__transform_1ga66e036465863710014b073c48fc04a16">rotate(T angle, vec&lt;3, T, Q&gt; const&amp; v)</link> </para>

<para><link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glRotate.xml">glRotate man page</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga42613eb0c7deb5f5188fc159df6c8950_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga42613eb0c7deb5f5188fc159df6c8950_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6"/><section>
    <title>scale()</title>
<indexterm><primary>scale</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>scale</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::scale (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Builds a scale 4 * 4 matrix created from 3 scalars.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>m</entry><entry>
<para>Input matrix multiplied by this scale matrix. </para>
</entry>
                            </row>
                            <row>
<entry>v</entry><entry>
<para>Ratio of scaling for each axis.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>- scale(mat&lt;4, 4, T, Q&gt; const&amp; m, T x, T y, T z) </para>

<para>- <link linkend="_group__gtx__transform_1ga39771eee574ef52b5b706f831477c63b">scale(vec&lt;3, T, Q&gt; const&amp; v)</link> </para>

<para><link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glScale.xml">glScale man page</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_gaae2f8b2080622b24b85e1096748599b6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab"/><section>
    <title>translate()</title>
<indexterm><primary>translate</primary><secondary>GLM_EXT_matrix_transform</secondary></indexterm>
<indexterm><primary>GLM_EXT_matrix_transform</primary><secondary>translate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::translate (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Builds a translation 4 * 4 matrix created from a vector of 3 components.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>m</entry><entry>
<para>Input matrix multiplied by this translation matrix. </para>
</entry>
                            </row>
                            <row>
<entry>v</entry><entry>
<para>Coordinates of a translation vector.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <literallayout><computeroutput><emphasis role="preprocessor">#include&#32;&lt;glm/glm.hpp&gt;</emphasis>
<emphasis role="preprocessor">#include&#32;&lt;glm/gtc/matrix_transform.hpp&gt;</emphasis>
...
glm::mat4&#32;m&#32;=&#32;<link linkend="_group__ext__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab">glm::translate</link>(<link linkend="_structglm_1_1mat">glm::mat4</link>(1.0f),&#32;<link linkend="_structglm_1_1vec">glm::vec3</link>(1.0f));
<emphasis role="comment">//&#32;m[0][0]&#32;==&#32;1.0f,&#32;m[0][1]&#32;==&#32;0.0f,&#32;m[0][2]&#32;==&#32;0.0f,&#32;m[0][3]&#32;==&#32;0.0f</emphasis>
<emphasis role="comment">//&#32;m[1][0]&#32;==&#32;0.0f,&#32;m[1][1]&#32;==&#32;1.0f,&#32;m[1][2]&#32;==&#32;0.0f,&#32;m[1][3]&#32;==&#32;0.0f</emphasis>
<emphasis role="comment">//&#32;m[2][0]&#32;==&#32;0.0f,&#32;m[2][1]&#32;==&#32;0.0f,&#32;m[2][2]&#32;==&#32;1.0f,&#32;m[2][3]&#32;==&#32;0.0f</emphasis>
<emphasis role="comment">//&#32;m[3][0]&#32;==&#32;1.0f,&#32;m[3][1]&#32;==&#32;1.0f,&#32;m[3][2]&#32;==&#32;1.0f,&#32;m[3][3]&#32;==&#32;1.0f</emphasis>
</computeroutput></literallayout></para>

<para><formalpara><title>See also</title>

<para>- translate(mat&lt;4, 4, T, Q&gt; const&amp; m, T x, T y, T z) </para>

<para>- <link linkend="_group__gtx__transform_1gafc9f44af6367cac7e1bef8fd5802c6e6">translate(vec&lt;3, T, Q&gt; const&amp; v)</link> </para>

<para><link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTranslate.xml">glTranslate man page</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__matrix__transform_ga67d8473d6b293d1bb2b4eaf249795cab_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
