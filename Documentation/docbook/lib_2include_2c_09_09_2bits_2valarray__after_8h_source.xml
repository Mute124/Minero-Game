<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2bits_2valarray__after_8h_source" xml:lang="en-US">
<title>valarray_after.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/bits/valarray_after.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;The&#32;template&#32;and&#32;inlines&#32;for&#32;the&#32;-*-&#32;C++&#32;-*-&#32;internal&#32;_Meta&#32;class.</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;1997-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Gabriel&#32;Dos&#32;Reis&#32;&lt;Gabriel.Dos-Reis@cmla.ens-cachan.fr&gt;</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_VALARRAY_AFTER_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_VALARRAY_AFTER_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
36 
37 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
38 {
39 _GLIBCXX_BEGIN_NAMESPACE_VERSION
40 
41 <emphasis role="keyword">namespace&#32;</emphasis>__detail
42 {
43 &#32;&#32;<emphasis role="comment">//</emphasis>
44 &#32;&#32;<emphasis role="comment">//&#32;gslice_array&#32;closure.</emphasis>
45 &#32;&#32;<emphasis role="comment">//</emphasis>
46 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Dom&gt;
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_GBase
48 &#32;&#32;&#32;&#32;{
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
50 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Dom::value_type&#32;value_type;
51 &#32;&#32;&#32;&#32;&#32;&#32;
52 &#32;&#32;&#32;&#32;&#32;&#32;_GBase&#32;(<emphasis role="keyword">const</emphasis>&#32;_Dom&amp;&#32;__e,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
53 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_expr&#32;(__e),&#32;_M_index(__i)&#32;{}
54 &#32;&#32;&#32;&#32;&#32;&#32;
55 &#32;&#32;&#32;&#32;&#32;&#32;value_type
56 &#32;&#32;&#32;&#32;&#32;&#32;operator[]&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__i)<emphasis role="keyword">&#32;const</emphasis>
57 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_expr[_M_index[__i]];&#32;}
58 &#32;&#32;&#32;&#32;&#32;&#32;
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
60 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;()<emphasis role="keyword">&#32;const</emphasis>
61 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_index.size();&#32;}
62 
63 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_ValArrayRef&lt;_Dom&gt;::__type&#32;&#32;&#32;_M_expr;
65 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_index;
66 &#32;&#32;&#32;&#32;};
67 
68 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
69 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_GBase&lt;_Array&lt;_Tp&gt;&#32;&gt;
70 &#32;&#32;&#32;&#32;{
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Tp&#32;value_type;
73 &#32;&#32;&#32;&#32;&#32;&#32;
74 &#32;&#32;&#32;&#32;&#32;&#32;_GBase&#32;(_Array&lt;_Tp&gt;&#32;__a,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
75 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_array&#32;(__a),&#32;_M_index(__i)&#32;{}
76 &#32;&#32;&#32;&#32;&#32;&#32;
77 &#32;&#32;&#32;&#32;&#32;&#32;value_type
78 &#32;&#32;&#32;&#32;&#32;&#32;operator[]&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__i)<emphasis role="keyword">&#32;const</emphasis>
79 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_array._M_data[_M_index[__i]];&#32;}
80 &#32;&#32;&#32;&#32;&#32;&#32;
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;()<emphasis role="keyword">&#32;const</emphasis>
83 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_index.size();&#32;}
84 
85 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Array&lt;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_array;
87 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;_M_index;
88 &#32;&#32;&#32;&#32;};
89 
90 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Dom&gt;
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_GClos&lt;_Expr,&#32;_Dom&gt;
92 &#32;&#32;&#32;&#32;:&#32;_GBase&lt;_Dom&gt;
93 &#32;&#32;&#32;&#32;{
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_GBase&lt;_Dom&gt;&#32;_Base;
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Base::value_type&#32;value_type;
96 &#32;&#32;&#32;&#32;&#32;&#32;
97 &#32;&#32;&#32;&#32;&#32;&#32;_GClos&#32;(<emphasis role="keyword">const</emphasis>&#32;_Dom&amp;&#32;__e,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
98 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Base&#32;(__e,&#32;__i)&#32;{}
99 &#32;&#32;&#32;&#32;};
100 
101 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
102 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_GClos&lt;_ValArray,&#32;_Tp&gt;
103 &#32;&#32;&#32;&#32;:&#32;_GBase&lt;_Array&lt;_Tp&gt;&#32;&gt;
104 &#32;&#32;&#32;&#32;{
105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_GBase&lt;_Array&lt;_Tp&gt;&#32;&gt;&#32;_Base;
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Base::value_type&#32;value_type;
107 &#32;&#32;&#32;&#32;&#32;&#32;
108 &#32;&#32;&#32;&#32;&#32;&#32;_GClos&#32;(_Array&lt;_Tp&gt;&#32;__a,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
109 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Base&#32;(__a,&#32;__i)&#32;{}
110 &#32;&#32;&#32;&#32;};
111 
112 &#32;&#32;<emphasis role="comment">//</emphasis>
113 &#32;&#32;<emphasis role="comment">//&#32;indirect_array&#32;closure</emphasis>
114 &#32;&#32;<emphasis role="comment">//</emphasis>
115 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Dom&gt;
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_IBase
117 &#32;&#32;&#32;&#32;{
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Dom::value_type&#32;value_type;
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;_IBase&#32;(<emphasis role="keyword">const</emphasis>&#32;_Dom&amp;&#32;__e,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
122 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_expr&#32;(__e),&#32;_M_index&#32;(__i)&#32;{}
123 &#32;&#32;&#32;&#32;&#32;&#32;
124 &#32;&#32;&#32;&#32;&#32;&#32;value_type
125 &#32;&#32;&#32;&#32;&#32;&#32;operator[]&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__i)<emphasis role="keyword">&#32;const</emphasis>
126 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_expr[_M_index[__i]];&#32;}
127 &#32;&#32;&#32;&#32;&#32;&#32;
128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()<emphasis role="keyword">&#32;const</emphasis>
130 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_index.size();&#32;}
131 
132 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_ValArrayRef&lt;_Dom&gt;::__type&#32;&#32;&#32;_M_expr;
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_index;
135 &#32;&#32;&#32;&#32;};
136 
137 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Dom&gt;
138 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_IClos&lt;_Expr,&#32;_Dom&gt;
139 &#32;&#32;&#32;&#32;:&#32;_IBase&lt;_Dom&gt;
140 &#32;&#32;&#32;&#32;{
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_IBase&lt;_Dom&gt;&#32;_Base;
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Base::value_type&#32;value_type;
143 &#32;&#32;&#32;&#32;&#32;&#32;
144 &#32;&#32;&#32;&#32;&#32;&#32;_IClos&#32;(<emphasis role="keyword">const</emphasis>&#32;_Dom&amp;&#32;__e,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
145 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Base&#32;(__e,&#32;__i)&#32;{}
146 &#32;&#32;&#32;&#32;};
147 
148 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_IClos&lt;_ValArray,&#32;_Tp&gt;
150 &#32;&#32;&#32;&#32;:&#32;_IBase&lt;valarray&lt;_Tp&gt;&#32;&gt;
151 &#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_IBase&lt;valarray&lt;_Tp&gt;&#32;&gt;&#32;_Base;
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Tp&#32;value_type;
154 &#32;&#32;&#32;&#32;&#32;&#32;
155 &#32;&#32;&#32;&#32;&#32;&#32;_IClos&#32;(<emphasis role="keyword">const</emphasis>&#32;valarray&lt;_Tp&gt;&amp;&#32;__a,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)
156 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_Base&#32;(__a,&#32;__i)&#32;{}
157 &#32;&#32;&#32;&#32;};
158 }&#32;<emphasis role="comment">//&#32;namespace&#32;__detail</emphasis>
159 &#32;&#32;
160 &#32;&#32;<emphasis role="comment">//</emphasis>
161 &#32;&#32;<emphasis role="comment">//&#32;class&#32;_Expr</emphasis>
162 &#32;&#32;<emphasis role="comment">//</emphasis>
163 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
164 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Expr
165 &#32;&#32;&#32;&#32;{
166 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Tp&#32;value_type;
168 
169 &#32;&#32;&#32;&#32;&#32;&#32;_Expr(<emphasis role="keyword">const</emphasis>&#32;_Clos&amp;);
170 
171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Clos&amp;&#32;operator()()&#32;<emphasis role="keyword">const</emphasis>;
172 
173 &#32;&#32;&#32;&#32;&#32;&#32;value_type&#32;operator[](<emphasis role="keywordtype">size_t</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
174 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;operator[](slice)&#32;<emphasis role="keyword">const</emphasis>;
175 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;gslice&amp;)&#32;<emphasis role="keyword">const</emphasis>;
176 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;valarray&lt;bool&gt;&amp;)&#32;<emphasis role="keyword">const</emphasis>;
177 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;)&#32;<emphasis role="keyword">const</emphasis>;
178 
179 &#32;&#32;&#32;&#32;&#32;&#32;_Expr&lt;_UnClos&lt;__unary_plus,&#32;std::_Expr,&#32;_Clos&gt;,&#32;value_type&gt;
180 &#32;&#32;&#32;&#32;&#32;&#32;operator+()&#32;<emphasis role="keyword">const</emphasis>;
181 
182 &#32;&#32;&#32;&#32;&#32;&#32;_Expr&lt;_UnClos&lt;__negate,&#32;std::_Expr,&#32;_Clos&gt;,&#32;value_type&gt;
183 &#32;&#32;&#32;&#32;&#32;&#32;operator-()&#32;<emphasis role="keyword">const</emphasis>;
184 
185 &#32;&#32;&#32;&#32;&#32;&#32;_Expr&lt;_UnClos&lt;__bitwise_not,&#32;std::_Expr,&#32;_Clos&gt;,&#32;value_type&gt;
186 &#32;&#32;&#32;&#32;&#32;&#32;operator~()&#32;<emphasis role="keyword">const</emphasis>;
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;_Expr&lt;_UnClos&lt;__logical_not,&#32;std::_Expr,&#32;_Clos&gt;,&#32;<emphasis role="keywordtype">bool</emphasis>&gt;
189 &#32;&#32;&#32;&#32;&#32;&#32;operator!()&#32;<emphasis role="keyword">const</emphasis>;
190 
191 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
192 &#32;&#32;&#32;&#32;&#32;&#32;value_type&#32;sum()&#32;<emphasis role="keyword">const</emphasis>;
193 
194 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;shift(<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
195 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;cshift(<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
196 
197 &#32;&#32;&#32;&#32;&#32;&#32;value_type&#32;<link linkend="_toml_8hpp_1aef6fbc596e7e69a80f14c34a2b786a14">min</link>()&#32;<emphasis role="keyword">const</emphasis>;
198 &#32;&#32;&#32;&#32;&#32;&#32;value_type&#32;max()&#32;<emphasis role="keyword">const</emphasis>;
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;apply(value_type&#32;(*)(<emphasis role="keyword">const</emphasis>&#32;value_type&amp;))&#32;<emphasis role="keyword">const</emphasis>;
201 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;value_type&gt;&#32;apply(value_type&#32;(*)(value_type))&#32;<emphasis role="keyword">const</emphasis>;
202 
203 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Clos&#32;_M_closure;
205 &#32;&#32;&#32;&#32;};
206 
207 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
208 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
209 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::_Expr(<emphasis role="keyword">const</emphasis>&#32;_Clos&amp;&#32;__c)&#32;:&#32;_M_closure(__c)&#32;{}
210 
211 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;_Clos&amp;
213 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::operator()()<emphasis role="keyword">&#32;const</emphasis>
214 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_closure;&#32;}
215 
216 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
217 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
218 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::operator[](<emphasis role="keywordtype">size_t</emphasis>&#32;__i)<emphasis role="keyword">&#32;const</emphasis>
219 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_closure[__i];&#32;}
220 
221 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
222 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
223 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::operator[](slice&#32;__s)<emphasis role="keyword">&#32;const</emphasis>
224 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
225 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*<emphasis role="keyword">this</emphasis>)[__s];
226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
227 &#32;&#32;&#32;&#32;}
228 
229 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
230 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
231 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::operator[](<emphasis role="keyword">const</emphasis>&#32;gslice&amp;&#32;__gs)<emphasis role="keyword">&#32;const</emphasis>
232 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
233 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*<emphasis role="keyword">this</emphasis>)[__gs];
234 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
235 &#32;&#32;&#32;&#32;}
236 
237 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
238 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
239 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::operator[](<emphasis role="keyword">const</emphasis>&#32;valarray&lt;bool&gt;&amp;&#32;__m)<emphasis role="keyword">&#32;const</emphasis>
240 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
241 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*<emphasis role="keyword">this</emphasis>)[__m];
242 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
243 &#32;&#32;&#32;&#32;}
244 
245 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
246 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
247 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::operator[](<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__i)<emphasis role="keyword">&#32;const</emphasis>
248 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
249 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*<emphasis role="keyword">this</emphasis>)[__i];
250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
251 &#32;&#32;&#32;&#32;}
252 
253 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
254 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>
255 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::size()<emphasis role="keyword">&#32;const</emphasis>
256 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_closure.size();&#32;}
257 
258 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
259 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
260 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::shift(<emphasis role="keywordtype">int</emphasis>&#32;__n)<emphasis role="keyword">&#32;const</emphasis>
261 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
262 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*this).shift(__n);
263 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
264 &#32;&#32;&#32;&#32;}
265 
266 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
267 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
268 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::cshift(<emphasis role="keywordtype">int</emphasis>&#32;__n)<emphasis role="keyword">&#32;const</emphasis>
269 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
270 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*this).cshift(__n);
271 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
272 &#32;&#32;&#32;&#32;}
273 
274 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
275 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
276 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::apply(_Tp&#32;__f(<emphasis role="keyword">const</emphasis>&#32;_Tp&amp;))<emphasis role="keyword">&#32;const</emphasis>
277 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
278 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*this).apply(__f);
279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
280 &#32;&#32;&#32;&#32;}
281 
282 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
283 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;_Tp&gt;
284 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::apply(_Tp&#32;__f(_Tp))<emphasis role="keyword">&#32;const</emphasis>
285 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
286 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;_Tp&gt;&#32;__v&#32;=&#32;valarray&lt;_Tp&gt;(*this).apply(__f);
287 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__v;
288 &#32;&#32;&#32;&#32;}
289 
290 &#32;&#32;<emphasis role="comment">//&#32;XXX:&#32;replace&#32;this&#32;with&#32;a&#32;more&#32;robust&#32;summation&#32;algorithm.</emphasis>
291 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
292 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
293 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::sum()<emphasis role="keyword">&#32;const</emphasis>
294 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__n&#32;=&#32;_M_closure.size();
296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;==&#32;0)
297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Tp();
298 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
299 &#32;&#32;&#32;&#32;{
300 &#32;&#32;&#32;&#32;&#32;&#32;_Tp&#32;__s&#32;=&#32;_M_closure[--__n];
301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__n&#32;!=&#32;0)
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__s&#32;+=&#32;_M_closure[--__n];
303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__s;
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
305 &#32;&#32;&#32;&#32;}
306 
307 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
308 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
309 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::min()<emphasis role="keyword">&#32;const</emphasis>
310 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__valarray_min(_M_closure);&#32;}
311 
312 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Clos,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
313 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Tp
314 &#32;&#32;&#32;&#32;_Expr&lt;_Clos,&#32;_Tp&gt;::max()<emphasis role="keyword">&#32;const</emphasis>
315 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__valarray_max(_M_closure);&#32;}
316 
317 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Dom,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
318 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;_Expr&lt;_UnClos&lt;__logical_not,&#32;_Expr,&#32;_Dom&gt;,&#32;<emphasis role="keywordtype">bool</emphasis>&gt;
319 &#32;&#32;&#32;&#32;_Expr&lt;_Dom,&#32;_Tp&gt;::operator!()<emphasis role="keyword">&#32;const</emphasis>
320 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
321 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_UnClos&lt;__logical_not,&#32;std::_Expr,&#32;_Dom&gt;&#32;_Closure;
322 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Expr&lt;_Closure,&#32;bool&gt;(_Closure(this-&gt;_M_closure));
323 &#32;&#32;&#32;&#32;}
324 
325 <emphasis role="preprocessor">#define&#32;_DEFINE_EXPR_UNARY_OPERATOR(_Op,&#32;_Name)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
326 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom,&#32;typename&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
327 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_UnClos&lt;_Name,&#32;std::_Expr,&#32;_Dom&gt;,&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
328 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Expr&lt;_Dom,&#32;_Tp&gt;::operator&#32;_Op()&#32;const&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
329 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
330 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_UnClos&lt;_Name,&#32;std::_Expr,&#32;_Dom&gt;&#32;_Closure;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
331 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(this-&gt;_M_closure));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
332 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
333 
334 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1adf7a4a70f34f55dfab68c99d352e4663">_DEFINE_EXPR_UNARY_OPERATOR</link>(+,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__unary_plus)
335 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1adf7a4a70f34f55dfab68c99d352e4663">_DEFINE_EXPR_UNARY_OPERATOR</link>(-,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__negate)
336 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1adf7a4a70f34f55dfab68c99d352e4663">_DEFINE_EXPR_UNARY_OPERATOR</link>(~,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__bitwise_not)
337 
338 <emphasis role="preprocessor">#undef&#32;_DEFINE_EXPR_UNARY_OPERATOR</emphasis>
339 
340 <emphasis role="preprocessor">#define&#32;_DEFINE_EXPR_BINARY_OPERATOR(_Op,&#32;_Name)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
341 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom1,&#32;class&#32;_Dom2&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
342 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_Name,&#32;_Expr,&#32;_Expr,&#32;_Dom1,&#32;_Dom2&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
343 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;__fun&lt;_Name,&#32;typename&#32;_Dom1::value_type&gt;::result_type&gt;&#32;\</emphasis>
344 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;operator&#32;_Op(const&#32;_Expr&lt;_Dom1,&#32;typename&#32;_Dom1::value_type&gt;&amp;&#32;__v,&#32;&#32;&#32;\</emphasis>
345 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;_Expr&lt;_Dom2,&#32;typename&#32;_Dom2::value_type&gt;&amp;&#32;__w)&#32;&#32;&#32;\</emphasis>
346 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
347 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom1::value_type&#32;_Arg;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
348 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;__fun&lt;_Name,&#32;_Arg&gt;::result_type&#32;_Value;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
349 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_Name,&#32;_Expr,&#32;_Expr,&#32;_Dom1,&#32;_Dom2&gt;&#32;_Closure;&#32;&#32;&#32;&#32;&#32;\</emphasis>
350 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Value&gt;(_Closure(__v(),&#32;__w()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
351 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
352 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
353 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
354 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_Name,&#32;_Expr,&#32;_Constant,&#32;_Dom,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
355 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
356 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;__fun&lt;_Name,&#32;typename&#32;_Dom::value_type&gt;::result_type&gt;&#32;\</emphasis>
357 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;operator&#32;_Op(const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__v,&#32;&#32;&#32;&#32;&#32;\</emphasis>
358 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;typename&#32;_Dom::value_type&amp;&#32;__t)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
359 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
360 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Arg;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
361 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;__fun&lt;_Name,&#32;_Arg&gt;::result_type&#32;_Value;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
362 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_Name,&#32;_Expr,&#32;_Constant,&#32;_Dom,&#32;_Arg&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
363 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Value&gt;(_Closure(__v(),&#32;__t));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
364 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
365 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
366 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
367 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_Name,&#32;_Constant,&#32;_Expr,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
368 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type,&#32;_Dom&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
369 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;__fun&lt;_Name,&#32;typename&#32;_Dom::value_type&gt;::result_type&gt;&#32;\</emphasis>
370 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;operator&#32;_Op(const&#32;typename&#32;_Dom::value_type&amp;&#32;__t,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
371 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__v)&#32;&#32;&#32;&#32;&#32;\</emphasis>
372 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
373 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Arg;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
374 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;__fun&lt;_Name,&#32;_Arg&gt;::result_type&#32;_Value;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
375 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_Name,&#32;_Constant,&#32;_Expr,&#32;_Arg,&#32;_Dom&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
376 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Value&gt;(_Closure(__t,&#32;__v()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
377 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
378 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
379 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
380 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_Name,&#32;_Expr,&#32;_ValArray,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
381 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Dom,&#32;typename&#32;_Dom::value_type&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
382 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;__fun&lt;_Name,&#32;typename&#32;_Dom::value_type&gt;::result_type&gt;&#32;\</emphasis>
383 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;operator&#32;_Op(const&#32;_Expr&lt;_Dom,typename&#32;_Dom::value_type&gt;&amp;&#32;__e,&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
384 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;valarray&lt;typename&#32;_Dom::value_type&gt;&amp;&#32;__v)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
385 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
386 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Arg;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
387 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;__fun&lt;_Name,&#32;_Arg&gt;::result_type&#32;_Value;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
388 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_Name,&#32;_Expr,&#32;_ValArray,&#32;_Dom,&#32;_Arg&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
389 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Value&gt;(_Closure(__e(),&#32;__v));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
390 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
391 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
392 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
393 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_Name,&#32;_ValArray,&#32;_Expr,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
394 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type,&#32;_Dom&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
395 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;__fun&lt;_Name,&#32;typename&#32;_Dom::value_type&gt;::result_type&gt;&#32;\</emphasis>
396 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;operator&#32;_Op(const&#32;valarray&lt;typename&#32;_Dom::value_type&gt;&amp;&#32;__v,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
397 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__e)&#32;&#32;&#32;&#32;&#32;\</emphasis>
398 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
399 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
400 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;__fun&lt;_Name,&#32;_Tp&gt;::result_type&#32;_Value;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
401 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_Name,&#32;_ValArray,&#32;_Expr,&#32;_Tp,&#32;_Dom&gt;&#32;_Closure;&#32;&#32;&#32;&#32;\</emphasis>
402 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Value&gt;(_Closure(__v,&#32;__e&#32;()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
403 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
404 
405 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(+,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__plus)
406 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(-,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__minus)
407 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(*,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__multiplies)
408 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(/,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__divides)
409 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(%,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__modulus)
410 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(^,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__bitwise_xor)
411 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&amp;,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__bitwise_and)
412 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(|,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__bitwise_or)
413 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&lt;&lt;,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__shift_left)
414 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&gt;&gt;,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__shift_right)
415 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&amp;&amp;,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__logical_and)
416 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(||,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__logical_or)
417 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(==,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__equal_to)
418 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(!=,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__not_equal_to)
419 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&lt;,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__less)
420 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&gt;,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__greater)
421 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&lt;=,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__less_equal)
422 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a6022e8a17b6d109a136e897369cfc614">_DEFINE_EXPR_BINARY_OPERATOR</link>(&gt;=,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::__greater_equal)
423 
424 <emphasis role="preprocessor">#undef&#32;_DEFINE_EXPR_BINARY_OPERATOR</emphasis>
425 
426 <emphasis role="preprocessor">#define&#32;_DEFINE_EXPR_UNARY_FUNCTION(_Name,&#32;_UName)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
427 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
428 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_UnClos&lt;_UName,&#32;_Expr,&#32;_Dom&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
429 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
430 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Name(const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__e)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
431 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
432 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
433 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_UnClos&lt;_UName,&#32;_Expr,&#32;_Dom&gt;&#32;_Closure;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
434 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__e()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
435 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
436 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
437 <emphasis role="preprocessor">&#32;&#32;template&lt;typename&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
438 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_UnClos&lt;_UName,&#32;_ValArray,&#32;_Tp&gt;,&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
439 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Name(const&#32;valarray&lt;_Tp&gt;&amp;&#32;__v)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
440 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
441 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_UnClos&lt;_UName,&#32;_ValArray,&#32;_Tp&gt;&#32;_Closure;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
442 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__v));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
443 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
444 
445 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(abs,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Abs)
446 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Cos)
447 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a6826a8b8db695e1c1cddea666254e56f">acos</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Acos)
448 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1ac2ac5e2dccf59bf3393c5e24b168f3c6">cosh</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Cosh)
449 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Sin)
450 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1aa2375efebaed504113d91f1822bafa38">asin</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Asin)
451 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a2579de64a076b1183bbf48cbed658d12">sinh</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Sinh)
452 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a58fbdc949853bd2d1f0a8dbf9f89fe32">tan</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Tan)
453 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a4a926ffaf78a83aca2ae45be46fa7571">tanh</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Tanh)
454 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1af59f8735da7eee127c6807d114e82a3a">atan</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Atan)
455 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Exp)
456 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a25a8d722e743f3a219e5f0bf0bb867c7">log</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Log)
457 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1af26c25cec2b892904654e4068b199882">log10</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Log10)
458 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1a11091f98391e63a22a3e52b7b9694cf0">_DEFINE_EXPR_UNARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Sqrt)
459 
460 <emphasis role="preprocessor">#undef&#32;_DEFINE_EXPR_UNARY_FUNCTION</emphasis>
461 
462 <emphasis role="preprocessor">#define&#32;_DEFINE_EXPR_BINARY_FUNCTION(_Fun,&#32;_UFun)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
463 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom1,&#32;class&#32;_Dom2&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
464 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_Expr,&#32;_Expr,&#32;_Dom1,&#32;_Dom2&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
465 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom1::value_type&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
466 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;_Expr&lt;_Dom1,&#32;typename&#32;_Dom1::value_type&gt;&amp;&#32;__e1,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
467 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;_Expr&lt;_Dom2,&#32;typename&#32;_Dom2::value_type&gt;&amp;&#32;__e2)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
468 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
469 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom1::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
470 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_Expr,&#32;_Expr,&#32;_Dom1,&#32;_Dom2&gt;&#32;_Closure;&#32;&#32;&#32;&#32;\</emphasis>
471 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__e1(),&#32;__e2()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
472 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
473 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
474 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
475 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_Expr,&#32;_ValArray,&#32;_Dom,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
476 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
477 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
478 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__e,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
479 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;valarray&lt;typename&#32;_Dom::value_type&gt;&amp;&#32;__v)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
480 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
481 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
482 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_Expr,&#32;_ValArray,&#32;_Dom,&#32;_Tp&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
483 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__e(),&#32;__v));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
484 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
485 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
486 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
487 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_ValArray,&#32;_Expr,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
488 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type,&#32;_Dom&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
489 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
490 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;valarray&lt;typename&#32;_Dom::valarray&gt;&amp;&#32;__v,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
491 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__e)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
492 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
493 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
494 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_ValArray,&#32;_Expr,&#32;_Tp,&#32;_Dom&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
495 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__v,&#32;__e()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
496 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
497 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
498 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
499 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_Expr,&#32;_Constant,&#32;_Dom,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
500 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
501 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
502 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__e,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
503 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;typename&#32;_Dom::value_type&amp;&#32;__t)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
504 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
505 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
506 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_Expr,&#32;_Constant,&#32;_Dom,&#32;_Tp&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
507 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__e(),&#32;__t));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
508 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
509 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
510 <emphasis role="preprocessor">&#32;&#32;template&lt;class&#32;_Dom&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
511 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_Constant,&#32;_Expr,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
512 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type,&#32;_Dom&gt;,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
513 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Dom::value_type&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
514 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;typename&#32;_Dom::value_type&amp;&#32;__t,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
515 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;_Expr&lt;_Dom,&#32;typename&#32;_Dom::value_type&gt;&amp;&#32;__e)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
516 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
517 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;typename&#32;_Dom::value_type&#32;_Tp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
518 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_Constant,&#32;_Expr,&#32;_Tp,&#32;_Dom&gt;&#32;_Closure;&#32;&#32;&#32;\</emphasis>
519 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__t,&#32;__e()));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
520 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
521 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
522 <emphasis role="preprocessor">&#32;&#32;template&lt;typename&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
523 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_ValArray,&#32;_ValArray,&#32;_Tp,&#32;_Tp&gt;,&#32;_Tp&gt;&#32;\</emphasis>
524 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;valarray&lt;_Tp&gt;&amp;&#32;__v,&#32;const&#32;valarray&lt;_Tp&gt;&amp;&#32;__w)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
525 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
526 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_ValArray,&#32;_ValArray,&#32;_Tp,&#32;_Tp&gt;&#32;_Closure;\</emphasis>
527 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__v,&#32;__w));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
528 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
529 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
530 <emphasis role="preprocessor">&#32;&#32;template&lt;typename&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
531 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_ValArray,&#32;_Constant,&#32;_Tp,&#32;_Tp&gt;,&#32;_Tp&gt;&#32;\</emphasis>
532 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;valarray&lt;_Tp&gt;&amp;&#32;__v,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
533 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;typename&#32;valarray&lt;_Tp&gt;::value_type&amp;&#32;__t)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
534 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
535 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_ValArray,&#32;_Constant,&#32;_Tp,&#32;_Tp&gt;&#32;_Closure;\</emphasis>
536 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__v,&#32;__t));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
537 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
538 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
539 <emphasis role="preprocessor">&#32;&#32;template&lt;typename&#32;_Tp&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
540 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;inline&#32;_Expr&lt;_BinClos&lt;_UFun,&#32;_Constant,&#32;_ValArray,&#32;_Tp,&#32;_Tp&gt;,&#32;_Tp&gt;&#32;\</emphasis>
541 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_Fun(const&#32;typename&#32;valarray&lt;_Tp&gt;::value_type&amp;&#32;__t,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
542 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;const&#32;valarray&lt;_Tp&gt;&amp;&#32;__v)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
543 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
544 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;typedef&#32;_BinClos&lt;_UFun,&#32;_Constant,&#32;_ValArray,&#32;_Tp,&#32;_Tp&gt;&#32;_Closure;\</emphasis>
545 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;_Expr&lt;_Closure,&#32;_Tp&gt;(_Closure(__t,&#32;__v));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
546 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
547 
548 <link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1ad5a000c39f0358e254f49842eeaa2852">_DEFINE_EXPR_BINARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a525d483aa59186e25ad8a1b5b8428536">atan2</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Atan2)
549 <link linkend="__classes_2lib_2include_2c_09_09_2bits_2valarray__after_8h_1ad5a000c39f0358e254f49842eeaa2852">_DEFINE_EXPR_BINARY_FUNCTION</link>(<link linkend="__classes_2lib_2include_2tgmath_8h_1a490c36eca6590103f32eb0520a4c11f6">pow</link>,&#32;<emphasis role="keyword">struct</emphasis>&#32;std::_Pow)
550 
551 <emphasis role="preprocessor">#undef&#32;_DEFINE_EXPR_BINARY_FUNCTION</emphasis>
552 
553 _GLIBCXX_END_NAMESPACE_VERSION
554 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
555 
556 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_CPP_VALARRAY_AFTER_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
