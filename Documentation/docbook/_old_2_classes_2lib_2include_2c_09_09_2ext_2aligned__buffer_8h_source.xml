<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2aligned__buffer_8h_source" xml:lang="en-US">
<title>aligned_buffer.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/aligned_buffer.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Aligned&#32;memory&#32;buffer&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2013-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
29 <emphasis role="preprocessor">#ifndef&#32;_ALIGNED_BUFFER_H</emphasis>
30 <emphasis role="preprocessor">#define&#32;_ALIGNED_BUFFER_H&#32;1</emphasis>
31 
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
33 
34 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
35 <emphasis role="preprocessor">#&#32;include&#32;&lt;type_traits&gt;</emphasis>
36 <emphasis role="preprocessor">#else</emphasis>
37 <emphasis role="preprocessor">#&#32;include&#32;&lt;bits/c++0x_warning.h&gt;</emphasis>
38 <emphasis role="preprocessor">#endif</emphasis>
39 
40 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>
41 {
42 &#32;&#32;<emphasis role="comment">//&#32;A&#32;utility&#32;type&#32;containing&#32;a&#32;POD&#32;object&#32;that&#32;can&#32;hold&#32;an&#32;object&#32;of&#32;type</emphasis>
43 &#32;&#32;<emphasis role="comment">//&#32;_Tp&#32;initialized&#32;via&#32;placement&#32;new&#32;or&#32;allocator_traits::construct.</emphasis>
44 &#32;&#32;<emphasis role="comment">//&#32;Intended&#32;for&#32;use&#32;as&#32;a&#32;data&#32;member&#32;subobject,&#32;use&#32;__aligned_buffer&#32;for</emphasis>
45 &#32;&#32;<emphasis role="comment">//&#32;complete&#32;objects.</emphasis>
46 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__aligned_membuf
48 &#32;&#32;&#32;&#32;{
49 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Target&#32;macro&#32;ADJUST_FIELD_ALIGN&#32;can&#32;produce&#32;different&#32;alignment&#32;for</emphasis>
50 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;types&#32;when&#32;used&#32;as&#32;class&#32;members.&#32;__aligned_membuf&#32;is&#32;intended</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;use&#32;as&#32;a&#32;class&#32;member,&#32;so&#32;align&#32;the&#32;buffer&#32;as&#32;for&#32;a&#32;class&#32;member.</emphasis>
52 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Since&#32;GCC&#32;8&#32;we&#32;could&#32;just&#32;use&#32;alignof(_Tp)&#32;instead,&#32;but&#32;older</emphasis>
53 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;versions&#32;of&#32;non-GNU&#32;compilers&#32;might&#32;still&#32;need&#32;this&#32;trick.</emphasis>
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Tp2&#32;{&#32;_Tp&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1_1___tp2_1a264ef645d34c2d9deeffa6c7b9e739a6">_M_t</link>;&#32;};
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">alignas</emphasis>(__alignof__(<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1_1___tp2_1a264ef645d34c2d9deeffa6c7b9e739a6">_Tp2::_M_t</link>))&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1657b40df782c2a2c5d33535fb3f1058">_M_storage</link>[<emphasis role="keyword">sizeof</emphasis>(_Tp)];
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1b0ca934e2ed01f51f3885aaf4ecf2de">__aligned_membuf</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
59 
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Can&#32;be&#32;used&#32;to&#32;avoid&#32;value-initialization&#32;zeroing&#32;_M_storage.</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a657b90893029211920cebe5bc9853363">__aligned_membuf</link>(std::nullptr_t)&#32;{&#32;}
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*
64 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c">_M_addr</link>()&#32;noexcept
65 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(&amp;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1657b40df782c2a2c5d33535fb3f1058">_M_storage</link>);&#32;}
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*
68 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ae41e71e75b4a4585e8170dca16cb9bce">_M_addr</link>()&#32;const&#32;noexcept
69 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(&amp;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a1657b40df782c2a2c5d33535fb3f1058">_M_storage</link>);&#32;}
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;_Tp*
72 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a3434c6ec6478f76db116927a26c4fec9">_M_ptr</link>()&#32;noexcept
73 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_Tp*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c">_M_addr</link>());&#32;}
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*
76 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1ac39a4feffcecdff27c0e11662603e3d6">_M_ptr</link>()&#32;const&#32;noexcept
77 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>_Tp*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1a2b9646a5aa6db498e005165d28a7ce6c">_M_addr</link>());&#32;}
78 &#32;&#32;&#32;&#32;};
79 
80 <emphasis role="preprocessor">#if&#32;_GLIBCXX_INLINE_VERSION</emphasis>
81 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>__aligned_buffer&#32;=&#32;__aligned_membuf&lt;_Tp&gt;;
83 <emphasis role="preprocessor">#else</emphasis>
84 &#32;&#32;<emphasis role="comment">//&#32;Similar&#32;to&#32;__aligned_membuf&#32;but&#32;aligned&#32;for&#32;complete&#32;objects,&#32;not&#32;members.</emphasis>
85 &#32;&#32;<emphasis role="comment">//&#32;This&#32;type&#32;is&#32;used&#32;in&#32;&lt;forward_list&gt;,&#32;&lt;future&gt;,&#32;&lt;bits/shared_ptr_base.h&gt;</emphasis>
86 &#32;&#32;<emphasis role="comment">//&#32;and&#32;&lt;bits/hashtable_policy.h&gt;,&#32;but&#32;ideally&#32;they&#32;would&#32;use&#32;__aligned_membuf</emphasis>
87 &#32;&#32;<emphasis role="comment">//&#32;instead,&#32;as&#32;it&#32;has&#32;smaller&#32;size&#32;for&#32;some&#32;types&#32;on&#32;some&#32;targets.</emphasis>
88 &#32;&#32;<emphasis role="comment">//&#32;This&#32;type&#32;is&#32;still&#32;used&#32;to&#32;avoid&#32;an&#32;ABI&#32;change.</emphasis>
89 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__aligned_buffer
91 &#32;&#32;&#32;&#32;:&#32;std::aligned_storage&lt;sizeof(_Tp),&#32;__alignof__(_Tp)&gt;
92 &#32;&#32;&#32;&#32;{
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>
94 &#32;&#32;&#32;&#32;std::aligned_storage&lt;<emphasis role="keyword">sizeof</emphasis>(_Tp),&#32;__alignof__(_Tp)&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ad2658faead1f6bddfe5718ba9f878ce5">_M_storage</link>;
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1af767d1991b18fb0d752455f08aed0b05">__aligned_buffer</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Can&#32;be&#32;used&#32;to&#32;avoid&#32;value-initialization</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ac1bd1f928e26bae12723bb6529ff0811">__aligned_buffer</link>(std::nullptr_t)&#32;{&#32;}
100 
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*
102 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda">_M_addr</link>()&#32;noexcept
103 &#32;&#32;&#32;&#32;&#32;&#32;{
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(&amp;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ad2658faead1f6bddfe5718ba9f878ce5">_M_storage</link>);
105 &#32;&#32;&#32;&#32;&#32;&#32;}
106 
107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*
108 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a9d3300c8ab425bbe2f402cfd729527db">_M_addr</link>()&#32;const&#32;noexcept
109 &#32;&#32;&#32;&#32;&#32;&#32;{
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(&amp;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1ad2658faead1f6bddfe5718ba9f878ce5">_M_storage</link>);
111 &#32;&#32;&#32;&#32;&#32;&#32;}
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;_Tp*
114 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a4f7396ec827253c1af249edad1c67b06">_M_ptr</link>()&#32;noexcept
115 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_Tp*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda">_M_addr</link>());&#32;}
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp*
118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1aa12d1b00657c87da2e57164246b3d593">_M_ptr</link>()&#32;const&#32;noexcept
119 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>_Tp*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_struct____gnu__cxx_1_1____aligned__buffer_1a1d3a215f88d305fbe28246d64b0a2fda">_M_addr</link>());&#32;}
120 &#32;&#32;&#32;&#32;};
121 <emphasis role="preprocessor">#endif</emphasis>
122 
123 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
124 
125 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_ALIGNED_BUFFER_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
