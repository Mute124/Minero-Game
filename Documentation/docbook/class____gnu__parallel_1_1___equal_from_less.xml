<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___equal_from_less" xml:lang="en-US">
<title>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary></indexterm>
<para>

<para>Constructs predicate for equality from strict weak ordering predicate. </para>
 
</para>
<para>
<computeroutput>#include &lt;base.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___equal_from_less__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___equal_from_less__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___equal_from_less_1acf7667c303ccfb8b50d3c16982f9c3d3">_EqualFromLess</link> (_Compare &amp;__comp)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___equal_from_less_1afa19a91412e3a69a94b193fa7e21137c">operator()</link> (const _T1 &amp;__a, const _T2 &amp;__b)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___equal_from_less_1acf7667c303ccfb8b50d3c16982f9c3d3">_EqualFromLess</link> (_Compare &amp;__comp)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___equal_from_less_1afa19a91412e3a69a94b193fa7e21137c">operator()</link> (const _T1 &amp;__a, const _T2 &amp;__b)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___equal_from_less_1acf7667c303ccfb8b50d3c16982f9c3d3">_EqualFromLess</link> (_Compare &amp;__comp)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___equal_from_less_1afa19a91412e3a69a94b193fa7e21137c">operator()</link> (const _T1 &amp;__a, const _T2 &amp;__b)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _T1, typename _T2, typename _Compare&gt;<?linebreak?>class __gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</title></simplesect>

<para>Constructs predicate for equality from strict weak ordering predicate. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___equal_from_less_1acf7667c303ccfb8b50d3c16982f9c3d3"/><section>
    <title>_EqualFromLess()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_EqualFromLess</primary><secondary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary><secondary>_EqualFromLess</secondary></indexterm>
<computeroutput>template&lt;typename _T1 , typename _T2 , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess</link>&lt; _T1, _T2, _Compare &gt;::_EqualFromLess (_Compare &amp; __comp)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___equal_from_less_1acf7667c303ccfb8b50d3c16982f9c3d3"/><section>
    <title>_EqualFromLess()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_EqualFromLess</primary><secondary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary><secondary>_EqualFromLess</secondary></indexterm>
<computeroutput>template&lt;typename _T1 , typename _T2 , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess</link>&lt; _T1, _T2, _Compare &gt;::_EqualFromLess (_Compare &amp; __comp)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___equal_from_less_1acf7667c303ccfb8b50d3c16982f9c3d3"/><section>
    <title>_EqualFromLess()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_EqualFromLess</primary><secondary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary><secondary>_EqualFromLess</secondary></indexterm>
<computeroutput>template&lt;typename _T1 , typename _T2 , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess</link>&lt; _T1, _T2, _Compare &gt;::_EqualFromLess (_Compare &amp; __comp)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___equal_from_less_1afa19a91412e3a69a94b193fa7e21137c"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _T1 , typename _T2 , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess</link>&lt; _T1, _T2, _Compare &gt;::operator() (const _T1 &amp; __a, const _T2 &amp; __b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___equal_from_less_1afa19a91412e3a69a94b193fa7e21137c"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _T1 , typename _T2 , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess</link>&lt; _T1, _T2, _Compare &gt;::operator() (const _T1 &amp; __a, const _T2 &amp; __b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___equal_from_less_1afa19a91412e3a69a94b193fa7e21137c"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _T1 , typename _T2 , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess</link>&lt; _T1, _T2, _Compare &gt;::operator() (const _T1 &amp; __a, const _T2 &amp; __b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2base_8h">base.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2base_8h">base.h</link></section>
</section>
