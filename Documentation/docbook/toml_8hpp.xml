<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_toml_8hpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/toml.hpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/toml.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;cassert&gt;<?linebreak?>#include &lt;new&gt;<?linebreak?>#include &lt;string_view&gt;<?linebreak?>#include &lt;string&gt;<?linebreak?>#include &lt;optional&gt;<?linebreak?>#include &lt;cstdint&gt;<?linebreak?>#include &lt;cstddef&gt;<?linebreak?>#include &lt;cstring&gt;<?linebreak?>#include &lt;cfloat&gt;<?linebreak?>#include &lt;climits&gt;<?linebreak?>#include &lt;cmath&gt;<?linebreak?>#include &lt;limits&gt;<?linebreak?>#include &lt;memory&gt;<?linebreak?>#include &lt;iosfwd&gt;<?linebreak?>#include &lt;type_traits&gt;<?linebreak?>#include &lt;vector&gt;<?linebreak?>#include &lt;iterator&gt;<?linebreak?>#include &lt;utility&gt;<?linebreak?>#include &lt;initializer_list&gt;<?linebreak?>#include &lt;map&gt;<?linebreak?>#include &lt;ostream&gt;<?linebreak?>#include &lt;sstream&gt;<?linebreak?>#include &lt;iomanip&gt;<?linebreak?>#include &lt;istream&gt;<?linebreak?>#include &lt;fstream&gt;<?linebreak?></programlisting>Include dependency graph for toml.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structinserter">inserter&lt; T &gt;</link></para>

<para>Helper class for suppressing move-construction in single-argument array constructors. </para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__ref__">copy_ref_&lt; Dest, Src &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__ref___3_01_dest_00_01_src_01_6_01_4">copy_ref_&lt; Dest, Src &amp; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__ref___3_01_dest_00_01_src_01_6_6_01_4">copy_ref_&lt; Dest, Src &amp;&amp; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__cv__">copy_cv_&lt; Dest, Src &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__cv___3_01_dest_00_01const_01_src_01_4">copy_cv_&lt; Dest, const Src &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__cv___3_01_dest_00_01volatile_01_src_01_4">copy_cv_&lt; Dest, volatile Src &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcopy__cv___3_01_dest_00_01const_01volatile_01_src_01_4">copy_cv_&lt; Dest, const volatile Src &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits">value_traits&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01const_01_t_01_4">value_traits&lt; const T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01volatile_01_t_01_4">value_traits&lt; volatile T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01const_01volatile_01_t_01_4">value_traits&lt; const volatile T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01_t_01_6_01_4">value_traits&lt; T &amp; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01_t_01_6_6_01_4">value_traits&lt; T &amp;&amp; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinteger__limits">integer_limits&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinteger__traits__base">integer_traits_base&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structunsigned__integer__traits">unsigned_integer_traits&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structsigned__integer__traits">signed_integer_traits&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinteger__traits">integer_traits&lt; T, S &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinteger__traits_3_01_t_00_01false_01_4">integer_traits&lt; T, false &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01signed_01char_01_4">value_traits&lt; signed char &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01unsigned_01char_01_4">value_traits&lt; unsigned char &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01signed_01short_01_4">value_traits&lt; signed short &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01unsigned_01short_01_4">value_traits&lt; unsigned short &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01signed_01int_01_4">value_traits&lt; signed int &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01unsigned_01int_01_4">value_traits&lt; unsigned int &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01signed_01long_01_4">value_traits&lt; signed long &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01unsigned_01long_01_4">value_traits&lt; unsigned long &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01signed_01long_01long_01_4">value_traits&lt; signed long long &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01unsigned_01long_01long_01_4">value_traits&lt; unsigned long long &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfloat__traits__base">float_traits_base&lt; T, MantissaDigits, DecimalDigits &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfloat__traits">float_traits&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01float_01_4">value_traits&lt; float &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01double_01_4">value_traits&lt; double &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01long_01double_01_4">value_traits&lt; long double &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstring__traits">string_traits&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01std_1_1string_01_4">value_traits&lt; std::string &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01std_1_1string__view_01_4">value_traits&lt; std::string_view &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01const_01char_01_5_01_4">value_traits&lt; const char * &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01const_01char_0f_n_0e_4">value_traits&lt; const char[N]&gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01char_01_5_01_4">value_traits&lt; char * &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01char_0f_n_0e_4">value_traits&lt; char[N]&gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnative__value__traits">native_value_traits&lt; T, NodeType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01bool_01_4">value_traits&lt; bool &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01date_01_4">value_traits&lt; date &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01time_01_4">value_traits&lt; time &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvalue__traits_3_01date__time_01_4">value_traits&lt; date_time &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper">node_wrapper&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01const_01_t_01_4">node_wrapper&lt; const T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01volatile_01_t_01_4">node_wrapper&lt; volatile T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01const_01volatile_01_t_01_4">node_wrapper&lt; const volatile T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01std_1_1string_01_4">node_wrapper&lt; std::string &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01int64__t_01_4">node_wrapper&lt; int64_t &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01double_01_4">node_wrapper&lt; double &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01bool_01_4">node_wrapper&lt; bool &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01date_01_4">node_wrapper&lt; date &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01time_01_4">node_wrapper&lt; time &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__wrapper_3_01date__time_01_4">node_wrapper&lt; date_time &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__unwrapper">node_unwrapper&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__unwrapper_3_01value_3_01_t_01_4_01_4">node_unwrapper&lt; value&lt; T &gt; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__unwrapper_3_01const_01value_3_01_t_01_4_01_4">node_unwrapper&lt; const value&lt; T &gt; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__unwrapper_3_01volatile_01value_3_01_t_01_4_01_4">node_unwrapper&lt; volatile value&lt; T &gt; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__unwrapper_3_01const_01volatile_01value_3_01_t_01_4_01_4">node_unwrapper&lt; const volatile value&lt; T &gt; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__type__getter">node_type_getter&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__type__getter_3_01table_01_4">node_type_getter&lt; table &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__type__getter_3_01array_01_4">node_type_getter&lt; array &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structnode__type__getter_3_01void_01_4">node_type_getter&lt; void &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structsource__position">source_position</link></para>

<para>A source document line-and-column pair. </para>
</listitem>
            <listitem><para>struct <link linkend="_structsource__region">source_region</link></para>

<para>A source document region. </para>
</listitem>
            <listitem><para>struct <link linkend="_structtime">time</link></para>

<para>A local time-of-day. </para>
</listitem>
            <listitem><para>struct <link linkend="_structtime__offset">time_offset</link></para>

<para>A timezone offset. </para>
</listitem>
            <listitem><para>struct <link linkend="_structdate__time">date_time</link></para>

<para>A date-time. </para>
</listitem>
            <listitem><para>class <link linkend="_classpath__component">path_component</link></para>

<para>Represents a single component of a complete &apos;TOML-path&apos;: either a key or an array index. </para>
</listitem>
            <listitem><para>class <link linkend="_classpath">path</link></para>

<para>A TOML path. </para>
</listitem>
            <listitem><para>struct <link linkend="_structnative__value__maker_3_01_t_00_01_t_01_4">native_value_maker&lt; T, T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinserted__type__of___3_01inserter_3_01_t_01_4_00_01false_01_4">inserted_type_of_&lt; inserter&lt; T &gt;, false &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinserted__type__of___3_01_t_00_01false_01_4">inserted_type_of_&lt; T, false &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structemplaced__type__of__">emplaced_type_of_&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structemplaced__type__of___3_01_t_01_4">emplaced_type_of_&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structemplaced__type__of___3_01inserter_3_01_t_01_4_01_4">emplaced_type_of_&lt; inserter&lt; T &gt; &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structarray__init__elem">array_init_elem</link></para>
</listitem>
            <listitem><para>class <link linkend="_classarray">array</link></para>

<para>A TOML array. </para>
</listitem>
            <listitem><para>class <link linkend="_classtable__iterator">table_iterator&lt; IsConst &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structtable__init__pair">table_init_pair</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtable">table</link></para>

<para>A TOML table. </para>
</listitem>
            <listitem><para>class <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e">TOML_PARSE_ERROR_BASE</link></para>

<para>An error generated when parsing fails. </para>
</listitem>
            <listitem><para>class <link linkend="_classparse__result">parse_result</link></para>

<para>The result of a parsing operation. </para>
</listitem>
            <listitem><para>struct <link linkend="_structformatter__config">formatter_config</link></para>
</listitem>
            <listitem><para>class <link linkend="_classformatter">formatter</link></para>
</listitem>
            <listitem><para>class <link linkend="_classutf8__byte__stream_3_01std_1_1basic__string__view_3_01_char_01_4_01_4">utf8_byte_stream&lt; std::basic_string_view&lt; Char &gt; &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classutf8__byte__stream_3_01std_1_1istream_01_4">utf8_byte_stream&lt; std::istream &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structutf8__codepoint">utf8_codepoint</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structutf8__reader__interface">utf8_reader_interface</link></para>
</listitem>
            <listitem><para>class <link linkend="_classutf8__reader">utf8_reader&lt; T &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classutf8__buffered__reader">utf8_buffered_reader</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparse__integer__traits_3_012_01_4">parse_integer_traits&lt; 2 &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparse__integer__traits_3_018_01_4">parse_integer_traits&lt; 8 &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparse__integer__traits_3_0110_01_4">parse_integer_traits&lt; 10 &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparse__integer__traits_3_0116_01_4">parse_integer_traits&lt; 16 &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structescaped__codepoint">escaped_codepoint</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structerror__builder">error_builder</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparse__scope">parse_scope</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparse__key__buffer">parse_key_buffer</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdepth__counter__scope">depth_counter_scope</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structparsed__string">parsed_string</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structtable__vector__scope">table_vector_scope</link></para>
</listitem>
            <listitem><para>class <link linkend="_classparser">parser</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacetoml">toml</link></para>

<para>The root namespace for all toml++ functions and types. </para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceliterals">literals</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a91eba20e2725bc78a99d41790bfe5930">INCLUDE_TOMLPLUSPLUS_H</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad6e0acaa3ee35f44aea0e4d728d33e23">TOML_CPP</link>&#160;&#160;&#160;__cplusplus</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(major,  minor,  patch)&#160;&#160;&#160;(((major)*10000) + ((minor)*100) + ((patch)))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8e57c479788e6f0172f78993ae9f84b0">TOML_CLANG</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a468d849d2e2c53dbdea2810bdd6806c8">TOML_ICC</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1abeac08b66035dcbb4f5e5f933c9bad43">TOML_ICC_CL</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a55e22860ec1da9b5767eb2bcb50929c8">TOML_MSVC</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a91ebc63d07da0adb1d387ec24d07e1f6">TOML_GCC</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3612b1afe68ba6f33693af9f2ebf3336">TOML_WINDOWS</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3487b5b3da2f9135943a5d0fd966b8e7">TOML_DOXYGEN</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3c5d0a10361f56b8f16cfd3ea2176ccd">TOML_INTELLISENSE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab8e5f0eae9cd116c57a964a00abe04ba">TOML_ARCH_ITANIUM</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a38d4ef2bbfc3acebcb952f34bc44509a">TOML_ARCH_AMD64</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a80a7e39b2ff89d4ac501ac98417a296b">TOML_ARCH_X86</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab0ab5f976d72043ef3bdfa6d0c242935">TOML_ARCH_ARM32</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab7d03922ad43bbb74bc5a0465c32468f">TOML_ARCH_ARM64</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1acebfc1ca02ca522be8f1f9653ce41f1c">TOML_ARCH_ARM</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a21b83ca7391dc9edfb12a17d0de052bf">TOML_HAS_INCLUDE</link>(header)&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ac3f412e2cc3138e14a9fa40963640b70">TOML_HAS_BUILTIN</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0924af222438c894a86f4ece4fb32b52">TOML_HAS_FEATURE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a4df1e7f064d8fa0ee4515647b66e78bb">TOML_HAS_ATTR</link>(attr)&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a424b48ea5038443fe9f5ee71e96eb7b9">TOML_HAS_CPP_ATTR</link>(attr)&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a7006a81cb3a4676d1514dedfb77a1993">TOML_COMPILER_HAS_EXCEPTIONS</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9d74c652db29dd0d4bf4fc34de96025d">TOML_COMPILER_HAS_RTTI</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab61929848048873f2ffe3be0cfab436f">TOML_ATTR</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a13b98c00e7eb0405a9f998b1ee531366">TOML_DECLSPEC</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a4caa1faad69813e3ddacfd20bf7c33ea">TOML_CONCAT_1</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#160;&#160;&#160;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>##<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a190b782bb371a13d40cfe91102120ca7">TOML_CONCAT</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a4caa1faad69813e3ddacfd20bf7c33ea">TOML_CONCAT_1</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a67d21bbe939dfd873d673f24c1098caa">TOML_MAKE_STRING_1</link>(s)&#160;&#160;&#160;#s</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8d2cd6ca02ae4971d0931cd955b328d0">TOML_MAKE_STRING</link>(s)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a67d21bbe939dfd873d673f24c1098caa">TOML_MAKE_STRING_1</link>(s)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aa9cd0da20c04fe649ea2460248dcea23">TOML_PRAGMA_CLANG</link>(decl)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad5d62df82158058232a50043ce41e8f6">TOML_PRAGMA_CLANG_GE_9</link>(decl)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad608eade28884fbb26ca4ff5aeea0242">TOML_PRAGMA_CLANG_GE_10</link>(decl)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1af301bd3ae7708a21171567a45353693e">TOML_PRAGMA_CLANG_GE_11</link>(decl)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a18360de87e5c607cab0ef434b9e3ecfe">TOML_PRAGMA_GCC</link>(decl)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a75e8eb2a50ba6ce46571b6ff6a2781d2">TOML_PRAGMA_MSVC</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a5267dede271aa6a7938b48580684a977">TOML_PRAGMA_ICC</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link>&#160;&#160;&#160;inline</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3051c67f622ff6b83a43e3db480a45b6">TOML_NEVER_INLINE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aff57c07de29701e4a68a260317a08218">TOML_ABSTRACT_INTERFACE</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a13b98c00e7eb0405a9f998b1ee531366">TOML_DECLSPEC</link>(novtable)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a207c4b5404fad3bbeeb40388c9480f64">TOML_EMPTY_BASES</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a13b98c00e7eb0405a9f998b1ee531366">TOML_DECLSPEC</link>(empty_bases)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0d667de514e1435f8cfba9b403dd6665">TOML_TRIVIAL_ABI</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a">TOML_NODISCARD_CTOR</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0d81fa436d15f4572c420c9d0a86c150">TOML_PURE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a2c9f122c4cb54f8633e8e69f615fc7ec">TOML_CONST</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>	<link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad26b309f170b9504c99f7dd7b1a912f0">TOML_CONST_INLINE_GETTER</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>	<link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a87bd3a07eee4ded6e9f8a97ac8fba3e8">TOML_ASSUME</link>(...)&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a43a3ff9d3097bf4e929c9a73bd17b793">TOML_UNREACHABLE</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a210082555d3fdd90061891a73b546e3d">TOML_LIKELY</link>(...)&#160;&#160;&#160;(__VA_ARGS__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a96d958d2281756956fce337b6a48cb63">TOML_LIKELY_CASE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(...)&#160;&#160;&#160;(__VA_ARGS__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3ed5549bb358a70566b2499634ffd752">TOML_UNLIKELY_CASE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a926f2e2ecef8dfefde373e4192a0ae8d">TOML_FLAGS_ENUM</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1abc3b568c4a112ca6d670c54c1f7d6b4b">TOML_OPEN_ENUM</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3c0b0ffb1299e1086599b0748e8e36a1">TOML_CLOSED_ENUM</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1abc3b568c4a112ca6d670c54c1f7d6b4b">TOML_OPEN_ENUM</link> <link linkend="_preprocessor_8h_1a926f2e2ecef8dfefde373e4192a0ae8d">TOML_FLAGS_ENUM</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a3c0b0ffb1299e1086599b0748e8e36a1">TOML_CLOSED_ENUM</link> <link linkend="_preprocessor_8h_1a926f2e2ecef8dfefde373e4192a0ae8d">TOML_FLAGS_ENUM</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8eb338ba32fdd4d968dc24a33de42e65">TOML_MAKE_FLAGS_2</link>(T,  op,  linkage)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1adb043cb819ee037835b92601b500b9b8">TOML_MAKE_FLAGS_1</link>(T,  linkage)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1af3268f6dd1413971826ff207adc92d49">TOML_MAKE_FLAGS</link>(T)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1adb043cb819ee037835b92601b500b9b8">TOML_MAKE_FLAGS_1</link>(T, )</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a05802eb834f167bd8a151e82492b8866">TOML_UNUSED</link>(...)&#160;&#160;&#160;static_cast&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&gt;(__VA_ARGS__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a5e2438e68db4744f054974ec79e728e3">TOML_DELETE_DEFAULTS</link>(T)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1acb44e833882d0c4824af69311c8505f5">TOML_ASYMMETRICAL_EQUALITY_OPS</link>(LHS,  RHS, ...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1accea719d59cfe475ce4ecd2dd72df2e1">TOML_EVAL_BOOL_1</link>(T,  F)&#160;&#160;&#160;T</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ada03ddb8221706c08b22c121fbd983a6">TOML_EVAL_BOOL_0</link>(T,  F)&#160;&#160;&#160;F</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1234ac91a810b3bd926ed6721ad1e44a">POXY_IMPLEMENTATION_DETAIL</link>(...)&#160;&#160;&#160;__VA_ARGS__</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a25cc6544f9a475e47e4d373f0b1ea5e2">TOML_PUSH_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1a5e92e6a516bef7a1bfdebd916a264d">TOML_DISABLE_CODE_ANALYSIS_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a515739f6ed49b05e0c9e398542e0c6f6">TOML_DISABLE_SWITCH_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a666633ccdf7dbe23afea6c28fd1d7bd1">TOML_DISABLE_SUGGEST_ATTR_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ac2188f4d798d551a2bff3f63437b7d8f">TOML_DISABLE_SPAM_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0e478700173d852d6baaf3fc40d6712f">TOML_DISABLE_ARITHMETIC_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a857696acfb06fc509ad07e0d23bb7aab">TOML_POP_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a44b1f68de11411aefbcb6635f9a39471">TOML_DISABLE_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad37422b7ddec78b06f09d3d368fbb428">TOML_ENABLE_WARNINGS</link>&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab209484871e7b8ca0be594dface4d072">TOML_SIMPLE_STATIC_ASSERT_MESSAGES</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a87f51a784286c7b6024f8f5e4257fdd4">TOML_SHARED_LIB</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8219bfd7e75587516385b6022b28abc2">TOML_HEADER_ONLY</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a27ee69835a1ddff9dbaf3015b4b08a11">TOML_IMPLEMENTATION</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3d7aebf91431575688d573f09a17559a">TOML_EXPORTED_CLASS</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1adf515bb7a6b8ce6b14bf86c8961a63cb">TOML_EXPORTED_MEMBER_FUNCTION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8436c6f378c73f3446a3b6f1e2c5e81c">TOML_EXPORTED_STATIC_FUNCTION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1110ff7d189a7738b9109d120f568b6b">TOML_ENABLE_UNRELEASED_FEATURES</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a121912d75d4624de6ab6854e41d8a852">TOML_ENABLE_PARSER</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9fc77582d9de77f59d2ddc9ae1f748ca">TOML_ENABLE_FORMATTERS</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1abc26d565182ee6697b0a7766e669e852">TOML_ENABLE_SIMD</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a94867db67c98e0e9d4fbb70690951fbf">TOML_ENABLE_WINDOWS_COMPAT</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a94867db67c98e0e9d4fbb70690951fbf">TOML_ENABLE_WINDOWS_COMPAT</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a419bb627cf9a2a7feb9621358f2dc255">TOML_INCLUDE_WINDOWS_H</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0f6a688021ea2fc13e1c76acd64e4bbc">TOML_HAS_CUSTOM_OPTIONAL_TYPE</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a92f612e13566656e59e6799fed8028de">TOML_UNDEF_MACROS</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9c9d5c24d1da441070611cb02cf78993">TOML_MAX_NESTED_VALUES</link>&#160;&#160;&#160;256</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a117fe6e84eb06cbfb6ee0a007663a1e5">TOML_LIFETIME_HOOKS</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8c407a8f6fe52a795db35be3f00393f8">TOML_ASSERT</link>(expr)&#160;&#160;&#160;assert(expr)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a989dd9b9610c274f1eb99e8e77997ee9">TOML_ASSERT_ASSUME</link>(expr)&#160;&#160;&#160;<link linkend="_group__configuration_1ga8c407a8f6fe52a795db35be3f00393f8">TOML_ASSERT</link>(expr)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a56ab81041897681ac38ceba52a380b97">TOML_ENABLE_FLOAT16</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aaa8d939c3f6aae3b13b64d748f2dae9c">TOML_INT_CHARCONV</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a17a381f6f13b8d59ed7b90afe3603a9e">TOML_FLOAT_CHARCONV</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aaa8d939c3f6aae3b13b64d748f2dae9c">TOML_INT_CHARCONV</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a17a381f6f13b8d59ed7b90afe3603a9e">TOML_FLOAT_CHARCONV</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9728eae8910e26cfd919abbd314c98f4">TOML_REQUIRES</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a4dd370e7dc32e9d4670a7cfeb0eac3e8">TOML_ENABLE_IF</link>(...)&#160;&#160;&#160;, typename std::enable_if&lt;(__VA_ARGS__), int&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> = 0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a28441f3c429403e368267788c2e8a279">TOML_CONSTRAINED_TEMPLATE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>, ...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab3272d559df83418b043791473ef1016">TOML_HIDDEN_CONSTRAINT</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>, ...)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a28441f3c429403e368267788c2e8a279">TOML_CONSTRAINED_TEMPLATE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3204f1adf633485bfab4d9fcaa53562f">TOML_LIB_MAJOR</link>&#160;&#160;&#160;3</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a91e0623a40956aca6b374a69d15877ce">TOML_LIB_MINOR</link>&#160;&#160;&#160;3</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a475fbde63f76df52f3832f3f36785874">TOML_LIB_PATCH</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a86434194622c9ed6d264d7a3fb2f77db">TOML_LANG_MAJOR</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a73071717f366b81809a3d519676f651d">TOML_LANG_MINOR</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab9cc97fa10406000ffc27ffdd4a81986">TOML_LANG_PATCH</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9a3362cd229a33fdfca5cccdb77f1775">TOML_LIB_SINGLE_HEADER</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1af295418d62297f01c345a71775a288f9">TOML_LANG_EFFECTIVE_VERSION</link>&#160;&#160;&#160;		<link linkend="_preprocessor_8h_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(<link linkend="_version_8h_1a86434194622c9ed6d264d7a3fb2f77db">TOML_LANG_MAJOR</link>, <link linkend="_version_8h_1a73071717f366b81809a3d519676f651d">TOML_LANG_MINOR</link>, <link linkend="_version_8h_1ab9cc97fa10406000ffc27ffdd4a81986">TOML_LANG_PATCH</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a5a8b40abec38f553a8df46c8a8ff2cd6">TOML_LANG_HIGHER_THAN</link>(major,  minor,  patch)&#160;&#160;&#160;		(<link linkend="_preprocessor_8h_1af295418d62297f01c345a71775a288f9">TOML_LANG_EFFECTIVE_VERSION</link> &gt; <link linkend="_preprocessor_8h_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(major, minor, patch))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a3592f285e30a3c1901b5030cb1acb628">TOML_LANG_AT_LEAST</link>(major,  minor,  patch)&#160;&#160;&#160;		(<link linkend="_preprocessor_8h_1af295418d62297f01c345a71775a288f9">TOML_LANG_EFFECTIVE_VERSION</link> &gt;= <link linkend="_preprocessor_8h_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(major, minor, patch))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a649c9819492ed84229f80659f9f7a1a0">TOML_LANG_UNRELEASED</link>&#160;&#160;&#160;		<link linkend="_preprocessor_8h_1a5a8b40abec38f553a8df46c8a8ff2cd6">TOML_LANG_HIGHER_THAN</link>(<link linkend="_version_8h_1a86434194622c9ed6d264d7a3fb2f77db">TOML_LANG_MAJOR</link>, <link linkend="_version_8h_1a73071717f366b81809a3d519676f651d">TOML_LANG_MINOR</link>, <link linkend="_version_8h_1ab9cc97fa10406000ffc27ffdd4a81986">TOML_LANG_PATCH</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a69d473829126e60223718fa5d9e48d67">TOML_ABI_NAMESPACES</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9bceb285d9224ce1b1ab443811722aec">TOML_NAMESPACE_START</link>&#160;&#160;&#160;namespace toml { inline namespace <link linkend="_preprocessor_8h_1a190b782bb371a13d40cfe91102120ca7">TOML_CONCAT</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, <link linkend="_version_8h_1a3204f1adf633485bfab4d9fcaa53562f">TOML_LIB_MAJOR</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aab40a6832fe11707ab2cc1b83d8a1270">TOML_NAMESPACE_END</link>&#160;&#160;&#160;} static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a7e91f97e41d5cb8ddc933b165f9d5a4e">TOML_NAMESPACE</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a190b782bb371a13d40cfe91102120ca7">::toml::TOML_CONCAT</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, <link linkend="_version_8h_1a3204f1adf633485bfab4d9fcaa53562f">TOML_LIB_MAJOR</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9592495c391e21aa0ebe67066fa73214">TOML_ABI_NAMESPACE_START</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)&#160;&#160;&#160;inline namespace <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link> { static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1b2e27349c9e21d35138a1196acd6d58">TOML_ABI_NAMESPACE_BOOL</link>(cond,  T,  F)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a9592495c391e21aa0ebe67066fa73214">TOML_ABI_NAMESPACE_START</link>(<link linkend="_preprocessor_8h_1a190b782bb371a13d40cfe91102120ca7">TOML_CONCAT</link>(TOML_EVAL_BOOL_, cond)(T, F))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a2fc00b0b434c5deb14a83523be1b7e3f">TOML_ABI_NAMESPACE_END</link>&#160;&#160;&#160;} static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ac9e12bb017879603274ac1765b85b872">TOML_IMPL_NAMESPACE_START</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a9bceb285d9224ce1b1ab443811722aec">TOML_NAMESPACE_START</link> { namespace impl</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1abec69dd25f1e4c1dfbdd288441864939">TOML_IMPL_NAMESPACE_END</link>&#160;&#160;&#160;} <link linkend="_preprocessor_8h_1aab40a6832fe11707ab2cc1b83d8a1270">TOML_NAMESPACE_END</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a492b1349e6331172ea2b6b9b5791ec61">TOML_ANON_NAMESPACE_START</link>&#160;&#160;&#160;static_assert(<link linkend="_group__configuration_1ga27ee69835a1ddff9dbaf3015b4b08a11">TOML_IMPLEMENTATION</link>); <link linkend="_preprocessor_8h_1ac9e12bb017879603274ac1765b85b872">TOML_IMPL_NAMESPACE_START</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0385295454ae473a68d194eaffaf597c">TOML_ANON_NAMESPACE_END</link>&#160;&#160;&#160;<link linkend="_preprocessor_8h_1abec69dd25f1e4c1dfbdd288441864939">TOML_IMPL_NAMESPACE_END</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a4d6a9613a3acdad73c02b83a0b17cc3e">TOML_ANON_NAMESPACE</link>&#160;&#160;&#160;TOML_NAMESPACE::impl</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a4256b41e25e4aa04b70cf55fd56ce202">TOML_EXTERNAL_LINKAGE</link>&#160;&#160;&#160;inline</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link>&#160;&#160;&#160;inline</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link>&#160;&#160;&#160;&quot;\n| &quot;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#160;&#160;&#160;<link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link> &quot;  - &quot;</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#160;&#160;&#160;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39">TOML_SA_LIST_END</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec">TOML_SA_LIST_NEW</link>&#160;&#160;&#160;<link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link> <link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#160;&#160;&#160;<link linkend="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec">TOML_SA_LIST_NEW</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ae6ef2cd7e6c604e456b4b1bdf6bee613">TOML_SA_NATIVE_VALUE_TYPE_LIST</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a28ad2f9bb777d4b3cb545bdc94b55b63">TOML_SA_NODE_TYPE_LIST</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a1de380e050f331193398fe626294c548">TOML_SA_UNWRAPPED_NODE_TYPE_LIST</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a50ef717d8403c782d1405902faca4b80">TOML_LAUNDER</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#160;&#160;&#160;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a589bd0442002f5063eb4d1507fed18d2">TOML_HAS_CHAR8</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a71c24cd992d03ea4bebf16534e60c4f9">TOML_ENV_MESSAGE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a05278d773b91496857f3113bdfc748d8">TOML_PARSER_TYPENAME</link>&#160;&#160;&#160;TOML_NAMESPACE::impl::impl_noex::parser</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a6a2e4c5e45d5f2c8f2f3cedb2d0dafcf">TOML_SA_VALUE_MESSAGE_WSTRING</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a634cb9658960888223e8a1eb8b005ecb">TOML_SA_VALUE_MESSAGE_U8STRING_VIEW</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a24db235afb76c297b04653b8ea205481">TOML_SA_VALUE_MESSAGE_CONST_CHAR8</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1af388261a024b7ff38a50bb329d7df32c">TOML_SA_VALUE_EXACT_FUNC_MESSAGE</link>(type_arg)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1acf0e577c1a22db8f0fb3f8120fa3babf">TOML_SA_VALUE_FUNC_MESSAGE</link>(type_arg)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a2f6986aabe527bd559e98c579f812ba7">TOML_PARSE_ERROR_BASE</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aa93dca2c5d8d69cdbbe8c11fb71df7f5">TOML_HAS_SSE2</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a525e237df9d4a63fafb4462a5190e055">TOML_HAS_SSE4_1</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a7807884a92014643ba5f592263d86bb0">utf8_reader_error</link>(...)&#160;&#160;&#160;err_.emplace(__VA_ARGS__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1af8d77e747aff2b90c099d213469c63da">utf8_reader_return_after_error</link>(...)&#160;&#160;&#160;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link> __VA_ARGS__</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9786bc2cc56c908d0a845891896f4de8">utf8_reader_error_check</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a738efc76b091799c4b312ad69c8773bc">TOML_OVERALIGNED</link>&#160;&#160;&#160;<link linkend="__classes_2lib_2include_2stdalign_8h_1ac2d9dab29c1c9e7069f1d6f19fbbd115">alignas</link>(32)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ac78113fc8c30dd400d9b8b3a82b0cbb9">utf8_buffered_reader_error_check</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a20dec4fc2cdf7f5ff2372b1d7827aa7c">TOML_RETURNS_BY_THROWING</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a52caa35291dee569134ba11765e327a2">push_parse_scope_2</link>(scope,  line)&#160;&#160;&#160;<link linkend="_structparse__scope">parse_scope</link> ps_##line(current_scope, scope)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1add6a523ca8236fc20c97f11e7485a5ec">push_parse_scope_1</link>(scope,  line)&#160;&#160;&#160;<link linkend="_parser_8inl_1a52caa35291dee569134ba11765e327a2">push_parse_scope_2</link>(scope, line)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a973cefa1364e120a5b2f2ec712a0fa35">push_parse_scope</link>(scope)&#160;&#160;&#160;<link linkend="_parser_8inl_1add6a523ca8236fc20c97f11e7485a5ec">push_parse_scope_1</link>(scope, __LINE__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aca74b37bcd6c077f58f262e43c8a8aa3">is_eof</link>()&#160;&#160;&#160;!cp</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad1ac3723bbf0d358f9df5b44be71c36e">assert_not_eof</link>()&#160;&#160;&#160;<link linkend="_group__configuration_1ga989dd9b9610c274f1eb99e8e77997ee9">TOML_ASSERT_ASSUME</link>(cp != nullptr)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a0ff18edcdf96b5ad412eef62409e5c33">return_if_eof</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a633cbdc0b71907d8e9bce9ecf54ad16d">is_error</link>()&#160;&#160;&#160;!!err</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a8f28cbcf24d908558aeb26e271823adf">return_after_error</link>(...)&#160;&#160;&#160;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link> __VA_ARGS__</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a9e2dd718c4dcf40b8a25b3b35402bfc8">assert_not_error</link>()&#160;&#160;&#160;<link linkend="_group__configuration_1ga8c407a8f6fe52a795db35be3f00393f8">TOML_ASSERT</link>(!<link linkend="_parser_8inl_1a633cbdc0b71907d8e9bce9ecf54ad16d">is_error</link>())</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a899e5e612179f84d3b14d6c881dc151b">return_if_error</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a625e0562629966fb24c082b163e593bf">return_if_error_or_eof</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ac6bf913c1b74fc5a47c2675e99c60155">parse_error_break</link>()&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1afebbe731773f450d41f800b13ee3ca8b">set_error_and_return</link>(ret, ...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a44a192b247bc4686a968814009ecee14">set_error_and_return_default</link>(...)&#160;&#160;&#160;<link linkend="_parser_8inl_1afebbe731773f450d41f800b13ee3ca8b">set_error_and_return</link>({}, __VA_ARGS__)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a367ca88c87eb601c25350b729b5d2699">set_error_and_return_if_eof</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1ad01675bc2d478a261e2ae9898c8d8371">advance_and_return_if_error</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1aa21605e78d9d44ea396e3df072fc99e0">advance_and_return_if_error_or_eof</link>(...)</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_toml_8hpp_1a80b3e84c102efec5a37153b958cb6535">TOML_PARSE_FILE_ERROR</link>(msg,  <link linkend="_classpath">path</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_toml_8hpp_1a081dc6ee550d344af321209d765fbe45">default_formatter</link> = toml_formatter</para>
</listitem>
            <listitem><para>template&lt;typename... T&gt; </para><para>using <link linkend="_toml_8hpp_1a3ad4b4468010a85a19ac9b40dab8b22a">common_signed_type</link> = std::common_type_t&lt; std::make_signed_t&lt; T &gt;... &gt;</para>
</listitem>
            <listitem><para>template&lt;typename Dest , typename Src &gt; </para><para>using <link linkend="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2">copy_ref</link> = typename <link linkend="_structcopy__ref__">copy_ref_</link>&lt; Dest, Src &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
            <listitem><para>template&lt;typename Dest , typename Src &gt; </para><para>using <link linkend="_toml_8hpp_1a5b72589fd4f35a9fdf114bd4dac17067">copy_cv</link> = typename <link linkend="_structcopy__cv__">copy_cv_</link>&lt; Dest, Src &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
            <listitem><para>template&lt;typename Dest , typename Src &gt; </para><para>using <link linkend="_toml_8hpp_1a48304ccb99bc32a64f1e4bc7a3506f77">copy_cvref</link> = <link linkend="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2">copy_ref</link>&lt; <link linkend="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2">copy_ref</link>&lt; <link linkend="_toml_8hpp_1a5b72589fd4f35a9fdf114bd4dac17067">copy_cv</link>&lt; std::remove_reference_t&lt; Dest &gt;, std::remove_reference_t&lt; Src &gt; &gt;, Dest &gt;, Src &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>using <link linkend="_toml_8hpp_1a360741865d63894a80dd761769957c4f">native_type_of</link> = typename <link linkend="_structvalue__traits">value_traits</link>&lt; T &gt;::native_type</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>using <link linkend="_toml_8hpp_1a44f601b3d02e062b7ec543291aa84fcb">wrap_node</link> = typename <link linkend="_structnode__wrapper">node_wrapper</link>&lt; std::remove_reference_t&lt; T &gt; &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>using <link linkend="_toml_8hpp_1a0f4621a6694e07daea7a5c0282138524">unwrap_node</link> = typename <link linkend="_structnode__unwrapper">node_unwrapper</link>&lt; std::remove_reference_t&lt; T &gt; &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
            <listitem><para>using <link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> = std::shared_ptr&lt; const <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &gt;</para>
</listitem>
            <listitem><para>template&lt;typename... T&gt; </para><para>using <link linkend="_toml_8hpp_1a8340fb962cffc0c4b9f9995c0a698fd7">emplaced_type_of</link> = typename <link linkend="_structemplaced__type__of__">emplaced_type_of_</link>&lt; remove_cvref&lt; T &gt;... &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></para>
</listitem>
            <listitem><para>using <link linkend="_toml_8hpp_1ae3fd8742e4c8e5256fbcdce909c40770">const_array_iterator</link> = <link linkend="_preprocessor_8h_1a1234ac91a810b3bd926ed6721ad1e44a">POXY_IMPLEMENTATION_DETAIL</link>(impl::array_iterator&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link> &gt;)</para>
</listitem>
            <listitem><para>using <link linkend="_toml_8hpp_1aa14587a3e092e9b8e95dea38557e7517">const_table_iterator</link> = <link linkend="_preprocessor_8h_1a1234ac91a810b3bd926ed6721ad1e44a">POXY_IMPLEMENTATION_DETAIL</link>(impl::table_iterator&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link> &gt;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a27b4c7f43597fe0b462c5a1d6e92ddc8">TOML_ABI_NAMESPACE_BOOL</link> (<link linkend="_group__configuration_1ga0f6a688021ea2fc13e1c76acd64e4bbc">TOML_HAS_CUSTOM_OPTIONAL_TYPE</link>, custopt, stdopt)</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a9056e319c00c3f18de02928ab5e3ab7b">TOML_ABI_NAMESPACE_BOOL</link> (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>, ex, noex)</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a5fea9469a327cd49f375d817b240705f">TOML_ABI_NAMESPACE_BOOL</link> (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>, impl_ex, impl_noex)</para>
</listitem>
            <listitem><para>template&lt;typename Char &gt; </para><para>std::basic_ostream&lt; Char &gt; &amp; <link linkend="_toml_8hpp_1ade7e3bc03b39cb3b5684a4c302832e3c">operator&lt;&lt;</link> (std::basic_ostream&lt; Char &gt; &amp;lhs, node_type rhs)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1aaeb44bbc848e4243aa7e9011e9bac7f9">TOML_MAKE_FLAGS</link> (<link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1aad7dd1560f9bfe1d669259312e826819">TOML_MAKE_FLAGS</link> (<link linkend="_forward__declarations_8h_1ac3bcacae523bb832111f5195c46d68f4">format_flags</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1af24ac0c604986a79a31a916332dba0a6">inserter</link> (T &amp;&amp;) -&gt; <link linkend="_structinserter">inserter</link>&lt; T &amp;&amp; &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1ad2df9a648d8aed8ba9ba54524ef050c8">inserter</link> (T &amp;) -&gt; <link linkend="_structinserter">inserter</link>&lt; T &amp; &gt;</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> fp_class <link linkend="_toml_8hpp_1a2c39cdb56141a8d5637c9933c53e8bb6">fpclassify</link> (const double &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename Iterator , typename T &gt; </para><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> auto <link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link> (Iterator <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>, Iterator <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>, const T &amp;needle) noexcept -&gt; decltype(&amp;(*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>))</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_preprocessor_8h_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> constexpr const T &amp; <link linkend="_toml_8hpp_1aef6fbc596e7e69a80f14c34a2b786a14">min</link> (const T &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, const T &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a3ecc6f4250547523307312cbff28007e">print_to_stream</link> (std::ostream &amp;, std::string_view)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1aaa3a1eea31422e821730d2d526ed2262">print_to_stream</link> (std::ostream &amp;, const <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1aee0673ec899fb1c08fd1074f46da7b46">print_to_stream</link> (std::ostream &amp;, char)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a1b959797edd9753a6791d3ddc796935b">print_to_stream</link> (std::ostream &amp;, signed char, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a9c7972107b64f7fa97f240e439f6e22b">print_to_stream</link> (std::ostream &amp;, signed short, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1aea070a95c049b2d0d65bc1b38a2ab5f9">print_to_stream</link> (std::ostream &amp;, signed int, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a8dc119282a3ae336771e62aa2d39783f">print_to_stream</link> (std::ostream &amp;, signed long, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1af543455836b4f37c15dc92cd7757a79f">print_to_stream</link> (std::ostream &amp;, signed long long, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a53e0c622236f1efd68bc6b6b1202820f">print_to_stream</link> (std::ostream &amp;, unsigned char, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1ae3fbac9a0e6f6eb555008a912a15c88d">print_to_stream</link> (std::ostream &amp;, unsigned short, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1abbdc312c24f645dc311ab19c0d904d81">print_to_stream</link> (std::ostream &amp;, unsigned int, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a80377a189af1e9a4a79f7747d1d8dafb">print_to_stream</link> (std::ostream &amp;, unsigned long, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1ae9f59a9416d56d67a41696de9985e53b">print_to_stream</link> (std::ostream &amp;, unsigned long long, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a85c5f6ab6a586fc64d337eb2a9288729">print_to_stream</link> (std::ostream &amp;, float, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> relaxed_precision=<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a04f3a16e20f97afdaca0c2559290c4c4">print_to_stream</link> (std::ostream &amp;, double, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>={}, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> relaxed_precision=<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a3779304261fe02652b4311ab3063ddae">print_to_stream</link> (std::ostream &amp;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a9622ce3648214027d362942806cfa1d5">print_to_stream</link> (std::ostream &amp;, const toml::date &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a4f57205956a44ecc0d97c5ce135a5d98">print_to_stream</link> (std::ostream &amp;, const toml::time &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a35b9457528f08835aa7fdbc438a71848">print_to_stream</link> (std::ostream &amp;, const toml::time_offset &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a7002f95426315eb573f7a2092591b21b">print_to_stream</link> (std::ostream &amp;, const toml::date_time &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1af542b1c2955e13cd1833e65db306e31a">print_to_stream</link> (std::ostream &amp;, const <link linkend="_structsource__position">source_position</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a9b252826f55a055c1604c22dd812b8f0">print_to_stream</link> (std::ostream &amp;, const <link linkend="_structsource__region">source_region</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a8b9e19d91ba3918dc2909821bf5730d6">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classarray">array</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1adc1f34fef1516632f45ae5a6d1fa41f8">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classtable">table</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a13fa82e006a14901f7227be1554c98ab">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1af414e05a9db0d664288c94e66b3fd661">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1aaa74963959f161ad9a8e8fa7a6ae612d">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; double &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a8d38f76127eaeca4d250c5b6185e06e1">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a71007ec1e54a6a6c3ced821afb4a47f2">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; date &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a78812302cfebd78249ab834d9b5f4627">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; <link linkend="_structtime">time</link> &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1ae6c5b428ba6d0879f704e99cf2af90a0">print_to_stream</link> (std::ostream &amp;, const <link linkend="_classvalue">value</link>&lt; <link linkend="_structdate__time">date_time</link> &gt; &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename U &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_toml_8hpp_1aff367af5369aebb62f720b2827f37a5d">print_to_stream_bookended</link> (std::ostream &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a020a78e9ab6f08067423e5d76c0277d0">stream</link>, const T &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>, const U &amp;bookend)</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a8b559ae46e60a5b64d0b3607f8d556c8">parse_path</link> (std::string_view, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> *, parse_path_callback&lt; std::string_view &gt;, parse_path_callback&lt; <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> &gt;)</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classnode__view">node_view</link>&lt; const node &gt; <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a8fd45f603d445b914dc921213e6f2dc0">at_path</link> (const node &amp;root, std::string_view <link linkend="_classpath">path</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link> <link linkend="_classpath">path</link> <link linkend="_namespaceliterals_1a8b39f370c55966e481f59b855b74a9d7">literals::operator&quot;&quot;_tpath</link> (const char *str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)</para>

<para>Parses a TOML path from a string literal. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classnode__view">node_view</link>&lt; node &gt; <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a468a25365624c7539b3318b31ed5752c">at_path</link> (node &amp;root, const toml::path &amp;<link linkend="_classpath">path</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classnode__view">node_view</link>&lt; const node &gt; <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a4d7c622cb6d4d43b3df5b15cb773887f">at_path</link> (const node &amp;root, const toml::path &amp;<link linkend="_classpath">path</link>) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1ac7894ab28cc7d4e5e2794cf2ccc27ce0">node_view</link> (const T &amp;) -&gt; <link linkend="_classnode__view">node_view</link>&lt; const node &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1a85b0f464d4307e98c654341989ef7943">node_view</link> (const T *) -&gt; <link linkend="_classnode__view">node_view</link>&lt; const node &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1a720a871dfc7df072225ae74c6171ed76">node_view</link> (T &amp;) -&gt; <link linkend="_classnode__view">node_view</link>&lt; node &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1ac2ecb89c4cf26bbc739070fa7f060bd2">node_view</link> (T *) -&gt; <link linkend="_classnode__view">node_view</link>&lt; node &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link> optional&lt; T &gt; <link linkend="_toml_8hpp_1a8d0bda020a3bbeeb0ea155928f94b8da">node_integer_cast</link> (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_toml_8hpp_1add639d61380a455aaab6fe57e370f333">value</link> (T) -&gt; <link linkend="_classvalue">value</link>&lt; <link linkend="_toml_8hpp_1a360741865d63894a80dd761769957c4f">impl::native_type_of</link>&lt; impl::remove_cvref&lt; T &gt; &gt; &gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> node_ptr <link linkend="_toml_8hpp_1a42b4a4b2210e5fb851ab38730940293c">make_node</link> (T &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>=<link linkend="_forward__declarations_8h_1ab28140ef75c3f18305fb795d6a7917c5">preserve_source_value_flags</link>)</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a59540c22f4b7e10864095f21c67e0c69">is_ascii</link> (const char *str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1ab4b6a8282072fb55b91953ad86504247">parse</link> (std::string_view doc, std::string_view source_path={})</para>

<para>Parses a TOML document from a string view. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a056fa20958047dcf2655a7a219275d56">parse</link> (std::string_view doc, <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp;source_path)</para>

<para>Parses a TOML document from a string view. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a283b0807cf14ff886499b5fd270161b2">parse_file</link> (std::string_view file_path)</para>

<para>Parses a TOML document from a file. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1aeefb52416d2ab49138b4f8a628a3c290">parse</link> (std::istream &amp;doc, std::string_view source_path={})</para>

<para>Parses a TOML document from a stream. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> <link linkend="_toml_8hpp_1a2979814e3df74d8f56a23e49dce9cb03">parse</link> (std::istream &amp;doc, <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp;source_path)</para>

<para>Parses a TOML document from a stream. </para>
</listitem>
            <listitem><para><link linkend="_namespaceliterals_1a3e5a9bce6e1a524c7f725af657fc2f3e">literals::TOML_ABI_NAMESPACE_BOOL</link> (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>, lit_ex, lit_noex)</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_namespaceliterals_1a55a8a52105ffff2aa5c6d174087e7d0a">literals::operator&quot;&quot;_toml</link> (const char *str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)</para>

<para>Parses TOML data from a string literal. </para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_toml_8hpp_1ae0ee9b1728e8a7cddf22095cf20e5090">print_integer_to_stream</link> (std::ostream &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a020a78e9ab6f08067423e5d76c0277d0">stream</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>={}, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits=0)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_toml_8hpp_1a6ee5428b144b0bd723b9ef03285a17b5">print_floating_point_to_stream</link> (std::ostream &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a020a78e9ab6f08067423e5d76c0277d0">stream</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> relaxed_precision)</para>
</listitem>
            <listitem><para>template&lt;typename Char &gt; </para><para><link linkend="_toml_8hpp_1a793492352f386bbddbdd421fc57b4416">utf8_reader</link> (std::basic_string_view&lt; Char &gt;, std::string_view) -&gt; <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_string_view&lt; Char &gt; &gt;</para>
</listitem>
            <listitem><para>template&lt;typename Char &gt; </para><para><link linkend="_toml_8hpp_1a20cea9002d83cfb131823c4e83303742">utf8_reader</link> (std::basic_string_view&lt; Char &gt;, <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp;) -&gt; <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_string_view&lt; Char &gt; &gt;</para>
</listitem>
            <listitem><para>template&lt;typename Char &gt; </para><para><link linkend="_toml_8hpp_1ac4f840d9fc9ea1fab6ce0ada8bd188e4">utf8_reader</link> (std::basic_istream&lt; Char &gt; &amp;, std::string_view) -&gt; <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_istream&lt; Char &gt; &gt;</para>
</listitem>
            <listitem><para>template&lt;typename Char &gt; </para><para><link linkend="_toml_8hpp_1aab349cc793a42bf80a8946c1225b83d4">utf8_reader</link> (std::basic_istream&lt; Char &gt; &amp;, <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp;) -&gt; <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_istream&lt; Char &gt; &gt;</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view <link linkend="_toml_8hpp_1a7962d3d78317c0c0bed873999e311627">to_sv</link> (node_type <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view <link linkend="_toml_8hpp_1ae4f30923e17123fe56d55e8d1b196e9c">to_sv</link> (const <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;str) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view <link linkend="_toml_8hpp_1a974c77f6e2d3304feb91d6d33530d470">to_sv</link> (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view <link linkend="_toml_8hpp_1a5b611afbfbdcea26f392bbaf0bea418f">to_sv</link> (const <link linkend="_structutf8__codepoint">utf8_codepoint</link> &amp;cp) noexcept</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view <link linkend="_toml_8hpp_1afedf520caed9f1b7ff4f6349ef5f97d6">to_sv</link> (const <link linkend="_structutf8__codepoint">utf8_codepoint</link> *cp) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_toml_8hpp_1af49131ba8c9d457cc429110e01808f9a">concatenate</link> (char *&amp;write_pos, char *const buf_end, const T &amp;arg) noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a5ba18547dcf4d4e3f6b9017805742187">TOML_MAKE_FLAGS</link> (formatted_string_traits)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_toml_8hpp_1a6c2a5b158c0a6d208edd992229d91d78">TOML_DISABLE_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a4e1f9eaceb60becba33cd64d3a85e3ed">TOML_ENABLE_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a1d1e6be8ad92960edb7b1683a14d8304">TOML_PUSH_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a742c76bbbcc2c09ffc9988274cdd9e27">TOML_DISABLE_SPAM_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a228a86971bda7538082be21536653952">TOML_DISABLE_SWITCH_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a566b4d503dc0a1530624a88f33eeb0e2">TOML_DISABLE_SUGGEST_ATTR_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a24e5c42f7e94b0b0f3212744874731e6">TOML_NAMESPACE_START</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1afa65688cac47ce86021fef8d739f9fd8">TOML_NAMESPACE_END</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1aa188664cce4904ae8832f7fa59f10211">TOML_ABI_NAMESPACE_END</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1af62a64490c99e43956a0f41548262369">TOML_IMPL_NAMESPACE_START</link></para>
</listitem>
            <listitem><para>constexpr std::string_view <link linkend="_toml_8hpp_1a6b12f27cd2f2075ecfa8109f2149ebdf">control_char_escapes</link> []</para>
</listitem>
            <listitem><para>constexpr std::string_view <link linkend="_toml_8hpp_1af493727019d023763b73c4ee58a1e327">node_type_friendly_names</link> []</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a66ea8ec36b215f9ccb1b419f52b89805">TOML_IMPL_NAMESPACE_END</link></para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link></para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1ab82bdeb4dd19cff4de2266a27d3dda18">format_as_binary</link> = 1</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a23ea604a4d31b811ee1dcf554577c906">format_as_octal</link> = 2</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a00083906b4f76536fcccf16aa0fe3c94">format_as_hexadecimal</link> = 3</para>
</listitem>
            <listitem><para>constexpr <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> <link linkend="_toml_8hpp_1ab28140ef75c3f18305fb795d6a7917c5">preserve_source_value_flags</link></para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1ac3bcacae523bb832111f5195c46d68f4">format_flags</link></para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a2545d18c6766d54922be39e868fe4bf6">quote_dates_and_times</link> = (1ull &lt;&lt; 0)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a7ae1c6e457ad741d30ce82ed08c78ab1">quote_infinities_and_nans</link> = (1ull &lt;&lt; 1)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a8aed9fba74baf504c741d36149cb46a3">allow_literal_strings</link> = (1ull &lt;&lt; 2)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a24920e85768d19625e1084e3ca601620">allow_multi_line_strings</link> = (1ull &lt;&lt; 3)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a3e541c3ac7db3737fe85987dcdcf7dd8">allow_real_tabs_in_strings</link> = (1ull &lt;&lt; 4)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a300010e368604efe47dbcae9fd8554fe">allow_unicode_strings</link> = (1ull &lt;&lt; 5)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a5c5bd51ada006fec47f0a14d90f6ac41">allow_binary_integers</link> = (1ull &lt;&lt; 6)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a48afee63c154da708ccdf978957db363">allow_octal_integers</link> = (1ull &lt;&lt; 7)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a8002cf32a7117fe62831fa23aa75cc84">allow_hexadecimal_integers</link> = (1ull &lt;&lt; 8)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1ae225507e97029b1deaa6b3c2fb8634ea">indent_sub_tables</link> = (1ull &lt;&lt; 9)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1af3a33663e90d253686912eba69982c35">indent_array_elements</link> = (1ull &lt;&lt; 10)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1aeff1bb793cb4a2cf6c9be1b90fa0ec7d">indentation</link> = <link linkend="_forward__declarations_8h_1ae225507e97029b1deaa6b3c2fb8634ea">indent_sub_tables</link> | <link linkend="_forward__declarations_8h_1af3a33663e90d253686912eba69982c35">indent_array_elements</link></para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1ab6c9a08132134d6f8fb431cf7e71c022">relaxed_float_precision</link> = (1ull &lt;&lt; 11)</para>
</listitem>
            <listitem><para>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> <link linkend="_toml_8hpp_1a9349d47dff26b543042f8d1ffb50e28c">terse_key_value_pairs</link> = (1ull &lt;&lt; 12)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename... U&gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a815e932c93486480761ca77d94447901">is_one_of</link> = (<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link> || ... || std::is_same_v&lt;T, U&gt;)</para>
</listitem>
            <listitem><para>template&lt;typename... T&gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a76e834946c5dd85fc42b186f7ce325aa">all_integral</link> = (std::is_integral_v&lt;T&gt; &amp;&amp; ...)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a97417fee781e1c7ba52d5c76ba4459a4">is_cvref</link> = std::is_reference_v&lt;T&gt; || std::is_const_v&lt;T&gt; || std::is_volatile_v&lt;T&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1af586d464952e4eac442a23643c69618d">is_wide_string</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a165b6f8b86d0dd7f59d0cc6f3db5777d">value_retrieval_is_nothrow</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a10bb30a701ab034872fb59c5ef53b14d">dependent_false</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link></para>
</listitem>
            <listitem><para>template&lt;typename T , typename... U&gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a7097288127e91d1b819796e8e82d4768">first_is_same</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link></para>
</listitem>
            <listitem><para>template&lt;typename T , typename... U&gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1af48ff8bd477b07c102c66df2e941597a">first_is_same&lt; T, T, U... &gt;</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a0b9e60ca26c89aac055ec4e01170cb78">is_native</link> = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::is_native</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1ad85ed5826d3f6fd7002bbc6ed3aa02e7">can_represent_native</link> = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::can_represent_native</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a4123c1368fa8dd3bb05aff779a3afbfa">can_partially_represent_native</link> = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::can_partially_represent_native</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a8d7224fe162a50f062ee1328b0968e15">is_losslessly_convertible_to_native</link> = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::is_losslessly_convertible_to_native</para>
</listitem>
            <listitem><para>template&lt;typename T , typename... U&gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a954dd8a60050010ad38f8e0112dc1645">is_natively_one_of</link> = <link linkend="_toml_8hpp_1a815e932c93486480761ca77d94447901">is_one_of</link>&lt;<link linkend="_toml_8hpp_1a360741865d63894a80dd761769957c4f">native_type_of</link>&lt;T&gt;, U...&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr node_type <link linkend="_toml_8hpp_1a2ca921a72e58d33056ffcf88b9a2ae8d">node_type_of</link> = <link linkend="_structnode__type__getter">node_type_getter</link>&lt;<link linkend="_toml_8hpp_1a0f4621a6694e07daea7a5c0282138524">unwrap_node</link>&lt;remove_cvref&lt;T&gt;&gt;&gt;<link linkend="_classvalue">::value</link></para>
</listitem>
            <listitem><para>template&lt;typename T , typename ConvertFrom &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a0b26579e78da4e151c2aaff1101d9d63">is_constructible_or_convertible</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a70231801eb17e45cd17c7eb332b4d36f">is_array</link> = std::is_same_v&lt;impl::remove_cvref&lt;T&gt;, <link linkend="_classarray">array</link>&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1aa34941ab50c25915afb9afe528fea814">is_container</link> = is_table&lt;T&gt; || <link linkend="_forward__declarations_8h_1a70231801eb17e45cd17c7eb332b4d36f">is_array</link>&lt;T&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a5d9214f3694adcc143822884ec06aac6">is_string</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a8b617e5248756c383118df7cf633176c">is_integer</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a400919fd056905f7b68893873e1f96de">is_floating_point</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a1e443b4df05673f810658b66cb1f628d">is_number</link> = <link linkend="_forward__declarations_8h_1a8b617e5248756c383118df7cf633176c">is_integer</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a400919fd056905f7b68893873e1f96de">is_floating_point</link>&lt;T&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a3dc64661a1bb4eb998b3b28a1893ee6b">is_boolean</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a40c5fb13e28fdf655d3a6c7127bcb2b4">is_date</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1ae8325165bb42cc419d4b55c888a0d69f">is_time</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a7fb2820864834a9cfcc07aab9ee4566b">is_date_time</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a7ecc8ff96d2556cce78ebef9c0433601">is_chronological</link> = <link linkend="_forward__declarations_8h_1a40c5fb13e28fdf655d3a6c7127bcb2b4">is_date</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1ae8325165bb42cc419d4b55c888a0d69f">is_time</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a7fb2820864834a9cfcc07aab9ee4566b">is_date_time</link>&lt;T&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1afced5bc5ef559606e3d75268ca601709">is_value</link> = <link linkend="_forward__declarations_8h_1a5d9214f3694adcc143822884ec06aac6">is_string</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a1e443b4df05673f810658b66cb1f628d">is_number</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a3dc64661a1bb4eb998b3b28a1893ee6b">is_boolean</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a7ecc8ff96d2556cce78ebef9c0433601">is_chronological</link>&lt;T&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1adab17769fd14cb533f58e9600c31701c">is_node</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1ac0b3c59d6626e469f1a2d97359ac0892">is_node_view</link> = <link linkend="_toml_8hpp_1a815e932c93486480761ca77d94447901">impl::is_one_of</link>&lt;impl::remove_cvref&lt;T&gt;, <link linkend="_classnode__view">node_view</link>&lt;node&gt;, <link linkend="_classnode__view">node_view</link>&lt;const node&gt;&gt;</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ae30c04e74c3148bfedf82afa2af560f9">TOML_POP_WARNINGS</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a56df52d1a29373a87698fdc09a1c1c7a">TOML_DISABLE_ARITHMETIC_WARNINGS</link></para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a4221a3b3314589bb76d18268cf2f2c4c">is_key</link> = std::is_same_v&lt;impl::remove_cvref&lt;T&gt;, toml::key&gt;</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1af308fcd567483bdd7db051dff62e9fcb">is_key_or_convertible</link></para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1a3e6bf84af897e30e783c8365170eb278">TOML_ANON_NAMESPACE_START</link></para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1a8189ce073a380bfaedb83b589d944ddf">charconv_buffer_length&lt; int8_t &gt;</link> = 4</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1a0d52c8fffb070859c3decf0313a3627b">charconv_buffer_length&lt; int16_t &gt;</link> = 6</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1aa0eeb9b98c1b00814115ccbcc26584ef">charconv_buffer_length&lt; int32_t &gt;</link> = 11</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1a3a79e3122b596ad47a25b66aacf181d9">charconv_buffer_length&lt; int64_t &gt;</link> = 20</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1a10b1beeb9876d2242010a83848a8d2f8">charconv_buffer_length&lt; uint8_t &gt;</link> = 3</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1a736cfeba3712a13299acce5d8bbae738">charconv_buffer_length&lt; uint16_t &gt;</link> = 5</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1a97a3f7337264b54b891ea302ae08b9e7">charconv_buffer_length&lt; uint32_t &gt;</link> = 10</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1aa953f8a1b787818620a3a5be31755675">charconv_buffer_length&lt; uint64_t &gt;</link> = 20</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1addbd7d618800a068ddd7d1e5528ace93">charconv_buffer_length&lt; float &gt;</link> = 64</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_toml_8hpp_1ad164d15850201081ce9f8d2820252b21">charconv_buffer_length&lt; double &gt;</link> = 64</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1add7da6ab746a2f655de5a68f56dc763a">TOML_ANON_NAMESPACE_END</link></para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> constexpr auto <link linkend="_toml_8hpp_1adc25ea9f06030e43e1cf5333d39e3237">utf8_byte_order_mark</link> = &quot;\xEF\xBB\xBF&quot;sv</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_toml_8hpp_1ad01675bc2d478a261e2ae9898c8d8371"/><section>
    <title>advance_and_return_if_error</title>
<indexterm><primary>advance_and_return_if_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>advance_and_return_if_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> advance_and_return_if_error( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert_not_eof();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;advance
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return_if_error(__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1aa21605e78d9d44ea396e3df072fc99e0"/><section>
    <title>advance_and_return_if_error_or_eof</title>
<indexterm><primary>advance_and_return_if_error_or_eof</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>advance_and_return_if_error_or_eof</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> advance_and_return_if_error_or_eof( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert_not_eof();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;advance
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return_if_error(__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set_error_and_return_if_eof(__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ad1ac3723bbf0d358f9df5b44be71c36e"/><section>
    <title>assert_not_eof</title>
<indexterm><primary>assert_not_eof</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>assert_not_eof</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> assert_not_eof( )&#160;&#160;&#160;<link linkend="_group__configuration_1ga989dd9b9610c274f1eb99e8e77997ee9">TOML_ASSERT_ASSUME</link>(cp != nullptr)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9e2dd718c4dcf40b8a25b3b35402bfc8"/><section>
    <title>assert_not_error</title>
<indexterm><primary>assert_not_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>assert_not_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> assert_not_error( )&#160;&#160;&#160;<link linkend="_group__configuration_1ga8c407a8f6fe52a795db35be3f00393f8">TOML_ASSERT</link>(!<link linkend="_parser_8inl_1a633cbdc0b71907d8e9bce9ecf54ad16d">is_error</link>())</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a91eba20e2725bc78a99d41790bfe5930"/><section>
    <title>INCLUDE_TOMLPLUSPLUS_H</title>
<indexterm><primary>INCLUDE_TOMLPLUSPLUS_H</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>INCLUDE_TOMLPLUSPLUS_H</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> INCLUDE_TOMLPLUSPLUS_H</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aca74b37bcd6c077f58f262e43c8a8aa3"/><section>
    <title>is_eof</title>
<indexterm><primary>is_eof</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_eof</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> is_eof( )&#160;&#160;&#160;!cp</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a633cbdc0b71907d8e9bce9ecf54ad16d"/><section>
    <title>is_error</title>
<indexterm><primary>is_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> is_error( )&#160;&#160;&#160;!!err</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac6bf913c1b74fc5a47c2675e99c60155"/><section>
    <title>parse_error_break</title>
<indexterm><primary>parse_error_break</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse_error_break</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> parse_error_break( )&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1234ac91a810b3bd926ed6721ad1e44a"/><section>
    <title>POXY_IMPLEMENTATION_DETAIL</title>
<indexterm><primary>POXY_IMPLEMENTATION_DETAIL</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>POXY_IMPLEMENTATION_DETAIL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> POXY_IMPLEMENTATION_DETAIL( ...)&#160;&#160;&#160;__VA_ARGS__</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a973cefa1364e120a5b2f2ec712a0fa35"/><section>
    <title>push_parse_scope</title>
<indexterm><primary>push_parse_scope</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>push_parse_scope</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> push_parse_scope( scope)&#160;&#160;&#160;<link linkend="_parser_8inl_1add6a523ca8236fc20c97f11e7485a5ec">push_parse_scope_1</link>(scope, __LINE__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1add6a523ca8236fc20c97f11e7485a5ec"/><section>
    <title>push_parse_scope_1</title>
<indexterm><primary>push_parse_scope_1</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>push_parse_scope_1</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> push_parse_scope_1( scope,  line)&#160;&#160;&#160;<link linkend="_parser_8inl_1a52caa35291dee569134ba11765e327a2">push_parse_scope_2</link>(scope, line)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a52caa35291dee569134ba11765e327a2"/><section>
    <title>push_parse_scope_2</title>
<indexterm><primary>push_parse_scope_2</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>push_parse_scope_2</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> push_parse_scope_2( scope,  line)&#160;&#160;&#160;<link linkend="_structparse__scope">parse_scope</link> ps_##line(current_scope, scope)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8f28cbcf24d908558aeb26e271823adf"/><section>
    <title>return_after_error</title>
<indexterm><primary>return_after_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>return_after_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> return_after_error( ...)&#160;&#160;&#160;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link> __VA_ARGS__</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0ff18edcdf96b5ad412eef62409e5c33"/><section>
    <title>return_if_eof</title>
<indexterm><primary>return_if_eof</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>return_if_eof</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> return_if_eof( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(<link linkend="_toml_8hpp_1aca74b37bcd6c077f58f262e43c8a8aa3">is_eof</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__VA_ARGS__;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a899e5e612179f84d3b14d6c881dc151b"/><section>
    <title>return_if_error</title>
<indexterm><primary>return_if_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>return_if_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> return_if_error( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(<link linkend="_toml_8hpp_1a633cbdc0b71907d8e9bce9ecf54ad16d">is_error</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__VA_ARGS__;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a625e0562629966fb24c082b163e593bf"/><section>
    <title>return_if_error_or_eof</title>
<indexterm><primary>return_if_error_or_eof</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>return_if_error_or_eof</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> return_if_error_or_eof( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(<link linkend="_toml_8hpp_1aca74b37bcd6c077f58f262e43c8a8aa3">is_eof</link>()&#32;||&#32;<link linkend="_toml_8hpp_1a633cbdc0b71907d8e9bce9ecf54ad16d">is_error</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__VA_ARGS__;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1afebbe731773f450d41f800b13ee3ca8b"/><section>
    <title>set_error_and_return</title>
<indexterm><primary>set_error_and_return</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>set_error_and_return</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> set_error_and_return( ret,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!<link linkend="_toml_8hpp_1a633cbdc0b71907d8e9bce9ecf54ad16d">is_error</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set_error(__VA_ARGS__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return_after_error(ret);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a44a192b247bc4686a968814009ecee14"/><section>
    <title>set_error_and_return_default</title>
<indexterm><primary>set_error_and_return_default</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>set_error_and_return_default</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> set_error_and_return_default( ...)&#160;&#160;&#160;<link linkend="_parser_8inl_1afebbe731773f450d41f800b13ee3ca8b">set_error_and_return</link>({}, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a367ca88c87eb601c25350b729b5d2699"/><section>
    <title>set_error_and_return_if_eof</title>
<indexterm><primary>set_error_and_return_if_eof</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>set_error_and_return_if_eof</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> set_error_and_return_if_eof( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(<link linkend="_toml_8hpp_1aca74b37bcd6c077f58f262e43c8a8aa3">is_eof</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set_error_and_return(__VA_ARGS__,&#32;<emphasis role="stringliteral">&quot;encountered&#32;end-of-file&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a1b2e27349c9e21d35138a1196acd6d58"/><section>
    <title>TOML_ABI_NAMESPACE_BOOL</title>
<indexterm><primary>TOML_ABI_NAMESPACE_BOOL</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_BOOL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ABI_NAMESPACE_BOOL( cond,  T,  F)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a9592495c391e21aa0ebe67066fa73214">TOML_ABI_NAMESPACE_START</link>(<link linkend="_preprocessor_8h_1a190b782bb371a13d40cfe91102120ca7">TOML_CONCAT</link>(TOML_EVAL_BOOL_, cond)(T, F))</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a2fc00b0b434c5deb14a83523be1b7e3f"/><section>
    <title>TOML_ABI_NAMESPACE_END</title>
<indexterm><primary>TOML_ABI_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ABI_NAMESPACE_END&#160;&#160;&#160;} static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9592495c391e21aa0ebe67066fa73214"/><section>
    <title>TOML_ABI_NAMESPACE_START</title>
<indexterm><primary>TOML_ABI_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ABI_NAMESPACE_START( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)&#160;&#160;&#160;inline namespace <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link> { static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a69d473829126e60223718fa5d9e48d67"/><section>
    <title>TOML_ABI_NAMESPACES</title>
<indexterm><primary>TOML_ABI_NAMESPACES</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ABI_NAMESPACES&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aff57c07de29701e4a68a260317a08218"/><section>
    <title>TOML_ABSTRACT_INTERFACE</title>
<indexterm><primary>TOML_ABSTRACT_INTERFACE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABSTRACT_INTERFACE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ABSTRACT_INTERFACE&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a13b98c00e7eb0405a9f998b1ee531366">TOML_DECLSPEC</link>(novtable)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1abcede63e94136f5cb19404c0a811a51d"/><section>
    <title>TOML_ALWAYS_INLINE</title>
<indexterm><primary>TOML_ALWAYS_INLINE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ALWAYS_INLINE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ALWAYS_INLINE&#160;&#160;&#160;inline</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4d6a9613a3acdad73c02b83a0b17cc3e"/><section>
    <title>TOML_ANON_NAMESPACE</title>
<indexterm><primary>TOML_ANON_NAMESPACE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ANON_NAMESPACE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ANON_NAMESPACE&#160;&#160;&#160;TOML_NAMESPACE::impl</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0385295454ae473a68d194eaffaf597c"/><section>
    <title>TOML_ANON_NAMESPACE_END</title>
<indexterm><primary>TOML_ANON_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ANON_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ANON_NAMESPACE_END&#160;&#160;&#160;<link linkend="_preprocessor_8h_1abec69dd25f1e4c1dfbdd288441864939">TOML_IMPL_NAMESPACE_END</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a492b1349e6331172ea2b6b9b5791ec61"/><section>
    <title>TOML_ANON_NAMESPACE_START</title>
<indexterm><primary>TOML_ANON_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ANON_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ANON_NAMESPACE_START&#160;&#160;&#160;static_assert(<link linkend="_group__configuration_1ga27ee69835a1ddff9dbaf3015b4b08a11">TOML_IMPLEMENTATION</link>); <link linkend="_preprocessor_8h_1ac9e12bb017879603274ac1765b85b872">TOML_IMPL_NAMESPACE_START</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a38d4ef2bbfc3acebcb952f34bc44509a"/><section>
    <title>TOML_ARCH_AMD64</title>
<indexterm><primary>TOML_ARCH_AMD64</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ARCH_AMD64</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ARCH_AMD64&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1acebfc1ca02ca522be8f1f9653ce41f1c"/><section>
    <title>TOML_ARCH_ARM</title>
<indexterm><primary>TOML_ARCH_ARM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ARCH_ARM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ARCH_ARM&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab0ab5f976d72043ef3bdfa6d0c242935"/><section>
    <title>TOML_ARCH_ARM32</title>
<indexterm><primary>TOML_ARCH_ARM32</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ARCH_ARM32</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ARCH_ARM32&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab7d03922ad43bbb74bc5a0465c32468f"/><section>
    <title>TOML_ARCH_ARM64</title>
<indexterm><primary>TOML_ARCH_ARM64</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ARCH_ARM64</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ARCH_ARM64&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab8e5f0eae9cd116c57a964a00abe04ba"/><section>
    <title>TOML_ARCH_ITANIUM</title>
<indexterm><primary>TOML_ARCH_ITANIUM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ARCH_ITANIUM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ARCH_ITANIUM&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a80a7e39b2ff89d4ac501ac98417a296b"/><section>
    <title>TOML_ARCH_X86</title>
<indexterm><primary>TOML_ARCH_X86</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ARCH_X86</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ARCH_X86&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8c407a8f6fe52a795db35be3f00393f8"/><section>
    <title>TOML_ASSERT</title>
<indexterm><primary>TOML_ASSERT</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ASSERT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ASSERT( expr)&#160;&#160;&#160;assert(expr)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a989dd9b9610c274f1eb99e8e77997ee9"/><section>
    <title>TOML_ASSERT_ASSUME</title>
<indexterm><primary>TOML_ASSERT_ASSUME</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ASSERT_ASSUME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ASSERT_ASSUME( expr)&#160;&#160;&#160;<link linkend="_group__configuration_1ga8c407a8f6fe52a795db35be3f00393f8">TOML_ASSERT</link>(expr)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a87bd3a07eee4ded6e9f8a97ac8fba3e8"/><section>
    <title>TOML_ASSUME</title>
<indexterm><primary>TOML_ASSUME</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ASSUME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ASSUME( ...)&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1acb44e833882d0c4824af69311c8505f5"/><section>
    <title>TOML_ASYMMETRICAL_EQUALITY_OPS</title>
<indexterm><primary>TOML_ASYMMETRICAL_EQUALITY_OPS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ASYMMETRICAL_EQUALITY_OPS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ASYMMETRICAL_EQUALITY_OPS( LHS,  RHS,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;__VA_ARGS__&#32;TOML_NODISCARD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;friend&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator==(RHS&#32;rhs,&#32;LHS&#32;lhs)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lhs&#32;==&#32;rhs;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;__VA_ARGS__&#32;TOML_NODISCARD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;friend&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator!=(LHS&#32;lhs,&#32;RHS&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(lhs&#32;==&#32;rhs);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;__VA_ARGS__&#32;TOML_NODISCARD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;friend&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacenlohmann_1aa9fe6e8e15f1b1b242d291e7703f1b8d">operator!=</link>(RHS&#32;rhs,&#32;LHS&#32;lhs)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(lhs&#32;==&#32;rhs);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;static_assert(<emphasis role="keyword">true</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ab61929848048873f2ffe3be0cfab436f"/><section>
    <title>TOML_ATTR</title>
<indexterm><primary>TOML_ATTR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ATTR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ATTR( ...)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a2bfc7ae4747f15378d92249aadce019e"/><section>
    <title>TOML_CALLCONV</title>
<indexterm><primary>TOML_CALLCONV</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CALLCONV</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CALLCONV</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8e57c479788e6f0172f78993ae9f84b0"/><section>
    <title>TOML_CLANG</title>
<indexterm><primary>TOML_CLANG</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CLANG</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CLANG&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3c0b0ffb1299e1086599b0748e8e36a1"/><section>
    <title>TOML_CLOSED_ENUM</title>
<indexterm><primary>TOML_CLOSED_ENUM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CLOSED_ENUM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CLOSED_ENUM</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab0a3cf12ff4c3246e9815af23799e4dd"/><section>
    <title>TOML_CLOSED_FLAGS_ENUM</title>
<indexterm><primary>TOML_CLOSED_FLAGS_ENUM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CLOSED_FLAGS_ENUM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CLOSED_FLAGS_ENUM&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a3c0b0ffb1299e1086599b0748e8e36a1">TOML_CLOSED_ENUM</link> <link linkend="_preprocessor_8h_1a926f2e2ecef8dfefde373e4192a0ae8d">TOML_FLAGS_ENUM</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a7006a81cb3a4676d1514dedfb77a1993"/><section>
    <title>TOML_COMPILER_HAS_EXCEPTIONS</title>
<indexterm><primary>TOML_COMPILER_HAS_EXCEPTIONS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_COMPILER_HAS_EXCEPTIONS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_COMPILER_HAS_EXCEPTIONS&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9d74c652db29dd0d4bf4fc34de96025d"/><section>
    <title>TOML_COMPILER_HAS_RTTI</title>
<indexterm><primary>TOML_COMPILER_HAS_RTTI</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_COMPILER_HAS_RTTI</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_COMPILER_HAS_RTTI&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a190b782bb371a13d40cfe91102120ca7"/><section>
    <title>TOML_CONCAT</title>
<indexterm><primary>TOML_CONCAT</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CONCAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CONCAT( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a4caa1faad69813e3ddacfd20bf7c33ea">TOML_CONCAT_1</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4caa1faad69813e3ddacfd20bf7c33ea"/><section>
    <title>TOML_CONCAT_1</title>
<indexterm><primary>TOML_CONCAT_1</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CONCAT_1</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CONCAT_1( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#160;&#160;&#160;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>##<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a2c9f122c4cb54f8633e8e69f615fc7ec"/><section>
    <title>TOML_CONST</title>
<indexterm><primary>TOML_CONST</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CONST</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CONST</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a635df435bd9048d34bd5824a31d79d1e"/><section>
    <title>TOML_CONST_GETTER</title>
<indexterm><primary>TOML_CONST_GETTER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CONST_GETTER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CONST_GETTER&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad26b309f170b9504c99f7dd7b1a912f0"/><section>
    <title>TOML_CONST_INLINE_GETTER</title>
<indexterm><primary>TOML_CONST_INLINE_GETTER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CONST_INLINE_GETTER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CONST_INLINE_GETTER&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>	<link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a28441f3c429403e368267788c2e8a279"/><section>
    <title>TOML_CONSTRAINED_TEMPLATE</title>
<indexterm><primary>TOML_CONSTRAINED_TEMPLATE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CONSTRAINED_TEMPLATE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CONSTRAINED_TEMPLATE( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;__VA_ARGS__&#32;TOML_ENABLE_IF(condition)&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_REQUIRES(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ad6e0acaa3ee35f44aea0e4d728d33e23"/><section>
    <title>TOML_CPP</title>
<indexterm><primary>TOML_CPP</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_CPP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_CPP&#160;&#160;&#160;__cplusplus</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a13b98c00e7eb0405a9f998b1ee531366"/><section>
    <title>TOML_DECLSPEC</title>
<indexterm><primary>TOML_DECLSPEC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DECLSPEC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DECLSPEC( ...)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5e2438e68db4744f054974ec79e728e3"/><section>
    <title>TOML_DELETE_DEFAULTS</title>
<indexterm><primary>TOML_DELETE_DEFAULTS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DELETE_DEFAULTS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DELETE_DEFAULTS( T)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;T(<emphasis role="keyword">const</emphasis>&#32;T&amp;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">delete</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;T(T&amp;&amp;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">delete</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;T&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;T&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;T&amp;&#32;operator=(T&amp;&amp;)&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">delete</emphasis>
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a0e478700173d852d6baaf3fc40d6712f"/><section>
    <title>TOML_DISABLE_ARITHMETIC_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_ARITHMETIC_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_ARITHMETIC_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DISABLE_ARITHMETIC_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1a5e92e6a516bef7a1bfdebd916a264d"/><section>
    <title>TOML_DISABLE_CODE_ANALYSIS_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_CODE_ANALYSIS_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_CODE_ANALYSIS_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DISABLE_CODE_ANALYSIS_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac2188f4d798d551a2bff3f63437b7d8f"/><section>
    <title>TOML_DISABLE_SPAM_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_SPAM_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_SPAM_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DISABLE_SPAM_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a666633ccdf7dbe23afea6c28fd1d7bd1"/><section>
    <title>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DISABLE_SUGGEST_ATTR_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a515739f6ed49b05e0c9e398542e0c6f6"/><section>
    <title>TOML_DISABLE_SWITCH_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_SWITCH_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_SWITCH_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DISABLE_SWITCH_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a44b1f68de11411aefbcb6635f9a39471"/><section>
    <title>TOML_DISABLE_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DISABLE_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3487b5b3da2f9135943a5d0fd966b8e7"/><section>
    <title>TOML_DOXYGEN</title>
<indexterm><primary>TOML_DOXYGEN</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DOXYGEN</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_DOXYGEN&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a207c4b5404fad3bbeeb40388c9480f64"/><section>
    <title>TOML_EMPTY_BASES</title>
<indexterm><primary>TOML_EMPTY_BASES</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EMPTY_BASES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EMPTY_BASES&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a13b98c00e7eb0405a9f998b1ee531366">TOML_DECLSPEC</link>(empty_bases)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a56ab81041897681ac38ceba52a380b97"/><section>
    <title>TOML_ENABLE_FLOAT16</title>
<indexterm><primary>TOML_ENABLE_FLOAT16</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_FLOAT16</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_FLOAT16&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9fc77582d9de77f59d2ddc9ae1f748ca"/><section>
    <title>TOML_ENABLE_FORMATTERS</title>
<indexterm><primary>TOML_ENABLE_FORMATTERS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_FORMATTERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_FORMATTERS&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4dd370e7dc32e9d4670a7cfeb0eac3e8"/><section>
    <title>TOML_ENABLE_IF</title>
<indexterm><primary>TOML_ENABLE_IF</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_IF</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_IF( ...)&#160;&#160;&#160;, typename std::enable_if&lt;(__VA_ARGS__), int&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> = 0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a121912d75d4624de6ab6854e41d8a852"/><section>
    <title>TOML_ENABLE_PARSER</title>
<indexterm><primary>TOML_ENABLE_PARSER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_PARSER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_PARSER&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1abc26d565182ee6697b0a7766e669e852"/><section>
    <title>TOML_ENABLE_SIMD</title>
<indexterm><primary>TOML_ENABLE_SIMD</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_SIMD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_SIMD&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1110ff7d189a7738b9109d120f568b6b"/><section>
    <title>TOML_ENABLE_UNRELEASED_FEATURES</title>
<indexterm><primary>TOML_ENABLE_UNRELEASED_FEATURES</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_UNRELEASED_FEATURES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_UNRELEASED_FEATURES&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad37422b7ddec78b06f09d3d368fbb428"/><section>
    <title>TOML_ENABLE_WARNINGS</title>
<indexterm><primary>TOML_ENABLE_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a94867db67c98e0e9d4fbb70690951fbf"/><section>
    <title>TOML_ENABLE_WINDOWS_COMPAT<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TOML_ENABLE_WINDOWS_COMPAT</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_WINDOWS_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_WINDOWS_COMPAT&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a94867db67c98e0e9d4fbb70690951fbf"/><section>
    <title>TOML_ENABLE_WINDOWS_COMPAT<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TOML_ENABLE_WINDOWS_COMPAT</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_WINDOWS_COMPAT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENABLE_WINDOWS_COMPAT&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a71c24cd992d03ea4bebf16534e60c4f9"/><section>
    <title>TOML_ENV_MESSAGE</title>
<indexterm><primary>TOML_ENV_MESSAGE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENV_MESSAGE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ENV_MESSAGE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;If&#32;you&apos;re&#32;seeing&#32;this&#32;error&#32;it&apos;s&#32;because&#32;you&apos;re&#32;building&#32;toml++&#32;for&#32;an&#32;environment&#32;that&#32;doesn&apos;t&#32;conform&#32;to&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;one&#32;of&#32;the&#32;&apos;ground&#32;truths&apos;&#32;assumed&#32;by&#32;the&#32;library.&#32;Essentially&#32;this&#32;just&#32;means&#32;that&#32;I&#32;don&apos;t&#32;have&#32;the&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;resources&#32;to&#32;test&#32;on&#32;more&#32;platforms,&#32;but&#32;I&#32;wish&#32;I&#32;did!&#32;You&#32;can&#32;try&#32;disabling&#32;the&#32;checks&#32;by&#32;defining&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;TOML_DISABLE_ENVIRONMENT_CHECKS,&#32;but&#32;your&#32;mileage&#32;may&#32;vary.&#32;Please&#32;consider&#32;filing&#32;an&#32;issue&#32;at&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;https://github.com/marzer/tomlplusplus/issues&#32;to&#32;help&#32;me&#32;improve&#32;support&#32;for&#32;your&#32;target&#32;environment.&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Thanks!&quot;</emphasis>
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ada03ddb8221706c08b22c121fbd983a6"/><section>
    <title>TOML_EVAL_BOOL_0</title>
<indexterm><primary>TOML_EVAL_BOOL_0</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EVAL_BOOL_0</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EVAL_BOOL_0( T,  F)&#160;&#160;&#160;F</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1accea719d59cfe475ce4ecd2dd72df2e1"/><section>
    <title>TOML_EVAL_BOOL_1</title>
<indexterm><primary>TOML_EVAL_BOOL_1</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EVAL_BOOL_1</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EVAL_BOOL_1( T,  F)&#160;&#160;&#160;T</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a93097ecd88ca4bca393f60a78bda643b"/><section>
    <title>TOML_EXCEPTIONS</title>
<indexterm><primary>TOML_EXCEPTIONS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EXCEPTIONS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EXCEPTIONS&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3d7aebf91431575688d573f09a17559a"/><section>
    <title>TOML_EXPORTED_CLASS</title>
<indexterm><primary>TOML_EXPORTED_CLASS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EXPORTED_CLASS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EXPORTED_CLASS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac40a454cde06de4e76df3d6d460a3544"/><section>
    <title>TOML_EXPORTED_FREE_FUNCTION</title>
<indexterm><primary>TOML_EXPORTED_FREE_FUNCTION</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EXPORTED_FREE_FUNCTION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EXPORTED_FREE_FUNCTION</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1adf515bb7a6b8ce6b14bf86c8961a63cb"/><section>
    <title>TOML_EXPORTED_MEMBER_FUNCTION</title>
<indexterm><primary>TOML_EXPORTED_MEMBER_FUNCTION</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EXPORTED_MEMBER_FUNCTION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EXPORTED_MEMBER_FUNCTION</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8436c6f378c73f3446a3b6f1e2c5e81c"/><section>
    <title>TOML_EXPORTED_STATIC_FUNCTION</title>
<indexterm><primary>TOML_EXPORTED_STATIC_FUNCTION</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EXPORTED_STATIC_FUNCTION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EXPORTED_STATIC_FUNCTION</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4256b41e25e4aa04b70cf55fd56ce202"/><section>
    <title>TOML_EXTERNAL_LINKAGE</title>
<indexterm><primary>TOML_EXTERNAL_LINKAGE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_EXTERNAL_LINKAGE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_EXTERNAL_LINKAGE&#160;&#160;&#160;inline</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a926f2e2ecef8dfefde373e4192a0ae8d"/><section>
    <title>TOML_FLAGS_ENUM</title>
<indexterm><primary>TOML_FLAGS_ENUM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_FLAGS_ENUM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_FLAGS_ENUM</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a17a381f6f13b8d59ed7b90afe3603a9e"/><section>
    <title>TOML_FLOAT_CHARCONV<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TOML_FLOAT_CHARCONV</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_FLOAT_CHARCONV</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_FLOAT_CHARCONV&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a17a381f6f13b8d59ed7b90afe3603a9e"/><section>
    <title>TOML_FLOAT_CHARCONV<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TOML_FLOAT_CHARCONV</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_FLOAT_CHARCONV</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_FLOAT_CHARCONV&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a91ebc63d07da0adb1d387ec24d07e1f6"/><section>
    <title>TOML_GCC</title>
<indexterm><primary>TOML_GCC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_GCC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_GCC&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4df1e7f064d8fa0ee4515647b66e78bb"/><section>
    <title>TOML_HAS_ATTR</title>
<indexterm><primary>TOML_HAS_ATTR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_ATTR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_ATTR( attr)&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac3f412e2cc3138e14a9fa40963640b70"/><section>
    <title>TOML_HAS_BUILTIN</title>
<indexterm><primary>TOML_HAS_BUILTIN</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_BUILTIN</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_BUILTIN( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a589bd0442002f5063eb4d1507fed18d2"/><section>
    <title>TOML_HAS_CHAR8</title>
<indexterm><primary>TOML_HAS_CHAR8</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_CHAR8</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_CHAR8&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a424b48ea5038443fe9f5ee71e96eb7b9"/><section>
    <title>TOML_HAS_CPP_ATTR</title>
<indexterm><primary>TOML_HAS_CPP_ATTR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_CPP_ATTR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_CPP_ATTR( attr)&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0f6a688021ea2fc13e1c76acd64e4bbc"/><section>
    <title>TOML_HAS_CUSTOM_OPTIONAL_TYPE</title>
<indexterm><primary>TOML_HAS_CUSTOM_OPTIONAL_TYPE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_CUSTOM_OPTIONAL_TYPE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_CUSTOM_OPTIONAL_TYPE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0924af222438c894a86f4ece4fb32b52"/><section>
    <title>TOML_HAS_FEATURE</title>
<indexterm><primary>TOML_HAS_FEATURE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_FEATURE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_FEATURE( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a21b83ca7391dc9edfb12a17d0de052bf"/><section>
    <title>TOML_HAS_INCLUDE</title>
<indexterm><primary>TOML_HAS_INCLUDE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_INCLUDE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_INCLUDE( header)&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa93dca2c5d8d69cdbbe8c11fb71df7f5"/><section>
    <title>TOML_HAS_SSE2</title>
<indexterm><primary>TOML_HAS_SSE2</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_SSE2</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_SSE2&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a525e237df9d4a63fafb4462a5190e055"/><section>
    <title>TOML_HAS_SSE4_1</title>
<indexterm><primary>TOML_HAS_SSE4_1</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HAS_SSE4_1</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HAS_SSE4_1&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8219bfd7e75587516385b6022b28abc2"/><section>
    <title>TOML_HEADER_ONLY</title>
<indexterm><primary>TOML_HEADER_ONLY</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HEADER_ONLY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HEADER_ONLY&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab3272d559df83418b043791473ef1016"/><section>
    <title>TOML_HIDDEN_CONSTRAINT</title>
<indexterm><primary>TOML_HIDDEN_CONSTRAINT</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_HIDDEN_CONSTRAINT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_HIDDEN_CONSTRAINT( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>,  ...)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a28441f3c429403e368267788c2e8a279">TOML_CONSTRAINED_TEMPLATE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>, __VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a468d849d2e2c53dbdea2810bdd6806c8"/><section>
    <title>TOML_ICC</title>
<indexterm><primary>TOML_ICC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ICC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ICC&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1abeac08b66035dcbb4f5e5f933c9bad43"/><section>
    <title>TOML_ICC_CL</title>
<indexterm><primary>TOML_ICC_CL</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ICC_CL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_ICC_CL&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1abec69dd25f1e4c1dfbdd288441864939"/><section>
    <title>TOML_IMPL_NAMESPACE_END</title>
<indexterm><primary>TOML_IMPL_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_IMPL_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_IMPL_NAMESPACE_END&#160;&#160;&#160;} <link linkend="_preprocessor_8h_1aab40a6832fe11707ab2cc1b83d8a1270">TOML_NAMESPACE_END</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac9e12bb017879603274ac1765b85b872"/><section>
    <title>TOML_IMPL_NAMESPACE_START</title>
<indexterm><primary>TOML_IMPL_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_IMPL_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_IMPL_NAMESPACE_START&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a9bceb285d9224ce1b1ab443811722aec">TOML_NAMESPACE_START</link> { namespace impl</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a27ee69835a1ddff9dbaf3015b4b08a11"/><section>
    <title>TOML_IMPLEMENTATION</title>
<indexterm><primary>TOML_IMPLEMENTATION</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_IMPLEMENTATION&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a419bb627cf9a2a7feb9621358f2dc255"/><section>
    <title>TOML_INCLUDE_WINDOWS_H</title>
<indexterm><primary>TOML_INCLUDE_WINDOWS_H</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_INCLUDE_WINDOWS_H</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_INCLUDE_WINDOWS_H&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aaa8d939c3f6aae3b13b64d748f2dae9c"/><section>
    <title>TOML_INT_CHARCONV<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TOML_INT_CHARCONV</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_INT_CHARCONV</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_INT_CHARCONV&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aaa8d939c3f6aae3b13b64d748f2dae9c"/><section>
    <title>TOML_INT_CHARCONV<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TOML_INT_CHARCONV</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_INT_CHARCONV</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_INT_CHARCONV&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3c5d0a10361f56b8f16cfd3ea2176ccd"/><section>
    <title>TOML_INTELLISENSE</title>
<indexterm><primary>TOML_INTELLISENSE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_INTELLISENSE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_INTELLISENSE&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a31ffc2d7129c04c13914b97c0a6e8417"/><section>
    <title>TOML_INTERNAL_LINKAGE</title>
<indexterm><primary>TOML_INTERNAL_LINKAGE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_INTERNAL_LINKAGE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_INTERNAL_LINKAGE&#160;&#160;&#160;inline</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3592f285e30a3c1901b5030cb1acb628"/><section>
    <title>TOML_LANG_AT_LEAST</title>
<indexterm><primary>TOML_LANG_AT_LEAST</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_AT_LEAST</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_AT_LEAST( major,  minor,  patch)&#160;&#160;&#160;		(<link linkend="_preprocessor_8h_1af295418d62297f01c345a71775a288f9">TOML_LANG_EFFECTIVE_VERSION</link> &gt;= <link linkend="_preprocessor_8h_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(major, minor, patch))</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af295418d62297f01c345a71775a288f9"/><section>
    <title>TOML_LANG_EFFECTIVE_VERSION</title>
<indexterm><primary>TOML_LANG_EFFECTIVE_VERSION</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_EFFECTIVE_VERSION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_EFFECTIVE_VERSION&#160;&#160;&#160;		<link linkend="_preprocessor_8h_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(<link linkend="_version_8h_1a86434194622c9ed6d264d7a3fb2f77db">TOML_LANG_MAJOR</link>, <link linkend="_version_8h_1a73071717f366b81809a3d519676f651d">TOML_LANG_MINOR</link>, <link linkend="_version_8h_1ab9cc97fa10406000ffc27ffdd4a81986">TOML_LANG_PATCH</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5a8b40abec38f553a8df46c8a8ff2cd6"/><section>
    <title>TOML_LANG_HIGHER_THAN</title>
<indexterm><primary>TOML_LANG_HIGHER_THAN</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_HIGHER_THAN</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_HIGHER_THAN( major,  minor,  patch)&#160;&#160;&#160;		(<link linkend="_preprocessor_8h_1af295418d62297f01c345a71775a288f9">TOML_LANG_EFFECTIVE_VERSION</link> &gt; <link linkend="_preprocessor_8h_1a31207251568922761ff8731ba8287221">TOML_MAKE_VERSION</link>(major, minor, patch))</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a86434194622c9ed6d264d7a3fb2f77db"/><section>
    <title>TOML_LANG_MAJOR</title>
<indexterm><primary>TOML_LANG_MAJOR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_MAJOR&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a73071717f366b81809a3d519676f651d"/><section>
    <title>TOML_LANG_MINOR</title>
<indexterm><primary>TOML_LANG_MINOR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_MINOR&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab9cc97fa10406000ffc27ffdd4a81986"/><section>
    <title>TOML_LANG_PATCH</title>
<indexterm><primary>TOML_LANG_PATCH</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_PATCH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_PATCH&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a649c9819492ed84229f80659f9f7a1a0"/><section>
    <title>TOML_LANG_UNRELEASED</title>
<indexterm><primary>TOML_LANG_UNRELEASED</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LANG_UNRELEASED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LANG_UNRELEASED&#160;&#160;&#160;		<link linkend="_preprocessor_8h_1a5a8b40abec38f553a8df46c8a8ff2cd6">TOML_LANG_HIGHER_THAN</link>(<link linkend="_version_8h_1a86434194622c9ed6d264d7a3fb2f77db">TOML_LANG_MAJOR</link>, <link linkend="_version_8h_1a73071717f366b81809a3d519676f651d">TOML_LANG_MINOR</link>, <link linkend="_version_8h_1ab9cc97fa10406000ffc27ffdd4a81986">TOML_LANG_PATCH</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a50ef717d8403c782d1405902faca4b80"/><section>
    <title>TOML_LAUNDER</title>
<indexterm><primary>TOML_LAUNDER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LAUNDER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LAUNDER( <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#160;&#160;&#160;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3204f1adf633485bfab4d9fcaa53562f"/><section>
    <title>TOML_LIB_MAJOR</title>
<indexterm><primary>TOML_LIB_MAJOR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIB_MAJOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIB_MAJOR&#160;&#160;&#160;3</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a91e0623a40956aca6b374a69d15877ce"/><section>
    <title>TOML_LIB_MINOR</title>
<indexterm><primary>TOML_LIB_MINOR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIB_MINOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIB_MINOR&#160;&#160;&#160;3</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a475fbde63f76df52f3832f3f36785874"/><section>
    <title>TOML_LIB_PATCH</title>
<indexterm><primary>TOML_LIB_PATCH</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIB_PATCH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIB_PATCH&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9a3362cd229a33fdfca5cccdb77f1775"/><section>
    <title>TOML_LIB_SINGLE_HEADER</title>
<indexterm><primary>TOML_LIB_SINGLE_HEADER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIB_SINGLE_HEADER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIB_SINGLE_HEADER&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a117fe6e84eb06cbfb6ee0a007663a1e5"/><section>
    <title>TOML_LIFETIME_HOOKS</title>
<indexterm><primary>TOML_LIFETIME_HOOKS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIFETIME_HOOKS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIFETIME_HOOKS&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a210082555d3fdd90061891a73b546e3d"/><section>
    <title>TOML_LIKELY</title>
<indexterm><primary>TOML_LIKELY</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIKELY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIKELY( ...)&#160;&#160;&#160;(__VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a96d958d2281756956fce337b6a48cb63"/><section>
    <title>TOML_LIKELY_CASE</title>
<indexterm><primary>TOML_LIKELY_CASE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_LIKELY_CASE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_LIKELY_CASE</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af3268f6dd1413971826ff207adc92d49"/><section>
    <title>TOML_MAKE_FLAGS</title>
<indexterm><primary>TOML_MAKE_FLAGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_FLAGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAKE_FLAGS( T)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1adb043cb819ee037835b92601b500b9b8">TOML_MAKE_FLAGS_1</link>(T, )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1adb043cb819ee037835b92601b500b9b8"/><section>
    <title>TOML_MAKE_FLAGS_1</title>
<indexterm><primary>TOML_MAKE_FLAGS_1</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_FLAGS_1</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAKE_FLAGS_1( T,  linkage)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">static_assert</emphasis>(std::is_enum_v&lt;T&gt;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_MAKE_FLAGS_2(T,&#32;&amp;,&#32;linkage);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_MAKE_FLAGS_2(T,&#32;|,&#32;linkage);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_MAKE_FLAGS_2(T,&#32;^,&#32;linkage);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\


&#32;&#32;&#32;&#32;linkage&#32;<emphasis role="keyword">constexpr</emphasis>&#32;T&#32;operator~(T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>under&#32;=&#32;std::underlying_type_t&lt;T&gt;;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(~static_cast&lt;under&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}


&#32;&#32;&#32;&#32;linkage&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator!(T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>under&#32;=&#32;std::underlying_type_t&lt;T&gt;;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<emphasis role="keyword">static_cast&lt;</emphasis>under<emphasis role="keyword">&gt;</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\

&#32;&#32;&#32;&#32;static_assert(<emphasis role="keyword">true</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a8eb338ba32fdd4d968dc24a33de42e65"/><section>
    <title>TOML_MAKE_FLAGS_2</title>
<indexterm><primary>TOML_MAKE_FLAGS_2</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_FLAGS_2</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAKE_FLAGS_2( T,  op,  linkage)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered
&#32;&#32;&#32;&#32;linkage&#32;<emphasis role="keyword">constexpr</emphasis>&#32;T&#32;<emphasis role="keyword">operator</emphasis>&#32;op(T&#32;lhs,&#32;T&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>under&#32;=&#32;std::underlying_type_t&lt;T&gt;;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis>under<emphasis role="keyword">&gt;</emphasis>(lhs)&#32;op&#32;<emphasis role="keyword">static_cast&lt;</emphasis>under<emphasis role="keyword">&gt;</emphasis>(rhs));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;linkage&#32;<emphasis role="keyword">constexpr</emphasis>&#32;T&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_toml_8hpp_1a190b782bb371a13d40cfe91102120ca7">TOML_CONCAT</link>(op,&#32;=)(T&#32;&amp;&#32;lhs,&#32;T&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lhs&#32;=&#32;(lhs&#32;op&#32;rhs);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;static_assert(<emphasis role="keyword">true</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a8d2cd6ca02ae4971d0931cd955b328d0"/><section>
    <title>TOML_MAKE_STRING</title>
<indexterm><primary>TOML_MAKE_STRING</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_STRING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAKE_STRING( s)&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a67d21bbe939dfd873d673f24c1098caa">TOML_MAKE_STRING_1</link>(s)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a67d21bbe939dfd873d673f24c1098caa"/><section>
    <title>TOML_MAKE_STRING_1</title>
<indexterm><primary>TOML_MAKE_STRING_1</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_STRING_1</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAKE_STRING_1( s)&#160;&#160;&#160;#s</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a31207251568922761ff8731ba8287221"/><section>
    <title>TOML_MAKE_VERSION</title>
<indexterm><primary>TOML_MAKE_VERSION</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_VERSION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAKE_VERSION( major,  minor,  patch)&#160;&#160;&#160;(((major)*10000) + ((minor)*100) + ((patch)))</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9c9d5c24d1da441070611cb02cf78993"/><section>
    <title>TOML_MAX_NESTED_VALUES</title>
<indexterm><primary>TOML_MAX_NESTED_VALUES</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAX_NESTED_VALUES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MAX_NESTED_VALUES&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a55e22860ec1da9b5767eb2bcb50929c8"/><section>
    <title>TOML_MSVC</title>
<indexterm><primary>TOML_MSVC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MSVC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_MSVC&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a7e91f97e41d5cb8ddc933b165f9d5a4e"/><section>
    <title>TOML_NAMESPACE</title>
<indexterm><primary>TOML_NAMESPACE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NAMESPACE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_NAMESPACE&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a190b782bb371a13d40cfe91102120ca7">::toml::TOML_CONCAT</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, <link linkend="_version_8h_1a3204f1adf633485bfab4d9fcaa53562f">TOML_LIB_MAJOR</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aab40a6832fe11707ab2cc1b83d8a1270"/><section>
    <title>TOML_NAMESPACE_END</title>
<indexterm><primary>TOML_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_NAMESPACE_END&#160;&#160;&#160;} static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9bceb285d9224ce1b1ab443811722aec"/><section>
    <title>TOML_NAMESPACE_START</title>
<indexterm><primary>TOML_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_NAMESPACE_START&#160;&#160;&#160;namespace toml { inline namespace <link linkend="_preprocessor_8h_1a190b782bb371a13d40cfe91102120ca7">TOML_CONCAT</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>, <link linkend="_version_8h_1a3204f1adf633485bfab4d9fcaa53562f">TOML_LIB_MAJOR</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3051c67f622ff6b83a43e3db480a45b6"/><section>
    <title>TOML_NEVER_INLINE</title>
<indexterm><primary>TOML_NEVER_INLINE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NEVER_INLINE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_NEVER_INLINE</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba"/><section>
    <title>TOML_NODISCARD</title>
<indexterm><primary>TOML_NODISCARD</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NODISCARD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_NODISCARD</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a05c221a7e51165b50670f63540ab218a"/><section>
    <title>TOML_NODISCARD_CTOR</title>
<indexterm><primary>TOML_NODISCARD_CTOR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NODISCARD_CTOR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_NODISCARD_CTOR</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1abc3b568c4a112ca6d670c54c1f7d6b4b"/><section>
    <title>TOML_OPEN_ENUM</title>
<indexterm><primary>TOML_OPEN_ENUM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_OPEN_ENUM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_OPEN_ENUM</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa1fd95f7d76d1d3b628ea04378447d0e"/><section>
    <title>TOML_OPEN_FLAGS_ENUM</title>
<indexterm><primary>TOML_OPEN_FLAGS_ENUM</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_OPEN_FLAGS_ENUM</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_OPEN_FLAGS_ENUM&#160;&#160;&#160;<link linkend="_preprocessor_8h_1abc3b568c4a112ca6d670c54c1f7d6b4b">TOML_OPEN_ENUM</link> <link linkend="_preprocessor_8h_1a926f2e2ecef8dfefde373e4192a0ae8d">TOML_FLAGS_ENUM</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a738efc76b091799c4b312ad69c8773bc"/><section>
    <title>TOML_OVERALIGNED</title>
<indexterm><primary>TOML_OVERALIGNED</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_OVERALIGNED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_OVERALIGNED&#160;&#160;&#160;<link linkend="__classes_2lib_2include_2stdalign_8h_1ac2d9dab29c1c9e7069f1d6f19fbbd115">alignas</link>(32)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a2f6986aabe527bd559e98c579f812ba7"/><section>
    <title>TOML_PARSE_ERROR_BASE</title>
<indexterm><primary>TOML_PARSE_ERROR_BASE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PARSE_ERROR_BASE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e">TOML_PARSE_ERROR_BASE</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a80b3e84c102efec5a37153b958cb6535"/><section>
    <title>TOML_PARSE_FILE_ERROR</title>
<indexterm><primary>TOML_PARSE_FILE_ERROR</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PARSE_FILE_ERROR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PARSE_FILE_ERROR( msg,  <link linkend="_classpath">path</link>)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classparse__result">parse_result</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parse_error
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg,&#32;<link linkend="_structsource__position">source_position</link>{},&#32;std::make_shared&lt;const&#32;std::string&gt;(<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(<link linkend="_classpath">path</link>))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a05278d773b91496857f3113bdfc748d8"/><section>
    <title>TOML_PARSER_TYPENAME</title>
<indexterm><primary>TOML_PARSER_TYPENAME</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PARSER_TYPENAME</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PARSER_TYPENAME&#160;&#160;&#160;TOML_NAMESPACE::impl::impl_noex::parser</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a857696acfb06fc509ad07e0d23bb7aab"/><section>
    <title>TOML_POP_WARNINGS</title>
<indexterm><primary>TOML_POP_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_POP_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_POP_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa9cd0da20c04fe649ea2460248dcea23"/><section>
    <title>TOML_PRAGMA_CLANG</title>
<indexterm><primary>TOML_PRAGMA_CLANG</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_CLANG</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_CLANG( decl)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad608eade28884fbb26ca4ff5aeea0242"/><section>
    <title>TOML_PRAGMA_CLANG_GE_10</title>
<indexterm><primary>TOML_PRAGMA_CLANG_GE_10</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_CLANG_GE_10</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_CLANG_GE_10( decl)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af301bd3ae7708a21171567a45353693e"/><section>
    <title>TOML_PRAGMA_CLANG_GE_11</title>
<indexterm><primary>TOML_PRAGMA_CLANG_GE_11</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_CLANG_GE_11</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_CLANG_GE_11( decl)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad5d62df82158058232a50043ce41e8f6"/><section>
    <title>TOML_PRAGMA_CLANG_GE_9</title>
<indexterm><primary>TOML_PRAGMA_CLANG_GE_9</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_CLANG_GE_9</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_CLANG_GE_9( decl)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a18360de87e5c607cab0ef434b9e3ecfe"/><section>
    <title>TOML_PRAGMA_GCC</title>
<indexterm><primary>TOML_PRAGMA_GCC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_GCC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_GCC( decl)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5267dede271aa6a7938b48580684a977"/><section>
    <title>TOML_PRAGMA_ICC</title>
<indexterm><primary>TOML_PRAGMA_ICC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_ICC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_ICC( ...)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a75e8eb2a50ba6ce46571b6ff6a2781d2"/><section>
    <title>TOML_PRAGMA_MSVC</title>
<indexterm><primary>TOML_PRAGMA_MSVC</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PRAGMA_MSVC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PRAGMA_MSVC( ...)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0d81fa436d15f4572c420c9d0a86c150"/><section>
    <title>TOML_PURE</title>
<indexterm><primary>TOML_PURE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PURE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PURE</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a930d63cd08b8db4f5d7be9f8ef861c17"/><section>
    <title>TOML_PURE_GETTER</title>
<indexterm><primary>TOML_PURE_GETTER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PURE_GETTER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PURE_GETTER&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5"/><section>
    <title>TOML_PURE_INLINE_GETTER</title>
<indexterm><primary>TOML_PURE_INLINE_GETTER</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PURE_INLINE_GETTER</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PURE_INLINE_GETTER&#160;&#160;&#160;<link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>	<link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a25cc6544f9a475e47e4d373f0b1ea5e2"/><section>
    <title>TOML_PUSH_WARNINGS</title>
<indexterm><primary>TOML_PUSH_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PUSH_WARNINGS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_PUSH_WARNINGS&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9728eae8910e26cfd919abbd314c98f4"/><section>
    <title>TOML_REQUIRES</title>
<indexterm><primary>TOML_REQUIRES</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_REQUIRES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_REQUIRES( ...)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a20dec4fc2cdf7f5ff2372b1d7827aa7c"/><section>
    <title>TOML_RETURNS_BY_THROWING</title>
<indexterm><primary>TOML_RETURNS_BY_THROWING</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_RETURNS_BY_THROWING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_RETURNS_BY_THROWING</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3"/><section>
    <title>TOML_SA_LIST_BEG</title>
<indexterm><primary>TOML_SA_LIST_BEG</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_LIST_BEG</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_LIST_BEG&#160;&#160;&#160;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39"/><section>
    <title>TOML_SA_LIST_END</title>
<indexterm><primary>TOML_SA_LIST_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_LIST_END</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_LIST_END</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec"/><section>
    <title>TOML_SA_LIST_NEW</title>
<indexterm><primary>TOML_SA_LIST_NEW</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_LIST_NEW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_LIST_NEW&#160;&#160;&#160;<link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link> <link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4"/><section>
    <title>TOML_SA_LIST_NXT</title>
<indexterm><primary>TOML_SA_LIST_NXT</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_LIST_NXT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_LIST_NXT&#160;&#160;&#160;<link linkend="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec">TOML_SA_LIST_NEW</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31"/><section>
    <title>TOML_SA_LIST_SEP</title>
<indexterm><primary>TOML_SA_LIST_SEP</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_LIST_SEP</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_LIST_SEP&#160;&#160;&#160;<link linkend="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f">TOML_SA_NEWLINE</link> &quot;  - &quot;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae6ef2cd7e6c604e456b4b1bdf6bee613"/><section>
    <title>TOML_SA_NATIVE_VALUE_TYPE_LIST</title>
<indexterm><primary>TOML_SA_NATIVE_VALUE_TYPE_LIST</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_NATIVE_VALUE_TYPE_LIST</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_NATIVE_VALUE_TYPE_LIST</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;std::string&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int64_t&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;double&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;bool&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::date&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::time&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::date_time&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39">TOML_SA_LIST_END</link>
</programlisting></section>
<anchor xml:id="_toml_8hpp_1aad2b50a55cf9340cc5215fe7361e358f"/><section>
    <title>TOML_SA_NEWLINE</title>
<indexterm><primary>TOML_SA_NEWLINE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_NEWLINE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_NEWLINE&#160;&#160;&#160;&quot;\n| &quot;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a28ad2f9bb777d4b3cb545bdc94b55b63"/><section>
    <title>TOML_SA_NODE_TYPE_LIST</title>
<indexterm><primary>TOML_SA_NODE_TYPE_LIST</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_NODE_TYPE_LIST</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_NODE_TYPE_LIST</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::table&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::array&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;std::string&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;int64_t&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;double&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;bool&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;toml::date&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;toml::time&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;toml::value&lt;toml::date_time&gt;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39">TOML_SA_LIST_END</link>
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a1de380e050f331193398fe626294c548"/><section>
    <title>TOML_SA_UNWRAPPED_NODE_TYPE_LIST</title>
<indexterm><primary>TOML_SA_UNWRAPPED_NODE_TYPE_LIST</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_UNWRAPPED_NODE_TYPE_LIST</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_UNWRAPPED_NODE_TYPE_LIST</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec">TOML_SA_LIST_NEW</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;A&#32;native&#32;TOML&#32;value&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ae6ef2cd7e6c604e456b4b1bdf6bee613">TOML_SA_NATIVE_VALUE_TYPE_LIST</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;A&#32;TOML&#32;node&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a28ad2f9bb777d4b3cb545bdc94b55b63">TOML_SA_NODE_TYPE_LIST</link>
</programlisting></section>
<anchor xml:id="_toml_8hpp_1af388261a024b7ff38a50bb329d7df32c"/><section>
    <title>TOML_SA_VALUE_EXACT_FUNC_MESSAGE</title>
<indexterm><primary>TOML_SA_VALUE_EXACT_FUNC_MESSAGE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_VALUE_EXACT_FUNC_MESSAGE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_VALUE_EXACT_FUNC_MESSAGE( type_arg)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;The&#32;&quot;</emphasis>&#32;type_arg&#32;<emphasis role="stringliteral">&quot;&#32;must&#32;be&#32;one&#32;of:&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec">TOML_SA_LIST_NEW</link>&#32;<emphasis role="stringliteral">&quot;A&#32;native&#32;TOML&#32;value&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ae6ef2cd7e6c604e456b4b1bdf6bee613">TOML_SA_NATIVE_VALUE_TYPE_LIST</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\

&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#32;<emphasis role="stringliteral">&quot;A&#32;non-view&#32;type&#32;capable&#32;of&#32;losslessly&#32;representing&#32;a&#32;native&#32;TOML&#32;value&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;<emphasis role="stringliteral">&quot;std::string&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_VALUE_MESSAGE_WSTRING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_LIST_SEP&#32;<emphasis role="stringliteral">&quot;any&#32;signed&#32;integer&#32;type&#32;&gt;=&#32;64&#32;bits&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;<emphasis role="stringliteral">&quot;any&#32;floating-point&#32;type&#32;&gt;=&#32;64&#32;bits&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39">TOML_SA_LIST_END</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\

&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#32;<emphasis role="stringliteral">&quot;An&#32;immutable&#32;view&#32;type&#32;not&#32;requiring&#32;additional&#32;temporary&#32;storage&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;<emphasis role="stringliteral">&quot;std::string_view&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_VALUE_MESSAGE_U8STRING_VIEW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_LIST_SEP&#32;<emphasis role="stringliteral">&quot;const&#32;char*&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_VALUE_MESSAGE_CONST_CHAR8&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TOML_SA_LIST_END
</programlisting></section>
<anchor xml:id="_toml_8hpp_1acf0e577c1a22db8f0fb3f8120fa3babf"/><section>
    <title>TOML_SA_VALUE_FUNC_MESSAGE</title>
<indexterm><primary>TOML_SA_VALUE_FUNC_MESSAGE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_VALUE_FUNC_MESSAGE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_VALUE_FUNC_MESSAGE( type_arg)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;The&#32;&quot;</emphasis>&#32;type_arg&#32;<emphasis role="stringliteral">&quot;&#32;must&#32;be&#32;one&#32;of:&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab05d15b88d3ba47185125777d141c8ec">TOML_SA_LIST_NEW</link>&#32;<emphasis role="stringliteral">&quot;A&#32;native&#32;TOML&#32;value&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ae6ef2cd7e6c604e456b4b1bdf6bee613">TOML_SA_NATIVE_VALUE_TYPE_LIST</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\

&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#32;<emphasis role="stringliteral">&quot;A&#32;non-view&#32;type&#32;capable&#32;of&#32;losslessly&#32;representing&#32;a&#32;native&#32;TOML&#32;value&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;<emphasis role="stringliteral">&quot;std::string&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_VALUE_MESSAGE_WSTRING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_LIST_SEP&#32;<emphasis role="stringliteral">&quot;any&#32;signed&#32;integer&#32;type&#32;&gt;=&#32;64&#32;bits&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;<emphasis role="stringliteral">&quot;any&#32;floating-point&#32;type&#32;&gt;=&#32;64&#32;bits&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39">TOML_SA_LIST_END</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\

&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#32;<emphasis role="stringliteral">&quot;A&#32;non-view&#32;type&#32;capable&#32;of&#32;(reasonably)&#32;representing&#32;a&#32;native&#32;TOML&#32;value&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;<emphasis role="stringliteral">&quot;any&#32;other&#32;integer&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1af44d9f3540fcda73dd543e9146633c31">TOML_SA_LIST_SEP</link>&#32;<emphasis role="stringliteral">&quot;any&#32;floating-point&#32;type&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a64f020cb6143b9513bb7aecabcd43b39">TOML_SA_LIST_END</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\

&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1ab07dc1dbfccd0160587c260d261092b4">TOML_SA_LIST_NXT</link>&#32;<emphasis role="stringliteral">&quot;An&#32;immutable&#32;view&#32;type&#32;not&#32;requiring&#32;additional&#32;temporary&#32;storage&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1b2e4bd27dcda3c068fc0426c754f0b3">TOML_SA_LIST_BEG</link>&#32;<emphasis role="stringliteral">&quot;std::string_view&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_VALUE_MESSAGE_U8STRING_VIEW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_LIST_SEP&#32;<emphasis role="stringliteral">&quot;const&#32;char*&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_VALUE_MESSAGE_CONST_CHAR8&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;TOML_SA_LIST_END
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a24db235afb76c297b04653b8ea205481"/><section>
    <title>TOML_SA_VALUE_MESSAGE_CONST_CHAR8</title>
<indexterm><primary>TOML_SA_VALUE_MESSAGE_CONST_CHAR8</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_VALUE_MESSAGE_CONST_CHAR8</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_VALUE_MESSAGE_CONST_CHAR8</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a634cb9658960888223e8a1eb8b005ecb"/><section>
    <title>TOML_SA_VALUE_MESSAGE_U8STRING_VIEW</title>
<indexterm><primary>TOML_SA_VALUE_MESSAGE_U8STRING_VIEW</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_VALUE_MESSAGE_U8STRING_VIEW</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_VALUE_MESSAGE_U8STRING_VIEW</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a6a2e4c5e45d5f2c8f2f3cedb2d0dafcf"/><section>
    <title>TOML_SA_VALUE_MESSAGE_WSTRING</title>
<indexterm><primary>TOML_SA_VALUE_MESSAGE_WSTRING</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SA_VALUE_MESSAGE_WSTRING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SA_VALUE_MESSAGE_WSTRING</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a87f51a784286c7b6024f8f5e4257fdd4"/><section>
    <title>TOML_SHARED_LIB</title>
<indexterm><primary>TOML_SHARED_LIB</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SHARED_LIB</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SHARED_LIB&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab209484871e7b8ca0be594dface4d072"/><section>
    <title>TOML_SIMPLE_STATIC_ASSERT_MESSAGES</title>
<indexterm><primary>TOML_SIMPLE_STATIC_ASSERT_MESSAGES</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_SIMPLE_STATIC_ASSERT_MESSAGES</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_SIMPLE_STATIC_ASSERT_MESSAGES&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0d667de514e1435f8cfba9b403dd6665"/><section>
    <title>TOML_TRIVIAL_ABI</title>
<indexterm><primary>TOML_TRIVIAL_ABI</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_TRIVIAL_ABI</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_TRIVIAL_ABI</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a92f612e13566656e59e6799fed8028de"/><section>
    <title>TOML_UNDEF_MACROS</title>
<indexterm><primary>TOML_UNDEF_MACROS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_UNDEF_MACROS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_UNDEF_MACROS&#160;&#160;&#160;1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c"/><section>
    <title>TOML_UNLIKELY</title>
<indexterm><primary>TOML_UNLIKELY</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_UNLIKELY</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_UNLIKELY( ...)&#160;&#160;&#160;(__VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3ed5549bb358a70566b2499634ffd752"/><section>
    <title>TOML_UNLIKELY_CASE</title>
<indexterm><primary>TOML_UNLIKELY_CASE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_UNLIKELY_CASE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_UNLIKELY_CASE</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a43a3ff9d3097bf4e929c9a73bd17b793"/><section>
    <title>TOML_UNREACHABLE</title>
<indexterm><primary>TOML_UNREACHABLE</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_UNREACHABLE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_UNREACHABLE&#160;&#160;&#160;static_assert(<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a05802eb834f167bd8a151e82492b8866"/><section>
    <title>TOML_UNUSED</title>
<indexterm><primary>TOML_UNUSED</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_UNUSED</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_UNUSED( ...)&#160;&#160;&#160;static_cast&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&gt;(__VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3612b1afe68ba6f33693af9f2ebf3336"/><section>
    <title>TOML_WINDOWS</title>
<indexterm><primary>TOML_WINDOWS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_WINDOWS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TOML_WINDOWS&#160;&#160;&#160;0</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac78113fc8c30dd400d9b8b3a82b0cbb9"/><section>
    <title>utf8_buffered_reader_error_check</title>
<indexterm><primary>utf8_buffered_reader_error_check</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_buffered_reader_error_check</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> utf8_buffered_reader_error_check( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(reader_.error())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__VA_ARGS__;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a7807884a92014643ba5f592263d86bb0"/><section>
    <title>utf8_reader_error</title>
<indexterm><primary>utf8_reader_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> utf8_reader_error( ...)&#160;&#160;&#160;err_.emplace(__VA_ARGS__)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9786bc2cc56c908d0a845891896f4de8"/><section>
    <title>utf8_reader_error_check</title>
<indexterm><primary>utf8_reader_error_check</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader_error_check</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> utf8_reader_error_check( ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_toml_8hpp_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(err_)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__VA_ARGS__;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;while&#32;(<emphasis role="keyword">false</emphasis>)
</programlisting></section>
<anchor xml:id="_toml_8hpp_1af8d77e747aff2b90c099d213469c63da"/><section>
    <title>utf8_reader_return_after_error</title>
<indexterm><primary>utf8_reader_return_after_error</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader_return_after_error</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> utf8_reader_return_after_error( ...)&#160;&#160;&#160;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link> __VA_ARGS__</computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_toml_8hpp_1a3ad4b4468010a85a19ac9b40dab8b22a"/><section>
    <title>common_signed_type</title>
<indexterm><primary>common_signed_type</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>common_signed_type</secondary></indexterm>
<computeroutput>template&lt;typename... T&gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a3ad4b4468010a85a19ac9b40dab8b22a">common_signed_type</link> =  std::common_type_t&lt;std::make_signed_t&lt;T&gt;...&gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae3fd8742e4c8e5256fbcdce909c40770"/><section>
    <title>const_array_iterator</title>
<indexterm><primary>const_array_iterator</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>const_array_iterator</secondary></indexterm>
<para><computeroutput>using <link linkend="_array_8h_1ae3fd8742e4c8e5256fbcdce909c40770">const_array_iterator</link> =  <link linkend="_preprocessor_8h_1a1234ac91a810b3bd926ed6721ad1e44a">POXY_IMPLEMENTATION_DETAIL</link>(impl::array_iterator&lt;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa14587a3e092e9b8e95dea38557e7517"/><section>
    <title>const_table_iterator</title>
<indexterm><primary>const_table_iterator</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>const_table_iterator</secondary></indexterm>
<para><computeroutput>using <link linkend="_table_8h_1aa14587a3e092e9b8e95dea38557e7517">const_table_iterator</link> =  <link linkend="_preprocessor_8h_1a1234ac91a810b3bd926ed6721ad1e44a">POXY_IMPLEMENTATION_DETAIL</link>(impl::table_iterator&lt;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5b72589fd4f35a9fdf114bd4dac17067"/><section>
    <title>copy_cv</title>
<indexterm><primary>copy_cv</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>copy_cv</secondary></indexterm>
<computeroutput>template&lt;typename Dest , typename Src &gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a5b72589fd4f35a9fdf114bd4dac17067">copy_cv</link> =  typename <link linkend="_structcopy__cv__">copy_cv_</link>&lt;Dest, Src&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a48304ccb99bc32a64f1e4bc7a3506f77"/><section>
    <title>copy_cvref</title>
<indexterm><primary>copy_cvref</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>copy_cvref</secondary></indexterm>
<computeroutput>template&lt;typename Dest , typename Src &gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a48304ccb99bc32a64f1e4bc7a3506f77">copy_cvref</link> =  <link linkend="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2">copy_ref</link>&lt;<link linkend="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2">copy_ref</link>&lt;<link linkend="_toml_8hpp_1a5b72589fd4f35a9fdf114bd4dac17067">copy_cv</link>&lt;std::remove_reference_t&lt;Dest&gt;, std::remove_reference_t&lt;Src&gt; &gt;, Dest&gt;, Src&gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2"/><section>
    <title>copy_ref</title>
<indexterm><primary>copy_ref</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>copy_ref</secondary></indexterm>
<computeroutput>template&lt;typename Dest , typename Src &gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1afe2778ba6d59f6bd36d5e426cf2b18e2">copy_ref</link> =  typename <link linkend="_structcopy__ref__">copy_ref_</link>&lt;Dest, Src&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a081dc6ee550d344af321209d765fbe45"/><section>
    <title>default_formatter</title>
<indexterm><primary>default_formatter</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>default_formatter</secondary></indexterm>
<para><computeroutput>using <link linkend="_forward__declarations_8h_1a081dc6ee550d344af321209d765fbe45">default_formatter</link> =  toml_formatter</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8340fb962cffc0c4b9f9995c0a698fd7"/><section>
    <title>emplaced_type_of</title>
<indexterm><primary>emplaced_type_of</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>emplaced_type_of</secondary></indexterm>
<computeroutput>template&lt;typename... T&gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a8340fb962cffc0c4b9f9995c0a698fd7">emplaced_type_of</link> =  typename <link linkend="_structemplaced__type__of__">emplaced_type_of_</link>&lt;remove_cvref&lt;T&gt;...&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a360741865d63894a80dd761769957c4f"/><section>
    <title>native_type_of</title>
<indexterm><primary>native_type_of</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>native_type_of</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a360741865d63894a80dd761769957c4f">native_type_of</link> =  typename <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::native_type</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89"/><section>
    <title>source_path_ptr</title>
<indexterm><primary>source_path_ptr</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>source_path_ptr</secondary></indexterm>
<para><computeroutput>using <link linkend="_source__region_8h_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link> =  std::shared_ptr&lt;const <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link>&gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0f4621a6694e07daea7a5c0282138524"/><section>
    <title>unwrap_node</title>
<indexterm><primary>unwrap_node</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>unwrap_node</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a0f4621a6694e07daea7a5c0282138524">unwrap_node</link> =  typename <link linkend="_structnode__unwrapper">node_unwrapper</link>&lt;std::remove_reference_t&lt;T&gt; &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a44f601b3d02e062b7ec543291aa84fcb"/><section>
    <title>wrap_node</title>
<indexterm><primary>wrap_node</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>wrap_node</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_toml_8hpp_1a44f601b3d02e062b7ec543291aa84fcb">wrap_node</link> =  typename <link linkend="_structnode__wrapper">node_wrapper</link>&lt;std::remove_reference_t&lt;T&gt; &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_toml_8hpp_1a4d7c622cb6d4d43b3df5b15cb773887f"/><section>
    <title>at_path()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>at_path</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>at_path</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classnode__view">node_view</link>&lt; const node &gt; <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> at_path (const node &amp; root, const toml::path &amp; path)<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8fd45f603d445b914dc921213e6f2dc0"/><section>
    <title>at_path()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>at_path</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>at_path</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classnode__view">node_view</link>&lt; const node &gt; <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> at_path (const node &amp; root, std::string_view path)<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a468a25365624c7539b3318b31ed5752c"/><section>
    <title>at_path()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>at_path</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>at_path</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classnode__view">node_view</link>&lt; node &gt; <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> at_path (node &amp; root, const toml::path &amp; path)<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af49131ba8c9d457cc429110e01808f9a"/><section>
    <title>concatenate()</title>
<indexterm><primary>concatenate</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>concatenate</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> concatenate (char *&amp; write_pos, char *const buf_end, const T &amp; arg)<computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_af49131ba8c9d457cc429110e01808f9a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_af49131ba8c9d457cc429110e01808f9a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4"/><section>
    <title>find()</title>
<indexterm><primary>find</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>find</secondary></indexterm>
<computeroutput>template&lt;typename Iterator , typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> auto find (Iterator start, Iterator end, const T &amp; needle) -&gt; decltype(&amp;(*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>))
	<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a334e40fb57f310a5de10f332f1914bf4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a2c39cdb56141a8d5637c9933c53e8bb6"/><section>
    <title>fpclassify()</title>
<indexterm><primary>fpclassify</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>fpclassify</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> fp_class fpclassify (const double &amp; val)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a2c39cdb56141a8d5637c9933c53e8bb6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1af24ac0c604986a79a31a916332dba0a6"/><section>
    <title>inserter()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>inserter</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>inserter</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_structinserter">inserter</link> (T &amp;&amp; ) -&gt;  <link linkend="_structinserter">inserter</link>&lt; T &amp;&amp; &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad2df9a648d8aed8ba9ba54524ef050c8"/><section>
    <title>inserter()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>inserter</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>inserter</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_structinserter">inserter</link> (T &amp; ) -&gt;  <link linkend="_structinserter">inserter</link>&lt; T &amp; &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a59540c22f4b7e10864095f21c67e0c69"/><section>
    <title>is_ascii()</title>
<indexterm><primary>is_ascii</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_ascii</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_ascii (const char * str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> len)<computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a59540c22f4b7e10864095f21c67e0c69_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a42b4a4b2210e5fb851ab38730940293c"/><section>
    <title>make_node()</title>
<indexterm><primary>make_node</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>make_node</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> node_ptr make_node (T &amp;&amp; val, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> flags = <computeroutput><link linkend="_forward__declarations_8h_1ab28140ef75c3f18305fb795d6a7917c5">preserve_source_value_flags</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aef6fbc596e7e69a80f14c34a2b786a14"/><section>
    <title>min()</title>
<indexterm><primary>min</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>min</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> constexpr const T &amp; min (const T &amp; a, const T &amp; b)<computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_aef6fbc596e7e69a80f14c34a2b786a14_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a8d0bda020a3bbeeb0ea155928f94b8da"/><section>
    <title>node_integer_cast()</title>
<indexterm><primary>node_integer_cast</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_integer_cast</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link> optional&lt; T &gt; node_integer_cast (<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> val)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac7894ab28cc7d4e5e2794cf2ccc27ce0"/><section>
    <title>node_view()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>node_view</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_view</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classnode__view">node_view</link> (const T &amp; ) -&gt;  <link linkend="_classnode__view">node_view</link>&lt; const node &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a85b0f464d4307e98c654341989ef7943"/><section>
    <title>node_view()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>node_view</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_view</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classnode__view">node_view</link> (const T * ) -&gt;  <link linkend="_classnode__view">node_view</link>&lt; const node &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a720a871dfc7df072225ae74c6171ed76"/><section>
    <title>node_view()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>node_view</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_view</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classnode__view">node_view</link> (T &amp; ) -&gt;  <link linkend="_classnode__view">node_view</link>&lt; node &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac2ecb89c4cf26bbc739070fa7f060bd2"/><section>
    <title>node_view()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>node_view</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_view</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classnode__view">node_view</link> (T * ) -&gt;  <link linkend="_classnode__view">node_view</link>&lt; node &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ade7e3bc03b39cb3b5684a4c302832e3c"/><section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename Char &gt; </computeroutput><para><computeroutput>std::basic_ostream&lt; Char &gt; &amp; operator&lt;&lt; (std::basic_ostream&lt; Char &gt; &amp; lhs, node_type rhs)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_ade7e3bc03b39cb3b5684a4c302832e3c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_ade7e3bc03b39cb3b5684a4c302832e3c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a2979814e3df74d8f56a23e49dce9cb03"/><section>
    <title>parse()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>parse</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> parse (std::istream &amp; doc, <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp; source_path)</computeroutput></para><para>

<para>Parses a TOML document from a stream. </para>
</para>

<para>\detail \cpp std::stringstream ss; ss &lt;&lt; &quot;a = 3&quot;sv;</para>

<para>auto tbl = toml::parse(ss, &quot;foo.toml&quot;); std::cout &lt;&lt; tbl[&quot;a&quot;] &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out 3 \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>doc</entry><entry>
<para>The TOML document to parse. Must be valid UTF-8. </para>
</entry>
                            </row>
                            <row>
<entry>source_path</entry><entry>
<para>The path used to initialize each node&apos;s <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.path</computeroutput>. If you don&apos;t have a path (or you have no intention of using paths in diagnostics) then this parameter can safely be left blank.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>\conditional_return{With exceptions} A toml::table. \conditional_return{Without exceptions} A toml::parse_result. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a2979814e3df74d8f56a23e49dce9cb03_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1aeefb52416d2ab49138b4f8a628a3c290"/><section>
    <title>parse()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>parse</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> parse (std::istream &amp; doc, std::string_view source_path = <computeroutput>{}</computeroutput>
)</computeroutput></para><para>

<para>Parses a TOML document from a stream. </para>
</para>

<para>\detail \cpp std::stringstream ss; ss &lt;&lt; &quot;a = 3&quot;sv;</para>

<para>auto tbl = toml::parse(ss); std::cout &lt;&lt; tbl[&quot;a&quot;] &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out 3 \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>doc</entry><entry>
<para>The TOML document to parse. Must be valid UTF-8. </para>
</entry>
                            </row>
                            <row>
<entry>source_path</entry><entry>
<para>The path used to initialize each node&apos;s <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.path</computeroutput>. If you don&apos;t have a path (or you have no intention of using paths in diagnostics) then this parameter can safely be left blank.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>\conditional_return{With exceptions} A toml::table. \conditional_return{Without exceptions} A toml::parse_result. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a056fa20958047dcf2655a7a219275d56"/><section>
    <title>parse()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>parse</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> parse (std::string_view doc, <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp; source_path)</computeroutput></para><para>

<para>Parses a TOML document from a string view. </para>
</para>

<para>\detail \cpp auto tbl = toml::parse(&quot;a = 3&quot;sv, &quot;foo.toml&quot;); std::cout &lt;&lt; tbl[&quot;a&quot;] &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out 3 \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>doc</entry><entry>
<para>The TOML document to parse. Must be valid UTF-8. </para>
</entry>
                            </row>
                            <row>
<entry>source_path</entry><entry>
<para>The path used to initialize each node&apos;s <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.path</computeroutput>. If you don&apos;t have a path (or you have no intention of using paths in diagnostics) then this parameter can safely be left blank.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>\conditional_return{With exceptions} A toml::table. \conditional_return{Without exceptions} A toml::parse_result. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a056fa20958047dcf2655a7a219275d56_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1ab4b6a8282072fb55b91953ad86504247"/><section>
    <title>parse()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>parse</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> parse (std::string_view doc, std::string_view source_path = <computeroutput>{}</computeroutput>
)</computeroutput></para><para>

<para>Parses a TOML document from a string view. </para>
</para>

<para>\detail \cpp auto tbl = toml::parse(&quot;a = 3&quot;sv); std::cout &lt;&lt; tbl[&quot;a&quot;] &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out 3 \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>doc</entry><entry>
<para>The TOML document to parse. Must be valid UTF-8. </para>
</entry>
                            </row>
                            <row>
<entry>source_path</entry><entry>
<para>The path used to initialize each node&apos;s <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a633906574fe6e39b7f2840bed0e49832">source()</link>.path</computeroutput>. If you don&apos;t have a path (or you have no intention of using paths in diagnostics) then this parameter can safely be left blank.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>\conditional_return{With exceptions} A toml::table. \conditional_return{Without exceptions} A toml::parse_result. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a283b0807cf14ff886499b5fd270161b2"/><section>
    <title>parse_file()</title>
<indexterm><primary>parse_file</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse_file</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> parse_file (std::string_view file_path)</computeroutput></para><para>

<para>Parses a TOML document from a file. </para>
</para>

<para>\detail \cpp toml::parse_result get_foo_toml() { return toml::parse_file(&quot;foo.toml&quot;); } \ecpp</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>file_path</entry><entry>
<para>The TOML document to parse. Must be valid UTF-8.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>\conditional_return{With exceptions} A toml::table. \conditional_return{Without exceptions} A toml::parse_result. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a8b559ae46e60a5b64d0b3607f8d556c8"/><section>
    <title>parse_path()</title>
<indexterm><primary>parse_path</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>parse_path</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> parse_path (std::string_view , <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> * , parse_path_callback&lt; std::string_view &gt; , parse_path_callback&lt; <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> &gt; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a6ee5428b144b0bd723b9ef03285a17b5"/><section>
    <title>print_floating_point_to_stream()</title>
<indexterm><primary>print_floating_point_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_floating_point_to_stream</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> print_floating_point_to_stream (std::ostream &amp; stream, T val, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> format, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> relaxed_precision)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a6ee5428b144b0bd723b9ef03285a17b5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1ae0ee9b1728e8a7cddf22095cf20e5090"/><section>
    <title>print_integer_to_stream()</title>
<indexterm><primary>print_integer_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_integer_to_stream</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> print_integer_to_stream (std::ostream &amp; stream, T val, <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> format = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3779304261fe02652b4311ab3063ddae"/><section>
    <title>print_to_stream()<computeroutput>[1/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aee0673ec899fb1c08fd1074f46da7b46"/><section>
    <title>print_to_stream()<computeroutput>[2/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , char )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8b9e19d91ba3918dc2909821bf5730d6"/><section>
    <title>print_to_stream()<computeroutput>[3/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classarray">array</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af542b1c2955e13cd1833e65db306e31a"/><section>
    <title>print_to_stream()<computeroutput>[4/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_structsource__position">source_position</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9b252826f55a055c1604c22dd812b8f0"/><section>
    <title>print_to_stream()<computeroutput>[5/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_structsource__region">source_region</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aaa3a1eea31422e821730d2d526ed2262"/><section>
    <title>print_to_stream()<computeroutput>[6/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1adc1f34fef1516632f45ae5a6d1fa41f8"/><section>
    <title>print_to_stream()<computeroutput>[7/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classtable">table</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9622ce3648214027d362942806cfa1d5"/><section>
    <title>print_to_stream()<computeroutput>[8/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const toml::date &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a7002f95426315eb573f7a2092591b21b"/><section>
    <title>print_to_stream()<computeroutput>[9/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const toml::date_time &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4f57205956a44ecc0d97c5ce135a5d98"/><section>
    <title>print_to_stream()<computeroutput>[10/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const toml::time &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a35b9457528f08835aa7fdbc438a71848"/><section>
    <title>print_to_stream()<computeroutput>[11/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const toml::time_offset &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8d38f76127eaeca4d250c5b6185e06e1"/><section>
    <title>print_to_stream()<computeroutput>[12/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a71007ec1e54a6a6c3ced821afb4a47f2"/><section>
    <title>print_to_stream()<computeroutput>[13/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; date &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae6c5b428ba6d0879f704e99cf2af90a0"/><section>
    <title>print_to_stream()<computeroutput>[14/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; <link linkend="_structdate__time">date_time</link> &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aaa74963959f161ad9a8e8fa7a6ae612d"/><section>
    <title>print_to_stream()<computeroutput>[15/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; double &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af414e05a9db0d664288c94e66b3fd661"/><section>
    <title>print_to_stream()<computeroutput>[16/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a13fa82e006a14901f7227be1554c98ab"/><section>
    <title>print_to_stream()<computeroutput>[17/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a78812302cfebd78249ab834d9b5f4627"/><section>
    <title>print_to_stream()<computeroutput>[18/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , const <link linkend="_classvalue">value</link>&lt; <link linkend="_structtime">time</link> &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a04f3a16e20f97afdaca0c2559290c4c4"/><section>
    <title>print_to_stream()<computeroutput>[19/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , double , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> relaxed_precision = <computeroutput><link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a85c5f6ab6a586fc64d337eb2a9288729"/><section>
    <title>print_to_stream()<computeroutput>[20/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , float , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> relaxed_precision = <computeroutput><link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1b959797edd9753a6791d3ddc796935b"/><section>
    <title>print_to_stream()<computeroutput>[21/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , signed char , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aea070a95c049b2d0d65bc1b38a2ab5f9"/><section>
    <title>print_to_stream()<computeroutput>[22/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , signed int , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af543455836b4f37c15dc92cd7757a79f"/><section>
    <title>print_to_stream()<computeroutput>[23/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , signed long long , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8dc119282a3ae336771e62aa2d39783f"/><section>
    <title>print_to_stream()<computeroutput>[24/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , signed long , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9c7972107b64f7fa97f240e439f6e22b"/><section>
    <title>print_to_stream()<computeroutput>[25/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , signed short , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3ecc6f4250547523307312cbff28007e"/><section>
    <title>print_to_stream()<computeroutput>[26/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , std::string_view )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a3ecc6f4250547523307312cbff28007e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a53e0c622236f1efd68bc6b6b1202820f"/><section>
    <title>print_to_stream()<computeroutput>[27/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , unsigned char , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1abbdc312c24f645dc311ab19c0d904d81"/><section>
    <title>print_to_stream()<computeroutput>[28/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , unsigned int , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae9f59a9416d56d67a41696de9985e53b"/><section>
    <title>print_to_stream()<computeroutput>[29/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , unsigned long long , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a80377a189af1e9a4a79f7747d1d8dafb"/><section>
    <title>print_to_stream()<computeroutput>[30/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , unsigned long , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae3fbac9a0e6f6eb555008a912a15c88d"/><section>
    <title>print_to_stream()<computeroutput>[31/31]</computeroutput></title>
<indexterm><primary>print_to_stream</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream</secondary></indexterm>
<para><computeroutput><link linkend="_group__configuration_1gac40a454cde06de4e76df3d6d460a3544">TOML_EXPORTED_FREE_FUNCTION</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__configuration_1ga2bfc7ae4747f15378d92249aadce019e">TOML_CALLCONV</link> print_to_stream (std::ostream &amp; , unsigned short , <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>  = <computeroutput>{}</computeroutput>
, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> min_digits = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aff367af5369aebb62f720b2827f37a5d"/><section>
    <title>print_to_stream_bookended()</title>
<indexterm><primary>print_to_stream_bookended</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>print_to_stream_bookended</secondary></indexterm>
<computeroutput>template&lt;typename T , typename U &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> print_to_stream_bookended (std::ostream &amp; stream, const T &amp; val, const U &amp; bookend)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_aff367af5369aebb62f720b2827f37a5d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_aff367af5369aebb62f720b2827f37a5d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a974c77f6e2d3304feb91d6d33530d470"/><section>
    <title>to_sv()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>to_sv</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>to_sv</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view to_sv (<link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> val)<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae4f30923e17123fe56d55e8d1b196e9c"/><section>
    <title>to_sv()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>to_sv</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>to_sv</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view to_sv (const <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp; str)<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5b611afbfbdcea26f392bbaf0bea418f"/><section>
    <title>to_sv()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>to_sv</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>to_sv</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view to_sv (const <link linkend="_structutf8__codepoint">utf8_codepoint</link> &amp; cp)<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1afedf520caed9f1b7ff4f6349ef5f97d6"/><section>
    <title>to_sv()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>to_sv</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>to_sv</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view to_sv (const <link linkend="_structutf8__codepoint">utf8_codepoint</link> * cp)<computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_afedf520caed9f1b7ff4f6349ef5f97d6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a7962d3d78317c0c0bed873999e311627"/><section>
    <title>to_sv()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>to_sv</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>to_sv</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link> <link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> std::string_view to_sv (node_type val)<computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="toml_8hpp_a7962d3d78317c0c0bed873999e311627_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_toml_8hpp_1a9056e319c00c3f18de02928ab5e3ab7b"/><section>
    <title>TOML_ABI_NAMESPACE_BOOL()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>TOML_ABI_NAMESPACE_BOOL</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_BOOL</secondary></indexterm>
<para><computeroutput>TOML_ABI_NAMESPACE_BOOL (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link> , ex , noex )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5fea9469a327cd49f375d817b240705f"/><section>
    <title>TOML_ABI_NAMESPACE_BOOL()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>TOML_ABI_NAMESPACE_BOOL</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_BOOL</secondary></indexterm>
<para><computeroutput>TOML_ABI_NAMESPACE_BOOL (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link> , impl_ex , impl_noex )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a27b4c7f43597fe0b462c5a1d6e92ddc8"/><section>
    <title>TOML_ABI_NAMESPACE_BOOL()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>TOML_ABI_NAMESPACE_BOOL</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_BOOL</secondary></indexterm>
<para><computeroutput>TOML_ABI_NAMESPACE_BOOL (<link linkend="_group__configuration_1ga0f6a688021ea2fc13e1c76acd64e4bbc">TOML_HAS_CUSTOM_OPTIONAL_TYPE</link> , custopt , stdopt )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aad7dd1560f9bfe1d669259312e826819"/><section>
    <title>TOML_MAKE_FLAGS()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>TOML_MAKE_FLAGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_FLAGS</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> TOML_MAKE_FLAGS (<link linkend="_forward__declarations_8h_1ac3bcacae523bb832111f5195c46d68f4">format_flags</link> )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5ba18547dcf4d4e3f6b9017805742187"/><section>
    <title>TOML_MAKE_FLAGS()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>TOML_MAKE_FLAGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_FLAGS</secondary></indexterm>
<para><computeroutput>TOML_MAKE_FLAGS (formatted_string_traits )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aaeb44bbc848e4243aa7e9011e9bac7f9"/><section>
    <title>TOML_MAKE_FLAGS()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>TOML_MAKE_FLAGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_MAKE_FLAGS</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> TOML_MAKE_FLAGS (<link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> )</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aab349cc793a42bf80a8946c1225b83d4"/><section>
    <title>utf8_reader()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>utf8_reader</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader</secondary></indexterm>
<computeroutput>template&lt;typename Char &gt; </computeroutput><para><computeroutput><link linkend="_classutf8__reader">utf8_reader</link> (std::basic_istream&lt; Char &gt; &amp; , <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp; ) -&gt;  <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_istream&lt; Char &gt; &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac4f840d9fc9ea1fab6ce0ada8bd188e4"/><section>
    <title>utf8_reader()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>utf8_reader</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader</secondary></indexterm>
<computeroutput>template&lt;typename Char &gt; </computeroutput><para><computeroutput><link linkend="_classutf8__reader">utf8_reader</link> (std::basic_istream&lt; Char &gt; &amp; , std::string_view ) -&gt;  <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_istream&lt; Char &gt; &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a20cea9002d83cfb131823c4e83303742"/><section>
    <title>utf8_reader()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>utf8_reader</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader</secondary></indexterm>
<computeroutput>template&lt;typename Char &gt; </computeroutput><para><computeroutput><link linkend="_classutf8__reader">utf8_reader</link> (std::basic_string_view&lt; Char &gt; , <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a5ef8ce60531c971745798ebb9f61a5d8">std::string</link> &amp;&amp; ) -&gt;  <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_string_view&lt; Char &gt; &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a793492352f386bbddbdd421fc57b4416"/><section>
    <title>utf8_reader()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>utf8_reader</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_reader</secondary></indexterm>
<computeroutput>template&lt;typename Char &gt; </computeroutput><para><computeroutput><link linkend="_classutf8__reader">utf8_reader</link> (std::basic_string_view&lt; Char &gt; , std::string_view ) -&gt;  <link linkend="_classutf8__reader">utf8_reader</link>&lt; std::basic_string_view&lt; Char &gt; &gt;</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1add639d61380a455aaab6fe57e370f333"/><section>
    <title>value()</title>
<indexterm><primary>value</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>value</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classvalue">value</link> (T ) -&gt;  <link linkend="_classvalue">value</link>&lt; <link linkend="_toml_8hpp_1a360741865d63894a80dd761769957c4f">impl::native_type_of</link>&lt; impl::remove_cvref&lt; T &gt; &gt; &gt;</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_toml_8hpp_1a76e834946c5dd85fc42b186f7ce325aa"/><section>
    <title>all_integral</title>
<indexterm><primary>all_integral</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>all_integral</secondary></indexterm>
<computeroutput>template&lt;typename... T&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> all_integral = (std::is_integral_v&lt;T&gt; &amp;&amp; ...)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5c5bd51ada006fec47f0a14d90f6ac41"/><section>
    <title>allow_binary_integers</title>
<indexterm><primary>allow_binary_integers</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_binary_integers</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_binary_integers = (1ull &lt;&lt; 6)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8002cf32a7117fe62831fa23aa75cc84"/><section>
    <title>allow_hexadecimal_integers</title>
<indexterm><primary>allow_hexadecimal_integers</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_hexadecimal_integers</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_hexadecimal_integers = (1ull &lt;&lt; 8)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8aed9fba74baf504c741d36149cb46a3"/><section>
    <title>allow_literal_strings</title>
<indexterm><primary>allow_literal_strings</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_literal_strings</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_literal_strings = (1ull &lt;&lt; 2)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a24920e85768d19625e1084e3ca601620"/><section>
    <title>allow_multi_line_strings</title>
<indexterm><primary>allow_multi_line_strings</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_multi_line_strings</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_multi_line_strings = (1ull &lt;&lt; 3)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a48afee63c154da708ccdf978957db363"/><section>
    <title>allow_octal_integers</title>
<indexterm><primary>allow_octal_integers</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_octal_integers</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_octal_integers = (1ull &lt;&lt; 7)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3e541c3ac7db3737fe85987dcdcf7dd8"/><section>
    <title>allow_real_tabs_in_strings</title>
<indexterm><primary>allow_real_tabs_in_strings</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_real_tabs_in_strings</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_real_tabs_in_strings = (1ull &lt;&lt; 4)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a300010e368604efe47dbcae9fd8554fe"/><section>
    <title>allow_unicode_strings</title>
<indexterm><primary>allow_unicode_strings</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>allow_unicode_strings</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> allow_unicode_strings = (1ull &lt;&lt; 5)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4123c1368fa8dd3bb05aff779a3afbfa"/><section>
    <title>can_partially_represent_native</title>
<indexterm><primary>can_partially_represent_native</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>can_partially_represent_native</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> can_partially_represent_native = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::can_partially_represent_native<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad85ed5826d3f6fd7002bbc6ed3aa02e7"/><section>
    <title>can_represent_native</title>
<indexterm><primary>can_represent_native</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>can_represent_native</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> can_represent_native = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::can_represent_native<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ad164d15850201081ce9f8d2820252b21"/><section>
    <title>charconv_buffer_length&lt; double &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; double &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; double &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; double &gt; = 64<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1addbd7d618800a068ddd7d1e5528ace93"/><section>
    <title>charconv_buffer_length&lt; float &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; float &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; float &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; float &gt; = 64<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0d52c8fffb070859c3decf0313a3627b"/><section>
    <title>charconv_buffer_length&lt; int16_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; int16_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; int16_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a269259c924dce846340ddbb810db2e3c">int16_t</link> &gt; = 6<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa0eeb9b98c1b00814115ccbcc26584ef"/><section>
    <title>charconv_buffer_length&lt; int32_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; int32_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; int32_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link> &gt; = 11<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3a79e3122b596ad47a25b66aacf181d9"/><section>
    <title>charconv_buffer_length&lt; int64_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; int64_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; int64_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> &gt; = 20<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a8189ce073a380bfaedb83b589d944ddf"/><section>
    <title>charconv_buffer_length&lt; int8_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; int8_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; int8_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aef44329758059c91c76d334e8fc09700">int8_t</link> &gt; = 4<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a736cfeba3712a13299acce5d8bbae738"/><section>
    <title>charconv_buffer_length&lt; uint16_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; uint16_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; uint16_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link> &gt; = 5<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a97a3f7337264b54b891ea302ae08b9e7"/><section>
    <title>charconv_buffer_length&lt; uint32_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; uint32_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; uint32_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> &gt; = 10<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa953f8a1b787818620a3a5be31755675"/><section>
    <title>charconv_buffer_length&lt; uint64_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; uint64_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; uint64_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> &gt; = 20<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a10b1beeb9876d2242010a83848a8d2f8"/><section>
    <title>charconv_buffer_length&lt; uint8_t &gt;</title>
<indexterm><primary>charconv_buffer_length&lt; uint8_t &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>charconv_buffer_length&lt; uint8_t &gt;</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> charconv_buffer_length&lt; <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5">uint8_t</link> &gt; = 3<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a6b12f27cd2f2075ecfa8109f2149ebdf"/><section>
    <title>control_char_escapes</title>
<indexterm><primary>control_char_escapes</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>control_char_escapes</secondary></indexterm>
<para><computeroutput>constexpr std::string_view control_char_escapes[]<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a10bb30a701ab034872fb59c5ef53b14d"/><section>
    <title>dependent_false</title>
<indexterm><primary>dependent_false</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>dependent_false</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> dependent_false = <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link><computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a7097288127e91d1b819796e8e82d4768"/><section>
    <title>first_is_same</title>
<indexterm><primary>first_is_same</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>first_is_same</secondary></indexterm>
<computeroutput>template&lt;typename T , typename... U&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> first_is_same = <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link><computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af48ff8bd477b07c102c66df2e941597a"/><section>
    <title>first_is_same&lt; T, T, U... &gt;</title>
<indexterm><primary>first_is_same&lt; T, T, U... &gt;</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>first_is_same&lt; T, T, U... &gt;</secondary></indexterm>
<computeroutput>template&lt;typename T , typename... U&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_toml_8hpp_1a7097288127e91d1b819796e8e82d4768">first_is_same</link>&lt; T, T, U... &gt; = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link><computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab82bdeb4dd19cff4de2266a27d3dda18"/><section>
    <title>format_as_binary</title>
<indexterm><primary>format_as_binary</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>format_as_binary</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> format_as_binary = 1</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a00083906b4f76536fcccf16aa0fe3c94"/><section>
    <title>format_as_hexadecimal</title>
<indexterm><primary>format_as_hexadecimal</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>format_as_hexadecimal</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> format_as_hexadecimal = 3</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a23ea604a4d31b811ee1dcf554577c906"/><section>
    <title>format_as_octal</title>
<indexterm><primary>format_as_octal</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>format_as_octal</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> format_as_octal = 2</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ac3bcacae523bb832111f5195c46d68f4"/><section>
    <title>format_flags</title>
<indexterm><primary>format_flags</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>format_flags</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> format_flags<computeroutput>[strong]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af3a33663e90d253686912eba69982c35"/><section>
    <title>indent_array_elements</title>
<indexterm><primary>indent_array_elements</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>indent_array_elements</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> indent_array_elements = (1ull &lt;&lt; 10)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ae225507e97029b1deaa6b3c2fb8634ea"/><section>
    <title>indent_sub_tables</title>
<indexterm><primary>indent_sub_tables</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>indent_sub_tables</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> indent_sub_tables = (1ull &lt;&lt; 9)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aeff1bb793cb4a2cf6c9be1b90fa0ec7d"/><section>
    <title>indentation</title>
<indexterm><primary>indentation</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>indentation</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> indentation = <link linkend="_forward__declarations_8h_1ae225507e97029b1deaa6b3c2fb8634ea">indent_sub_tables</link> | <link linkend="_forward__declarations_8h_1af3a33663e90d253686912eba69982c35">indent_array_elements</link></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a70231801eb17e45cd17c7eb332b4d36f"/><section>
    <title>is_array</title>
<indexterm><primary>is_array</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_array</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_array = std::is_same_v&lt;impl::remove_cvref&lt;T&gt;, <link linkend="_classarray">array</link>&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3dc64661a1bb4eb998b3b28a1893ee6b"/><section>
    <title>is_boolean</title>
<indexterm><primary>is_boolean</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_boolean</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_boolean<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;bool&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a7ecc8ff96d2556cce78ebef9c0433601"/><section>
    <title>is_chronological</title>
<indexterm><primary>is_chronological</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_chronological</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_chronological = <link linkend="_forward__declarations_8h_1a40c5fb13e28fdf655d3a6c7127bcb2b4">is_date</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1ae8325165bb42cc419d4b55c888a0d69f">is_time</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a7fb2820864834a9cfcc07aab9ee4566b">is_date_time</link>&lt;T&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0b26579e78da4e151c2aaff1101d9d63"/><section>
    <title>is_constructible_or_convertible</title>
<indexterm><primary>is_constructible_or_convertible</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_constructible_or_convertible</secondary></indexterm>
<computeroutput>template&lt;typename T , typename ConvertFrom &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_constructible_or_convertible<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_constructible_v&lt;T,&#32;ConvertFrom&gt;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_convertible_v&lt;ConvertFrom,&#32;T&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1aa34941ab50c25915afb9afe528fea814"/><section>
    <title>is_container</title>
<indexterm><primary>is_container</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_container</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_container = is_table&lt;T&gt; || <link linkend="_forward__declarations_8h_1a70231801eb17e45cd17c7eb332b4d36f">is_array</link>&lt;T&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a97417fee781e1c7ba52d5c76ba4459a4"/><section>
    <title>is_cvref</title>
<indexterm><primary>is_cvref</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_cvref</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_cvref = std::is_reference_v&lt;T&gt; || std::is_const_v&lt;T&gt; || std::is_volatile_v&lt;T&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a40c5fb13e28fdf655d3a6c7127bcb2b4"/><section>
    <title>is_date</title>
<indexterm><primary>is_date</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_date</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_date<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;date&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a7fb2820864834a9cfcc07aab9ee4566b"/><section>
    <title>is_date_time</title>
<indexterm><primary>is_date_time</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_date_time</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_date_time<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;date_time&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a400919fd056905f7b68893873e1f96de"/><section>
    <title>is_floating_point</title>
<indexterm><primary>is_floating_point</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_floating_point</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_floating_point<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;double&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a8b617e5248756c383118df7cf633176c"/><section>
    <title>is_integer</title>
<indexterm><primary>is_integer</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_integer</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_integer<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;int64_t&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a4221a3b3314589bb76d18268cf2f2c4c"/><section>
    <title>is_key</title>
<indexterm><primary>is_key</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_key</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_key = std::is_same_v&lt;impl::remove_cvref&lt;T&gt;, toml::key&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af308fcd567483bdd7db051dff62e9fcb"/><section>
    <title>is_key_or_convertible</title>
<indexterm><primary>is_key_or_convertible</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_key_or_convertible</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_key_or_convertible<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;is_key&lt;T&gt;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;impl::is_constructible_or_convertible&lt;toml::key,&#32;T&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a8d7224fe162a50f062ee1328b0968e15"/><section>
    <title>is_losslessly_convertible_to_native</title>
<indexterm><primary>is_losslessly_convertible_to_native</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_losslessly_convertible_to_native</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_losslessly_convertible_to_native = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::is_losslessly_convertible_to_native<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0b9e60ca26c89aac055ec4e01170cb78"/><section>
    <title>is_native</title>
<indexterm><primary>is_native</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_native</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_native = <link linkend="_structvalue__traits">value_traits</link>&lt;T&gt;::is_native<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a954dd8a60050010ad38f8e0112dc1645"/><section>
    <title>is_natively_one_of</title>
<indexterm><primary>is_natively_one_of</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_natively_one_of</secondary></indexterm>
<computeroutput>template&lt;typename T , typename... U&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_natively_one_of = <link linkend="_toml_8hpp_1a815e932c93486480761ca77d94447901">is_one_of</link>&lt;<link linkend="_toml_8hpp_1a360741865d63894a80dd761769957c4f">native_type_of</link>&lt;T&gt;, U...&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1adab17769fd14cb533f58e9600c31701c"/><section>
    <title>is_node</title>
<indexterm><primary>is_node</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_node</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_node<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;toml::node,&#32;impl::remove_cvref&lt;T&gt;&gt;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_base_of_v&lt;toml::node,&#32;impl::remove_cvref&lt;T&gt;&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ac0b3c59d6626e469f1a2d97359ac0892"/><section>
    <title>is_node_view</title>
<indexterm><primary>is_node_view</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_node_view</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_node_view = <link linkend="_toml_8hpp_1a815e932c93486480761ca77d94447901">impl::is_one_of</link>&lt;impl::remove_cvref&lt;T&gt;, <link linkend="_classnode__view">node_view</link>&lt;node&gt;, <link linkend="_classnode__view">node_view</link>&lt;const node&gt;&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1e443b4df05673f810658b66cb1f628d"/><section>
    <title>is_number</title>
<indexterm><primary>is_number</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_number</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_number = <link linkend="_forward__declarations_8h_1a8b617e5248756c383118df7cf633176c">is_integer</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a400919fd056905f7b68893873e1f96de">is_floating_point</link>&lt;T&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a815e932c93486480761ca77d94447901"/><section>
    <title>is_one_of</title>
<indexterm><primary>is_one_of</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_one_of</secondary></indexterm>
<computeroutput>template&lt;typename T , typename... U&gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_one_of = (<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link> || ... || std::is_same_v&lt;T, U&gt;)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a5d9214f3694adcc143822884ec06aac6"/><section>
    <title>is_string</title>
<indexterm><primary>is_string</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_string</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_string<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;std::string&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ae8325165bb42cc419d4b55c888a0d69f"/><section>
    <title>is_time</title>
<indexterm><primary>is_time</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_time</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_time<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;std::is_same_v&lt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::remove_cvref&lt;impl::wrap_node&lt;impl::remove_cvref&lt;T&gt;&gt;&gt;,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value&lt;time&gt;</link>&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1afced5bc5ef559606e3d75268ca601709"/><section>
    <title>is_value</title>
<indexterm><primary>is_value</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_value</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_value = <link linkend="_forward__declarations_8h_1a5d9214f3694adcc143822884ec06aac6">is_string</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a1e443b4df05673f810658b66cb1f628d">is_number</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a3dc64661a1bb4eb998b3b28a1893ee6b">is_boolean</link>&lt;T&gt; || <link linkend="_forward__declarations_8h_1a7ecc8ff96d2556cce78ebef9c0433601">is_chronological</link>&lt;T&gt;<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af586d464952e4eac442a23643c69618d"/><section>
    <title>is_wide_string</title>
<indexterm><primary>is_wide_string</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>is_wide_string</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> is_wide_string<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_one_of&lt;std::decay_t&lt;T&gt;,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*,&#32;<emphasis role="keywordtype">wchar_t</emphasis>*,&#32;std::wstring_view,&#32;std::wstring&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1af493727019d023763b73c4ee58a1e327"/><section>
    <title>node_type_friendly_names</title>
<indexterm><primary>node_type_friendly_names</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_type_friendly_names</secondary></indexterm>
<para><computeroutput>constexpr std::string_view node_type_friendly_names[]<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;none&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;table&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;array&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;string&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;integer&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;floating-point&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;boolean&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;date&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;time&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;date-time&quot;</emphasis><link linkend="_conformance__burntsushi__valid_8cpp_1a3a352c2235a269bac37d1a34a19cde48">sv</link>
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a2ca921a72e58d33056ffcf88b9a2ae8d"/><section>
    <title>node_type_of</title>
<indexterm><primary>node_type_of</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>node_type_of</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr node_type node_type_of = <link linkend="_structnode__type__getter">node_type_getter</link>&lt;<link linkend="_toml_8hpp_1a0f4621a6694e07daea7a5c0282138524">unwrap_node</link>&lt;remove_cvref&lt;T&gt;&gt;&gt;<link linkend="_classvalue">::value</link><computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab28140ef75c3f18305fb795d6a7917c5"/><section>
    <title>preserve_source_value_flags</title>
<indexterm><primary>preserve_source_value_flags</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>preserve_source_value_flags</secondary></indexterm>
<para><computeroutput>constexpr <link linkend="_forward__declarations_8h_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link> preserve_source_value_flags<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a1234ac91a810b3bd926ed6721ad1e44a">POXY_IMPLEMENTATION_DETAIL</link>(<link linkend="_toml_8hpp_1a0c7177c8470bcc9d80d5b97c482f4a86">value_flags</link>{&#32;<emphasis role="keyword">static_cast&lt;</emphasis>std::underlying_type_t&lt;value_flags&gt;<emphasis role="keyword">&gt;</emphasis>(-1)&#32;})
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a2545d18c6766d54922be39e868fe4bf6"/><section>
    <title>quote_dates_and_times</title>
<indexterm><primary>quote_dates_and_times</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>quote_dates_and_times</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> quote_dates_and_times = (1ull &lt;&lt; 0)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a7ae1c6e457ad741d30ce82ed08c78ab1"/><section>
    <title>quote_infinities_and_nans</title>
<indexterm><primary>quote_infinities_and_nans</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>quote_infinities_and_nans</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> quote_infinities_and_nans = (1ull &lt;&lt; 1)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1ab6c9a08132134d6f8fb431cf7e71c022"/><section>
    <title>relaxed_float_precision</title>
<indexterm><primary>relaxed_float_precision</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>relaxed_float_precision</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> relaxed_float_precision = (1ull &lt;&lt; 11)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a9349d47dff26b543042f8d1ffb50e28c"/><section>
    <title>terse_key_value_pairs</title>
<indexterm><primary>terse_key_value_pairs</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>terse_key_value_pairs</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1ab0a3cf12ff4c3246e9815af23799e4dd">TOML_CLOSED_FLAGS_ENUM</link> terse_key_value_pairs = (1ull &lt;&lt; 12)</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1aa188664cce4904ae8832f7fa59f10211"/><section>
    <title>TOML_ABI_NAMESPACE_END</title>
<indexterm><primary>TOML_ABI_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ABI_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>TOML_ABI_NAMESPACE_END</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1add7da6ab746a2f655de5a68f56dc763a"/><section>
    <title>TOML_ANON_NAMESPACE_END</title>
<indexterm><primary>TOML_ANON_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ANON_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>TOML_ANON_NAMESPACE_END</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a3e6bf84af897e30e783c8365170eb278"/><section>
    <title>TOML_ANON_NAMESPACE_START</title>
<indexterm><primary>TOML_ANON_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ANON_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>TOML_ANON_NAMESPACE_START</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">{
&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;charconv_buffer_length&#32;=&#32;0
</programlisting></section>
<anchor xml:id="_toml_8hpp_1a56df52d1a29373a87698fdc09a1c1c7a"/><section>
    <title>TOML_DISABLE_ARITHMETIC_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_ARITHMETIC_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_ARITHMETIC_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_DISABLE_ARITHMETIC_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a742c76bbbcc2c09ffc9988274cdd9e27"/><section>
    <title>TOML_DISABLE_SPAM_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_SPAM_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_SPAM_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_DISABLE_SPAM_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a566b4d503dc0a1530624a88f33eeb0e2"/><section>
    <title>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_DISABLE_SUGGEST_ATTR_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a228a86971bda7538082be21536653952"/><section>
    <title>TOML_DISABLE_SWITCH_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_SWITCH_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_SWITCH_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_DISABLE_SWITCH_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a6c2a5b158c0a6d208edd992229d91d78"/><section>
    <title>TOML_DISABLE_WARNINGS</title>
<indexterm><primary>TOML_DISABLE_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_DISABLE_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_DISABLE_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a4e1f9eaceb60becba33cd64d3a85e3ed"/><section>
    <title>TOML_ENABLE_WARNINGS</title>
<indexterm><primary>TOML_ENABLE_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_ENABLE_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_ENABLE_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a66ea8ec36b215f9ccb1b419f52b89805"/><section>
    <title>TOML_IMPL_NAMESPACE_END</title>
<indexterm><primary>TOML_IMPL_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_IMPL_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>TOML_IMPL_NAMESPACE_END</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1af62a64490c99e43956a0f41548262369"/><section>
    <title>TOML_IMPL_NAMESPACE_START</title>
<indexterm><primary>TOML_IMPL_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_IMPL_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>TOML_IMPL_NAMESPACE_START</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">{
&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>node_ptr&#32;=&#32;std::unique_ptr&lt;node&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1afa65688cac47ce86021fef8d739f9fd8"/><section>
    <title>TOML_NAMESPACE_END</title>
<indexterm><primary>TOML_NAMESPACE_END</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>TOML_NAMESPACE_END</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a24e5c42f7e94b0b0f3212744874731e6"/><section>
    <title>TOML_NAMESPACE_START</title>
<indexterm><primary>TOML_NAMESPACE_START</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_NAMESPACE_START</secondary></indexterm>
<para><computeroutput>TOML_NAMESPACE_START</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">{







&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>optional&#32;=&#32;std::optional&lt;T&gt;
</programlisting></section>
<anchor xml:id="_toml_8hpp_1ae30c04e74c3148bfedf82afa2af560f9"/><section>
    <title>TOML_POP_WARNINGS</title>
<indexterm><primary>TOML_POP_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_POP_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_POP_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a1d1e6be8ad92960edb7b1683a14d8304"/><section>
    <title>TOML_PUSH_WARNINGS</title>
<indexterm><primary>TOML_PUSH_WARNINGS</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>TOML_PUSH_WARNINGS</secondary></indexterm>
<para><computeroutput>TOML_PUSH_WARNINGS</computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1adc25ea9f06030e43e1cf5333d39e3237"/><section>
    <title>utf8_byte_order_mark</title>
<indexterm><primary>utf8_byte_order_mark</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>utf8_byte_order_mark</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a31ffc2d7129c04c13914b97c0a6e8417">TOML_INTERNAL_LINKAGE</link> constexpr auto utf8_byte_order_mark = &quot;\xEF\xBB\xBF&quot;sv<computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a0c7177c8470bcc9d80d5b97c482f4a86"/><section>
    <title>value_flags</title>
<indexterm><primary>value_flags</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>value_flags</secondary></indexterm>
<para><computeroutput>enum <link linkend="_preprocessor_8h_1aa1fd95f7d76d1d3b628ea04378447d0e">TOML_OPEN_FLAGS_ENUM</link> value_flags<computeroutput>[strong]</computeroutput></computeroutput></para></section>
<anchor xml:id="_toml_8hpp_1a165b6f8b86d0dd7f59d0cc6f3db5777d"/><section>
    <title>value_retrieval_is_nothrow</title>
<indexterm><primary>value_retrieval_is_nothrow</primary><secondary>toml.hpp</secondary></indexterm>
<indexterm><primary>toml.hpp</primary><secondary>value_retrieval_is_nothrow</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> value_retrieval_is_nothrow<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;!std::is_same_v&lt;remove_cvref&lt;T&gt;,&#32;std::string&gt;




&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!is_wide_string&lt;T&gt;
</programlisting></section>
</section>
</section>
