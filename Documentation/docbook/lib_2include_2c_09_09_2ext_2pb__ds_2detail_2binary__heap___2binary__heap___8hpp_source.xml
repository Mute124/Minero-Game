<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_source" xml:lang="en-US">
<title>binary_heap_.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_BINARY_HEAP_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_BINARY_HEAP_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;queue&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/cond_dealtor.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/cond_dealtor.hpp&gt;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
49 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/entry_cmp.hpp&gt;</emphasis>
50 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/entry_pred.hpp&gt;</emphasis>
51 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/resize_policy.hpp&gt;</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp&gt;</emphasis>
53 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/const_iterator.hpp&gt;</emphasis>
54 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BINARY_HEAP_TRACE_</emphasis>
55 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
56 <emphasis role="preprocessor">#endif</emphasis>
57 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
58 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
59 
60 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
61 {
62 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
63 &#32;&#32;{
64 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
65 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Value_Type,&#32;typename&#32;Cmp_Fn,&#32;typename&#32;_Alloc&gt;</emphasis>
66 
67 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
68 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;binary_heap&lt;Value_Type,&#32;Cmp_Fn,&#32;_Alloc&gt;</emphasis>
69 
70 <emphasis role="preprocessor">#define&#32;PB_DS_ENTRY_CMP_DEC&#32;\</emphasis>
71 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;entry_cmp&lt;Value_Type,&#32;Cmp_Fn,&#32;_Alloc,&#32;is_simple&lt;Value_Type&gt;::value&gt;::type</emphasis>
72 
73 <emphasis role="preprocessor">#define&#32;PB_DS_RESIZE_POLICY_DEC&#32;\</emphasis>
74 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;__gnu_pbds::detail::resize_policy&lt;typename&#32;_Alloc::size_type&gt;</emphasis>
75 
83 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;Cmp_Fn,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>binary_heap
85 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1ab56f9a7efa7e1392c145cc40f7c18c4d">PB_DS_ENTRY_CMP_DEC</link>,&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a77a3618989e860d88c6c807d3097e86d">PB_DS_RESIZE_POLICY_DEC</link>
86 &#32;&#32;&#32;&#32;{
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
88 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8ed03b288264784d2921cdbcf87c9843">value_type</link>;
89 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Cmp_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ace06fb0c47c85b7705035d92dff29668">cmp_fn</link>;
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a421f1f369361748bff8360ff6e4f7aa8">allocator_type</link>;
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>;
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a45f225e824073eb554fb38b03cce660e">difference_type</link>;
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1ab56f9a7efa7e1392c145cc40f7c18c4d">PB_DS_ENTRY_CMP_DEC</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ad1c08acb49cb65c74515d9fa0c16d3ca">entry_cmp</link>;
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a77a3618989e860d88c6c807d3097e86d">PB_DS_RESIZE_POLICY_DEC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a3e8adf084730c6db63bad539db15b87e">resize_policy</link>;
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1cond__dealtor">cond_dealtor&lt;value_type, _Alloc&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a191e752c3d0771110b3bfb6941aa152e">cond_dealtor_t</link>;
96 
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
99 &#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;simple_value&#32;=&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple">is_simple&lt;value_type&gt;::value</link>
101 &#32;&#32;&#32;&#32;};
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;integral_constant&lt;int,&#32;simple_value&gt;&#32;&#32;no_throw_copies_t;
104 
105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, value_type&gt;</link>&#32;&#32;&#32;&#32;&#32;__rebind_v;
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">__rebind_v::allocator_type</link>&#32;&#32;&#32;value_allocator;
107 
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::pointer&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a33b73d6a2886fe5c1b0b34a49bc3f329">pointer</link>;
110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::const_pointer&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ad69fa9b8eb0356c6f4ef024d0da4e20d">const_pointer</link>;
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::reference&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a0e321a771482efd0fb695360184a1576">reference</link>;
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::const_reference&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>;
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__conditional_type&lt;simple_value,
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8ed03b288264784d2921cdbcf87c9843">value_type</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a33b73d6a2886fe5c1b0b34a49bc3f329">pointer</link>&gt;::__type
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a7be690cb7671a23027c6561ffabd3dbd">entry</link>;
117 
118 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">rebind_traits&lt;_Alloc, entry&gt;::allocator_type</link>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a66046dceb9409e4bae0e1b87341f6ab6">entry_allocator</link>;
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, entry&gt;::pointer</link>&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>;
122 
123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8ed03b288264784d2921cdbcf87c9843">value_type</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a7be690cb7671a23027c6561ffabd3dbd">entry</link>,
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simple_value,&#32;_Alloc&gt;
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1acafe2b521ed3ce67d4f8c4ba5ee891e4">point_const_iterator</link>;
126 
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">point_const_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1aa4b163c448e0c0e4f87e9a5161b4cb22">point_iterator</link>;
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8ed03b288264784d2921cdbcf87c9843">value_type</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a7be690cb7671a23027c6561ffabd3dbd">entry</link>,
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simple_value,&#32;_Alloc&gt;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a1c15b72da293e96ab9db736cc3cf29c2">const_iterator</link>;
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">const_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4aedf93120132aa64fcc3e78bc13db72">iterator</link>;
134 
135 
136 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a0474a5a6258937001d241202b6e281a3">binary_heap</link>();
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ae09b20f4bc3bd976097c9fc4b2c6a16c">binary_heap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ace06fb0c47c85b7705035d92dff29668">cmp_fn</link>&amp;);
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a5a30dc932b9be52fd4ab671005195d09">binary_heap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link>&amp;);
141 
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
143 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a1795ead759505e5a6c0fdc80a81a7502">swap</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link>&amp;);
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a6fe7e223324ff79128bed748108e6c6c">~binary_heap</link>();
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8daaae9804009418e404794e244525df">empty</link>()&#32;<emphasis role="keyword">const</emphasis>;
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
151 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1aa873f31729a13d6de8c9b0a5759c3e14">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
152 
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
154 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8bcdc980354039ee7e6ea4dafa93057d">max_size</link>()&#32;<emphasis role="keyword">const</emphasis>;
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;Cmp_Fn&amp;
157 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a1355fa95683d652cb54f609520635d1d">get_cmp_fn</link>();
158 
159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;
160 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a9a5969e3fc77935c1789439c9f1ada40">get_cmp_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">point_iterator</link>
163 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a082c7f05e6ecfad134d4090e5fa66b24">push</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>);
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1aca8d561d1cd5715c4ef20e56b4dfb28f">modify</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">point_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>);
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>
169 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a87c3a53018f7d5d99abdabaae6f2d01b">top</link>()&#32;<emphasis role="keyword">const</emphasis>;
170 
171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
172 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a6336d83e563f586eee0fcab937775ac0">pop</link>();
173 
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ab9720456af5d5df41977934130576ad0">erase</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">point_iterator</link>);
176 
177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
178 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
179 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a46e5968bbc18814a38efd080a8bf5a92">erase_if</link>(Pred);
180 
181 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
182 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8883babd1e8f5c0e3a16e4c60eb4029a">erase_at</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
183 
184 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
185 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a5925c2b25bd072921430faf638c0f863">erase_at</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
186 
187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">iterator</link>
188 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a65c3d47a04ce7cec5ca4f7ecff87bc10">begin</link>();
189 
190 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">const_iterator</link>
191 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a260dfa667ef7793f685d889613ff2b86">begin</link>()&#32;<emphasis role="keyword">const</emphasis>;
192 
193 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">iterator</link>
194 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a0578d7abb7e628452279be8d64448782">end</link>();
195 
196 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">const_iterator</link>
197 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a59c238b96f8e0bd94e1824081221ffab">end</link>()&#32;<emphasis role="keyword">const</emphasis>;
198 
199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
200 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a1b5dd05d856e71710f7f8517885feb03">clear</link>();
201 
202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
203 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
204 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a1d8bccd53b62c81fce1a4858f51db906">split</link>(Pred,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link>&amp;);
205 
206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
207 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1af45ddae4a4e8bf17e1a2d6d2fa0e52a7">join</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link>&amp;);
208 
209 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BINARY_HEAP_TRACE_</emphasis>
210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
211 &#32;&#32;&#32;&#32;&#32;&#32;trace()&#32;<emphasis role="keyword">const</emphasis>;
212 <emphasis role="preprocessor">#endif</emphasis>
213 
214 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
216 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
217 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ae8eb87b2715f929fe0a6e1e848a21ee8">copy_from_range</link>(It,&#32;It);
218 
219 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
221 &#32;&#32;&#32;&#32;&#32;&#32;value_swap(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link>&amp;);
222 
223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
224 &#32;&#32;&#32;&#32;&#32;&#32;insert_value(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
225 
226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
227 &#32;&#32;&#32;&#32;&#32;&#32;insert_value(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8ed03b288264784d2921cdbcf87c9843">value_type</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
228 
229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;resize_for_insert_if_needed();
231 
232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;swap_value_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a8ed03b288264784d2921cdbcf87c9843">value_type</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
234 
235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
236 &#32;&#32;&#32;&#32;&#32;&#32;swap_value_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
237 
238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
239 &#32;&#32;&#32;&#32;&#32;&#32;fix(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>);
240 
241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>
242 &#32;&#32;&#32;&#32;&#32;&#32;top_imp(<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)&#32;<emphasis role="keyword">const</emphasis>;
243 
244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1adfb90957aa5f25d5918287764b071c59">const_reference</link>
245 &#32;&#32;&#32;&#32;&#32;&#32;top_imp(<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)&#32;<emphasis role="keyword">const</emphasis>;
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
248 &#32;&#32;&#32;&#32;&#32;&#32;left_child(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>);
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
251 &#32;&#32;&#32;&#32;&#32;&#32;right_child(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>);
252 
253 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
254 &#32;&#32;&#32;&#32;&#32;&#32;parent(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>);
255 
256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
257 &#32;&#32;&#32;&#32;&#32;&#32;resize_for_erase_if_needed();
258 
259 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
260 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>
261 &#32;&#32;&#32;&#32;&#32;&#32;partition(Pred);
262 
263 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
264 &#32;&#32;&#32;&#32;&#32;&#32;make_heap()
265 &#32;&#32;&#32;&#32;&#32;&#32;{
266 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ad1c08acb49cb65c74515d9fa0c16d3ca">entry_cmp</link>&amp;&#32;m_cmp&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ad1c08acb49cb65c74515d9fa0c16d3ca">entry_cmp</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this);
267 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;m_a_entries&#32;+&#32;m_size;
268 &#32;&#32;&#32;&#32;std::make_heap(m_a_entries,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>,&#32;m_cmp);
269 &#32;&#32;&#32;&#32;&#32;&#32;}
270 
271 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
272 &#32;&#32;&#32;&#32;&#32;&#32;push_heap()
273 &#32;&#32;&#32;&#32;&#32;&#32;{
274 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp">entry_cmp</link>&amp;&#32;m_cmp&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp">entry_cmp</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this);
275 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;m_a_entries&#32;+&#32;m_size;
276 &#32;&#32;&#32;&#32;std::push_heap(m_a_entries,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>,&#32;m_cmp);
277 &#32;&#32;&#32;&#32;&#32;&#32;}
278 
279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
280 &#32;&#32;&#32;&#32;&#32;&#32;pop_heap()
281 &#32;&#32;&#32;&#32;&#32;&#32;{
282 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ad1c08acb49cb65c74515d9fa0c16d3ca">entry_cmp</link>&amp;&#32;m_cmp&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1ad1c08acb49cb65c74515d9fa0c16d3ca">entry_cmp</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this);
283 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;m_a_entries&#32;+&#32;m_size;
284 &#32;&#32;&#32;&#32;std::pop_heap(m_a_entries,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>,&#32;m_cmp);
285 &#32;&#32;&#32;&#32;&#32;&#32;}
286 
287 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
288 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
289 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
290 <emphasis role="preprocessor">#endif</emphasis>
291 
292 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BINARY_HEAP_TRACE_</emphasis>
293 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
294 &#32;&#32;&#32;&#32;&#32;&#32;trace_entry(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a7be690cb7671a23027c6561ffabd3dbd">entry</link>&amp;,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)&#32;<emphasis role="keyword">const</emphasis>;
295 
296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
297 &#32;&#32;&#32;&#32;&#32;&#32;trace_entry(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a7be690cb7671a23027c6561ffabd3dbd">entry</link>&amp;,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)&#32;<emphasis role="keyword">const</emphasis>;
298 <emphasis role="preprocessor">#endif</emphasis>
299 
300 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a66046dceb9409e4bae0e1b87341f6ab6">entry_allocator</link>&#32;&#32;&#32;&#32;s_entry_allocator;
301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;value_allocator&#32;&#32;&#32;&#32;s_value_allocator;
302 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;no_throw_copies_t&#32;&#32;s_no_throw_copies_ind;
303 
304 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_size;
305 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a781995de7b1791126e104822253fb141">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_actual_size;
306 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap_1a4fed02211476fffa266eb4c878a6d774">entry_pointer</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_a_entries;
307 &#32;&#32;&#32;&#32;};
308 
309 <emphasis role="preprocessor">#define&#32;PB_DS_ASSERT_VALID(X)&#32;\</emphasis>
310 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__,&#32;__LINE__);)</emphasis>
311 
312 <emphasis role="preprocessor">#define&#32;PB_DS_DEBUG_VERIFY(_Cond)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
313 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_DEBUG_VERIFY_AT(_Cond,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
314 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_message(#_Cond&quot;&#32;assertion&#32;from&#32;%1;:%2;&quot;)&#32;&#32;\</emphasis>
315 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_string(__FILE__)._M_integer(__LINE__)&#32;&#32;&#32;&#32;\</emphasis>
316 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,__file,__line)</emphasis>
317 
318 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp&gt;</emphasis>
319 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp&gt;</emphasis>
320 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp&gt;</emphasis>
321 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/debug_fn_imps.hpp&gt;</emphasis>
322 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/trace_fn_imps.hpp&gt;</emphasis>
323 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp&gt;</emphasis>
324 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/info_fn_imps.hpp&gt;</emphasis>
325 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp&gt;</emphasis>
326 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/split_join_fn_imps.hpp&gt;</emphasis>
327 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/binary_heap_/policy_access_fn_imps.hpp&gt;</emphasis>
328 
329 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
330 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
331 <emphasis role="preprocessor">#undef&#32;PB_DS_ENTRY_CMP_DEC</emphasis>
332 <emphasis role="preprocessor">#undef&#32;PB_DS_RESIZE_POLICY_DEC</emphasis>
333 
334 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
335 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
336 
337 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
