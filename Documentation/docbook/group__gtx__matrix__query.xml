<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__matrix__query" xml:lang="en-US">
<title>GLM_GTX_matrix_query</title>
<indexterm><primary>GLM_GTX_matrix_query</primary></indexterm>
Collaboration diagram for GLM_GTX_matrix_query:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1ga9790ec222ce948c0ff0d8ce927340dba">glm::isNull</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1gae14501c6b14ccda6014cc5350080103d">glm::isNull</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1ga2b98bb30a9fefa7cdea5f1dcddba677b">glm::isNull</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> C, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> R, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, template&lt; <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, typename, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> &gt; class matType&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1gaee935d145581c82e82b154ccfd78ad91">glm::isIdentity</link> (matType&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>, <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a5c71a5e59a53413cd6c270266d63b031">R</link>, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1gae785af56f47ce220a1609f7f84aa077a">glm::isNormalized</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1gaa068311695f28f5f555f5f746a6a66fb">glm::isNormalized</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1ga4d9bb4d0465df49fedfad79adc6ce4ad">glm::isNormalized</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> C, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> R, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, template&lt; <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, typename, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> &gt; class matType&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_group__gtx__matrix__query_1ga58f3289f74dcab653387dd78ad93ca40">glm::isOrthogonal</link> (matType&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>, <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a5c71a5e59a53413cd6c270266d63b031">R</link>, T, Q &gt; const &amp;m, T const &amp;<link linkend="_group__ext__scalar__constants_1ga2a1e57fc5592b69cfae84174cbfc9429">epsilon</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/matrix_query.hpp&gt; to use the features of this extension.</para>

<para>Query to evaluate matrix properties </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__matrix__query_1gaee935d145581c82e82b154ccfd78ad91"/><section>
    <title>isIdentity()</title>
<indexterm><primary>isIdentity</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isIdentity</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> C, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> R, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, template&lt; <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, typename, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> &gt; class matType&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isIdentity (matType&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>, <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a5c71a5e59a53413cd6c270266d63b031">R</link>, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix is an identity matrix. From GLM_GTX_matrix_query extension. </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_gaee935d145581c82e82b154ccfd78ad91_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1gae785af56f47ce220a1609f7f84aa077a"/><section>
    <title>isNormalized()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>isNormalized</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isNormalized</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isNormalized (<link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix is a normalized matrix. From GLM_GTX_matrix_query extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_gae785af56f47ce220a1609f7f84aa077a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_gae785af56f47ce220a1609f7f84aa077a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1gaa068311695f28f5f555f5f746a6a66fb"/><section>
    <title>isNormalized()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>isNormalized</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isNormalized</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isNormalized (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix is a normalized matrix. From GLM_GTX_matrix_query extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_gaa068311695f28f5f555f5f746a6a66fb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1ga4d9bb4d0465df49fedfad79adc6ce4ad"/><section>
    <title>isNormalized()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>isNormalized</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isNormalized</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isNormalized (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix is a normalized matrix. From GLM_GTX_matrix_query extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_ga4d9bb4d0465df49fedfad79adc6ce4ad_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1ga9790ec222ce948c0ff0d8ce927340dba"/><section>
    <title>isNull()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>isNull</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isNull</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isNull (<link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix a null matrix. From GLM_GTX_matrix_query extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_ga9790ec222ce948c0ff0d8ce927340dba_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_ga9790ec222ce948c0ff0d8ce927340dba_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1gae14501c6b14ccda6014cc5350080103d"/><section>
    <title>isNull()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>isNull</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isNull</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isNull (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix a null matrix. From GLM_GTX_matrix_query extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_gae14501c6b14ccda6014cc5350080103d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1ga2b98bb30a9fefa7cdea5f1dcddba677b"/><section>
    <title>isNull()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>isNull</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isNull</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isNull (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix is a null matrix. From GLM_GTX_matrix_query extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_ga2b98bb30a9fefa7cdea5f1dcddba677b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__query_1ga58f3289f74dcab653387dd78ad93ca40"/><section>
    <title>isOrthogonal()</title>
<indexterm><primary>isOrthogonal</primary><secondary>GLM_GTX_matrix_query</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_query</primary><secondary>isOrthogonal</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> C, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> R, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, template&lt; <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, <link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>, typename, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> &gt; class matType&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> glm::isOrthogonal (matType&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1ac4cf4b2ab929bd23951a8676eeac086b">C</link>, <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a5c71a5e59a53413cd6c270266d63b031">R</link>, T, Q &gt; const &amp; m, T const &amp; epsilon)</computeroutput></para>
<para>Return whether a matrix is an orthonormalized matrix. From GLM_GTX_matrix_query extension. </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__query_ga58f3289f74dcab653387dd78ad93ca40_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
