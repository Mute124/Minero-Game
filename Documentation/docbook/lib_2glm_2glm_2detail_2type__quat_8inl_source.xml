<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2detail_2type__quat_8inl_source" xml:lang="en-US">
<title>type_quat.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/detail/type_quat.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&quot;../trigonometric.hpp&quot;</emphasis>
2 <emphasis role="preprocessor">#include&#32;&quot;../exponential.hpp&quot;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&quot;../ext/quaternion_geometric.hpp&quot;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
5 
6 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
7 <emphasis role="keyword">namespace&#32;</emphasis>detail
8 {
9 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>genTypeTrait&lt;qua&lt;T&gt;&#32;&gt;
11 &#32;&#32;&#32;&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceglm_1_1detail_1a2b685825395a537617a73f60d1f21e60">genTypeEnum</link>&#32;GENTYPE&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a2b685825395a537617a73f60d1f21e60ac028933dd584412cd92580bfb44bf0c4">GENTYPE_QUAT</link>;
13 &#32;&#32;&#32;&#32;};
14 
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_dot&lt;qua&lt;T,&#32;Q&gt;,&#32;T,&#32;Aligned&gt;
17 &#32;&#32;&#32;&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">static</emphasis>&#32;T&#32;<link linkend="_structglm_1_1detail_1_1compute__dot_3_01qua_3_01_t_00_01_q_01_4_00_01_t_00_01_aligned_01_4_1a627254877f9a4a925f704ef8ca8f5938">call</link>(<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;tmp(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.w,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.x&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.y&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.z&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>.z);
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(tmp.x&#32;+&#32;tmp.y)&#32;+&#32;(tmp.z&#32;+&#32;tmp.w);
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
23 &#32;&#32;&#32;&#32;};
24 
25 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_quat_add
27 &#32;&#32;&#32;&#32;{
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__quat__add_1a1dcc74730a2f5adc03c898baac71fbde">call</link>(<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;p)
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>(q.<link linkend="_structglm_1_1qua_1ad8a7f933070e6e4382d9fce4a6efecd6">w</link>&#32;+&#32;p.<link linkend="_structglm_1_1qua_1ad8a7f933070e6e4382d9fce4a6efecd6">w</link>,&#32;q.<link linkend="_structglm_1_1qua_1ae0e0786cb5ef565606ecc3d4d8255fd3">x</link>&#32;+&#32;p.<link linkend="_structglm_1_1qua_1ae0e0786cb5ef565606ecc3d4d8255fd3">x</link>,&#32;q.<link linkend="_structglm_1_1qua_1a3183bedd482933c6723e6ebcf409e178">y</link>&#32;+&#32;p.<link linkend="_structglm_1_1qua_1a3183bedd482933c6723e6ebcf409e178">y</link>,&#32;q.<link linkend="_structglm_1_1qua_1a751f58e48134d3bd65253a43708a552d">z</link>&#32;+&#32;p.<link linkend="_structglm_1_1qua_1a751f58e48134d3bd65253a43708a552d">z</link>);
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
32 &#32;&#32;&#32;&#32;};
33 
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
35 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_quat_sub
36 &#32;&#32;&#32;&#32;{
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__quat__sub_1a5f3f0fdc21fa7b08aa6539cbec709a8c">call</link>(<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;p)
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>(q.<link linkend="_structglm_1_1qua_1ad8a7f933070e6e4382d9fce4a6efecd6">w</link>&#32;-&#32;p.<link linkend="_structglm_1_1qua_1ad8a7f933070e6e4382d9fce4a6efecd6">w</link>,&#32;q.<link linkend="_structglm_1_1qua_1ae0e0786cb5ef565606ecc3d4d8255fd3">x</link>&#32;-&#32;p.<link linkend="_structglm_1_1qua_1ae0e0786cb5ef565606ecc3d4d8255fd3">x</link>,&#32;q.<link linkend="_structglm_1_1qua_1a3183bedd482933c6723e6ebcf409e178">y</link>&#32;-&#32;p.<link linkend="_structglm_1_1qua_1a3183bedd482933c6723e6ebcf409e178">y</link>,&#32;q.<link linkend="_structglm_1_1qua_1a751f58e48134d3bd65253a43708a552d">z</link>&#32;-&#32;p.<link linkend="_structglm_1_1qua_1a751f58e48134d3bd65253a43708a552d">z</link>);
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
41 &#32;&#32;&#32;&#32;};
42 
43 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
44 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_quat_mul_scalar
45 &#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__quat__mul__scalar_1a1171ac56557297588b006b8d3b9a0ff7">call</link>(<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;T&#32;s)
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>(q.<link linkend="_structglm_1_1qua_1ad8a7f933070e6e4382d9fce4a6efecd6">w</link>&#32;*&#32;s,&#32;q.<link linkend="_structglm_1_1qua_1ae0e0786cb5ef565606ecc3d4d8255fd3">x</link>&#32;*&#32;s,&#32;q.<link linkend="_structglm_1_1qua_1a3183bedd482933c6723e6ebcf409e178">y</link>&#32;*&#32;s,&#32;q.<link linkend="_structglm_1_1qua_1a751f58e48134d3bd65253a43708a552d">z</link>&#32;*&#32;s);
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
50 &#32;&#32;&#32;&#32;};
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
53 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_quat_div_scalar
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__quat__div__scalar_1a6b25481b3a8b8cd317a157322fef1c04">call</link>(<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;T&#32;s)
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>(q.<link linkend="_structglm_1_1qua_1ad8a7f933070e6e4382d9fce4a6efecd6">w</link>&#32;/&#32;s,&#32;q.<link linkend="_structglm_1_1qua_1ae0e0786cb5ef565606ecc3d4d8255fd3">x</link>&#32;/&#32;s,&#32;q.<link linkend="_structglm_1_1qua_1a3183bedd482933c6723e6ebcf409e178">y</link>&#32;/&#32;s,&#32;q.<link linkend="_structglm_1_1qua_1a751f58e48134d3bd65253a43708a552d">z</link>&#32;/&#32;s);
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
59 &#32;&#32;&#32;&#32;};
60 
61 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Aligned&gt;
62 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_quat_mul_vec4
63 &#32;&#32;&#32;&#32;{
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__quat__mul__vec4_1a637b14baf0ce1620b3811c6306588893">call</link>(<link linkend="_structglm_1_1qua">qua&lt;T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(q&#32;*&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w);
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
68 &#32;&#32;&#32;&#32;};
69 }<emphasis role="comment">//namespace&#32;detail</emphasis>
70 
71 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Component&#32;accesses&#32;--</emphasis>
72 
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
74 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;T&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1ad232f51e4dfb4ebecb3169dda9639e56">qua&lt;T, Q&gt;::operator[]</link>(<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1qua_1a26b6fecabdb2f72a909ad2f7a3d2e3dc">qua&lt;T, Q&gt;::length_type</link>&#32;i)
75 &#32;&#32;&#32;&#32;{
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
77 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)[i];
79 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)[i];
81 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
82 &#32;&#32;&#32;&#32;}
83 
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
85 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_structglm_1_1qua_1ad232f51e4dfb4ebecb3169dda9639e56">qua&lt;T, Q&gt;::operator[]</link>(<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structglm_1_1qua_1a26b6fecabdb2f72a909ad2f7a3d2e3dc">qua&lt;T, Q&gt;::length_type</link>&#32;i)<emphasis role="keyword">&#32;const</emphasis>
86 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
88 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)[i];
90 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)[i];
92 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
93 &#32;&#32;&#32;&#32;}
94 
95 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Implicit&#32;basic&#32;constructors&#32;--</emphasis>
96 
97 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>()
100 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;!=&#32;GLM_CTOR_INIT_DISABLE</emphasis>
101 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(1),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(0),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(0),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(0)
103 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(0),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(0),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(0),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(1)
105 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
106 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
108 
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
111 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(q.w),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(q.x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(q.y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(q.z)
113 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(q.x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(q.y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(q.z),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(q.w)
115 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
117 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
118 
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
120 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
121 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(qua&lt;T,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
122 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(q.w),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(q.x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(q.y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(q.z)
124 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(q.x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(q.y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(q.z),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(q.w)
126 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
127 &#32;&#32;&#32;&#32;{}
128 
129 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Explicit&#32;basic&#32;constructors&#32;--</emphasis>
130 
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
132 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(T&#32;s,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
133 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(s),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z)
135 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(s)
137 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
138 &#32;&#32;&#32;&#32;{}
139 
140 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
141 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(T&#32;_w,&#32;T&#32;_x,&#32;T&#32;_y,&#32;T&#32;_z)
142 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(_w),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(_x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(_y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(_z)
144 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(_x),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(_y),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(_z),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(_w)
146 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
147 &#32;&#32;&#32;&#32;{}
148 
149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;constructors&#32;--</emphasis>
150 
151 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
152 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
153 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(qua&lt;U,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
154 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;ifdef&#32;GLM_FORCE_QUAT_DATA_WXYZ</emphasis>
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.w)),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.x)),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.y)),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.z))
156 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.x)),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.y)),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.z)),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.w))
158 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
159 &#32;&#32;&#32;&#32;{}
160 
161 &#32;&#32;&#32;&#32;<emphasis role="comment">//template&lt;typename&#32;valType&gt;</emphasis>
162 &#32;&#32;&#32;&#32;<emphasis role="comment">//GLM_FUNC_QUALIFIER&#32;qua&lt;valType&gt;::qua</emphasis>
163 &#32;&#32;&#32;&#32;<emphasis role="comment">//(</emphasis>
164 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;valType&#32;const&amp;&#32;pitch,</emphasis>
165 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;valType&#32;const&amp;&#32;yaw,</emphasis>
166 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;valType&#32;const&amp;&#32;roll</emphasis>
167 &#32;&#32;&#32;&#32;<emphasis role="comment">//)</emphasis>
168 &#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
169 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;vec&lt;3,&#32;valType&gt;&#32;eulerAngle(pitch&#32;*&#32;valType(0.5),&#32;yaw&#32;*&#32;valType(0.5),&#32;roll&#32;*&#32;valType(0.5));</emphasis>
170 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;vec&lt;3,&#32;valType&gt;&#32;c&#32;=&#32;glm::cos(eulerAngle&#32;*&#32;valType(0.5));</emphasis>
171 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;vec&lt;3,&#32;valType&gt;&#32;s&#32;=&#32;glm::sin(eulerAngle&#32;*&#32;valType(0.5));</emphasis>
172 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
173 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;this-&gt;w&#32;=&#32;c.x&#32;*&#32;c.y&#32;*&#32;c.z&#32;+&#32;s.x&#32;*&#32;s.y&#32;*&#32;s.z;</emphasis>
174 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;this-&gt;x&#32;=&#32;s.x&#32;*&#32;c.y&#32;*&#32;c.z&#32;-&#32;c.x&#32;*&#32;s.y&#32;*&#32;s.z;</emphasis>
175 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;this-&gt;y&#32;=&#32;c.x&#32;*&#32;s.y&#32;*&#32;c.z&#32;+&#32;s.x&#32;*&#32;c.y&#32;*&#32;s.z;</emphasis>
176 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;this-&gt;z&#32;=&#32;c.x&#32;*&#32;c.y&#32;*&#32;s.z&#32;-&#32;s.x&#32;*&#32;s.y&#32;*&#32;c.z;</emphasis>
177 &#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
178 
179 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
180 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
181 &#32;&#32;&#32;&#32;{
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;norm_u_norm_v&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(<link linkend="_namespacedot">dot</link>(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>)&#32;*&#32;<link linkend="_namespacedot">dot</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>));
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;real_part&#32;=&#32;norm_u_norm_v&#32;+&#32;<link linkend="_namespacedot">dot</link>(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;t;
185 
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(real_part&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1.e-6f)&#32;*&#32;norm_u_norm_v)
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;u&#32;and&#32;v&#32;are&#32;exactly&#32;opposite,&#32;rotate&#32;180&#32;degrees</emphasis>
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;around&#32;an&#32;arbitrary&#32;orthogonal&#32;axis.&#32;Axis&#32;normalisation</emphasis>
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;can&#32;happen&#32;later,&#32;when&#32;we&#32;normalise&#32;the&#32;quaternion.</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;real_part&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0);
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>.x)&#32;&gt;&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>.z)&#32;?&#32;vec&lt;3,&#32;T,&#32;Q&gt;(-<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>.y,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>.x,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))&#32;:&#32;vec&lt;3,&#32;T,&#32;Q&gt;(static_cast&lt;T&gt;(0),&#32;-<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>.<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>.<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Otherwise,&#32;build&#32;quaternion&#32;the&#32;standard&#32;way.</emphasis>
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="_namespacecross">cross</link>(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;<link linkend="_namespacenormalize">normalize</link>(qua&lt;T,&#32;Q&gt;(real_part,&#32;t.x,&#32;t.y,&#32;t.z));
201 &#32;&#32;&#32;&#32;}
202 
203 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
204 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;eulerAngle)
205 &#32;&#32;&#32;&#32;{
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;c&#32;=&#32;<link linkend="_group__core__func__trigonometric_1ga54745147add8b4fa05642f5c71f6833e">glm::cos</link>(eulerAngle&#32;*&#32;T(0.5));
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;s&#32;=&#32;<link linkend="_group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414">glm::sin</link>(eulerAngle&#32;*&#32;T(0.5));
208 
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;c.x&#32;*&#32;c.y&#32;*&#32;c.z&#32;+&#32;s.x&#32;*&#32;s.y&#32;*&#32;s.z;
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;s.x&#32;*&#32;c.y&#32;*&#32;c.z&#32;-&#32;c.x&#32;*&#32;s.y&#32;*&#32;s.z;
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;c.x&#32;*&#32;s.y&#32;*&#32;c.z&#32;+&#32;s.x&#32;*&#32;c.y&#32;*&#32;s.z;
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;c.x&#32;*&#32;c.y&#32;*&#32;s.z&#32;-&#32;s.x&#32;*&#32;s.y&#32;*&#32;c.z;
213 &#32;&#32;&#32;&#32;}
214 
215 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
216 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
217 &#32;&#32;&#32;&#32;{
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;<link linkend="_group__gtc__quaternion_1ga3d350068ce0d14e4496cb844eb79a05f">quat_cast</link>(m);
219 &#32;&#32;&#32;&#32;}
220 
221 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
222 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1qua_1ac13a8870ebff4555234151373144321e">qua&lt;T, Q&gt;::qua</link>(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
223 &#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;<link linkend="_group__gtc__quaternion_1ga3d350068ce0d14e4496cb844eb79a05f">quat_cast</link>(m);
225 &#32;&#32;&#32;&#32;}
226 
227 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_HAS_EXPLICIT_CONVERSION_OPERATORS</emphasis>
228 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
229 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;::operator&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;()<emphasis role="keyword">&#32;const</emphasis>
230 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__gtc__quaternion_1ga485b4423fd52c3ae1ff1051bda614c93">mat3_cast</link>(*<emphasis role="keyword">this</emphasis>);
232 &#32;&#32;&#32;&#32;}
233 
234 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
235 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;::operator&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;()<emphasis role="keyword">&#32;const</emphasis>
236 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__gtc__quaternion_1gaa6dc632fb953f612d07ad5b533d0390f">mat4_cast</link>(*<emphasis role="keyword">this</emphasis>);
238 &#32;&#32;&#32;&#32;}
239 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis><emphasis role="comment">//GLM_HAS_EXPLICIT_CONVERSION_OPERATORS</emphasis>
240 
241 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
242 
243 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1a41bd1920d328356782619dc5e07c01d5">qua&lt;T, Q&gt;::operator=</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;q.w;
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;q.x;
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;q.y;
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;q.z;
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
253 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
254 
255 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
256 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
257 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1a41bd1920d328356782619dc5e07c01d5">qua&lt;T, Q&gt;::operator=</link>(qua&lt;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
258 &#32;&#32;&#32;&#32;{
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.w);
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.x);
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.y);
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(q.z);
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
264 &#32;&#32;&#32;&#32;}
265 
266 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
267 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
268 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1af03715fcca99868dbe7e57fdd146e3f0">qua&lt;T, Q&gt;::operator+=</link>(qua&lt;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
269 &#32;&#32;&#32;&#32;{
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;=&#32;detail::compute_quat_add&lt;T,&#32;Q,&#32;<link linkend="_structglm_1_1detail_1_1is__aligned_1a50a4715cd385591476c2c7fe84d6c58c">detail::is_aligned&lt;Q&gt;::value</link>&gt;::call(*<emphasis role="keyword">this</emphasis>,&#32;qua&lt;T,&#32;Q&gt;(q)));
271 &#32;&#32;&#32;&#32;}
272 
273 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
274 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
275 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1a5ebb81d8fb87031a4c574256788ee997">qua&lt;T, Q&gt;::operator-=</link>(qua&lt;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
276 &#32;&#32;&#32;&#32;{
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;=&#32;detail::compute_quat_sub&lt;T,&#32;Q,&#32;<link linkend="_structglm_1_1detail_1_1is__aligned_1a50a4715cd385591476c2c7fe84d6c58c">detail::is_aligned&lt;Q&gt;::value</link>&gt;::call(*<emphasis role="keyword">this</emphasis>,&#32;qua&lt;T,&#32;Q&gt;(q)));
278 &#32;&#32;&#32;&#32;}
279 
280 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
281 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
282 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1a7bca3a25aa093f6e0fc797c3ddcefaa6">qua&lt;T, Q&gt;::operator*=</link>(qua&lt;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)
283 &#32;&#32;&#32;&#32;{
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;p(*<emphasis role="keyword">this</emphasis>);
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;q(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>);
286 
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;p.w&#32;*&#32;q.w&#32;-&#32;p.x&#32;*&#32;q.x&#32;-&#32;p.y&#32;*&#32;q.y&#32;-&#32;p.z&#32;*&#32;q.z;
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;p.w&#32;*&#32;q.x&#32;+&#32;p.x&#32;*&#32;q.w&#32;+&#32;p.y&#32;*&#32;q.z&#32;-&#32;p.z&#32;*&#32;q.y;
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;p.w&#32;*&#32;q.y&#32;+&#32;p.y&#32;*&#32;q.w&#32;+&#32;p.z&#32;*&#32;q.x&#32;-&#32;p.x&#32;*&#32;q.z;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;p.w&#32;*&#32;q.z&#32;+&#32;p.z&#32;*&#32;q.w&#32;+&#32;p.x&#32;*&#32;q.y&#32;-&#32;p.y&#32;*&#32;q.x;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
292 &#32;&#32;&#32;&#32;}
293 
294 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
295 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
296 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1a7bca3a25aa093f6e0fc797c3ddcefaa6">qua&lt;T, Q&gt;::operator*=</link>(U&#32;s)
297 &#32;&#32;&#32;&#32;{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;=&#32;detail::compute_quat_mul_scalar&lt;T,&#32;Q,&#32;<link linkend="_structglm_1_1detail_1_1is__aligned_1a50a4715cd385591476c2c7fe84d6c58c">detail::is_aligned&lt;Q&gt;::value</link>&gt;::call(*<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>U<emphasis role="keyword">&gt;</emphasis>(s)));
299 &#32;&#32;&#32;&#32;}
300 
301 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
302 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
303 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;<link linkend="_structglm_1_1qua_1a3452e9becafebef080a8254beea43f5f">qua&lt;T, Q&gt;::operator/=</link>(U&#32;s)
304 &#32;&#32;&#32;&#32;{
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;=&#32;detail::compute_quat_div_scalar&lt;T,&#32;Q,&#32;<link linkend="_structglm_1_1detail_1_1is__aligned_1a50a4715cd385591476c2c7fe84d6c58c">detail::is_aligned&lt;Q&gt;::value</link>&gt;::call(*<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>U<emphasis role="keyword">&gt;</emphasis>(s)));
306 &#32;&#32;&#32;&#32;}
307 
308 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;bit&#32;operators&#32;--</emphasis>
309 
310 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
311 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
312 &#32;&#32;&#32;&#32;{
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q;
314 &#32;&#32;&#32;&#32;}
315 
316 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
317 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
318 &#32;&#32;&#32;&#32;{
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(-q.w,&#32;-q.x,&#32;-q.y,&#32;-q.z);
320 &#32;&#32;&#32;&#32;}
321 
322 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;operators&#32;--</emphasis>
323 
324 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
325 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;p)
326 &#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(q)&#32;+=&#32;p;
328 &#32;&#32;&#32;&#32;}
329 
330 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
331 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;p)
332 &#32;&#32;&#32;&#32;{
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(q)&#32;-=&#32;p;
334 &#32;&#32;&#32;&#32;}
335 
336 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
337 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;p)
338 &#32;&#32;&#32;&#32;{
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(q)&#32;*=&#32;p;
340 &#32;&#32;&#32;&#32;}
341 
342 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
343 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
344 &#32;&#32;&#32;&#32;{
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;QuatVector(q.x,&#32;q.y,&#32;q.z);
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;uv(<link linkend="_group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa">glm::cross</link>(QuatVector,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>));
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;uuv(<link linkend="_group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa">glm::cross</link>(QuatVector,&#32;uv));
348 
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;+&#32;((uv&#32;*&#32;q.w)&#32;+&#32;uuv)&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2);
350 &#32;&#32;&#32;&#32;}
351 
352 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
353 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
354 &#32;&#32;&#32;&#32;{
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">glm::inverse</link>(q)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
356 &#32;&#32;&#32;&#32;}
357 
358 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
359 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
360 &#32;&#32;&#32;&#32;{
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::compute_quat_mul_vec4&lt;T,&#32;Q,&#32;detail::is_aligned&lt;Q&gt;::value&gt;::call(q,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
362 &#32;&#32;&#32;&#32;}
363 
364 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
365 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(vec&lt;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
366 &#32;&#32;&#32;&#32;{
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">glm::inverse</link>(q)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
368 &#32;&#32;&#32;&#32;}
369 
370 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
371 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s)
372 &#32;&#32;&#32;&#32;{
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(
374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q.w&#32;*&#32;s,&#32;q.x&#32;*&#32;s,&#32;q.y&#32;*&#32;s,&#32;q.z&#32;*&#32;s);
375 &#32;&#32;&#32;&#32;}
376 
377 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
378 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
379 &#32;&#32;&#32;&#32;{
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q&#32;*&#32;s;
381 &#32;&#32;&#32;&#32;}
382 
383 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
384 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s)
385 &#32;&#32;&#32;&#32;{
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q.w&#32;/&#32;s,&#32;q.x&#32;/&#32;s,&#32;q.y&#32;/&#32;s,&#32;q.z&#32;/&#32;s);
388 &#32;&#32;&#32;&#32;}
389 
390 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
391 
392 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
393 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q1,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q2)
394 &#32;&#32;&#32;&#32;{
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q1.x&#32;==&#32;q2.x&#32;&amp;&amp;&#32;q1.y&#32;==&#32;q2.y&#32;&amp;&amp;&#32;q1.z&#32;==&#32;q2.z&#32;&amp;&amp;&#32;q1.w&#32;==&#32;q2.w;
396 &#32;&#32;&#32;&#32;}
397 
398 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
399 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q1,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q2)
400 &#32;&#32;&#32;&#32;{
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q1.x&#32;!=&#32;q2.x&#32;||&#32;q1.y&#32;!=&#32;q2.y&#32;||&#32;q1.z&#32;!=&#32;q2.z&#32;||&#32;q1.w&#32;!=&#32;q2.w;
402 &#32;&#32;&#32;&#32;}
403 }<emphasis role="comment">//namespace&#32;glm</emphasis>
404 
405 <emphasis role="preprocessor">#if&#32;GLM_CONFIG_SIMD&#32;==&#32;GLM_ENABLE</emphasis>
406 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&quot;type_quat_simd.inl&quot;</emphasis>
407 <emphasis role="preprocessor">#endif</emphasis>
408 
</programlisting></section>
