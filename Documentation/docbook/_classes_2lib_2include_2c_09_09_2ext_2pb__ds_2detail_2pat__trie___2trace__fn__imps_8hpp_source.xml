<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2trace__fn__imps_8hpp_source" xml:lang="en-US">
<title>trace_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <emphasis role="preprocessor">#ifdef&#32;PB_DS_PAT_TRIE_TRACE_</emphasis>
44 
45 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
46 <emphasis role="keywordtype">void</emphasis>
47 PB_DS_CLASS_C_DEC::
48 trace()<emphasis role="keyword">&#32;const</emphasis>
49 <emphasis role="keyword"></emphasis>{
50 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;std::endl;
51 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p_head-&gt;m_p_parent&#32;==&#32;0)
52 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
53 &#32;&#32;trace_node(m_p_head-&gt;m_p_parent,&#32;0);
54 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;std::endl;
55 }
56 
57 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
58 <emphasis role="keywordtype">void</emphasis>
59 PB_DS_CLASS_C_DEC::
60 trace_node(node_const_pointer&#32;p_nd,&#32;size_type&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a2424d012241ecec8ab2763eddf543736">level</link>)
61 {
62 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a2424d012241ecec8ab2763eddf543736">level</link>;&#32;++i)
63 &#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
64 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;p_nd&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
65 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;((p_nd-&gt;m_type&#32;==&#32;pat_trie_leaf_node_type)&#32;?&#32;<emphasis role="stringliteral">&quot;l&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;i&#32;&quot;</emphasis>);
66 
67 &#32;&#32;trace_node_metadata(p_nd,&#32;type_to_type&lt;typename&#32;node::metadata_type&gt;());
68 &#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;el_it&#32;=&#32;pref_begin(p_nd);
69 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(el_it&#32;!=&#32;pref_end(p_nd))
70 &#32;&#32;&#32;&#32;{
71 &#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;*&#32;el_it;
72 &#32;&#32;&#32;&#32;&#32;&#32;++el_it;
73 &#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd-&gt;m_type&#32;==&#32;pat_trie_leaf_node_type)
76 &#32;&#32;&#32;&#32;{
77 &#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;std::endl;
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
79 &#32;&#32;&#32;&#32;}
80 
81 &#32;&#32;inode_const_pointer&#32;p_internal&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>inode_const_pointer<emphasis role="keyword">&gt;</emphasis>(p_nd);
82 
83 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis><emphasis role="keyword">&gt;</emphasis>(p_internal-&gt;get_e_ind())&#32;&lt;&lt;&#32;std::endl;
85 
86 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;num_children&#32;=&#32;std::distance(p_internal-&gt;begin(),
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_internal-&gt;end());
88 
89 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;child_i&#32;=&#32;0;&#32;child_i&#32;&lt;&#32;num_children;&#32;++child_i)
90 &#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;inode::const_iterator&#32;child_it&#32;=&#32;p_internal-&gt;begin();
92 &#32;&#32;&#32;&#32;&#32;&#32;std::advance(child_it,&#32;num_children&#32;-&#32;child_i&#32;-&#32;1);
93 &#32;&#32;&#32;&#32;&#32;&#32;trace_node(*child_it,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a2424d012241ecec8ab2763eddf543736">level</link>&#32;+&#32;1);
94 &#32;&#32;&#32;&#32;}
95 }
96 
97 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
98 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Metadata_&gt;
99 <emphasis role="keywordtype">void</emphasis>
100 PB_DS_CLASS_C_DEC::
101 trace_node_metadata(node_const_pointer&#32;p_nd,&#32;type_to_type&lt;Metadata_&gt;)
102 {
103 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;(&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis><emphasis role="keyword">&gt;</emphasis>(p_nd-&gt;get_metadata())&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;)&#32;&quot;</emphasis>;
104 }
105 
106 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
107 <emphasis role="keywordtype">void</emphasis>
108 PB_DS_CLASS_C_DEC::
109 trace_node_metadata(node_const_pointer,&#32;type_to_type&lt;null_type&gt;)
110 {&#32;}
111 
112 <emphasis role="preprocessor">#endif&#32;</emphasis>
113 
114 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
