<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator" xml:lang="en-US">
<title>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator Struct Reference</title>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary></indexterm>
<para>

<para>Constant child iterator. </para>
 
</para>
<para>
<computeroutput>#include &lt;pat_trie_base.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aee0ed4f483c185d5b0c85deea45ce659">iterator_category</link></para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bf5a342b14e9f2df95154f95a96d19c">difference_type</link></para>
</listitem>
            <listitem><para>typedef node_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a1c109a0fd4e01a45e303aa2e7e7f20c1">value_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1af8c5fd10d400be3db021bdd9f46ff282">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1afb9cf4c8cf902066b162baa841767479">node_pointer_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a2d00a1e6daa1254d7c0ee57ad7dbff6c">reference</link></para>
</listitem>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aee0ed4f483c185d5b0c85deea45ce659">iterator_category</link></para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bf5a342b14e9f2df95154f95a96d19c">difference_type</link></para>
</listitem>
            <listitem><para>typedef node_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a1c109a0fd4e01a45e303aa2e7e7f20c1">value_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1af8c5fd10d400be3db021bdd9f46ff282">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1afb9cf4c8cf902066b162baa841767479">node_pointer_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a2d00a1e6daa1254d7c0ee57ad7dbff6c">reference</link></para>
</listitem>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aee0ed4f483c185d5b0c85deea45ce659">iterator_category</link></para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bf5a342b14e9f2df95154f95a96d19c">difference_type</link></para>
</listitem>
            <listitem><para>typedef node_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a1c109a0fd4e01a45e303aa2e7e7f20c1">value_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1af8c5fd10d400be3db021bdd9f46ff282">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1afb9cf4c8cf902066b162baa841767479">node_pointer_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a2d00a1e6daa1254d7c0ee57ad7dbff6c">reference</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ab243d4093e1f6e6b3c94157fe41491ba">const_iterator</link> (<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_cur=0, <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_end=0)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a60f997f195b00f0eb170abb4c17f8fe7">operator==</link> (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aa475ac2905a3cdc6ddbf60485c463dc2">operator!=</link> (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a489e9b5056dbeba43dbe0e8e8e845dae">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9cded2d228269f7063b58a3feabba2a7">operator++</link> (int)</para>
</listitem>
            <listitem><para>const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ad777d868e1e7e55e5128cc8cac18f9ab">operator-&gt;</link> () const</para>
</listitem>
            <listitem><para>node_const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9719cc4206d169956459620cc7a238a9">operator*</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ab243d4093e1f6e6b3c94157fe41491ba">const_iterator</link> (<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_cur=0, <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_end=0)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a60f997f195b00f0eb170abb4c17f8fe7">operator==</link> (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aa475ac2905a3cdc6ddbf60485c463dc2">operator!=</link> (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a489e9b5056dbeba43dbe0e8e8e845dae">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9cded2d228269f7063b58a3feabba2a7">operator++</link> (int)</para>
</listitem>
            <listitem><para>const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ad777d868e1e7e55e5128cc8cac18f9ab">operator-&gt;</link> () const</para>
</listitem>
            <listitem><para>node_const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9719cc4206d169956459620cc7a238a9">operator*</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ab243d4093e1f6e6b3c94157fe41491ba">const_iterator</link> (<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_cur=0, <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_end=0)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a60f997f195b00f0eb170abb4c17f8fe7">operator==</link> (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aa475ac2905a3cdc6ddbf60485c463dc2">operator!=</link> (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a489e9b5056dbeba43dbe0e8e8e845dae">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9cded2d228269f7063b58a3feabba2a7">operator++</link> (int)</para>
</listitem>
            <listitem><para>const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ad777d868e1e7e55e5128cc8cac18f9ab">operator-&gt;</link> () const</para>
</listitem>
            <listitem><para>node_const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9719cc4206d169956459620cc7a238a9">operator*</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a5c3cfbaefe359c24d7dd979c3431d9d9">m_p_p_cur</link></para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bea1d3e4d249c572f0114455a5b654a">m_p_p_end</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _ATraits, typename Metadata&gt;<?linebreak?>struct __gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</title></simplesect>

<para>Constant child iterator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bf5a342b14e9f2df95154f95a96d19c"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::difference_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bf5a342b14e9f2df95154f95a96d19c"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::difference_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bf5a342b14e9f2df95154f95a96d19c"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::difference_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aee0ed4f483c185d5b0c85deea45ce659"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::iterator_category</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aee0ed4f483c185d5b0c85deea45ce659"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::iterator_category</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aee0ed4f483c185d5b0c85deea45ce659"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::iterator_category</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1af8c5fd10d400be3db021bdd9f46ff282"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1af8c5fd10d400be3db021bdd9f46ff282"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1af8c5fd10d400be3db021bdd9f46ff282"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a2d00a1e6daa1254d7c0ee57ad7dbff6c"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1afb9cf4c8cf902066b162baa841767479">node_pointer_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a2d00a1e6daa1254d7c0ee57ad7dbff6c"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1afb9cf4c8cf902066b162baa841767479">node_pointer_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a2d00a1e6daa1254d7c0ee57ad7dbff6c"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1afb9cf4c8cf902066b162baa841767479">node_pointer_reference</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a1c109a0fd4e01a45e303aa2e7e7f20c1"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef node_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::value_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a1c109a0fd4e01a45e303aa2e7e7f20c1"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef node_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::value_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a1c109a0fd4e01a45e303aa2e7e7f20c1"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>typedef node_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::value_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ab243d4093e1f6e6b3c94157fe41491ba"/><section>
    <title>const_iterator()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::const_iterator (<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_cur = <computeroutput>0</computeroutput>
, <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_end = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ab243d4093e1f6e6b3c94157fe41491ba"/><section>
    <title>const_iterator()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::const_iterator (<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_cur = <computeroutput>0</computeroutput>
, <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_end = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ab243d4093e1f6e6b3c94157fe41491ba"/><section>
    <title>const_iterator()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::const_iterator (<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_cur = <computeroutput>0</computeroutput>
, <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> p_p_end = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aa475ac2905a3cdc6ddbf60485c463dc2"/><section>
    <title>operator!=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator!= (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aa475ac2905a3cdc6ddbf60485c463dc2"/><section>
    <title>operator!=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator!= (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1aa475ac2905a3cdc6ddbf60485c463dc2"/><section>
    <title>operator!=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator!= (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9719cc4206d169956459620cc7a238a9"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>node_const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9719cc4206d169956459620cc7a238a9"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>node_const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9719cc4206d169956459620cc7a238a9"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>node_const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a489e9b5056dbeba43dbe0e8e8e845dae"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_a489e9b5056dbeba43dbe0e8e8e845dae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a489e9b5056dbeba43dbe0e8e8e845dae"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a489e9b5056dbeba43dbe0e8e8e845dae"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9cded2d228269f7063b58a3feabba2a7"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_a9cded2d228269f7063b58a3feabba2a7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9cded2d228269f7063b58a3feabba2a7"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_a9cded2d228269f7063b58a3feabba2a7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a9cded2d228269f7063b58a3feabba2a7"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_a9cded2d228269f7063b58a3feabba2a7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ad777d868e1e7e55e5128cc8cac18f9ab"/><section>
    <title>operator-&gt;()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ad777d868e1e7e55e5128cc8cac18f9ab"/><section>
    <title>operator-&gt;()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1ad777d868e1e7e55e5128cc8cac18f9ab"/><section>
    <title>operator-&gt;()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput>const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a60f997f195b00f0eb170abb4c17f8fe7"/><section>
    <title>operator==()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator== (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a60f997f195b00f0eb170abb4c17f8fe7"/><section>
    <title>operator==()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator== (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a60f997f195b00f0eb170abb4c17f8fe7"/><section>
    <title>operator==()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::operator== (const <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">const_iterator</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a5c3cfbaefe359c24d7dd979c3431d9d9"/><section>
    <title>m_p_p_cur</title>
<indexterm><primary>m_p_p_cur</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>m_p_p_cur</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::m_p_p_cur</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator_1a7bea1d3e4d249c572f0114455a5b654a"/><section>
    <title>m_p_p_end</title>
<indexterm><primary>m_p_p_end</primary><secondary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</primary><secondary>m_p_p_end</secondary></indexterm>
<computeroutput>template&lt;typename _ATraits , typename Metadata &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1aefe834a985fa1ba580577993350355c0">node_pointer_pointer</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode</link>&lt; _ATraits, Metadata &gt;::const_iterator::m_p_p_end</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp">pat_trie_base.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/pat_trie_/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp">pat_trie_base.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp">pat_trie_base.hpp</link></section>
</section>
