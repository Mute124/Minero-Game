<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred" xml:lang="en-US">
<title>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt; Class Template Reference</title>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary></indexterm>
<para>

<para>Like a polymorphic lambda for pred(...,value) </para>
 
</para>
<para>
<computeroutput>#include &lt;utils.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a1e4cd61123dfe6f014f6e4f252bdbe59">__equal_value_by_pred</link> (const _Tp &amp;__value, _Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _Arg &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a4311241d58473b2aa23ec8e2a746905b">operator()</link> (_Arg &amp;&amp;__arg)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a1e4cd61123dfe6f014f6e4f252bdbe59">__equal_value_by_pred</link> (const _Tp &amp;__value, _Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _Arg &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a4311241d58473b2aa23ec8e2a746905b">operator()</link> (_Arg &amp;&amp;__arg)</para>
</listitem>
            <listitem><para><link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a1e4cd61123dfe6f014f6e4f252bdbe59">__equal_value_by_pred</link> (const _Tp &amp;__value, _Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _Arg &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a4311241d58473b2aa23ec8e2a746905b">operator()</link> (_Arg &amp;&amp;__arg)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Tp, typename _Predicate&gt;<?linebreak?>class __pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</title></simplesect>

<para>Like a polymorphic lambda for pred(...,value) </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a1e4cd61123dfe6f014f6e4f252bdbe59"/><section>
    <title>__equal_value_by_pred()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__equal_value_by_pred</primary><secondary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary><secondary>__equal_value_by_pred</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _Predicate &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred</link>&lt; _Tp, _Predicate &gt;::__equal_value_by_pred (const _Tp &amp; __value, _Predicate __pred)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a1e4cd61123dfe6f014f6e4f252bdbe59"/><section>
    <title>__equal_value_by_pred()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__equal_value_by_pred</primary><secondary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary><secondary>__equal_value_by_pred</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _Predicate &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred</link>&lt; _Tp, _Predicate &gt;::__equal_value_by_pred (const _Tp &amp; __value, _Predicate __pred)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a1e4cd61123dfe6f014f6e4f252bdbe59"/><section>
    <title>__equal_value_by_pred()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__equal_value_by_pred</primary><secondary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary><secondary>__equal_value_by_pred</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _Predicate &gt; </computeroutput><para><computeroutput><link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred</link>&lt; _Tp, _Predicate &gt;::__equal_value_by_pred (const _Tp &amp; __value, _Predicate __pred)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a4311241d58473b2aa23ec8e2a746905b"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _Predicate &gt; </computeroutput><computeroutput>template&lt;typename _Arg &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred</link>&lt; _Tp, _Predicate &gt;::operator() (_Arg &amp;&amp; __arg)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a4311241d58473b2aa23ec8e2a746905b"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _Predicate &gt; </computeroutput><computeroutput>template&lt;typename _Arg &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred</link>&lt; _Tp, _Predicate &gt;::operator() (_Arg &amp;&amp; __arg)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____pstl_1_1____internal_1_1____equal__value__by__pred_1a4311241d58473b2aa23ec8e2a746905b"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</secondary></indexterm>
<indexterm><primary>__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _Tp , typename _Predicate &gt; </computeroutput><computeroutput>template&lt;typename _Arg &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred</link>&lt; _Tp, _Predicate &gt;::operator() (_Arg &amp;&amp; __arg)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/<link linkend="__classes_2lib_2include_2c_09_09_2pstl_2utils_8h">utils.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/<link linkend="_lib_2include_2c_09_09_2pstl_2utils_8h">utils.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2pstl_2utils_8h">utils.h</link></section>
</section>
