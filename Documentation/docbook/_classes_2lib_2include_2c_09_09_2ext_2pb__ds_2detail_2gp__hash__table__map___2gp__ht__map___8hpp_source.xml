<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_source" xml:lang="en-US">
<title>gp_ht_map_.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
42 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp&gt;</emphasis>
43 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/types_traits.hpp&gt;</emphasis>
44 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/exception.hpp&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
47 <emphasis role="preprocessor">#ifdef&#32;PB_DS_HT_MAP_TRACE_</emphasis>
48 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
49 <emphasis role="preprocessor">#endif</emphasis>
50 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
51 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/debug_map_base.hpp&gt;</emphasis>
52 <emphasis role="preprocessor">#endif</emphasis>
53 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
54 
55 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
56 {
57 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
58 &#32;&#32;{
59 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
60 <emphasis role="preprocessor">#define&#32;PB_DS_GP_HASH_NAME&#32;gp_ht_map</emphasis>
61 <emphasis role="preprocessor">#endif</emphasis>
62 
63 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
64 <emphasis role="preprocessor">#define&#32;PB_DS_GP_HASH_NAME&#32;gp_ht_set</emphasis>
65 <emphasis role="preprocessor">#endif</emphasis>
66 
67 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
68 <emphasis role="preprocessor">&#32;&#32;&#32;template&lt;typename&#32;Key,&#32;typename&#32;Mapped,&#32;typename&#32;Hash_Fn,&#32;typename&#32;Eq_Fn,&#32;\</emphasis>
69 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc,&#32;bool&#32;Store_Hash,&#32;typename&#32;Comb_Probe_Fn,&#32;\</emphasis>
70 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;Probe_Fn,&#32;&#32;typename&#32;Resize_Policy&gt;</emphasis>
71 
72 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
73 <emphasis role="preprocessor">&#32;&#32;&#32;PB_DS_GP_HASH_NAME&lt;Key,&#32;Mapped,&#32;Hash_Fn,&#32;Eq_Fn,&#32;_Alloc,&#32;\</emphasis>
74 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Store_Hash,&#32;Comb_Probe_Fn,&#32;Probe_Fn,&#32;Resize_Policy&gt;</emphasis>
75 
76 <emphasis role="preprocessor">#define&#32;PB_DS_HASH_EQ_FN_C_DEC&#32;\</emphasis>
77 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;hash_eq_fn&lt;Key,&#32;Eq_Fn,&#32;_Alloc,&#32;Store_Hash&gt;</emphasis>
78 
79 <emphasis role="preprocessor">#define&#32;PB_DS_RANGED_PROBE_FN_C_DEC&#32;\</emphasis>
80 <emphasis role="preprocessor">&#32;&#32;&#32;ranged_probe_fn&lt;Key,&#32;Hash_Fn,&#32;_Alloc,&#32;Comb_Probe_Fn,&#32;Probe_Fn,&#32;Store_Hash&gt;</emphasis>
81 
82 <emphasis role="preprocessor">#define&#32;PB_DS_GP_HASH_TRAITS_BASE&#32;\</emphasis>
83 <emphasis role="preprocessor">&#32;&#32;&#32;types_traits&lt;Key,&#32;Mapped,&#32;_Alloc,&#32;Store_Hash&gt;</emphasis>
84 
85 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
86 <emphasis role="preprocessor">#define&#32;PB_DS_DEBUG_MAP_BASE_C_DEC&#32;\</emphasis>
87 <emphasis role="preprocessor">&#32;&#32;&#32;debug_map_base&lt;Key,&#32;Eq_Fn,&#32;\</emphasis>
88 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;rebind_traits&lt;_Alloc,&#32;Key&gt;::const_reference&gt;</emphasis>
89 <emphasis role="preprocessor">#endif</emphasis>
90 
91 
133 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Mapped,
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Hash_Fn,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Eq_Fn,
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Comb_Probe_Fn,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Probe_Fn,
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Resize_Policy&gt;
142 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e">PB_DS_GP_HASH_NAME</link>&#32;:
143 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;PB_DS_DEBUG_MAP_BASE_C_DEC,
145 <emphasis role="preprocessor">#endif</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2cc__ht__map___8hpp_1a59100664ff9233dd7b0160dfe4dc8cc8">PB_DS_HASH_EQ_FN_C_DEC</link>,
147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Resize_Policy,
148 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a50464c71687821a59369ab71f349ace5">PB_DS_RANGED_PROBE_FN_C_DEC</link>,
149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad9ab1e545df69173f0bbf206daf8fa66">PB_DS_GP_HASH_TRAITS_BASE</link>
150 &#32;&#32;&#32;&#32;{
151 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad9ab1e545df69173f0bbf206daf8fa66">PB_DS_GP_HASH_TRAITS_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base;
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::value_type&#32;&#32;value_type_;
154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::pointer&#32;&#32;&#32;&#32;&#32;pointer_;
155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_pointer&#32;const_pointer_;
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::reference&#32;&#32;&#32;reference_;
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_reference&#32;const_reference_;
158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::comp_hash&#32;&#32;&#32;comp_hash;
159 
160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;entry_status
161 &#32;&#32;&#32;&#32;{
162 &#32;&#32;&#32;&#32;&#32;&#32;empty_entry_status,
163 &#32;&#32;&#32;&#32;&#32;&#32;valid_entry_status,
164 &#32;&#32;&#32;&#32;&#32;&#32;erased_entry_status
165 &#32;&#32;&#32;&#32;}&#32;__attribute__&#32;((__packed__));
166 
167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>entry&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;traits_base::stored_data_type
168 &#32;&#32;&#32;&#32;&#32;&#32;{
169 &#32;&#32;&#32;&#32;entry_status&#32;m_stat;
170 &#32;&#32;&#32;&#32;&#32;&#32;};
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, entry&gt;</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">entry_traits</link>;
173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">entry_traits::allocator_type</link>&#32;entry_allocator;
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_traits::pointer&#32;entry_pointer;
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_traits::const_pointer&#32;const_entry_pointer;
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_traits::reference&#32;entry_reference;
177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_traits::const_reference&#32;const_entry_reference;
178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;entry_traits::pointer&#32;entry_array;
179 
180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a50464c71687821a59369ab71f349ace5">PB_DS_RANGED_PROBE_FN_C_DEC</link>&#32;&#32;&#32;ranged_probe_fn_base;
181 
182 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;PB_DS_DEBUG_MAP_BASE_C_DEC&#32;&#32;&#32;&#32;debug_base;
184 <emphasis role="preprocessor">#endif</emphasis>
185 
186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2cc__ht__map___8hpp_1a59100664ff9233dd7b0160dfe4dc8cc8">PB_DS_HASH_EQ_FN_C_DEC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash_eq_fn_base;
187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Resize_Policy&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base;
188 
189 <emphasis role="preprocessor">#define&#32;PB_DS_GEN_POS&#32;typename&#32;_Alloc::size_type</emphasis>
190 
191 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp&gt;</emphasis>
192 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/point_iterator.hpp&gt;</emphasis>
193 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/const_iterator.hpp&gt;</emphasis>
194 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/unordered_iterator/iterator.hpp&gt;</emphasis>
195 
196 <emphasis role="preprocessor">#undef&#32;PB_DS_GEN_POS</emphasis>
197 
198 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a9acaa6ee6fc6070812a69b7c3cc6035e">allocator_type</link>;
200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>;
201 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a5b510d5037712756c8a08e8a92223ae5">difference_type</link>;
202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Hash_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4a7634b694574d6fd37d2d077c30999c">hash_fn</link>;
203 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eq_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a8b6a72fec11760bbbda4638a2e65b382">eq_fn</link>;
204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Probe_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a8f17eb99b395913a917b6f40fc71e7a9">probe_fn</link>;
205 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Comb_Probe_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a5bcc7269f04e0eb1a9cdccdb02bd251d">comb_probe_fn</link>;
206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Resize_Policy&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a3c3f91dbae448d22c74f44e982f3dd88">resize_policy</link>;
207 
209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
210 &#32;&#32;&#32;&#32;{
211 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1aa3a804bf6cb557db766d3ed2015b122aa7657c9e9306aa633cc89d1c4503014b6">store_hash</link>&#32;=&#32;Store_Hash
212 &#32;&#32;&#32;&#32;};
213 
214 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_type&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a14772e672bb6000af5c3b98719f275d6">key_type</link>;
215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a78242221392643a3617e4b85b297d997">key_pointer</link>;
216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a63e0eb73c2e38a2a4f9883d46fc14c03">key_const_pointer</link>;
217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a897bf6b6ff6401989014e5c59a760aca">key_reference</link>;
218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::key_const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>;
219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abb5657671d50fac8493a4541e93f16ce">mapped_type</link>;
220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1aaf4796834de280be8d1b450bbb412525">mapped_pointer</link>;
221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a931783249ff85ecc597f688720455b44">mapped_const_pointer</link>;
222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4668e5e9e75d5651a0f88a78412245d2">mapped_reference</link>;
223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::mapped_const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ae65061ea6caa01f92ee656f4aede7cfa">mapped_const_reference</link>;
224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::value_type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a1977af41f60349adb789e1309905356e">value_type</link>;
225 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ade615b2b03567957713948ba3d7c9f9d">pointer</link>;
226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a03003a054372b75acdfa280c38f71062">const_pointer</link>;
227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a7d3b3966b1df311296bf614a57a38df6">reference</link>;
228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;traits_base::const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a25106d148c39922f11e348cc4d455937">const_reference</link>;
229 
230 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;point_iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point_iterator;
232 <emphasis role="preprocessor">#endif</emphasis>
233 
234 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;point_const_iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point_iterator;
236 <emphasis role="preprocessor">#endif</emphasis>
237 
238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;point_const_iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1afbdb545452650c8e9d50389c4d61ec85">point_const_iterator</link>;
239 
240 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;iterator_&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator;
242 <emphasis role="preprocessor">#endif</emphasis>
243 
244 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_FALSE_INDICATOR</emphasis>
245 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a676a3b628ba09d9a22fd2d068df2fd03">const_iterator_</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator;
246 <emphasis role="preprocessor">#endif</emphasis>
247 
248 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a676a3b628ba09d9a22fd2d068df2fd03">const_iterator_</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a8ebd20dfefbb64b6d92d7dfedfd8a62a">const_iterator</link>;
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a58199d8bbda2c3b6d2068485eb371fa4">PB_DS_GP_HASH_NAME</link>();
251 
252 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4fd5c54952594bb38064bf3adcbd69ad">PB_DS_GP_HASH_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
253 
254 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a629b7e69439fb037d11e959113dc97bb">PB_DS_GP_HASH_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;);
255 
256 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a2c2aacb04260ab0c488098319b602be2">PB_DS_GP_HASH_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;);
257 
258 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1af6f26426d679577cd2d699114a5e83af">PB_DS_GP_HASH_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;);
259 
260 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a22f7da33dff728f7359e5e580862e2cd">PB_DS_GP_HASH_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;,
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Probe_Fn&amp;);
262 
263 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1acb012233f7688877a92062bea8b89d56">PB_DS_GP_HASH_NAME</link>(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;,
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Probe_Fn&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;Resize_Policy&amp;);
265 
266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
267 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
268 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a686f7fdfb95d1e94ada8c6afe206d722">copy_from_range</link>(It,&#32;It);
269 
270 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>
271 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a88417fabb1ebe1eea03909df5b828f06">~PB_DS_GP_HASH_NAME</link>();
272 
273 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
274 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a43f28f248854cb20627e382d718087de">swap</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
275 
276 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>
277 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4f0a607439f24b5abdf90d9ce0a831b1">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
278 
279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>
280 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a86d17af0c60cd393321d017a05ea23e8">max_size</link>()&#32;<emphasis role="keyword">const</emphasis>;
281 
283 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
284 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a53e184da535ab61a1baa53b4a711739c">empty</link>()&#32;<emphasis role="keyword">const</emphasis>;
285 
287 &#32;&#32;&#32;&#32;&#32;&#32;Hash_Fn&amp;
288 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a459277ee627056128d6a38d1c5536b4f">get_hash_fn</link>();
289 
291 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;
292 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a350b70b836bff2ab7b972a7c24e79edb">get_hash_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
293 
295 &#32;&#32;&#32;&#32;&#32;&#32;Eq_Fn&amp;
296 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac8ef6481e77eed9a372c1dd8f1f9abf7">get_eq_fn</link>();
297 
299 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;
300 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a124c6b838bb39c286a3a05565efeb84f">get_eq_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
301 
303 &#32;&#32;&#32;&#32;&#32;&#32;Probe_Fn&amp;
304 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a0fee65fad388bdb674dcfc7c8cceba01">get_probe_fn</link>();
305 
307 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Probe_Fn&amp;
308 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1aef5de4e7059fbe75fc487b37f51e2dc9">get_probe_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
309 
311 &#32;&#32;&#32;&#32;&#32;&#32;Comb_Probe_Fn&amp;
312 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a750d8ccc586cbb6a6c64f8dc611034bb">get_comb_probe_fn</link>();
313 
315 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;
316 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a76999f26ac92e4d4bf429c498fa35d8d">get_comb_probe_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
317 
319 &#32;&#32;&#32;&#32;&#32;&#32;Resize_Policy&amp;
320 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a53ba25aa6bc8b54860d3dc312e75c136">get_resize_policy</link>();
321 
323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Resize_Policy&amp;
324 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a6a3acc3fca6edd127046df708903d86d">get_resize_policy</link>()&#32;<emphasis role="keyword">const</emphasis>;
325 
326 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;std::pair&lt;point_iterator,&#32;bool&gt;
327 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a2eff84d5b6ace1282b89b898e5f1da39">insert</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a25106d148c39922f11e348cc4d455937">const_reference</link>&#32;r_val)
328 &#32;&#32;&#32;&#32;&#32;&#32;{
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(PB_DS_CLASS_C_DEC::assert_valid(__FILE__,&#32;__LINE__);)
330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;insert_imp(r_val,&#32;traits_base::m_store_extra_indicator);
331 &#32;&#32;&#32;&#32;&#32;&#32;}
332 
333 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4668e5e9e75d5651a0f88a78412245d2">mapped_reference</link>
334 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a33aa4a897dda6dc423644d114d372f7f">operator[]</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>&#32;r_key)
335 &#32;&#32;&#32;&#32;&#32;&#32;{
336 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
337 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;subscript_imp(r_key,&#32;traits_base::m_store_extra_indicator);
338 <emphasis role="preprocessor">#else</emphasis>
339 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a2eff84d5b6ace1282b89b898e5f1da39">insert</link>(r_key);
340 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;traits_base::s_null_type;
341 <emphasis role="preprocessor">#endif</emphasis>
342 &#32;&#32;&#32;&#32;&#32;&#32;}
343 
344 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;point_iterator
345 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1afc00cbc05daafc57f16f69e725d2d6f0">find</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>);
346 
347 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1afbdb545452650c8e9d50389c4d61ec85">point_const_iterator</link>
348 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1afde0dd68c88dfd0bedd96f1075bd28fe">find</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>)&#32;<emphasis role="keyword">const</emphasis>;
349 
350 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;point_iterator
351 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1aeac28681fb7fe9cd508cd47bd6254158">find_end</link>();
352 
353 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1afbdb545452650c8e9d50389c4d61ec85">point_const_iterator</link>
354 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a2eb84b670e7c36b4497de3c915fdcd32">find_end</link>()&#32;<emphasis role="keyword">const</emphasis>;
355 
356 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
357 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a3f8e887233a55fdddd7c047046a252a8">erase</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>);
358 
359 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abadac47e93de960f824a0f0d5255fa41">erase_if</link>(Pred);
362 
363 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
364 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a9243a8cdff7462e9bbc99f8c331de672">clear</link>();
365 
366 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;iterator
367 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a128028d32aa2dbd0a628044b55f8249f">begin</link>();
368 
369 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a8ebd20dfefbb64b6d92d7dfedfd8a62a">const_iterator</link>
370 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a5e7eef2c9e88faa350a86f39442ce48f">begin</link>()&#32;<emphasis role="keyword">const</emphasis>;
371 
372 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;iterator
373 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac413fe758b9e5da7920a5ec850537202">end</link>();
374 &#32;&#32;&#32;&#32;&#32;&#32;
375 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a8ebd20dfefbb64b6d92d7dfedfd8a62a">const_iterator</link>
376 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1acb1a2401a2179ab2c5d12b72a1c7fe0e">end</link>()&#32;<emphasis role="keyword">const</emphasis>;
377 
378 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
379 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
380 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
381 <emphasis role="preprocessor">#endif</emphasis>
382 
383 <emphasis role="preprocessor">#ifdef&#32;PB_DS_HT_MAP_TRACE_</emphasis>
384 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
385 &#32;&#32;&#32;&#32;&#32;&#32;trace()&#32;<emphasis role="keyword">const</emphasis>;
386 <emphasis role="preprocessor">#endif</emphasis>
387 
388 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
389 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
390 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>iterator_;
391 <emphasis role="preprocessor">#endif</emphasis>
392 
393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a676a3b628ba09d9a22fd2d068df2fd03">const_iterator_</link>;
394 
395 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
396 &#32;&#32;&#32;&#32;&#32;&#32;deallocate_all();
397 
398 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
399 &#32;&#32;&#32;&#32;&#32;&#32;initialize();
400 
401 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
402 &#32;&#32;&#32;&#32;&#32;&#32;erase_all_valid_entries(entry_array,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>);
403 
404 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
405 &#32;&#32;&#32;&#32;&#32;&#32;do_resize_if_needed();
406 
407 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
408 &#32;&#32;&#32;&#32;&#32;&#32;do_resize_if_needed_no_throw();
409 
410 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
411 &#32;&#32;&#32;&#32;&#32;&#32;resize_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>);
412 
413 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
414 &#32;&#32;&#32;&#32;&#32;&#32;do_resize(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>);
415 
416 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
417 &#32;&#32;&#32;&#32;&#32;&#32;resize_imp(entry_array,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>);
418 
419 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
420 &#32;&#32;&#32;&#32;&#32;&#32;resize_imp_reassign(entry_pointer,&#32;entry_array,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
421 
422 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
423 &#32;&#32;&#32;&#32;&#32;&#32;resize_imp_reassign(entry_pointer,&#32;entry_array,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
424 
425 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>
426 &#32;&#32;&#32;&#32;&#32;&#32;find_ins_pos(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
427 
428 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;comp_hash
429 &#32;&#32;&#32;&#32;&#32;&#32;find_ins_pos(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
430 
431 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;std::pair&lt;point_iterator,&#32;bool&gt;
432 &#32;&#32;&#32;&#32;&#32;&#32;insert_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a25106d148c39922f11e348cc4d455937">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
433 
434 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;std::pair&lt;point_iterator,&#32;bool&gt;
435 &#32;&#32;&#32;&#32;&#32;&#32;insert_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a25106d148c39922f11e348cc4d455937">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
436 
437 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ade615b2b03567957713948ba3d7c9f9d">pointer</link>
438 &#32;&#32;&#32;&#32;&#32;&#32;insert_new_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a25106d148c39922f11e348cc4d455937">const_reference</link>&#32;r_val,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;pos)
439 &#32;&#32;&#32;&#32;&#32;&#32;{
440 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_entries[pos].m_stat&#32;!=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>);
441 
442 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_resize_if_needed())
443 &#32;&#32;&#32;&#32;&#32;&#32;pos&#32;=&#32;find_ins_pos(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(r_val),
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base::m_store_extra_indicator);
445 
446 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_entries[pos].m_stat&#32;!=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>);
447 &#32;&#32;&#32;&#32;entry*&#32;<emphasis role="keyword">const</emphasis>&#32;p_e&#32;=&#32;m_entries&#32;+&#32;pos;
448 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;p_e-&gt;m_value)&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a1977af41f60349adb789e1309905356e">value_type</link>(r_val);
449 &#32;&#32;&#32;&#32;p_e-&gt;m_stat&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>;
450 &#32;&#32;&#32;&#32;resize_base::notify_inserted(++m_num_used_e);
451 
452 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(debug_base::insert_new(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_e-&gt;m_value));)
453 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
454 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;p_e-&gt;m_value;
455 &#32;&#32;&#32;&#32;&#32;&#32;}
456 
457 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>
458 &#32;&#32;&#32;&#32;&#32;&#32;insert_new_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a25106d148c39922f11e348cc4d455937">const_reference</link>&#32;r_val,&#32;comp_hash&amp;&#32;r_pos_hash_pair)
459 &#32;&#32;&#32;&#32;&#32;&#32;{
460 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_entries[r_pos_hash_pair.first].m_stat&#32;!=
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>);
462 
463 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_resize_if_needed())
464 &#32;&#32;&#32;&#32;&#32;&#32;r_pos_hash_pair&#32;=&#32;find_ins_pos(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(r_val),
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base::m_store_extra_indicator);
466 
467 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_entries[r_pos_hash_pair.first].m_stat&#32;!=
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>);
469 
470 &#32;&#32;&#32;&#32;entry*&#32;<emphasis role="keyword">const</emphasis>&#32;p_e&#32;=&#32;m_entries&#32;+&#32;r_pos_hash_pair.first;
471 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;p_e-&gt;m_value)&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a1977af41f60349adb789e1309905356e">value_type</link>(r_val);
472 &#32;&#32;&#32;&#32;p_e-&gt;m_hash&#32;=&#32;r_pos_hash_pair.second;
473 &#32;&#32;&#32;&#32;p_e-&gt;m_stat&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>;
474 
475 &#32;&#32;&#32;&#32;resize_base::notify_inserted(++m_num_used_e);
476 
477 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(debug_base::insert_new(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_e-&gt;m_value));)
478 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
479 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;p_e-&gt;m_value;
480 &#32;&#32;&#32;&#32;&#32;&#32;}
481 
482 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
483 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4668e5e9e75d5651a0f88a78412245d2">mapped_reference</link>
484 &#32;&#32;&#32;&#32;&#32;&#32;subscript_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>&#32;key,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)
485 &#32;&#32;&#32;&#32;&#32;&#32;{
486 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
487 
488 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;pos&#32;=&#32;find_ins_pos(key,
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base::m_store_extra_indicator);
490 
491 &#32;&#32;&#32;&#32;entry_pointer&#32;p_e&#32;=&#32;&amp;m_entries[pos];
492 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_e-&gt;m_stat&#32;!=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
493 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;insert_new_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a1977af41f60349adb789e1309905356e">value_type</link>(key,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abb5657671d50fac8493a4541e93f16ce">mapped_type</link>()),&#32;pos)-&gt;second;
494 
495 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(key)
496 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p_e-&gt;m_value.second;
497 &#32;&#32;&#32;&#32;&#32;&#32;}
498 
499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a4668e5e9e75d5651a0f88a78412245d2">mapped_reference</link>
500 &#32;&#32;&#32;&#32;&#32;&#32;subscript_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>&#32;key,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)
501 &#32;&#32;&#32;&#32;&#32;&#32;{
502 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(assert_valid(__FILE__,&#32;__LINE__);)
503 
504 &#32;&#32;&#32;&#32;comp_hash&#32;pos_hash_pair&#32;=&#32;find_ins_pos(key,
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_base::m_store_extra_indicator);
506 
507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_entries[pos_hash_pair.first].m_stat&#32;!=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
508 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;insert_new_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a1977af41f60349adb789e1309905356e">value_type</link>(key,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abb5657671d50fac8493a4541e93f16ce">mapped_type</link>()),
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos_hash_pair)-&gt;second;
510 
511 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(key)
512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_entries&#32;+&#32;pos_hash_pair.first)-&gt;m_value.second;
513 &#32;&#32;&#32;&#32;&#32;&#32;}
514 <emphasis role="preprocessor">#endif</emphasis>
515 
516 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>
517 &#32;&#32;&#32;&#32;&#32;&#32;find_key_pointer(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>&#32;key,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)
518 &#32;&#32;&#32;&#32;&#32;&#32;{
519 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;hash&#32;=&#32;ranged_probe_fn_base::operator()(key);
520 &#32;&#32;&#32;&#32;resize_base::notify_find_search_start();
521 
522 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;until&#32;entry&#32;is&#32;found&#32;or&#32;until&#32;all&#32;possible&#32;entries&#32;accessed.</emphasis>
523 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_num_e;&#32;++i)
524 &#32;&#32;&#32;&#32;&#32;&#32;{
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;pos&#32;=&#32;ranged_probe_fn_base::operator()(key,
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash,&#32;i);
527 
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefind_l_s_b_1a9f3e2ce1c42e4e79e3976f44c44b77f9">entry</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;p_e&#32;=&#32;m_entries&#32;+&#32;pos;
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(p_e-&gt;m_stat)
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a59ee2044efbe9ec17437f9662d6267d2">empty_entry_status</link>:
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base::notify_find_search_end();
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(key)
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>:
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hash_eq_fn_base::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_e-&gt;m_value),&#32;key))
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base::notify_find_search_end();
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(key)
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ade615b2b03567957713948ba3d7c9f9d">pointer</link>(&amp;p_e-&gt;m_value);
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a721f7bbbf655459fd4c432d18b3d5c1e">erased_entry_status</link>:
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(0);
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
551 
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base::notify_find_search_collision();
553 &#32;&#32;&#32;&#32;&#32;&#32;}
554 
555 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(key)
556 &#32;&#32;&#32;&#32;resize_base::notify_find_search_end();
557 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
558 &#32;&#32;&#32;&#32;&#32;&#32;}
559 
560 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>
561 &#32;&#32;&#32;&#32;&#32;&#32;find_key_pointer(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>&#32;key,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)
562 &#32;&#32;&#32;&#32;&#32;&#32;{
563 &#32;&#32;&#32;&#32;comp_hash&#32;pos_hash_pair&#32;=&#32;ranged_probe_fn_base::operator()(key);
564 &#32;&#32;&#32;&#32;resize_base::notify_find_search_start();
565 
566 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;until&#32;entry&#32;is&#32;found&#32;or&#32;until&#32;all&#32;possible&#32;entries&#32;accessed.</emphasis>
567 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_num_e;&#32;++i)
568 &#32;&#32;&#32;&#32;&#32;&#32;{
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;pos&#32;=
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranged_probe_fn_base::operator()(key,&#32;pos_hash_pair.second,&#32;i);
571 
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefind_l_s_b_1a9f3e2ce1c42e4e79e3976f44c44b77f9">entry</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;p_e&#32;=&#32;m_entries&#32;+&#32;pos;
573 
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(p_e-&gt;m_stat)
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a59ee2044efbe9ec17437f9662d6267d2">empty_entry_status</link>:
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base::notify_find_search_end();
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(key)
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>:
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hash_eq_fn_base::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_e-&gt;m_value),
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_e-&gt;m_hash,
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;key,&#32;pos_hash_pair.second))
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base::notify_find_search_end();
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1acfae3994df576dbc37edc392d027c7ef">PB_DS_CHECK_KEY_EXISTS</link>(key)
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ade615b2b03567957713948ba3d7c9f9d">pointer</link>(&amp;p_e-&gt;m_value);
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a721f7bbbf655459fd4c432d18b3d5c1e">erased_entry_status</link>:
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(0);
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
598 
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize_base::notify_find_search_collision();
600 &#32;&#32;&#32;&#32;&#32;&#32;}
601 
602 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1aabe976c8ae811576bfa1b0786dcfe377">PB_DS_CHECK_KEY_DOES_NOT_EXIST</link>(key)
603 &#32;&#32;&#32;&#32;resize_base::notify_find_search_end();
604 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
605 &#32;&#32;&#32;&#32;&#32;&#32;}
606 
607 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
608 &#32;&#32;&#32;&#32;&#32;&#32;erase_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
609 
610 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
611 &#32;&#32;&#32;&#32;&#32;&#32;erase_imp(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1abcad40528001c56b6873dc97e5a6e1e1">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
612 
613 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
614 &#32;&#32;&#32;&#32;&#32;&#32;erase_entry(entry_pointer);
615 
616 <emphasis role="preprocessor">#ifdef&#32;PB_DS_DATA_TRUE_INDICATOR</emphasis>
617 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
618 &#32;&#32;&#32;&#32;&#32;&#32;inc_it_state(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&amp;&#32;r_p_value,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&amp;&#32;r_pos)<emphasis role="keyword">&#32;const</emphasis>
619 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;inc_it_state((<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a931783249ff85ecc597f688720455b44">mapped_const_pointer</link>&amp;&#32;)r_p_value,&#32;r_pos);&#32;}
620 <emphasis role="preprocessor">#endif</emphasis>
621 
622 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
623 &#32;&#32;&#32;&#32;&#32;&#32;inc_it_state(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a03003a054372b75acdfa280c38f71062">const_pointer</link>&amp;&#32;r_p_value,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&amp;&#32;r_pos)<emphasis role="keyword">&#32;const</emphasis>
624 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
625 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(r_p_value&#32;!=&#32;0);
626 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(++r_pos;&#32;r_pos&#32;&lt;&#32;m_num_e;&#32;++r_pos)
627 &#32;&#32;&#32;&#32;&#32;&#32;{
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_entry_pointer&#32;p_e&#32;=&amp;&#32;m_entries[r_pos];
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_e-&gt;m_stat&#32;==&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_p_value&#32;=&amp;&#32;p_e-&gt;m_value;
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
634 &#32;&#32;&#32;&#32;&#32;&#32;}
635 &#32;&#32;&#32;&#32;r_p_value&#32;=&#32;0;
636 &#32;&#32;&#32;&#32;&#32;&#32;}
637 
638 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
639 &#32;&#32;&#32;&#32;&#32;&#32;get_start_it_state(<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a03003a054372b75acdfa280c38f71062">const_pointer</link>&amp;&#32;r_p_value,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&amp;&#32;r_pos)<emphasis role="keyword">&#32;const</emphasis>
640 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
641 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(r_pos&#32;=&#32;0;&#32;r_pos&#32;&lt;&#32;m_num_e;&#32;++r_pos)
642 &#32;&#32;&#32;&#32;&#32;&#32;{
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_entry_pointer&#32;p_e&#32;=&#32;&amp;m_entries[r_pos];
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_e-&gt;m_stat&#32;==&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_p_value&#32;=&#32;&amp;p_e-&gt;m_value;
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
649 &#32;&#32;&#32;&#32;&#32;&#32;}
650 &#32;&#32;&#32;&#32;r_p_value&#32;=&#32;0;
651 &#32;&#32;&#32;&#32;&#32;&#32;}
652 
653 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
654 &#32;&#32;&#32;&#32;&#32;&#32;get_start_it_state(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>&amp;&#32;r_p_value,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&amp;&#32;r_pos)
655 &#32;&#32;&#32;&#32;&#32;&#32;{
656 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(r_pos&#32;=&#32;0;&#32;r_pos&#32;&lt;&#32;m_num_e;&#32;++r_pos)
657 &#32;&#32;&#32;&#32;&#32;&#32;{
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;entry_pointer&#32;p_e&#32;=&#32;&amp;m_entries[r_pos];
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_e-&gt;m_stat&#32;==&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_p_value&#32;=&#32;&amp;p_e-&gt;m_value;
662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
664 &#32;&#32;&#32;&#32;&#32;&#32;}
665 &#32;&#32;&#32;&#32;r_p_value&#32;=&#32;0;
666 &#32;&#32;&#32;&#32;&#32;&#32;}
667 
668 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
669 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
670 &#32;&#32;&#32;&#32;&#32;&#32;assert_entry_array_valid(<emphasis role="keyword">const</emphasis>&#32;entry_array,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>,
671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
672 
673 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
674 &#32;&#32;&#32;&#32;&#32;&#32;assert_entry_array_valid(<emphasis role="keyword">const</emphasis>&#32;entry_array,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>,
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
676 <emphasis role="preprocessor">#endif</emphasis>
677 
678 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;entry_allocator&#32;&#32;&#32;&#32;s_entry_allocator;
679 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;iterator&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_end_it;
680 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1a8ebd20dfefbb64b6d92d7dfedfd8a62a">const_iterator</link>&#32;&#32;&#32;&#32;&#32;s_const_end_it;
681 
682 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_num_e;
683 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e_1ac1d5d89aa602d2ba78d5a6b935c1fc31">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_num_used_e;
684 &#32;&#32;&#32;&#32;&#32;&#32;entry_pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_entries;
685 
686 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
687 &#32;&#32;&#32;&#32;{
688 &#32;&#32;&#32;&#32;&#32;&#32;store_hash_ok&#32;=&#32;!Store_Hash
689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;!is_same&lt;Hash_Fn,&#32;__gnu_pbds::null_type&gt;::value
690 &#32;&#32;&#32;&#32;};
691 
692 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp_1a0610a49e32a86da761a7bd14b8fddc33">PB_DS_STATIC_ASSERT</link>(sth,&#32;store_hash_ok);
693 &#32;&#32;&#32;&#32;};
694 
695 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp&gt;</emphasis>
696 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp&gt;</emphasis>
697 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp&gt;</emphasis>
698 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/debug_fn_imps.hpp&gt;</emphasis>
699 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/info_fn_imps.hpp&gt;</emphasis>
700 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp&gt;</emphasis>
701 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp&gt;</emphasis>
702 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp&gt;</emphasis>
703 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/insert_fn_imps.hpp&gt;</emphasis>
704 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/gp_hash_table_map_/trace_fn_imps.hpp&gt;</emphasis>
705 
706 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
707 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
708 <emphasis role="preprocessor">#undef&#32;PB_DS_HASH_EQ_FN_C_DEC</emphasis>
709 <emphasis role="preprocessor">#undef&#32;PB_DS_RANGED_PROBE_FN_C_DEC</emphasis>
710 <emphasis role="preprocessor">#undef&#32;PB_DS_GP_HASH_TRAITS_BASE</emphasis>
711 <emphasis role="preprocessor">#undef&#32;PB_DS_DEBUG_MAP_BASE_C_DEC</emphasis>
712 <emphasis role="preprocessor">#undef&#32;PB_DS_GP_HASH_NAME</emphasis>
713 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
714 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
</programlisting></section>
