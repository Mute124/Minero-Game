<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2raylib_2src_2physac_8h_source" xml:lang="en-US">
<title>physac.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/raylib/src/physac.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/**********************************************************************************************</emphasis>
2 <emphasis role="comment">*</emphasis>
3 <emphasis role="comment">*&#32;&#32;&#32;Physac&#32;v1.0&#32;-&#32;2D&#32;Physics&#32;library&#32;for&#32;videogames</emphasis>
4 <emphasis role="comment">*</emphasis>
5 <emphasis role="comment">*&#32;&#32;&#32;DESCRIPTION:</emphasis>
6 <emphasis role="comment">*</emphasis>
7 <emphasis role="comment">*&#32;&#32;&#32;Physac&#32;is&#32;a&#32;small&#32;2D&#32;physics&#32;engine&#32;written&#32;in&#32;pure&#32;C.&#32;The&#32;engine&#32;uses&#32;a&#32;fixed&#32;time-step&#32;thread&#32;loop</emphasis>
8 <emphasis role="comment">*&#32;&#32;&#32;to&#32;simluate&#32;physics.&#32;A&#32;physics&#32;step&#32;contains&#32;the&#32;following&#32;phases:&#32;get&#32;collision&#32;information,</emphasis>
9 <emphasis role="comment">*&#32;&#32;&#32;apply&#32;dynamics,&#32;collision&#32;solving&#32;and&#32;position&#32;correction.&#32;It&#32;uses&#32;a&#32;very&#32;simple&#32;struct&#32;for&#32;physic</emphasis>
10 <emphasis role="comment">*&#32;&#32;&#32;bodies&#32;with&#32;a&#32;position&#32;vector&#32;to&#32;be&#32;used&#32;in&#32;any&#32;3D&#32;rendering&#32;API.</emphasis>
11 <emphasis role="comment">*</emphasis>
12 <emphasis role="comment">*&#32;&#32;&#32;CONFIGURATION:</emphasis>
13 <emphasis role="comment">*</emphasis>
14 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_IMPLEMENTATION</emphasis>
15 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;the&#32;implementation&#32;of&#32;the&#32;library&#32;into&#32;the&#32;included&#32;file.</emphasis>
16 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;defined,&#32;the&#32;library&#32;is&#32;in&#32;header&#32;only&#32;mode&#32;and&#32;can&#32;be&#32;included&#32;in&#32;other&#32;headers</emphasis>
17 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;source&#32;files&#32;without&#32;problems.&#32;But&#32;only&#32;ONE&#32;file&#32;should&#32;hold&#32;the&#32;implementation.</emphasis>
18 <emphasis role="comment">*</emphasis>
19 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_STATIC&#32;(defined&#32;by&#32;default)</emphasis>
20 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;generated&#32;implementation&#32;will&#32;stay&#32;private&#32;inside&#32;implementation&#32;file&#32;and&#32;all</emphasis>
21 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;internal&#32;symbols&#32;and&#32;functions&#32;will&#32;only&#32;be&#32;visible&#32;inside&#32;that&#32;file.</emphasis>
22 <emphasis role="comment">*</emphasis>
23 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_NO_THREADS</emphasis>
24 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;generated&#32;implementation&#32;won&apos;t&#32;include&#32;pthread&#32;library&#32;and&#32;user&#32;must&#32;create&#32;a&#32;secondary&#32;thread&#32;to&#32;call&#32;PhysicsThread().</emphasis>
25 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;is&#32;so&#32;important&#32;that&#32;the&#32;thread&#32;where&#32;PhysicsThread()&#32;is&#32;called&#32;must&#32;not&#32;have&#32;v-sync&#32;or&#32;any&#32;other&#32;CPU&#32;limitation.</emphasis>
26 <emphasis role="comment">*</emphasis>
27 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_STANDALONE</emphasis>
28 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Avoid&#32;raylib.h&#32;header&#32;inclusion&#32;in&#32;this&#32;file.&#32;Data&#32;types&#32;defined&#32;on&#32;raylib&#32;are&#32;defined</emphasis>
29 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;internally&#32;in&#32;the&#32;library&#32;and&#32;input&#32;management&#32;and&#32;drawing&#32;functions&#32;must&#32;be&#32;provided&#32;by</emphasis>
30 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;user&#32;(check&#32;library&#32;implementation&#32;for&#32;further&#32;details).</emphasis>
31 <emphasis role="comment">*</emphasis>
32 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_DEBUG</emphasis>
33 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Traces&#32;log&#32;messages&#32;when&#32;creating&#32;and&#32;destroying&#32;physics&#32;bodies&#32;and&#32;detects&#32;errors&#32;in&#32;physics</emphasis>
34 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculations&#32;and&#32;reference&#32;exceptions;&#32;it&#32;is&#32;useful&#32;for&#32;debug&#32;purposes</emphasis>
35 <emphasis role="comment">*</emphasis>
36 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_MALLOC()</emphasis>
37 <emphasis role="comment">*&#32;&#32;&#32;#define&#32;PHYSAC_FREE()</emphasis>
38 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;You&#32;can&#32;define&#32;your&#32;own&#32;malloc/free&#32;implementation&#32;replacing&#32;stdlib.h&#32;malloc()/free()&#32;functions.</emphasis>
39 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Otherwise&#32;it&#32;will&#32;include&#32;stdlib.h&#32;and&#32;use&#32;the&#32;C&#32;standard&#32;library&#32;malloc()/free()&#32;function.</emphasis>
40 <emphasis role="comment">*</emphasis>
41 <emphasis role="comment">*</emphasis>
42 <emphasis role="comment">*&#32;&#32;&#32;NOTE&#32;1:&#32;Physac&#32;requires&#32;multi-threading,&#32;when&#32;InitPhysics()&#32;a&#32;second&#32;thread&#32;is&#32;created&#32;to&#32;manage&#32;physics&#32;calculations.</emphasis>
43 <emphasis role="comment">*&#32;&#32;&#32;NOTE&#32;2:&#32;Physac&#32;requires&#32;static&#32;C&#32;library&#32;linkage&#32;to&#32;avoid&#32;dependency&#32;on&#32;MinGW&#32;DLL&#32;(-static&#32;-lpthread)</emphasis>
44 <emphasis role="comment">*</emphasis>
45 <emphasis role="comment">*&#32;&#32;&#32;Use&#32;the&#32;following&#32;code&#32;to&#32;compile:</emphasis>
46 <emphasis role="comment">*&#32;&#32;&#32;gcc&#32;-o&#32;$(NAME_PART).exe&#32;$(FILE_NAME)&#32;-s&#32;-static&#32;-lraylib&#32;-lpthread&#32;-lopengl32&#32;-lgdi32&#32;-lwinmm&#32;-std=c99</emphasis>
47 <emphasis role="comment">*</emphasis>
48 <emphasis role="comment">*&#32;&#32;&#32;VERY&#32;THANKS&#32;TO:</emphasis>
49 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ramon&#32;Santamaria&#32;(github:&#32;@raysan5)</emphasis>
50 <emphasis role="comment">*</emphasis>
51 <emphasis role="comment">*</emphasis>
52 <emphasis role="comment">*&#32;&#32;&#32;LICENSE:&#32;zlib/libpng</emphasis>
53 <emphasis role="comment">*</emphasis>
54 <emphasis role="comment">*&#32;&#32;&#32;Copyright&#32;(c)&#32;2016-2018&#32;Victor&#32;Fisac&#32;(github:&#32;@victorfisac)</emphasis>
55 <emphasis role="comment">*</emphasis>
56 <emphasis role="comment">*&#32;&#32;&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as-is&quot;,&#32;without&#32;any&#32;express&#32;or&#32;implied&#32;warranty.&#32;In&#32;no&#32;event</emphasis>
57 <emphasis role="comment">*&#32;&#32;&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
58 <emphasis role="comment">*</emphasis>
59 <emphasis role="comment">*&#32;&#32;&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,&#32;including&#32;commercial</emphasis>
60 <emphasis role="comment">*&#32;&#32;&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
61 <emphasis role="comment">*</emphasis>
62 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not&#32;claim&#32;that&#32;you</emphasis>
63 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment</emphasis>
64 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;product&#32;documentation&#32;would&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
65 <emphasis role="comment">*</emphasis>
66 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not&#32;be&#32;misrepresented</emphasis>
67 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
68 <emphasis role="comment">*</emphasis>
69 <emphasis role="comment">*&#32;&#32;&#32;&#32;&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source&#32;distribution.</emphasis>
70 <emphasis role="comment">*</emphasis>
71 <emphasis role="comment">**********************************************************************************************/</emphasis>
72 
73 <emphasis role="preprocessor">#if&#32;!defined(PHYSAC_H)</emphasis>
74 <emphasis role="preprocessor">#define&#32;PHYSAC_H</emphasis>
75 
76 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_STATIC)</emphasis>
77 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;PHYSACDEF&#32;static&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Functions&#32;just&#32;visible&#32;to&#32;module&#32;including&#32;this&#32;file</emphasis>
78 <emphasis role="preprocessor">#else</emphasis>
79 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(__cplusplus)</emphasis>
80 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;PHYSACDEF&#32;extern&#32;&quot;C&quot;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Functions&#32;visible&#32;from&#32;other&#32;files&#32;(no&#32;name&#32;mangling&#32;of&#32;functions&#32;in&#32;C++)</emphasis>
81 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
82 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;PHYSACDEF&#32;extern&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Functions&#32;visible&#32;from&#32;other&#32;files</emphasis>
83 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
84 <emphasis role="preprocessor">#endif</emphasis>
85 
86 <emphasis role="comment">//&#32;Allow&#32;custom&#32;memory&#32;allocators</emphasis>
87 <emphasis role="preprocessor">#ifndef&#32;PHYSAC_MALLOC</emphasis>
88 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;PHYSAC_MALLOC(size)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;malloc(size)</emphasis>
89 <emphasis role="preprocessor">#endif</emphasis>
90 <emphasis role="preprocessor">#ifndef&#32;PHYSAC_FREE</emphasis>
91 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;PHYSAC_FREE(ptr)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(ptr)</emphasis>
92 <emphasis role="preprocessor">#endif</emphasis>
93 
94 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
95 <emphasis role="comment">//&#32;Defines&#32;and&#32;Macros</emphasis>
96 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
97 <emphasis role="preprocessor">#define&#32;PHYSAC_MAX_BODIES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;64</emphasis>
98 <emphasis role="preprocessor">#define&#32;PHYSAC_MAX_MANIFOLDS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4096</emphasis>
99 <emphasis role="preprocessor">#define&#32;PHYSAC_MAX_VERTICES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;24</emphasis>
100 <emphasis role="preprocessor">#define&#32;PHYSAC_CIRCLE_VERTICES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;24</emphasis>
101 
102 <emphasis role="preprocessor">#define&#32;PHYSAC_COLLISION_ITERATIONS&#32;&#32;&#32;&#32;&#32;100</emphasis>
103 <emphasis role="preprocessor">#define&#32;PHYSAC_PENETRATION_ALLOWANCE&#32;&#32;&#32;&#32;0.05f</emphasis>
104 <emphasis role="preprocessor">#define&#32;PHYSAC_PENETRATION_CORRECTION&#32;&#32;&#32;0.4f</emphasis>
105 
106 <emphasis role="preprocessor">#define&#32;PHYSAC_PI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3.14159265358979323846</emphasis>
107 <emphasis role="preprocessor">#define&#32;PHYSAC_DEG2RAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(PHYSAC_PI/180.0f)</emphasis>
108 
109 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
110 <emphasis role="comment">//&#32;Types&#32;and&#32;Structures&#32;Definition</emphasis>
111 <emphasis role="comment">//&#32;NOTE:&#32;Below&#32;types&#32;are&#32;required&#32;for&#32;PHYSAC_STANDALONE&#32;usage</emphasis>
112 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
113 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_STANDALONE)</emphasis>
114 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Boolean&#32;type</emphasis>
115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(__STDC__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;199901L</emphasis>
116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#include&#32;&lt;stdbool.h&gt;</emphasis>
117 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;!defined(__cplusplus)&#32;&amp;&amp;&#32;!defined(bool)</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;{&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>&#32;}&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1abb452686968e48b67397da5f97445f5b">bool</link>;
119 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
120 
121 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector2&#32;type</emphasis>
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vector2">Vector2</link>&#32;{
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;
125 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct_vector2">Vector2</link>;
126 <emphasis role="preprocessor">#endif</emphasis>
127 
128 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2">PhysicsShapeType</link>&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2ac52f184ec2784685ad9925ce25926302">PHYSICS_CIRCLE</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>&#32;}&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2">PhysicsShapeType</link>;
129 
130 <emphasis role="comment">//&#32;Previously&#32;defined&#32;to&#32;be&#32;used&#32;in&#32;PhysicsShape&#32;struct&#32;as&#32;circular&#32;dependencies</emphasis>
131 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>PhysicsBodyData&#32;*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>;
132 
133 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
134 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevents&#32;name&#32;mangling&#32;of&#32;functions</emphasis>
135 <emphasis role="preprocessor">#endif</emphasis>
136 
137 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
138 <emphasis role="comment">//&#32;Module&#32;Functions&#32;Declaration</emphasis>
139 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
140 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a4b48895042876145a30c869cd2aa1df2">InitPhysics</link>(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initializes&#32;physics&#32;values,&#32;pointers&#32;and&#32;creates&#32;physics&#32;loop&#32;thread</emphasis>
141 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a69a0234eb3c8368e483873d6420afdfe">RunPhysicsStep</link>(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Run&#32;physics&#32;step,&#32;to&#32;be&#32;used&#32;if&#32;PHYSICS_NO_THREADS&#32;is&#32;set&#32;in&#32;your&#32;main&#32;loop</emphasis>
142 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a16b0f1673f0c9f4f11681c44175e11b0">SetPhysicsTimeStep</link>(<emphasis role="keywordtype">double</emphasis>&#32;delta);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sets&#32;physics&#32;fixed&#32;time&#32;step&#32;in&#32;milliseconds.&#32;1.666666&#32;by&#32;default</emphasis>
143 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a6da3fe5f97b3b40f0d974564574209c4">IsPhysicsEnabled</link>(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;true&#32;if&#32;physics&#32;thread&#32;is&#32;currently&#32;enabled</emphasis>
144 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a3b0f5721619a7cfa149ea888390391cc">SetPhysicsGravity</link>(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sets&#32;physics&#32;global&#32;gravity&#32;force</emphasis>
145 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2489c2a6b38f3d131718d34bcd4d4fb3">CreatePhysicsBodyCircle</link>(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">float</emphasis>&#32;density);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;circle&#32;physics&#32;body&#32;with&#32;generic&#32;parameters</emphasis>
146 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa929b2dced0384b1d7481e12cb2441cd">CreatePhysicsBodyRectangle</link>(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;density);&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;rectangle&#32;physics&#32;body&#32;with&#32;generic&#32;parameters</emphasis>
147 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad6030edbadf59a3282c4efc6ab788af4">CreatePhysicsBodyPolygon</link>(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sides,&#32;<emphasis role="keywordtype">float</emphasis>&#32;density);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;polygon&#32;physics&#32;body&#32;with&#32;generic&#32;parameters</emphasis>
148 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1af91260890a4d393daabd7ccbaa68bd88">PhysicsAddForce</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;force);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adds&#32;a&#32;force&#32;to&#32;a&#32;physics&#32;body</emphasis>
149 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a96cbe2da7806bca2613bd631d67b77f9">PhysicsAddTorque</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adds&#32;an&#32;angular&#32;force&#32;to&#32;a&#32;physics&#32;body</emphasis>
150 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a889825c97ad126f2214138b292228ebc">PhysicsShatter</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;force);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Shatters&#32;a&#32;polygon&#32;shape&#32;physics&#32;body&#32;to&#32;little&#32;physics&#32;bodies&#32;with&#32;explosion&#32;force</emphasis>
151 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a350c0d591ad19010d4418959aa0dc4d4">GetPhysicsBodiesCount</link>(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;current&#32;amount&#32;of&#32;created&#32;physics&#32;bodies</emphasis>
152 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aac418df155457262a4a4b417b561ad62">GetPhysicsBody</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;a&#32;physics&#32;body&#32;of&#32;the&#32;bodies&#32;pool&#32;at&#32;a&#32;specific&#32;index</emphasis>
153 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1addb7f9bbc5251fa1d4de67161a50a309">GetPhysicsShapeType</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;physics&#32;body&#32;shape&#32;type&#32;(PHYSICS_CIRCLE&#32;or&#32;PHYSICS_POLYGON)</emphasis>
154 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a46765a67364a90a4e09780379e5879f2">GetPhysicsShapeVerticesCount</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;amount&#32;of&#32;vertices&#32;of&#32;a&#32;physics&#32;body&#32;shape</emphasis>
155 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ab58b21f32cf71ab4ee6aaca5d0eeade7">GetPhysicsShapeVertex</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertex);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;transformed&#32;position&#32;of&#32;a&#32;body&#32;shape&#32;(body&#32;position&#32;+&#32;vertex&#32;transformed&#32;position)</emphasis>
156 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a66a58adbf676a4eb0e42cb38f5318a50">SetPhysicsBodyRotation</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radians);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sets&#32;physics&#32;body&#32;shape&#32;transform&#32;based&#32;on&#32;radians&#32;parameter</emphasis>
157 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a911864d07aaed6b720d53e8356a59b42">DestroyPhysicsBody</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitializes&#32;and&#32;destroy&#32;a&#32;physics&#32;body</emphasis>
158 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ac55a522461ae0a871d5ad0a29242d9f2">ResetPhysics</link>(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Destroys&#32;created&#32;physics&#32;bodies&#32;and&#32;manifolds&#32;and&#32;resets&#32;global&#32;values</emphasis>
159 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a9a74b70f4d601fc52b58d3219d97f4de">ClosePhysics</link>(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitializes&#32;physics&#32;pointers&#32;and&#32;closes&#32;physics&#32;loop&#32;thread</emphasis>
160 
161 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
162 }
163 <emphasis role="preprocessor">#endif</emphasis>
164 
165 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;PHYSAC_H</emphasis>
166 
167 <emphasis role="comment">/***********************************************************************************</emphasis>
168 <emphasis role="comment">*</emphasis>
169 <emphasis role="comment">*&#32;&#32;&#32;PHYSAC&#32;IMPLEMENTATION</emphasis>
170 <emphasis role="comment">*</emphasis>
171 <emphasis role="comment">************************************************************************************/</emphasis>
172 
173 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_IMPLEMENTATION)</emphasis>
174 
175 <emphasis role="preprocessor">#if&#32;!defined(PHYSAC_NO_THREADS)</emphasis>
176 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;pthread.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;pthread_t,&#32;pthread_create()</emphasis>
177 <emphasis role="preprocessor">#endif</emphasis>
178 
179 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_DEBUG)</emphasis>
180 
181 <emphasis role="preprocessor">#endif</emphasis>
182 
183 <emphasis role="comment">//&#32;Support&#32;TRACELOG&#32;macros</emphasis>
184 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_DEBUG)</emphasis>
185 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;stdio.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;printf()</emphasis>
186 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;TRACELOG(...)&#32;printf(__VA_ARGS__)</emphasis>
187 <emphasis role="preprocessor">#else</emphasis>
188 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;TRACELOG(...)&#32;(void)0</emphasis>
189 <emphasis role="preprocessor">#endif</emphasis>
190 
191 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;malloc(),&#32;free(),&#32;srand(),&#32;rand()</emphasis>
192 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;cosf(),&#32;sinf(),&#32;fabs(),&#32;sqrtf()</emphasis>
193 
194 <emphasis role="preprocessor">#if&#32;!defined(PHYSAC_STANDALONE)</emphasis>
195 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&quot;raymath.h&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;Vector2Add(),&#32;Vector2Subtract()</emphasis>
196 <emphasis role="preprocessor">#endif</emphasis>
197 
198 <emphasis role="comment">//&#32;Time&#32;management&#32;functionality</emphasis>
199 <emphasis role="preprocessor">#include&#32;&lt;time.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;time(),&#32;clock_gettime()</emphasis>
200 <emphasis role="preprocessor">#if&#32;defined(_WIN32)</emphasis>
201 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Functions&#32;required&#32;to&#32;query&#32;time&#32;on&#32;Windows</emphasis>
202 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__stdcall&#32;QueryPerformanceCounter(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*lpPerformanceCount);
203 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__stdcall&#32;QueryPerformanceFrequency(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*lpFrequency);
204 <emphasis role="preprocessor">#elif&#32;defined(__linux__)</emphasis>
205 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;_POSIX_C_SOURCE&#32;&lt;&#32;199309L</emphasis>
206 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#undef&#32;_POSIX_C_SOURCE</emphasis>
207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;_POSIX_C_SOURCE&#32;199309L&#32;</emphasis><emphasis role="comment">//&#32;Required&#32;for&#32;CLOCK_MONOTONIC&#32;if&#32;compiled&#32;with&#32;c99&#32;without&#32;gnu&#32;ext.</emphasis>
208 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
209 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;sys/time.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;timespec</emphasis>
210 <emphasis role="preprocessor">#elif&#32;defined(__APPLE__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;macOS&#32;also&#32;defines&#32;__MACH__</emphasis>
211 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;mach/mach_time.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Required&#32;for:&#32;mach_absolute_time()</emphasis>
212 <emphasis role="preprocessor">#endif</emphasis>
213 
214 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
215 <emphasis role="comment">//&#32;Defines&#32;and&#32;Macros</emphasis>
216 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
217 <emphasis role="preprocessor">#define&#32;min(a,b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((a)&lt;(b))?(a):(b))</emphasis>
218 <emphasis role="preprocessor">#define&#32;max(a,b)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((a)&gt;(b))?(a):(b))</emphasis>
219 <emphasis role="preprocessor">#define&#32;PHYSAC_FLT_MAX&#32;&#32;&#32;&#32;&#32;&#32;3.402823466e+38f</emphasis>
220 <emphasis role="preprocessor">#define&#32;PHYSAC_EPSILON&#32;&#32;&#32;&#32;&#32;&#32;0.000001f</emphasis>
221 <emphasis role="preprocessor">#define&#32;PHYSAC_K&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.0f/3.0f</emphasis>
222 <emphasis role="preprocessor">#define&#32;PHYSAC_VECTOR_ZERO&#32;&#32;(Vector2){&#32;0.0f,&#32;0.0f&#32;}</emphasis>
223 
224 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
225 <emphasis role="comment">//&#32;Data&#32;Types&#32;Structure&#32;Definition</emphasis>
226 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
227 
228 <emphasis role="comment">//&#32;Matrix2x2&#32;type&#32;(used&#32;for&#32;polygon&#32;shape&#32;rotation&#32;matrix)</emphasis>
229 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>Matrix2x2&#32;{
230 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m00;
231 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m01;
232 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m10;
233 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m11;
234 }&#32;Matrix2x2;
235 
236 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>PolygonData&#32;{
237 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertexCount;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;used&#32;vertex&#32;and&#32;normals&#32;count</emphasis>
238 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="_main_8cpp_1a775ca8b7a84578b4945604e3c486d996">positions</link>[<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa0f9c500644a5a839a258a16b9638254">PHYSAC_MAX_VERTICES</link>];&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Polygon&#32;vertex&#32;positions&#32;vectors</emphasis>
239 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normals[<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa0f9c500644a5a839a258a16b9638254">PHYSAC_MAX_VERTICES</link>];&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Polygon&#32;vertex&#32;normals&#32;vectors</emphasis>
240 }&#32;PolygonData;
241 
242 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>PhysicsShape&#32;{
243 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2">PhysicsShapeType</link>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;shape&#32;type&#32;(circle&#32;or&#32;polygon)</emphasis>
244 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Shape&#32;physics&#32;body&#32;reference</emphasis>
245 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Circle&#32;shape&#32;radius&#32;(used&#32;for&#32;circle&#32;shapes)</emphasis>
246 &#32;&#32;&#32;&#32;Matrix2x2&#32;<link linkend="_namespacestd_1a83797c5677d80005911de218c819adab">transform</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vertices&#32;transform&#32;matrix&#32;2x2</emphasis>
247 &#32;&#32;&#32;&#32;PolygonData&#32;vertexData;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Polygon&#32;shape&#32;vertices&#32;position&#32;and&#32;normals&#32;data&#32;(just&#32;used&#32;for&#32;polygon&#32;shapes)</emphasis>
248 }&#32;PhysicsShape;
249 
250 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>PhysicsBodyData&#32;{
251 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reference&#32;unique&#32;identifier</emphasis>
252 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a6274613d79de73fa67d1b6c4aa70c9d3">enabled</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Enabled&#32;dynamics&#32;state&#32;(collisions&#32;are&#32;calculated&#32;anyway)</emphasis>
253 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;body&#32;shape&#32;pivot</emphasis>
254 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;velocity;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;linear&#32;velocity&#32;applied&#32;to&#32;position</emphasis>
255 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;force;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;linear&#32;force&#32;(reset&#32;to&#32;0&#32;every&#32;step)</emphasis>
256 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angularVelocity;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;angular&#32;velocity&#32;applied&#32;to&#32;orient</emphasis>
257 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;torque;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;angular&#32;force&#32;(reset&#32;to&#32;0&#32;every&#32;step)</emphasis>
258 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;orient;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotation&#32;in&#32;radians</emphasis>
259 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inertia;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Moment&#32;of&#32;inertia</emphasis>
260 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inverseInertia;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Inverse&#32;value&#32;of&#32;inertia</emphasis>
261 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mass;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;body&#32;mass</emphasis>
262 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inverseMass;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Inverse&#32;value&#32;of&#32;mass</emphasis>
263 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;staticFriction;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Friction&#32;when&#32;the&#32;body&#32;has&#32;not&#32;movement&#32;(0&#32;to&#32;1)</emphasis>
264 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dynamicFriction;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Friction&#32;when&#32;the&#32;body&#32;has&#32;movement&#32;(0&#32;to&#32;1)</emphasis>
265 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;restitution;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Restitution&#32;coefficient&#32;of&#32;the&#32;body&#32;(0&#32;to&#32;1)</emphasis>
266 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useGravity;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;gravity&#32;force&#32;to&#32;dynamics</emphasis>
267 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isGrounded;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;grounded&#32;on&#32;other&#32;body&#32;state</emphasis>
268 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;freezeOrient;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;rotation&#32;constraint</emphasis>
269 &#32;&#32;&#32;&#32;PhysicsShape&#32;shape;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;body&#32;shape&#32;information&#32;(type,&#32;radius,&#32;vertices,&#32;normals)</emphasis>
270 }&#32;PhysicsBodyData;
271 
272 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>PhysicsManifoldData&#32;{
273 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reference&#32;unique&#32;identifier</emphasis>
274 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Manifold&#32;first&#32;physics&#32;body&#32;reference</emphasis>
275 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Manifold&#32;second&#32;physics&#32;body&#32;reference</emphasis>
276 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;penetration;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Depth&#32;of&#32;penetration&#32;from&#32;collision</emphasis>
277 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normal&#32;direction&#32;vector&#32;from&#32;&apos;a&apos;&#32;to&#32;&apos;b&apos;</emphasis>
278 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;contacts[2];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Points&#32;of&#32;contact&#32;during&#32;collision</emphasis>
279 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;contactsCount;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;collision&#32;number&#32;of&#32;contacts</emphasis>
280 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;restitution;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mixed&#32;restitution&#32;during&#32;collision</emphasis>
281 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dynamicFriction;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mixed&#32;dynamic&#32;friction&#32;during&#32;collision</emphasis>
282 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;staticFriction;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mixed&#32;static&#32;friction&#32;during&#32;collision</emphasis>
283 }&#32;PhysicsManifoldData,&#32;*PhysicsManifold;
284 
285 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
286 <emphasis role="comment">//&#32;Global&#32;Variables&#32;Definition</emphasis>
287 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
288 <emphasis role="preprocessor">#if&#32;!defined(PHYSAC_NO_THREADS)</emphasis>
289 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2pthread_8h_1a5a968e6376296a133fae83572d4b2efc">pthread_t</link>&#32;physicsThreadId;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;thread&#32;id</emphasis>
290 <emphasis role="preprocessor">#endif</emphasis>
291 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;usedMemory&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Total&#32;allocated&#32;dynamic&#32;memory</emphasis>
292 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;physicsThreadEnabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;thread&#32;enabled&#32;state</emphasis>
293 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;baseTime&#32;=&#32;0.0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Offset&#32;time&#32;for&#32;MONOTONIC&#32;clock</emphasis>
294 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;startTime&#32;=&#32;0.0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Start&#32;time&#32;in&#32;milliseconds</emphasis>
295 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;deltaTime&#32;=&#32;1.0/60.0/10.0&#32;*&#32;1000;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Delta&#32;time&#32;used&#32;for&#32;physics&#32;steps,&#32;in&#32;milliseconds</emphasis>
296 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;currentTime&#32;=&#32;0.0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;time&#32;in&#32;milliseconds</emphasis>
297 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;frequency&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hi-res&#32;clock&#32;frequency</emphasis>
298 
299 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;accumulator&#32;=&#32;0.0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;time&#32;step&#32;delta&#32;time&#32;accumulator</emphasis>
300 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stepsCount&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Total&#32;physics&#32;steps&#32;processed</emphasis>
301 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;gravityForce&#32;=&#32;{&#32;0.0f,&#32;9.81f&#32;};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;world&#32;gravity&#32;force</emphasis>
302 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodies[<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a190bf80c86ef94ae2f242c31a5913a51">PHYSAC_MAX_BODIES</link>];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;bodies&#32;pointers&#32;array</emphasis>
303 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;physicsBodiesCount&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;world&#32;current&#32;bodies&#32;counter</emphasis>
304 <emphasis role="keyword">static</emphasis>&#32;PhysicsManifold&#32;contacts[<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a9754046a1da8366360c5520c90355ecc">PHYSAC_MAX_MANIFOLDS</link>];&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;bodies&#32;pointers&#32;array</emphasis>
305 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;physicsManifoldsCount&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;world&#32;current&#32;manifolds&#32;counter</emphasis>
306 
307 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
308 <emphasis role="comment">//&#32;Module&#32;Internal&#32;Functions&#32;Declaration</emphasis>
309 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
310 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;FindAvailableBodyIndex();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Finds&#32;a&#32;valid&#32;index&#32;for&#32;a&#32;new&#32;physics&#32;body&#32;initialization</emphasis>
311 <emphasis role="keyword">static</emphasis>&#32;PolygonData&#32;CreateRandomPolygon(<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sides);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;random&#32;polygon&#32;shape&#32;with&#32;max&#32;vertex&#32;distance&#32;from&#32;polygon&#32;pivot</emphasis>
312 <emphasis role="keyword">static</emphasis>&#32;PolygonData&#32;CreateRectanglePolygon(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;rectangle&#32;polygon&#32;shape&#32;based&#32;on&#32;a&#32;min&#32;and&#32;max&#32;positions</emphasis>
313 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*PhysicsLoop(<emphasis role="keywordtype">void</emphasis>&#32;*arg);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;loop&#32;thread&#32;function</emphasis>
314 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;PhysicsStep(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;steps&#32;calculations&#32;(dynamics,&#32;collisions&#32;and&#32;position&#32;corrections)</emphasis>
315 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;FindAvailableManifoldIndex();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Finds&#32;a&#32;valid&#32;index&#32;for&#32;a&#32;new&#32;manifold&#32;initialization</emphasis>
316 <emphasis role="keyword">static</emphasis>&#32;PhysicsManifold&#32;CreatePhysicsManifold(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;physics&#32;manifold&#32;to&#32;solve&#32;collision</emphasis>
317 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DestroyPhysicsManifold(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitializes&#32;and&#32;destroys&#32;a&#32;physics&#32;manifold</emphasis>
318 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolvePhysicsManifold(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Solves&#32;a&#32;created&#32;physics&#32;manifold&#32;between&#32;two&#32;physics&#32;bodies</emphasis>
319 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolveCircleToCircle(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;two&#32;circle&#32;shape&#32;physics&#32;bodies</emphasis>
320 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolveCircleToPolygon(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;a&#32;circle&#32;to&#32;a&#32;polygon&#32;shape&#32;physics&#32;bodies</emphasis>
321 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolvePolygonToCircle(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;a&#32;polygon&#32;to&#32;a&#32;circle&#32;shape&#32;physics&#32;bodies</emphasis>
322 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolvePolygonToPolygon(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;two&#32;polygons&#32;shape&#32;physics&#32;bodies</emphasis>
323 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IntegratePhysicsForces(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Integrates&#32;physics&#32;forces&#32;into&#32;velocity</emphasis>
324 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializePhysicsManifolds(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initializes&#32;physics&#32;manifolds&#32;to&#32;solve&#32;collisions</emphasis>
325 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IntegratePhysicsImpulses(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Integrates&#32;physics&#32;collisions&#32;impulses&#32;to&#32;solve&#32;collisions</emphasis>
326 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IntegratePhysicsVelocity(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Integrates&#32;physics&#32;velocity&#32;into&#32;position&#32;and&#32;forces</emphasis>
327 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CorrectPhysicsPositions(PhysicsManifold&#32;manifold);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Corrects&#32;physics&#32;bodies&#32;positions&#32;based&#32;on&#32;manifolds&#32;collision&#32;information</emphasis>
328 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;FindAxisLeastPenetration(<emphasis role="keywordtype">int</emphasis>&#32;*faceIndex,&#32;PhysicsShape&#32;shapeA,&#32;PhysicsShape&#32;shapeB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Finds&#32;polygon&#32;shapes&#32;axis&#32;least&#32;penetration</emphasis>
329 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FindIncidentFace(<link linkend="_struct_vector2">Vector2</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;PhysicsShape&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a083de4c8e32ad3d9059245f26be721de">ref</link>,&#32;PhysicsShape&#32;inc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>);&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Finds&#32;two&#32;polygon&#32;shapes&#32;incident&#32;face</emphasis>
330 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Clip(<link linkend="_struct_vector2">Vector2</link>&#32;normal,&#32;<emphasis role="keywordtype">float</emphasis>&#32;clip,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*faceA,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*faceB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculates&#32;clipping&#32;based&#32;on&#32;a&#32;normal&#32;and&#32;two&#32;faces</emphasis>
331 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;BiasGreaterThan(<emphasis role="keywordtype">float</emphasis>&#32;valueA,&#32;<emphasis role="keywordtype">float</emphasis>&#32;valueB);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;values&#32;are&#32;between&#32;bias&#32;range</emphasis>
332 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;TriangleBarycenter(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;barycenter&#32;of&#32;a&#32;triangle&#32;given&#32;by&#32;3&#32;points</emphasis>
333 
334 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitTimer(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initializes&#32;hi-resolution&#32;MONOTONIC&#32;timer</emphasis>
335 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetTimeCount(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;hi-res&#32;MONOTONIC&#32;time&#32;measure&#32;in&#32;mseconds</emphasis>
336 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;GetCurrentTime(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;current&#32;time&#32;measure&#32;in&#32;milliseconds</emphasis>
337 
338 <emphasis role="comment">//&#32;Math&#32;functions</emphasis>
339 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;MathCross(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;vector);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;cross&#32;product&#32;of&#32;a&#32;vector&#32;and&#32;a&#32;value</emphasis>
340 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;MathCrossVector2(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;cross&#32;product&#32;of&#32;two&#32;vectors</emphasis>
341 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;MathLenSqr(<link linkend="_struct_vector2">Vector2</link>&#32;vector);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;len&#32;square&#32;root&#32;of&#32;a&#32;vector</emphasis>
342 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;MathDot(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;dot&#32;product&#32;of&#32;two&#32;vectors</emphasis>
343 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;DistSqr(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;square&#32;root&#32;of&#32;distance&#32;between&#32;two&#32;vectors</emphasis>
344 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MathNormalize(<link linkend="_struct_vector2">Vector2</link>&#32;*vector);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;normalized&#32;values&#32;of&#32;a&#32;vector</emphasis>
345 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_STANDALONE)</emphasis>
346 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;sum&#32;of&#32;two&#32;given&#32;vectors</emphasis>
347 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;subtract&#32;of&#32;two&#32;given&#32;vectors</emphasis>
348 <emphasis role="preprocessor">#endif</emphasis>
349 
350 <emphasis role="keyword">static</emphasis>&#32;Matrix2x2&#32;Mat2Radians(<emphasis role="keywordtype">float</emphasis>&#32;radians);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creates&#32;a&#32;matrix&#32;2x2&#32;from&#32;a&#32;given&#32;radians&#32;value</emphasis>
351 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Mat2Set(Matrix2x2&#32;*matrix,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radians);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;values&#32;from&#32;radians&#32;to&#32;a&#32;created&#32;matrix&#32;2x2</emphasis>
352 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;Matrix2x2&#32;Mat2Transpose(Matrix2x2&#32;matrix);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Returns&#32;the&#32;transpose&#32;of&#32;a&#32;given&#32;matrix&#32;2x2</emphasis>
353 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;Mat2MultiplyVector2(Matrix2x2&#32;matrix,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;vector);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Multiplies&#32;a&#32;vector&#32;by&#32;a&#32;matrix&#32;2x2</emphasis>
354 
355 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
356 <emphasis role="comment">//&#32;Module&#32;Functions&#32;Definition</emphasis>
357 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
358 <emphasis role="comment">//&#32;Initializes&#32;physics&#32;values,&#32;pointers&#32;and&#32;creates&#32;physics&#32;loop&#32;thread</emphasis>
359 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a4b48895042876145a30c869cd2aa1df2">InitPhysics</link>(<emphasis role="keywordtype">void</emphasis>)
360 {
361 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;!defined(PHYSAC_NO_THREADS)</emphasis>
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;if&#32;defined,&#32;user&#32;will&#32;need&#32;to&#32;create&#32;a&#32;thread&#32;for&#32;PhysicsThread&#32;function&#32;manually</emphasis>
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;physics&#32;thread&#32;using&#32;POSIXS&#32;thread&#32;libraries</emphasis>
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2pthread_8h_1ab3431d2d45bf174acdcecde5dac5839c">pthread_create</link>(&amp;physicsThreadId,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;&amp;PhysicsLoop,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
365 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
366 
367 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;high&#32;resolution&#32;timer</emphasis>
368 &#32;&#32;&#32;&#32;InitTimer();
369 
370 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;module&#32;initialized&#32;successfully\n&quot;</emphasis>);
372 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
373 
374 &#32;&#32;&#32;&#32;accumulator&#32;=&#32;0.0;
375 }
376 
377 <emphasis role="comment">//&#32;Returns&#32;true&#32;if&#32;physics&#32;thread&#32;is&#32;currently&#32;enabled</emphasis>
378 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a6da3fe5f97b3b40f0d974564574209c4">IsPhysicsEnabled</link>(<emphasis role="keywordtype">void</emphasis>)
379 {
380 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;physicsThreadEnabled;
381 }
382 
383 <emphasis role="comment">//&#32;Sets&#32;physics&#32;global&#32;gravity&#32;force</emphasis>
384 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a3b0f5721619a7cfa149ea888390391cc">SetPhysicsGravity</link>(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
385 {
386 &#32;&#32;&#32;&#32;gravityForce.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
387 &#32;&#32;&#32;&#32;gravityForce.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
388 }
389 
390 <emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;circle&#32;physics&#32;body&#32;with&#32;generic&#32;parameters</emphasis>
391 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2489c2a6b38f3d131718d34bcd4d4fb3">CreatePhysicsBodyCircle</link>(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">float</emphasis>&#32;density)
392 {
393 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;newBody&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad6030edbadf59a3282c4efc6ab788af4">CreatePhysicsBodyPolygon</link>(pos,&#32;radius,&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a16b800789914ceecc7ce970a7010decd">PHYSAC_CIRCLE_VERTICES</link>,&#32;density);
394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newBody;
395 }
396 
397 <emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;rectangle&#32;physics&#32;body&#32;with&#32;generic&#32;parameters</emphasis>
398 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa929b2dced0384b1d7481e12cb2441cd">CreatePhysicsBodyRectangle</link>(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;density)
399 {
400 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;newBody&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>)<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad49145d4b9c373799e48cb64ab30a2d7">PHYSAC_MALLOC</link>(<emphasis role="keyword">sizeof</emphasis>(PhysicsBodyData));
401 &#32;&#32;&#32;&#32;usedMemory&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsBodyData);
402 
403 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newId&#32;=&#32;FindAvailableBodyIndex();
404 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newId&#32;!=&#32;-1)
405 &#32;&#32;&#32;&#32;{
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;new&#32;body&#32;with&#32;generic&#32;values</emphasis>
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;id&#32;=&#32;newId;
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;position&#32;=&#32;pos;
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;velocity&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;0.0f&#32;};
411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;force&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;0.0f&#32;};
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;angularVelocity&#32;=&#32;0.0f;
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;torque&#32;=&#32;0.0f;
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;orient&#32;=&#32;0.0f;
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.type&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>;
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.body&#32;=&#32;newBody;
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.radius&#32;=&#32;0.0f;
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.transform&#32;=&#32;Mat2Radians(0.0f);
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData&#32;=&#32;CreateRectanglePolygon(pos,&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;});
420 
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;centroid&#32;and&#32;moment&#32;of&#32;inertia</emphasis>
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;center&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;area&#32;=&#32;0.0f;
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inertia&#32;=&#32;0.0f;
425 
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount;&#32;i++)
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Triangle&#32;vertices,&#32;third&#32;vertex&#32;implied&#32;as&#32;(0,&#32;0)</emphasis>
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;p1&#32;=&#32;newBody-&gt;shape.vertexData.positions[i];
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((i&#32;+&#32;1)&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount)&#32;?&#32;(i&#32;+&#32;1)&#32;:&#32;0);
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;p2&#32;=&#32;newBody-&gt;shape.vertexData.positions[nextIndex];
432 
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;D&#32;=&#32;MathCrossVector2(p1,&#32;p2);
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;triangleArea&#32;=&#32;D/2;
435 
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area&#32;+=&#32;triangleArea;
437 
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;area&#32;to&#32;weight&#32;the&#32;centroid&#32;average,&#32;not&#32;just&#32;vertex&#32;position</emphasis>
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.x&#32;+=&#32;triangleArea*PHYSAC_K*(p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.y&#32;+=&#32;triangleArea*PHYSAC_K*(p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
441 
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;intx2&#32;=&#32;p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inty2&#32;=&#32;p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inertia&#32;+=&#32;(0.25f*PHYSAC_K*D)*(intx2&#32;+&#32;inty2);
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
446 
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.x&#32;*=&#32;1.0f/area;
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.y&#32;*=&#32;1.0f/area;
449 
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Translate&#32;vertices&#32;to&#32;centroid&#32;(make&#32;the&#32;centroid&#32;(0,&#32;0)&#32;for&#32;the&#32;polygon&#32;in&#32;model&#32;space)</emphasis>
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;this&#32;is&#32;not&#32;really&#32;necessary</emphasis>
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount;&#32;i++)
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData.positions[i].x&#32;-=&#32;center.x;
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData.positions[i].y&#32;-=&#32;center.y;
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
457 
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;mass&#32;=&#32;density*area;
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inverseMass&#32;=&#32;((newBody-&gt;mass&#32;!=&#32;0.0f)&#32;?&#32;1.0f/newBody-&gt;mass&#32;:&#32;0.0f);
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inertia&#32;=&#32;density*inertia;
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inverseInertia&#32;=&#32;((newBody-&gt;inertia&#32;!=&#32;0.0f)&#32;?&#32;1.0f/newBody-&gt;inertia&#32;:&#32;0.0f);
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;staticFriction&#32;=&#32;0.4f;
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;dynamicFriction&#32;=&#32;0.2f;
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;restitution&#32;=&#32;0.0f;
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;useGravity&#32;=&#32;<emphasis role="keyword">true</emphasis>;
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;isGrounded&#32;=&#32;<emphasis role="keyword">false</emphasis>;
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;freezeOrient&#32;=&#32;<emphasis role="keyword">false</emphasis>;
468 
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;new&#32;body&#32;to&#32;bodies&#32;pointers&#32;array&#32;and&#32;update&#32;bodies&#32;count</emphasis>
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodies[physicsBodiesCount]&#32;=&#32;newBody;
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;physicsBodiesCount++;
472 
473 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;created&#32;polygon&#32;physics&#32;body&#32;id&#32;%i\n&quot;</emphasis>,&#32;newBody-&gt;id);
475 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
476 &#32;&#32;&#32;&#32;}
477 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;new&#32;physics&#32;body&#32;creation&#32;failed&#32;because&#32;there&#32;is&#32;any&#32;available&#32;id&#32;to&#32;use\n&quot;</emphasis>);
479 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
480 
481 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newBody;
482 }
483 
484 <emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;polygon&#32;physics&#32;body&#32;with&#32;generic&#32;parameters</emphasis>
485 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad6030edbadf59a3282c4efc6ab788af4">CreatePhysicsBodyPolygon</link>(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sides,&#32;<emphasis role="keywordtype">float</emphasis>&#32;density)
486 {
487 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;newBody&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>)<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad49145d4b9c373799e48cb64ab30a2d7">PHYSAC_MALLOC</link>(<emphasis role="keyword">sizeof</emphasis>(PhysicsBodyData));
488 &#32;&#32;&#32;&#32;usedMemory&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsBodyData);
489 
490 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newId&#32;=&#32;FindAvailableBodyIndex();
491 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newId&#32;!=&#32;-1)
492 &#32;&#32;&#32;&#32;{
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;new&#32;body&#32;with&#32;generic&#32;values</emphasis>
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;id&#32;=&#32;newId;
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;position&#32;=&#32;pos;
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;velocity&#32;=&#32;PHYSAC_VECTOR_ZERO;
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;force&#32;=&#32;PHYSAC_VECTOR_ZERO;
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;angularVelocity&#32;=&#32;0.0f;
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;torque&#32;=&#32;0.0f;
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;orient&#32;=&#32;0.0f;
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.type&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>;
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.body&#32;=&#32;newBody;
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.transform&#32;=&#32;Mat2Radians(0.0f);
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData&#32;=&#32;CreateRandomPolygon(radius,&#32;sides);
506 
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;centroid&#32;and&#32;moment&#32;of&#32;inertia</emphasis>
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;center&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;area&#32;=&#32;0.0f;
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inertia&#32;=&#32;0.0f;
511 
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount;&#32;i++)
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Triangle&#32;vertices,&#32;third&#32;vertex&#32;implied&#32;as&#32;(0,&#32;0)</emphasis>
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;position1&#32;=&#32;newBody-&gt;shape.vertexData.positions[i];
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((i&#32;+&#32;1)&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount)&#32;?&#32;(i&#32;+&#32;1)&#32;:&#32;0);
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;position2&#32;=&#32;newBody-&gt;shape.vertexData.positions[nextIndex];
518 
519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacecross">cross</link>&#32;=&#32;MathCrossVector2(position1,&#32;position2);
520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;triangleArea&#32;=&#32;<link linkend="_namespacecross">cross</link>/2;
521 
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area&#32;+=&#32;triangleArea;
523 
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;area&#32;to&#32;weight&#32;the&#32;centroid&#32;average,&#32;not&#32;just&#32;vertex&#32;position</emphasis>
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+=&#32;triangleArea*PHYSAC_K*(position1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;position2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+=&#32;triangleArea*PHYSAC_K*(position1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;position2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
527 
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;intx2&#32;=&#32;position1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*position1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;position2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*position1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;position2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*position2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inty2&#32;=&#32;position1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*position1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;position2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*position1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;position2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*position2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inertia&#32;+=&#32;(0.25f*PHYSAC_K*<link linkend="_namespacecross">cross</link>)*(intx2&#32;+&#32;inty2);
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
532 
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;*=&#32;1.0f/area;
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;*=&#32;1.0f/area;
535 
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Translate&#32;vertices&#32;to&#32;centroid&#32;(make&#32;the&#32;centroid&#32;(0,&#32;0)&#32;for&#32;the&#32;polygon&#32;in&#32;model&#32;space)</emphasis>
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;this&#32;is&#32;not&#32;really&#32;necessary</emphasis>
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount;&#32;i++)
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData.positions[i].x&#32;-=&#32;center.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData.positions[i].y&#32;-=&#32;center.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
543 
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;mass&#32;=&#32;density*area;
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inverseMass&#32;=&#32;((newBody-&gt;mass&#32;!=&#32;0.0f)&#32;?&#32;1.0f/newBody-&gt;mass&#32;:&#32;0.0f);
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inertia&#32;=&#32;density*inertia;
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inverseInertia&#32;=&#32;((newBody-&gt;inertia&#32;!=&#32;0.0f)&#32;?&#32;1.0f/newBody-&gt;inertia&#32;:&#32;0.0f);
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;staticFriction&#32;=&#32;0.4f;
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;dynamicFriction&#32;=&#32;0.2f;
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;restitution&#32;=&#32;0.0f;
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;useGravity&#32;=&#32;<emphasis role="keyword">true</emphasis>;
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;isGrounded&#32;=&#32;<emphasis role="keyword">false</emphasis>;
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;freezeOrient&#32;=&#32;<emphasis role="keyword">false</emphasis>;
554 
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;new&#32;body&#32;to&#32;bodies&#32;pointers&#32;array&#32;and&#32;update&#32;bodies&#32;count</emphasis>
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodies[physicsBodiesCount]&#32;=&#32;newBody;
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;physicsBodiesCount++;
558 
559 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;created&#32;polygon&#32;physics&#32;body&#32;id&#32;%i\n&quot;</emphasis>,&#32;newBody-&gt;id);
561 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
562 &#32;&#32;&#32;&#32;}
563 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;new&#32;physics&#32;body&#32;creation&#32;failed&#32;because&#32;there&#32;is&#32;any&#32;available&#32;id&#32;to&#32;use\n&quot;</emphasis>);
565 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
566 
567 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newBody;
568 }
569 
570 <emphasis role="comment">//&#32;Adds&#32;a&#32;force&#32;to&#32;a&#32;physics&#32;body</emphasis>
571 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1af91260890a4d393daabd7ccbaa68bd88">PhysicsAddForce</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;force)
572 {
573 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;body-&gt;force&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(body-&gt;force,&#32;force);
574 }
575 
576 <emphasis role="comment">//&#32;Adds&#32;an&#32;angular&#32;force&#32;to&#32;a&#32;physics&#32;body</emphasis>
577 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a96cbe2da7806bca2613bd631d67b77f9">PhysicsAddTorque</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount)
578 {
579 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;body-&gt;torque&#32;+=&#32;amount;
580 }
581 
582 <emphasis role="comment">//&#32;Shatters&#32;a&#32;polygon&#32;shape&#32;physics&#32;body&#32;to&#32;little&#32;physics&#32;bodies&#32;with&#32;explosion&#32;force</emphasis>
583 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a889825c97ad126f2214138b292228ebc">PhysicsShatter</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;force)
584 {
585 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
586 &#32;&#32;&#32;&#32;{
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body-&gt;shape.type&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>)
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PolygonData&#32;vertexData&#32;=&#32;body-&gt;shape.vertexData;
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;collision&#32;=&#32;<emphasis role="keyword">false</emphasis>;
591 
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;vertexData.vertexCount;&#32;i++)
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;positionA&#32;=&#32;body-&gt;position;
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;positionB&#32;=&#32;Mat2MultiplyVector2(body-&gt;shape.transform,&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(body-&gt;position,&#32;vertexData.positions[i]));
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((i&#32;+&#32;1)&#32;&lt;&#32;vertexData.vertexCount)&#32;?&#32;(i&#32;+&#32;1)&#32;:&#32;0);
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;positionC&#32;=&#32;Mat2MultiplyVector2(body-&gt;shape.transform,&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(body-&gt;position,&#32;vertexData.positions[nextIndex]));
598 
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;collision&#32;between&#32;each&#32;triangle</emphasis>
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;=&#32;((positionB.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>)*(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.x&#32;-&#32;positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)&#32;+&#32;(positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;positionB.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)*(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>))/
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((positionB.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>)*(positionA.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)&#32;+&#32;(positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;positionB.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)*(positionA.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>));
602 
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;beta&#32;=&#32;((positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;positionA.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>)*(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.x&#32;-&#32;positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)&#32;+&#32;(positionA.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)*(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>))/
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((positionB.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>)*(positionA.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)&#32;+&#32;(positionC.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;positionB.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>)*(positionA.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;positionC.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>));
605 
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;gamma&#32;=&#32;1.0f&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;-&#32;beta;
607 
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;&gt;&#32;0.0f)&#32;&amp;&amp;&#32;(beta&#32;&gt;&#32;0.0f)&#32;&amp;&#32;(gamma&#32;&gt;&#32;0.0f))
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;collision&#32;=&#32;<emphasis role="keyword">true</emphasis>;
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
614 
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision)
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;vertexData.vertexCount;
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;bodyPos&#32;=&#32;body-&gt;position;
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*vertices&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>&#32;*)<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad49145d4b9c373799e48cb64ab30a2d7">PHYSAC_MALLOC</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_vector2">Vector2</link>)*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>);
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Matrix2x2&#32;trans&#32;=&#32;body-&gt;shape.transform;
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;i++)&#32;vertices[i]&#32;=&#32;vertexData.positions[i];
622 
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Destroy&#32;shattered&#32;physics&#32;body</emphasis>
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a911864d07aaed6b720d53e8356a59b42">DestroyPhysicsBody</link>(body);
625 
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;i++)
627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((i&#32;+&#32;1)&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)&#32;?&#32;(i&#32;+&#32;1)&#32;:&#32;0);
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;center&#32;=&#32;TriangleBarycenter(vertices[i],&#32;vertices[nextIndex],&#32;PHYSAC_VECTOR_ZERO);
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(bodyPos,&#32;center);
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(center,&#32;bodyPos);
632 
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;newBody&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad6030edbadf59a3282c4efc6ab788af4">CreatePhysicsBodyPolygon</link>(center,&#32;10,&#32;3,&#32;10);&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;polygon&#32;physics&#32;body&#32;with&#32;relevant&#32;values</emphasis>
634 
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PolygonData&#32;newData&#32;=&#32;{&#32;0&#32;};
636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.vertexCount&#32;=&#32;3;
637 
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(vertices[i],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>);
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(vertices[nextIndex],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>);
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>,&#32;center);
641 
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Separate&#32;vertices&#32;to&#32;avoid&#32;unnecessary&#32;physics&#32;collisions</emphasis>
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[0].x&#32;*=&#32;0.95f;
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[0].y&#32;*=&#32;0.95f;
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[1].x&#32;*=&#32;0.95f;
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[1].y&#32;*=&#32;0.95f;
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[2].x&#32;*=&#32;0.95f;
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.positions[2].y&#32;*=&#32;0.95f;
649 
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;polygon&#32;faces&#32;normals</emphasis>
651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;newData.vertexCount;&#32;j++)
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextVertex&#32;=&#32;(((j&#32;+&#32;1)&#32;&lt;&#32;newData.vertexCount)&#32;?&#32;(j&#32;+&#32;1)&#32;:&#32;0);
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(newData.positions[nextVertex],&#32;newData.positions[j]);
655 
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newData.normals[j]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>.y,&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>.x&#32;};
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;newData.normals[j]);
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
659 
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;computed&#32;vertex&#32;data&#32;to&#32;new&#32;physics&#32;body&#32;shape</emphasis>
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.vertexData&#32;=&#32;newData;
662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;shape.transform&#32;=&#32;trans;
663 
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;centroid&#32;and&#32;moment&#32;of&#32;inertia</emphasis>
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center&#32;=&#32;PHYSAC_VECTOR_ZERO;
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;area&#32;=&#32;0.0f;
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inertia&#32;=&#32;0.0f;
668 
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount;&#32;j++)
670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Triangle&#32;vertices,&#32;third&#32;vertex&#32;implied&#32;as&#32;(0,&#32;0)</emphasis>
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;p1&#32;=&#32;newBody-&gt;shape.vertexData.positions[j];
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextVertex&#32;=&#32;(((j&#32;+&#32;1)&#32;&lt;&#32;newBody-&gt;shape.vertexData.vertexCount)&#32;?&#32;(j&#32;+&#32;1)&#32;:&#32;0);
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;p2&#32;=&#32;newBody-&gt;shape.vertexData.positions[nextVertex];
675 
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;D&#32;=&#32;MathCrossVector2(p1,&#32;p2);
677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;triangleArea&#32;=&#32;D/2;
678 
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area&#32;+=&#32;triangleArea;
680 
681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;area&#32;to&#32;weight&#32;the&#32;centroid&#32;average,&#32;not&#32;just&#32;vertex&#32;position</emphasis>
682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+=&#32;triangleArea*PHYSAC_K*(p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+=&#32;triangleArea*PHYSAC_K*(p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
684 
685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;intx2&#32;=&#32;p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*p1.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*p2.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inty2&#32;=&#32;p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*p1.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*p2.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inertia&#32;+=&#32;(0.25f*PHYSAC_K*D)*(intx2&#32;+&#32;inty2);
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
689 
690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;*=&#32;1.0f/area;
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;*=&#32;1.0f/area;
692 
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;mass&#32;=&#32;area;
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inverseMass&#32;=&#32;((newBody-&gt;mass&#32;!=&#32;0.0f)&#32;?&#32;1.0f/newBody-&gt;mass&#32;:&#32;0.0f);
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inertia&#32;=&#32;inertia;
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newBody-&gt;inverseInertia&#32;=&#32;((newBody-&gt;inertia&#32;!=&#32;0.0f)&#32;?&#32;1.0f/newBody-&gt;inertia&#32;:&#32;0.0f);
697 
698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;explosion&#32;force&#32;direction</emphasis>
699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;pointA&#32;=&#32;newBody-&gt;position;
700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;pointB&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(newData.positions[1],&#32;newData.positions[0]);
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointB.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;/=&#32;2.0f;
702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointB.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;/=&#32;2.0f;
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;forceDirection&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(pointA,&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(newData.positions[0],&#32;pointB)),&#32;newBody-&gt;position);
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;forceDirection);
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forceDirection.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;*=&#32;force;
706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forceDirection.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;*=&#32;force;
707 
708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;force&#32;to&#32;new&#32;physics&#32;body</emphasis>
709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1af91260890a4d393daabd7ccbaa68bd88">PhysicsAddForce</link>(newBody,&#32;forceDirection);
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
711 
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a44f69733849e8d3adde0aa6e36f1e43a">PHYSAC_FREE</link>(vertices);
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
715 &#32;&#32;&#32;&#32;}
716 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;when&#32;trying&#32;to&#32;shatter&#32;a&#32;null&#32;reference&#32;physics&#32;body&quot;</emphasis>);
718 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
719 }
720 
721 <emphasis role="comment">//&#32;Returns&#32;the&#32;current&#32;amount&#32;of&#32;created&#32;physics&#32;bodies</emphasis>
722 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a350c0d591ad19010d4418959aa0dc4d4">GetPhysicsBodiesCount</link>(<emphasis role="keywordtype">void</emphasis>)
723 {
724 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;physicsBodiesCount;
725 }
726 
727 <emphasis role="comment">//&#32;Returns&#32;a&#32;physics&#32;body&#32;of&#32;the&#32;bodies&#32;pool&#32;at&#32;a&#32;specific&#32;index</emphasis>
728 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aac418df155457262a4a4b417b561ad62">GetPhysicsBody</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)
729 {
730 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
731 
732 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;&lt;&#32;physicsBodiesCount)
733 &#32;&#32;&#32;&#32;{
734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body&#32;=&#32;bodies[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>];
735 
736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
738 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;when&#32;trying&#32;to&#32;get&#32;a&#32;null&#32;reference&#32;physics&#32;body&quot;</emphasis>);
740 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
742 &#32;&#32;&#32;&#32;}
743 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
744 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;body&#32;index&#32;is&#32;out&#32;of&#32;bounds&quot;</emphasis>);
745 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
746 
747 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;body;
748 }
749 
750 <emphasis role="comment">//&#32;Returns&#32;the&#32;physics&#32;body&#32;shape&#32;type&#32;(PHYSICS_CIRCLE&#32;or&#32;PHYSICS_POLYGON)</emphasis>
751 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1addb7f9bbc5251fa1d4de67161a50a309">GetPhysicsShapeType</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)
752 {
753 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;-1;
754 
755 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;&lt;&#32;physicsBodiesCount)
756 &#32;&#32;&#32;&#32;{
757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>];
758 
759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;body-&gt;shape.type;
760 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;when&#32;trying&#32;to&#32;get&#32;a&#32;null&#32;reference&#32;physics&#32;body&quot;</emphasis>);
762 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
763 &#32;&#32;&#32;&#32;}
764 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
765 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;body&#32;index&#32;is&#32;out&#32;of&#32;bounds&quot;</emphasis>);
766 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
767 
768 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
769 }
770 
771 <emphasis role="comment">//&#32;Returns&#32;the&#32;amount&#32;of&#32;vertices&#32;of&#32;a&#32;physics&#32;body&#32;shape</emphasis>
772 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a46765a67364a90a4e09780379e5879f2">GetPhysicsShapeVerticesCount</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)
773 {
774 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;0;
775 
776 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;&lt;&#32;physicsBodiesCount)
777 &#32;&#32;&#32;&#32;{
778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>];
779 
780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(body-&gt;shape.type)
783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2ac52f184ec2784685ad9925ce25926302">PHYSICS_CIRCLE</link>:&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a16b800789914ceecc7ce970a7010decd">PHYSAC_CIRCLE_VERTICES</link>;&#32;<emphasis role="keywordflow">break</emphasis>;
785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>:&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;body-&gt;shape.vertexData.vertexCount;&#32;<emphasis role="keywordflow">break</emphasis>;
786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
789 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;when&#32;trying&#32;to&#32;get&#32;a&#32;null&#32;reference&#32;physics&#32;body&quot;</emphasis>);
791 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
792 &#32;&#32;&#32;&#32;}
793 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
794 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;body&#32;index&#32;is&#32;out&#32;of&#32;bounds&quot;</emphasis>);
795 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
796 
797 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
798 }
799 
800 <emphasis role="comment">//&#32;Returns&#32;transformed&#32;position&#32;of&#32;a&#32;body&#32;shape&#32;(body&#32;position&#32;+&#32;vertex&#32;transformed&#32;position)</emphasis>
801 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ab58b21f32cf71ab4ee6aaca5d0eeade7">GetPhysicsShapeVertex</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertex)
802 {
803 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
804 
805 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
806 &#32;&#32;&#32;&#32;{
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(body-&gt;shape.type)
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2ac52f184ec2784685ad9925ce25926302">PHYSICS_CIRCLE</link>:
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;body-&gt;position.x&#32;+&#32;cosf(360.0f/<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a16b800789914ceecc7ce970a7010decd">PHYSAC_CIRCLE_VERTICES</link>*vertex*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa8792b5f51510aae57ffa0ecd7a2fedd">PHYSAC_DEG2RAD</link>)*body-&gt;shape.radius;
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>.y&#32;=&#32;body-&gt;position.y&#32;+&#32;sinf(360.0f/<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a16b800789914ceecc7ce970a7010decd">PHYSAC_CIRCLE_VERTICES</link>*vertex*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa8792b5f51510aae57ffa0ecd7a2fedd">PHYSAC_DEG2RAD</link>)*body-&gt;shape.radius;
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>:
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PolygonData&#32;vertexData&#32;=&#32;body-&gt;shape.vertexData;
817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(body-&gt;position,&#32;Mat2MultiplyVector2(body-&gt;shape.transform,&#32;vertexData.positions[vertex]));
818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
821 &#32;&#32;&#32;&#32;}
822 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
823 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;when&#32;trying&#32;to&#32;get&#32;a&#32;null&#32;reference&#32;physics&#32;body&quot;</emphasis>);
824 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
825 
826 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>;
827 }
828 
829 <emphasis role="comment">//&#32;Sets&#32;physics&#32;body&#32;shape&#32;transform&#32;based&#32;on&#32;radians&#32;parameter</emphasis>
830 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a66a58adbf676a4eb0e42cb38f5318a50">SetPhysicsBodyRotation</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radians)
831 {
832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
833 &#32;&#32;&#32;&#32;{
834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body-&gt;orient&#32;=&#32;<link linkend="_namespaceglm_1a00577ee752441c79d5bb11d7c29e1627">radians</link>;
835 
836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body-&gt;shape.type&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>)&#32;body-&gt;shape.transform&#32;=&#32;Mat2Radians(radians);
837 &#32;&#32;&#32;&#32;}
838 }
839 
840 <emphasis role="comment">//&#32;Unitializes&#32;and&#32;destroys&#32;a&#32;physics&#32;body</emphasis>
841 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a911864d07aaed6b720d53e8356a59b42">DestroyPhysicsBody</link>(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body)
842 {
843 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
844 &#32;&#32;&#32;&#32;{
845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;body-&gt;id;
846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;-1;
847 
848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodies[i]-&gt;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;<emphasis role="keywordtype">id</emphasis>)
851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;i;
853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
856 
857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;==&#32;-1)
858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
859 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;Not&#32;possible&#32;to&#32;find&#32;body&#32;id&#32;%i&#32;in&#32;pointers&#32;array\n&quot;</emphasis>,&#32;<emphasis role="keywordtype">id</emphasis>);
861 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevent&#32;access&#32;to&#32;index&#32;-1</emphasis>
863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
864 
865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Free&#32;body&#32;allocated&#32;memory</emphasis>
866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a44f69733849e8d3adde0aa6e36f1e43a">PHYSAC_FREE</link>(body);
867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usedMemory&#32;-=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsBodyData);
868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodies[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>]&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
869 
870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reorder&#32;physics&#32;bodies&#32;pointers&#32;array&#32;and&#32;its&#32;catched&#32;index</emphasis>
871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((i&#32;+&#32;1)&#32;&lt;&#32;physicsBodiesCount)&#32;bodies[i]&#32;=&#32;bodies[i&#32;+&#32;1];
874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
875 
876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;physics&#32;bodies&#32;count</emphasis>
877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;physicsBodiesCount--;
878 
879 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;destroyed&#32;physics&#32;body&#32;id&#32;%i\n&quot;</emphasis>,&#32;<emphasis role="keywordtype">id</emphasis>);
881 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
882 &#32;&#32;&#32;&#32;}
883 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;trying&#32;to&#32;destroy&#32;a&#32;null&#32;referenced&#32;body\n&quot;</emphasis>);
885 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
886 }
887 
888 <emphasis role="comment">//&#32;Destroys&#32;created&#32;physics&#32;bodies&#32;and&#32;manifolds&#32;and&#32;resets&#32;global&#32;values</emphasis>
889 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ac55a522461ae0a871d5ad0a29242d9f2">ResetPhysics</link>(<emphasis role="keywordtype">void</emphasis>)
890 {
891 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitialize&#32;physics&#32;bodies&#32;dynamic&#32;memory&#32;allocations</emphasis>
892 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;physicsBodiesCount&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)
893 &#32;&#32;&#32;&#32;{
894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[i];
895 
896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a44f69733849e8d3adde0aa6e36f1e43a">PHYSAC_FREE</link>(body);
899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodies[i]&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usedMemory&#32;-=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsBodyData);
901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
902 &#32;&#32;&#32;&#32;}
903 
904 &#32;&#32;&#32;&#32;physicsBodiesCount&#32;=&#32;0;
905 
906 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitialize&#32;physics&#32;manifolds&#32;dynamic&#32;memory&#32;allocations</emphasis>
907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;physicsManifoldsCount&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)
908 &#32;&#32;&#32;&#32;{
909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;manifold&#32;=&#32;contacts[i];
910 
911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a44f69733849e8d3adde0aa6e36f1e43a">PHYSAC_FREE</link>(manifold);
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contacts[i]&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usedMemory&#32;-=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsManifoldData);
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
917 &#32;&#32;&#32;&#32;}
918 
919 &#32;&#32;&#32;&#32;physicsManifoldsCount&#32;=&#32;0;
920 
921 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;module&#32;reset&#32;successfully\n&quot;</emphasis>);
923 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
924 }
925 
926 <emphasis role="comment">//&#32;Unitializes&#32;physics&#32;pointers&#32;and&#32;exits&#32;physics&#32;loop&#32;thread</emphasis>
927 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a9a74b70f4d601fc52b58d3219d97f4de">ClosePhysics</link>(<emphasis role="keywordtype">void</emphasis>)
928 {
929 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Exit&#32;physics&#32;loop&#32;thread</emphasis>
930 &#32;&#32;&#32;&#32;physicsThreadEnabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
931 
932 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;!defined(PHYSAC_NO_THREADS)</emphasis>
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2pthread_8h_1a25b888453922185b872e6c87aee3e214">pthread_join</link>(physicsThreadId,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
934 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
935 
936 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitialize&#32;physics&#32;manifolds&#32;dynamic&#32;memory&#32;allocations</emphasis>
937 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;physicsManifoldsCount&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)&#32;DestroyPhysicsManifold(contacts[i]);
938 
939 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unitialize&#32;physics&#32;bodies&#32;dynamic&#32;memory&#32;allocations</emphasis>
940 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;physicsBodiesCount&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a911864d07aaed6b720d53e8356a59b42">DestroyPhysicsBody</link>(bodies[i]);
941 
942 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(physicsBodiesCount&#32;&gt;&#32;0&#32;||&#32;usedMemory&#32;!=&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;module&#32;closed&#32;with&#32;%i&#32;still&#32;allocated&#32;bodies&#32;[MEMORY:&#32;%i&#32;bytes]\n&quot;</emphasis>,&#32;physicsBodiesCount,&#32;usedMemory);
944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(physicsManifoldsCount&#32;&gt;&#32;0&#32;||&#32;usedMemory&#32;!=&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;module&#32;closed&#32;with&#32;%i&#32;still&#32;allocated&#32;manifolds&#32;[MEMORY:&#32;%i&#32;bytes]\n&quot;</emphasis>,&#32;physicsManifoldsCount,&#32;usedMemory);
945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;module&#32;closed&#32;successfully\n&quot;</emphasis>);
946 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
947 }
948 
949 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
950 <emphasis role="comment">//&#32;Module&#32;Internal&#32;Functions&#32;Definition</emphasis>
951 <emphasis role="comment">//----------------------------------------------------------------------------------</emphasis>
952 <emphasis role="comment">//&#32;Finds&#32;a&#32;valid&#32;index&#32;for&#32;a&#32;new&#32;physics&#32;body&#32;initialization</emphasis>
953 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;FindAvailableBodyIndex()
954 {
955 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;-1;
956 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a190bf80c86ef94ae2f242c31a5913a51">PHYSAC_MAX_BODIES</link>;&#32;i++)
957 &#32;&#32;&#32;&#32;{
958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentId&#32;=&#32;i;
959 
960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;current&#32;id&#32;already&#32;exist&#32;in&#32;other&#32;physics&#32;body</emphasis>
961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;physicsBodiesCount;&#32;k++)
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodies[k]-&gt;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;currentId)
964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentId++;
966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
969 
970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is&#32;not&#32;used,&#32;use&#32;it&#32;as&#32;new&#32;physics&#32;body&#32;id</emphasis>
971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentId&#32;==&#32;i)
972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;i;
974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
976 &#32;&#32;&#32;&#32;}
977 
978 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>;
979 }
980 
981 <emphasis role="comment">//&#32;Creates&#32;a&#32;random&#32;polygon&#32;shape&#32;with&#32;max&#32;vertex&#32;distance&#32;from&#32;polygon&#32;pivot</emphasis>
982 <emphasis role="keyword">static</emphasis>&#32;PolygonData&#32;CreateRandomPolygon(<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sides)
983 {
984 &#32;&#32;&#32;&#32;PolygonData&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;{&#32;0&#32;};
985 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount&#32;=&#32;sides;
986 
987 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;polygon&#32;vertices&#32;positions</emphasis>
988 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount;&#32;i++)
989 &#32;&#32;&#32;&#32;{
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[i].x&#32;=&#32;cosf(360.0f/sides*i*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa8792b5f51510aae57ffa0ecd7a2fedd">PHYSAC_DEG2RAD</link>)*radius;
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[i].y&#32;=&#32;sinf(360.0f/sides*i*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1aa8792b5f51510aae57ffa0ecd7a2fedd">PHYSAC_DEG2RAD</link>)*radius;
992 &#32;&#32;&#32;&#32;}
993 
994 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;polygon&#32;faces&#32;normals</emphasis>
995 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount;&#32;i++)
996 &#32;&#32;&#32;&#32;{
997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((i&#32;+&#32;1)&#32;&lt;&#32;sides)&#32;?&#32;(i&#32;+&#32;1)&#32;:&#32;0);
998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[nextIndex],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[i]);
999 
1000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.normals[i]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>.y,&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>.x&#32;};
1001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.normals[i]);
1002 &#32;&#32;&#32;&#32;}
1003 
1004 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1005 }
1006 
1007 <emphasis role="comment">//&#32;Creates&#32;a&#32;rectangle&#32;polygon&#32;shape&#32;based&#32;on&#32;a&#32;min&#32;and&#32;max&#32;positions</emphasis>
1008 <emphasis role="keyword">static</emphasis>&#32;PolygonData&#32;CreateRectanglePolygon(<link linkend="_struct_vector2">Vector2</link>&#32;pos,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
1009 {
1010 &#32;&#32;&#32;&#32;PolygonData&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;{&#32;0&#32;};
1011 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount&#32;=&#32;4;
1012 
1013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;polygon&#32;vertices&#32;positions</emphasis>
1014 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[0]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;pos.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.x/2,&#32;pos.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.y/2&#32;};
1015 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[1]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;pos.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.x/2,&#32;pos.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.y/2&#32;};
1016 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[2]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;pos.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.x/2,&#32;pos.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.y/2&#32;};
1017 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[3]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;pos.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.x/2,&#32;pos.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>.y/2&#32;};
1018 
1019 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;polygon&#32;faces&#32;normals</emphasis>
1020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount;&#32;i++)
1021 &#32;&#32;&#32;&#32;{
1022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((i&#32;+&#32;1)&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount)&#32;?&#32;(i&#32;+&#32;1)&#32;:&#32;0);
1023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[nextIndex],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[i]);
1024 
1025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.normals[i]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>.y,&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a5be6a25280558430b19997fef84c4c31">face</link>.x&#32;};
1026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.normals[i]);
1027 &#32;&#32;&#32;&#32;}
1028 
1029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1030 }
1031 
1032 <emphasis role="comment">//&#32;Physics&#32;loop&#32;thread&#32;function</emphasis>
1033 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*PhysicsLoop(<emphasis role="keywordtype">void</emphasis>&#32;*arg)
1034 {
1035 <emphasis role="preprocessor">#if&#32;!defined(PHYSAC_NO_THREADS)</emphasis>
1036 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;physics&#32;thread&#32;created&#32;successfully\n&quot;</emphasis>);
1038 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
1039 
1040 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;physics&#32;loop&#32;thread&#32;values</emphasis>
1041 &#32;&#32;&#32;&#32;physicsThreadEnabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
1042 
1043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Physics&#32;update&#32;loop</emphasis>
1044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(physicsThreadEnabled)
1045 &#32;&#32;&#32;&#32;{
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a69a0234eb3c8368e483873d6420afdfe">RunPhysicsStep</link>();
1047 &#32;&#32;&#32;&#32;}
1048 <emphasis role="preprocessor">#endif</emphasis>
1049 
1050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1051 }
1052 
1053 <emphasis role="comment">//&#32;Physics&#32;steps&#32;calculations&#32;(dynamics,&#32;collisions&#32;and&#32;position&#32;corrections)</emphasis>
1054 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;PhysicsStep(<emphasis role="keywordtype">void</emphasis>)
1055 {
1056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;current&#32;steps&#32;count</emphasis>
1057 &#32;&#32;&#32;&#32;stepsCount++;
1058 
1059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;previous&#32;generated&#32;collisions&#32;information</emphasis>
1060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;physicsManifoldsCount&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)
1061 &#32;&#32;&#32;&#32;{
1062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;manifold&#32;=&#32;contacts[i];
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;DestroyPhysicsManifold(manifold);
1064 &#32;&#32;&#32;&#32;}
1065 
1066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reset&#32;physics&#32;bodies&#32;grounded&#32;state</emphasis>
1067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
1068 &#32;&#32;&#32;&#32;{
1069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[i];
1070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body-&gt;isGrounded&#32;=&#32;<emphasis role="keyword">false</emphasis>;
1071 &#32;&#32;&#32;&#32;}
1072 
1073 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Generate&#32;new&#32;collision&#32;information</emphasis>
1074 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
1075 &#32;&#32;&#32;&#32;{
1076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;bodies[i];
1077 
1078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyA&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;i&#32;+&#32;1;&#32;j&#32;&lt;&#32;physicsBodiesCount;&#32;j++)
1081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;bodies[j];
1083 
1084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyB&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA-&gt;inverseMass&#32;==&#32;0)&#32;&amp;&amp;&#32;(bodyB-&gt;inverseMass&#32;==&#32;0))&#32;<emphasis role="keywordflow">continue</emphasis>;
1087 
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;manifold&#32;=&#32;CreatePhysicsManifold(bodyA,&#32;bodyB);
1089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SolvePhysicsManifold(manifold);
1090 
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold-&gt;contactsCount&#32;&gt;&#32;0)
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;a&#32;new&#32;manifold&#32;with&#32;same&#32;information&#32;as&#32;previously&#32;solved&#32;manifold&#32;and&#32;add&#32;it&#32;to&#32;the&#32;manifolds&#32;pool&#32;last&#32;slot</emphasis>
1094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;newManifold&#32;=&#32;CreatePhysicsManifold(bodyA,&#32;bodyB);
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;penetration&#32;=&#32;manifold-&gt;penetration;
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;normal&#32;=&#32;manifold-&gt;normal;
1097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;contacts[0]&#32;=&#32;manifold-&gt;contacts[0];
1098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;contacts[1]&#32;=&#32;manifold-&gt;contacts[1];
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;contactsCount&#32;=&#32;manifold-&gt;contactsCount;
1100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;restitution&#32;=&#32;manifold-&gt;restitution;
1101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;dynamicFriction&#32;=&#32;manifold-&gt;dynamicFriction;
1102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;staticFriction&#32;=&#32;manifold-&gt;staticFriction;
1103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1107 &#32;&#32;&#32;&#32;}
1108 
1109 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Integrate&#32;forces&#32;to&#32;physics&#32;bodies</emphasis>
1110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
1111 &#32;&#32;&#32;&#32;{
1112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[i];
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;IntegratePhysicsForces(body);
1114 &#32;&#32;&#32;&#32;}
1115 
1116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;physics&#32;manifolds&#32;to&#32;solve&#32;collisions</emphasis>
1117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsManifoldsCount;&#32;i++)
1118 &#32;&#32;&#32;&#32;{
1119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;manifold&#32;=&#32;contacts[i];
1120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;InitializePhysicsManifolds(manifold);
1121 &#32;&#32;&#32;&#32;}
1122 
1123 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Integrate&#32;physics&#32;collisions&#32;impulses&#32;to&#32;solve&#32;collisions</emphasis>
1124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a01b6744573dc6b9e718021d1a76f4908">PHYSAC_COLLISION_ITERATIONS</link>;&#32;i++)
1125 &#32;&#32;&#32;&#32;{
1126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;physicsManifoldsCount;&#32;j++)
1127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;manifold&#32;=&#32;contacts[i];
1129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;IntegratePhysicsImpulses(manifold);
1130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1131 &#32;&#32;&#32;&#32;}
1132 
1133 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Integrate&#32;velocity&#32;to&#32;physics&#32;bodies</emphasis>
1134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
1135 &#32;&#32;&#32;&#32;{
1136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[i];
1137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;IntegratePhysicsVelocity(body);
1138 &#32;&#32;&#32;&#32;}
1139 
1140 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Correct&#32;physics&#32;bodies&#32;positions&#32;based&#32;on&#32;manifolds&#32;collision&#32;information</emphasis>
1141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsManifoldsCount;&#32;i++)
1142 &#32;&#32;&#32;&#32;{
1143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsManifold&#32;manifold&#32;=&#32;contacts[i];
1144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;CorrectPhysicsPositions(manifold);
1145 &#32;&#32;&#32;&#32;}
1146 
1147 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;physics&#32;bodies&#32;forces</emphasis>
1148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsBodiesCount;&#32;i++)
1149 &#32;&#32;&#32;&#32;{
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body&#32;=&#32;bodies[i];
1151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body-&gt;force&#32;=&#32;PHYSAC_VECTOR_ZERO;
1154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body-&gt;torque&#32;=&#32;0.0f;
1155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1156 &#32;&#32;&#32;&#32;}
1157 }
1158 
1159 <emphasis role="comment">//&#32;Wrapper&#32;to&#32;ensure&#32;PhysicsStep&#32;is&#32;run&#32;with&#32;at&#32;a&#32;fixed&#32;time&#32;step</emphasis>
1160 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a69a0234eb3c8368e483873d6420afdfe">RunPhysicsStep</link>(<emphasis role="keywordtype">void</emphasis>)
1161 {
1162 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;current&#32;time</emphasis>
1163 &#32;&#32;&#32;&#32;currentTime&#32;=&#32;GetCurrentTime();
1164 
1165 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;current&#32;delta&#32;time</emphasis>
1166 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;delta&#32;=&#32;currentTime&#32;-&#32;startTime;
1167 
1168 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;the&#32;time&#32;elapsed&#32;since&#32;the&#32;last&#32;frame&#32;began</emphasis>
1169 &#32;&#32;&#32;&#32;accumulator&#32;+=&#32;delta;
1170 
1171 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fixed&#32;time&#32;stepping&#32;loop</emphasis>
1172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(accumulator&#32;&gt;=&#32;deltaTime)
1173 &#32;&#32;&#32;&#32;{
1174 <emphasis role="preprocessor">#ifdef&#32;PHYSAC_DEBUG</emphasis>
1175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TRACELOG(&quot;currentTime&#32;%f,&#32;startTime&#32;%f,&#32;accumulator-pre&#32;%f,&#32;accumulator-post&#32;%f,&#32;delta&#32;%f,&#32;deltaTime&#32;%f\n&quot;,</emphasis>
1176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTime,&#32;startTime,&#32;accumulator,&#32;accumulator-deltaTime,&#32;delta,&#32;deltaTime);</emphasis>
1177 <emphasis role="preprocessor">#endif</emphasis>
1178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsStep();
1179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accumulator&#32;-=&#32;deltaTime;
1180 &#32;&#32;&#32;&#32;}
1181 
1182 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Record&#32;the&#32;starting&#32;of&#32;this&#32;frame</emphasis>
1183 &#32;&#32;&#32;&#32;startTime&#32;=&#32;currentTime;
1184 }
1185 
1186 <link linkend="__classes_2lib_2raylib_2src_2physac_8h_1acb430bc2ef791e01039efcadb25ed06b">PHYSACDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a16b0f1673f0c9f4f11681c44175e11b0">SetPhysicsTimeStep</link>(<emphasis role="keywordtype">double</emphasis>&#32;delta)
1187 {
1188 &#32;&#32;&#32;&#32;deltaTime&#32;=&#32;delta;
1189 }
1190 
1191 <emphasis role="comment">//&#32;Finds&#32;a&#32;valid&#32;index&#32;for&#32;a&#32;new&#32;manifold&#32;initialization</emphasis>
1192 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;FindAvailableManifoldIndex()
1193 {
1194 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;-1;
1195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a9754046a1da8366360c5520c90355ecc">PHYSAC_MAX_MANIFOLDS</link>;&#32;i++)
1196 &#32;&#32;&#32;&#32;{
1197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentId&#32;=&#32;i;
1198 
1199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;current&#32;id&#32;already&#32;exist&#32;in&#32;other&#32;physics&#32;body</emphasis>
1200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;physicsManifoldsCount;&#32;k++)
1201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contacts[k]-&gt;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;currentId)
1203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentId++;
1205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1208 
1209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is&#32;not&#32;used,&#32;use&#32;it&#32;as&#32;new&#32;physics&#32;body&#32;id</emphasis>
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentId&#32;==&#32;i)
1211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;i;
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1215 &#32;&#32;&#32;&#32;}
1216 
1217 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>;
1218 }
1219 
1220 <emphasis role="comment">//&#32;Creates&#32;a&#32;new&#32;physics&#32;manifold&#32;to&#32;solve&#32;collision</emphasis>
1221 <emphasis role="keyword">static</emphasis>&#32;PhysicsManifold&#32;CreatePhysicsManifold(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1222 {
1223 &#32;&#32;&#32;&#32;PhysicsManifold&#32;newManifold&#32;=&#32;(PhysicsManifold)<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ad49145d4b9c373799e48cb64ab30a2d7">PHYSAC_MALLOC</link>(<emphasis role="keyword">sizeof</emphasis>(PhysicsManifoldData));
1224 &#32;&#32;&#32;&#32;usedMemory&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsManifoldData);
1225 
1226 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newId&#32;=&#32;FindAvailableManifoldIndex();
1227 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newId&#32;!=&#32;-1)
1228 &#32;&#32;&#32;&#32;{
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;new&#32;manifold&#32;with&#32;generic&#32;values</emphasis>
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;id&#32;=&#32;newId;
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;bodyA&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
1232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;bodyB&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;penetration&#32;=&#32;0;
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;normal&#32;=&#32;PHYSAC_VECTOR_ZERO;
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;contacts[0]&#32;=&#32;PHYSAC_VECTOR_ZERO;
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;contacts[1]&#32;=&#32;PHYSAC_VECTOR_ZERO;
1237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;contactsCount&#32;=&#32;0;
1238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;restitution&#32;=&#32;0.0f;
1239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;dynamicFriction&#32;=&#32;0.0f;
1240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newManifold-&gt;staticFriction&#32;=&#32;0.0f;
1241 
1242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;new&#32;body&#32;to&#32;bodies&#32;pointers&#32;array&#32;and&#32;update&#32;bodies&#32;count</emphasis>
1243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contacts[physicsManifoldsCount]&#32;=&#32;newManifold;
1244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;physicsManifoldsCount++;
1245 &#32;&#32;&#32;&#32;}
1246 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
1247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;new&#32;physics&#32;manifold&#32;creation&#32;failed&#32;because&#32;there&#32;is&#32;any&#32;available&#32;id&#32;to&#32;use\n&quot;</emphasis>);
1248 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
1249 
1250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newManifold;
1251 }
1252 
1253 <emphasis role="comment">//&#32;Unitializes&#32;and&#32;destroys&#32;a&#32;physics&#32;manifold</emphasis>
1254 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DestroyPhysicsManifold(PhysicsManifold&#32;manifold)
1255 {
1256 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manifold&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1257 &#32;&#32;&#32;&#32;{
1258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;manifold-&gt;id;
1259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;-1;
1260 
1261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;physicsManifoldsCount;&#32;i++)
1262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contacts[i]-&gt;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;<emphasis role="keywordtype">id</emphasis>)
1264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;i;
1266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1269 
1270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;==&#32;-1)
1271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1272 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
1273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;Not&#32;possible&#32;to&#32;manifold&#32;id&#32;%i&#32;in&#32;pointers&#32;array\n&quot;</emphasis>,&#32;<emphasis role="keywordtype">id</emphasis>);
1274 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
1275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevent&#32;access&#32;to&#32;index&#32;-1</emphasis>
1276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1277 
1278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Free&#32;manifold&#32;allocated&#32;memory</emphasis>
1279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a44f69733849e8d3adde0aa6e36f1e43a">PHYSAC_FREE</link>(manifold);
1280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usedMemory&#32;-=&#32;<emphasis role="keyword">sizeof</emphasis>(PhysicsManifoldData);
1281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contacts[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>]&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1282 
1283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reorder&#32;physics&#32;manifolds&#32;pointers&#32;array&#32;and&#32;its&#32;catched&#32;index</emphasis>
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>;&#32;i&#32;&lt;&#32;physicsManifoldsCount;&#32;i++)
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((i&#32;+&#32;1)&#32;&lt;&#32;physicsManifoldsCount)&#32;contacts[i]&#32;=&#32;contacts[i&#32;+&#32;1];
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1288 
1289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;physics&#32;manifolds&#32;count</emphasis>
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;physicsManifoldsCount--;
1291 &#32;&#32;&#32;&#32;}
1292 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(PHYSAC_DEBUG)</emphasis>
1293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2utils_8h_1a212a8b81c98d325e306bbccb0c0ab02a">TRACELOG</link>(<emphasis role="stringliteral">&quot;[PHYSAC]&#32;error&#32;trying&#32;to&#32;destroy&#32;a&#32;null&#32;referenced&#32;manifold\n&quot;</emphasis>);
1294 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
1295 }
1296 
1297 <emphasis role="comment">//&#32;Solves&#32;a&#32;created&#32;physics&#32;manifold&#32;between&#32;two&#32;physics&#32;bodies</emphasis>
1298 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolvePhysicsManifold(PhysicsManifold&#32;manifold)
1299 {
1300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(manifold-&gt;bodyA-&gt;shape.type)
1301 &#32;&#32;&#32;&#32;{
1302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2ac52f184ec2784685ad9925ce25926302">PHYSICS_CIRCLE</link>:
1303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(manifold-&gt;bodyB-&gt;shape.type)
1305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2ac52f184ec2784685ad9925ce25926302">PHYSICS_CIRCLE</link>:&#32;SolveCircleToCircle(manifold);&#32;<emphasis role="keywordflow">break</emphasis>;
1307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>:&#32;SolveCircleToPolygon(manifold);&#32;<emphasis role="keywordflow">break</emphasis>;
1308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
1309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>:
1312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(manifold-&gt;bodyB-&gt;shape.type)
1314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2ac52f184ec2784685ad9925ce25926302">PHYSICS_CIRCLE</link>:&#32;SolvePolygonToCircle(manifold);&#32;<emphasis role="keywordflow">break</emphasis>;
1316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ae097debaf896c6a47e63ce5fc0e59dc2a6dab24ff22e643494d178d1b1d451ee8">PHYSICS_POLYGON</link>:&#32;SolvePolygonToPolygon(manifold);&#32;<emphasis role="keywordflow">break</emphasis>;
1317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
1318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
1321 &#32;&#32;&#32;&#32;}
1322 
1323 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;physics&#32;body&#32;grounded&#32;state&#32;if&#32;normal&#32;direction&#32;is&#32;down&#32;and&#32;grounded&#32;state&#32;is&#32;not&#32;set&#32;yet&#32;in&#32;previous&#32;manifolds</emphasis>
1324 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!manifold-&gt;bodyB-&gt;isGrounded)&#32;manifold-&gt;bodyB-&gt;isGrounded&#32;=&#32;(manifold-&gt;normal.y&#32;&lt;&#32;0);
1325 }
1326 
1327 <emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;two&#32;circle&#32;shape&#32;physics&#32;bodies</emphasis>
1328 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolveCircleToCircle(PhysicsManifold&#32;manifold)
1329 {
1330 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;manifold-&gt;bodyA;
1331 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;manifold-&gt;bodyB;
1332 
1333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1334 
1335 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;translational&#32;vector,&#32;which&#32;is&#32;normal</emphasis>
1336 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(bodyB-&gt;position,&#32;bodyA-&gt;position);
1337 
1338 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distSqr&#32;=&#32;MathLenSqr(normal);
1339 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius&#32;=&#32;bodyA-&gt;shape.radius&#32;+&#32;bodyB-&gt;shape.radius;
1340 
1341 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;circles&#32;are&#32;not&#32;in&#32;contact</emphasis>
1342 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(distSqr&#32;&gt;=&#32;radius*radius)
1343 &#32;&#32;&#32;&#32;{
1344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;0;
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1346 &#32;&#32;&#32;&#32;}
1347 
1348 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>&#32;=&#32;sqrtf(distSqr);
1349 &#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;1;
1350 
1351 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacedistance">distance</link>&#32;==&#32;0.0f)
1352 &#32;&#32;&#32;&#32;{
1353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;=&#32;bodyA-&gt;shape.radius;
1354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;1.0f,&#32;0.0f&#32;};
1355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[0]&#32;=&#32;bodyA-&gt;position;
1356 &#32;&#32;&#32;&#32;}
1357 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1358 &#32;&#32;&#32;&#32;{
1359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;=&#32;radius&#32;-&#32;<link linkend="_namespacedistance">distance</link>;
1360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;normal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>/<link linkend="_namespacedistance">distance</link>,&#32;normal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>/<link linkend="_namespacedistance">distance</link>&#32;};&#32;<emphasis role="comment">//&#32;Faster&#32;than&#32;using&#32;MathNormalize()&#32;due&#32;to&#32;sqrt&#32;is&#32;already&#32;performed</emphasis>
1361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[0]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;manifold-&gt;normal.x*bodyA-&gt;shape.radius&#32;+&#32;bodyA-&gt;position.x,&#32;manifold-&gt;normal.y*bodyA-&gt;shape.radius&#32;+&#32;bodyA-&gt;position.y&#32;};
1362 &#32;&#32;&#32;&#32;}
1363 
1364 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;physics&#32;body&#32;grounded&#32;state&#32;if&#32;normal&#32;direction&#32;is&#32;down</emphasis>
1365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bodyA-&gt;isGrounded)&#32;bodyA-&gt;isGrounded&#32;=&#32;(manifold-&gt;normal.y&#32;&lt;&#32;0);
1366 }
1367 
1368 <emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;a&#32;circle&#32;to&#32;a&#32;polygon&#32;shape&#32;physics&#32;bodies</emphasis>
1369 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolveCircleToPolygon(PhysicsManifold&#32;manifold)
1370 {
1371 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;manifold-&gt;bodyA;
1372 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;manifold-&gt;bodyB;
1373 
1374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1375 
1376 &#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;0;
1377 
1378 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transform&#32;circle&#32;center&#32;to&#32;polygon&#32;transform&#32;space</emphasis>
1379 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;center&#32;=&#32;bodyA-&gt;position;
1380 &#32;&#32;&#32;&#32;center&#32;=&#32;Mat2MultiplyVector2(Mat2Transpose(bodyB-&gt;shape.transform),&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(center,&#32;bodyB-&gt;position));
1381 
1382 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;edge&#32;with&#32;minimum&#32;penetration</emphasis>
1383 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;It&#32;is&#32;the&#32;same&#32;concept&#32;as&#32;using&#32;support&#32;points&#32;in&#32;SolvePolygonToPolygon</emphasis>
1384 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;separation&#32;=&#32;-PHYSAC_FLT_MAX;
1385 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;faceNormal&#32;=&#32;0;
1386 &#32;&#32;&#32;&#32;PolygonData&#32;vertexData&#32;=&#32;bodyB-&gt;shape.vertexData;
1387 
1388 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;vertexData.vertexCount;&#32;i++)
1389 &#32;&#32;&#32;&#32;{
1390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentSeparation&#32;=&#32;MathDot(vertexData.normals[i],&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(center,&#32;vertexData.positions[i]));
1391 
1392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentSeparation&#32;&gt;&#32;bodyA-&gt;shape.radius)&#32;<emphasis role="keywordflow">return</emphasis>;
1393 
1394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentSeparation&#32;&gt;&#32;separation)
1395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;separation&#32;=&#32;currentSeparation;
1397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;faceNormal&#32;=&#32;i;
1398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1399 &#32;&#32;&#32;&#32;}
1400 
1401 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Grab&#32;face&apos;s&#32;vertices</emphasis>
1402 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;vertexData.positions[faceNormal];
1403 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(((faceNormal&#32;+&#32;1)&#32;&lt;&#32;vertexData.vertexCount)&#32;?&#32;(faceNormal&#32;+&#32;1)&#32;:&#32;0);
1404 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;vertexData.positions[nextIndex];
1405 
1406 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;to&#32;see&#32;if&#32;center&#32;is&#32;within&#32;polygon</emphasis>
1407 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(separation&#32;&lt;&#32;PHYSAC_EPSILON)
1408 &#32;&#32;&#32;&#32;{
1409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;1;
1410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal&#32;=&#32;Mat2MultiplyVector2(bodyB-&gt;shape.transform,&#32;vertexData.normals[faceNormal]);
1411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-normal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-normal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;};
1412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[0]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;manifold-&gt;normal.x*bodyA-&gt;shape.radius&#32;+&#32;bodyA-&gt;position.x,&#32;manifold-&gt;normal.y*bodyA-&gt;shape.radius&#32;+&#32;bodyA-&gt;position.y&#32;};
1413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;=&#32;bodyA-&gt;shape.radius;
1414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1415 &#32;&#32;&#32;&#32;}
1416 
1417 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;which&#32;voronoi&#32;region&#32;of&#32;the&#32;edge&#32;center&#32;of&#32;circle&#32;lies&#32;within</emphasis>
1418 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dot1&#32;=&#32;MathDot(<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(center,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>));
1419 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dot2&#32;=&#32;MathDot(<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(center,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>),&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>));
1420 &#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;=&#32;bodyA-&gt;shape.radius&#32;-&#32;separation;
1421 
1422 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dot1&#32;&lt;=&#32;0.0f)&#32;<emphasis role="comment">//&#32;Closest&#32;to&#32;v1</emphasis>
1423 &#32;&#32;&#32;&#32;{
1424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DistSqr(center,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>)&#32;&gt;&#32;bodyA-&gt;shape.radius*bodyA-&gt;shape.radius)&#32;<emphasis role="keywordflow">return</emphasis>;
1425 
1426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;1;
1427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;center);
1428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normal&#32;=&#32;Mat2MultiplyVector2(bodyB-&gt;shape.transform,&#32;normal);
1429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;normal);
1430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;normal;
1431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;Mat2MultiplyVector2(bodyB-&gt;shape.transform,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
1432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;bodyB-&gt;position);
1433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>;
1434 &#32;&#32;&#32;&#32;}
1435 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dot2&#32;&lt;=&#32;0.0f)&#32;<emphasis role="comment">//&#32;Closest&#32;to&#32;v2</emphasis>
1436 &#32;&#32;&#32;&#32;{
1437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(DistSqr(center,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)&#32;&gt;&#32;bodyA-&gt;shape.radius*bodyA-&gt;shape.radius)&#32;<emphasis role="keywordflow">return</emphasis>;
1438 
1439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;1;
1440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;center);
1441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;Mat2MultiplyVector2(bodyB-&gt;shape.transform,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
1442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;bodyB-&gt;position);
1443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>;
1444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normal&#32;=&#32;Mat2MultiplyVector2(bodyB-&gt;shape.transform,&#32;normal);
1445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;normal);
1446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;normal;
1447 &#32;&#32;&#32;&#32;}
1448 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">//&#32;Closest&#32;to&#32;face</emphasis>
1449 &#32;&#32;&#32;&#32;{
1450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal&#32;=&#32;vertexData.normals[faceNormal];
1451 
1452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(MathDot(<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(center,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;normal)&#32;&gt;&#32;bodyA-&gt;shape.radius)&#32;<emphasis role="keywordflow">return</emphasis>;
1453 
1454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normal&#32;=&#32;Mat2MultiplyVector2(bodyB-&gt;shape.transform,&#32;normal);
1455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-normal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-normal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;};
1456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[0]&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;manifold-&gt;normal.x*bodyA-&gt;shape.radius&#32;+&#32;bodyA-&gt;position.x,&#32;manifold-&gt;normal.y*bodyA-&gt;shape.radius&#32;+&#32;bodyA-&gt;position.y&#32;};
1457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;1;
1458 &#32;&#32;&#32;&#32;}
1459 }
1460 
1461 <emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;a&#32;polygon&#32;to&#32;a&#32;circle&#32;shape&#32;physics&#32;bodies</emphasis>
1462 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolvePolygonToCircle(PhysicsManifold&#32;manifold)
1463 {
1464 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;manifold-&gt;bodyA;
1465 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;manifold-&gt;bodyB;
1466 
1467 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1468 
1469 &#32;&#32;&#32;&#32;manifold-&gt;bodyA&#32;=&#32;bodyB;
1470 &#32;&#32;&#32;&#32;manifold-&gt;bodyB&#32;=&#32;bodyA;
1471 &#32;&#32;&#32;&#32;SolveCircleToPolygon(manifold);
1472 
1473 &#32;&#32;&#32;&#32;manifold-&gt;normal.x&#32;*=&#32;-1.0f;
1474 &#32;&#32;&#32;&#32;manifold-&gt;normal.y&#32;*=&#32;-1.0f;
1475 }
1476 
1477 <emphasis role="comment">//&#32;Solves&#32;collision&#32;between&#32;two&#32;polygons&#32;shape&#32;physics&#32;bodies</emphasis>
1478 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SolvePolygonToPolygon(PhysicsManifold&#32;manifold)
1479 {
1480 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((manifold-&gt;bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(manifold-&gt;bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1481 
1482 &#32;&#32;&#32;&#32;PhysicsShape&#32;bodyA&#32;=&#32;manifold-&gt;bodyA-&gt;shape;
1483 &#32;&#32;&#32;&#32;PhysicsShape&#32;bodyB&#32;=&#32;manifold-&gt;bodyB-&gt;shape;
1484 &#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;0;
1485 
1486 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;separating&#32;axis&#32;with&#32;A&#32;shape&apos;s&#32;face&#32;planes</emphasis>
1487 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;faceA&#32;=&#32;0;
1488 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;penetrationA&#32;=&#32;FindAxisLeastPenetration(&amp;faceA,&#32;bodyA,&#32;bodyB);
1489 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(penetrationA&#32;&gt;=&#32;0.0f)&#32;<emphasis role="keywordflow">return</emphasis>;
1490 
1491 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;separating&#32;axis&#32;with&#32;B&#32;shape&apos;s&#32;face&#32;planes</emphasis>
1492 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;faceB&#32;=&#32;0;
1493 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;penetrationB&#32;=&#32;FindAxisLeastPenetration(&amp;faceB,&#32;bodyB,&#32;bodyA);
1494 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(penetrationB&#32;&gt;=&#32;0.0f)&#32;<emphasis role="keywordflow">return</emphasis>;
1495 
1496 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;referenceIndex&#32;=&#32;0;
1497 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flip&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;<emphasis role="comment">//&#32;Always&#32;point&#32;from&#32;A&#32;shape&#32;to&#32;B&#32;shape</emphasis>
1498 
1499 &#32;&#32;&#32;&#32;PhysicsShape&#32;refPoly;&#32;<emphasis role="comment">//&#32;Reference</emphasis>
1500 &#32;&#32;&#32;&#32;PhysicsShape&#32;incPoly;&#32;<emphasis role="comment">//&#32;Incident</emphasis>
1501 
1502 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;which&#32;shape&#32;contains&#32;reference&#32;face</emphasis>
1503 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(BiasGreaterThan(penetrationA,&#32;penetrationB))
1504 &#32;&#32;&#32;&#32;{
1505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refPoly&#32;=&#32;bodyA;
1506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;incPoly&#32;=&#32;bodyB;
1507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;referenceIndex&#32;=&#32;faceA;
1508 &#32;&#32;&#32;&#32;}
1509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1510 &#32;&#32;&#32;&#32;{
1511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refPoly&#32;=&#32;bodyB;
1512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;incPoly&#32;=&#32;bodyA;
1513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;referenceIndex&#32;=&#32;faceB;
1514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flip&#32;=&#32;<emphasis role="keyword">true</emphasis>;
1515 &#32;&#32;&#32;&#32;}
1516 
1517 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;World&#32;space&#32;incident&#32;face</emphasis>
1518 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;incidentFace[2];
1519 &#32;&#32;&#32;&#32;FindIncidentFace(&amp;incidentFace[0],&#32;&amp;incidentFace[1],&#32;refPoly,&#32;incPoly,&#32;referenceIndex);
1520 
1521 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Setup&#32;reference&#32;face&#32;vertices</emphasis>
1522 &#32;&#32;&#32;&#32;PolygonData&#32;refData&#32;=&#32;refPoly.vertexData;
1523 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;refData.positions[referenceIndex];
1524 &#32;&#32;&#32;&#32;referenceIndex&#32;=&#32;(((referenceIndex&#32;+&#32;1)&#32;&lt;&#32;refData.vertexCount)&#32;?&#32;(referenceIndex&#32;+&#32;1)&#32;:&#32;0);
1525 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;refData.positions[referenceIndex];
1526 
1527 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transform&#32;vertices&#32;to&#32;world&#32;space</emphasis>
1528 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;Mat2MultiplyVector2(refPoly.transform,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
1529 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;refPoly.body-&gt;position);
1530 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;Mat2MultiplyVector2(refPoly.transform,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
1531 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;refPoly.body-&gt;position);
1532 
1533 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;reference&#32;face&#32;side&#32;normal&#32;in&#32;world&#32;space</emphasis>
1534 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;sidePlaneNormal&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
1535 &#32;&#32;&#32;&#32;MathNormalize(&amp;sidePlaneNormal);
1536 
1537 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Orthogonalize</emphasis>
1538 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;refFaceNormal&#32;=&#32;{&#32;sidePlaneNormal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>,&#32;-sidePlaneNormal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;};
1539 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;refC&#32;=&#32;MathDot(refFaceNormal,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
1540 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;negSide&#32;=&#32;MathDot(sidePlaneNormal,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>)*-1;
1541 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;posSide&#32;=&#32;MathDot(sidePlaneNormal,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
1542 
1543 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clip&#32;incident&#32;face&#32;to&#32;reference&#32;face&#32;side&#32;planes&#32;(due&#32;to&#32;floating&#32;point&#32;error,&#32;possible&#32;to&#32;not&#32;have&#32;required&#32;points</emphasis>
1544 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Clip((<link linkend="_struct_vector2">Vector2</link>){&#32;-sidePlaneNormal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-sidePlaneNormal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;},&#32;negSide,&#32;&amp;incidentFace[0],&#32;&amp;incidentFace[1])&#32;&lt;&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>;
1545 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Clip(sidePlaneNormal,&#32;posSide,&#32;&amp;incidentFace[0],&#32;&amp;incidentFace[1])&#32;&lt;&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>;
1546 
1547 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Flip&#32;normal&#32;if&#32;required</emphasis>
1548 &#32;&#32;&#32;&#32;manifold-&gt;normal&#32;=&#32;(flip&#32;?&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-refFaceNormal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-refFaceNormal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;}&#32;:&#32;refFaceNormal);
1549 
1550 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Keep&#32;points&#32;behind&#32;reference&#32;face</emphasis>
1551 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentPoint&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;Clipped&#32;points&#32;behind&#32;reference&#32;face</emphasis>
1552 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;separation&#32;=&#32;MathDot(refFaceNormal,&#32;incidentFace[0])&#32;-&#32;refC;
1553 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(separation&#32;&lt;=&#32;0.0f)
1554 &#32;&#32;&#32;&#32;{
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[currentPoint]&#32;=&#32;incidentFace[0];
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;=&#32;-separation;
1557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPoint++;
1558 &#32;&#32;&#32;&#32;}
1559 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;manifold-&gt;penetration&#32;=&#32;0.0f;
1560 
1561 &#32;&#32;&#32;&#32;separation&#32;=&#32;MathDot(refFaceNormal,&#32;incidentFace[1])&#32;-&#32;refC;
1562 
1563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(separation&#32;&lt;=&#32;0.0f)
1564 &#32;&#32;&#32;&#32;{
1565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;contacts[currentPoint]&#32;=&#32;incidentFace[1];
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;+=&#32;-separation;
1567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPoint++;
1568 
1569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;total&#32;penetration&#32;average</emphasis>
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manifold-&gt;penetration&#32;/=&#32;currentPoint;
1571 &#32;&#32;&#32;&#32;}
1572 
1573 &#32;&#32;&#32;&#32;manifold-&gt;contactsCount&#32;=&#32;currentPoint;
1574 }
1575 
1576 <emphasis role="comment">//&#32;Integrates&#32;physics&#32;forces&#32;into&#32;velocity</emphasis>
1577 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IntegratePhysicsForces(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body)
1578 {
1579 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((body&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(body-&gt;inverseMass&#32;==&#32;0.0f)&#32;||&#32;!body-&gt;enabled)&#32;<emphasis role="keywordflow">return</emphasis>;
1580 
1581 &#32;&#32;&#32;&#32;body-&gt;velocity.x&#32;+=&#32;(body-&gt;force.x*body-&gt;inverseMass)*(deltaTime/2.0);
1582 &#32;&#32;&#32;&#32;body-&gt;velocity.y&#32;+=&#32;(body-&gt;force.y*body-&gt;inverseMass)*(deltaTime/2.0);
1583 
1584 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(body-&gt;useGravity)
1585 &#32;&#32;&#32;&#32;{
1586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body-&gt;velocity.x&#32;+=&#32;gravityForce.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*(deltaTime/1000/2.0);
1587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body-&gt;velocity.y&#32;+=&#32;gravityForce.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*(deltaTime/1000/2.0);
1588 &#32;&#32;&#32;&#32;}
1589 
1590 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!body-&gt;freezeOrient)&#32;body-&gt;angularVelocity&#32;+=&#32;body-&gt;torque*body-&gt;inverseInertia*(deltaTime/2.0);
1591 }
1592 
1593 <emphasis role="comment">//&#32;Initializes&#32;physics&#32;manifolds&#32;to&#32;solve&#32;collisions</emphasis>
1594 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializePhysicsManifolds(PhysicsManifold&#32;manifold)
1595 {
1596 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;manifold-&gt;bodyA;
1597 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;manifold-&gt;bodyB;
1598 
1599 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1600 
1601 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;average&#32;restitution,&#32;static&#32;and&#32;dynamic&#32;friction</emphasis>
1602 &#32;&#32;&#32;&#32;manifold-&gt;restitution&#32;=&#32;sqrtf(bodyA-&gt;restitution*bodyB-&gt;restitution);
1603 &#32;&#32;&#32;&#32;manifold-&gt;staticFriction&#32;=&#32;sqrtf(bodyA-&gt;staticFriction*bodyB-&gt;staticFriction);
1604 &#32;&#32;&#32;&#32;manifold-&gt;dynamicFriction&#32;=&#32;sqrtf(bodyA-&gt;dynamicFriction*bodyB-&gt;dynamicFriction);
1605 
1606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;manifold-&gt;contactsCount;&#32;i++)
1607 &#32;&#32;&#32;&#32;{
1608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Caculate&#32;radius&#32;from&#32;center&#32;of&#32;mass&#32;to&#32;contact</emphasis>
1609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;radiusA&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(manifold-&gt;contacts[i],&#32;bodyA-&gt;position);
1610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;radiusB&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(manifold-&gt;contacts[i],&#32;bodyB-&gt;position);
1611 
1612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;crossA&#32;=&#32;MathCross(bodyA-&gt;angularVelocity,&#32;radiusA);
1613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;crossB&#32;=&#32;MathCross(bodyB-&gt;angularVelocity,&#32;radiusB);
1614 
1615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;radiusV&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
1616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;bodyB-&gt;velocity.x&#32;+&#32;crossB.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;bodyA-&gt;velocity.x&#32;-&#32;crossA.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>;
1617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;=&#32;bodyB-&gt;velocity.y&#32;+&#32;crossB.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;bodyA-&gt;velocity.y&#32;-&#32;crossA.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>;
1618 
1619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;if&#32;we&#32;should&#32;perform&#32;a&#32;resting&#32;collision&#32;or&#32;not;</emphasis>
1620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;idea&#32;is&#32;if&#32;the&#32;only&#32;thing&#32;moving&#32;this&#32;object&#32;is&#32;gravity,&#32;then&#32;the&#32;collision&#32;should&#32;be&#32;performed&#32;without&#32;any&#32;restitution</emphasis>
1621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(MathLenSqr(radiusV)&#32;&lt;&#32;(MathLenSqr((<link linkend="_struct_vector2">Vector2</link>){&#32;gravityForce.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*deltaTime/1000,&#32;gravityForce.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*deltaTime/1000&#32;})&#32;+&#32;PHYSAC_EPSILON))&#32;manifold-&gt;restitution&#32;=&#32;0;
1622 &#32;&#32;&#32;&#32;}
1623 }
1624 
1625 <emphasis role="comment">//&#32;Integrates&#32;physics&#32;collisions&#32;impulses&#32;to&#32;solve&#32;collisions</emphasis>
1626 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IntegratePhysicsImpulses(PhysicsManifold&#32;manifold)
1627 {
1628 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;manifold-&gt;bodyA;
1629 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;manifold-&gt;bodyB;
1630 
1631 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1632 
1633 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Early&#32;out&#32;and&#32;positional&#32;correct&#32;if&#32;both&#32;objects&#32;have&#32;infinite&#32;mass</emphasis>
1634 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2include_2tgmath_8h_1a4c7267c07bf08c667c579af6a9e73db5">fabs</link>(bodyA-&gt;inverseMass&#32;+&#32;bodyB-&gt;inverseMass)&#32;&lt;=&#32;PHYSAC_EPSILON)
1635 &#32;&#32;&#32;&#32;{
1636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;velocity&#32;=&#32;PHYSAC_VECTOR_ZERO;
1637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;velocity&#32;=&#32;PHYSAC_VECTOR_ZERO;
1638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1639 &#32;&#32;&#32;&#32;}
1640 
1641 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;manifold-&gt;contactsCount;&#32;i++)
1642 &#32;&#32;&#32;&#32;{
1643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;radius&#32;from&#32;center&#32;of&#32;mass&#32;to&#32;contact</emphasis>
1644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;radiusA&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(manifold-&gt;contacts[i],&#32;bodyA-&gt;position);
1645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;radiusB&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(manifold-&gt;contacts[i],&#32;bodyB-&gt;position);
1646 
1647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;relative&#32;velocity</emphasis>
1648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;radiusV&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;bodyB-&gt;velocity.x&#32;+&#32;MathCross(bodyB-&gt;angularVelocity,&#32;radiusB).x&#32;-&#32;bodyA-&gt;velocity.x&#32;-&#32;MathCross(bodyA-&gt;angularVelocity,&#32;radiusA).x;
1650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;=&#32;bodyB-&gt;velocity.y&#32;+&#32;MathCross(bodyB-&gt;angularVelocity,&#32;radiusB).y&#32;-&#32;bodyA-&gt;velocity.y&#32;-&#32;MathCross(bodyA-&gt;angularVelocity,&#32;radiusA).y;
1651 
1652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Relative&#32;velocity&#32;along&#32;the&#32;normal</emphasis>
1653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;contactVelocity&#32;=&#32;MathDot(radiusV,&#32;manifold-&gt;normal);
1654 
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;resolve&#32;if&#32;velocities&#32;are&#32;separating</emphasis>
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contactVelocity&#32;&gt;&#32;0.0f)&#32;<emphasis role="keywordflow">return</emphasis>;
1657 
1658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;raCrossN&#32;=&#32;MathCrossVector2(radiusA,&#32;manifold-&gt;normal);
1659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rbCrossN&#32;=&#32;MathCrossVector2(radiusB,&#32;manifold-&gt;normal);
1660 
1661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inverseMassSum&#32;=&#32;bodyA-&gt;inverseMass&#32;+&#32;bodyB-&gt;inverseMass&#32;+&#32;(raCrossN*raCrossN)*bodyA-&gt;inverseInertia&#32;+&#32;(rbCrossN*rbCrossN)*bodyB-&gt;inverseInertia;
1662 
1663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;impulse&#32;scalar&#32;value</emphasis>
1664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;impulse&#32;=&#32;-(1.0f&#32;+&#32;manifold-&gt;restitution)*contactVelocity;
1665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impulse&#32;/=&#32;inverseMassSum;
1666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impulse&#32;/=&#32;(float)manifold-&gt;contactsCount;
1667 
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;impulse&#32;to&#32;each&#32;physics&#32;body</emphasis>
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;impulseV&#32;=&#32;{&#32;manifold-&gt;normal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*impulse,&#32;manifold-&gt;normal.y*impulse&#32;};
1670 
1671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyA-&gt;enabled)
1672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;velocity.x&#32;+=&#32;bodyA-&gt;inverseMass*(-impulseV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;velocity.y&#32;+=&#32;bodyA-&gt;inverseMass*(-impulseV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
1675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bodyA-&gt;freezeOrient)&#32;bodyA-&gt;angularVelocity&#32;+=&#32;bodyA-&gt;inverseInertia*MathCrossVector2(radiusA,&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-impulseV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-impulseV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;});
1676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1677 
1678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyB-&gt;enabled)
1679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;velocity.x&#32;+=&#32;bodyB-&gt;inverseMass*(impulseV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
1681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;velocity.y&#32;+=&#32;bodyB-&gt;inverseMass*(impulseV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
1682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bodyB-&gt;freezeOrient)&#32;bodyB-&gt;angularVelocity&#32;+=&#32;bodyB-&gt;inverseInertia*MathCrossVector2(radiusB,&#32;impulseV);
1683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1684 
1685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;friction&#32;impulse&#32;to&#32;each&#32;physics&#32;body</emphasis>
1686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;bodyB-&gt;velocity.x&#32;+&#32;MathCross(bodyB-&gt;angularVelocity,&#32;radiusB).x&#32;-&#32;bodyA-&gt;velocity.x&#32;-&#32;MathCross(bodyA-&gt;angularVelocity,&#32;radiusA).x;
1687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;=&#32;bodyB-&gt;velocity.y&#32;+&#32;MathCross(bodyB-&gt;angularVelocity,&#32;radiusB).y&#32;-&#32;bodyA-&gt;velocity.y&#32;-&#32;MathCross(bodyA-&gt;angularVelocity,&#32;radiusA).y;
1688 
1689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;tangent&#32;=&#32;{&#32;radiusV.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;(manifold-&gt;normal.x*MathDot(radiusV,&#32;manifold-&gt;normal)),&#32;radiusV.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;-&#32;(manifold-&gt;normal.y*MathDot(radiusV,&#32;manifold-&gt;normal))&#32;};
1690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MathNormalize(&amp;tangent);
1691 
1692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;impulse&#32;tangent&#32;magnitude</emphasis>
1693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;impulseTangent&#32;=&#32;-MathDot(radiusV,&#32;tangent);
1694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impulseTangent&#32;/=&#32;inverseMassSum;
1695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impulseTangent&#32;/=&#32;(float)manifold-&gt;contactsCount;
1696 
1697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;absImpulseTangent&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a4c7267c07bf08c667c579af6a9e73db5">fabs</link>(impulseTangent);
1698 
1699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;apply&#32;tiny&#32;friction&#32;impulses</emphasis>
1700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(absImpulseTangent&#32;&lt;=&#32;PHYSAC_EPSILON)&#32;<emphasis role="keywordflow">return</emphasis>;
1701 
1702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;coulumb&apos;s&#32;law</emphasis>
1703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;tangentImpulse&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
1704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(absImpulseTangent&#32;&lt;&#32;impulse*manifold-&gt;staticFriction)&#32;tangentImpulse&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;tangent.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*impulseTangent,&#32;tangent.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*impulseTangent&#32;};
1705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;tangentImpulse&#32;=&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;tangent.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*-impulse*manifold-&gt;dynamicFriction,&#32;tangent.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*-impulse*manifold-&gt;dynamicFriction&#32;};
1706 
1707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;friction&#32;impulse</emphasis>
1708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyA-&gt;enabled)
1709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;velocity.x&#32;+=&#32;bodyA-&gt;inverseMass*(-tangentImpulse.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
1711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;velocity.y&#32;+=&#32;bodyA-&gt;inverseMass*(-tangentImpulse.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
1712 
1713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bodyA-&gt;freezeOrient)&#32;bodyA-&gt;angularVelocity&#32;+=&#32;bodyA-&gt;inverseInertia*MathCrossVector2(radiusA,&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-tangentImpulse.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-tangentImpulse.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;});
1714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1715 
1716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyB-&gt;enabled)
1717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;velocity.x&#32;+=&#32;bodyB-&gt;inverseMass*(tangentImpulse.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>);
1719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;velocity.y&#32;+=&#32;bodyB-&gt;inverseMass*(tangentImpulse.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
1720 
1721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bodyB-&gt;freezeOrient)&#32;bodyB-&gt;angularVelocity&#32;+=&#32;bodyB-&gt;inverseInertia*MathCrossVector2(radiusB,&#32;tangentImpulse);
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1723 &#32;&#32;&#32;&#32;}
1724 }
1725 
1726 <emphasis role="comment">//&#32;Integrates&#32;physics&#32;velocity&#32;into&#32;position&#32;and&#32;forces</emphasis>
1727 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IntegratePhysicsVelocity(<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;body)
1728 {
1729 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((body&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||!body-&gt;enabled)&#32;<emphasis role="keywordflow">return</emphasis>;
1730 
1731 &#32;&#32;&#32;&#32;body-&gt;position.x&#32;+=&#32;body-&gt;velocity.x*deltaTime;
1732 &#32;&#32;&#32;&#32;body-&gt;position.y&#32;+=&#32;body-&gt;velocity.y*deltaTime;
1733 
1734 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!body-&gt;freezeOrient)&#32;body-&gt;orient&#32;+=&#32;body-&gt;angularVelocity*deltaTime;
1735 &#32;&#32;&#32;&#32;Mat2Set(&amp;body-&gt;shape.transform,&#32;body-&gt;orient);
1736 
1737 &#32;&#32;&#32;&#32;IntegratePhysicsForces(body);
1738 }
1739 
1740 <emphasis role="comment">//&#32;Corrects&#32;physics&#32;bodies&#32;positions&#32;based&#32;on&#32;manifolds&#32;collision&#32;information</emphasis>
1741 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CorrectPhysicsPositions(PhysicsManifold&#32;manifold)
1742 {
1743 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyA&#32;=&#32;manifold-&gt;bodyA;
1744 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1a2a45f6cce4f2030b210e81ea55c78dab">PhysicsBody</link>&#32;bodyB&#32;=&#32;manifold-&gt;bodyB;
1745 
1746 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bodyA&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;||&#32;(bodyB&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>;
1747 
1748 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;correction&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
1749 &#32;&#32;&#32;&#32;correction.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;(<link linkend="_group__core__func__common_1gae02d42887fc5570451f880e3c624b9ac">max</link>(manifold-&gt;penetration&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1adce95ef7210c45d7e5ac83aa79a90aae">PHYSAC_PENETRATION_ALLOWANCE</link>,&#32;0.0f)/(bodyA-&gt;inverseMass&#32;+&#32;bodyB-&gt;inverseMass))*manifold-&gt;normal.x*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ab3c14194e05a23397ee079f8a073e9fd">PHYSAC_PENETRATION_CORRECTION</link>;
1750 &#32;&#32;&#32;&#32;correction.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;=&#32;(<link linkend="_group__core__func__common_1gae02d42887fc5570451f880e3c624b9ac">max</link>(manifold-&gt;penetration&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1adce95ef7210c45d7e5ac83aa79a90aae">PHYSAC_PENETRATION_ALLOWANCE</link>,&#32;0.0f)/(bodyA-&gt;inverseMass&#32;+&#32;bodyB-&gt;inverseMass))*manifold-&gt;normal.y*<link linkend="__classes_2lib_2raylib_2src_2physac_8h_1ab3c14194e05a23397ee079f8a073e9fd">PHYSAC_PENETRATION_CORRECTION</link>;
1751 
1752 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyA-&gt;enabled)
1753 &#32;&#32;&#32;&#32;{
1754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;position.x&#32;-=&#32;correction.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*bodyA-&gt;inverseMass;
1755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyA-&gt;position.y&#32;-=&#32;correction.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*bodyA-&gt;inverseMass;
1756 &#32;&#32;&#32;&#32;}
1757 
1758 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bodyB-&gt;enabled)
1759 &#32;&#32;&#32;&#32;{
1760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;position.x&#32;+=&#32;correction.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*bodyB-&gt;inverseMass;
1761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyB-&gt;position.y&#32;+=&#32;correction.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*bodyB-&gt;inverseMass;
1762 &#32;&#32;&#32;&#32;}
1763 }
1764 
1765 <emphasis role="comment">//&#32;Returns&#32;the&#32;extreme&#32;point&#32;along&#32;a&#32;direction&#32;within&#32;a&#32;polygon</emphasis>
1766 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;GetSupport(PhysicsShape&#32;shape,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;dir)
1767 {
1768 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bestProjection&#32;=&#32;-PHYSAC_FLT_MAX;
1769 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;bestVertex&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
1770 &#32;&#32;&#32;&#32;PolygonData&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;shape.vertexData;
1771 
1772 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.vertexCount;&#32;i++)
1773 &#32;&#32;&#32;&#32;{
1774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;vertex&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>.positions[i];
1775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;projection&#32;=&#32;MathDot(vertex,&#32;dir);
1776 
1777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(projection&#32;&gt;&#32;bestProjection)
1778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestVertex&#32;=&#32;vertex;
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestProjection&#32;=&#32;projection;
1781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1782 &#32;&#32;&#32;&#32;}
1783 
1784 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bestVertex;
1785 }
1786 
1787 <emphasis role="comment">//&#32;Finds&#32;polygon&#32;shapes&#32;axis&#32;least&#32;penetration</emphasis>
1788 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;FindAxisLeastPenetration(<emphasis role="keywordtype">int</emphasis>&#32;*faceIndex,&#32;PhysicsShape&#32;shapeA,&#32;PhysicsShape&#32;shapeB)
1789 {
1790 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bestDistance&#32;=&#32;-PHYSAC_FLT_MAX;
1791 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bestIndex&#32;=&#32;0;
1792 
1793 &#32;&#32;&#32;&#32;PolygonData&#32;dataA&#32;=&#32;shapeA.vertexData;
1794 &#32;&#32;&#32;&#32;<emphasis role="comment">//PolygonData&#32;dataB&#32;=&#32;shapeB.vertexData;</emphasis>
1795 
1796 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dataA.vertexCount;&#32;i++)
1797 &#32;&#32;&#32;&#32;{
1798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;a&#32;face&#32;normal&#32;from&#32;A&#32;shape</emphasis>
1799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;normal&#32;=&#32;dataA.normals[i];
1800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;transNormal&#32;=&#32;Mat2MultiplyVector2(shapeA.transform,&#32;normal);
1801 
1802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transform&#32;face&#32;normal&#32;into&#32;B&#32;shape&apos;s&#32;model&#32;space</emphasis>
1803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Matrix2x2&#32;buT&#32;=&#32;Mat2Transpose(shapeB.transform);
1804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normal&#32;=&#32;Mat2MultiplyVector2(buT,&#32;transNormal);
1805 
1806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;support&#32;point&#32;from&#32;B&#32;shape&#32;along&#32;-n</emphasis>
1807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;support&#32;=&#32;GetSupport(shapeB,&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-normal.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>,&#32;-normal.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;});
1808 
1809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;vertex&#32;on&#32;face&#32;from&#32;A&#32;shape,&#32;transform&#32;into&#32;B&#32;shape&apos;s&#32;model&#32;space</emphasis>
1810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;vertex&#32;=&#32;dataA.positions[i];
1811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertex&#32;=&#32;Mat2MultiplyVector2(shapeA.transform,&#32;vertex);
1812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertex&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(vertex,&#32;shapeA.body-&gt;position);
1813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertex&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(vertex,&#32;shapeB.body-&gt;position);
1814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertex&#32;=&#32;Mat2MultiplyVector2(buT,&#32;vertex);
1815 
1816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;penetration&#32;distance&#32;in&#32;B&#32;shape&apos;s&#32;model&#32;space</emphasis>
1817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedistance">distance</link>&#32;=&#32;MathDot(normal,&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(support,&#32;vertex));
1818 
1819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;greatest&#32;distance</emphasis>
1820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacedistance">distance</link>&#32;&gt;&#32;bestDistance)
1821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestDistance&#32;=&#32;<link linkend="_namespacedistance">distance</link>;
1823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestIndex&#32;=&#32;i;
1824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1825 &#32;&#32;&#32;&#32;}
1826 
1827 &#32;&#32;&#32;&#32;*faceIndex&#32;=&#32;bestIndex;
1828 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bestDistance;
1829 }
1830 
1831 <emphasis role="comment">//&#32;Finds&#32;two&#32;polygon&#32;shapes&#32;incident&#32;face</emphasis>
1832 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FindIncidentFace(<link linkend="_struct_vector2">Vector2</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;PhysicsShape&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a083de4c8e32ad3d9059245f26be721de">ref</link>,&#32;PhysicsShape&#32;inc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)
1833 {
1834 &#32;&#32;&#32;&#32;PolygonData&#32;refData&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a083de4c8e32ad3d9059245f26be721de">ref</link>.vertexData;
1835 &#32;&#32;&#32;&#32;PolygonData&#32;incData&#32;=&#32;inc.vertexData;
1836 
1837 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;referenceNormal&#32;=&#32;refData.normals[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>];
1838 
1839 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;normal&#32;in&#32;incident&apos;s&#32;frame&#32;of&#32;reference</emphasis>
1840 &#32;&#32;&#32;&#32;referenceNormal&#32;=&#32;Mat2MultiplyVector2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a083de4c8e32ad3d9059245f26be721de">ref</link>.transform,&#32;referenceNormal);&#32;<emphasis role="comment">//&#32;To&#32;world&#32;space</emphasis>
1841 &#32;&#32;&#32;&#32;referenceNormal&#32;=&#32;Mat2MultiplyVector2(Mat2Transpose(inc.transform),&#32;referenceNormal);&#32;<emphasis role="comment">//&#32;To&#32;incident&apos;s&#32;model&#32;space</emphasis>
1842 
1843 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;most&#32;anti-normal&#32;face&#32;on&#32;polygon</emphasis>
1844 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;incidentFace&#32;=&#32;0;
1845 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;minDot&#32;=&#32;PHYSAC_FLT_MAX;
1846 
1847 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;incData.vertexCount;&#32;i++)
1848 &#32;&#32;&#32;&#32;{
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacedot">dot</link>&#32;=&#32;MathDot(referenceNormal,&#32;incData.normals[i]);
1850 
1851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacedot">dot</link>&#32;&lt;&#32;minDot)
1852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minDot&#32;=&#32;<link linkend="_namespacedot">dot</link>;
1854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;incidentFace&#32;=&#32;i;
1855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1856 &#32;&#32;&#32;&#32;}
1857 
1858 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assign&#32;face&#32;vertices&#32;for&#32;incident&#32;face</emphasis>
1859 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>&#32;=&#32;Mat2MultiplyVector2(inc.transform,&#32;incData.positions[incidentFace]);
1860 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;inc.body-&gt;position);
1861 &#32;&#32;&#32;&#32;incidentFace&#32;=&#32;(((incidentFace&#32;+&#32;1)&#32;&lt;&#32;incData.vertexCount)&#32;?&#32;(incidentFace&#32;+&#32;1)&#32;:&#32;0);
1862 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;Mat2MultiplyVector2(inc.transform,&#32;incData.positions[incidentFace]);
1863 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;inc.body-&gt;position);
1864 }
1865 
1866 <emphasis role="comment">//&#32;Calculates&#32;clipping&#32;based&#32;on&#32;a&#32;normal&#32;and&#32;two&#32;faces</emphasis>
1867 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Clip(<link linkend="_struct_vector2">Vector2</link>&#32;normal,&#32;<emphasis role="keywordtype">float</emphasis>&#32;clip,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*faceA,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;*faceB)
1868 {
1869 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sp&#32;=&#32;0;
1870 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;out[2]&#32;=&#32;{&#32;*faceA,&#32;*faceB&#32;};
1871 
1872 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;distances&#32;from&#32;each&#32;endpoint&#32;to&#32;the&#32;line</emphasis>
1873 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distanceA&#32;=&#32;MathDot(normal,&#32;*faceA)&#32;-&#32;clip;
1874 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distanceB&#32;=&#32;MathDot(normal,&#32;*faceB)&#32;-&#32;clip;
1875 
1876 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;negative&#32;(behind&#32;plane)</emphasis>
1877 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(distanceA&#32;&lt;=&#32;0.0f)&#32;out[sp++]&#32;=&#32;*faceA;
1878 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(distanceB&#32;&lt;=&#32;0.0f)&#32;out[sp++]&#32;=&#32;*faceB;
1879 
1880 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;points&#32;are&#32;on&#32;different&#32;sides&#32;of&#32;the&#32;plane</emphasis>
1881 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((distanceA*distanceB)&#32;&lt;&#32;0.0f)
1882 &#32;&#32;&#32;&#32;{
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Push&#32;intersection&#32;point</emphasis>
1884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>&#32;=&#32;distanceA/(distanceA&#32;-&#32;distanceB);
1885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[sp]&#32;=&#32;*faceA;
1886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;delta&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(*faceB,&#32;*faceA);
1887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;*=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>;
1888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;*=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>;
1889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[sp]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(out[sp],&#32;delta);
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sp++;
1891 &#32;&#32;&#32;&#32;}
1892 
1893 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assign&#32;the&#32;new&#32;converted&#32;values</emphasis>
1894 &#32;&#32;&#32;&#32;*faceA&#32;=&#32;out[0];
1895 &#32;&#32;&#32;&#32;*faceB&#32;=&#32;out[1];
1896 
1897 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sp;
1898 }
1899 
1900 <emphasis role="comment">//&#32;Check&#32;if&#32;values&#32;are&#32;between&#32;bias&#32;range</emphasis>
1901 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;BiasGreaterThan(<emphasis role="keywordtype">float</emphasis>&#32;valueA,&#32;<emphasis role="keywordtype">float</emphasis>&#32;valueB)
1902 {
1903 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(valueA&#32;&gt;=&#32;(valueB*0.95f&#32;+&#32;valueA*0.01f));
1904 }
1905 
1906 <emphasis role="comment">//&#32;Returns&#32;the&#32;barycenter&#32;of&#32;a&#32;triangle&#32;given&#32;by&#32;3&#32;points</emphasis>
1907 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;TriangleBarycenter(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>)
1908 {
1909 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;{&#32;0.0f,&#32;0.0f&#32;};
1910 
1911 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>.x)/3;
1912 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.y&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1acc806b31cbf466ceba6555983d8b814d">v3</link>.y)/3;
1913 
1914 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1915 }
1916 
1917 <emphasis role="comment">//&#32;Initializes&#32;hi-resolution&#32;MONOTONIC&#32;timer</emphasis>
1918 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitTimer(<emphasis role="keywordtype">void</emphasis>)
1919 {
1920 &#32;&#32;&#32;&#32;srand(<link linkend="_structtime">time</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;random&#32;seed</emphasis>
1921 
1922 <emphasis role="preprocessor">#if&#32;defined(_WIN32)</emphasis>
1923 &#32;&#32;&#32;&#32;QueryPerformanceFrequency((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;&amp;frequency);
1924 <emphasis role="preprocessor">#endif</emphasis>
1925 
1926 <emphasis role="preprocessor">#if&#32;defined(__EMSCRIPTEN__)&#32;||&#32;defined(__linux__)</emphasis>
1927 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>timespec&#32;now;
1928 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2pthread__time_8h_1a907d36e3ac946c73f25cc3d4cbf44c7a">clock_gettime</link>(<link linkend="__classes_2lib_2pthread__time_8h_1a6fb83f5e91e704391ff796553d5e0f46">CLOCK_MONOTONIC</link>,&#32;&amp;now)&#32;==&#32;0)&#32;frequency&#32;=&#32;1000000000;
1929 <emphasis role="preprocessor">#endif</emphasis>
1930 
1931 <emphasis role="preprocessor">#if&#32;defined(__APPLE__)</emphasis>
1932 &#32;&#32;&#32;&#32;mach_timebase_info_data_t&#32;timebase;
1933 &#32;&#32;&#32;&#32;mach_timebase_info(&amp;timebase);
1934 &#32;&#32;&#32;&#32;frequency&#32;=&#32;(timebase.denom*1e9)/timebase.numer;
1935 <emphasis role="preprocessor">#endif</emphasis>
1936 
1937 &#32;&#32;&#32;&#32;baseTime&#32;=&#32;GetTimeCount();&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;MONOTONIC&#32;clock&#32;time&#32;offset</emphasis>
1938 &#32;&#32;&#32;&#32;startTime&#32;=&#32;GetCurrentTime();&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;current&#32;time</emphasis>
1939 }
1940 
1941 <emphasis role="comment">//&#32;Get&#32;hi-res&#32;MONOTONIC&#32;time&#32;measure&#32;in&#32;seconds</emphasis>
1942 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetTimeCount(<emphasis role="keywordtype">void</emphasis>)
1943 {
1944 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;0;
1945 
1946 <emphasis role="preprocessor">#if&#32;defined(_WIN32)</emphasis>
1947 &#32;&#32;&#32;&#32;QueryPerformanceCounter((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;&amp;<link linkend="_classvalue">value</link>);
1948 <emphasis role="preprocessor">#endif</emphasis>
1949 
1950 <emphasis role="preprocessor">#if&#32;defined(__linux__)</emphasis>
1951 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>timespec&#32;now;
1952 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2pthread__time_8h_1a907d36e3ac946c73f25cc3d4cbf44c7a">clock_gettime</link>(<link linkend="__classes_2lib_2pthread__time_8h_1a6fb83f5e91e704391ff796553d5e0f46">CLOCK_MONOTONIC</link>,&#32;&amp;now);
1953 &#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;int)now.tv_sec*(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>)1000000000&#32;+&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;int)now.tv_nsec;
1954 <emphasis role="preprocessor">#endif</emphasis>
1955 
1956 <emphasis role="preprocessor">#if&#32;defined(__APPLE__)</emphasis>
1957 &#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;mach_absolute_time();
1958 <emphasis role="preprocessor">#endif</emphasis>
1959 
1960 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classvalue">value</link>;
1961 }
1962 
1963 <emphasis role="comment">//&#32;Get&#32;current&#32;time&#32;in&#32;milliseconds</emphasis>
1964 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;GetCurrentTime(<emphasis role="keywordtype">void</emphasis>)
1965 {
1966 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">double</emphasis>)(GetTimeCount()&#32;-&#32;baseTime)/frequency*1000;
1967 }
1968 
1969 <emphasis role="comment">//&#32;Returns&#32;the&#32;cross&#32;product&#32;of&#32;a&#32;vector&#32;and&#32;a&#32;value</emphasis>
1970 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;MathCross(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;vector)
1971 {
1972 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;-<link linkend="_classvalue">value</link>*vector.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>,&#32;<link linkend="_classvalue">value</link>*vector.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;};
1973 }
1974 
1975 <emphasis role="comment">//&#32;Returns&#32;the&#32;cross&#32;product&#32;of&#32;two&#32;vectors</emphasis>
1976 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;MathCrossVector2(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
1977 {
1978 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.x*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.y&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.y*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.x);
1979 }
1980 
1981 <emphasis role="comment">//&#32;Returns&#32;the&#32;len&#32;square&#32;root&#32;of&#32;a&#32;vector</emphasis>
1982 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;MathLenSqr(<link linkend="_struct_vector2">Vector2</link>&#32;vector)
1983 {
1984 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(vector.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*vector.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;vector.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*vector.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
1985 }
1986 
1987 <emphasis role="comment">//&#32;Returns&#32;the&#32;dot&#32;product&#32;of&#32;two&#32;vectors</emphasis>
1988 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;MathDot(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
1989 {
1990 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.x*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.y*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.y);
1991 }
1992 
1993 <emphasis role="comment">//&#32;Returns&#32;the&#32;square&#32;root&#32;of&#32;distance&#32;between&#32;two&#32;vectors</emphasis>
1994 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;DistSqr(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
1995 {
1996 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;dir&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
1997 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;MathDot(dir,&#32;dir);
1998 }
1999 
2000 <emphasis role="comment">//&#32;Returns&#32;the&#32;normalized&#32;values&#32;of&#32;a&#32;vector</emphasis>
2001 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MathNormalize(<link linkend="_struct_vector2">Vector2</link>&#32;*vector)
2002 {
2003 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacelength">length</link>,&#32;ilength;
2004 
2005 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2">Vector2</link>&#32;aux&#32;=&#32;*vector;
2006 &#32;&#32;&#32;&#32;<link linkend="_namespacelength">length</link>&#32;=&#32;sqrtf(aux.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>*aux.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;aux.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>*aux.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>);
2007 
2008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacelength">length</link>&#32;==&#32;0)&#32;<link linkend="_namespacelength">length</link>&#32;=&#32;1.0f;
2009 
2010 &#32;&#32;&#32;&#32;ilength&#32;=&#32;1.0f/<link linkend="_namespacelength">length</link>;
2011 
2012 &#32;&#32;&#32;&#32;vector-&gt;<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;*=&#32;ilength;
2013 &#32;&#32;&#32;&#32;vector-&gt;<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;*=&#32;ilength;
2014 }
2015 
2016 <emphasis role="preprocessor">#if&#32;defined(PHYSAC_STANDALONE)</emphasis>
2017 <emphasis role="comment">//&#32;Returns&#32;the&#32;sum&#32;of&#32;two&#32;given&#32;vectors</emphasis>
2018 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a28d890163302080eae660216b7ca5618">Vector2Add</link>(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
2019 {
2020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.y&#32;};
2021 }
2022 
2023 <emphasis role="comment">//&#32;Returns&#32;the&#32;subtract&#32;of&#32;two&#32;given&#32;vectors</emphasis>
2024 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2raymath_8h_1a4bbf334cb3e5efc55e39121158a81c54">Vector2Subtract</link>(<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
2025 {
2026 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>.y&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>.y&#32;};
2027 }
2028 <emphasis role="preprocessor">#endif</emphasis>
2029 
2030 <emphasis role="comment">//&#32;Creates&#32;a&#32;matrix&#32;2x2&#32;from&#32;a&#32;given&#32;radians&#32;value</emphasis>
2031 <emphasis role="keyword">static</emphasis>&#32;Matrix2x2&#32;Mat2Radians(<emphasis role="keywordtype">float</emphasis>&#32;radians)
2032 {
2033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;c&#32;=&#32;cosf(radians);
2034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;s&#32;=&#32;sinf(radians);
2035 
2036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Matrix2x2){&#32;c,&#32;-s,&#32;s,&#32;c&#32;};
2037 }
2038 
2039 <emphasis role="comment">//&#32;Set&#32;values&#32;from&#32;radians&#32;to&#32;a&#32;created&#32;matrix&#32;2x2</emphasis>
2040 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Mat2Set(Matrix2x2&#32;*matrix,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radians)
2041 {
2042 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>&#32;=&#32;cosf(radians);
2043 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>&#32;=&#32;sinf(radians);
2044 
2045 &#32;&#32;&#32;&#32;matrix-&gt;m00&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>;
2046 &#32;&#32;&#32;&#32;matrix-&gt;m01&#32;=&#32;-<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>;
2047 &#32;&#32;&#32;&#32;matrix-&gt;m10&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>;
2048 &#32;&#32;&#32;&#32;matrix-&gt;m11&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>;
2049 }
2050 
2051 <emphasis role="comment">//&#32;Returns&#32;the&#32;transpose&#32;of&#32;a&#32;given&#32;matrix&#32;2x2</emphasis>
2052 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;Matrix2x2&#32;Mat2Transpose(Matrix2x2&#32;matrix)
2053 {
2054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Matrix2x2){&#32;matrix.m00,&#32;matrix.m10,&#32;matrix.m01,&#32;matrix.m11&#32;};
2055 }
2056 
2057 <emphasis role="comment">//&#32;Multiplies&#32;a&#32;vector&#32;by&#32;a&#32;matrix&#32;2x2</emphasis>
2058 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_vector2">Vector2</link>&#32;Mat2MultiplyVector2(Matrix2x2&#32;matrix,&#32;<link linkend="_struct_vector2">Vector2</link>&#32;vector)
2059 {
2060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_vector2">Vector2</link>){&#32;matrix.m00*vector.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;matrix.m01*vector.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>,&#32;matrix.m10*vector.<link linkend="_struct_vector2_1a046bb8d17a876acc49415128dc0502f2">x</link>&#32;+&#32;matrix.m11*vector.<link linkend="_struct_vector2_1a0e07bad05f01ed811b909a2eef97f9e2">y</link>&#32;};
2061 }
2062 
2063 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">//&#32;PHYSAC_IMPLEMENTATION</emphasis>
</programlisting></section>
