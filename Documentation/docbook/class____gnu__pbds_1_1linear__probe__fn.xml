<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1linear__probe__fn" xml:lang="en-US">
<title>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary></indexterm>
<para>

<para>A probe sequence policy using fixed increments. </para>
 
</para>
<para>
<computeroutput>#include &lt;hash_policy.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aba1130faf76b9b2acda7ef5f76b47127">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aba1130faf76b9b2acda7ef5f76b47127">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aba1130faf76b9b2acda7ef5f76b47127">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1a2157046a86e4bdfeb4ae33ef885e9167">operator()</link> (<link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> i) const</para>

<para>Returns the i-th offset from the hash value. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1a2157046a86e4bdfeb4ae33ef885e9167">operator()</link> (<link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> i) const</para>

<para>Returns the i-th offset from the hash value. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn_1a2157046a86e4bdfeb4ae33ef885e9167">operator()</link> (<link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> i) const</para>

<para>Returns the i-th offset from the hash value. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Size_Type = std::size_t&gt;<?linebreak?>class __gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</title></simplesect>

<para>A probe sequence policy using fixed increments. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::size_type</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1a2157046a86e4bdfeb4ae33ef885e9167"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::operator() (<link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> i) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Returns the i-th offset from the hash value. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1a2157046a86e4bdfeb4ae33ef885e9167"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::operator() (<link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> i) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Returns the i-th offset from the hash value. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1a2157046a86e4bdfeb4ae33ef885e9167"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::operator() (<link linkend="_class____gnu__pbds_1_1linear__probe__fn_1aaf0b1d54dda6d85d8f1025ef40125b54">size_type</link> i) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Returns the i-th offset from the hash value. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1aba1130faf76b9b2acda7ef5f76b47127"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1aba1130faf76b9b2acda7ef5f76b47127"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1linear__probe__fn_1aba1130faf76b9b2acda7ef5f76b47127"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn</link>&lt; Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link></section>
</section>
