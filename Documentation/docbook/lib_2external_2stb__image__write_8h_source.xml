<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2stb__image__write_8h_source" xml:lang="en-US">
<title>stb_image_write.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/stb_image_write.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;stb_image_write&#32;-&#32;v1.16&#32;-&#32;public&#32;domain&#32;-&#32;http://nothings.org/stb</emphasis>
2 <emphasis role="comment">&#32;&#32;&#32;writes&#32;out&#32;PNG/BMP/TGA/JPEG/HDR&#32;images&#32;to&#32;C&#32;stdio&#32;-&#32;Sean&#32;Barrett&#32;2010-2015</emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;no&#32;warranty&#32;implied;&#32;use&#32;at&#32;your&#32;own&#32;risk</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;Before&#32;#including,</emphasis>
6 <emphasis role="comment"></emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STB_IMAGE_WRITE_IMPLEMENTATION</emphasis>
8 <emphasis role="comment"></emphasis>
9 <emphasis role="comment">&#32;&#32;&#32;in&#32;the&#32;file&#32;that&#32;you&#32;want&#32;to&#32;have&#32;the&#32;implementation.</emphasis>
10 <emphasis role="comment"></emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;Will&#32;probably&#32;not&#32;work&#32;correctly&#32;with&#32;strict-aliasing&#32;optimizations.</emphasis>
12 <emphasis role="comment"></emphasis>
13 <emphasis role="comment">ABOUT:</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;This&#32;header&#32;file&#32;is&#32;a&#32;library&#32;for&#32;writing&#32;images&#32;to&#32;C&#32;stdio&#32;or&#32;a&#32;callback.</emphasis>
16 <emphasis role="comment"></emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;The&#32;PNG&#32;output&#32;is&#32;not&#32;optimal;&#32;it&#32;is&#32;20-50%&#32;larger&#32;than&#32;the&#32;file</emphasis>
18 <emphasis role="comment">&#32;&#32;&#32;written&#32;by&#32;a&#32;decent&#32;optimizing&#32;implementation;&#32;though&#32;providing&#32;a&#32;custom</emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;zlib&#32;compress&#32;function&#32;(see&#32;STBIW_ZLIB_COMPRESS)&#32;can&#32;mitigate&#32;that.</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;This&#32;library&#32;is&#32;designed&#32;for&#32;source&#32;code&#32;compactness&#32;and&#32;simplicity,</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;not&#32;optimal&#32;image&#32;file&#32;size&#32;or&#32;run-time&#32;performance.</emphasis>
22 <emphasis role="comment"></emphasis>
23 <emphasis role="comment">BUILDING:</emphasis>
24 <emphasis role="comment"></emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;#define&#32;STBIW_ASSERT(x)&#32;before&#32;the&#32;#include&#32;to&#32;avoid&#32;using&#32;assert.h.</emphasis>
26 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;#define&#32;STBIW_MALLOC(),&#32;STBIW_REALLOC(),&#32;and&#32;STBIW_FREE()&#32;to&#32;replace</emphasis>
27 <emphasis role="comment">&#32;&#32;&#32;malloc,realloc,free.</emphasis>
28 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;#define&#32;STBIW_MEMMOVE()&#32;to&#32;replace&#32;memmove()</emphasis>
29 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;#define&#32;STBIW_ZLIB_COMPRESS&#32;to&#32;use&#32;a&#32;custom&#32;zlib-style&#32;compress&#32;function</emphasis>
30 <emphasis role="comment">&#32;&#32;&#32;for&#32;PNG&#32;compression&#32;(instead&#32;of&#32;the&#32;builtin&#32;one),&#32;it&#32;must&#32;have&#32;the&#32;following&#32;signature:</emphasis>
31 <emphasis role="comment">&#32;&#32;&#32;unsigned&#32;char&#32;*&#32;my_compress(unsigned&#32;char&#32;*data,&#32;int&#32;data_len,&#32;int&#32;*out_len,&#32;int&#32;quality);</emphasis>
32 <emphasis role="comment">&#32;&#32;&#32;The&#32;returned&#32;data&#32;will&#32;be&#32;freed&#32;with&#32;STBIW_FREE()&#32;(free()&#32;by&#32;default),</emphasis>
33 <emphasis role="comment">&#32;&#32;&#32;so&#32;it&#32;must&#32;be&#32;heap&#32;allocated&#32;with&#32;STBIW_MALLOC()&#32;(malloc()&#32;by&#32;default),</emphasis>
34 <emphasis role="comment"></emphasis>
35 <emphasis role="comment">UNICODE:</emphasis>
36 <emphasis role="comment"></emphasis>
37 <emphasis role="comment">&#32;&#32;&#32;If&#32;compiling&#32;for&#32;Windows&#32;and&#32;you&#32;wish&#32;to&#32;use&#32;Unicode&#32;filenames,&#32;compile</emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;with</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBIW_WINDOWS_UTF8</emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;and&#32;pass&#32;utf8-encoded&#32;filenames.&#32;Call&#32;stbiw_convert_wchar_to_utf8&#32;to&#32;convert</emphasis>
41 <emphasis role="comment">&#32;&#32;&#32;Windows&#32;wchar_t&#32;filenames&#32;to&#32;utf8.</emphasis>
42 <emphasis role="comment"></emphasis>
43 <emphasis role="comment">USAGE:</emphasis>
44 <emphasis role="comment"></emphasis>
45 <emphasis role="comment">&#32;&#32;&#32;There&#32;are&#32;five&#32;functions,&#32;one&#32;for&#32;each&#32;image&#32;file&#32;format:</emphasis>
46 <emphasis role="comment"></emphasis>
47 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_png(char&#32;const&#32;*filename,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;*data,&#32;int&#32;stride_in_bytes);</emphasis>
48 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_bmp(char&#32;const&#32;*filename,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;*data);</emphasis>
49 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_tga(char&#32;const&#32;*filename,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;*data);</emphasis>
50 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_jpg(char&#32;const&#32;*filename,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;*data,&#32;int&#32;quality);</emphasis>
51 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_hdr(char&#32;const&#32;*filename,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;float&#32;*data);</emphasis>
52 <emphasis role="comment"></emphasis>
53 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;void&#32;stbi_flip_vertically_on_write(int&#32;flag);&#32;//&#32;flag&#32;is&#32;non-zero&#32;to&#32;flip&#32;data&#32;vertically</emphasis>
54 <emphasis role="comment"></emphasis>
55 <emphasis role="comment">&#32;&#32;&#32;There&#32;are&#32;also&#32;five&#32;equivalent&#32;functions&#32;that&#32;use&#32;an&#32;arbitrary&#32;write&#32;function.&#32;You&#32;are</emphasis>
56 <emphasis role="comment">&#32;&#32;&#32;expected&#32;to&#32;open/close&#32;your&#32;file-equivalent&#32;before&#32;and&#32;after&#32;calling&#32;these:</emphasis>
57 <emphasis role="comment"></emphasis>
58 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_png_to_func(stbi_write_func&#32;*func,&#32;void&#32;*context,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;&#32;*data,&#32;int&#32;stride_in_bytes);</emphasis>
59 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_bmp_to_func(stbi_write_func&#32;*func,&#32;void&#32;*context,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;&#32;*data);</emphasis>
60 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_tga_to_func(stbi_write_func&#32;*func,&#32;void&#32;*context,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;void&#32;&#32;*data);</emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_hdr_to_func(stbi_write_func&#32;*func,&#32;void&#32;*context,&#32;int&#32;w,&#32;int&#32;h,&#32;int&#32;comp,&#32;const&#32;float&#32;*data);</emphasis>
62 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_jpg_to_func(stbi_write_func&#32;*func,&#32;void&#32;*context,&#32;int&#32;x,&#32;int&#32;y,&#32;int&#32;comp,&#32;const&#32;void&#32;*data,&#32;int&#32;quality);</emphasis>
63 <emphasis role="comment"></emphasis>
64 <emphasis role="comment">&#32;&#32;&#32;where&#32;the&#32;callback&#32;is:</emphasis>
65 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;void&#32;stbi_write_func(void&#32;*context,&#32;void&#32;*data,&#32;int&#32;size);</emphasis>
66 <emphasis role="comment"></emphasis>
67 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;configure&#32;it&#32;with&#32;these&#32;global&#32;variables:</emphasis>
68 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_tga_with_rle;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;defaults&#32;to&#32;true;&#32;set&#32;to&#32;0&#32;to&#32;disable&#32;RLE</emphasis>
69 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_png_compression_level;&#32;&#32;&#32;&#32;//&#32;defaults&#32;to&#32;8;&#32;set&#32;to&#32;higher&#32;for&#32;more&#32;compression</emphasis>
70 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;int&#32;stbi_write_force_png_filter;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;defaults&#32;to&#32;-1;&#32;set&#32;to&#32;0..5&#32;to&#32;force&#32;a&#32;filter&#32;mode</emphasis>
71 <emphasis role="comment"></emphasis>
72 <emphasis role="comment"></emphasis>
73 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;define&#32;STBI_WRITE_NO_STDIO&#32;to&#32;disable&#32;the&#32;file&#32;variant&#32;of&#32;these</emphasis>
74 <emphasis role="comment">&#32;&#32;&#32;functions,&#32;so&#32;the&#32;library&#32;will&#32;not&#32;use&#32;stdio.h&#32;at&#32;all.&#32;However,&#32;this&#32;will</emphasis>
75 <emphasis role="comment">&#32;&#32;&#32;also&#32;disable&#32;HDR&#32;writing,&#32;because&#32;it&#32;requires&#32;stdio&#32;for&#32;formatted&#32;output.</emphasis>
76 <emphasis role="comment"></emphasis>
77 <emphasis role="comment">&#32;&#32;&#32;Each&#32;function&#32;returns&#32;0&#32;on&#32;failure&#32;and&#32;non-0&#32;on&#32;success.</emphasis>
78 <emphasis role="comment"></emphasis>
79 <emphasis role="comment">&#32;&#32;&#32;The&#32;functions&#32;create&#32;an&#32;image&#32;file&#32;defined&#32;by&#32;the&#32;parameters.&#32;The&#32;image</emphasis>
80 <emphasis role="comment">&#32;&#32;&#32;is&#32;a&#32;rectangle&#32;of&#32;pixels&#32;stored&#32;from&#32;left-to-right,&#32;top-to-bottom.</emphasis>
81 <emphasis role="comment">&#32;&#32;&#32;Each&#32;pixel&#32;contains&#32;&apos;comp&apos;&#32;channels&#32;of&#32;data&#32;stored&#32;interleaved&#32;with&#32;8-bits</emphasis>
82 <emphasis role="comment">&#32;&#32;&#32;per&#32;channel,&#32;in&#32;the&#32;following&#32;order:&#32;1=Y,&#32;2=YA,&#32;3=RGB,&#32;4=RGBA.&#32;(Y&#32;is</emphasis>
83 <emphasis role="comment">&#32;&#32;&#32;monochrome&#32;color.)&#32;The&#32;rectangle&#32;is&#32;&apos;w&apos;&#32;pixels&#32;wide&#32;and&#32;&apos;h&apos;&#32;pixels&#32;tall.</emphasis>
84 <emphasis role="comment">&#32;&#32;&#32;The&#32;*data&#32;pointer&#32;points&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;top-left-most&#32;pixel.</emphasis>
85 <emphasis role="comment">&#32;&#32;&#32;For&#32;PNG,&#32;&quot;stride_in_bytes&quot;&#32;is&#32;the&#32;distance&#32;in&#32;bytes&#32;from&#32;the&#32;first&#32;byte&#32;of</emphasis>
86 <emphasis role="comment">&#32;&#32;&#32;a&#32;row&#32;of&#32;pixels&#32;to&#32;the&#32;first&#32;byte&#32;of&#32;the&#32;next&#32;row&#32;of&#32;pixels.</emphasis>
87 <emphasis role="comment"></emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;PNG&#32;creates&#32;output&#32;files&#32;with&#32;the&#32;same&#32;number&#32;of&#32;components&#32;as&#32;the&#32;input.</emphasis>
89 <emphasis role="comment">&#32;&#32;&#32;The&#32;BMP&#32;format&#32;expands&#32;Y&#32;to&#32;RGB&#32;in&#32;the&#32;file&#32;format&#32;and&#32;does&#32;not</emphasis>
90 <emphasis role="comment">&#32;&#32;&#32;output&#32;alpha.</emphasis>
91 <emphasis role="comment"></emphasis>
92 <emphasis role="comment">&#32;&#32;&#32;PNG&#32;supports&#32;writing&#32;rectangles&#32;of&#32;data&#32;even&#32;when&#32;the&#32;bytes&#32;storing&#32;rows&#32;of</emphasis>
93 <emphasis role="comment">&#32;&#32;&#32;data&#32;are&#32;not&#32;consecutive&#32;in&#32;memory&#32;(e.g.&#32;sub-rectangles&#32;of&#32;a&#32;larger&#32;image),</emphasis>
94 <emphasis role="comment">&#32;&#32;&#32;by&#32;supplying&#32;the&#32;stride&#32;between&#32;the&#32;beginning&#32;of&#32;adjacent&#32;rows.&#32;The&#32;other</emphasis>
95 <emphasis role="comment">&#32;&#32;&#32;formats&#32;do&#32;not.&#32;(Thus&#32;you&#32;cannot&#32;write&#32;a&#32;native-format&#32;BMP&#32;through&#32;the&#32;BMP</emphasis>
96 <emphasis role="comment">&#32;&#32;&#32;writer,&#32;both&#32;because&#32;it&#32;is&#32;in&#32;BGR&#32;order&#32;and&#32;because&#32;it&#32;may&#32;have&#32;padding</emphasis>
97 <emphasis role="comment">&#32;&#32;&#32;at&#32;the&#32;end&#32;of&#32;the&#32;line.)</emphasis>
98 <emphasis role="comment"></emphasis>
99 <emphasis role="comment">&#32;&#32;&#32;PNG&#32;allows&#32;you&#32;to&#32;set&#32;the&#32;deflate&#32;compression&#32;level&#32;by&#32;setting&#32;the&#32;global</emphasis>
100 <emphasis role="comment">&#32;&#32;&#32;variable&#32;&apos;stbi_write_png_compression_level&apos;&#32;(it&#32;defaults&#32;to&#32;8).</emphasis>
101 <emphasis role="comment"></emphasis>
102 <emphasis role="comment">&#32;&#32;&#32;HDR&#32;expects&#32;linear&#32;float&#32;data.&#32;Since&#32;the&#32;format&#32;is&#32;always&#32;32-bit&#32;rgb(e)</emphasis>
103 <emphasis role="comment">&#32;&#32;&#32;data,&#32;alpha&#32;(if&#32;provided)&#32;is&#32;discarded,&#32;and&#32;for&#32;monochrome&#32;data&#32;it&#32;is</emphasis>
104 <emphasis role="comment">&#32;&#32;&#32;replicated&#32;across&#32;all&#32;three&#32;channels.</emphasis>
105 <emphasis role="comment"></emphasis>
106 <emphasis role="comment">&#32;&#32;&#32;TGA&#32;supports&#32;RLE&#32;or&#32;non-RLE&#32;compressed&#32;data.&#32;To&#32;use&#32;non-RLE-compressed</emphasis>
107 <emphasis role="comment">&#32;&#32;&#32;data,&#32;set&#32;the&#32;global&#32;variable&#32;&apos;stbi_write_tga_with_rle&apos;&#32;to&#32;0.</emphasis>
108 <emphasis role="comment"></emphasis>
109 <emphasis role="comment">&#32;&#32;&#32;JPEG&#32;does&#32;ignore&#32;alpha&#32;channels&#32;in&#32;input&#32;data;&#32;quality&#32;is&#32;between&#32;1&#32;and&#32;100.</emphasis>
110 <emphasis role="comment">&#32;&#32;&#32;Higher&#32;quality&#32;looks&#32;better&#32;but&#32;results&#32;in&#32;a&#32;bigger&#32;image.</emphasis>
111 <emphasis role="comment">&#32;&#32;&#32;JPEG&#32;baseline&#32;(no&#32;JPEG&#32;progressive).</emphasis>
112 <emphasis role="comment"></emphasis>
113 <emphasis role="comment">CREDITS:</emphasis>
114 <emphasis role="comment"></emphasis>
115 <emphasis role="comment"></emphasis>
116 <emphasis role="comment">&#32;&#32;&#32;Sean&#32;Barrett&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;PNG/BMP/TGA</emphasis>
117 <emphasis role="comment">&#32;&#32;&#32;Baldur&#32;Karlsson&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;HDR</emphasis>
118 <emphasis role="comment">&#32;&#32;&#32;Jean-Sebastien&#32;Guay&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;TGA&#32;monochrome</emphasis>
119 <emphasis role="comment">&#32;&#32;&#32;Tim&#32;Kelsey&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;misc&#32;enhancements</emphasis>
120 <emphasis role="comment">&#32;&#32;&#32;Alan&#32;Hickman&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;TGA&#32;RLE</emphasis>
121 <emphasis role="comment">&#32;&#32;&#32;Emmanuel&#32;Julien&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;initial&#32;file&#32;IO&#32;callback&#32;implementation</emphasis>
122 <emphasis role="comment">&#32;&#32;&#32;Jon&#32;Olick&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;original&#32;jo_jpeg.cpp&#32;code</emphasis>
123 <emphasis role="comment">&#32;&#32;&#32;Daniel&#32;Gibson&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;integrate&#32;JPEG,&#32;allow&#32;external&#32;zlib</emphasis>
124 <emphasis role="comment">&#32;&#32;&#32;Aarni&#32;Koskela&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;&#32;&#32;allow&#32;choosing&#32;PNG&#32;filter</emphasis>
125 <emphasis role="comment"></emphasis>
126 <emphasis role="comment">&#32;&#32;&#32;bugfixes:</emphasis>
127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;github:Chribba</emphasis>
128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Guillaume&#32;Chereau</emphasis>
129 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;github:jry2</emphasis>
130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;github:romigrou</emphasis>
131 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Sergio&#32;Gonzalez</emphasis>
132 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Jonas&#32;Karlsson</emphasis>
133 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Filip&#32;Wasil</emphasis>
134 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Thatcher&#32;Ulrich</emphasis>
135 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;github:poppolopoppo</emphasis>
136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Patrick&#32;Boettcher</emphasis>
137 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;github:xeekworx</emphasis>
138 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Cap&#32;Petschulat</emphasis>
139 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Simon&#32;Rodriguez</emphasis>
140 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Ivan&#32;Tikhonov</emphasis>
141 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;github:ignotion</emphasis>
142 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Adam&#32;Schackart</emphasis>
143 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Andrew&#32;Kensler</emphasis>
144 <emphasis role="comment"></emphasis>
145 <emphasis role="comment">LICENSE</emphasis>
146 <emphasis role="comment"></emphasis>
147 <emphasis role="comment">&#32;&#32;See&#32;end&#32;of&#32;file&#32;for&#32;license&#32;information.</emphasis>
148 <emphasis role="comment"></emphasis>
149 <emphasis role="comment">*/</emphasis>
150 
151 <emphasis role="preprocessor">#ifndef&#32;INCLUDE_STB_IMAGE_WRITE_H</emphasis>
152 <emphasis role="preprocessor">#define&#32;INCLUDE_STB_IMAGE_WRITE_H</emphasis>
153 
154 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
155 
156 <emphasis role="comment">//&#32;if&#32;STB_IMAGE_WRITE_STATIC&#32;causes&#32;problems,&#32;try&#32;defining&#32;STBIWDEF&#32;to&#32;&apos;inline&apos;&#32;or&#32;&apos;static&#32;inline&apos;</emphasis>
157 <emphasis role="preprocessor">#ifndef&#32;STBIWDEF</emphasis>
158 <emphasis role="preprocessor">#ifdef&#32;STB_IMAGE_WRITE_STATIC</emphasis>
159 <emphasis role="preprocessor">#define&#32;STBIWDEF&#32;&#32;static</emphasis>
160 <emphasis role="preprocessor">#else</emphasis>
161 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
162 <emphasis role="preprocessor">#define&#32;STBIWDEF&#32;&#32;extern&#32;&quot;C&quot;</emphasis>
163 <emphasis role="preprocessor">#else</emphasis>
164 <emphasis role="preprocessor">#define&#32;STBIWDEF&#32;&#32;extern</emphasis>
165 <emphasis role="preprocessor">#endif</emphasis>
166 <emphasis role="preprocessor">#endif</emphasis>
167 <emphasis role="preprocessor">#endif</emphasis>
168 
169 <emphasis role="preprocessor">#ifndef&#32;STB_IMAGE_WRITE_STATIC&#32;&#32;</emphasis><emphasis role="comment">//&#32;C++&#32;forbids&#32;static&#32;forward&#32;declarations</emphasis>
170 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1af4ce66fb7d4d97110036bf6e92e196bd">stbi_write_tga_with_rle</link>;
171 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a599b900a32e68e29c820d9755d0eea28">stbi_write_png_compression_level</link>;
172 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5bfaf6779e88c4122d2b1fdf3723378e">stbi_write_force_png_filter</link>;
173 <emphasis role="preprocessor">#endif</emphasis>
174 
175 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
176 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a9c03e5171f6aea47fde6dafcf3249ccf">stbi_write_png</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_in_bytes);
177 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a4f63ec842984e5db3edf2da89f16038e">stbi_write_bmp</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
178 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1ab7a84427c6d7e894090fbeae3bc8f6da">stbi_write_tga</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
179 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a21f22be0194761e08b682ed543ef6161">stbi_write_hdr</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
180 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a41048e8f918179d2788284ef9cc2590c">stbi_write_jpg</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality);
181 
182 <emphasis role="preprocessor">#ifdef&#32;STBIW_WINDOWS_UTF8</emphasis>
183 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw_convert_wchar_to_utf8(<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bufferlen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;input);
184 <emphasis role="preprocessor">#endif</emphasis>
185 <emphasis role="preprocessor">#endif</emphasis>
186 
187 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>(<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);
188 
189 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a72dcd18698d64c92082449912c39a4e5">stbi_write_png_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_in_bytes);
190 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1aca9573665994b2244a6a045b2a1df1ea">stbi_write_bmp_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
191 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5e5c6483c1d45a65fe208f52937cd315">stbi_write_tga_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
192 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1ac9214f775162b61a3503c76875966c11">stbi_write_hdr_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
193 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1afbe60a9afbcbd6d54f98f72afd46a676">stbi_write_jpg_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality);
194 
195 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5c41a5d16dc665edd2489b982ba29b85">stbi_flip_vertically_on_write</link>(<emphasis role="keywordtype">int</emphasis>&#32;flip_boolean);
196 
197 <emphasis role="preprocessor">#endif</emphasis><emphasis role="comment">//INCLUDE_STB_IMAGE_WRITE_H</emphasis>
198 
199 <emphasis role="preprocessor">#ifdef&#32;STB_IMAGE_WRITE_IMPLEMENTATION</emphasis>
200 
201 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
202 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;_CRT_SECURE_NO_WARNINGS</emphasis>
203 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;_CRT_SECURE_NO_WARNINGS</emphasis>
204 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
205 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;_CRT_NONSTDC_NO_DEPRECATE</emphasis>
206 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;_CRT_NONSTDC_NO_DEPRECATE</emphasis>
207 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
208 <emphasis role="preprocessor">#endif</emphasis>
209 
210 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
211 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
212 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_WRITE_NO_STDIO</emphasis>
213 
214 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
215 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
216 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
217 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
218 
219 <emphasis role="preprocessor">#if&#32;defined(STBIW_MALLOC)&#32;&amp;&amp;&#32;defined(STBIW_FREE)&#32;&amp;&amp;&#32;(defined(STBIW_REALLOC)&#32;||&#32;defined(STBIW_REALLOC_SIZED))</emphasis>
220 <emphasis role="comment">//&#32;ok</emphasis>
221 <emphasis role="preprocessor">#elif&#32;!defined(STBIW_MALLOC)&#32;&amp;&amp;&#32;!defined(STBIW_FREE)&#32;&amp;&amp;&#32;!defined(STBIW_REALLOC)&#32;&amp;&amp;&#32;!defined(STBIW_REALLOC_SIZED)</emphasis>
222 <emphasis role="comment">//&#32;ok</emphasis>
223 <emphasis role="preprocessor">#else</emphasis>
224 <emphasis role="preprocessor">#error&#32;&quot;Must&#32;define&#32;all&#32;or&#32;none&#32;of&#32;STBIW_MALLOC,&#32;STBIW_FREE,&#32;and&#32;STBIW_REALLOC&#32;(or&#32;STBIW_REALLOC_SIZED).&quot;</emphasis>
225 <emphasis role="preprocessor">#endif</emphasis>
226 
227 <emphasis role="preprocessor">#ifndef&#32;STBIW_MALLOC</emphasis>
228 <emphasis role="preprocessor">#define&#32;STBIW_MALLOC(sz)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;malloc(sz)</emphasis>
229 <emphasis role="preprocessor">#define&#32;STBIW_REALLOC(p,newsz)&#32;&#32;realloc(p,newsz)</emphasis>
230 <emphasis role="preprocessor">#define&#32;STBIW_FREE(p)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(p)</emphasis>
231 <emphasis role="preprocessor">#endif</emphasis>
232 
233 <emphasis role="preprocessor">#ifndef&#32;STBIW_REALLOC_SIZED</emphasis>
234 <emphasis role="preprocessor">#define&#32;STBIW_REALLOC_SIZED(p,oldsz,newsz)&#32;STBIW_REALLOC(p,newsz)</emphasis>
235 <emphasis role="preprocessor">#endif</emphasis>
236 
237 
238 <emphasis role="preprocessor">#ifndef&#32;STBIW_MEMMOVE</emphasis>
239 <emphasis role="preprocessor">#define&#32;STBIW_MEMMOVE(a,b,sz)&#32;memmove(a,b,sz)</emphasis>
240 <emphasis role="preprocessor">#endif</emphasis>
241 
242 
243 <emphasis role="preprocessor">#ifndef&#32;STBIW_ASSERT</emphasis>
244 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
245 <emphasis role="preprocessor">#define&#32;STBIW_ASSERT(x)&#32;assert(x)</emphasis>
246 <emphasis role="preprocessor">#endif</emphasis>
247 
248 <emphasis role="preprocessor">#define&#32;STBIW_UCHAR(x)&#32;(unsigned&#32;char)&#32;((x)&#32;&amp;&#32;0xff)</emphasis>
249 
250 <emphasis role="preprocessor">#ifdef&#32;STB_IMAGE_WRITE_STATIC</emphasis>
251 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a599b900a32e68e29c820d9755d0eea28">stbi_write_png_compression_level</link>&#32;=&#32;8;
252 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1af4ce66fb7d4d97110036bf6e92e196bd">stbi_write_tga_with_rle</link>&#32;=&#32;1;
253 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5bfaf6779e88c4122d2b1fdf3723378e">stbi_write_force_png_filter</link>&#32;=&#32;-1;
254 <emphasis role="preprocessor">#else</emphasis>
255 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a599b900a32e68e29c820d9755d0eea28">stbi_write_png_compression_level</link>&#32;=&#32;8;
256 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1af4ce66fb7d4d97110036bf6e92e196bd">stbi_write_tga_with_rle</link>&#32;=&#32;1;
257 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5bfaf6779e88c4122d2b1fdf3723378e">stbi_write_force_png_filter</link>&#32;=&#32;-1;
258 <emphasis role="preprocessor">#endif</emphasis>
259 
260 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__flip_vertically_on_write&#32;=&#32;0;
261 
262 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5c41a5d16dc665edd2489b982ba29b85">stbi_flip_vertically_on_write</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag)
263 {
264 &#32;&#32;&#32;stbi__flip_vertically_on_write&#32;=&#32;flag;
265 }
266 
267 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
268 {
269 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>;
270 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context;
271 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[64];
272 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;buf_used;
273 }&#32;stbi__write_context;
274 
275 <emphasis role="comment">//&#32;initialize&#32;a&#32;callback-based&#32;context</emphasis>
276 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__start_write_callbacks(stbi__write_context&#32;*s,&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*c,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context)
277 {
278 &#32;&#32;&#32;s-&gt;func&#32;&#32;&#32;&#32;=&#32;c;
279 &#32;&#32;&#32;s-&gt;context&#32;=&#32;context;
280 }
281 
282 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
283 
284 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__stdio_write(<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
285 {
286 &#32;&#32;&#32;fwrite(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,1,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,(FILE*)&#32;context);
287 }
288 
289 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(STBIW_WINDOWS_UTF8)</emphasis>
290 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
291 <emphasis role="preprocessor">#define&#32;STBIW_EXTERN&#32;extern&#32;&quot;C&quot;</emphasis>
292 <emphasis role="preprocessor">#else</emphasis>
293 <emphasis role="preprocessor">#define&#32;STBIW_EXTERN&#32;extern</emphasis>
294 <emphasis role="preprocessor">#endif</emphasis>
295 STBIW_EXTERN&#32;__declspec(dllimport)&#32;<emphasis role="keywordtype">int</emphasis>&#32;__stdcall&#32;MultiByteToWideChar(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;cp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cbmb,&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;*widestr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cchwide);
296 STBIW_EXTERN&#32;__declspec(dllimport)&#32;<emphasis role="keywordtype">int</emphasis>&#32;__stdcall&#32;WideCharToMultiByte(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;cp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;*widestr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cchwide,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cbmb,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*defchar,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*used_default);
297 
298 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw_convert_wchar_to_utf8(<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bufferlen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;input)
299 {
300 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;WideCharToMultiByte(65001&#32;<emphasis role="comment">/*&#32;UTF8&#32;*/</emphasis>,&#32;0,&#32;input,&#32;-1,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;bufferlen,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
301 }
302 <emphasis role="preprocessor">#endif</emphasis>
303 
304 <emphasis role="keyword">static</emphasis>&#32;FILE&#32;*stbiw__fopen(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)
305 {
306 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
307 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(STBIW_WINDOWS_UTF8)</emphasis>
308 &#32;&#32;&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;wMode[64];
309 &#32;&#32;&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;wFilename[1024];
310 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;==&#32;MultiByteToWideChar(65001&#32;<emphasis role="comment">/*&#32;UTF8&#32;*/</emphasis>,&#32;0,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;-1,&#32;wFilename,&#32;<emphasis role="keyword">sizeof</emphasis>(wFilename)/<emphasis role="keyword">sizeof</emphasis>(*wFilename)))
311 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
312 
313 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;==&#32;MultiByteToWideChar(65001&#32;<emphasis role="comment">/*&#32;UTF8&#32;*/</emphasis>,&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>,&#32;-1,&#32;wMode,&#32;<emphasis role="keyword">sizeof</emphasis>(wMode)/<emphasis role="keyword">sizeof</emphasis>(*wMode)))
314 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
315 
316 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
317 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;!=&#32;_wfopen_s(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;wFilename,&#32;wMode))
318 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;0;
319 <emphasis role="preprocessor">#else</emphasis>
320 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;_wfopen(wFilename,&#32;wMode);
321 <emphasis role="preprocessor">#endif</emphasis>
322 
323 <emphasis role="preprocessor">#elif&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
324 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;!=&#32;fopen_s(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>))
325 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>=0;
326 <emphasis role="preprocessor">#else</emphasis>
327 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>);
328 <emphasis role="preprocessor">#endif</emphasis>
329 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
330 }
331 
332 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__start_write_file(stbi__write_context&#32;*s,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>)
333 {
334 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbiw__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>);
335 &#32;&#32;&#32;stbi__start_write_callbacks(s,&#32;stbi__stdio_write,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
336 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
337 }
338 
339 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__end_write_file(stbi__write_context&#32;*s)
340 {
341 &#32;&#32;&#32;fclose((FILE&#32;*)s-&gt;context);
342 }
343 
344 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!STBI_WRITE_NO_STDIO</emphasis>
345 
346 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw_uint32;
347 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stb_image_write_test[<emphasis role="keyword">sizeof</emphasis>(stbiw_uint32)==4&#32;?&#32;1&#32;:&#32;-1];
348 
349 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__writefv(stbi__write_context&#32;*s,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fmt,&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
350 {
351 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*fmt)&#32;{
352 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(*fmt++)&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>:&#32;{&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2include_2stdarg_8h_1a9cfd655f1203c9a345ddd90446f0bcee">va_arg</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<emphasis role="keywordtype">int</emphasis>));
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,1);
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;}
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>:&#32;{&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a9cfd655f1203c9a345ddd90446f0bcee">va_arg</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,<emphasis role="keywordtype">int</emphasis>);
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[2];
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[0]&#32;=&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[1]&#32;=&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&gt;&gt;8);
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,2);
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;}
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;4&apos;</emphasis>:&#32;{&#32;stbiw_uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a9cfd655f1203c9a345ddd90446f0bcee">va_arg</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,<emphasis role="keywordtype">int</emphasis>);
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[4];
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[0]=STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[1]=STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&gt;&gt;8);
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[2]=STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&gt;&gt;16);
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[3]=STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&gt;&gt;24);
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,4);
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;}
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBIW_ASSERT(0);
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
374 &#32;&#32;&#32;&#32;&#32;&#32;}
375 &#32;&#32;&#32;}
376 }
377 
378 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__writef(stbi__write_context&#32;*s,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fmt,&#32;...)
379 {
380 &#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
381 &#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1aa0628ab596c3d7e78f5e08c2d98e24da">va_start</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;fmt);
382 &#32;&#32;&#32;stbiw__writefv(s,&#32;fmt,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
383 &#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a823b205416e9129825841b74c3bf8484">va_end</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
384 }
385 
386 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write_flush(stbi__write_context&#32;*s)
387 {
388 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;buf_used)&#32;{
389 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;&amp;s-&gt;buffer,&#32;s-&gt;buf_used);
390 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;buf_used&#32;=&#32;0;
391 &#32;&#32;&#32;}
392 }
393 
394 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__putc(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;c)
395 {
396 &#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;&amp;c,&#32;1);
397 }
398 
399 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write1(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
400 {
401 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">size_t</emphasis>)s-&gt;buf_used&#32;+&#32;1&#32;&gt;&#32;<emphasis role="keyword">sizeof</emphasis>(s-&gt;buffer))
402 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_flush(s);
403 &#32;&#32;&#32;s-&gt;buffer[s-&gt;buf_used++]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
404 }
405 
406 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write3(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;c)
407 {
408 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n;
409 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">size_t</emphasis>)s-&gt;buf_used&#32;+&#32;3&#32;&gt;&#32;<emphasis role="keyword">sizeof</emphasis>(s-&gt;buffer))
410 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_flush(s);
411 &#32;&#32;&#32;n&#32;=&#32;s-&gt;buf_used;
412 &#32;&#32;&#32;s-&gt;buf_used&#32;=&#32;n+3;
413 &#32;&#32;&#32;s-&gt;buffer[n+0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
414 &#32;&#32;&#32;s-&gt;buffer[n+1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
415 &#32;&#32;&#32;s-&gt;buffer[n+2]&#32;=&#32;c;
416 }
417 
418 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write_pixel(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;rgb_dir,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;write_alpha,&#32;<emphasis role="keywordtype">int</emphasis>&#32;expand_mono,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*d)
419 {
420 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;bg[3]&#32;=&#32;{&#32;255,&#32;0,&#32;255},&#32;px[3];
421 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
422 
423 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(write_alpha&#32;&lt;&#32;0)
424 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write1(s,&#32;d[<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;-&#32;1]);
425 
426 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;{
427 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;<emphasis role="comment">//&#32;2&#32;pixels&#32;=&#32;mono&#32;+&#32;alpha,&#32;alpha&#32;is&#32;written&#32;separately,&#32;so&#32;same&#32;as&#32;1-channel&#32;case</emphasis>
428 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(expand_mono)
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write3(s,&#32;d[0],&#32;d[0],&#32;d[0]);&#32;<emphasis role="comment">//&#32;monochrome&#32;bmp</emphasis>
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write1(s,&#32;d[0]);&#32;&#32;<emphasis role="comment">//&#32;monochrome&#32;TGA</emphasis>
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
434 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!write_alpha)&#32;{
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;composite&#32;against&#32;pink&#32;background</emphasis>
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;3;&#32;++k)
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;px[k]&#32;=&#32;bg[k]&#32;+&#32;((d[k]&#32;-&#32;bg[k])&#32;*&#32;d[3])&#32;/&#32;255;
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write3(s,&#32;px[1&#32;-&#32;rgb_dir],&#32;px[1],&#32;px[1&#32;+&#32;rgb_dir]);
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;FALLTHROUGH&#32;*/</emphasis>
443 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write3(s,&#32;d[1&#32;-&#32;rgb_dir],&#32;d[1],&#32;d[1&#32;+&#32;rgb_dir]);
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
446 &#32;&#32;&#32;}
447 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(write_alpha&#32;&gt;&#32;0)
448 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write1(s,&#32;d[<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;-&#32;1]);
449 }
450 
451 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write_pixels(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;rgb_dir,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vdir,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;write_alpha,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scanline_pad,&#32;<emphasis role="keywordtype">int</emphasis>&#32;expand_mono)
452 {
453 &#32;&#32;&#32;stbiw_uint32&#32;<link linkend="_group__gtc__constants_1ga788f5a421fc0f40a1296ebc094cbaa8a">zero</link>&#32;=&#32;0;
454 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,&#32;j_end;
455 
456 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;=&#32;0)
457 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
458 
459 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__flip_vertically_on_write)
460 &#32;&#32;&#32;&#32;&#32;&#32;vdir&#32;*=&#32;-1;
461 
462 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(vdir&#32;&lt;&#32;0)&#32;{
463 &#32;&#32;&#32;&#32;&#32;&#32;j_end&#32;=&#32;-1;&#32;j&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>-1;
464 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
465 &#32;&#32;&#32;&#32;&#32;&#32;j_end&#32;=&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;j&#32;=&#32;0;
466 &#32;&#32;&#32;}
467 
468 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;j&#32;!=&#32;j_end;&#32;j&#32;+=&#32;vdir)&#32;{
469 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;++i)&#32;{
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*d&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;(j*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+i)*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_pixel(s,&#32;rgb_dir,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;write_alpha,&#32;expand_mono,&#32;d);
472 &#32;&#32;&#32;&#32;&#32;&#32;}
473 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_flush(s);
474 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;&amp;zero,&#32;scanline_pad);
475 &#32;&#32;&#32;}
476 }
477 
478 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw__outfile(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;rgb_dir,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vdir,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;expand_mono,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pad,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fmt,&#32;...)
479 {
480 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;0)&#32;{
481 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
482 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
483 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a8c1b94dabde2c11f430bb83e37bdb0a1">va_list</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
484 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1aa0628ab596c3d7e78f5e08c2d98e24da">va_start</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;fmt);
485 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__writefv(s,&#32;fmt,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
486 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2stdarg_8h_1a823b205416e9129825841b74c3bf8484">va_end</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
487 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_pixels(s,rgb_dir,vdir,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>,pad,&#32;expand_mono);
488 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
489 &#32;&#32;&#32;}
490 }
491 
492 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi_write_bmp_core(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
493 {
494 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;!=&#32;4)&#32;{
495 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;write&#32;RGB&#32;bitmap</emphasis>
496 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pad&#32;=&#32;(-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*3)&#32;&amp;&#32;3;
497 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbiw__outfile(s,-1,-1,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,1,(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,0,pad,
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;11&#32;4&#32;22&#32;4&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;4&#32;44&#32;22&#32;444444&quot;</emphasis>,
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>,&#32;14+40+(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*3+pad)*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;0,0,&#32;14+40,&#32;&#32;<emphasis role="comment">//&#32;file&#32;header</emphasis>
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;40,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;1,24,&#32;0,0,0,0,0,0);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bitmap&#32;header</emphasis>
501 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
502 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RGBA&#32;bitmaps&#32;need&#32;a&#32;v4&#32;header</emphasis>
503 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;use&#32;BI_BITFIELDS&#32;mode&#32;with&#32;32bpp&#32;and&#32;alpha&#32;mask</emphasis>
504 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(straight&#32;BI_RGB&#32;with&#32;alpha&#32;mask&#32;doesn&apos;t&#32;work&#32;in&#32;most&#32;readers)</emphasis>
505 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbiw__outfile(s,-1,-1,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,1,(<emphasis role="keywordtype">void</emphasis>&#32;*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,1,0,
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;11&#32;4&#32;22&#32;4&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;4&#32;44&#32;22&#32;444444&#32;4444&#32;4&#32;444&#32;444&#32;444&#32;444&quot;</emphasis>,
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>,&#32;14+108+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*4,&#32;0,&#32;0,&#32;14+108,&#32;<emphasis role="comment">//&#32;file&#32;header</emphasis>
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;108,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;1,32,&#32;3,0,0,0,0,0,&#32;0xff0000,0xff00,0xff,0xff000000u,&#32;0,&#32;0,0,0,&#32;0,0,0,&#32;0,0,0,&#32;0,0,0);&#32;<emphasis role="comment">//&#32;bitmap&#32;V4&#32;header</emphasis>
509 &#32;&#32;&#32;}
510 }
511 
512 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1aca9573665994b2244a6a045b2a1df1ea">stbi_write_bmp_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
513 {
514 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
515 &#32;&#32;&#32;stbi__start_write_callbacks(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;context);
516 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_write_bmp_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
517 }
518 
519 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
520 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a4f63ec842984e5db3edf2da89f16038e">stbi_write_bmp</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
521 {
522 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
523 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__start_write_file(&amp;s,<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
524 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi_write_bmp_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
525 &#32;&#32;&#32;&#32;&#32;&#32;stbi__end_write_file(&amp;s);
526 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
527 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
528 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
529 }
530 <emphasis role="preprocessor">#endif&#32;</emphasis>
531 
532 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi_write_tga_core(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
533 {
534 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;has_alpha&#32;=&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;==&#32;2&#32;||&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;==&#32;4);
535 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;colorbytes&#32;=&#32;has_alpha&#32;?&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>-1&#32;:&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
536 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>&#32;=&#32;colorbytes&#32;&lt;&#32;2&#32;?&#32;3&#32;:&#32;2;&#32;<emphasis role="comment">//&#32;3&#32;color&#32;channels&#32;(RGB/RGBA)&#32;=&#32;2,&#32;1&#32;color&#32;channel&#32;(Y/YA)&#32;=&#32;3</emphasis>
537 
538 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;0)
539 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
540 
541 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2stb__image__write_8h_1af4ce66fb7d4d97110036bf6e92e196bd">stbi_write_tga_with_rle</link>)&#32;{
542 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbiw__outfile(s,&#32;-1,&#32;-1,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;0,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;has_alpha,&#32;0,
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;111&#32;221&#32;2222&#32;11&quot;</emphasis>,&#32;0,&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;(colorbytes&#32;+&#32;has_alpha)&#32;*&#32;8,&#32;has_alpha&#32;*&#32;8);
544 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
545 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k;
546 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;jend,&#32;jdir;
547 
548 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__writef(s,&#32;<emphasis role="stringliteral">&quot;111&#32;221&#32;2222&#32;11&quot;</emphasis>,&#32;0,0,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3f8f226b5004bbc9a172e2bbf28ed102">format</link>+8,&#32;0,0,0,&#32;0,0,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;(colorbytes&#32;+&#32;has_alpha)&#32;*&#32;8,&#32;has_alpha&#32;*&#32;8);
549 
550 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__flip_vertically_on_write)&#32;{
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;0;
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jend&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jdir&#32;=&#32;1;
554 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>-1;
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jend&#32;=&#32;-1;
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jdir&#32;=&#32;-1;
558 &#32;&#32;&#32;&#32;&#32;&#32;}
559 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;j&#32;!=&#32;jend;&#32;j&#32;+=&#32;jdir)&#32;{
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
562 
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;i&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>&#32;=&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;+&#32;i&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;diff&#32;=&#32;1;
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;1;
567 
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;-&#32;1)&#32;{
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diff&#32;=&#32;memcmp(begin,&#32;row&#32;+&#32;(i&#32;+&#32;1)&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(diff)&#32;{
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*prev&#32;=&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>;
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;i&#32;+&#32;2;&#32;k&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&lt;&#32;128;&#32;++k)&#32;{
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memcmp(prev,&#32;row&#32;+&#32;k&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;{
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prev&#32;+=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;i&#32;+&#32;2;&#32;k&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&lt;&#32;128;&#32;++k)&#32;{
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!memcmp(begin,&#32;row&#32;+&#32;k&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;{
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
592 
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(diff)&#32;{
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;header&#32;=&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;-&#32;1);
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write1(s,&#32;header);
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;++k)&#32;{
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_pixel(s,&#32;-1,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;has_alpha,&#32;0,&#32;begin&#32;+&#32;k&#32;*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;header&#32;=&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;-&#32;129);
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write1(s,&#32;header);
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_pixel(s,&#32;-1,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;has_alpha,&#32;0,&#32;begin);
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
605 &#32;&#32;&#32;&#32;&#32;&#32;}
606 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_flush(s);
607 &#32;&#32;&#32;}
608 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
609 }
610 
611 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5e5c6483c1d45a65fe208f52937cd315">stbi_write_tga_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
612 {
613 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
614 &#32;&#32;&#32;stbi__start_write_callbacks(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;context);
615 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_write_tga_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
616 }
617 
618 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
619 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1ab7a84427c6d7e894090fbeae3bc8f6da">stbi_write_tga</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
620 {
621 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
622 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__start_write_file(&amp;s,<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
623 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi_write_tga_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
624 &#32;&#32;&#32;&#32;&#32;&#32;stbi__end_write_file(&amp;s);
625 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
626 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
627 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
628 }
629 <emphasis role="preprocessor">#endif</emphasis>
630 
631 <emphasis role="comment">//&#32;*************************************************************************************************</emphasis>
632 <emphasis role="comment">//&#32;Radiance&#32;RGBE&#32;HDR&#32;writer</emphasis>
633 <emphasis role="comment">//&#32;by&#32;Baldur&#32;Karlsson</emphasis>
634 
635 <emphasis role="preprocessor">#define&#32;stbiw__max(a,&#32;b)&#32;&#32;((a)&#32;&gt;&#32;(b)&#32;?&#32;(a)&#32;:&#32;(b))</emphasis>
636 
637 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
638 
639 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__linear_to_rgbe(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*rgbe,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*linear)
640 {
641 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;exponent;
642 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxcomp&#32;=&#32;stbiw__max(linear[0],&#32;stbiw__max(linear[1],&#32;linear[2]));
643 
644 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxcomp&#32;&lt;&#32;1e-32f)&#32;{
645 &#32;&#32;&#32;&#32;&#32;&#32;rgbe[0]&#32;=&#32;rgbe[1]&#32;=&#32;rgbe[2]&#32;=&#32;rgbe[3]&#32;=&#32;0;
646 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
647 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacenormalize">normalize</link>&#32;=&#32;(float)&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a1a63fc454f1959d87924b7cbec3a65e5">frexp</link>(maxcomp,&#32;&amp;exponent)&#32;*&#32;256.0f/maxcomp;
648 
649 &#32;&#32;&#32;&#32;&#32;&#32;rgbe[0]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(linear[0]&#32;*&#32;<link linkend="_namespacenormalize">normalize</link>);
650 &#32;&#32;&#32;&#32;&#32;&#32;rgbe[1]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(linear[1]&#32;*&#32;<link linkend="_namespacenormalize">normalize</link>);
651 &#32;&#32;&#32;&#32;&#32;&#32;rgbe[2]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(linear[2]&#32;*&#32;<link linkend="_namespacenormalize">normalize</link>);
652 &#32;&#32;&#32;&#32;&#32;&#32;rgbe[3]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(exponent&#32;+&#32;128);
653 &#32;&#32;&#32;}
654 }
655 
656 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write_run_data(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacelength">length</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;databyte)
657 {
658 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;lengthbyte&#32;=&#32;STBIW_UCHAR(<link linkend="_namespacelength">length</link>+128);
659 &#32;&#32;&#32;STBIW_ASSERT(<link linkend="_namespacelength">length</link>+128&#32;&lt;=&#32;255);
660 &#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;&amp;lengthbyte,&#32;1);
661 &#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;&amp;databyte,&#32;1);
662 }
663 
664 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write_dump_data(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacelength">length</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
665 {
666 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;lengthbyte&#32;=&#32;STBIW_UCHAR(<link linkend="_namespacelength">length</link>);
667 &#32;&#32;&#32;STBIW_ASSERT(<link linkend="_namespacelength">length</link>&#32;&lt;=&#32;128);&#32;<emphasis role="comment">//&#32;inconsistent&#32;with&#32;spec&#32;but&#32;consistent&#32;with&#32;official&#32;code</emphasis>
668 &#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;&amp;lengthbyte,&#32;1);
669 &#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="_namespacelength">length</link>);
670 }
671 
672 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__write_hdr_scanline(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncomp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*scratch,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*scanline)
673 {
674 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;scanlineheader[4]&#32;=&#32;{&#32;2,&#32;2,&#32;0,&#32;0&#32;};
675 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;rgbe[4];
676 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;linear[3];
677 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
678 
679 &#32;&#32;&#32;scanlineheader[2]&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&amp;0xff00)&gt;&gt;8;
680 &#32;&#32;&#32;scanlineheader[3]&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&amp;0x00ff);
681 
682 &#32;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;RLE&#32;for&#32;images&#32;too&#32;small&#32;or&#32;large&#32;*/</emphasis>
683 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(width&#32;&lt;&#32;8&#32;||&#32;width&#32;&gt;=&#32;32768)&#32;{
684 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>++)&#32;{
685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(ncomp)&#32;{
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:&#32;<emphasis role="comment">/*&#32;fallthrough&#32;*/</emphasis>
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;linear[2]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;2];
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linear[1]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;1];
689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linear[0]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;0];
690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linear[0]&#32;=&#32;linear[1]&#32;=&#32;linear[2]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;0];
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__linear_to_rgbe(rgbe,&#32;linear);
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;rgbe,&#32;4);
697 &#32;&#32;&#32;&#32;&#32;&#32;}
698 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
699 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
700 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;encode&#32;into&#32;scratch&#32;buffer&#32;*/</emphasis>
701 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>++)&#32;{
702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(ncomp)&#32;{
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:&#32;<emphasis role="comment">/*&#32;fallthrough&#32;*/</emphasis>
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;linear[2]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;2];
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linear[1]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;1];
706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linear[0]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;0];
707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linear[0]&#32;=&#32;linear[1]&#32;=&#32;linear[2]&#32;=&#32;scanline[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*ncomp&#32;+&#32;0];
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__linear_to_rgbe(rgbe,&#32;linear);
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*0]&#32;=&#32;rgbe[0];
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*1]&#32;=&#32;rgbe[1];
715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*2]&#32;=&#32;rgbe[2];
716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*3]&#32;=&#32;rgbe[3];
717 &#32;&#32;&#32;&#32;&#32;&#32;}
718 
719 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;scanlineheader,&#32;4);
720 
721 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RLE&#32;each&#32;component&#32;separately&#32;*/</emphasis>
722 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(c=0;&#32;c&#32;&lt;&#32;4;&#32;c++)&#32;{
723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;&amp;scratch[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*c];
724 
725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;0;
726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;{
727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;first&#32;run</emphasis>
728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>+2&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;{
730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>]&#32;==&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>+1]&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>]&#32;==&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>+2])
731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>+2&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dump&#32;up&#32;to&#32;first&#32;run</emphasis>
737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;128)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;128;
740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_dump_data(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;&amp;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]);
741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;there&apos;s&#32;a&#32;run,&#32;output&#32;it</emphasis>
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>+2&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;{&#32;<emphasis role="comment">//&#32;same&#32;test&#32;as&#32;what&#32;we&#32;break&#32;out&#32;of&#32;in&#32;search&#32;loop,&#32;so&#32;only&#32;true&#32;if&#32;we&#32;break&apos;d</emphasis>
745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;next&#32;byte&#32;after&#32;run</emphasis>
746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>]&#32;==&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>])
747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;output&#32;run&#32;up&#32;to&#32;r</emphasis>
749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;127)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;127;
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_run_data(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>]);
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
757 &#32;&#32;&#32;&#32;&#32;&#32;}
758 &#32;&#32;&#32;}
759 }
760 
761 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi_write_hdr_core(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
762 {
763 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;=&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;=&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
764 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
765 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
766 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Each&#32;component&#32;is&#32;stored&#32;separately.&#32;Allocate&#32;scratch&#32;space&#32;for&#32;full&#32;output&#32;scanline.</emphasis>
767 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*scratch&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa057770bddd62c16a21f833a81ac442e">STBIW_MALLOC</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*4);
768 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
769 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[128];
770 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;header[]&#32;=&#32;<emphasis role="stringliteral">&quot;#?RADIANCE\n#&#32;Written&#32;by&#32;stb_image_write.h\nFORMAT=32-bit_rle_rgbe\n&quot;</emphasis>;
771 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;header,&#32;<emphasis role="keyword">sizeof</emphasis>(header)-1);
772 
773 <emphasis role="preprocessor">#ifdef&#32;__STDC_LIB_EXT1__</emphasis>
774 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;sprintf_s(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>),&#32;<emphasis role="stringliteral">&quot;EXPOSURE=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.0000000000000\n\n-Y&#32;%d&#32;+X&#32;%d\n&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
775 <emphasis role="preprocessor">#else</emphasis>
776 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;sprintf(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="stringliteral">&quot;EXPOSURE=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.0000000000000\n\n-Y&#32;%d&#32;+X&#32;%d\n&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
777 <emphasis role="preprocessor">#endif</emphasis>
778 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
779 
780 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;i++)
781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__write_hdr_scanline(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;scratch,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*(stbi__flip_vertically_on_write&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>-1-i&#32;:&#32;i));
782 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(scratch);
783 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
784 &#32;&#32;&#32;}
785 }
786 
787 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1ac9214f775162b61a3503c76875966c11">stbi_write_hdr_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
788 {
789 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
790 &#32;&#32;&#32;stbi__start_write_callbacks(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;context);
791 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_write_hdr_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
792 }
793 
794 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a21f22be0194761e08b682ed543ef6161">stbi_write_hdr</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
795 {
796 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
797 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__start_write_file(&amp;s,<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
798 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi_write_hdr_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
799 &#32;&#32;&#32;&#32;&#32;&#32;stbi__end_write_file(&amp;s);
800 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
801 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
802 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
803 }
804 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_WRITE_NO_STDIO</emphasis>
805 
806 
808 <emphasis role="comment">//</emphasis>
809 <emphasis role="comment">//&#32;PNG&#32;writer</emphasis>
810 <emphasis role="comment">//</emphasis>
811 
812 <emphasis role="preprocessor">#ifndef&#32;STBIW_ZLIB_COMPRESS</emphasis>
813 <emphasis role="comment">//&#32;stretchy&#32;buffer;&#32;stbiw__sbpush()&#32;==&#32;vector&lt;&gt;::push_back()&#32;--&#32;stbiw__sbcount()&#32;==&#32;vector&lt;&gt;::size()</emphasis>
814 <emphasis role="preprocessor">#define&#32;stbiw__sbraw(a)&#32;((int&#32;*)&#32;(void&#32;*)&#32;(a)&#32;-&#32;2)</emphasis>
815 <emphasis role="preprocessor">#define&#32;stbiw__sbm(a)&#32;&#32;&#32;stbiw__sbraw(a)[0]</emphasis>
816 <emphasis role="preprocessor">#define&#32;stbiw__sbn(a)&#32;&#32;&#32;stbiw__sbraw(a)[1]</emphasis>
817 
818 <emphasis role="preprocessor">#define&#32;stbiw__sbneedgrow(a,n)&#32;&#32;((a)==0&#32;||&#32;stbiw__sbn(a)+n&#32;&gt;=&#32;stbiw__sbm(a))</emphasis>
819 <emphasis role="preprocessor">#define&#32;stbiw__sbmaybegrow(a,n)&#32;(stbiw__sbneedgrow(a,(n))&#32;?&#32;stbiw__sbgrow(a,n)&#32;:&#32;0)</emphasis>
820 <emphasis role="preprocessor">#define&#32;stbiw__sbgrow(a,n)&#32;&#32;stbiw__sbgrowf((void&#32;**)&#32;&amp;(a),&#32;(n),&#32;sizeof(*(a)))</emphasis>
821 
822 <emphasis role="preprocessor">#define&#32;stbiw__sbpush(a,&#32;v)&#32;&#32;&#32;&#32;&#32;&#32;(stbiw__sbmaybegrow(a,1),&#32;(a)[stbiw__sbn(a)++]&#32;=&#32;(v))</emphasis>
823 <emphasis role="preprocessor">#define&#32;stbiw__sbcount(a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((a)&#32;?&#32;stbiw__sbn(a)&#32;:&#32;0)</emphasis>
824 <emphasis role="preprocessor">#define&#32;stbiw__sbfree(a)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((a)&#32;?&#32;STBIW_FREE(stbiw__sbraw(a)),0&#32;:&#32;0)</emphasis>
825 
826 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbiw__sbgrowf(<emphasis role="keywordtype">void</emphasis>&#32;**arr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;increment,&#32;<emphasis role="keywordtype">int</emphasis>&#32;itemsize)
827 {
828 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;*arr&#32;?&#32;2*stbiw__sbm(*arr)+increment&#32;:&#32;increment+1;
829 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p&#32;=&#32;STBIW_REALLOC_SIZED(*arr&#32;?&#32;stbiw__sbraw(*arr)&#32;:&#32;0,&#32;*arr&#32;?&#32;(stbiw__sbm(*arr)*itemsize&#32;+&#32;sizeof(int)*2)&#32;:&#32;0,&#32;itemsize&#32;*&#32;m&#32;+&#32;sizeof(int)*2);
830 &#32;&#32;&#32;STBIW_ASSERT(p);
831 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p)&#32;{
832 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!*arr)&#32;((<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;p)[1]&#32;=&#32;0;
833 &#32;&#32;&#32;&#32;&#32;&#32;*arr&#32;=&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;((<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;p&#32;+&#32;2);
834 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbm(*arr)&#32;=&#32;m;
835 &#32;&#32;&#32;}
836 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*arr;
837 }
838 
839 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*stbiw__zlib_flushf(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*bitbuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*bitcount)
840 {
841 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*bitcount&#32;&gt;=&#32;8)&#32;{
842 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;STBIW_UCHAR(*bitbuffer));
843 &#32;&#32;&#32;&#32;&#32;&#32;*bitbuffer&#32;&gt;&gt;=&#32;8;
844 &#32;&#32;&#32;&#32;&#32;&#32;*bitcount&#32;-=&#32;8;
845 &#32;&#32;&#32;}
846 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
847 }
848 
849 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw__zlib_bitrev(<emphasis role="keywordtype">int</emphasis>&#32;code,&#32;<emphasis role="keywordtype">int</emphasis>&#32;codebits)
850 {
851 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>=0;
852 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(codebits--)&#32;{
853 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;&lt;&lt;&#32;1)&#32;|&#32;(code&#32;&amp;&#32;1);
854 &#32;&#32;&#32;&#32;&#32;&#32;code&#32;&gt;&gt;=&#32;1;
855 &#32;&#32;&#32;}
856 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
857 }
858 
859 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw__zlib_countm(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;limit)
860 {
861 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
862 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;limit&#32;&amp;&amp;&#32;i&#32;&lt;&#32;258;&#32;++i)
863 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>[i]&#32;!=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>[i])&#32;<emphasis role="keywordflow">break</emphasis>;
864 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
865 }
866 
867 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw__zhash(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
868 {
869 &#32;&#32;&#32;stbiw_uint32&#32;hash&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[1]&#32;&lt;&lt;&#32;8)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[2]&#32;&lt;&lt;&#32;16);
870 &#32;&#32;&#32;hash&#32;^=&#32;hash&#32;&lt;&lt;&#32;3;
871 &#32;&#32;&#32;hash&#32;+=&#32;hash&#32;&gt;&gt;&#32;5;
872 &#32;&#32;&#32;hash&#32;^=&#32;hash&#32;&lt;&lt;&#32;4;
873 &#32;&#32;&#32;hash&#32;+=&#32;hash&#32;&gt;&gt;&#32;17;
874 &#32;&#32;&#32;hash&#32;^=&#32;hash&#32;&lt;&lt;&#32;25;
875 &#32;&#32;&#32;hash&#32;+=&#32;hash&#32;&gt;&gt;&#32;6;
876 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hash;
877 }
878 
879 <emphasis role="preprocessor">#define&#32;stbiw__zlib_flush()&#32;(out&#32;=&#32;stbiw__zlib_flushf(out,&#32;&amp;bitbuf,&#32;&amp;bitcount))</emphasis>
880 <emphasis role="preprocessor">#define&#32;stbiw__zlib_add(code,codebits)&#32;\</emphasis>
881 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;(bitbuf&#32;|=&#32;(code)&#32;&lt;&lt;&#32;bitcount,&#32;bitcount&#32;+=&#32;(codebits),&#32;stbiw__zlib_flush())</emphasis>
882 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huffa(b,c)&#32;&#32;stbiw__zlib_add(stbiw__zlib_bitrev(b,c),c)</emphasis>
883 <emphasis role="comment">//&#32;default&#32;huffman&#32;tables</emphasis>
884 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huff1(n)&#32;&#32;stbiw__zlib_huffa(0x30&#32;+&#32;(n),&#32;8)</emphasis>
885 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huff2(n)&#32;&#32;stbiw__zlib_huffa(0x190&#32;+&#32;(n)-144,&#32;9)</emphasis>
886 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huff3(n)&#32;&#32;stbiw__zlib_huffa(0&#32;+&#32;(n)-256,7)</emphasis>
887 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huff4(n)&#32;&#32;stbiw__zlib_huffa(0xc0&#32;+&#32;(n)-280,8)</emphasis>
888 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huff(n)&#32;&#32;((n)&#32;&lt;=&#32;143&#32;?&#32;stbiw__zlib_huff1(n)&#32;:&#32;(n)&#32;&lt;=&#32;255&#32;?&#32;stbiw__zlib_huff2(n)&#32;:&#32;(n)&#32;&lt;=&#32;279&#32;?&#32;stbiw__zlib_huff3(n)&#32;:&#32;stbiw__zlib_huff4(n))</emphasis>
889 <emphasis role="preprocessor">#define&#32;stbiw__zlib_huffb(n)&#32;((n)&#32;&lt;=&#32;143&#32;?&#32;stbiw__zlib_huff1(n)&#32;:&#32;stbiw__zlib_huff2(n))</emphasis>
890 
891 <emphasis role="preprocessor">#define&#32;stbiw__ZHASH&#32;&#32;&#32;16384</emphasis>
892 
893 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBIW_ZLIB_COMPRESS</emphasis>
894 
895 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2core_8c_1a956c38150bca2eea9b19e884f5689cde">stbi_zlib_compress</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;data_len,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*out_len,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
896 {
897 <emphasis role="preprocessor">#ifdef&#32;STBIW_ZLIB_COMPRESS</emphasis>
898 &#32;&#32;&#32;<emphasis role="comment">//&#32;user&#32;provided&#32;a&#32;zlib&#32;compress&#32;implementation,&#32;use&#32;that</emphasis>
899 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBIW_ZLIB_COMPRESS(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;data_len,&#32;out_len,&#32;quality);
900 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">//&#32;use&#32;builtin</emphasis>
901 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;lengthc[]&#32;=&#32;{&#32;3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,&#32;259&#32;};
902 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;lengtheb[]=&#32;{&#32;0,0,0,0,0,0,0,&#32;0,&#32;1,&#32;1,&#32;1,&#32;1,&#32;2,&#32;2,&#32;2,&#32;2,&#32;3,&#32;3,&#32;3,&#32;3,&#32;4,&#32;4,&#32;4,&#32;&#32;4,&#32;&#32;5,&#32;&#32;5,&#32;&#32;5,&#32;&#32;5,&#32;&#32;0&#32;};
903 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;distc[]&#32;&#32;&#32;=&#32;{&#32;1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,&#32;32768&#32;};
904 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;disteb[]&#32;&#32;=&#32;{&#32;0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13&#32;};
905 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitbuf=0;
906 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,&#32;bitcount=0;
907 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*out&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
908 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;***hash_table&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>***)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa057770bddd62c16a21f833a81ac442e">STBIW_MALLOC</link>(stbiw__ZHASH&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**));
909 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hash_table&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
910 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
911 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(quality&#32;&lt;&#32;5)&#32;quality&#32;=&#32;5;
912 
913 &#32;&#32;&#32;stbiw__sbpush(out,&#32;0x78);&#32;&#32;&#32;<emphasis role="comment">//&#32;DEFLATE&#32;32K&#32;window</emphasis>
914 &#32;&#32;&#32;stbiw__sbpush(out,&#32;0x5e);&#32;&#32;&#32;<emphasis role="comment">//&#32;FLEVEL&#32;=&#32;1</emphasis>
915 &#32;&#32;&#32;stbiw__zlib_add(1,1);&#32;&#32;<emphasis role="comment">//&#32;BFINAL&#32;=&#32;1</emphasis>
916 &#32;&#32;&#32;stbiw__zlib_add(1,2);&#32;&#32;<emphasis role="comment">//&#32;BTYPE&#32;=&#32;1&#32;--&#32;fixed&#32;huffman</emphasis>
917 
918 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;stbiw__ZHASH;&#32;++i)
919 &#32;&#32;&#32;&#32;&#32;&#32;hash_table[i]&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
920 
921 &#32;&#32;&#32;i=0;
922 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(i&#32;&lt;&#32;data_len-3)&#32;{
923 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hash&#32;next&#32;3&#32;bytes&#32;of&#32;data&#32;to&#32;be&#32;compressed</emphasis>
924 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;h&#32;=&#32;stbiw__zhash(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+i)&amp;(stbiw__ZHASH-1),&#32;best=3;
925 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bestloc&#32;=&#32;0;
926 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**hlist&#32;=&#32;hash_table[h];
927 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;stbiw__sbcount(hlist);
928 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;n;&#32;++j)&#32;{
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hlist[j]-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;&gt;&#32;i-32768)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;entry&#32;lies&#32;within&#32;window</emphasis>
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;d&#32;=&#32;stbiw__zlib_countm(hlist[j],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+i,&#32;data_len-i);
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;&gt;=&#32;best)&#32;{&#32;best=d;&#32;bestloc=hlist[j];&#32;}
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
933 &#32;&#32;&#32;&#32;&#32;&#32;}
934 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;hash&#32;table&#32;entry&#32;is&#32;too&#32;long,&#32;delete&#32;half&#32;the&#32;entries</emphasis>
935 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hash_table[h]&#32;&amp;&amp;&#32;stbiw__sbn(hash_table[h])&#32;==&#32;2*quality)&#32;{
936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBIW_MEMMOVE(hash_table[h],&#32;hash_table[h]+quality,&#32;<emphasis role="keyword">sizeof</emphasis>(hash_table[h][0])*quality);
937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbn(hash_table[h])&#32;=&#32;quality;
938 &#32;&#32;&#32;&#32;&#32;&#32;}
939 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(hash_table[h],<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+i);
940 
941 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bestloc)&#32;{
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;lazy&#32;matching&quot;&#32;-&#32;check&#32;match&#32;at&#32;*next*&#32;byte,&#32;and&#32;if&#32;it&apos;s&#32;better,&#32;do&#32;cur&#32;byte&#32;as&#32;literal</emphasis>
943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;stbiw__zhash(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+i+1)&amp;(stbiw__ZHASH-1);
944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hlist&#32;=&#32;hash_table[h];
945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;stbiw__sbcount(hlist);
946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;n;&#32;++j)&#32;{
947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hlist[j]-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;&gt;&#32;i-32767)&#32;{
948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139">e</link>&#32;=&#32;stbiw__zlib_countm(hlist[j],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+i+1,&#32;data_len-i-1);
949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;&gt;&#32;best)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;next&#32;match&#32;is&#32;better,&#32;bail&#32;on&#32;current&#32;match</emphasis>
950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestloc&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
955 &#32;&#32;&#32;&#32;&#32;&#32;}
956 
957 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bestloc)&#32;{
958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;d&#32;=&#32;(int)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+i&#32;-&#32;bestloc);&#32;<emphasis role="comment">//&#32;distance&#32;back</emphasis>
959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBIW_ASSERT(d&#32;&lt;=&#32;32767&#32;&amp;&amp;&#32;best&#32;&lt;=&#32;258);
960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;best&#32;&gt;&#32;lengthc[j+1]-1;&#32;++j);
961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__zlib_huff(j+257);
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lengtheb[j])&#32;stbiw__zlib_add(best&#32;-&#32;lengthc[j],&#32;lengtheb[j]);
963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;d&#32;&gt;&#32;distc[j+1]-1;&#32;++j);
964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__zlib_add(stbiw__zlib_bitrev(j,5),5);
965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disteb[j])&#32;stbiw__zlib_add(d&#32;-&#32;distc[j],&#32;disteb[j]);
966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;best;
967 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__zlib_huffb(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i]);
969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
970 &#32;&#32;&#32;&#32;&#32;&#32;}
971 &#32;&#32;&#32;}
972 &#32;&#32;&#32;<emphasis role="comment">//&#32;write&#32;out&#32;final&#32;bytes</emphasis>
973 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;i&#32;&lt;&#32;data_len;&#32;++i)
974 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__zlib_huffb(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i]);
975 &#32;&#32;&#32;stbiw__zlib_huff(256);&#32;<emphasis role="comment">//&#32;end&#32;of&#32;block</emphasis>
976 &#32;&#32;&#32;<emphasis role="comment">//&#32;pad&#32;with&#32;0&#32;bits&#32;to&#32;byte&#32;boundary</emphasis>
977 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(bitcount)
978 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__zlib_add(0,1);
979 
980 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;stbiw__ZHASH;&#32;++i)
981 &#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">void</emphasis>)&#32;stbiw__sbfree(hash_table[i]);
982 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(hash_table);
983 
984 &#32;&#32;&#32;<emphasis role="comment">//&#32;store&#32;uncompressed&#32;instead&#32;if&#32;compression&#32;was&#32;worse</emphasis>
985 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbiw__sbn(out)&#32;&gt;&#32;data_len&#32;+&#32;2&#32;+&#32;((data_len+32766)/32767)*5)&#32;{
986 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbn(out)&#32;=&#32;2;&#32;&#32;<emphasis role="comment">//&#32;truncate&#32;to&#32;DEFLATE&#32;32K&#32;window&#32;and&#32;FLEVEL&#32;=&#32;1</emphasis>
987 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;data_len;)&#32;{
988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;blocklen&#32;=&#32;data_len&#32;-&#32;j;
989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blocklen&#32;&gt;&#32;32767)&#32;blocklen&#32;=&#32;32767;
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;data_len&#32;-&#32;j&#32;==&#32;blocklen);&#32;<emphasis role="comment">//&#32;BFINAL&#32;=&#32;?,&#32;BTYPE&#32;=&#32;0&#32;--&#32;no&#32;compression</emphasis>
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(blocklen));&#32;<emphasis role="comment">//&#32;LEN</emphasis>
992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(blocklen&#32;&gt;&gt;&#32;8));
993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(~blocklen));&#32;<emphasis role="comment">//&#32;NLEN</emphasis>
994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(~blocklen&#32;&gt;&gt;&#32;8));
995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(out+stbiw__sbn(out),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>+j,&#32;blocklen);
996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbn(out)&#32;+=&#32;blocklen;
997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;+=&#32;blocklen;
998 &#32;&#32;&#32;&#32;&#32;&#32;}
999 &#32;&#32;&#32;}
1000 
1001 &#32;&#32;&#32;{
1002 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;adler32&#32;on&#32;input</emphasis>
1003 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s1=1,&#32;s2=0;
1004 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;blocklen&#32;=&#32;(int)&#32;(data_len&#32;%&#32;5552);
1005 &#32;&#32;&#32;&#32;&#32;&#32;j=0;
1006 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j&#32;&lt;&#32;data_len)&#32;{
1007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;blocklen;&#32;++i)&#32;{&#32;s1&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[j+i];&#32;s2&#32;+=&#32;s1;&#32;}
1008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s1&#32;%=&#32;65521;&#32;s2&#32;%=&#32;65521;
1009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;+=&#32;blocklen;
1010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocklen&#32;=&#32;5552;
1011 &#32;&#32;&#32;&#32;&#32;&#32;}
1012 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(s2&#32;&gt;&gt;&#32;8));
1013 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(s2));
1014 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(s1&#32;&gt;&gt;&#32;8));
1015 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__sbpush(out,&#32;STBIW_UCHAR(s1));
1016 &#32;&#32;&#32;}
1017 &#32;&#32;&#32;*out_len&#32;=&#32;stbiw__sbn(out);
1018 &#32;&#32;&#32;<emphasis role="comment">//&#32;make&#32;returned&#32;pointer&#32;freeable</emphasis>
1019 &#32;&#32;&#32;STBIW_MEMMOVE(stbiw__sbraw(out),&#32;out,&#32;*out_len);
1020 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;stbiw__sbraw(out);
1021 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBIW_ZLIB_COMPRESS</emphasis>
1022 }
1023 
1024 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw__crc32(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
1025 {
1026 <emphasis role="preprocessor">#ifdef&#32;STBIW_CRC32</emphasis>
1027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBIW_CRC32(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1028 <emphasis role="preprocessor">#else</emphasis>
1029 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;crc_table[256]&#32;=
1030 &#32;&#32;&#32;{
1031 &#32;&#32;&#32;&#32;&#32;&#32;0x00000000,&#32;0x77073096,&#32;0xEE0E612C,&#32;0x990951BA,&#32;0x076DC419,&#32;0x706AF48F,&#32;0xE963A535,&#32;0x9E6495A3,
1032 &#32;&#32;&#32;&#32;&#32;&#32;0x0eDB8832,&#32;0x79DCB8A4,&#32;0xE0D5E91E,&#32;0x97D2D988,&#32;0x09B64C2B,&#32;0x7EB17CBD,&#32;0xE7B82D07,&#32;0x90BF1D91,
1033 &#32;&#32;&#32;&#32;&#32;&#32;0x1DB71064,&#32;0x6AB020F2,&#32;0xF3B97148,&#32;0x84BE41DE,&#32;0x1ADAD47D,&#32;0x6DDDE4EB,&#32;0xF4D4B551,&#32;0x83D385C7,
1034 &#32;&#32;&#32;&#32;&#32;&#32;0x136C9856,&#32;0x646BA8C0,&#32;0xFD62F97A,&#32;0x8A65C9EC,&#32;0x14015C4F,&#32;0x63066CD9,&#32;0xFA0F3D63,&#32;0x8D080DF5,
1035 &#32;&#32;&#32;&#32;&#32;&#32;0x3B6E20C8,&#32;0x4C69105E,&#32;0xD56041E4,&#32;0xA2677172,&#32;0x3C03E4D1,&#32;0x4B04D447,&#32;0xD20D85FD,&#32;0xA50AB56B,
1036 &#32;&#32;&#32;&#32;&#32;&#32;0x35B5A8FA,&#32;0x42B2986C,&#32;0xDBBBC9D6,&#32;0xACBCF940,&#32;0x32D86CE3,&#32;0x45DF5C75,&#32;0xDCD60DCF,&#32;0xABD13D59,
1037 &#32;&#32;&#32;&#32;&#32;&#32;0x26D930AC,&#32;0x51DE003A,&#32;0xC8D75180,&#32;0xBFD06116,&#32;0x21B4F4B5,&#32;0x56B3C423,&#32;0xCFBA9599,&#32;0xB8BDA50F,
1038 &#32;&#32;&#32;&#32;&#32;&#32;0x2802B89E,&#32;0x5F058808,&#32;0xC60CD9B2,&#32;0xB10BE924,&#32;0x2F6F7C87,&#32;0x58684C11,&#32;0xC1611DAB,&#32;0xB6662D3D,
1039 &#32;&#32;&#32;&#32;&#32;&#32;0x76DC4190,&#32;0x01DB7106,&#32;0x98D220BC,&#32;0xEFD5102A,&#32;0x71B18589,&#32;0x06B6B51F,&#32;0x9FBFE4A5,&#32;0xE8B8D433,
1040 &#32;&#32;&#32;&#32;&#32;&#32;0x7807C9A2,&#32;0x0F00F934,&#32;0x9609A88E,&#32;0xE10E9818,&#32;0x7F6A0DBB,&#32;0x086D3D2D,&#32;0x91646C97,&#32;0xE6635C01,
1041 &#32;&#32;&#32;&#32;&#32;&#32;0x6B6B51F4,&#32;0x1C6C6162,&#32;0x856530D8,&#32;0xF262004E,&#32;0x6C0695ED,&#32;0x1B01A57B,&#32;0x8208F4C1,&#32;0xF50FC457,
1042 &#32;&#32;&#32;&#32;&#32;&#32;0x65B0D9C6,&#32;0x12B7E950,&#32;0x8BBEB8EA,&#32;0xFCB9887C,&#32;0x62DD1DDF,&#32;0x15DA2D49,&#32;0x8CD37CF3,&#32;0xFBD44C65,
1043 &#32;&#32;&#32;&#32;&#32;&#32;0x4DB26158,&#32;0x3AB551CE,&#32;0xA3BC0074,&#32;0xD4BB30E2,&#32;0x4ADFA541,&#32;0x3DD895D7,&#32;0xA4D1C46D,&#32;0xD3D6F4FB,
1044 &#32;&#32;&#32;&#32;&#32;&#32;0x4369E96A,&#32;0x346ED9FC,&#32;0xAD678846,&#32;0xDA60B8D0,&#32;0x44042D73,&#32;0x33031DE5,&#32;0xAA0A4C5F,&#32;0xDD0D7CC9,
1045 &#32;&#32;&#32;&#32;&#32;&#32;0x5005713C,&#32;0x270241AA,&#32;0xBE0B1010,&#32;0xC90C2086,&#32;0x5768B525,&#32;0x206F85B3,&#32;0xB966D409,&#32;0xCE61E49F,
1046 &#32;&#32;&#32;&#32;&#32;&#32;0x5EDEF90E,&#32;0x29D9C998,&#32;0xB0D09822,&#32;0xC7D7A8B4,&#32;0x59B33D17,&#32;0x2EB40D81,&#32;0xB7BD5C3B,&#32;0xC0BA6CAD,
1047 &#32;&#32;&#32;&#32;&#32;&#32;0xEDB88320,&#32;0x9ABFB3B6,&#32;0x03B6E20C,&#32;0x74B1D29A,&#32;0xEAD54739,&#32;0x9DD277AF,&#32;0x04DB2615,&#32;0x73DC1683,
1048 &#32;&#32;&#32;&#32;&#32;&#32;0xE3630B12,&#32;0x94643B84,&#32;0x0D6D6A3E,&#32;0x7A6A5AA8,&#32;0xE40ECF0B,&#32;0x9309FF9D,&#32;0x0A00AE27,&#32;0x7D079EB1,
1049 &#32;&#32;&#32;&#32;&#32;&#32;0xF00F9344,&#32;0x8708A3D2,&#32;0x1E01F268,&#32;0x6906C2FE,&#32;0xF762575D,&#32;0x806567CB,&#32;0x196C3671,&#32;0x6E6B06E7,
1050 &#32;&#32;&#32;&#32;&#32;&#32;0xFED41B76,&#32;0x89D32BE0,&#32;0x10DA7A5A,&#32;0x67DD4ACC,&#32;0xF9B9DF6F,&#32;0x8EBEEFF9,&#32;0x17B7BE43,&#32;0x60B08ED5,
1051 &#32;&#32;&#32;&#32;&#32;&#32;0xD6D6A3E8,&#32;0xA1D1937E,&#32;0x38D8C2C4,&#32;0x4FDFF252,&#32;0xD1BB67F1,&#32;0xA6BC5767,&#32;0x3FB506DD,&#32;0x48B2364B,
1052 &#32;&#32;&#32;&#32;&#32;&#32;0xD80D2BDA,&#32;0xAF0A1B4C,&#32;0x36034AF6,&#32;0x41047A60,&#32;0xDF60EFC3,&#32;0xA867DF55,&#32;0x316E8EEF,&#32;0x4669BE79,
1053 &#32;&#32;&#32;&#32;&#32;&#32;0xCB61B38C,&#32;0xBC66831A,&#32;0x256FD2A0,&#32;0x5268E236,&#32;0xCC0C7795,&#32;0xBB0B4703,&#32;0x220216B9,&#32;0x5505262F,
1054 &#32;&#32;&#32;&#32;&#32;&#32;0xC5BA3BBE,&#32;0xB2BD0B28,&#32;0x2BB45A92,&#32;0x5CB36A04,&#32;0xC2D7FFA7,&#32;0xB5D0CF31,&#32;0x2CD99E8B,&#32;0x5BDEAE1D,
1055 &#32;&#32;&#32;&#32;&#32;&#32;0x9B64C2B0,&#32;0xEC63F226,&#32;0x756AA39C,&#32;0x026D930A,&#32;0x9C0906A9,&#32;0xEB0E363F,&#32;0x72076785,&#32;0x05005713,
1056 &#32;&#32;&#32;&#32;&#32;&#32;0x95BF4A82,&#32;0xE2B87A14,&#32;0x7BB12BAE,&#32;0x0CB61B38,&#32;0x92D28E9B,&#32;0xE5D5BE0D,&#32;0x7CDCEFB7,&#32;0x0BDBDF21,
1057 &#32;&#32;&#32;&#32;&#32;&#32;0x86D3D2D4,&#32;0xF1D4E242,&#32;0x68DDB3F8,&#32;0x1FDA836E,&#32;0x81BE16CD,&#32;0xF6B9265B,&#32;0x6FB077E1,&#32;0x18B74777,
1058 &#32;&#32;&#32;&#32;&#32;&#32;0x88085AE6,&#32;0xFF0F6A70,&#32;0x66063BCA,&#32;0x11010B5C,&#32;0x8F659EFF,&#32;0xF862AE69,&#32;0x616BFFD3,&#32;0x166CCF45,
1059 &#32;&#32;&#32;&#32;&#32;&#32;0xA00AE278,&#32;0xD70DD2EE,&#32;0x4E048354,&#32;0x3903B3C2,&#32;0xA7672661,&#32;0xD06016F7,&#32;0x4969474D,&#32;0x3E6E77DB,
1060 &#32;&#32;&#32;&#32;&#32;&#32;0xAED16A4A,&#32;0xD9D65ADC,&#32;0x40DF0B66,&#32;0x37D83BF0,&#32;0xA9BCAE53,&#32;0xDEBB9EC5,&#32;0x47B2CF7F,&#32;0x30B5FFE9,
1061 &#32;&#32;&#32;&#32;&#32;&#32;0xBDBDF21C,&#32;0xCABAC28A,&#32;0x53B39330,&#32;0x24B4A3A6,&#32;0xBAD03605,&#32;0xCDD70693,&#32;0x54DE5729,&#32;0x23D967BF,
1062 &#32;&#32;&#32;&#32;&#32;&#32;0xB3667A2E,&#32;0xC4614AB8,&#32;0x5D681B02,&#32;0x2A6F2B94,&#32;0xB40BBE37,&#32;0xC30C8EA1,&#32;0x5A05DF1B,&#32;0x2D02EF8D
1063 &#32;&#32;&#32;};
1064 
1065 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;crc&#32;=&#32;~0<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
1066 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1067 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;++i)
1068 &#32;&#32;&#32;&#32;&#32;&#32;crc&#32;=&#32;(crc&#32;&gt;&gt;&#32;8)&#32;^&#32;crc_table[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[i]&#32;^&#32;(crc&#32;&amp;&#32;0xff)];
1069 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~crc;
1070 <emphasis role="preprocessor">#endif</emphasis>
1071 }
1072 
1073 <emphasis role="preprocessor">#define&#32;stbiw__wpng4(o,a,b,c,d)&#32;((o)[0]=STBIW_UCHAR(a),(o)[1]=STBIW_UCHAR(b),(o)[2]=STBIW_UCHAR(c),(o)[3]=STBIW_UCHAR(d),(o)+=4)</emphasis>
1074 <emphasis role="preprocessor">#define&#32;stbiw__wp32(data,v)&#32;stbiw__wpng4(data,&#32;(v)&gt;&gt;24,(v)&gt;&gt;16,(v)&gt;&gt;8,(v));</emphasis>
1075 <emphasis role="preprocessor">#define&#32;stbiw__wptag(data,s)&#32;stbiw__wpng4(data,&#32;s[0],s[1],s[2],s[3])</emphasis>
1076 
1077 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__wpcrc(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
1078 {
1079 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;crc&#32;=&#32;stbiw__crc32(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;-&#32;4,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>+4);
1080 &#32;&#32;&#32;stbiw__wp32(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;crc);
1081 }
1082 
1083 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;stbiw__paeth(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;c)
1084 {
1085 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;c,&#32;pa&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(p-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>),&#32;pb&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(p-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>),&#32;pc&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(p-c);
1086 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pa&#32;&lt;=&#32;pb&#32;&amp;&amp;&#32;pa&#32;&lt;=&#32;pc)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
1087 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pb&#32;&lt;=&#32;pc)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
1088 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBIW_UCHAR(c);
1089 }
1090 
1091 <emphasis role="comment">//&#32;@OPTIMIZE:&#32;provide&#32;an&#32;option&#32;that&#32;always&#32;forces&#32;left-predict&#32;or&#32;paeth&#32;predict</emphasis>
1092 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__encode_png_line(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;filter_type,&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*line_buffer)
1093 {
1094 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mapping[]&#32;=&#32;{&#32;0,1,2,3,4&#32;};
1095 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;firstmap[]&#32;=&#32;{&#32;0,1,0,5,6&#32;};
1096 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*mymap&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;!=&#32;0)&#32;?&#32;mapping&#32;:&#32;firstmap;
1097 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1098 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;mymap[filter_type];
1099 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>&#32;+&#32;stride_bytes&#32;*&#32;(stbi__flip_vertically_on_write&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>-1-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
1100 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;signed_stride&#32;=&#32;stbi__flip_vertically_on_write&#32;?&#32;-stride_bytes&#32;:&#32;stride_bytes;
1101 
1102 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>==0)&#32;{
1103 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(line_buffer,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n);
1104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1105 &#32;&#32;&#32;}
1106 
1107 &#32;&#32;&#32;<emphasis role="comment">//&#32;first&#32;loop&#32;isn&apos;t&#32;optimized&#32;since&#32;it&apos;s&#32;just&#32;one&#32;pixel</emphasis>
1108 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;++i)&#32;{
1109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)&#32;{
1110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i];&#32;<emphasis role="keywordflow">break</emphasis>;
1111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride];&#32;<emphasis role="keywordflow">break</emphasis>;
1112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride]&gt;&gt;1);&#32;<emphasis role="keywordflow">break</emphasis>;
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:&#32;line_buffer[i]&#32;=&#32;(<emphasis role="keywordtype">signed</emphasis>&#32;char)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;stbiw__paeth(0,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride],0));&#32;<emphasis role="keywordflow">break</emphasis>;
1114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;5:&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i];&#32;<emphasis role="keywordflow">break</emphasis>;
1115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;6:&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i];&#32;<emphasis role="keywordflow">break</emphasis>;
1116 &#32;&#32;&#32;&#32;&#32;&#32;}
1117 &#32;&#32;&#32;}
1118 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)&#32;{
1119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=n;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n;&#32;++i)&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-n];&#32;<emphasis role="keywordflow">break</emphasis>;
1120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=n;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n;&#32;++i)&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride];&#32;<emphasis role="keywordflow">break</emphasis>;
1121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=n;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n;&#32;++i)&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-n]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride])&gt;&gt;1);&#32;<emphasis role="keywordflow">break</emphasis>;
1122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=n;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n;&#32;++i)&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;stbiw__paeth(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-n],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-signed_stride-n]);&#32;<emphasis role="keywordflow">break</emphasis>;
1123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;5:&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=n;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n;&#32;++i)&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-n]&gt;&gt;1);&#32;<emphasis role="keywordflow">break</emphasis>;
1124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;6:&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=n;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*n;&#32;++i)&#32;line_buffer[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i]&#32;-&#32;stbiw__paeth(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>[i-n],&#32;0,0);&#32;<emphasis role="keywordflow">break</emphasis>;
1125 &#32;&#32;&#32;}
1126 }
1127 
1128 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*stbi_write_png_to_mem(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_bytes,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*out_len)
1129 {
1130 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;force_filter&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a5bfaf6779e88c4122d2b1fdf3723378e">stbi_write_force_png_filter</link>;
1131 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ctype[5]&#32;=&#32;{&#32;-1,&#32;0,&#32;4,&#32;2,&#32;6&#32;};
1132 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;sig[8]&#32;=&#32;{&#32;137,80,78,71,13,10,26,10&#32;};
1133 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*out,*o,&#32;*filt,&#32;*zlib;
1134 &#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*line_buffer;
1135 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,zlen;
1136 
1137 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stride_bytes&#32;==&#32;0)
1138 &#32;&#32;&#32;&#32;&#32;&#32;stride_bytes&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;n;
1139 
1140 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(force_filter&#32;&gt;=&#32;5)&#32;{
1141 &#32;&#32;&#32;&#32;&#32;&#32;force_filter&#32;=&#32;-1;
1142 &#32;&#32;&#32;}
1143 
1144 &#32;&#32;&#32;filt&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa057770bddd62c16a21f833a81ac442e">STBIW_MALLOC</link>((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*n+1)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!filt)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1145 &#32;&#32;&#32;line_buffer&#32;=&#32;(<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa057770bddd62c16a21f833a81ac442e">STBIW_MALLOC</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;n);&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!line_buffer)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(filt);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
1146 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++j)&#32;{
1147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;filter_type;
1148 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(force_filter&#32;&gt;&#32;-1)&#32;{
1149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filter_type&#32;=&#32;force_filter;
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__encode_png_line((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>),&#32;stride_bytes,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;j,&#32;n,&#32;force_filter,&#32;line_buffer);
1151 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;Estimate&#32;the&#32;best&#32;filter&#32;by&#32;running&#32;through&#32;all&#32;of&#32;them:</emphasis>
1152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;best_filter&#32;=&#32;0,&#32;best_filter_val&#32;=&#32;0x7fffffff,&#32;est,&#32;i;
1153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(filter_type&#32;=&#32;0;&#32;filter_type&#32;&lt;&#32;5;&#32;filter_type++)&#32;{
1154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__encode_png_line((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>),&#32;stride_bytes,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;j,&#32;n,&#32;filter_type,&#32;line_buffer);
1155 
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Estimate&#32;the&#32;entropy&#32;of&#32;the&#32;line&#32;using&#32;this&#32;filter;&#32;the&#32;less,&#32;the&#32;better.</emphasis>
1157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est&#32;=&#32;0;
1158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*n;&#32;++i)&#32;{
1159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est&#32;+=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>((<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>)&#32;line_buffer[i]);
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(est&#32;&lt;&#32;best_filter_val)&#32;{
1162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_filter_val&#32;=&#32;est;
1163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_filter&#32;=&#32;filter_type;
1164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(filter_type&#32;!=&#32;best_filter)&#32;{&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;last&#32;iteration&#32;already&#32;got&#32;us&#32;the&#32;best&#32;filter,&#32;don&apos;t&#32;redo&#32;it</emphasis>
1167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__encode_png_line((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a620525fb1b4102cd9522c24b0e7d3e40">pixels</link>),&#32;stride_bytes,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;j,&#32;n,&#32;best_filter,&#32;line_buffer);
1168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filter_type&#32;=&#32;best_filter;
1169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1170 &#32;&#32;&#32;&#32;&#32;&#32;}
1171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;we&#32;get&#32;here,&#32;filter_type&#32;contains&#32;the&#32;filter&#32;type,&#32;and&#32;line_buffer&#32;contains&#32;the&#32;data</emphasis>
1172 &#32;&#32;&#32;&#32;&#32;&#32;filt[j*(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*n+1)]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>)&#32;filter_type;
1173 &#32;&#32;&#32;&#32;&#32;&#32;STBIW_MEMMOVE(filt+j*(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*n+1)+1,&#32;line_buffer,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*n);
1174 &#32;&#32;&#32;}
1175 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(line_buffer);
1176 &#32;&#32;&#32;zlib&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2core_8c_1a956c38150bca2eea9b19e884f5689cde">stbi_zlib_compress</link>(filt,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*(&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*n+1),&#32;&amp;zlen,&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a599b900a32e68e29c820d9755d0eea28">stbi_write_png_compression_level</link>);
1177 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(filt);
1178 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!zlib)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1179 
1180 &#32;&#32;&#32;<emphasis role="comment">//&#32;each&#32;tag&#32;requires&#32;12&#32;bytes&#32;of&#32;overhead</emphasis>
1181 &#32;&#32;&#32;out&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa057770bddd62c16a21f833a81ac442e">STBIW_MALLOC</link>(8&#32;+&#32;12+13&#32;+&#32;12+zlen&#32;+&#32;12);
1182 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!out)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1183 &#32;&#32;&#32;*out_len&#32;=&#32;8&#32;+&#32;12+13&#32;+&#32;12+zlen&#32;+&#32;12;
1184 
1185 &#32;&#32;&#32;o=out;
1186 &#32;&#32;&#32;STBIW_MEMMOVE(o,sig,8);&#32;o+=&#32;8;
1187 &#32;&#32;&#32;stbiw__wp32(o,&#32;13);&#32;<emphasis role="comment">//&#32;header&#32;length</emphasis>
1188 &#32;&#32;&#32;stbiw__wptag(o,&#32;<emphasis role="stringliteral">&quot;IHDR&quot;</emphasis>);
1189 &#32;&#32;&#32;stbiw__wp32(o,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
1190 &#32;&#32;&#32;stbiw__wp32(o,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
1191 &#32;&#32;&#32;*o++&#32;=&#32;8;
1192 &#32;&#32;&#32;*o++&#32;=&#32;STBIW_UCHAR(ctype[n]);
1193 &#32;&#32;&#32;*o++&#32;=&#32;0;
1194 &#32;&#32;&#32;*o++&#32;=&#32;0;
1195 &#32;&#32;&#32;*o++&#32;=&#32;0;
1196 &#32;&#32;&#32;stbiw__wpcrc(&amp;o,13);
1197 
1198 &#32;&#32;&#32;stbiw__wp32(o,&#32;zlen);
1199 &#32;&#32;&#32;stbiw__wptag(o,&#32;<emphasis role="stringliteral">&quot;IDAT&quot;</emphasis>);
1200 &#32;&#32;&#32;STBIW_MEMMOVE(o,&#32;zlib,&#32;zlen);
1201 &#32;&#32;&#32;o&#32;+=&#32;zlen;
1202 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(zlib);
1203 &#32;&#32;&#32;stbiw__wpcrc(&amp;o,&#32;zlen);
1204 
1205 &#32;&#32;&#32;stbiw__wp32(o,0);
1206 &#32;&#32;&#32;stbiw__wptag(o,&#32;<emphasis role="stringliteral">&quot;IEND&quot;</emphasis>);
1207 &#32;&#32;&#32;stbiw__wpcrc(&amp;o,0);
1208 
1209 &#32;&#32;&#32;STBIW_ASSERT(o&#32;==&#32;out&#32;+&#32;*out_len);
1210 
1211 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
1212 }
1213 
1214 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
1215 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a9c03e5171f6aea47fde6dafcf3249ccf">stbi_write_png</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_bytes)
1216 {
1217 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
1218 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
1219 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*png&#32;=&#32;stbi_write_png_to_mem((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;stride_bytes,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1220 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(png&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1221 
1222 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbiw__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>);
1223 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(png);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
1224 &#32;&#32;&#32;fwrite(png,&#32;1,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1225 &#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1226 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(png);
1227 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1228 }
1229 <emphasis role="preprocessor">#endif</emphasis>
1230 
1231 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a72dcd18698d64c92082449912c39a4e5">stbi_write_png_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stride_bytes)
1232 {
1233 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
1234 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*png&#32;=&#32;stbi_write_png_to_mem((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;stride_bytes,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1235 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(png&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1236 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>(context,&#32;png,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1237 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1ac7ab1b12ba70083a053252826c16675f">STBIW_FREE</link>(png);
1238 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1239 }
1240 
1241 
1242 <emphasis role="comment">/*&#32;***************************************************************************</emphasis>
1243 <emphasis role="comment">&#32;*</emphasis>
1244 <emphasis role="comment">&#32;*&#32;JPEG&#32;writer</emphasis>
1245 <emphasis role="comment">&#32;*</emphasis>
1246 <emphasis role="comment">&#32;*&#32;This&#32;is&#32;based&#32;on&#32;Jon&#32;Olick&apos;s&#32;jo_jpeg.cpp:</emphasis>
1247 <emphasis role="comment">&#32;*&#32;public&#32;domain&#32;Simple,&#32;Minimalistic&#32;JPEG&#32;writer&#32;-&#32;http://www.jonolick.com/code.html</emphasis>
1248 <emphasis role="comment">&#32;*/</emphasis>
1249 
1250 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;stbiw__jpg_ZigZag[]&#32;=&#32;{&#32;0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,
1251 &#32;&#32;&#32;&#32;&#32;&#32;24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63&#32;};
1252 
1253 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__jpg_writeBits(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*bitBufP,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*bitCntP,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;*bs)&#32;{
1254 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitBuf&#32;=&#32;*bitBufP,&#32;bitCnt&#32;=&#32;*bitCntP;
1255 &#32;&#32;&#32;bitCnt&#32;+=&#32;bs[1];
1256 &#32;&#32;&#32;bitBuf&#32;|=&#32;bs[0]&#32;&lt;&lt;&#32;(24&#32;-&#32;bitCnt);
1257 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(bitCnt&#32;&gt;=&#32;8)&#32;{
1258 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;(bitBuf&#32;&gt;&gt;&#32;16)&#32;&amp;&#32;255;
1259 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__putc(s,&#32;c);
1260 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&#32;==&#32;255)&#32;{
1261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__putc(s,&#32;0);
1262 &#32;&#32;&#32;&#32;&#32;&#32;}
1263 &#32;&#32;&#32;&#32;&#32;&#32;bitBuf&#32;&lt;&lt;=&#32;8;
1264 &#32;&#32;&#32;&#32;&#32;&#32;bitCnt&#32;-=&#32;8;
1265 &#32;&#32;&#32;}
1266 &#32;&#32;&#32;*bitBufP&#32;=&#32;bitBuf;
1267 &#32;&#32;&#32;*bitCntP&#32;=&#32;bitCnt;
1268 }
1269 
1270 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__jpg_DCT(<emphasis role="keywordtype">float</emphasis>&#32;*d0p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d1p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d2p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d3p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d4p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d5p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d6p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*d7p)&#32;{
1271 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d0&#32;=&#32;*d0p,&#32;d1&#32;=&#32;*d1p,&#32;d2&#32;=&#32;*d2p,&#32;d3&#32;=&#32;*d3p,&#32;d4&#32;=&#32;*d4p,&#32;d5&#32;=&#32;*d5p,&#32;d6&#32;=&#32;*d6p,&#32;d7&#32;=&#32;*d7p;
1272 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;z1,&#32;z2,&#32;z3,&#32;z4,&#32;z5,&#32;z11,&#32;z13;
1273 
1274 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp0&#32;=&#32;d0&#32;+&#32;d7;
1275 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp7&#32;=&#32;d0&#32;-&#32;d7;
1276 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp1&#32;=&#32;d1&#32;+&#32;d6;
1277 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp6&#32;=&#32;d1&#32;-&#32;d6;
1278 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp2&#32;=&#32;d2&#32;+&#32;d5;
1279 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp5&#32;=&#32;d2&#32;-&#32;d5;
1280 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp3&#32;=&#32;d3&#32;+&#32;d4;
1281 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp4&#32;=&#32;d3&#32;-&#32;d4;
1282 
1283 &#32;&#32;&#32;<emphasis role="comment">//&#32;Even&#32;part</emphasis>
1284 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp10&#32;=&#32;tmp0&#32;+&#32;tmp3;&#32;&#32;&#32;<emphasis role="comment">//&#32;phase&#32;2</emphasis>
1285 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp13&#32;=&#32;tmp0&#32;-&#32;tmp3;
1286 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp11&#32;=&#32;tmp1&#32;+&#32;tmp2;
1287 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tmp12&#32;=&#32;tmp1&#32;-&#32;tmp2;
1288 
1289 &#32;&#32;&#32;d0&#32;=&#32;tmp10&#32;+&#32;tmp11;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phase&#32;3</emphasis>
1290 &#32;&#32;&#32;d4&#32;=&#32;tmp10&#32;-&#32;tmp11;
1291 
1292 &#32;&#32;&#32;z1&#32;=&#32;(tmp12&#32;+&#32;tmp13)&#32;*&#32;0.707106781f;&#32;<emphasis role="comment">//&#32;c4</emphasis>
1293 &#32;&#32;&#32;d2&#32;=&#32;tmp13&#32;+&#32;z1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phase&#32;5</emphasis>
1294 &#32;&#32;&#32;d6&#32;=&#32;tmp13&#32;-&#32;z1;
1295 
1296 &#32;&#32;&#32;<emphasis role="comment">//&#32;Odd&#32;part</emphasis>
1297 &#32;&#32;&#32;tmp10&#32;=&#32;tmp4&#32;+&#32;tmp5;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phase&#32;2</emphasis>
1298 &#32;&#32;&#32;tmp11&#32;=&#32;tmp5&#32;+&#32;tmp6;
1299 &#32;&#32;&#32;tmp12&#32;=&#32;tmp6&#32;+&#32;tmp7;
1300 
1301 &#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;rotator&#32;is&#32;modified&#32;from&#32;fig&#32;4-8&#32;to&#32;avoid&#32;extra&#32;negations.</emphasis>
1302 &#32;&#32;&#32;z5&#32;=&#32;(tmp10&#32;-&#32;tmp12)&#32;*&#32;0.382683433f;&#32;<emphasis role="comment">//&#32;c6</emphasis>
1303 &#32;&#32;&#32;z2&#32;=&#32;tmp10&#32;*&#32;0.541196100f&#32;+&#32;z5;&#32;<emphasis role="comment">//&#32;c2-c6</emphasis>
1304 &#32;&#32;&#32;z4&#32;=&#32;tmp12&#32;*&#32;1.306562965f&#32;+&#32;z5;&#32;<emphasis role="comment">//&#32;c2+c6</emphasis>
1305 &#32;&#32;&#32;z3&#32;=&#32;tmp11&#32;*&#32;0.707106781f;&#32;<emphasis role="comment">//&#32;c4</emphasis>
1306 
1307 &#32;&#32;&#32;z11&#32;=&#32;tmp7&#32;+&#32;z3;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phase&#32;5</emphasis>
1308 &#32;&#32;&#32;z13&#32;=&#32;tmp7&#32;-&#32;z3;
1309 
1310 &#32;&#32;&#32;*d5p&#32;=&#32;z13&#32;+&#32;z2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phase&#32;6</emphasis>
1311 &#32;&#32;&#32;*d3p&#32;=&#32;z13&#32;-&#32;z2;
1312 &#32;&#32;&#32;*d1p&#32;=&#32;z11&#32;+&#32;z4;
1313 &#32;&#32;&#32;*d7p&#32;=&#32;z11&#32;-&#32;z4;
1314 
1315 &#32;&#32;&#32;*d0p&#32;=&#32;d0;&#32;&#32;*d2p&#32;=&#32;d2;&#32;&#32;*d4p&#32;=&#32;d4;&#32;&#32;*d6p&#32;=&#32;d6;
1316 }
1317 
1318 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbiw__jpg_calcBits(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;bits[2])&#32;{
1319 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tmp1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;&lt;&#32;0&#32;?&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
1320 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;&lt;&#32;0&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>-1&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
1321 &#32;&#32;&#32;bits[1]&#32;=&#32;1;
1322 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(tmp1&#32;&gt;&gt;=&#32;1)&#32;{
1323 &#32;&#32;&#32;&#32;&#32;&#32;++bits[1];
1324 &#32;&#32;&#32;}
1325 &#32;&#32;&#32;bits[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;&amp;&#32;((1&lt;&lt;bits[1])-1);
1326 }
1327 
1328 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbiw__jpg_processDU(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*bitBuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*bitCnt,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*CDU,&#32;<emphasis role="keywordtype">int</emphasis>&#32;du_stride,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*fdtbl,&#32;<emphasis role="keywordtype">int</emphasis>&#32;DC,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;HTDC[256][2],&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;HTAC[256][2])&#32;{
1329 &#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;EOB[2]&#32;=&#32;{&#32;HTAC[0x00][0],&#32;HTAC[0x00][1]&#32;};
1330 &#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;M16zeroes[2]&#32;=&#32;{&#32;HTAC[0xF0][0],&#32;HTAC[0xF0][1]&#32;};
1331 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dataOff,&#32;i,&#32;j,&#32;n,&#32;diff,&#32;end0pos,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
1332 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;DU[64];
1333 
1334 &#32;&#32;&#32;<emphasis role="comment">//&#32;DCT&#32;rows</emphasis>
1335 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(dataOff=0,&#32;n=du_stride*8;&#32;dataOff&lt;n;&#32;dataOff+=du_stride)&#32;{
1336 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_DCT(&amp;CDU[dataOff],&#32;&amp;CDU[dataOff+1],&#32;&amp;CDU[dataOff+2],&#32;&amp;CDU[dataOff+3],&#32;&amp;CDU[dataOff+4],&#32;&amp;CDU[dataOff+5],&#32;&amp;CDU[dataOff+6],&#32;&amp;CDU[dataOff+7]);
1337 &#32;&#32;&#32;}
1338 &#32;&#32;&#32;<emphasis role="comment">//&#32;DCT&#32;columns</emphasis>
1339 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(dataOff=0;&#32;dataOff&lt;8;&#32;++dataOff)&#32;{
1340 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_DCT(&amp;CDU[dataOff],&#32;&amp;CDU[dataOff+du_stride],&#32;&amp;CDU[dataOff+du_stride*2],&#32;&amp;CDU[dataOff+du_stride*3],&#32;&amp;CDU[dataOff+du_stride*4],
1341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;CDU[dataOff+du_stride*5],&#32;&amp;CDU[dataOff+du_stride*6],&#32;&amp;CDU[dataOff+du_stride*7]);
1342 &#32;&#32;&#32;}
1343 &#32;&#32;&#32;<emphasis role="comment">//&#32;Quantize/descale/zigzag&#32;the&#32;coefficients</emphasis>
1344 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;0,&#32;j=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;8;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
1345 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;8;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,++j)&#32;{
1346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
1347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*du_stride+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
1348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;CDU[i]*fdtbl[j];
1349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DU[stbiw__jpg_ZigZag[j]]&#32;=&#32;(int)(v&#32;&lt;&#32;0&#32;?&#32;ceilf(v&#32;-&#32;0.5f)&#32;:&#32;floorf(v&#32;+&#32;0.5f));</emphasis>
1350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ceilf()&#32;and&#32;floorf()&#32;are&#32;C99,&#32;not&#32;C89,&#32;but&#32;I&#32;/think/&#32;they&apos;re&#32;not&#32;needed&#32;here&#32;anyway?</emphasis>
1351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DU[stbiw__jpg_ZigZag[j]]&#32;=&#32;(int)(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&lt;&#32;0&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;-&#32;0.5f&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;+&#32;0.5f);
1352 &#32;&#32;&#32;&#32;&#32;&#32;}
1353 &#32;&#32;&#32;}
1354 
1355 &#32;&#32;&#32;<emphasis role="comment">//&#32;Encode&#32;DC</emphasis>
1356 &#32;&#32;&#32;diff&#32;=&#32;DU[0]&#32;-&#32;DC;
1357 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(diff&#32;==&#32;0)&#32;{
1358 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;HTDC[0]);
1359 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1360 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;bits[2];
1361 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_calcBits(diff,&#32;bits);
1362 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;HTDC[bits[1]]);
1363 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;bits);
1364 &#32;&#32;&#32;}
1365 &#32;&#32;&#32;<emphasis role="comment">//&#32;Encode&#32;ACs</emphasis>
1366 &#32;&#32;&#32;end0pos&#32;=&#32;63;
1367 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;(end0pos&gt;0)&amp;&amp;(DU[end0pos]==0);&#32;--end0pos)&#32;{
1368 &#32;&#32;&#32;}
1369 &#32;&#32;&#32;<emphasis role="comment">//&#32;end0pos&#32;=&#32;first&#32;element&#32;in&#32;reverse&#32;order&#32;!=0</emphasis>
1370 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(end0pos&#32;==&#32;0)&#32;{
1371 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;EOB);
1372 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DU[0];
1373 &#32;&#32;&#32;}
1374 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;end0pos;&#32;++i)&#32;{
1375 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;startpos&#32;=&#32;i;
1376 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nrzeroes;
1377 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;bits[2];
1378 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;DU[i]==0&#32;&amp;&amp;&#32;i&lt;=end0pos;&#32;++i)&#32;{
1379 &#32;&#32;&#32;&#32;&#32;&#32;}
1380 &#32;&#32;&#32;&#32;&#32;&#32;nrzeroes&#32;=&#32;i-startpos;
1381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;nrzeroes&#32;&gt;=&#32;16&#32;)&#32;{
1382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lng&#32;=&#32;nrzeroes&gt;&gt;4;
1383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nrmarker;
1384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(nrmarker=1;&#32;nrmarker&#32;&lt;=&#32;lng;&#32;++nrmarker)
1385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;M16zeroes);
1386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nrzeroes&#32;&amp;=&#32;15;
1387 &#32;&#32;&#32;&#32;&#32;&#32;}
1388 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_calcBits(DU[i],&#32;bits);
1389 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;HTAC[(nrzeroes&lt;&lt;4)+bits[1]]);
1390 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;bits);
1391 &#32;&#32;&#32;}
1392 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(end0pos&#32;!=&#32;63)&#32;{
1393 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;bitBuf,&#32;bitCnt,&#32;EOB);
1394 &#32;&#32;&#32;}
1395 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DU[0];
1396 }
1397 
1398 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi_write_jpg_core(stbi__write_context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)&#32;{
1399 &#32;&#32;&#32;<emphasis role="comment">//&#32;Constants&#32;that&#32;don&apos;t&#32;pollute&#32;global&#32;namespace</emphasis>
1400 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_dc_luminance_nrcodes[]&#32;=&#32;{0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0};
1401 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_dc_luminance_values[]&#32;=&#32;{0,1,2,3,4,5,6,7,8,9,10,11};
1402 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_ac_luminance_nrcodes[]&#32;=&#32;{0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d};
1403 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_ac_luminance_values[]&#32;=&#32;{
1404 &#32;&#32;&#32;&#32;&#32;&#32;0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,
1405 &#32;&#32;&#32;&#32;&#32;&#32;0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,
1406 &#32;&#32;&#32;&#32;&#32;&#32;0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
1407 &#32;&#32;&#32;&#32;&#32;&#32;0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,
1408 &#32;&#32;&#32;&#32;&#32;&#32;0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,
1409 &#32;&#32;&#32;&#32;&#32;&#32;0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,
1410 &#32;&#32;&#32;&#32;&#32;&#32;0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa
1411 &#32;&#32;&#32;};
1412 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_dc_chrominance_nrcodes[]&#32;=&#32;{0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0};
1413 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_dc_chrominance_values[]&#32;=&#32;{0,1,2,3,4,5,6,7,8,9,10,11};
1414 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_ac_chrominance_nrcodes[]&#32;=&#32;{0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77};
1415 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;std_ac_chrominance_values[]&#32;=&#32;{
1416 &#32;&#32;&#32;&#32;&#32;&#32;0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,
1417 &#32;&#32;&#32;&#32;&#32;&#32;0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,
1418 &#32;&#32;&#32;&#32;&#32;&#32;0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,
1419 &#32;&#32;&#32;&#32;&#32;&#32;0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,
1420 &#32;&#32;&#32;&#32;&#32;&#32;0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,
1421 &#32;&#32;&#32;&#32;&#32;&#32;0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,
1422 &#32;&#32;&#32;&#32;&#32;&#32;0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa
1423 &#32;&#32;&#32;};
1424 &#32;&#32;&#32;<emphasis role="comment">//&#32;Huffman&#32;tables</emphasis>
1425 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;YDC_HT[256][2]&#32;=&#32;{&#32;{0,2},{2,3},{3,3},{4,3},{5,3},{6,3},{14,4},{30,5},{62,6},{126,7},{254,8},{510,9}};
1426 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;UVDC_HT[256][2]&#32;=&#32;{&#32;{0,2},{1,2},{2,2},{6,3},{14,4},{30,5},{62,6},{126,7},{254,8},{510,9},{1022,10},{2046,11}};
1427 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;YAC_HT[256][2]&#32;=&#32;{
1428 &#32;&#32;&#32;&#32;&#32;&#32;{10,4},{0,2},{1,2},{4,3},{11,4},{26,5},{120,7},{248,8},{1014,10},{65410,16},{65411,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1429 &#32;&#32;&#32;&#32;&#32;&#32;{12,4},{27,5},{121,7},{502,9},{2038,11},{65412,16},{65413,16},{65414,16},{65415,16},{65416,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1430 &#32;&#32;&#32;&#32;&#32;&#32;{28,5},{249,8},{1015,10},{4084,12},{65417,16},{65418,16},{65419,16},{65420,16},{65421,16},{65422,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1431 &#32;&#32;&#32;&#32;&#32;&#32;{58,6},{503,9},{4085,12},{65423,16},{65424,16},{65425,16},{65426,16},{65427,16},{65428,16},{65429,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1432 &#32;&#32;&#32;&#32;&#32;&#32;{59,6},{1016,10},{65430,16},{65431,16},{65432,16},{65433,16},{65434,16},{65435,16},{65436,16},{65437,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1433 &#32;&#32;&#32;&#32;&#32;&#32;{122,7},{2039,11},{65438,16},{65439,16},{65440,16},{65441,16},{65442,16},{65443,16},{65444,16},{65445,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1434 &#32;&#32;&#32;&#32;&#32;&#32;{123,7},{4086,12},{65446,16},{65447,16},{65448,16},{65449,16},{65450,16},{65451,16},{65452,16},{65453,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1435 &#32;&#32;&#32;&#32;&#32;&#32;{250,8},{4087,12},{65454,16},{65455,16},{65456,16},{65457,16},{65458,16},{65459,16},{65460,16},{65461,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1436 &#32;&#32;&#32;&#32;&#32;&#32;{504,9},{32704,15},{65462,16},{65463,16},{65464,16},{65465,16},{65466,16},{65467,16},{65468,16},{65469,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1437 &#32;&#32;&#32;&#32;&#32;&#32;{505,9},{65470,16},{65471,16},{65472,16},{65473,16},{65474,16},{65475,16},{65476,16},{65477,16},{65478,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1438 &#32;&#32;&#32;&#32;&#32;&#32;{506,9},{65479,16},{65480,16},{65481,16},{65482,16},{65483,16},{65484,16},{65485,16},{65486,16},{65487,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1439 &#32;&#32;&#32;&#32;&#32;&#32;{1017,10},{65488,16},{65489,16},{65490,16},{65491,16},{65492,16},{65493,16},{65494,16},{65495,16},{65496,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1440 &#32;&#32;&#32;&#32;&#32;&#32;{1018,10},{65497,16},{65498,16},{65499,16},{65500,16},{65501,16},{65502,16},{65503,16},{65504,16},{65505,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1441 &#32;&#32;&#32;&#32;&#32;&#32;{2040,11},{65506,16},{65507,16},{65508,16},{65509,16},{65510,16},{65511,16},{65512,16},{65513,16},{65514,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1442 &#32;&#32;&#32;&#32;&#32;&#32;{65515,16},{65516,16},{65517,16},{65518,16},{65519,16},{65520,16},{65521,16},{65522,16},{65523,16},{65524,16},{0,0},{0,0},{0,0},{0,0},{0,0},
1443 &#32;&#32;&#32;&#32;&#32;&#32;{2041,11},{65525,16},{65526,16},{65527,16},{65528,16},{65529,16},{65530,16},{65531,16},{65532,16},{65533,16},{65534,16},{0,0},{0,0},{0,0},{0,0},{0,0}
1444 &#32;&#32;&#32;};
1445 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;UVAC_HT[256][2]&#32;=&#32;{
1446 &#32;&#32;&#32;&#32;&#32;&#32;{0,2},{1,2},{4,3},{10,4},{24,5},{25,5},{56,6},{120,7},{500,9},{1014,10},{4084,12},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1447 &#32;&#32;&#32;&#32;&#32;&#32;{11,4},{57,6},{246,8},{501,9},{2038,11},{4085,12},{65416,16},{65417,16},{65418,16},{65419,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1448 &#32;&#32;&#32;&#32;&#32;&#32;{26,5},{247,8},{1015,10},{4086,12},{32706,15},{65420,16},{65421,16},{65422,16},{65423,16},{65424,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1449 &#32;&#32;&#32;&#32;&#32;&#32;{27,5},{248,8},{1016,10},{4087,12},{65425,16},{65426,16},{65427,16},{65428,16},{65429,16},{65430,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1450 &#32;&#32;&#32;&#32;&#32;&#32;{58,6},{502,9},{65431,16},{65432,16},{65433,16},{65434,16},{65435,16},{65436,16},{65437,16},{65438,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1451 &#32;&#32;&#32;&#32;&#32;&#32;{59,6},{1017,10},{65439,16},{65440,16},{65441,16},{65442,16},{65443,16},{65444,16},{65445,16},{65446,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1452 &#32;&#32;&#32;&#32;&#32;&#32;{121,7},{2039,11},{65447,16},{65448,16},{65449,16},{65450,16},{65451,16},{65452,16},{65453,16},{65454,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1453 &#32;&#32;&#32;&#32;&#32;&#32;{122,7},{2040,11},{65455,16},{65456,16},{65457,16},{65458,16},{65459,16},{65460,16},{65461,16},{65462,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1454 &#32;&#32;&#32;&#32;&#32;&#32;{249,8},{65463,16},{65464,16},{65465,16},{65466,16},{65467,16},{65468,16},{65469,16},{65470,16},{65471,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1455 &#32;&#32;&#32;&#32;&#32;&#32;{503,9},{65472,16},{65473,16},{65474,16},{65475,16},{65476,16},{65477,16},{65478,16},{65479,16},{65480,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1456 &#32;&#32;&#32;&#32;&#32;&#32;{504,9},{65481,16},{65482,16},{65483,16},{65484,16},{65485,16},{65486,16},{65487,16},{65488,16},{65489,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1457 &#32;&#32;&#32;&#32;&#32;&#32;{505,9},{65490,16},{65491,16},{65492,16},{65493,16},{65494,16},{65495,16},{65496,16},{65497,16},{65498,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1458 &#32;&#32;&#32;&#32;&#32;&#32;{506,9},{65499,16},{65500,16},{65501,16},{65502,16},{65503,16},{65504,16},{65505,16},{65506,16},{65507,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1459 &#32;&#32;&#32;&#32;&#32;&#32;{2041,11},{65508,16},{65509,16},{65510,16},{65511,16},{65512,16},{65513,16},{65514,16},{65515,16},{65516,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
1460 &#32;&#32;&#32;&#32;&#32;&#32;{16352,14},{65517,16},{65518,16},{65519,16},{65520,16},{65521,16},{65522,16},{65523,16},{65524,16},{65525,16},{0,0},{0,0},{0,0},{0,0},{0,0},
1461 &#32;&#32;&#32;&#32;&#32;&#32;{1018,10},{32707,15},{65526,16},{65527,16},{65528,16},{65529,16},{65530,16},{65531,16},{65532,16},{65533,16},{65534,16},{0,0},{0,0},{0,0},{0,0},{0,0}
1462 &#32;&#32;&#32;};
1463 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;YQT[]&#32;=&#32;{16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,
1464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99};
1465 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;UVQT[]&#32;=&#32;{17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,
1466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99};
1467 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;aasf[]&#32;=&#32;{&#32;1.0f&#32;*&#32;2.828427125f,&#32;1.387039845f&#32;*&#32;2.828427125f,&#32;1.306562965f&#32;*&#32;2.828427125f,&#32;1.175875602f&#32;*&#32;2.828427125f,
1468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.0f&#32;*&#32;2.828427125f,&#32;0.785694958f&#32;*&#32;2.828427125f,&#32;0.541196100f&#32;*&#32;2.828427125f,&#32;0.275899379f&#32;*&#32;2.828427125f&#32;};
1469 
1470 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>,&#32;col,&#32;i,&#32;k,&#32;subsample;
1471 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fdtbl_Y[64],&#32;fdtbl_UV[64];
1472 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;YTable[64],&#32;UVTable[64];
1473 
1474 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;||&#32;!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;||&#32;!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;||&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&gt;&#32;4&#32;||&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&lt;&#32;1)&#32;{
1475 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1476 &#32;&#32;&#32;}
1477 
1478 &#32;&#32;&#32;quality&#32;=&#32;quality&#32;?&#32;quality&#32;:&#32;90;
1479 &#32;&#32;&#32;subsample&#32;=&#32;quality&#32;&lt;=&#32;90&#32;?&#32;1&#32;:&#32;0;
1480 &#32;&#32;&#32;quality&#32;=&#32;quality&#32;&lt;&#32;1&#32;?&#32;1&#32;:&#32;quality&#32;&gt;&#32;100&#32;?&#32;100&#32;:&#32;quality;
1481 &#32;&#32;&#32;quality&#32;=&#32;quality&#32;&lt;&#32;50&#32;?&#32;5000&#32;/&#32;quality&#32;:&#32;200&#32;-&#32;quality&#32;*&#32;2;
1482 
1483 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;64;&#32;++i)&#32;{
1484 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;uvti,&#32;yti&#32;=&#32;(YQT[i]*quality+50)/100;
1485 &#32;&#32;&#32;&#32;&#32;&#32;YTable[stbiw__jpg_ZigZag[i]]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(yti&#32;&lt;&#32;1&#32;?&#32;1&#32;:&#32;yti&#32;&gt;&#32;255&#32;?&#32;255&#32;:&#32;yti);
1486 &#32;&#32;&#32;&#32;&#32;&#32;uvti&#32;=&#32;(UVQT[i]*quality+50)/100;
1487 &#32;&#32;&#32;&#32;&#32;&#32;UVTable[stbiw__jpg_ZigZag[i]]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(uvti&#32;&lt;&#32;1&#32;?&#32;1&#32;:&#32;uvti&#32;&gt;&#32;255&#32;?&#32;255&#32;:&#32;uvti);
1488 &#32;&#32;&#32;}
1489 
1490 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(row&#32;=&#32;0,&#32;k&#32;=&#32;0;&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;&lt;&#32;8;&#32;++<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>)&#32;{
1491 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(col&#32;=&#32;0;&#32;col&#32;&lt;&#32;8;&#32;++col,&#32;++k)&#32;{
1492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fdtbl_Y[k]&#32;&#32;=&#32;1&#32;/&#32;(YTable&#32;[stbiw__jpg_ZigZag[k]]&#32;*&#32;aasf[<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>]&#32;*&#32;aasf[col]);
1493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fdtbl_UV[k]&#32;=&#32;1&#32;/&#32;(UVTable[stbiw__jpg_ZigZag[k]]&#32;*&#32;aasf[<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>]&#32;*&#32;aasf[col]);
1494 &#32;&#32;&#32;&#32;&#32;&#32;}
1495 &#32;&#32;&#32;}
1496 
1497 &#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;Headers</emphasis>
1498 &#32;&#32;&#32;{
1499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;head0[]&#32;=&#32;{&#32;0xFF,0xD8,0xFF,0xE0,0,0x10,<emphasis role="charliteral">&apos;J&apos;</emphasis>,<emphasis role="charliteral">&apos;F&apos;</emphasis>,<emphasis role="charliteral">&apos;I&apos;</emphasis>,<emphasis role="charliteral">&apos;F&apos;</emphasis>,0,1,1,0,0,1,0,1,0,0,0xFF,0xDB,0,0x84,0&#32;};
1500 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;head2[]&#32;=&#32;{&#32;0xFF,0xDA,0,0xC,3,1,0,2,0x11,3,0x11,0,0x3F,0&#32;};
1501 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;head1[]&#32;=&#32;{&#32;0xFF,0xC0,0,0x11,8,(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&gt;&gt;8),STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>),(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&gt;&gt;8),STBIW_UCHAR(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>),
1502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3,1,(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)(subsample?0x22:0x11),0,2,0x11,1,3,0x11,1,0xFF,0xC4,0x01,0xA2,0&#32;};
1503 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)head0,&#32;<emphasis role="keyword">sizeof</emphasis>(head0));
1504 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)YTable,&#32;<emphasis role="keyword">sizeof</emphasis>(YTable));
1505 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__putc(s,&#32;1);
1506 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;UVTable,&#32;<emphasis role="keyword">sizeof</emphasis>(UVTable));
1507 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)head1,&#32;<emphasis role="keyword">sizeof</emphasis>(head1));
1508 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)(std_dc_luminance_nrcodes+1),&#32;<emphasis role="keyword">sizeof</emphasis>(std_dc_luminance_nrcodes)-1);
1509 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)std_dc_luminance_values,&#32;<emphasis role="keyword">sizeof</emphasis>(std_dc_luminance_values));
1510 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__putc(s,&#32;0x10);&#32;<emphasis role="comment">//&#32;HTYACinfo</emphasis>
1511 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)(std_ac_luminance_nrcodes+1),&#32;<emphasis role="keyword">sizeof</emphasis>(std_ac_luminance_nrcodes)-1);
1512 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)std_ac_luminance_values,&#32;<emphasis role="keyword">sizeof</emphasis>(std_ac_luminance_values));
1513 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__putc(s,&#32;1);&#32;<emphasis role="comment">//&#32;HTUDCinfo</emphasis>
1514 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)(std_dc_chrominance_nrcodes+1),&#32;<emphasis role="keyword">sizeof</emphasis>(std_dc_chrominance_nrcodes)-1);
1515 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)std_dc_chrominance_values,&#32;<emphasis role="keyword">sizeof</emphasis>(std_dc_chrominance_values));
1516 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__putc(s,&#32;0x11);&#32;<emphasis role="comment">//&#32;HTUACinfo</emphasis>
1517 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)(std_ac_chrominance_nrcodes+1),&#32;<emphasis role="keyword">sizeof</emphasis>(std_ac_chrominance_nrcodes)-1);
1518 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)std_ac_chrominance_values,&#32;<emphasis role="keyword">sizeof</emphasis>(std_ac_chrominance_values));
1519 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;func(s-&gt;context,&#32;(<emphasis role="keywordtype">void</emphasis>*)head2,&#32;<emphasis role="keyword">sizeof</emphasis>(head2));
1520 &#32;&#32;&#32;}
1521 
1522 &#32;&#32;&#32;<emphasis role="comment">//&#32;Encode&#32;8x8&#32;macroblocks</emphasis>
1523 &#32;&#32;&#32;{
1524 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;fillBits[]&#32;=&#32;{0x7F,&#32;7};
1525 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;DCY=0,&#32;DCU=0,&#32;DCV=0;
1526 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitBuf=0,&#32;bitCnt=0;
1527 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;comp&#32;==&#32;2&#32;is&#32;grey+alpha&#32;(alpha&#32;is&#32;ignored)</emphasis>
1528 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ofsG&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&gt;&#32;2&#32;?&#32;1&#32;:&#32;0,&#32;ofsB&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&gt;&#32;2&#32;?&#32;2&#32;:&#32;0;
1529 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dataR&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1530 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dataG&#32;=&#32;dataR&#32;+&#32;ofsG;
1531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dataB&#32;=&#32;dataR&#32;+&#32;ofsB;
1532 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;pos;
1533 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(subsample)&#32;{
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;16)&#32;{
1535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;16)&#32;{
1536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>[256],&#32;U[256],&#32;V[256];
1537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(row&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;pos&#32;=&#32;0;&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>+16;&#32;++<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>)&#32;{
1538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;row&#32;&gt;=&#32;height&#32;=&gt;&#32;use&#32;last&#32;input&#32;row</emphasis>
1539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;clamped_row&#32;=&#32;(<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)&#32;?&#32;row&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;-&#32;1;
1540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;base_p&#32;=&#32;(stbi__flip_vertically_on_write&#32;?&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>-1-clamped_row)&#32;:&#32;clamped_row)*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(col&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;col&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+16;&#32;++col,&#32;++pos)&#32;{
1542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;col&#32;&gt;=&#32;width&#32;=&gt;&#32;use&#32;pixel&#32;from&#32;last&#32;input&#32;column</emphasis>
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;base_p&#32;+&#32;((col&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;?&#32;col&#32;:&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>-1))*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;dataR[p],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;dataG[p],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;dataB[p];
1545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>[pos]=&#32;+0.29900f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;+&#32;0.58700f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;0.11400f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;128;
1546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U[pos]=&#32;-0.16874f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;0.33126f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;0.50000f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;V[pos]=&#32;+0.50000f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;0.41869f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;-&#32;0.08131f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCY&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>+0,&#32;&#32;&#32;16,&#32;fdtbl_Y,&#32;DCY,&#32;YDC_HT,&#32;YAC_HT);
1551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCY&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>+8,&#32;&#32;&#32;16,&#32;fdtbl_Y,&#32;DCY,&#32;YDC_HT,&#32;YAC_HT);
1552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCY&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>+128,&#32;16,&#32;fdtbl_Y,&#32;DCY,&#32;YDC_HT,&#32;YAC_HT);
1553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCY&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>+136,&#32;16,&#32;fdtbl_Y,&#32;DCY,&#32;YDC_HT,&#32;YAC_HT);
1554 
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;subsample&#32;U,V</emphasis>
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;subU[64],&#32;subV[64];
1558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespaceglm_1a055d351d6ac0244db35245ad1228e8d3">yy</link>,&#32;<link linkend="_namespaceglm_1acdf40cc185659932dfa4d7c9cb0f1771">xx</link>;
1559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(yy&#32;=&#32;0,&#32;pos&#32;=&#32;0;&#32;<link linkend="_namespaceglm_1a055d351d6ac0244db35245ad1228e8d3">yy</link>&#32;&lt;&#32;8;&#32;++<link linkend="_namespaceglm_1a055d351d6ac0244db35245ad1228e8d3">yy</link>)&#32;{
1560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(xx&#32;=&#32;0;&#32;<link linkend="_namespaceglm_1acdf40cc185659932dfa4d7c9cb0f1771">xx</link>&#32;&lt;&#32;8;&#32;++<link linkend="_namespaceglm_1acdf40cc185659932dfa4d7c9cb0f1771">xx</link>,&#32;++pos)&#32;{
1561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;<link linkend="_namespaceglm_1a055d351d6ac0244db35245ad1228e8d3">yy</link>*32+<link linkend="_namespaceglm_1acdf40cc185659932dfa4d7c9cb0f1771">xx</link>*2;
1562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subU[pos]&#32;=&#32;(U[j+0]&#32;+&#32;U[j+1]&#32;+&#32;U[j+16]&#32;+&#32;U[j+17])&#32;*&#32;0.25f;
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subV[pos]&#32;=&#32;(V[j+0]&#32;+&#32;V[j+1]&#32;+&#32;V[j+16]&#32;+&#32;V[j+17])&#32;*&#32;0.25f;
1564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCU&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;subU,&#32;8,&#32;fdtbl_UV,&#32;DCU,&#32;UVDC_HT,&#32;UVAC_HT);
1567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCV&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;subV,&#32;8,&#32;fdtbl_UV,&#32;DCV,&#32;UVDC_HT,&#32;UVAC_HT);
1568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1571 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+=&#32;8)&#32;{
1573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+=&#32;8)&#32;{
1574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>[64],&#32;U[64],&#32;V[64];
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(row&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;pos&#32;=&#32;0;&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>+8;&#32;++<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>)&#32;{
1576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;row&#32;&gt;=&#32;height&#32;=&gt;&#32;use&#32;last&#32;input&#32;row</emphasis>
1577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;clamped_row&#32;=&#32;(<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)&#32;?&#32;row&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;-&#32;1;
1578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;base_p&#32;=&#32;(stbi__flip_vertically_on_write&#32;?&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>-1-clamped_row)&#32;:&#32;clamped_row)*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(col&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;col&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+8;&#32;++col,&#32;++pos)&#32;{
1580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;col&#32;&gt;=&#32;width&#32;=&gt;&#32;use&#32;pixel&#32;from&#32;last&#32;input&#32;column</emphasis>
1581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;base_p&#32;+&#32;((col&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;?&#32;col&#32;:&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>-1))*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;dataR[p],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;dataG[p],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;dataB[p];
1583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>[pos]=&#32;+0.29900f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;+&#32;0.58700f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;0.11400f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;128;
1584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U[pos]=&#32;-0.16874f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;0.33126f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;+&#32;0.50000f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;V[pos]=&#32;+0.50000f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;-&#32;0.41869f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;-&#32;0.08131f*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1588 
1589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCY&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294a5596231eabd6cf29050967d5ac83ad84">Y</link>,&#32;8,&#32;fdtbl_Y,&#32;&#32;DCY,&#32;YDC_HT,&#32;YAC_HT);
1590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCU&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;U,&#32;8,&#32;fdtbl_UV,&#32;DCU,&#32;UVDC_HT,&#32;UVAC_HT);
1591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DCV&#32;=&#32;stbiw__jpg_processDU(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;V,&#32;8,&#32;fdtbl_UV,&#32;DCV,&#32;UVDC_HT,&#32;UVAC_HT);
1592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1594 &#32;&#32;&#32;&#32;&#32;&#32;}
1595 
1596 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;the&#32;bit&#32;alignment&#32;of&#32;the&#32;EOI&#32;marker</emphasis>
1597 &#32;&#32;&#32;&#32;&#32;&#32;stbiw__jpg_writeBits(s,&#32;&amp;bitBuf,&#32;&amp;bitCnt,&#32;fillBits);
1598 &#32;&#32;&#32;}
1599 
1600 &#32;&#32;&#32;<emphasis role="comment">//&#32;EOI</emphasis>
1601 &#32;&#32;&#32;stbiw__putc(s,&#32;0xFF);
1602 &#32;&#32;&#32;stbiw__putc(s,&#32;0xD9);
1603 
1604 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1605 }
1606 
1607 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1afbe60a9afbcbd6d54f98f72afd46a676">stbi_write_jpg_to_func</link>(<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a2326fd2fd79095b9ef34695a0bda114f">stbi_write_func</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*context,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
1608 {
1609 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
1610 &#32;&#32;&#32;stbi__start_write_callbacks(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>,&#32;context);
1611 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_write_jpg_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;quality);
1612 }
1613 
1614 
1615 <emphasis role="preprocessor">#ifndef&#32;STBI_WRITE_NO_STDIO</emphasis>
1616 <link linkend="__classes_2lib_2external_2stb__image__write_8h_1a1d964457ebf7cc898b8cb14e66cbfaa8">STBIWDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image__write_8h_1a41048e8f918179d2788284ef9cc2590c">stbi_write_jpg</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
1617 {
1618 &#32;&#32;&#32;stbi__write_context&#32;s&#32;=&#32;{&#32;0&#32;};
1619 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__start_write_file(&amp;s,<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>))&#32;{
1620 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi_write_jpg_core(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;quality);
1621 &#32;&#32;&#32;&#32;&#32;&#32;stbi__end_write_file(&amp;s);
1622 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
1623 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1624 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1625 }
1626 <emphasis role="preprocessor">#endif</emphasis>
1627 
1628 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STB_IMAGE_WRITE_IMPLEMENTATION</emphasis>
1629 
1630 <emphasis role="comment">/*&#32;Revision&#32;history</emphasis>
1631 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.16&#32;&#32;(2021-07-11)</emphasis>
1632 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;Deflate&#32;code&#32;emit&#32;uncompressed&#32;blocks&#32;when&#32;it&#32;would&#32;otherwise&#32;expand</emphasis>
1633 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;support&#32;writing&#32;BMPs&#32;with&#32;alpha&#32;channel</emphasis>
1634 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.15&#32;&#32;(2020-07-13)&#32;unknown</emphasis>
1635 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.14&#32;&#32;(2020-02-02)&#32;updated&#32;JPEG&#32;writer&#32;to&#32;downsample&#32;chroma&#32;channels</emphasis>
1636 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.13</emphasis>
1637 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.12</emphasis>
1638 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.11&#32;&#32;(2019-08-11)</emphasis>
1639 <emphasis role="comment"></emphasis>
1640 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.10&#32;&#32;(2019-02-07)</emphasis>
1641 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;support&#32;utf8&#32;filenames&#32;in&#32;Windows;&#32;fix&#32;warnings&#32;and&#32;platform&#32;ifdefs</emphasis>
1642 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.09&#32;&#32;(2018-02-11)</emphasis>
1643 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;typo&#32;in&#32;zlib&#32;quality&#32;API,&#32;improve&#32;STB_I_W_STATIC&#32;in&#32;C++</emphasis>
1644 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.08&#32;&#32;(2018-01-29)</emphasis>
1645 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;add&#32;stbi__flip_vertically_on_write,&#32;external&#32;zlib,&#32;zlib&#32;quality,&#32;choose&#32;PNG&#32;filter</emphasis>
1646 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.07&#32;&#32;(2017-07-24)</emphasis>
1647 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doc&#32;fix</emphasis>
1648 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.06&#32;(2017-07-23)</emphasis>
1649 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;writing&#32;JPEG&#32;(using&#32;Jon&#32;Olick&apos;s&#32;code)</emphasis>
1650 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.05&#32;&#32;&#32;???</emphasis>
1651 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.04&#32;(2017-03-03)</emphasis>
1652 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monochrome&#32;BMP&#32;expansion</emphasis>
1653 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.03&#32;&#32;&#32;???</emphasis>
1654 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.02&#32;(2016-04-02)</emphasis>
1655 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avoid&#32;allocating&#32;large&#32;structures&#32;on&#32;the&#32;stack</emphasis>
1656 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.01&#32;(2016-01-16)</emphasis>
1657 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBIW_REALLOC_SIZED:&#32;support&#32;allocators&#32;with&#32;no&#32;realloc&#32;support</emphasis>
1658 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avoid&#32;race-condition&#32;in&#32;crc&#32;initialization</emphasis>
1659 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minor&#32;compile&#32;issues</emphasis>
1660 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.00&#32;(2015-09-14)</emphasis>
1661 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;installable&#32;file&#32;IO&#32;function</emphasis>
1662 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.99&#32;(2015-09-13)</emphasis>
1663 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;fixes;&#32;TGA&#32;rle&#32;support</emphasis>
1664 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.98&#32;(2015-04-08)</emphasis>
1665 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;added&#32;STBIW_MALLOC,&#32;STBIW_ASSERT&#32;etc</emphasis>
1666 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.97&#32;(2015-01-18)</emphasis>
1667 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;HDR&#32;asserts,&#32;rewrote&#32;HDR&#32;rle&#32;logic</emphasis>
1668 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.96&#32;(2015-01-17)</emphasis>
1669 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;add&#32;HDR&#32;output</emphasis>
1670 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;monochrome&#32;BMP</emphasis>
1671 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.95&#32;(2014-08-17)</emphasis>
1672 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;add&#32;monochrome&#32;TGA&#32;output</emphasis>
1673 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.94&#32;(2014-05-31)</emphasis>
1674 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rename&#32;private&#32;functions&#32;to&#32;avoid&#32;conflicts&#32;with&#32;stb_image.h</emphasis>
1675 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.93&#32;(2014-05-27)</emphasis>
1676 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;fixes</emphasis>
1677 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.92&#32;(2010-08-01)</emphasis>
1678 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;casts&#32;to&#32;unsigned&#32;char&#32;to&#32;fix&#32;warnings</emphasis>
1679 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.91&#32;(2010-07-17)</emphasis>
1680 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;first&#32;public&#32;release</emphasis>
1681 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.90&#32;&#32;&#32;first&#32;internal&#32;release</emphasis>
1682 <emphasis role="comment">*/</emphasis>
1683 
1684 <emphasis role="comment">/*</emphasis>
1685 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
1686 <emphasis role="comment">This&#32;software&#32;is&#32;available&#32;under&#32;2&#32;licenses&#32;--&#32;choose&#32;whichever&#32;you&#32;prefer.</emphasis>
1687 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
1688 <emphasis role="comment">ALTERNATIVE&#32;A&#32;-&#32;MIT&#32;License</emphasis>
1689 <emphasis role="comment">Copyright&#32;(c)&#32;2017&#32;Sean&#32;Barrett</emphasis>
1690 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
1691 <emphasis role="comment">this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
1692 <emphasis role="comment">the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
1693 <emphasis role="comment">use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies</emphasis>
1694 <emphasis role="comment">of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do</emphasis>
1695 <emphasis role="comment">so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
1696 <emphasis role="comment">The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
1697 <emphasis role="comment">copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
1698 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
1699 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
1700 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
1701 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
1702 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
1703 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
1704 <emphasis role="comment">SOFTWARE.</emphasis>
1705 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
1706 <emphasis role="comment">ALTERNATIVE&#32;B&#32;-&#32;Public&#32;Domain&#32;(www.unlicense.org)</emphasis>
1707 <emphasis role="comment">This&#32;is&#32;free&#32;and&#32;unencumbered&#32;software&#32;released&#32;into&#32;the&#32;public&#32;domain.</emphasis>
1708 <emphasis role="comment">Anyone&#32;is&#32;free&#32;to&#32;copy,&#32;modify,&#32;publish,&#32;use,&#32;compile,&#32;sell,&#32;or&#32;distribute&#32;this</emphasis>
1709 <emphasis role="comment">software,&#32;either&#32;in&#32;source&#32;code&#32;form&#32;or&#32;as&#32;a&#32;compiled&#32;binary,&#32;for&#32;any&#32;purpose,</emphasis>
1710 <emphasis role="comment">commercial&#32;or&#32;non-commercial,&#32;and&#32;by&#32;any&#32;means.</emphasis>
1711 <emphasis role="comment">In&#32;jurisdictions&#32;that&#32;recognize&#32;copyright&#32;laws,&#32;the&#32;author&#32;or&#32;authors&#32;of&#32;this</emphasis>
1712 <emphasis role="comment">software&#32;dedicate&#32;any&#32;and&#32;all&#32;copyright&#32;interest&#32;in&#32;the&#32;software&#32;to&#32;the&#32;public</emphasis>
1713 <emphasis role="comment">domain.&#32;We&#32;make&#32;this&#32;dedication&#32;for&#32;the&#32;benefit&#32;of&#32;the&#32;public&#32;at&#32;large&#32;and&#32;to</emphasis>
1714 <emphasis role="comment">the&#32;detriment&#32;of&#32;our&#32;heirs&#32;and&#32;successors.&#32;We&#32;intend&#32;this&#32;dedication&#32;to&#32;be&#32;an</emphasis>
1715 <emphasis role="comment">overt&#32;act&#32;of&#32;relinquishment&#32;in&#32;perpetuity&#32;of&#32;all&#32;present&#32;and&#32;future&#32;rights&#32;to</emphasis>
1716 <emphasis role="comment">this&#32;software&#32;under&#32;copyright&#32;law.</emphasis>
1717 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
1718 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
1719 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
1720 <emphasis role="comment">AUTHORS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN</emphasis>
1721 <emphasis role="comment">ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION</emphasis>
1722 <emphasis role="comment">WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
1723 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
1724 <emphasis role="comment">*/</emphasis>
</programlisting></section>
